

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 13 01:02:46 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=4,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=4,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=4,class=CODE,delta=1
   180                           	psect	text155,global,reloc=4,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=4,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=4,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=4,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=4,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=4,class=CODE,delta=1
   195                           	psect	text170,global,reloc=4,class=CODE,delta=1
   196                           	psect	text171,global,reloc=4,class=CODE,delta=1
   197                           	psect	text172,global,reloc=4,class=CODE,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text173,global,reloc=4,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 2.10
   205                           ; Generated 31/07/2019 GMT
   206                           ; 
   207                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18F57K42 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239 ;;_k	offset	0
   240 ;;_j	offset	1
   241 ;;_i	offset	2
   242 ;;_inp_index	offset	3
   243 ;;_mode	offset	4
   244 ;;_i_ror	offset	5
   245 ;;_s	offset=-2 (param)
   246 ;;_c	offset	0
   247 ;;_shape	offset=-1 (param)
   248 ;;_reset	offset=-2 (param)
   249 ;;_cmd	offset=-1 (param)
   250 ;;_cmd	offset=-1 (param)
   251 ;;_data	offset=-1 (param)
   252 ;;__this	offset=-2 (param)
   253 ;;_cvoltage	offset=-4 (param)
   254 ;;_h	offset=-1 (param)
   255 ;;_h	offset=-1 (param)
   256 ;;_i	offset=-1 (param)
   257 ;;_channel	offset=-1 (param)
   258 ;;_mode	offset=-1 (param)
   259 ;;_mode	offset=-1 (param)
   260 ;;_cmd	offset=-1 (param)
   261 ;;_i	offset	0
   262 ;;_h	offset=-1 (param)
   263 ;;_flipper	offset=-1 (param)
   264 ;;_f	offset	0
   265 ;;_ap	offset	6
   266 ;;_s	offset=-3 (param)
   267 ;;_fmt	offset=-5 (param)
   268 ;;_line	offset=-1 (param)
   269 ;;_vterm	offset=-2 (param)
   270 ;;_numMilliseconds	offset=-2 (param)
   271 ;;_vterm	offset=-1 (param)
   272 ;;_r	offset=-1 (param)
   273 ;;_c	offset=-2 (param)
   274 ;;_strPtr	offset=-4 (param)
   275 ;;_strPtr	offset=-1 (param)
   276 ;;_delay	offset=-4 (param)
   277 ;;_strPtr	offset=-2 (param)
   278 ;;__this	offset=-2 (param)
   279 ;;_clearBuffer	offset=-3 (param)
   280 ;;_s	offset	0
   281 ;;_k	offset	2
   282 ;;_dest	offset=-2 (param)
   283 ;;_c	offset=-4 (param)
   284 ;;_n	offset=-6 (param)
   285 ;;_ap	offset	0
   286 ;;_fmt	offset=-3 (param)
   287 ;;_cfmt	offset	0
   288 ;;_fp	offset=-2 (param)
   289 ;;_fmt	offset=-4 (param)
   290 ;;_ap	offset=-6 (param)
   291 ;;_vfpfcnvrt$5353	offset	0
   292 ;;_vfpfcnvrt$5364	offset	2
   293 ;;_vfpfcnvrt$5352	offset	4
   294 ;;_llu	offset	6
   295 ;;_ll	offset	14
   296 ;;_f	offset	22
   297 ;;_ct	offset	26
   298 ;;_cp	offset	29
   299 ;;_c	offset	31
   300 ;;_fp	offset=-2 (param)
   301 ;;_fmt	offset=-4 (param)
   302 ;;_ap	offset=-6 (param)
   303 ;;_xtoa$5338	offset	0
   304 ;;_xtoa$5337	offset	2
   305 ;;_n	offset	4
   306 ;;_c	offset	12
   307 ;;_i	offset	14
   308 ;;_w	offset	16
   309 ;;_p	offset	18
   310 ;;_fp	offset=-2 (param)
   311 ;;_d	offset=-10 (param)
   312 ;;_x	offset=-11 (param)
   313 ;;_toupper$6144	offset	0
   314 ;;_c	offset=-2 (param)
   315 ;;_c	offset=-2 (param)
   316 ;;_c	offset=-2 (param)
   317 ;;_n	offset	0
   318 ;;_i	offset	8
   319 ;;_w	offset	10
   320 ;;_p	offset	12
   321 ;;_fp	offset=-2 (param)
   322 ;;_d	offset=-10 (param)
   323 ;;_counter	offset	0
   324 ;;_dividend	offset=-8 (param)
   325 ;;_divisor	offset=-16 (param)
   326 ;;_quotient	offset	0
   327 ;;_counter	offset	8
   328 ;;_dividend	offset=-8 (param)
   329 ;;_divisor	offset=-16 (param)
   330 ;;_r	offset	0
   331 ;;_l	offset	2
   332 ;;__l	offset=-2 (param)
   333 ;;__r	offset=-4 (param)
   334 ;;_n	offset=-6 (param)
   335 ;;_nuls	offset	0
   336 ;;_l	offset	7
   337 ;;_p	offset	9
   338 ;;_cp	offset	11
   339 ;;_w	offset	13
   340 ;;_i	offset	15
   341 ;;_fp	offset=-2 (param)
   342 ;;_s	offset=-4 (param)
   343 ;;_efgtoa$5310	offset	0
   344 ;;_efgtoa$5309	offset	2
   345 ;;_efgtoa$5308	offset	4
   346 ;;_efgtoa$5304	offset	6
   347 ;;_efgtoa$5300	offset	8
   348 ;;_efgtoa$5299	offset	10
   349 ;;_u	offset	12
   350 ;;_g	offset	16
   351 ;;_l	offset	20
   352 ;;_h	offset	24
   353 ;;_ou	offset	28
   354 ;;_n	offset	32
   355 ;;_e	offset	34
   356 ;;_i	offset	36
   357 ;;_w	offset	38
   358 ;;_p	offset	40
   359 ;;_sign	offset	42
   360 ;;_d	offset	44
   361 ;;_ne	offset	46
   362 ;;_m	offset	48
   363 ;;_pp	offset	50
   364 ;;_t	offset	52
   365 ;;_mode	offset	54
   366 ;;_nmode	offset	55
   367 ;;_fp	offset=-2 (param)
   368 ;;_f	offset=-6 (param)
   369 ;;_c	offset=-7 (param)
   370 ;;_tolower$6129	offset	0
   371 ;;_c	offset=-2 (param)
   372 ;;_c	offset=-2 (param)
   373 ;;_d	offset	0
   374 ;;_s	offset	2
   375 ;;_dest	offset=-2 (param)
   376 ;;_src	offset=-4 (param)
   377 ;;_u	offset	0
   378 ;;_m	offset	4
   379 ;;_e	offset	8
   380 ;;_x	offset=-4 (param)
   381 ;;_u	offset	0
   382 ;;_e	offset	4
   383 ;;_x	offset=-4 (param)
   384 ;;_exp1	offset	0
   385 ;;_sign1	offset	1
   386 ;;_f1	offset=-4 (param)
   387 ;;_f1	offset=-4 (param)
   388 ;;_ff1	offset=-4 (param)
   389 ;;_ff2	offset=-8 (param)
   390 ;;_sign	offset	0
   391 ;;_counter	offset	1
   392 ;;_dividend	offset=-2 (param)
   393 ;;_divisor	offset=-4 (param)
   394 ;;_quotient	offset	0
   395 ;;_sign	offset	2
   396 ;;_counter	offset	3
   397 ;;_dividend	offset=-2 (param)
   398 ;;_divisor	offset=-4 (param)
   399 ;;_dtoa$5276	offset	0
   400 ;;_n	offset	2
   401 ;;_i	offset	10
   402 ;;_s	offset	12
   403 ;;_w	offset	14
   404 ;;_p	offset	16
   405 ;;_fp	offset=-2 (param)
   406 ;;_d	offset=-10 (param)
   407 ;;_a	offset=-2 (param)
   408 ;;_sign	offset	0
   409 ;;_counter	offset	1
   410 ;;_dividend	offset=-8 (param)
   411 ;;_divisor	offset=-16 (param)
   412 ;;_quotient	offset	0
   413 ;;_sign	offset	8
   414 ;;_counter	offset	9
   415 ;;_dividend	offset=-8 (param)
   416 ;;_divisor	offset=-16 (param)
   417 ;;_w	offset	0
   418 ;;_fp	offset=-2 (param)
   419 ;;_c	offset=-3 (param)
   420 ;;_w	offset	0
   421 ;;_i	offset	2
   422 ;;_fp	offset=-2 (param)
   423 ;;_buf	offset=-4 (param)
   424 ;;_p	offset=-6 (param)
   425 ;;_a	offset	0
   426 ;;_s	offset=-2 (param)
   427 ;;_i	offset	0
   428 ;;_c	offset	2
   429 ;;_s	offset=-2 (param)
   430 ;;_fp	offset=-4 (param)
   431 ;;_c	offset=-2 (param)
   432 ;;_fp	offset=-4 (param)
   433 ;;_c	offset=-1 (param)
   434 ;;__this	offset=-2 (param)
   435 ;;_c	offset=-3 (param)
   436 ;;_atoi$5860	offset	0
   437 ;;_atoi$5858	offset	2
   438 ;;_atoi$5859	offset	4
   439 ;;_n	offset	5
   440 ;;_neg	offset	7
   441 ;;_s	offset=-2 (param)
   442 ;;_isspace$5909	offset	0
   443 ;;_c	offset=-2 (param)
   444 ;;_c	offset=-2 (param)
   445 ;;_vterm	offset=-1 (param)
   446 ;;_new_response_info	offset=-1 (param)
   447 ;;_new_response_info	offset=-1 (param)
   448 ;;_level	offset=-2 (param)
   449 ;;_dutyValue	offset=-2 (param)
   450 ;;_timer	offset=-1 (param)
   451 ;;_timer	offset=-1 (param)
   452 ;;_count	offset=-3 (param)
   453 ;;_h	offset=-1 (param)
   454 ;;_u	offset	0
   455 ;;_x	offset=-4 (param)
   456 ;;_chan	offset=-1 (param)
   457 ;;_to_what	offset=-2 (param)
   458 ;;_u	offset	0
   459 ;;_s	offset=-2 (param)
   460 ;;_index	offset=-1 (param)
   461 ;;_arg	offset	0
   462 ;;_exp	offset	4
   463 ;;_sign	offset=-1 (param)
   464 ;;_val	offset=-5 (param)
   465 ;;_grs	offset	0
   466 ;;_rem	offset	4
   467 ;;_new_exp	offset	8
   468 ;;_aexp	offset	10
   469 ;;_bexp	offset	11
   470 ;;_sign	offset	12
   471 ;;_b	offset=-4 (param)
   472 ;;_a	offset=-8 (param)
   473 ;;_ff1	offset=-4 (param)
   474 ;;_ff2	offset=-8 (param)
   475 ;;_lp_speed	offset	0
   476 ;;_new	offset=-4 (param)
   477 ;;_bn	offset=-5 (param)
   478 ;;_slow	offset=-6 (param)
   479 ;;_b	offset=-4 (param)
   480 ;;_a	offset=-8 (param)
   481 ;;_grs	offset	0
   482 ;;_bexp	offset	1
   483 ;;_aexp	offset	2
   484 ;;_signs	offset	3
   485 ;;_b	offset=-4 (param)
   486 ;;_a	offset=-8 (param)
   487 ;;_prod	offset	0
   488 ;;_grs	offset	4
   489 ;;_temp	offset	8
   490 ;;_bexp	offset	10
   491 ;;_aexp	offset	11
   492 ;;_sign	offset	12
   493 ;;_b	offset=-4 (param)
   494 ;;_a	offset=-8 (param)
   495 ;;_InterruptHandler	offset=-3 (param)
   496 ;;_InterruptHandler	offset=-3 (param)
   497 ;;_InterruptHandler	offset=-3 (param)
   498 ;;_InterruptHandler	offset=-3 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_InterruptHandler	offset=-3 (param)
   501 ;;_state	offset	0
   502 ;;_InterruptHandler	offset=-3 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_i	offset	0
   507 ;;_sw_value	offset	1
   508 ;;_timerVal	offset=-2 (param)
   509 ;;_timerVal	offset=-2 (param)
   510 ;;_log_ptr	offset	0
   511 ;;_f	offset	0
   512 ;;_ap	offset	6
   513 ;;_s	offset=-3 (param)
   514 ;;_fmt	offset=-5 (param)
   515 ;;_cfmt	offset	0
   516 ;;_fp	offset=-2 (param)
   517 ;;_fmt	offset=-4 (param)
   518 ;;_ap	offset=-6 (param)
   519 ;;_vfpfcnvrt$5353	offset	0
   520 ;;_vfpfcnvrt$5364	offset	2
   521 ;;_vfpfcnvrt$5352	offset	4
   522 ;;_llu	offset	6
   523 ;;_ll	offset	14
   524 ;;_f	offset	22
   525 ;;_ct	offset	26
   526 ;;_cp	offset	29
   527 ;;_c	offset	31
   528 ;;_fp	offset=-2 (param)
   529 ;;_fmt	offset=-4 (param)
   530 ;;_ap	offset=-6 (param)
   531 ;;_xtoa$5338	offset	0
   532 ;;_xtoa$5337	offset	2
   533 ;;_n	offset	4
   534 ;;_c	offset	12
   535 ;;_i	offset	14
   536 ;;_w	offset	16
   537 ;;_p	offset	18
   538 ;;_fp	offset=-2 (param)
   539 ;;_d	offset=-10 (param)
   540 ;;_x	offset=-11 (param)
   541 ;;_toupper$6144	offset	0
   542 ;;_c	offset=-2 (param)
   543 ;;_c	offset=-2 (param)
   544 ;;_c	offset=-2 (param)
   545 ;;_n	offset	0
   546 ;;_i	offset	8
   547 ;;_w	offset	10
   548 ;;_p	offset	12
   549 ;;_fp	offset=-2 (param)
   550 ;;_d	offset=-10 (param)
   551 ;;_counter	offset	0
   552 ;;_dividend	offset=-8 (param)
   553 ;;_divisor	offset=-16 (param)
   554 ;;_quotient	offset	0
   555 ;;_counter	offset	8
   556 ;;_dividend	offset=-8 (param)
   557 ;;_divisor	offset=-16 (param)
   558 ;;_r	offset	0
   559 ;;_l	offset	2
   560 ;;__l	offset=-2 (param)
   561 ;;__r	offset=-4 (param)
   562 ;;_n	offset=-6 (param)
   563 ;;_nuls	offset	0
   564 ;;_l	offset	7
   565 ;;_p	offset	9
   566 ;;_cp	offset	11
   567 ;;_w	offset	13
   568 ;;_i	offset	15
   569 ;;_fp	offset=-2 (param)
   570 ;;_s	offset=-4 (param)
   571 ;;_efgtoa$5310	offset	0
   572 ;;_efgtoa$5309	offset	2
   573 ;;_efgtoa$5308	offset	4
   574 ;;_efgtoa$5304	offset	6
   575 ;;_efgtoa$5300	offset	8
   576 ;;_efgtoa$5299	offset	10
   577 ;;_u	offset	12
   578 ;;_g	offset	16
   579 ;;_l	offset	20
   580 ;;_h	offset	24
   581 ;;_ou	offset	28
   582 ;;_n	offset	32
   583 ;;_e	offset	34
   584 ;;_i	offset	36
   585 ;;_w	offset	38
   586 ;;_p	offset	40
   587 ;;_sign	offset	42
   588 ;;_d	offset	44
   589 ;;_ne	offset	46
   590 ;;_m	offset	48
   591 ;;_pp	offset	50
   592 ;;_t	offset	52
   593 ;;_mode	offset	54
   594 ;;_nmode	offset	55
   595 ;;_fp	offset=-2 (param)
   596 ;;_f	offset=-6 (param)
   597 ;;_c	offset=-7 (param)
   598 ;;_tolower$6129	offset	0
   599 ;;_c	offset=-2 (param)
   600 ;;_c	offset=-2 (param)
   601 ;;_d	offset	0
   602 ;;_s	offset	2
   603 ;;_dest	offset=-2 (param)
   604 ;;_src	offset=-4 (param)
   605 ;;_u	offset	0
   606 ;;_m	offset	4
   607 ;;_e	offset	8
   608 ;;_x	offset=-4 (param)
   609 ;;_u	offset	0
   610 ;;_e	offset	4
   611 ;;_x	offset=-4 (param)
   612 ;;_exp1	offset	0
   613 ;;_sign1	offset	1
   614 ;;_f1	offset=-4 (param)
   615 ;;_b	offset=-4 (param)
   616 ;;_a	offset=-8 (param)
   617 ;;_grs	offset	0
   618 ;;_bexp	offset	1
   619 ;;_aexp	offset	2
   620 ;;_signs	offset	3
   621 ;;_b	offset=-4 (param)
   622 ;;_a	offset=-8 (param)
   623 ;;_f1	offset=-4 (param)
   624 ;;_prod	offset	0
   625 ;;_grs	offset	4
   626 ;;_temp	offset	8
   627 ;;_bexp	offset	10
   628 ;;_aexp	offset	11
   629 ;;_sign	offset	12
   630 ;;_b	offset=-4 (param)
   631 ;;_a	offset=-8 (param)
   632 ;;_ff1	offset=-4 (param)
   633 ;;_ff2	offset=-8 (param)
   634 ;;_ff1	offset=-4 (param)
   635 ;;_ff2	offset=-8 (param)
   636 ;;_grs	offset	0
   637 ;;_rem	offset	4
   638 ;;_new_exp	offset	8
   639 ;;_aexp	offset	10
   640 ;;_bexp	offset	11
   641 ;;_sign	offset	12
   642 ;;_b	offset=-4 (param)
   643 ;;_a	offset=-8 (param)
   644 ;;_sign	offset	0
   645 ;;_counter	offset	1
   646 ;;_dividend	offset=-2 (param)
   647 ;;_divisor	offset=-4 (param)
   648 ;;_quotient	offset	0
   649 ;;_sign	offset	2
   650 ;;_counter	offset	3
   651 ;;_dividend	offset=-2 (param)
   652 ;;_divisor	offset=-4 (param)
   653 ;;_dtoa$5276	offset	0
   654 ;;_n	offset	2
   655 ;;_i	offset	10
   656 ;;_s	offset	12
   657 ;;_w	offset	14
   658 ;;_p	offset	16
   659 ;;_fp	offset=-2 (param)
   660 ;;_d	offset=-10 (param)
   661 ;;_a	offset=-2 (param)
   662 ;;_sign	offset	0
   663 ;;_counter	offset	1
   664 ;;_dividend	offset=-8 (param)
   665 ;;_divisor	offset=-16 (param)
   666 ;;_quotient	offset	0
   667 ;;_sign	offset	8
   668 ;;_counter	offset	9
   669 ;;_dividend	offset=-8 (param)
   670 ;;_divisor	offset=-16 (param)
   671 ;;_w	offset	0
   672 ;;_fp	offset=-2 (param)
   673 ;;_c	offset=-3 (param)
   674 ;;_w	offset	0
   675 ;;_i	offset	2
   676 ;;_fp	offset=-2 (param)
   677 ;;_buf	offset=-4 (param)
   678 ;;_p	offset=-6 (param)
   679 ;;_a	offset	0
   680 ;;_s	offset=-2 (param)
   681 ;;_i	offset	0
   682 ;;_c	offset	2
   683 ;;_s	offset=-2 (param)
   684 ;;_fp	offset=-4 (param)
   685 ;;_c	offset=-2 (param)
   686 ;;_fp	offset=-4 (param)
   687 ;;_c	offset=-1 (param)
   688 ;;__this	offset=-2 (param)
   689 ;;_c	offset=-3 (param)
   690 ;;_atoi$5860	offset	0
   691 ;;_atoi$5858	offset	2
   692 ;;_atoi$5859	offset	4
   693 ;;_n	offset	5
   694 ;;_neg	offset	7
   695 ;;_s	offset=-2 (param)
   696 ;;_isspace$5909	offset	0
   697 ;;_c	offset=-2 (param)
   698 ;;_c	offset=-2 (param)
   699 ;;_dsize	offset=-2 (param)
   700 ;;_timer	offset=-1 (param)
   701 ;;_count	offset=-3 (param)
   702 ;;_channel	offset=-1 (param)
   703 ;;_i	offset	0
   704                           
   705                           	psect	idataBIGRAM
   706  01744C                     __pidataBIGRAM:
   707                           	opt callstack 0
   708                           
   709                           ;initializer for _port_data
   710  01744C  FF                 	db	255
   711  01744D  00                 	db	0
   712  01744E  FF                 	db	255
   713  01744F  00                 	db	0
   714  017450  FF                 	db	255
   715  017451  00                 	db	0
   716  017452  FF                 	db	255
   717  017453  00                 	db	0
   718  017454  FF                 	db	255
   719  017455  00                 	db	0
   720  017456  FF                 	db	255
   721  017457  00                 	db	0
   722  017458  FF                 	db	255
   723  017459  00                 	db	0
   724  01745A  FF                 	db	255
   725  01745B  00                 	db	0
   726  01745C  00                 	db	0
   727  01745D  00                 	db	0
   728  01745E  00                 	db	0
   729  01745F  00                 	db	0
   730  017460  00                 	db	0
   731  017461  00                 	db	0
   732  017462  00                 	db	0
   733  017463  00                 	db	0
   734  017464  00                 	db	0
   735  017465  00                 	db	0
   736  017466  00                 	db	0
   737  017467  00                 	db	0
   738  017468  00                 	db	0
   739  017469  00                 	db	0
   740  01746A  00                 	db	0
   741  01746B  00                 	db	0
   742  01746C  00                 	db	0
   743  01746D  00                 	db	0
   744  01746E  00                 	db	0
   745  01746F  00                 	db	0
   746  017470  00                 	db	0
   747  017471  00                 	db	0
   748  017472  00                 	db	0
   749  017473  00                 	db	0
   750  017474  00                 	db	0
   751  017475  00                 	db	0
   752  017476  00                 	db	0
   753  017477  00                 	db	0
   754  017478  00                 	db	0
   755  017479  00                 	db	0
   756  01747A  00                 	db	0
   757  01747B  00                 	db	0
   758  01747C  00                 	db	0
   759  01747D  00                 	db	0
   760  01747E  00                 	db	0
   761  01747F  00                 	db	0
   762  017480  00                 	db	0
   763  017481  00                 	db	0
   764  017482  00                 	db	0
   765  017483  00                 	db	0
   766  017484  00                 	db	0
   767  017485  00                 	db	0
   768  017486  00                 	db	0
   769  017487  00                 	db	0
   770  017488  00                 	db	0
   771  017489  00                 	db	0
   772  01748A  00                 	db	0
   773  01748B  00                 	db	0
   774  01748C  00                 	db	0
   775  01748D  00                 	db	0
   776  01748E  00                 	db	0
   777  01748F  00                 	db	0
   778  017490  00                 	db	0
   779  017491  00                 	db	0
   780  017492  00                 	db	0
   781  017493  00                 	db	0
   782  017494  00                 	db	0
   783  017495  00                 	db	0
   784  017496  00                 	db	0
   785  017497  00                 	db	0
   786  017498  00                 	db	0
   787  017499  00                 	db	0
   788  01749A  00                 	db	0
   789  01749B  00                 	db	0
   790  01749C  00                 	db	0
   791  01749D  00                 	db	0
   792  01749E  00                 	db	0
   793  01749F  00                 	db	0
   794  0174A0  00                 	db	0
   795  0174A1  00                 	db	0
   796  0174A2  00                 	db	0
   797  0174A3  00                 	db	0
   798  0174A4  00                 	db	0
   799  0174A5  00                 	db	0
   800  0174A6  00                 	db	0
   801  0174A7  00                 	db	0
   802  0174A8  00                 	db	0
   803  0174A9  00                 	db	0
   804  0174AA  00                 	db	0
   805  0174AB  00                 	db	0
   806  0174AC  00                 	db	0
   807  0174AD  00                 	db	0
   808  0174AE  00                 	db	0
   809  0174AF  00                 	db	0
   810  0174B0  00                 	db	0
   811  0174B1  00                 	db	0
   812  0174B2  00                 	db	0
   813  0174B3  00                 	db	0
   814  0174B4  00                 	db	0
   815  0174B5  00                 	db	0
   816  0174B6  00                 	db	0
   817  0174B7  00                 	db	0
   818  0174B8  00                 	db	0
   819  0174B9  00                 	db	0
   820  0174BA  00                 	db	0
   821  0174BB  00                 	db	0
   822  0174BC  00                 	db	0
   823  0174BD  00                 	db	0
   824  0174BE  00                 	db	0
   825  0174BF  00                 	db	0
   826  0174C0  00                 	db	0
   827  0174C1  00                 	db	0
   828  0174C2  00                 	db	0
   829  0174C3  00                 	db	0
   830  0174C4  00                 	db	0
   831  0174C5  00                 	db	0
   832  0174C6  00                 	db	0
   833  0174C7  00                 	db	0
   834  0174C8  00                 	db	0
   835  0174C9  00                 	db	0
   836  0174CA  00                 	db	0
   837  0174CB  00                 	db	0
   838  0174CC  00                 	db	0
   839  0174CD  00                 	db	0
   840  0174CE  00                 	db	0
   841  0174CF  00                 	db	0
   842  0174D0  00                 	db	0
   843  0174D1  00                 	db	0
   844  0174D2  00                 	db	0
   845  0174D3  00                 	db	0
   846  0174D4  00                 	db	0
   847  0174D5  00                 	db	0
   848  0174D6  00                 	db	0
   849  0174D7  00                 	db	0
   850  0174D8  00                 	db	0
   851  0174D9  00                 	db	0
   852  0174DA  00                 	db	0
   853  0174DB  00                 	db	0
   854  0174DC  00                 	db	0
   855  0174DD  00                 	db	0
   856  0174DE  00                 	db	0
   857  0174DF  00                 	db	0
   858  0174E0  00                 	db	0
   859  0174E1  00                 	db	0
   860  0174E2  00                 	db	0
   861  0174E3  00                 	db	0
   862  0174E4  00                 	db	0
   863  0174E5  00                 	db	0
   864  0174E6  00                 	db	0
   865  0174E7  00                 	db	0
   866  0174E8  00                 	db	0
   867  0174E9  00                 	db	0
   868  0174EA  00                 	db	0
   869  0174EB  00                 	db	0
   870  0174EC  00                 	db	0
   871  0174ED  00                 	db	0
   872  0174EE  00                 	db	0
   873  0174EF  00                 	db	0
   874  0174F0  00                 	db	0
   875  0174F1  00                 	db	0
   876  0174F2  00                 	db	0
   877  0174F3  00                 	db	0
   878  0174F4  00                 	db	0
   879  0174F5  00                 	db	0
   880  0174F6  00                 	db	0
   881  0174F7  00                 	db	0
   882  0174F8  00                 	db	0
   883  0174F9  00                 	db	0
   884  0174FA  00                 	db	0
   885  0174FB  00                 	db	0
   886  0174FC  00                 	db	0
   887  0174FD  00                 	db	0
   888  0174FE  00                 	db	0
   889  0174FF  00                 	db	0
   890  017500  00                 	db	0
   891  017501  00                 	db	0
   892  017502  00                 	db	0
   893  017503  00                 	db	0
   894  017504  00                 	db	0
   895  017505  00                 	db	0
   896  017506  00                 	db	0
   897  017507  00                 	db	0
   898  017508  00                 	db	0
   899  017509  00                 	db	0
   900  01750A  00                 	db	0
   901  01750B  00                 	db	0
   902  01750C  00                 	db	0
   903  01750D  00                 	db	0
   904  01750E  00                 	db	0
   905  01750F  00                 	db	0
   906  017510  00                 	db	0
   907  017511  00                 	db	0
   908  017512  00                 	db	0
   909  017513  00                 	db	0
   910  017514  00                 	db	0
   911  017515  00                 	db	0
   912  017516  00                 	db	0
   913  017517  00                 	db	0
   914  017518  00                 	db	0
   915  017519  00                 	db	0
   916  01751A  00                 	db	0
   917  01751B  00                 	db	0
   918  01751C  00                 	db	0
   919  01751D  00                 	db	0
   920  01751E  00                 	db	0
   921  01751F  00                 	db	0
   922  017520  00                 	db	0
   923  017521  00                 	db	0
   924  017522  00                 	db	0
   925  017523  00                 	db	0
   926  017524  00                 	db	0
   927  017525  00                 	db	0
   928  017526  00                 	db	0
   929  017527  00                 	db	0
   930  017528  00                 	db	0
   931  017529  00                 	db	0
   932  01752A  00                 	db	0
   933  01752B  00                 	db	0
   934  01752C  00                 	db	0
   935  01752D  00                 	db	0
   936  01752E  00                 	db	0
   937  01752F  00                 	db	0
   938  017530  00                 	db	0
   939  017531  00                 	db	0
   940  017532  00                 	db	0
   941  017533  00                 	db	0
   942  017534  00                 	db	0
   943  017535  00                 	db	0
   944  017536  00                 	db	0
   945  017537  00                 	db	0
   946  017538  00                 	db	0
   947  017539  00                 	db	0
   948  01753A  00                 	db	0
   949  01753B  00                 	db	0
   950  01753C  00                 	db	0
   951  01753D  00                 	db	0
   952  01753E  00                 	db	0
   953  01753F  00                 	db	0
   954  017540  00                 	db	0
   955  017541  00                 	db	0
   956  017542  00                 	db	0
   957  017543  00                 	db	0
   958  017544  00                 	db	0
   959  017545  00                 	db	0
   960  017546  00                 	db	0
   961  017547  00                 	db	0
   962  017548  00                 	db	0
   963  017549  00                 	db	0
   964  01754A  00                 	db	0
   965  01754B  00                 	db	0
   966  01754C  00                 	db	0
   967  01754D  00                 	db	0
   968  01754E  00                 	db	0
   969  01754F  00                 	db	0
   970  017550  00                 	db	0
   971  017551  00                 	db	0
   972  017552  00                 	db	0
   973  017553  00                 	db	0
   974  017554  00                 	db	0
   975  017555  00                 	db	0
   976  017556  00                 	db	0
   977  017557  00                 	db	0
   978  017558  00                 	db	0
   979  017559  00                 	db	0
   980  01755A  00                 	db	0
   981  01755B  00                 	db	0
   982  01755C  00                 	db	0
   983  01755D  00                 	db	0
   984  01755E  00                 	db	0
   985  01755F  00                 	db	0
   986  017560  00                 	db	0
   987  017561  00                 	db	0
   988  017562  00                 	db	0
   989  017563  00                 	db	0
   990  017564  00                 	db	0
   991  017565  00                 	db	0
   992  017566  00                 	db	0
   993  017567  00                 	db	0
   994  017568  00                 	db	0
   995  017569  00                 	db	0
   996  01756A  00                 	db	0
   997  01756B  00                 	db	0
   998  01756C  00                 	db	0
   999  01756D  00                 	db	0
  1000  01756E  00                 	db	0
  1001  01756F  00                 	db	0
  1002  017570  00                 	db	0
  1003  017571  00                 	db	0
  1004  017572  00                 	db	0
  1005  017573  00                 	db	0
  1006  017574  00                 	db	0
  1007  017575  00                 	db	0
  1008  017576  00                 	db	0
  1009  017577  00                 	db	0
  1010  017578  00                 	db	0
  1011  017579  00                 	db	0
  1012  01757A  00                 	db	0
  1013  01757B  00                 	db	0
  1014  01757C  00                 	db	0
  1015  01757D  00                 	db	0
  1016  01757E  00                 	db	0
  1017  01757F  00                 	db	0
  1018  017580  00                 	db	0
  1019  017581  00                 	db	0
  1020  017582  00                 	db	0
  1021  017583  00                 	db	0
  1022  017584  00                 	db	0
  1023  017585  00                 	db	0
  1024  017586  00                 	db	0
  1025  017587  00                 	db	0
  1026  017588  00                 	db	0
  1027  017589  00                 	db	0
  1028  01758A  00                 	db	0
  1029  01758B  00                 	db	0
  1030  01758C  00                 	db	0
  1031  01758D  00                 	db	0
  1032  01758E  00                 	db	0
  1033  01758F  00                 	db	0
  1034  017590  00                 	db	0
  1035  017591  00                 	db	0
  1036  017592  00                 	db	0
  1037  017593  00                 	db	0
  1038  017594  00                 	db	0
  1039  017595  00                 	db	0
  1040  017596  00                 	db	0
  1041  017597  00                 	db	0
  1042  017598  00                 	db	0
  1043  017599  00                 	db	0
  1044  01759A  00                 	db	0
  1045  01759B  00                 	db	0
  1046  01759C  00                 	db	0
  1047  01759D  00                 	db	0
  1048  01759E  00                 	db	0
  1049  01759F  00                 	db	0
  1050  0175A0  00                 	db	0
  1051  0175A1  00                 	db	0
  1052  0175A2  00                 	db	0
  1053  0175A3  00                 	db	0
  1054  0175A4  00                 	db	0
  1055  0175A5  00                 	db	0
  1056  0175A6  00                 	db	0
  1057  0175A7  00                 	db	0
  1058  0175A8  00                 	db	0
  1059  0175A9  00                 	db	0
  1060  0175AA  00                 	db	0
  1061  0175AB  00                 	db	0
  1062  0175AC  00                 	db	0
  1063  0175AD  00                 	db	0
  1064  0175AE  00                 	db	0
  1065  0175AF  00                 	db	0
  1066  0175B0  00                 	db	0
  1067  0175B1  00                 	db	0
  1068  0175B2  00                 	db	0
  1069  0175B3  00                 	db	0
  1070  0175B4  00                 	db	0
  1071  0175B5  00                 	db	0
  1072  0175B6  00                 	db	0
  1073  0175B7  00                 	db	0
  1074  0175B8  00                 	db	0
  1075  0175B9  00                 	db	0
  1076  0175BA  00                 	db	0
  1077  0175BB  00                 	db	0
  1078  0175BC  00                 	db	0
  1079  0175BD  00                 	db	0
  1080  0175BE  00                 	db	0
  1081  0175BF  00                 	db	0
  1082  0175C0  00                 	db	0
  1083  0175C1  00                 	db	0
  1084  0175C2  00                 	db	0
  1085  0175C3  00                 	db	0
  1086  0175C4  00                 	db	0
  1087  0175C5  00                 	db	0
  1088  0175C6  00                 	db	0
  1089  0175C7  00                 	db	0
  1090  0175C8  00                 	db	0
  1091  0175C9  00                 	db	0
  1092  0175CA  00                 	db	0
  1093  0175CB  00                 	db	0
  1094  0175CC  00                 	db	0
  1095  0175CD  00                 	db	0
  1096  0175CE  00                 	db	0
  1097  0175CF  00                 	db	0
  1098  0175D0  00                 	db	0
  1099  0175D1  00                 	db	0
  1100  0175D2  00                 	db	0
  1101  0175D3  00                 	db	0
  1102  0175D4  00                 	db	0
  1103  0175D5  00                 	db	0
  1104  0175D6  00                 	db	0
  1105  0175D7  00                 	db	0
  1106  0175D8  00                 	db	0
  1107  0175D9  00                 	db	0
  1108  0175DA  00                 	db	0
  1109  0175DB  00                 	db	0
  1110  0175DC  00                 	db	0
  1111  0175DD  00                 	db	0
  1112  0175DE  00                 	db	0
  1113  0175DF  00                 	db	0
  1114  0175E0  00                 	db	0
  1115  0175E1  00                 	db	0
  1116  0175E2  00                 	db	0
  1117  0175E3  00                 	db	0
  1118  0175E4  00                 	db	0
  1119  0175E5  00                 	db	0
  1120  0175E6  00                 	db	0
  1121  0175E7  00                 	db	0
  1122  0175E8  00                 	db	0
  1123  0175E9  00                 	db	0
  1124  0175EA  00                 	db	0
  1125  0175EB  00                 	db	0
  1126  0175EC  00                 	db	0
  1127  0175ED  00                 	db	0
  1128  0175EE  00                 	db	0
  1129  0175EF  00                 	db	0
  1130  0175F0  00                 	db	0
  1131  0175F1  00                 	db	0
  1132  0175F2  00                 	db	0
  1133  0175F3  00                 	db	0
  1134  0175F4  00                 	db	0
  1135  0175F5  00                 	db	0
  1136  0175F6  00                 	db	0
  1137  0175F7  00                 	db	0
  1138  0175F8  00                 	db	0
  1139  0175F9  00                 	db	0
  1140  0175FA  00                 	db	0
  1141  0175FB  00                 	db	0
  1142  0175FC  00                 	db	0
  1143  0175FD  00                 	db	0
  1144  0175FE  00                 	db	0
  1145  0175FF  00                 	db	0
  1146  017600  00                 	db	0
  1147  017601  00                 	db	0
  1148  017602  00                 	db	0
  1149  017603  00                 	db	0
  1150  017604  00                 	db	0
  1151  017605  00                 	db	0
  1152  017606  00                 	db	0
  1153  017607  00                 	db	0
  1154  017608  00                 	db	0
  1155  017609  00                 	db	0
  1156  01760A  00                 	db	0
  1157  01760B  00                 	db	0
  1158  01760C  00                 	db	0
  1159  01760D  00                 	db	0
  1160  01760E  00                 	db	0
  1161  01760F  00                 	db	0
  1162  017610  00                 	db	0
  1163  017611  00                 	db	0
  1164  017612  00                 	db	0
  1165  017613  00                 	db	0
  1166  017614  00                 	db	0
  1167  017615  00                 	db	0
  1168  017616  00                 	db	0
  1169  017617  00                 	db	0
  1170  017618  00                 	db	0
  1171  017619  00                 	db	0
  1172  01761A  00                 	db	0
  1173  01761B  00                 	db	0
  1174  01761C  00                 	db	0
  1175  01761D  00                 	db	0
  1176  01761E  00                 	db	0
  1177  01761F  00                 	db	0
  1178  017620  00                 	db	0
  1179  017621  00                 	db	0
  1180  017622  00                 	db	0
  1181  017623  00                 	db	0
  1182  017624  00                 	db	0
  1183  017625  00                 	db	0
  1184  017626  00                 	db	0
  1185  017627  00                 	db	0
  1186  017628  00                 	db	0
  1187  017629  00                 	db	0
  1188  01762A  00                 	db	0
  1189  01762B  00                 	db	0
  1190  01762C  00                 	db	0
  1191  01762D  00                 	db	0
  1192  01762E  00                 	db	0
  1193  01762F  00                 	db	0
  1194  017630  00                 	db	0
  1195  017631  00                 	db	0
  1196  017632  00                 	db	0
  1197  017633  00                 	db	0
  1198  017634  00                 	db	0
  1199  017635  00                 	db	0
  1200  017636  00                 	db	0
  1201  017637  00                 	db	0
  1202  017638  00                 	db	0
  1203  017639  00                 	db	0
  1204  01763A  00                 	db	0
  1205  01763B  00                 	db	0
  1206  01763C  00                 	db	0
  1207  01763D  00                 	db	0
  1208  01763E  00                 	db	0
  1209  01763F  00                 	db	0
  1210  017640  00                 	db	0
  1211  017641  00                 	db	0
  1212  017642  00                 	db	0
  1213  017643  00                 	db	0
  1214  017644  00                 	db	0
  1215  017645  00                 	db	0
  1216  017646  00                 	db	0
  1217  017647  00                 	db	0
  1218  017648  00                 	db	0
  1219  017649  00                 	db	0
  1220  01764A  00                 	db	0
  1221  01764B  00                 	db	0
  1222                           
  1223                           	psect	idataBANK0
  1224  01A83C                     __pidataBANK0:
  1225                           	opt callstack 0
  1226                           
  1227                           ;initializer for _R
  1228  01A83C  0000               	dw	0
  1229  01A83E  0000               	dw	0
  1230  01A840  0000               	dw	0
  1231  01A842  0000               	dw	0
  1232  01A844  0000               	dw	0
  1233  01A846  0000               	dw	0
  1234  01A848  0000               	dw	0
  1235  01A84A  0000               	dw	0
  1236  01A84C  0000               	dw	0
  1237  01A84E  0000               	dw	0
  1238  01A850  0000               	dw	0
  1239  01A852  0000               	dw	0
  1240  01A854  0000               	dw	0
  1241  01A856  0000               	dw	0
  1242  01A858  0000               	dw	0
  1243  01A85A  0000               	dw	0
  1244  01A85C  0F67               	dw	3943
  1245  01A85E  0F8F               	dw	3983
  1246  01A860  00                 	db	0
  1247  01A861  0000               	dw	0
  1248  01A863  00                 	db	0
  1249                           
  1250                           ;initializer for stoa@F1166
  1251  01A864  28                 	db	40
  1252  01A865  6E                 	db	110
  1253  01A866  75                 	db	117
  1254  01A867  6C                 	db	108
  1255  01A868  6C                 	db	108
  1256  01A869  29                 	db	41
  1257  01A86A  00                 	db	0
  1258                           
  1259                           ;initializer for _H
  1260  01A86B  00                 	db	0
  1261  01A86C  00                 	db	0
  1262  01A86D  01                 	db	1
  1263  01A86E  00                 	db	0
  1264  01A86F  01                 	db	1
  1265  01A870  00                 	db	0
  1266  01A871  00                 	db	0
  1267                           
  1268                           	psect	idataBANK1
  1269  019090                     __pidataBANK1:
  1270                           	opt callstack 0
  1271                           
  1272                           ;initializer for _C
  1273  019090  0000               	dw	0
  1274  019092  0000               	dw	0
  1275  019094  0000               	dw	0
  1276  019096  0000               	dw	0
  1277  019098  0000               	dw	0
  1278  01909A  0000               	dw	0
  1279  01909C  0000               	dw	0
  1280  01909E  0000               	dw	0
  1281  0190A0  0000               	dw	0
  1282  0190A2  0000               	dw	0
  1283  0190A4  0000               	dw	0
  1284  0190A6  0000               	dw	0
  1285  0190A8  0000               	dw	0
  1286  0190AA  0000               	dw	0
  1287  0190AC  0000               	dw	0
  1288  0190AE  0000               	dw	0
  1289  0190B0  0000               	dw	0
  1290  0190B2  0000               	dw	0
  1291  0190B4  0000               	dw	0
  1292  0190B6  0000               	dw	0
  1293  0190B8  0000               	dw	0
  1294  0190BA  0000               	dw	0
  1295  0190BC  0000               	dw	0
  1296  0190BE  0000               	dw	0
  1297  0190C0  0000               	dw	0
  1298  0190C2  0000               	dw	0
  1299  0190C4  0000               	dw	0
  1300  0190C6  0000               	dw	0
  1301  0190C8  0000               	dw	0
  1302  0190CA  0000               	dw	0
  1303  0190CC  0000               	dw	0
  1304  0190CE  0000               	dw	0
  1305  0190D0  0000               	dw	0
  1306  0190D2  0000               	dw	0
  1307  0190D4  0000               	dw	0
  1308  0190D6  0000               	dw	0
  1309  0190D8  0000               	dw	0
  1310  0190DA  0000               	dw	0
  1311  0190DC  0000               	dw	0
  1312  0190DE  0000               	dw	0
  1313  0190E0  0000               	dw	0
  1314  0190E2  0000               	dw	0
  1315  0190E4  0000               	dw	0
  1316  0190E6  0000               	dw	0
  1317  0190E8  0000               	dw	0
  1318  0190EA  0000               	dw	0
  1319  0190EC  0000               	dw	0
  1320  0190EE  0000               	dw	0
  1321  0190F0  0000               	dw	0
  1322  0190F2  0000               	dw	0
  1323  0190F4  0000               	dw	0
  1324  0190F6  0000               	dw	0
  1325  0190F8  0000               	dw	0
  1326  0190FA  0000               	dw	0
  1327  0190FC  0000               	dw	0
  1328  0190FE  0000               	dw	0
  1329  019100  0000               	dw	0
  1330  019102  0000               	dw	0
  1331  019104  0000               	dw	0
  1332  019106  0000               	dw	0
  1333  019108  0000               	dw	0
  1334  01910A  0000               	dw	0
  1335  01910C  0000               	dw	0
  1336  01910E  0000               	dw	0
  1337  019110  0000               	dw	0
  1338  019112  0000               	dw	0
  1339  019114  0000               	dw	0
  1340  019116  0000               	dw	0
  1341  019118  0000               	dw	0
  1342  01911A  42FA               	dw	17146
  1343  01911C  00                 	db	0
  1344  01911D  00                 	db	0
  1345  01911E  00                 	db	0
  1346  01911F  00                 	db	0
  1347  019120  00                 	db	0
  1348  019121  00                 	db	0
  1349  019122  00                 	db	0
  1350  019123  00                 	db	0
  1351  019124  00                 	db	0
  1352  019125  00                 	db	0
  1353  019126  00                 	db	0
  1354  019127  00                 	db	0
  1355  019128  00                 	db	0
  1356  019129  00                 	db	0
  1357  01912A  00                 	db	0
  1358  01912B  00                 	db	0
  1359  01912C  00                 	db	0
  1360  01912D  00                 	db	0
  1361  01912E  00                 	db	0
  1362  01912F  00                 	db	0
  1363  019130  00                 	db	0
  1364  019131  00                 	db	0
  1365  019132  00                 	db	0
  1366  019133  00                 	db	0
  1367  019134  00                 	db	0
  1368  019135  00                 	db	0
  1369  019136  00                 	db	0
  1370  019137  00                 	db	0
  1371  019138  00                 	db	0
  1372  019139  00                 	db	0
  1373  01913A  00                 	db	0
  1374  01913B  00                 	db	0
  1375  01913C  00                 	db	0
  1376  01913D  00                 	db	0
  1377  01913E  00                 	db	0
  1378  01913F  00                 	db	0
  1379  019140  00                 	db	0
  1380  019141  00                 	db	0
  1381  019142  00                 	db	0
  1382  019143  00                 	db	0
  1383  019144  00                 	db	0
  1384  019145  00                 	db	0
  1385  019146  00                 	db	0
  1386  019147  00                 	db	0
  1387  019148  00                 	db	0
  1388  019149  00                 	db	0
  1389  01914A  00                 	db	0
  1390  01914B  00                 	db	0
  1391  01914C  00                 	db	0
  1392  01914D  00                 	db	0
  1393  01914E  00                 	db	0
  1394  01914F  00                 	db	0
  1395  019150  00                 	db	0
  1396  019151  00                 	db	0
  1397  019152  00                 	db	0
  1398  019153  00                 	db	0
  1399  019154  00                 	db	0
  1400  019155  00                 	db	0
  1401  019156  00                 	db	0
  1402  019157  00                 	db	0
  1403  019158  00                 	db	0
  1404  019159  00                 	db	0
  1405  01915A  00                 	db	0
  1406  01915B  00                 	db	0
  1407  01915C  00                 	db	0
  1408  01915D  00                 	db	0
  1409  01915E  00                 	db	0
  1410  01915F  00                 	db	0
  1411  019160  00                 	db	0
  1412  019161  00                 	db	0
  1413  019162  00                 	db	0
  1414  019163  00                 	db	0
  1415  019164  00                 	db	0
  1416  019165  00                 	db	0
  1417  019166  00                 	db	0
  1418  019167  00                 	db	0
  1419  019168  00                 	db	0
  1420  019169  00                 	db	0
  1421  01916A  00                 	db	0
  1422  01916B  00                 	db	0
  1423  01916C  00                 	db	0
  1424  01916D  00                 	db	0
  1425  01916E  00                 	db	0
  1426  01916F  00                 	db	0
  1427  019170  00                 	db	0
  1428  019171  00                 	db	0
  1429  019172  00                 	db	0
  1430  019173  00                 	db	0
  1431  019174  00                 	db	0
  1432  019175  00                 	db	0
  1433  019176  00                 	db	0
  1434  019177  00                 	db	0
  1435  019178  00                 	db	0
  1436  019179  00                 	db	0
  1437  01917A  00                 	db	0
  1438  01917B  00                 	db	0
  1439  01917C  00                 	db	0
  1440  01917D  00                 	db	0
  1441  01917E  00                 	db	0
  1442  01917F  00                 	db	0
  1443  019180  00                 	db	0
  1444  019181  00                 	db	0
  1445  019182  00                 	db	0
  1446                           
  1447                           	psect	idataBANK2
  1448  0194EC                     __pidataBANK2:
  1449                           	opt callstack 0
  1450                           
  1451                           ;initializer for _V
  1452  0194EC  00                 	db	0
  1453  0194ED  00                 	db	0
  1454  0194EE  00                 	db	0
  1455  0194EF  00                 	db	0
  1456  0194F0  00                 	db	0
  1457  0194F1  00                 	db	0
  1458  0194F2  00                 	db	0
  1459  0194F3  00                 	db	0
  1460  0194F4  00                 	db	0
  1461  0194F5  00                 	db	0
  1462  0194F6  00                 	db	0
  1463  0194F7  00                 	db	0
  1464  0194F8  00                 	db	0
  1465  0194F9  00                 	db	0
  1466  0194FA  00                 	db	0
  1467  0194FB  00                 	db	0
  1468  0194FC  00                 	db	0
  1469  0194FD  00                 	db	0
  1470  0194FE  00                 	db	0
  1471  0194FF  00                 	db	0
  1472  019500  00                 	db	0
  1473  019501  00                 	db	0
  1474  019502  00                 	db	0
  1475  019503  00                 	db	0
  1476  019504  00                 	db	0
  1477  019505  00                 	db	0
  1478  019506  00                 	db	0
  1479  019507  00                 	db	0
  1480  019508  00                 	db	0
  1481  019509  00                 	db	0
  1482  01950A  00                 	db	0
  1483  01950B  00                 	db	0
  1484  01950C  00                 	db	0
  1485  01950D  00                 	db	0
  1486  01950E  00                 	db	0
  1487  01950F  00                 	db	0
  1488  019510  00                 	db	0
  1489  019511  00                 	db	0
  1490  019512  00                 	db	0
  1491  019513  00                 	db	0
  1492  019514  00                 	db	0
  1493  019515  00                 	db	0
  1494  019516  00                 	db	0
  1495  019517  00                 	db	0
  1496  019518  00                 	db	0
  1497  019519  00                 	db	0
  1498  01951A  00                 	db	0
  1499  01951B  00                 	db	0
  1500  01951C  00                 	db	0
  1501  01951D  00                 	db	0
  1502  01951E  00                 	db	0
  1503  01951F  00                 	db	0
  1504  019520  00                 	db	0
  1505  019521  00                 	db	0
  1506  019522  00                 	db	0
  1507  019523  00                 	db	0
  1508  019524  00                 	db	0
  1509  019525  00                 	db	0
  1510  019526  00                 	db	0
  1511  019527  00                 	db	0
  1512  019528  00                 	db	0
  1513  019529  00                 	db	0
  1514  01952A  00                 	db	0
  1515  01952B  00                 	db	0
  1516  01952C  00                 	db	0
  1517  01952D  00                 	db	0
  1518  01952E  00                 	db	0
  1519  01952F  00                 	db	0
  1520  019530  00                 	db	0
  1521  019531  00                 	db	0
  1522  019532  00                 	db	0
  1523  019533  00                 	db	0
  1524  019534  00                 	db	0
  1525  019535  00                 	db	0
  1526  019536  00                 	db	0
  1527  019537  00                 	db	0
  1528  019538  00                 	db	0
  1529  019539  00                 	db	0
  1530  01953A  00                 	db	0
  1531  01953B  00                 	db	0
  1532  01953C  00                 	db	0
  1533  01953D  00                 	db	0
  1534  01953E  00                 	db	0
  1535  01953F  00                 	db	0
  1536  019540  00                 	db	0
  1537  019541  00                 	db	0
  1538  019542  00                 	db	0
  1539  019543  00                 	db	0
  1540  019544  00                 	db	0
  1541  019545  00                 	db	0
  1542  019546  00                 	db	0
  1543  019547  00                 	db	0
  1544  019548  00                 	db	0
  1545  019549  00                 	db	0
  1546  01954A  00                 	db	0
  1547  01954B  00                 	db	0
  1548  01954C  00                 	db	0
  1549  01954D  00                 	db	0
  1550  01954E  00                 	db	0
  1551  01954F  00                 	db	0
  1552  019550  00                 	db	0
  1553  019551  00                 	db	0
  1554  019552  00                 	db	0
  1555  019553  00                 	db	0
  1556  019554  00                 	db	0
  1557  019555  00                 	db	0
  1558  019556  00                 	db	0
  1559  019557  00                 	db	0
  1560  019558  00                 	db	0
  1561  019559  00                 	db	0
  1562  01955A  00                 	db	0
  1563  01955B  00                 	db	0
  1564  01955C  00                 	db	0
  1565  01955D  00                 	db	0
  1566  01955E  00                 	db	0
  1567  01955F  00                 	db	0
  1568  019560  00                 	db	0
  1569  019561  00                 	db	0
  1570  019562  00                 	db	0
  1571  019563  00                 	db	0
  1572  019564  00                 	db	0
  1573  019565  00                 	db	0
  1574  019566  00                 	db	0
  1575  019567  00                 	db	0
  1576  019568  00                 	db	0
  1577  019569  00                 	db	0
  1578  01956A  00                 	db	0
  1579  01956B  00                 	db	0
  1580  01956C  00                 	db	0
  1581  01956D  0000               	dw	0
  1582  01956F  0000               	dw	0
  1583  019571  0000               	dw	0
  1584  019573  0000               	dw	0
  1585  019575  00                 	db	0
  1586  019576  00                 	db	0
  1587  019577  00                 	db	0
  1588  019578  00                 	db	0
  1589  019579  00                 	db	0
  1590  01957A  00                 	db	0
  1591  01957B  0000               	dw	0
  1592  01957D  0000               	dw	0
  1593  01957F  0000               	dw	0
  1594  019581  0000               	dw	0
  1595  019583  0000               	dw	0
  1596  019585  0000               	dw	0
  1597  019587  00                 	db	0
  1598  019588  00                 	db	0
  1599  019589  00                 	db	0
  1600  01958A  00                 	db	0
  1601  01958B  00                 	db	0
  1602  01958C  00                 	db	0
  1603  01958D  00                 	db	0
  1604  01958E  00                 	db	0
  1605  01958F  00                 	db	0
  1606  019590  00                 	db	0
  1607  019591  0000               	dw	0
  1608  019593  0000               	dw	0
  1609  019595  2D                 	db	45
  1610  019596  00                 	db	0
  1611  019597  00                 	db	0
  1612  019598  0000               	dw	0
  1613  01959A  0000               	dw	0
  1614  01959C  0000               	dw	0
  1615  01959E  0000               	dw	0
  1616  0195A0  0000               	dw	0
  1617  0195A2  0000               	dw	0
  1618  0195A4  0000               	dw	0
  1619  0195A6  0000               	dw	0
  1620                           
  1621                           	psect	mediumconst
  1622  00FB3E                     __pmediumconst:
  1623                           	opt callstack 0
  1624  00FB3E  00                 	db	0
  1625  00FB3F                     _BVSOC_TABLE:
  1626                           	opt callstack 0
  1627  00FB3F  59D8               	dw	23000
  1628  00FB41  0000               	dw	0
  1629  00FB43  0005               	dw	5
  1630  00FB45  0000               	dw	0
  1631  00FB47  5B68               	dw	23400
  1632  00FB49  0000               	dw	0
  1633  00FB4B  000A               	dw	10
  1634  00FB4D  0000               	dw	0
  1635  00FB4F  5C30               	dw	23600
  1636  00FB51  0000               	dw	0
  1637  00FB53  0014               	dw	20
  1638  00FB55  0000               	dw	0
  1639  00FB57  5E38               	dw	24120
  1640  00FB59  0000               	dw	0
  1641  00FB5B  0019               	dw	25
  1642  00FB5D  0000               	dw	0
  1643  00FB5F  5E88               	dw	24200
  1644  00FB61  0000               	dw	0
  1645  00FB63  001E               	dw	30
  1646  00FB65  0000               	dw	0
  1647  00FB67  5F78               	dw	24440
  1648  00FB69  0000               	dw	0
  1649  00FB6B  0028               	dw	40
  1650  00FB6D  0000               	dw	0
  1651  00FB6F  5FDC               	dw	24540
  1652  00FB71  0000               	dw	0
  1653  00FB73  002D               	dw	45
  1654  00FB75  0000               	dw	0
  1655  00FB77  6018               	dw	24600
  1656  00FB79  0000               	dw	0
  1657  00FB7B  0032               	dw	50
  1658  00FB7D  0000               	dw	0
  1659  00FB7F  6046               	dw	24646
  1660  00FB81  0000               	dw	0
  1661  00FB83  0035               	dw	53
  1662  00FB85  0000               	dw	0
  1663  00FB87  607C               	dw	24700
  1664  00FB89  0000               	dw	0
  1665  00FB8B  0037               	dw	55
  1666  00FB8D  0000               	dw	0
  1667  00FB8F  60AE               	dw	24750
  1668  00FB91  0000               	dw	0
  1669  00FB93  0039               	dw	57
  1670  00FB95  0000               	dw	0
  1671  00FB97  60E0               	dw	24800
  1672  00FB99  0000               	dw	0
  1673  00FB9B  003C               	dw	60
  1674  00FB9D  0000               	dw	0
  1675  00FB9F  6112               	dw	24850
  1676  00FBA1  0000               	dw	0
  1677  00FBA3  003F               	dw	63
  1678  00FBA5  0000               	dw	0
  1679  00FBA7  615D               	dw	24925
  1680  00FBA9  0000               	dw	0
  1681  00FBAB  0043               	dw	67
  1682  00FBAD  0000               	dw	0
  1683  00FBAF  61A8               	dw	25000
  1684  00FBB1  0000               	dw	0
  1685  00FBB3  0046               	dw	70
  1686  00FBB5  0000               	dw	0
  1687  00FBB7  61BC               	dw	25020
  1688  00FBB9  0000               	dw	0
  1689  00FBBB  0048               	dw	72
  1690  00FBBD  0000               	dw	0
  1691  00FBBF  61D0               	dw	25040
  1692  00FBC1  0000               	dw	0
  1693  00FBC3  004B               	dw	75
  1694  00FBC5  0000               	dw	0
  1695  00FBC7  61DA               	dw	25050
  1696  00FBC9  0000               	dw	0
  1697  00FBCB  0050               	dw	80
  1698  00FBCD  0000               	dw	0
  1699  00FBCF  61E4               	dw	25060
  1700  00FBD1  0000               	dw	0
  1701  00FBD3  0055               	dw	85
  1702  00FBD5  0000               	dw	0
  1703  00FBD7  61F8               	dw	25080
  1704  00FBD9  0000               	dw	0
  1705  00FBDB  005A               	dw	90
  1706  00FBDD  0000               	dw	0
  1707  00FBDF  6208               	dw	25096
  1708  00FBE1  0000               	dw	0
  1709  00FBE3  005C               	dw	92
  1710  00FBE5  0000               	dw	0
  1711  00FBE7  6222               	dw	25122
  1712  00FBE9  0000               	dw	0
  1713  00FBEB  005D               	dw	93
  1714  00FBED  0000               	dw	0
  1715  00FBEF  6234               	dw	25140
  1716  00FBF1  0000               	dw	0
  1717  00FBF3  005F               	dw	95
  1718  00FBF5  0000               	dw	0
  1719  00FBF7  6248               	dw	25160
  1720  00FBF9  0000               	dw	0
  1721  00FBFB  0061               	dw	97
  1722  00FBFD  0000               	dw	0
  1723  00FBFF  625C               	dw	25180
  1724  00FC01  0000               	dw	0
  1725  00FC03  0064               	dw	100
  1726  00FC05  0000               	dw	0
  1727  00FC07  6784               	dw	26500
  1728  00FC09  0000               	dw	0
  1729  00FC0B  0062               	dw	98
  1730  00FC0D  0000               	dw	0
  1731  00FC0F                     __end_of_BVSOC_TABLE:
  1732                           	opt callstack 0
  1733  00FC0F                     _T:
  1734                           	opt callstack 0
  1735  00FC0F  63                 	db	99
  1736  00FC10  6F                 	db	111
  1737  00FC11  6D                 	db	109
  1738  00FC12  6D                 	db	109
  1739  00FC13  61                 	db	97
  1740  00FC14  6E                 	db	110
  1741  00FC15  64                 	db	100
  1742  00FC16  73                 	db	115
  1743  00FC17  20                 	db	32
  1744  00FC18  31                 	db	49
  1745  00FC19  00                 	db	0
  1746  00FC1A  00                 	db	0
  1747  00FC1B  00                 	db	0
  1748  00FC1C  00                 	db	0
  1749  00FC1D  00                 	db	0
  1750  00FC1E  00                 	db	0
  1751  00FC1F  00                 	db	0
  1752  00FC20  00                 	db	0
  1753  00FC21  64                 	db	100
  1754  00FC22  69                 	db	105
  1755  00FC23  73                 	db	115
  1756  00FC24  70                 	db	112
  1757  00FC25  6C                 	db	108
  1758  00FC26  61                 	db	97
  1759  00FC27  79                 	db	121
  1760  00FC28  73                 	db	115
  1761  00FC29  20                 	db	32
  1762  00FC2A  31                 	db	49
  1763  00FC2B  00                 	db	0
  1764  00FC2C  00                 	db	0
  1765  00FC2D  00                 	db	0
  1766  00FC2E  00                 	db	0
  1767  00FC2F  00                 	db	0
  1768  00FC30  00                 	db	0
  1769  00FC31  00                 	db	0
  1770  00FC32  00                 	db	0
  1771  00FC33  63                 	db	99
  1772  00FC34  6F                 	db	111
  1773  00FC35  6D                 	db	109
  1774  00FC36  6D                 	db	109
  1775  00FC37  61                 	db	97
  1776  00FC38  6E                 	db	110
  1777  00FC39  64                 	db	100
  1778  00FC3A  73                 	db	115
  1779  00FC3B  20                 	db	32
  1780  00FC3C  32                 	db	50
  1781  00FC3D  00                 	db	0
  1782  00FC3E  00                 	db	0
  1783  00FC3F  00                 	db	0
  1784  00FC40  00                 	db	0
  1785  00FC41  00                 	db	0
  1786  00FC42  00                 	db	0
  1787  00FC43  00                 	db	0
  1788  00FC44  00                 	db	0
  1789  00FC45  64                 	db	100
  1790  00FC46  69                 	db	105
  1791  00FC47  73                 	db	115
  1792  00FC48  70                 	db	112
  1793  00FC49  6C                 	db	108
  1794  00FC4A  61                 	db	97
  1795  00FC4B  79                 	db	121
  1796  00FC4C  73                 	db	115
  1797  00FC4D  20                 	db	32
  1798  00FC4E  32                 	db	50
  1799  00FC4F  00                 	db	0
  1800  00FC50  00                 	db	0
  1801  00FC51  00                 	db	0
  1802  00FC52  00                 	db	0
  1803  00FC53  00                 	db	0
  1804  00FC54  00                 	db	0
  1805  00FC55  00                 	db	0
  1806  00FC56  00                 	db	0
  1807  00FC57  63                 	db	99
  1808  00FC58  6F                 	db	111
  1809  00FC59  6D                 	db	109
  1810  00FC5A  6D                 	db	109
  1811  00FC5B  61                 	db	97
  1812  00FC5C  6E                 	db	110
  1813  00FC5D  64                 	db	100
  1814  00FC5E  73                 	db	115
  1815  00FC5F  20                 	db	32
  1816  00FC60  33                 	db	51
  1817  00FC61  00                 	db	0
  1818  00FC62  00                 	db	0
  1819  00FC63  00                 	db	0
  1820  00FC64  00                 	db	0
  1821  00FC65  00                 	db	0
  1822  00FC66  00                 	db	0
  1823  00FC67  00                 	db	0
  1824  00FC68  00                 	db	0
  1825  00FC69  64                 	db	100
  1826  00FC6A  69                 	db	105
  1827  00FC6B  73                 	db	115
  1828  00FC6C  70                 	db	112
  1829  00FC6D  6C                 	db	108
  1830  00FC6E  61                 	db	97
  1831  00FC6F  79                 	db	121
  1832  00FC70  73                 	db	115
  1833  00FC71  20                 	db	32
  1834  00FC72  33                 	db	51
  1835  00FC73  00                 	db	0
  1836  00FC74  00                 	db	0
  1837  00FC75  00                 	db	0
  1838  00FC76  00                 	db	0
  1839  00FC77  00                 	db	0
  1840  00FC78  00                 	db	0
  1841  00FC79  00                 	db	0
  1842  00FC7A  00                 	db	0
  1843  00FC7B  63                 	db	99
  1844  00FC7C  6F                 	db	111
  1845  00FC7D  6D                 	db	109
  1846  00FC7E  6D                 	db	109
  1847  00FC7F  61                 	db	97
  1848  00FC80  6E                 	db	110
  1849  00FC81  64                 	db	100
  1850  00FC82  73                 	db	115
  1851  00FC83  20                 	db	32
  1852  00FC84  34                 	db	52
  1853  00FC85  00                 	db	0
  1854  00FC86  00                 	db	0
  1855  00FC87  00                 	db	0
  1856  00FC88  00                 	db	0
  1857  00FC89  00                 	db	0
  1858  00FC8A  00                 	db	0
  1859  00FC8B  00                 	db	0
  1860  00FC8C  00                 	db	0
  1861  00FC8D  64                 	db	100
  1862  00FC8E  69                 	db	105
  1863  00FC8F  73                 	db	115
  1864  00FC90  70                 	db	112
  1865  00FC91  6C                 	db	108
  1866  00FC92  61                 	db	97
  1867  00FC93  79                 	db	121
  1868  00FC94  73                 	db	115
  1869  00FC95  20                 	db	32
  1870  00FC96  34                 	db	52
  1871  00FC97  00                 	db	0
  1872  00FC98  00                 	db	0
  1873  00FC99  00                 	db	0
  1874  00FC9A  00                 	db	0
  1875  00FC9B  00                 	db	0
  1876  00FC9C  00                 	db	0
  1877  00FC9D  00                 	db	0
  1878  00FC9E  00                 	db	0
  1879  00FC9F                     __end_of_T:
  1880                           	opt callstack 0
  1881  00FC9F                     _spin:
  1882                           	opt callstack 0
  1883  00FC9F  7C                 	db	124
  1884  00FCA0  7C                 	db	124
  1885  00FCA1  2F                 	db	47
  1886  00FCA2  2F                 	db	47
  1887  00FCA3  2D                 	db	45
  1888  00FCA4  2D                 	db	45
  1889  00FCA5  00                 	db	0
  1890  00FCA6  00                 	db	0
  1891  00FCA7  00                 	db	0
  1892  00FCA8  00                 	db	0
  1893  00FCA9  00                 	db	0
  1894  00FCAA  00                 	db	0
  1895  00FCAB  00                 	db	0
  1896  00FCAC  00                 	db	0
  1897  00FCAD  00                 	db	0
  1898  00FCAE  00                 	db	0
  1899  00FCAF  00                 	db	0
  1900  00FCB0  00                 	db	0
  1901  00FCB1  00                 	db	0
  1902  00FCB2  00                 	db	0
  1903  00FCB3  7C                 	db	124
  1904  00FCB4  7C                 	db	124
  1905  00FCB5  2F                 	db	47
  1906  00FCB6  2F                 	db	47
  1907  00FCB7  2D                 	db	45
  1908  00FCB8  2D                 	db	45
  1909  00FCB9  5C                 	db	92
  1910  00FCBA  5C                 	db	92
  1911  00FCBB  00                 	db	0
  1912  00FCBC  00                 	db	0
  1913  00FCBD  00                 	db	0
  1914  00FCBE  00                 	db	0
  1915  00FCBF  00                 	db	0
  1916  00FCC0  00                 	db	0
  1917  00FCC1  00                 	db	0
  1918  00FCC2  00                 	db	0
  1919  00FCC3  00                 	db	0
  1920  00FCC4  00                 	db	0
  1921  00FCC5  00                 	db	0
  1922  00FCC6  00                 	db	0
  1923  00FCC7  4F                 	db	79
  1924  00FCC8  4F                 	db	79
  1925  00FCC9  4F                 	db	79
  1926  00FCCA  4F                 	db	79
  1927  00FCCB  4F                 	db	79
  1928  00FCCC  4F                 	db	79
  1929  00FCCD  2D                 	db	45
  1930  00FCCE  2D                 	db	45
  1931  00FCCF  5F                 	db	95
  1932  00FCD0  5F                 	db	95
  1933  00FCD1  2D                 	db	45
  1934  00FCD2  00                 	db	0
  1935  00FCD3  00                 	db	0
  1936  00FCD4  00                 	db	0
  1937  00FCD5  00                 	db	0
  1938  00FCD6  00                 	db	0
  1939  00FCD7  00                 	db	0
  1940  00FCD8  00                 	db	0
  1941  00FCD9  00                 	db	0
  1942  00FCDA  00                 	db	0
  1943  00FCDB  76                 	db	118
  1944  00FCDC  76                 	db	118
  1945  00FCDD  3C                 	db	60
  1946  00FCDE  3C                 	db	60
  1947  00FCDF  5E                 	db	94
  1948  00FCE0  5E                 	db	94
  1949  00FCE1  3E                 	db	62
  1950  00FCE2  3E                 	db	62
  1951  00FCE3  00                 	db	0
  1952  00FCE4  00                 	db	0
  1953  00FCE5  00                 	db	0
  1954  00FCE6  00                 	db	0
  1955  00FCE7  00                 	db	0
  1956  00FCE8  00                 	db	0
  1957  00FCE9  00                 	db	0
  1958  00FCEA  00                 	db	0
  1959  00FCEB  00                 	db	0
  1960  00FCEC  00                 	db	0
  1961  00FCED  00                 	db	0
  1962  00FCEE  00                 	db	0
  1963  00FCEF  2E                 	db	46
  1964  00FCF0  2E                 	db	46
  1965  00FCF1  2A                 	db	42
  1966  00FCF2  2A                 	db	42
  1967  00FCF3  78                 	db	120
  1968  00FCF4  23                 	db	35
  1969  00FCF5  78                 	db	120
  1970  00FCF6  23                 	db	35
  1971  00FCF7  58                 	db	88
  1972  00FCF8  58                 	db	88
  1973  00FCF9  7C                 	db	124
  1974  00FCFA  7C                 	db	124
  1975  00FCFB  2D                 	db	45
  1976  00FCFC  2D                 	db	45
  1977  00FCFD  00                 	db	0
  1978  00FCFE  00                 	db	0
  1979  00FCFF  00                 	db	0
  1980  00FD00  00                 	db	0
  1981  00FD01  00                 	db	0
  1982  00FD02  00                 	db	0
  1983  00FD03  2E                 	db	46
  1984  00FD04  2E                 	db	46
  1985  00FD05  6F                 	db	111
  1986  00FD06  6F                 	db	111
  1987  00FD07  4F                 	db	79
  1988  00FD08  4F                 	db	79
  1989  00FD09  6F                 	db	111
  1990  00FD0A  6F                 	db	111
  1991  00FD0B  00                 	db	0
  1992  00FD0C  00                 	db	0
  1993  00FD0D  00                 	db	0
  1994  00FD0E  00                 	db	0
  1995  00FD0F  00                 	db	0
  1996  00FD10  00                 	db	0
  1997  00FD11  00                 	db	0
  1998  00FD12  00                 	db	0
  1999  00FD13  00                 	db	0
  2000  00FD14  00                 	db	0
  2001  00FD15  00                 	db	0
  2002  00FD16  00                 	db	0
  2003  00FD17                     __end_of_spin:
  2004                           	opt callstack 0
  2005  00FD17  0000               	dw	0
  2006  00FD19  3F80               	dw	16256
  2007  00FD1B  0000               	dw	0
  2008  00FD1D  3FC0               	dw	16320
  2009  00FD1F                     __end_of_bp:
  2010                           	opt callstack 0
  2011  00FD1F  AA00               	dw	43520
  2012  00FD21  3FB8               	dw	16312
  2013  00FD23                     __end_of_ivln2_h:
  2014                           	opt callstack 0
  2015  00FD23  23C6               	dw	9158
  2016  00FD25  B8F6               	dw	47350
  2017  00FD27                     __end_of_cp_l:
  2018                           	opt callstack 0
  2019  00FD27  4000               	dw	16384
  2020  00FD29  3F76               	dw	16246
  2021  00FD2B                     __end_of_cp_h:
  2022                           	opt callstack 0
  2023  0000                     _IVTADL	set	14493
  2024  0000                     _IVTADH	set	14494
  2025  0000                     _IVTADU	set	14495
  2026  0000                     _PIR6bits	set	14758
  2027  0000                     _PIR4bits	set	14756
  2028  0000                     _PIE8bits	set	14744
  2029  0000                     _PIR8bits	set	14760
  2030  0000                     _SCANPR	set	14839
  2031  0000                     _DMA2PR	set	14836
  2032  0000                     _DMA1PR	set	14835
  2033  0000                     _MAINPR	set	14834
  2034  0000                     _ISRPR	set	14833
  2035  0000                     _PIE2bits	set	14738
  2036  0000                     _PIR2bits	set	14754
  2037  0000                     _PIE9bits	set	14745
  2038  0000                     _PIR9bits	set	14761
  2039  0000                     _PIE6bits	set	14742
  2040  0000                     _PIE3bits	set	14739
  2041  0000                     _PMD7	set	14791
  2042  0000                     _PMD6	set	14790
  2043  0000                     _PMD5	set	14789
  2044  0000                     _PMD4	set	14788
  2045  0000                     _PMD3	set	14787
  2046  0000                     _PMD2	set	14786
  2047  0000                     _PMD1	set	14785
  2048  0000                     _PMD0	set	14784
  2049  0000                     _OSCTUNE	set	14814
  2050  0000                     _OSCFRQ	set	14815
  2051  0000                     _OSCEN	set	14813
  2052  0000                     _OSCCON3	set	14811
  2053  0000                     _OSCCON1	set	14809
  2054  0000                     _IPR8bits	set	14728
  2055  0000                     _IPR9bits	set	14729
  2056  0000                     _IPR5bits	set	14725
  2057  0000                     _IPR1bits	set	14721
  2058  0000                     _IPR3bits	set	14723
  2059  0000                     _IPR6bits	set	14726
  2060  0000                     _IPR2bits	set	14722
  2061  0000                     _PIE5bits	set	14741
  2062  0000                     _PIE1bits	set	14737
  2063  0000                     _PIR5bits	set	14757
  2064  0000                     _PIR1bits	set	14753
  2065  0000                     _PLLR	set	118496
  2066  0000                     _SPI1SDIPPS	set	15071
  2067  0000                     _U1RXPPS	set	15077
  2068  0000                     _RC6PPS	set	14870
  2069  0000                     _RC5PPS	set	14869
  2070  0000                     _INT1PPS	set	15041
  2071  0000                     _RD1PPS	set	14873
  2072  0000                     _INT0PPS	set	15040
  2073  0000                     _RC3PPS	set	14867
  2074  0000                     _RB6PPS	set	14862
  2075  0000                     _SPI1SCKPPS	set	15070
  2076  0000                     _U2RXPPS	set	15080
  2077  0000                     _SLRCONF	set	14995
  2078  0000                     _SLRCONE	set	14979
  2079  0000                     _SLRCOND	set	14963
  2080  0000                     _SLRCONC	set	14947
  2081  0000                     _SLRCONB	set	14931
  2082  0000                     _SLRCONA	set	14915
  2083  0000                     _ODCOND	set	14962
  2084  0000                     _ODCONC	set	14946
  2085  0000                     _ODCONB	set	14930
  2086  0000                     _ODCONA	set	14914
  2087  0000                     _ODCONF	set	14994
  2088  0000                     _ODCONE	set	14978
  2089  0000                     _WPUC	set	14945
  2090  0000                     _WPUA	set	14913
  2091  0000                     _WPUB	set	14929
  2092  0000                     _WPUE	set	14977
  2093  0000                     _WPUF	set	14993
  2094  0000                     _WPUD	set	14961
  2095  0000                     _ANSELA	set	14912
  2096  0000                     _ANSELF	set	14992
  2097  0000                     _ANSELE	set	14976
  2098  0000                     _ANSELB	set	14928
  2099  0000                     _ANSELC	set	14944
  2100  0000                     _ANSELD	set	14960
  2101  0000                     _DMA2SSA	set	15321
  2102  0000                     _DMA1SSA	set	15353
  2103  0000                     _DMA2DSZ	set	15310
  2104  0000                     _DMA2SSZ	set	15319
  2105  0000                     _DMA2DSA	set	15312
  2106  0000                     _DMA1DSZ	set	15342
  2107  0000                     _DMA1SSZ	set	15351
  2108  0000                     _DMA1DSA	set	15344
  2109  0000                     _DMA2CON0bits	set	15324
  2110  0000                     _DMA2CON1bits	set	15325
  2111  0000                     _DMA1CON0bits	set	15356
  2112  0000                     _DMA1CON1bits	set	15357
  2113  0000                     _DMA2CON0	set	15324
  2114  0000                     _DMA2AIRQ	set	15326
  2115  0000                     _DMA2SIRQ	set	15327
  2116  0000                     _DMA2CON1	set	15325
  2117  0000                     _DMA1CON0	set	15356
  2118  0000                     _DMA1AIRQ	set	15358
  2119  0000                     _DMA1SIRQ	set	15359
  2120  0000                     _DMA1CON1	set	15357
  2121  0000                     _CLKRCON	set	15589
  2122  0000                     _CLKRCLK	set	15590
  2123  0000                     _SPI1INTFbits	set	15642
  2124  0000                     _SPI1RXB	set	15632
  2125  0000                     _SPI1TXB	set	15633
  2126  0000                     _SPI1TCNTL	set	15634
  2127  0000                     _SPI1CON0	set	15636
  2128  0000                     _SPI1CLK	set	15644
  2129  0000                     _SPI1BAUD	set	15641
  2130  0000                     _SPI1CON2	set	15638
  2131  0000                     _SPI1CON1	set	15637
  2132  0000                     _U2RXB	set	15824
  2133  0000                     _U2TXB	set	15826
  2134  0000                     _U2ERRIE	set	15842
  2135  0000                     _U2ERRIR	set	15841
  2136  0000                     _U2UIR	set	15840
  2137  0000                     _U2FIFO	set	15839
  2138  0000                     _U2BRGH	set	15838
  2139  0000                     _U2BRGL	set	15837
  2140  0000                     _U2CON2	set	15836
  2141  0000                     _U2CON1	set	15835
  2142  0000                     _U2CON0	set	15834
  2143  0000                     _U2P3L	set	15832
  2144  0000                     _U2P2L	set	15830
  2145  0000                     _U2P1L	set	15828
  2146  0000                     _U1RXB	set	15848
  2147  0000                     _U1ERRIE	set	15866
  2148  0000                     _U1ERRIR	set	15865
  2149  0000                     _U1UIR	set	15864
  2150  0000                     _U1FIFO	set	15863
  2151  0000                     _U1BRGH	set	15862
  2152  0000                     _U1BRGL	set	15861
  2153  0000                     _U1CON2	set	15860
  2154  0000                     _U1CON1	set	15859
  2155  0000                     _U1CON0	set	15858
  2156  0000                     _U1P3H	set	15857
  2157  0000                     _U1P3L	set	15856
  2158  0000                     _U1P2H	set	15855
  2159  0000                     _U1P2L	set	15854
  2160  0000                     _U1P1H	set	15853
  2161  0000                     _U1P1L	set	15852
  2162  0000                     _FVRCON	set	16065
  2163  0000                     _ADFLTRL	set	16102
  2164  0000                     _ADFLTRH	set	16103
  2165  0000                     _ADCON0bits	set	16120
  2166  0000                     _ADCON0	set	16120
  2167  0000                     _ADCLK	set	16127
  2168  0000                     _ADACT	set	16126
  2169  0000                     _ADREF	set	16125
  2170  0000                     _ADSTAT	set	16124
  2171  0000                     _ADCON3	set	16123
  2172  0000                     _ADCON2	set	16122
  2173  0000                     _ADCON1	set	16121
  2174  0000                     _ADPREH	set	16119
  2175  0000                     _ADPREL	set	16118
  2176  0000                     _ADCAP	set	16117
  2177  0000                     _ADACQH	set	16116
  2178  0000                     _ADACQL	set	16115
  2179  0000                     _ADPCH	set	16113
  2180  0000                     _ADRPT	set	16108
  2181  0000                     _ADACCU	set	16106
  2182  0000                     _ADSTPTH	set	16101
  2183  0000                     _ADSTPTL	set	16100
  2184  0000                     _ADUTHH	set	16097
  2185  0000                     _ADUTHL	set	16096
  2186  0000                     _ADLTHH	set	16095
  2187  0000                     _ADLTHL	set	16094
  2188  0000                     _CCPTMRS1bits	set	16223
  2189  0000                     _PORTFbits	set	16335
  2190  0000                     _LATCbits	set	16316
  2191  0000                     _LATDbits	set	16317
  2192  0000                     _PORTBbits	set	16331
  2193  0000                     _T3CONbits	set	16294
  2194  0000                     _T3CON	set	16294
  2195  0000                     _TMR3L	set	16292
  2196  0000                     _TMR3H	set	16293
  2197  0000                     _T3CLK	set	16297
  2198  0000                     _T3GATE	set	16296
  2199  0000                     _T3GCON	set	16295
  2200  0000                     _T2CON	set	16300
  2201  0000                     _T2TMR	set	16298
  2202  0000                     _T2PR	set	16299
  2203  0000                     _T2RST	set	16303
  2204  0000                     _T2HLT	set	16301
  2205  0000                     _T2CLKCON	set	16302
  2206  0000                     _PWM8DCL	set	16224
  2207  0000                     _PWM8DCH	set	16225
  2208  0000                     _PWM8CON	set	16226
  2209  0000                     _LATEbits	set	16318
  2210  0000                     _T5CONbits	set	16282
  2211  0000                     _T5CON	set	16282
  2212  0000                     _TMR5L	set	16280
  2213  0000                     _TMR5H	set	16281
  2214  0000                     _T5CLK	set	16285
  2215  0000                     _T5GATE	set	16284
  2216  0000                     _T5GCON	set	16283
  2217  0000                     _T6CON	set	16276
  2218  0000                     _T6TMR	set	16274
  2219  0000                     _T6PR	set	16275
  2220  0000                     _T6RST	set	16279
  2221  0000                     _T6HLT	set	16277
  2222  0000                     _T6CLKCON	set	16278
  2223  0000                     _TRISD	set	16325
  2224  0000                     _TRISC	set	16324
  2225  0000                     _TRISB	set	16323
  2226  0000                     _TRISA	set	16322
  2227  0000                     _TRISF	set	16327
  2228  0000                     _TRISE	set	16326
  2229  0000                     _LATC	set	16316
  2230  0000                     _LATB	set	16315
  2231  0000                     _LATF	set	16319
  2232  0000                     _LATA	set	16314
  2233  0000                     _LATD	set	16317
  2234  0000                     _LATE	set	16318
  2235  0000                     _IVTLOCKbits	set	16340
  2236  0000                     _IVTLOCK	set	16340
  2237  0000                     _INTCON0bits	set	16338
  2238  0000                     _GIE	set	130711
  2239  00FD2B                     STR_55:
  2240                           
  2241                           ; BSR set to: 57
  2242  00FD2B  20                 	db	32
  2243  00FD2C  25                 	db	37
  2244  00FD2D  6C                 	db	108	;'l'
  2245  00FD2E  75                 	db	117	;'u'
  2246  00FD2F  2C                 	db	44
  2247  00FD30  25                 	db	37
  2248  00FD31  34                 	db	52	;'4'
  2249  00FD32  2E                 	db	46
  2250  00FD33  34                 	db	52	;'4'
  2251  00FD34  66                 	db	102	;'f'
  2252  00FD35  2C                 	db	44
  2253  00FD36  25                 	db	37
  2254  00FD37  34                 	db	52	;'4'
  2255  00FD38  2E                 	db	46
  2256  00FD39  34                 	db	52	;'4'
  2257  00FD3A  66                 	db	102	;'f'
  2258  00FD3B  2C                 	db	44
  2259  00FD3C  25                 	db	37
  2260  00FD3D  34                 	db	52	;'4'
  2261  00FD3E  2E                 	db	46
  2262  00FD3F  34                 	db	52	;'4'
  2263  00FD40  66                 	db	102	;'f'
  2264  00FD41  2C                 	db	44
  2265  00FD42  25                 	db	37
  2266  00FD43  34                 	db	52	;'4'
  2267  00FD44  2E                 	db	46
  2268  00FD45  34                 	db	52	;'4'
  2269  00FD46  66                 	db	102	;'f'
  2270  00FD47  2C                 	db	44
  2271  00FD48  25                 	db	37
  2272  00FD49  34                 	db	52	;'4'
  2273  00FD4A  2E                 	db	46
  2274  00FD4B  33                 	db	51	;'3'
  2275  00FD4C  66                 	db	102	;'f'
  2276  00FD4D  2C                 	db	44
  2277  00FD4E  25                 	db	37
  2278  00FD4F  34                 	db	52	;'4'
  2279  00FD50  2E                 	db	46
  2280  00FD51  33                 	db	51	;'3'
  2281  00FD52  66                 	db	102	;'f'
  2282  00FD53  2C                 	db	44
  2283  00FD54  25                 	db	37
  2284  00FD55  34                 	db	52	;'4'
  2285  00FD56  2E                 	db	46
  2286  00FD57  33                 	db	51	;'3'
  2287  00FD58  66                 	db	102	;'f'
  2288  00FD59  2C                 	db	44
  2289  00FD5A  25                 	db	37
  2290  00FD5B  34                 	db	52	;'4'
  2291  00FD5C  2E                 	db	46
  2292  00FD5D  33                 	db	51	;'3'
  2293  00FD5E  66                 	db	102	;'f'
  2294  00FD5F  2C                 	db	44
  2295  00FD60  25                 	db	37
  2296  00FD61  34                 	db	52	;'4'
  2297  00FD62  2E                 	db	46
  2298  00FD63  33                 	db	51	;'3'
  2299  00FD64  66                 	db	102	;'f'
  2300  00FD65  2C                 	db	44
  2301  00FD66  25                 	db	37
  2302  00FD67  34                 	db	52	;'4'
  2303  00FD68  2E                 	db	46
  2304  00FD69  33                 	db	51	;'3'
  2305  00FD6A  66                 	db	102	;'f'
  2306  00FD6B  2C                 	db	44
  2307  00FD6C  25                 	db	37
  2308  00FD6D  34                 	db	52	;'4'
  2309  00FD6E  2E                 	db	46
  2310  00FD6F  33                 	db	51	;'3'
  2311  00FD70  64                 	db	100	;'d'
  2312  00FD71  2C                 	db	44
  2313  00FD72  25                 	db	37
  2314  00FD73  34                 	db	52	;'4'
  2315  00FD74  2E                 	db	46
  2316  00FD75  33                 	db	51	;'3'
  2317  00FD76  64                 	db	100	;'d'
  2318  00FD77  2C                 	db	44
  2319  00FD78  25                 	db	37
  2320  00FD79  32                 	db	50	;'2'
  2321  00FD7A  2E                 	db	46
  2322  00FD7B  36                 	db	54	;'6'
  2323  00FD7C  66                 	db	102	;'f'
  2324  00FD7D  0D                 	db	13
  2325  00FD7E  0A                 	db	10
  2326  00FD7F  00                 	db	0
  2327  00FD80                     STR_16:
  2328                           
  2329                           ; BSR set to: 57
  2330  00FD80  52                 	db	82	;'R'
  2331  00FD81  31                 	db	49	;'1'
  2332  00FD82  20                 	db	32
  2333  00FD83  25                 	db	37
  2334  00FD84  32                 	db	50	;'2'
  2335  00FD85  2E                 	db	46
  2336  00FD86  33                 	db	51	;'3'
  2337  00FD87  66                 	db	102	;'f'
  2338  00FD88  20                 	db	32
  2339  00FD89  25                 	db	37
  2340  00FD8A  33                 	db	51	;'3'
  2341  00FD8B  2E                 	db	46
  2342  00FD8C  34                 	db	52	;'4'
  2343  00FD8D  66                 	db	102	;'f'
  2344  00FD8E  20                 	db	32
  2345  00FD8F  20                 	db	32
  2346  00FD90  20                 	db	32
  2347  00FD91  20                 	db	32
  2348  00FD92  20                 	db	32
  2349  00FD93  20                 	db	32
  2350  00FD94  20                 	db	32
  2351  00FD95  20                 	db	32
  2352  00FD96  20                 	db	32
  2353  00FD97  20                 	db	32
  2354  00FD98  20                 	db	32
  2355  00FD99  00                 	db	0
  2356  00FD9A                     STR_17:
  2357                           
  2358                           ; BSR set to: 57
  2359  00FD9A  52                 	db	82	;'R'
  2360  00FD9B  32                 	db	50	;'2'
  2361  00FD9C  20                 	db	32
  2362  00FD9D  25                 	db	37
  2363  00FD9E  32                 	db	50	;'2'
  2364  00FD9F  2E                 	db	46
  2365  00FDA0  33                 	db	51	;'3'
  2366  00FDA1  66                 	db	102	;'f'
  2367  00FDA2  20                 	db	32
  2368  00FDA3  25                 	db	37
  2369  00FDA4  33                 	db	51	;'3'
  2370  00FDA5  2E                 	db	46
  2371  00FDA6  34                 	db	52	;'4'
  2372  00FDA7  66                 	db	102	;'f'
  2373  00FDA8  20                 	db	32
  2374  00FDA9  20                 	db	32
  2375  00FDAA  20                 	db	32
  2376  00FDAB  20                 	db	32
  2377  00FDAC  20                 	db	32
  2378  00FDAD  20                 	db	32
  2379  00FDAE  20                 	db	32
  2380  00FDAF  20                 	db	32
  2381  00FDB0  20                 	db	32
  2382  00FDB1  20                 	db	32
  2383  00FDB2  20                 	db	32
  2384  00FDB3  00                 	db	0
  2385  00FDB4                     
  2386                           ; BSR set to: 57
  2387  00FDB4  20                 	db	32
  2388  00FDB5  4D                 	db	77	;'M'
  2389  00FDB6  65                 	db	101	;'e'
  2390  00FDB7  73                 	db	115	;'s'
  2391  00FDB8  67                 	db	103	;'g'
  2392  00FDB9  20                 	db	32
  2393  00FDBA  25                 	db	37
  2394  00FDBB  64                 	db	100	;'d'
  2395  00FDBC  20                 	db	32
  2396  00FDBD  53                 	db	83	;'S'
  2397  00FDBE  74                 	db	116	;'t'
  2398  00FDBF  61                 	db	97	;'a'
  2399  00FDC0  63                 	db	99	;'c'
  2400  00FDC1  6B                 	db	107	;'k'
  2401  00FDC2  20                 	db	32
  2402  00FDC3  25                 	db	37
  2403  00FDC4  64                 	db	100	;'d'
  2404  00FDC5  20                 	db	32
  2405  00FDC6  20                 	db	32
  2406  00FDC7  20                 	db	32
  2407  00FDC8  20                 	db	32
  2408  00FDC9  20                 	db	32
  2409  00FDCA  20                 	db	32
  2410  00FDCB  00                 	db	0
  2411  00FDCC                     STR_9:
  2412                           
  2413                           ; BSR set to: 57
  2414  00FDCC  53                 	db	83	;'S'
  2415  00FDCD  20                 	db	32
  2416  00FDCE  53                 	db	83	;'S'
  2417  00FDCF  25                 	db	37
  2418  00FDD0  63                 	db	99	;'c'
  2419  00FDD1  43                 	db	67	;'C'
  2420  00FDD2  20                 	db	32
  2421  00FDD3  25                 	db	37
  2422  00FDD4  64                 	db	100	;'d'
  2423  00FDD5  20                 	db	32
  2424  00FDD6  25                 	db	37
  2425  00FDD7  32                 	db	50	;'2'
  2426  00FDD8  2E                 	db	46
  2427  00FDD9  34                 	db	52	;'4'
  2428  00FDDA  66                 	db	102	;'f'
  2429  00FDDB  20                 	db	32
  2430  00FDDC  20                 	db	32
  2431  00FDDD  20                 	db	32
  2432  00FDDE  20                 	db	32
  2433  00FDDF  20                 	db	32
  2434  00FDE0  20                 	db	32
  2435  00FDE1  20                 	db	32
  2436  00FDE2  00                 	db	0
  2437  00FDE3                     STR_15:
  2438                           
  2439                           ; BSR set to: 57
  2440  00FDE3  45                 	db	69	;'E'
  2441  00FDE4  53                 	db	83	;'S'
  2442  00FDE5  52                 	db	82	;'R'
  2443  00FDE6  20                 	db	32
  2444  00FDE7  20                 	db	32
  2445  00FDE8  25                 	db	37
  2446  00FDE9  32                 	db	50	;'2'
  2447  00FDEA  2E                 	db	46
  2448  00FDEB  36                 	db	54	;'6'
  2449  00FDEC  66                 	db	102	;'f'
  2450  00FDED  20                 	db	32
  2451  00FDEE  20                 	db	32
  2452  00FDEF  20                 	db	32
  2453  00FDF0  20                 	db	32
  2454  00FDF1  20                 	db	32
  2455  00FDF2  20                 	db	32
  2456  00FDF3  20                 	db	32
  2457  00FDF4  20                 	db	32
  2458  00FDF5  20                 	db	32
  2459  00FDF6  20                 	db	32
  2460  00FDF7  20                 	db	32
  2461  00FDF8  00                 	db	0
  2462  00FDF9                     STR_10:
  2463                           
  2464                           ; BSR set to: 57
  2465  00FDF9  53                 	db	83	;'S'
  2466  00FDFA  74                 	db	116	;'t'
  2467  00FDFB  61                 	db	97	;'a'
  2468  00FDFC  74                 	db	116	;'t'
  2469  00FDFD  69                 	db	105	;'i'
  2470  00FDFE  63                 	db	99	;'c'
  2471  00FDFF  20                 	db	32
  2472  00FE00  53                 	db	83	;'S'
  2473  00FE01  4F                 	db	79	;'O'
  2474  00FE02  43                 	db	67	;'C'
  2475  00FE03  20                 	db	32
  2476  00FE04  25                 	db	37
  2477  00FE05  64                 	db	100	;'d'
  2478  00FE06  20                 	db	32
  2479  00FE07  20                 	db	32
  2480  00FE08  20                 	db	32
  2481  00FE09  20                 	db	32
  2482  00FE0A  20                 	db	32
  2483  00FE0B  20                 	db	32
  2484  00FE0C  20                 	db	32
  2485  00FE0D  20                 	db	32
  2486  00FE0E  00                 	db	0
  2487  00FE0F                     STR_11:
  2488                           
  2489                           ; BSR set to: 57
  2490  00FE0F  42                 	db	66	;'B'
  2491  00FE10  61                 	db	97	;'a'
  2492  00FE11  74                 	db	116	;'t'
  2493  00FE12  74                 	db	116	;'t'
  2494  00FE13  65                 	db	101	;'e'
  2495  00FE14  72                 	db	114	;'r'
  2496  00FE15  79                 	db	121	;'y'
  2497  00FE16  20                 	db	32
  2498  00FE17  41                 	db	65	;'A'
  2499  00FE18  68                 	db	104	;'h'
  2500  00FE19  20                 	db	32
  2501  00FE1A  25                 	db	37
  2502  00FE1B  33                 	db	51	;'3'
  2503  00FE1C  2E                 	db	46
  2504  00FE1D  32                 	db	50	;'2'
  2505  00FE1E  66                 	db	102	;'f'
  2506  00FE1F  20                 	db	32
  2507  00FE20  20                 	db	32
  2508  00FE21  20                 	db	32
  2509  00FE22  20                 	db	32
  2510  00FE23  20                 	db	32
  2511  00FE24  00                 	db	0
  2512  00FE25                     STR_29:
  2513                           
  2514                           ; BSR set to: 57
  2515  00FE25  53                 	db	83	;'S'
  2516  00FE26  25                 	db	37
  2517  00FE27  63                 	db	99	;'c'
  2518  00FE28  43                 	db	67	;'C'
  2519  00FE29  20                 	db	32
  2520  00FE2A  25                 	db	37
  2521  00FE2B  64                 	db	100	;'d'
  2522  00FE2C  20                 	db	32
  2523  00FE2D  52                 	db	82	;'R'
  2524  00FE2E  55                 	db	85	;'U'
  2525  00FE2F  4E                 	db	78	;'N'
  2526  00FE30  20                 	db	32
  2527  00FE31  25                 	db	37
  2528  00FE32  64                 	db	100	;'d'
  2529  00FE33  20                 	db	32
  2530  00FE34  20                 	db	32
  2531  00FE35  20                 	db	32
  2532  00FE36  20                 	db	32
  2533  00FE37  20                 	db	32
  2534  00FE38  00                 	db	0
  2535  00FE39                     STR_28:
  2536                           
  2537                           ; BSR set to: 57
  2538  00FE39  42                 	db	66	;'B'
  2539  00FE3A  41                 	db	65	;'A'
  2540  00FE3B  48                 	db	72	;'H'
  2541  00FE3C  20                 	db	32
  2542  00FE3D  25                 	db	37
  2543  00FE3E  33                 	db	51	;'3'
  2544  00FE3F  2E                 	db	46
  2545  00FE40  32                 	db	50	;'2'
  2546  00FE41  66                 	db	102	;'f'
  2547  00FE42  20                 	db	32
  2548  00FE43  50                 	db	80	;'P'
  2549  00FE44  25                 	db	37
  2550  00FE45  33                 	db	51	;'3'
  2551  00FE46  2E                 	db	46
  2552  00FE47  32                 	db	50	;'2'
  2553  00FE48  66                 	db	102	;'f'
  2554  00FE49  20                 	db	32
  2555  00FE4A  20                 	db	32
  2556  00FE4B  20                 	db	32
  2557  00FE4C  00                 	db	0
  2558  00FE4D                     STR_48:
  2559                           
  2560                           ; BSR set to: 57
  2561  00FE4D  20                 	db	32
  2562  00FE4E  20                 	db	32
  2563  00FE4F  20                 	db	32
  2564  00FE50  20                 	db	32
  2565  00FE51  20                 	db	32
  2566  00FE52  20                 	db	32
  2567  00FE53  20                 	db	32
  2568  00FE54  20                 	db	32
  2569  00FE55  20                 	db	32
  2570  00FE56  20                 	db	32
  2571  00FE57  20                 	db	32
  2572  00FE58  20                 	db	32
  2573  00FE59  20                 	db	32
  2574  00FE5A  20                 	db	32
  2575  00FE5B  20                 	db	32
  2576  00FE5C  20                 	db	32
  2577  00FE5D  20                 	db	32
  2578  00FE5E  20                 	db	32
  2579  00FE5F  00                 	db	0
  2580  00FE60                     STR_38:
  2581                           
  2582                           ; BSR set to: 57
  2583  00FE60  48                 	db	72	;'H'
  2584  00FE61  45                 	db	69	;'E'
  2585  00FE62  4C                 	db	76	;'L'
  2586  00FE63  50                 	db	80	;'P'
  2587  00FE64  20                 	db	32
  2588  00FE65  25                 	db	37
  2589  00FE66  73                 	db	115	;'s'
  2590  00FE67  20                 	db	32
  2591  00FE68  20                 	db	32
  2592  00FE69  20                 	db	32
  2593  00FE6A  20                 	db	32
  2594  00FE6B  20                 	db	32
  2595  00FE6C  20                 	db	32
  2596  00FE6D  20                 	db	32
  2597  00FE6E  20                 	db	32
  2598  00FE6F  20                 	db	32
  2599  00FE70  20                 	db	32
  2600  00FE71  20                 	db	32
  2601  00FE72  00                 	db	0
  2602  00FE73                     
  2603                           ; BSR set to: 57
  2604  00FE73  44                 	db	68	;'D'
  2605  00FE74  49                 	db	73	;'I'
  2606  00FE75  53                 	db	83	;'S'
  2607  00FE76  50                 	db	80	;'P'
  2608  00FE77  4C                 	db	76	;'L'
  2609  00FE78  41                 	db	65	;'A'
  2610  00FE79  59                 	db	89	;'Y'
  2611  00FE7A  20                 	db	32
  2612  00FE7B  25                 	db	37
  2613  00FE7C  73                 	db	115	;'s'
  2614  00FE7D  20                 	db	32
  2615  00FE7E  20                 	db	32
  2616  00FE7F  20                 	db	32
  2617  00FE80  20                 	db	32
  2618  00FE81  20                 	db	32
  2619  00FE82  20                 	db	32
  2620  00FE83  20                 	db	32
  2621  00FE84  20                 	db	32
  2622  00FE85  00                 	db	0
  2623  00FE86                     STR_21:
  2624                           
  2625                           ; BSR set to: 57
  2626  00FE86  50                 	db	80	;'P'
  2627  00FE87  56                 	db	86	;'V'
  2628  00FE88  20                 	db	32
  2629  00FE89  20                 	db	32
  2630  00FE8A  20                 	db	32
  2631  00FE8B  50                 	db	80	;'P'
  2632  00FE8C  57                 	db	87	;'W'
  2633  00FE8D  52                 	db	82	;'R'
  2634  00FE8E  20                 	db	32
  2635  00FE8F  25                 	db	37
  2636  00FE90  33                 	db	51	;'3'
  2637  00FE91  2E                 	db	46
  2638  00FE92  32                 	db	50	;'2'
  2639  00FE93  66                 	db	102	;'f'
  2640  00FE94  20                 	db	32
  2641  00FE95  20                 	db	32
  2642  00FE96  20                 	db	32
  2643  00FE97  20                 	db	32
  2644  00FE98  00                 	db	0
  2645  00FE99                     STR_23:
  2646                           
  2647                           ; BSR set to: 57
  2648  00FE99  49                 	db	73	;'I'
  2649  00FE9A  4E                 	db	78	;'N'
  2650  00FE9B  56                 	db	86	;'V'
  2651  00FE9C  20                 	db	32
  2652  00FE9D  20                 	db	32
  2653  00FE9E  50                 	db	80	;'P'
  2654  00FE9F  57                 	db	87	;'W'
  2655  00FEA0  52                 	db	82	;'R'
  2656  00FEA1  20                 	db	32
  2657  00FEA2  25                 	db	37
  2658  00FEA3  33                 	db	51	;'3'
  2659  00FEA4  2E                 	db	46
  2660  00FEA5  32                 	db	50	;'2'
  2661  00FEA6  66                 	db	102	;'f'
  2662  00FEA7  20                 	db	32
  2663  00FEA8  20                 	db	32
  2664  00FEA9  20                 	db	32
  2665  00FEAA  20                 	db	32
  2666  00FEAB  00                 	db	0
  2667  00FEAC                     STR_22:
  2668                           
  2669                           ; BSR set to: 57
  2670  00FEAC  4C                 	db	76	;'L'
  2671  00FEAD  4F                 	db	79	;'O'
  2672  00FEAE  41                 	db	65	;'A'
  2673  00FEAF  44                 	db	68	;'D'
  2674  00FEB0  20                 	db	32
  2675  00FEB1  50                 	db	80	;'P'
  2676  00FEB2  57                 	db	87	;'W'
  2677  00FEB3  52                 	db	82	;'R'
  2678  00FEB4  20                 	db	32
  2679  00FEB5  25                 	db	37
  2680  00FEB6  33                 	db	51	;'3'
  2681  00FEB7  2E                 	db	46
  2682  00FEB8  32                 	db	50	;'2'
  2683  00FEB9  66                 	db	102	;'f'
  2684  00FEBA  20                 	db	32
  2685  00FEBB  20                 	db	32
  2686  00FEBC  20                 	db	32
  2687  00FEBD  20                 	db	32
  2688  00FEBE  00                 	db	0
  2689  00FEBF                     STR_27:
  2690                           
  2691                           ; BSR set to: 57
  2692  00FEBF  42                 	db	66	;'B'
  2693  00FEC0  41                 	db	65	;'A'
  2694  00FEC1  54                 	db	84	;'T'
  2695  00FEC2  54                 	db	84	;'T'
  2696  00FEC3  20                 	db	32
  2697  00FEC4  50                 	db	80	;'P'
  2698  00FEC5  57                 	db	87	;'W'
  2699  00FEC6  52                 	db	82	;'R'
  2700  00FEC7  20                 	db	32
  2701  00FEC8  25                 	db	37
  2702  00FEC9  33                 	db	51	;'3'
  2703  00FECA  2E                 	db	46
  2704  00FECB  32                 	db	50	;'2'
  2705  00FECC  66                 	db	102	;'f'
  2706  00FECD  20                 	db	32
  2707  00FECE  20                 	db	32
  2708  00FECF  20                 	db	32
  2709  00FED0  20                 	db	32
  2710  00FED1  00                 	db	0
  2711  00FED2                     STR_25:
  2712                           
  2713                           ; BSR set to: 57
  2714  00FED2  42                 	db	66	;'B'
  2715  00FED3  56                 	db	86	;'V'
  2716  00FED4  20                 	db	32
  2717  00FED5  25                 	db	37
  2718  00FED6  32                 	db	50	;'2'
  2719  00FED7  2E                 	db	46
  2720  00FED8  32                 	db	50	;'2'
  2721  00FED9  66                 	db	102	;'f'
  2722  00FEDA  20                 	db	32
  2723  00FEDB  42                 	db	66	;'B'
  2724  00FEDC  41                 	db	65	;'A'
  2725  00FEDD  20                 	db	32
  2726  00FEDE  25                 	db	37
  2727  00FEDF  32                 	db	50	;'2'
  2728  00FEE0  2E                 	db	46
  2729  00FEE1  32                 	db	50	;'2'
  2730  00FEE2  66                 	db	102	;'f'
  2731  00FEE3  20                 	db	32
  2732  00FEE4  00                 	db	0
  2733  00FEE5                     STR_26:
  2734                           
  2735                           ; BSR set to: 57
  2736  00FEE5  43                 	db	67	;'C'
  2737  00FEE6  56                 	db	86	;'V'
  2738  00FEE7  20                 	db	32
  2739  00FEE8  25                 	db	37
  2740  00FEE9  32                 	db	50	;'2'
  2741  00FEEA  2E                 	db	46
  2742  00FEEB  32                 	db	50	;'2'
  2743  00FEEC  66                 	db	102	;'f'
  2744  00FEED  20                 	db	32
  2745  00FEEE  4C                 	db	76	;'L'
  2746  00FEEF  41                 	db	65	;'A'
  2747  00FEF0  20                 	db	32
  2748  00FEF1  25                 	db	37
  2749  00FEF2  32                 	db	50	;'2'
  2750  00FEF3  2E                 	db	46
  2751  00FEF4  32                 	db	50	;'2'
  2752  00FEF5  66                 	db	102	;'f'
  2753  00FEF6  20                 	db	32
  2754  00FEF7  00                 	db	0
  2755  00FEF8                     STR_24:
  2756                           
  2757                           ; BSR set to: 57
  2758  00FEF8  50                 	db	80	;'P'
  2759  00FEF9  56                 	db	86	;'V'
  2760  00FEFA  20                 	db	32
  2761  00FEFB  25                 	db	37
  2762  00FEFC  32                 	db	50	;'2'
  2763  00FEFD  2E                 	db	46
  2764  00FEFE  32                 	db	50	;'2'
  2765  00FEFF  66                 	db	102	;'f'
  2766  00FF00  20                 	db	32
  2767  00FF01  50                 	db	80	;'P'
  2768  00FF02  41                 	db	65	;'A'
  2769  00FF03  20                 	db	32
  2770  00FF04  25                 	db	37
  2771  00FF05  32                 	db	50	;'2'
  2772  00FF06  2E                 	db	46
  2773  00FF07  32                 	db	50	;'2'
  2774  00FF08  66                 	db	102	;'f'
  2775  00FF09  20                 	db	32
  2776  00FF0A  00                 	db	0
  2777  00FF0B                     STR_8:
  2778                           
  2779                           ; BSR set to: 57
  2780  00FF0B  42                 	db	66	;'B'
  2781  00FF0C  56                 	db	86	;'V'
  2782  00FF0D  20                 	db	32
  2783  00FF0E  25                 	db	37
  2784  00FF0F  32                 	db	50	;'2'
  2785  00FF10  2E                 	db	46
  2786  00FF11  34                 	db	52	;'4'
  2787  00FF12  66                 	db	102	;'f'
  2788  00FF13  20                 	db	32
  2789  00FF14  20                 	db	32
  2790  00FF15  20                 	db	32
  2791  00FF16  20                 	db	32
  2792  00FF17  20                 	db	32
  2793  00FF18  20                 	db	32
  2794  00FF19  20                 	db	32
  2795  00FF1A  20                 	db	32
  2796  00FF1B  20                 	db	32
  2797  00FF1C  00                 	db	0
  2798  00FF1D                     STR_4:
  2799                           
  2800                           ; BSR set to: 57
  2801  00FF1D  20                 	db	32
  2802  00FF1E  4E                 	db	78	;'N'
  2803  00FF1F  53                 	db	83	;'S'
  2804  00FF20  41                 	db	65	;'A'
  2805  00FF21  53                 	db	83	;'S'
  2806  00FF22  50                 	db	80	;'P'
  2807  00FF23  4F                 	db	79	;'O'
  2808  00FF24  4F                 	db	79	;'O'
  2809  00FF25  4B                 	db	75	;'K'
  2810  00FF26  20                 	db	32
  2811  00FF27  20                 	db	32
  2812  00FF28  20                 	db	32
  2813  00FF29  20                 	db	32
  2814  00FF2A  20                 	db	32
  2815  00FF2B  20                 	db	32
  2816  00FF2C  20                 	db	32
  2817  00FF2D  00                 	db	0
  2818  00FF2E                     STR_12:
  2819                           
  2820                           ; BSR set to: 57
  2821  00FF2E  42                 	db	66	;'B'
  2822  00FF2F  61                 	db	97	;'a'
  2823  00FF30  74                 	db	116	;'t'
  2824  00FF31  74                 	db	116	;'t'
  2825  00FF32  65                 	db	101	;'e'
  2826  00FF33  72                 	db	114	;'r'
  2827  00FF34  79                 	db	121	;'y'
  2828  00FF35  20                 	db	32
  2829  00FF36  45                 	db	69	;'E'
  2830  00FF37  53                 	db	83	;'S'
  2831  00FF38  52                 	db	82	;'R'
  2832  00FF39  20                 	db	32
  2833  00FF3A  20                 	db	32
  2834  00FF3B  20                 	db	32
  2835  00FF3C  20                 	db	32
  2836  00FF3D  20                 	db	32
  2837  00FF3E  00                 	db	0
  2838  00FF3F                     STR_13:
  2839                           
  2840                           ; BSR set to: 57
  2841  00FF3F  43                 	db	67	;'C'
  2842  00FF40  61                 	db	97	;'a'
  2843  00FF41  6C                 	db	108	;'l'
  2844  00FF42  63                 	db	99	;'c'
  2845  00FF43  75                 	db	117	;'u'
  2846  00FF44  6C                 	db	108	;'l'
  2847  00FF45  61                 	db	97	;'a'
  2848  00FF46  74                 	db	116	;'t'
  2849  00FF47  69                 	db	105	;'i'
  2850  00FF48  6F                 	db	111	;'o'
  2851  00FF49  6E                 	db	110	;'n'
  2852  00FF4A  20                 	db	32
  2853  00FF4B  20                 	db	32
  2854  00FF4C  20                 	db	32
  2855  00FF4D  20                 	db	32
  2856  00FF4E  20                 	db	32
  2857  00FF4F  00                 	db	0
  2858  00FF50                     STR_1:
  2859                           
  2860                           ; BSR set to: 57
  2861  00FF50  20                 	db	32
  2862  00FF51  4D                 	db	77	;'M'
  2863  00FF52  42                 	db	66	;'B'
  2864  00FF53  4D                 	db	77	;'M'
  2865  00FF54  43                 	db	67	;'C'
  2866  00FF55  20                 	db	32
  2867  00FF56  53                 	db	83	;'S'
  2868  00FF57  4F                 	db	79	;'O'
  2869  00FF58  4C                 	db	76	;'L'
  2870  00FF59  41                 	db	65	;'A'
  2871  00FF5A  52                 	db	82	;'R'
  2872  00FF5B  4D                 	db	77	;'M'
  2873  00FF5C  4F                 	db	79	;'O'
  2874  00FF5D  4E                 	db	78	;'N'
  2875  00FF5E  20                 	db	32
  2876  00FF5F  20                 	db	32
  2877  00FF60  00                 	db	0
  2878  00FF61                     STR_20:
  2879                           
  2880                           ; BSR set to: 57
  2881  00FF61  25                 	db	37
  2882  00FF62  64                 	db	100	;'d'
  2883  00FF63  20                 	db	32
  2884  00FF64  25                 	db	37
  2885  00FF65  32                 	db	50	;'2'
  2886  00FF66  2E                 	db	46
  2887  00FF67  34                 	db	52	;'4'
  2888  00FF68  66                 	db	102	;'f'
  2889  00FF69  2C                 	db	44
  2890  00FF6A  20                 	db	32
  2891  00FF6B  25                 	db	37
  2892  00FF6C  64                 	db	100	;'d'
  2893  00FF6D  20                 	db	32
  2894  00FF6E  20                 	db	32
  2895  00FF6F  20                 	db	32
  2896  00FF70  23                 	db	35
  2897  00FF71  00                 	db	0
  2898  00FF72                     STR_14:
  2899                           
  2900                           ; BSR set to: 57
  2901  00FF72  43                 	db	67	;'C'
  2902  00FF73  68                 	db	104	;'h'
  2903  00FF74  65                 	db	101	;'e'
  2904  00FF75  63                 	db	99	;'c'
  2905  00FF76  6B                 	db	107	;'k'
  2906  00FF77  20                 	db	32
  2907  00FF78  33                 	db	51	;'3'
  2908  00FF79  30                 	db	48	;'0'
  2909  00FF7A  20                 	db	32
  2910  00FF7B  73                 	db	115	;'s'
  2911  00FF7C  65                 	db	101	;'e'
  2912  00FF7D  63                 	db	99	;'c'
  2913  00FF7E  6F                 	db	111	;'o'
  2914  00FF7F  6E                 	db	110	;'n'
  2915  00FF80  64                 	db	100	;'d'
  2916  00FF81  73                 	db	115	;'s'
  2917  00FF82  00                 	db	0
  2918  00FF83                     STR_18:
  2919                           
  2920                           ; BSR set to: 57
  2921  00FF83  25                 	db	37
  2922  00FF84  64                 	db	100	;'d'
  2923  00FF85  20                 	db	32
  2924  00FF86  25                 	db	37
  2925  00FF87  32                 	db	50	;'2'
  2926  00FF88  2E                 	db	46
  2927  00FF89  34                 	db	52	;'4'
  2928  00FF8A  66                 	db	102	;'f'
  2929  00FF8B  20                 	db	32
  2930  00FF8C  20                 	db	32
  2931  00FF8D  20                 	db	32
  2932  00FF8E  25                 	db	37
  2933  00FF8F  64                 	db	100	;'d'
  2934  00FF90  20                 	db	32
  2935  00FF91  20                 	db	32
  2936  00FF92  00                 	db	0
  2937  00FF93                     STR_42:
  2938                           
  2939                           ; BSR set to: 57
  2940  00FF93  76                 	db	118	;'v'
  2941  00FF94  74                 	db	116	;'t'
  2942  00FF95  65                 	db	101	;'e'
  2943  00FF96  72                 	db	114	;'r'
  2944  00FF97  6D                 	db	109	;'m'
  2945  00FF98  20                 	db	32
  2946  00FF99  25                 	db	37
  2947  00FF9A  78                 	db	120	;'x'
  2948  00FF9B  3A                 	db	58	;':'
  2949  00FF9C  25                 	db	37
  2950  00FF9D  78                 	db	120	;'x'
  2951  00FF9E  20                 	db	32
  2952  00FF9F  20                 	db	32
  2953  00FFA0  20                 	db	32
  2954  00FFA1  00                 	db	0
  2955  00FFA2                     STR_2:
  2956                           
  2957                           ; BSR set to: 57
  2958  00FFA2  20                 	db	32
  2959  00FFA3  56                 	db	86	;'V'
  2960  00FFA4  65                 	db	101	;'e'
  2961  00FFA5  72                 	db	114	;'r'
  2962  00FFA6  73                 	db	115	;'s'
  2963  00FFA7  69                 	db	105	;'i'
  2964  00FFA8  6F                 	db	111	;'o'
  2965  00FFA9  6E                 	db	110	;'n'
  2966  00FFAA  20                 	db	32
  2967  00FFAB  25                 	db	37
  2968  00FFAC  73                 	db	115	;'s'
  2969  00FFAD  20                 	db	32
  2970  00FFAE  20                 	db	32
  2971  00FFAF  20                 	db	32
  2972  00FFB0  00                 	db	0
  2973  00FFB1                     STR_36:
  2974                           
  2975                           ; BSR set to: 57
  2976  00FFB1  44                 	db	68	;'D'
  2977  00FFB2  65                 	db	101	;'e'
  2978  00FFB3  63                 	db	99	;'c'
  2979  00FFB4  20                 	db	32
  2980  00FFB5  31                 	db	49	;'1'
  2981  00FFB6  32                 	db	50	;'2'
  2982  00FFB7  20                 	db	32
  2983  00FFB8  32                 	db	50	;'2'
  2984  00FFB9  30                 	db	48	;'0'
  2985  00FFBA  31                 	db	49	;'1'
  2986  00FFBB  39                 	db	57	;'9'
  2987  00FFBC  00                 	db	0
  2988  00FFBD                     STR_40:
  2989                           
  2990                           ; BSR set to: 57
  2991  00FFBD  25                 	db	37
  2992  00FFBE  73                 	db	115	;'s'
  2993  00FFBF  20                 	db	32
  2994  00FFC0  20                 	db	32
  2995  00FFC1  20                 	db	32
  2996  00FFC2  20                 	db	32
  2997  00FFC3  20                 	db	32
  2998  00FFC4  20                 	db	32
  2999  00FFC5  20                 	db	32
  3000  00FFC6  00                 	db	0
  3001  00FFC7                     STR_37:
  3002                           
  3003                           ; BSR set to: 57
  3004  00FFC7  31                 	db	49	;'1'
  3005  00FFC8  30                 	db	48	;'0'
  3006  00FFC9  3A                 	db	58	;':'
  3007  00FFCA  30                 	db	48	;'0'
  3008  00FFCB  33                 	db	51	;'3'
  3009  00FFCC  3A                 	db	58	;':'
  3010  00FFCD  30                 	db	48	;'0'
  3011  00FFCE  38                 	db	56	;'8'
  3012  00FFCF  00                 	db	0
  3013  00FFD0                     STR_3:
  3014                           
  3015                           ; BSR set to: 57
  3016  00FFD0  31                 	db	49	;'1'
  3017  00FFD1  2E                 	db	46
  3018  00FFD2  30                 	db	48	;'0'
  3019  00FFD3  30                 	db	48	;'0'
  3020  00FFD4  33                 	db	51	;'3'
  3021  00FFD5  00                 	db	0
  3022  00FFD6                     STR_56:
  3023                           
  3024                           ; BSR set to: 57
  3025  00FFD6  49                 	db	73	;'I'
  3026  00FFD7  4E                 	db	78	;'N'
  3027  00FFD8  46                 	db	70	;'F'
  3028  00FFD9  00                 	db	0
  3029  00FFDA                     STR_60:
  3030                           
  3031                           ; BSR set to: 57
  3032  00FFDA  4E                 	db	78	;'N'
  3033  00FFDB  41                 	db	65	;'A'
  3034  00FFDC  4E                 	db	78	;'N'
  3035  00FFDD  00                 	db	0
  3036  00FFDE                     STR_57:
  3037                           
  3038                           ; BSR set to: 57
  3039  00FFDE  69                 	db	105	;'i'
  3040  00FFDF  6E                 	db	110	;'n'
  3041  00FFE0  66                 	db	102	;'f'
  3042  00FFE1  00                 	db	0
  3043  00FFE2                     STR_61:
  3044                           
  3045                           ; BSR set to: 57
  3046  00FFE2  6E                 	db	110	;'n'
  3047  00FFE3  61                 	db	97	;'a'
  3048  00FFE4  6E                 	db	110	;'n'
  3049  00FFE5  00                 	db	0
  3050  00FFE6                     STR_87:
  3051                           
  3052                           ; BSR set to: 57
  3053  00FFE6  6C                 	db	108	;'l'
  3054  00FFE7  58                 	db	88	;'X'
  3055  00FFE8  00                 	db	0
  3056  00FFE9                     STR_64:
  3057                           
  3058                           ; BSR set to: 57
  3059  00FFE9  6C                 	db	108	;'l'
  3060  00FFEA  64                 	db	100	;'d'
  3061  00FFEB  00                 	db	0
  3062  00FFEC                     STR_73:
  3063                           
  3064                           ; BSR set to: 57
  3065  00FFEC  6C                 	db	108	;'l'
  3066  00FFED  66                 	db	102	;'f'
  3067  00FFEE  00                 	db	0
  3068  00FFEF                     STR_68:
  3069                           
  3070                           ; BSR set to: 57
  3071  00FFEF  6C                 	db	108	;'l'
  3072  00FFF0  69                 	db	105	;'i'
  3073  00FFF1  00                 	db	0
  3074  00FFF2                     STR_78:
  3075                           
  3076                           ; BSR set to: 57
  3077  00FFF2  6C                 	db	108	;'l'
  3078  00FFF3  75                 	db	117	;'u'
  3079  00FFF4  00                 	db	0
  3080  00FFF5                     STR_83:
  3081                           
  3082                           ; BSR set to: 57
  3083  00FFF5  6C                 	db	108	;'l'
  3084  00FFF6  78                 	db	120	;'x'
  3085  00FFF7  00                 	db	0
  3086  00FFF8                     STR_34:
  3087                           
  3088                           ; BSR set to: 57
  3089  00FFF8  25                 	db	37
  3090  00FFF9  63                 	db	99	;'c'
  3091  00FFFA  00                 	db	0
  3092  00FFFB                     STR_33:
  3093                           
  3094                           ; BSR set to: 57
  3095  00FFFB  25                 	db	37
  3096  00FFFC  73                 	db	115	;'s'
  3097  00FFFD  00                 	db	0
  3098  0000                     
  3099                           ; #config settings
  3100  00FFFE  00                 	db	0	; dummy byte at the end
  3101  0000                     
  3102                           	psect	cinit
  3103  018D76                     __pcinit:
  3104                           	opt callstack 0
  3105  018D76                     start_initialization:
  3106                           	opt callstack 0
  3107  018D76                     __initialization:
  3108                           	opt callstack 0
  3109                           
  3110                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3111                           ; load TBLPTR registers with __pidataBIGRAM
  3112  018D76  0E4C               	movlw	low __pidataBIGRAM
  3113  018D78  6EF6               	movwf	tblptrl,c
  3114  018D7A  0E74               	movlw	high __pidataBIGRAM
  3115  018D7C  6EF7               	movwf	tblptrh,c
  3116  018D7E  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3117  018D80  6EF8               	movwf	tblptru,c
  3118  018D82  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3119  018D86  EE20 F200          	lfsr	2,512
  3120  018D8A                     copy_data0:
  3121  018D8A  0009               	tblrd		*+
  3122  018D8C  006F FFD7 FFEE     	movff	tablat,postinc0
  3123  018D92  50DD               	movf	postdec2,w,c
  3124  018D94  50D9               	movf	fsr2l,w,c
  3125  018D96  E1F9               	bnz	copy_data0
  3126  018D98  50DA               	movf	fsr2h,w,c
  3127  018D9A  E1F7               	bnz	copy_data0
  3128                           
  3129                           ; Initialize objects allocated to BANK2 (188 bytes)
  3130                           ; load TBLPTR registers with __pidataBANK2
  3131  018D9C  0EEC               	movlw	low __pidataBANK2
  3132  018D9E  6EF6               	movwf	tblptrl,c
  3133  018DA0  0E94               	movlw	high __pidataBANK2
  3134  018DA2  6EF7               	movwf	tblptrh,c
  3135  018DA4  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3136  018DA6  6EF8               	movwf	tblptru,c
  3137  018DA8  EE00  F200         	lfsr	0,__pdataBANK2
  3138  018DAC  EE20 F0BC          	lfsr	2,188
  3139  018DB0                     copy_data1:
  3140  018DB0  0009               	tblrd		*+
  3141  018DB2  006F FFD7 FFEE     	movff	tablat,postinc0
  3142  018DB8  50DD               	movf	postdec2,w,c
  3143  018DBA  50D9               	movf	fsr2l,w,c
  3144  018DBC  E1F9               	bnz	copy_data1
  3145                           
  3146                           ; Initialize objects allocated to BANK1 (243 bytes)
  3147                           ; load TBLPTR registers with __pidataBANK1
  3148  018DBE  0E90               	movlw	low __pidataBANK1
  3149  018DC0  6EF6               	movwf	tblptrl,c
  3150  018DC2  0E90               	movlw	high __pidataBANK1
  3151  018DC4  6EF7               	movwf	tblptrh,c
  3152  018DC6  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3153  018DC8  6EF8               	movwf	tblptru,c
  3154  018DCA  EE00  F100         	lfsr	0,__pdataBANK1
  3155  018DCE  EE20 F0F3          	lfsr	2,243
  3156  018DD2                     copy_data2:
  3157  018DD2  0009               	tblrd		*+
  3158  018DD4  006F FFD7 FFEE     	movff	tablat,postinc0
  3159  018DDA  50DD               	movf	postdec2,w,c
  3160  018DDC  50D9               	movf	fsr2l,w,c
  3161  018DDE  E1F9               	bnz	copy_data2
  3162                           
  3163                           ; Initialize objects allocated to BANK0 (54 bytes)
  3164                           ; load TBLPTR registers with __pidataBANK0
  3165  018DE0  0E3C               	movlw	low __pidataBANK0
  3166  018DE2  6EF6               	movwf	tblptrl,c
  3167  018DE4  0EA8               	movlw	high __pidataBANK0
  3168  018DE6  6EF7               	movwf	tblptrh,c
  3169  018DE8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3170  018DEA  6EF8               	movwf	tblptru,c
  3171  018DEC  EE00  F0C4         	lfsr	0,__pdataBANK0
  3172  018DF0  EE20 F036          	lfsr	2,54
  3173  018DF4                     copy_data3:
  3174  018DF4  0009               	tblrd		*+
  3175  018DF6  006F FFD7 FFEE     	movff	tablat,postinc0
  3176  018DFC  50DD               	movf	postdec2,w,c
  3177  018DFE  50D9               	movf	fsr2l,w,c
  3178  018E00  E1F9               	bnz	copy_data3
  3179                           
  3180                           ; Clear objects allocated to BIGRAM (290 bytes)
  3181  018E02  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3182  018E06  EE20 F122          	lfsr	2,290
  3183  018E0A                     clear_0:
  3184  018E0A  6AEE               	clrf	postinc0,c
  3185  018E0C  50DD               	movf	postdec2,w,c
  3186  018E0E  50D9               	movf	fsr2l,w,c
  3187  018E10  E1FC               	bnz	clear_0
  3188  018E12  50DA               	movf	fsr2h,w,c
  3189  018E14  E1FA               	bnz	clear_0
  3190                           
  3191                           ; Clear objects allocated to BANK5 (255 bytes)
  3192  018E16  EE01  F100         	lfsr	0,__pbssBANK5
  3193  018E1A  EE20 F0FF          	lfsr	2,255
  3194  018E1E                     clear_1:
  3195  018E1E  6AEE               	clrf	postinc0,c
  3196  018E20  50DD               	movf	postdec2,w,c
  3197  018E22  50D9               	movf	fsr2l,w,c
  3198  018E24  E1FC               	bnz	clear_1
  3199  018E26  50DA               	movf	fsr2h,w,c
  3200  018E28  E1FA               	bnz	clear_1
  3201                           
  3202                           ; Clear objects allocated to BANK4 (134 bytes)
  3203  018E2A  EE01  F000         	lfsr	0,__pbssBANK4
  3204  018E2E  0E86               	movlw	134
  3205  018E30                     clear_2:
  3206  018E30  6AEE               	clrf	postinc0,c
  3207  018E32  06E8               	decf	wreg,f,c
  3208  018E34  E1FD               	bnz	clear_2
  3209                           
  3210                           ; Clear objects allocated to BANK3 (228 bytes)
  3211  018E36  EE00  F300         	lfsr	0,__pbssBANK3
  3212  018E3A  0EE4               	movlw	228
  3213  018E3C                     clear_3:
  3214  018E3C  6AEE               	clrf	postinc0,c
  3215  018E3E  06E8               	decf	wreg,f,c
  3216  018E40  E1FD               	bnz	clear_3
  3217                           
  3218                           ; Clear objects allocated to BANK2 (65 bytes)
  3219  018E42  EE00  F2BC         	lfsr	0,__pbssBANK2
  3220  018E46  0E41               	movlw	65
  3221  018E48                     clear_4:
  3222  018E48  6AEE               	clrf	postinc0,c
  3223  018E4A  06E8               	decf	wreg,f,c
  3224  018E4C  E1FD               	bnz	clear_4
  3225                           
  3226                           ; Clear objects allocated to BANK1 (8 bytes)
  3227  018E4E  EE00  F1F3         	lfsr	0,__pbssBANK1
  3228  018E52  0E08               	movlw	8
  3229  018E54                     clear_5:
  3230  018E54  6AEE               	clrf	postinc0,c
  3231  018E56  06E8               	decf	wreg,f,c
  3232  018E58  E1FD               	bnz	clear_5
  3233                           
  3234                           ; Clear objects allocated to BANK0 (100 bytes)
  3235  018E5A  EE00  F060         	lfsr	0,__pbssBANK0
  3236  018E5E  0E64               	movlw	100
  3237  018E60                     clear_6:
  3238  018E60  6AEE               	clrf	postinc0,c
  3239  018E62  06E8               	decf	wreg,f,c
  3240  018E64  E1FD               	bnz	clear_6
  3241                           
  3242                           ; Clear objects allocated to COMRAM (23 bytes)
  3243  018E66  EE00  F021         	lfsr	0,__pbssCOMRAM
  3244  018E6A  0E17               	movlw	23
  3245  018E6C                     clear_7:
  3246  018E6C  6AEE               	clrf	postinc0,c
  3247  018E6E  06E8               	decf	wreg,f,c
  3248  018E70  E1FD               	bnz	clear_7
  3249                           
  3250                           ;
  3251                           ; Setup IVTBASE
  3252                           ;
  3253  018E72  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3254  018E74  6ED5               	movwf	213,c
  3255  018E76  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3256  018E78  6ED6               	movwf	214,c
  3257  018E7A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3258  018E7C  6ED7               	movwf	215,c
  3259  018E7E                     end_of_initialization:
  3260                           	opt callstack 0
  3261  018E7E                     __end_of__initialization:
  3262                           	opt callstack 0
  3263  018E7E  0100               	movlb	0
  3264  018E80  EFF8  F090         	goto	_main	;jump to C main() function
  3265                           
  3266                           	psect	bssCOMRAM
  3267  000021                     __pbssCOMRAM:
  3268                           	opt callstack 0
  3269  000021                     _width:
  3270                           	opt callstack 0
  3271  000021                     	ds	2
  3272  000023                     _prec:
  3273                           	opt callstack 0
  3274  000023                     	ds	2
  3275  000025                     _flags:
  3276                           	opt callstack 0
  3277  000025                     	ds	2
  3278  000027                     _timer3ReloadVal:
  3279                           	opt callstack 0
  3280  000027                     	ds	2
  3281  000029                     TMR5_ISR@CountCallBack:
  3282                           	opt callstack 0
  3283  000029                     	ds	2
  3284  00002B                     _timer5ReloadVal:
  3285                           	opt callstack 0
  3286  00002B                     	ds	2
  3287  00002D                     Volts_to_SOC@slot:
  3288                           	opt callstack 0
  3289  00002D                     	ds	1
  3290  00002E                     _mode_sw:
  3291                           	opt callstack 0
  3292  00002E                     	ds	1
  3293  00002F                     _uart2RxCount:
  3294                           	opt callstack 0
  3295  00002F                     	ds	1
  3296  000030                     _uart2RxTail:
  3297                           	opt callstack 0
  3298  000030                     	ds	1
  3299  000031                     _uart2RxHead:
  3300                           	opt callstack 0
  3301  000031                     	ds	1
  3302  000032                     _uart2TxBufferRemaining:
  3303                           	opt callstack 0
  3304  000032                     	ds	1
  3305  000033                     _uart2TxTail:
  3306                           	opt callstack 0
  3307  000033                     	ds	1
  3308  000034                     _uart2TxHead:
  3309                           	opt callstack 0
  3310  000034                     	ds	1
  3311  000035                     _uart1RxCount:
  3312                           	opt callstack 0
  3313  000035                     	ds	1
  3314  000036                     _uart1RxTail:
  3315                           	opt callstack 0
  3316  000036                     	ds	1
  3317  000037                     _uart1RxHead:
  3318                           	opt callstack 0
  3319  000037                     	ds	1
  3320                           
  3321                           	psect	bssBANK0
  3322  000060                     __pbssBANK0:
  3323                           	opt callstack 0
  3324  000060                     _spi_link:
  3325                           	opt callstack 0
  3326  000060                     	ds	12
  3327  00006C                     _uart1RxBuffer:
  3328                           	opt callstack 0
  3329  00006C                     	ds	8
  3330  000074                     spinners@s:
  3331                           	opt callstack 0
  3332  000074                     	ds	6
  3333  00007A                     floorf@F524:
  3334                           	opt callstack 0
  3335  00007A                     	ds	4
  3336  00007E                     fabsf@F463:
  3337                           	opt callstack 0
  3338  00007E                     	ds	4
  3339  000082                     ___fpclassifyf@F463:
  3340                           	opt callstack 0
  3341  000082                     	ds	4
  3342  000086                     calc_ror_data@bcror:
  3343                           	opt callstack 0
  3344  000086                     	ds	4
  3345  00008A                     calc_ror_data@bvror:
  3346                           	opt callstack 0
  3347  00008A                     	ds	4
  3348  00008E                     calc_model_data@bcror:
  3349                           	opt callstack 0
  3350  00008E                     	ds	4
  3351  000092                     calc_model_data@bvror:
  3352                           	opt callstack 0
  3353  000092                     	ds	4
  3354  000096                     _utctime:
  3355                           	opt callstack 0
  3356  000096                     	ds	4
  3357  00009A                     wdtdelay@dcount:
  3358                           	opt callstack 0
  3359  00009A                     	ds	4
  3360  00009E                     _P:
  3361                           	opt callstack 0
  3362  00009E                     	ds	4
  3363  0000A2                     _TMR3_InterruptHandler:
  3364                           	opt callstack 0
  3365  0000A2                     	ds	3
  3366  0000A5                     _TMR5_InterruptHandler:
  3367                           	opt callstack 0
  3368  0000A5                     	ds	3
  3369  0000A8                     _TMR6_InterruptHandler:
  3370                           	opt callstack 0
  3371  0000A8                     	ds	3
  3372  0000AB                     _ADCC_ADTI_InterruptHandler:
  3373                           	opt callstack 0
  3374  0000AB                     	ds	3
  3375  0000AE                     _ADCC_ADI_InterruptHandler:
  3376                           	opt callstack 0
  3377  0000AE                     	ds	3
  3378  0000B1                     _UART1_RxInterruptHandler:
  3379                           	opt callstack 0
  3380  0000B1                     	ds	3
  3381  0000B4                     _UART2_TxInterruptHandler:
  3382                           	opt callstack 0
  3383  0000B4                     	ds	3
  3384  0000B7                     _UART2_RxInterruptHandler:
  3385                           	opt callstack 0
  3386  0000B7                     	ds	3
  3387  0000BA                     _INT1_InterruptHandler:
  3388                           	opt callstack 0
  3389  0000BA                     	ds	3
  3390  0000BD                     _INT0_InterruptHandler:
  3391                           	opt callstack 0
  3392  0000BD                     	ds	3
  3393  0000C0                     _nout:
  3394                           	opt callstack 0
  3395  0000C0                     	ds	2
  3396  0000C2                     TMR3_ISR@CountCallBack:
  3397                           	opt callstack 0
  3398  0000C2                     	ds	2
  3399                           
  3400                           	psect	dataBANK0
  3401  0000C4                     __pdataBANK0:
  3402                           	opt callstack 0
  3403  0000C4                     _R:
  3404                           	opt callstack 0
  3405  0000C4                     	ds	40
  3406  0000EC                     stoa@F1166:
  3407                           	opt callstack 0
  3408  0000EC                     	ds	7
  3409  0000F3                     _H:
  3410                           	opt callstack 0
  3411  0000F3                     	ds	7
  3412                           
  3413                           	psect	bssBANK1
  3414  0001F3                     __pbssBANK1:
  3415                           	opt callstack 0
  3416  0001F3                     _seed:
  3417                           	opt callstack 0
  3418  0001F3                     	ds	8
  3419                           
  3420                           	psect	dataBANK1
  3421  000100                     __pdataBANK1:
  3422                           	opt callstack 0
  3423  000100                     _C:
  3424                           	opt callstack 0
  3425  000100                     	ds	243
  3426                           
  3427                           	psect	bssBANK2
  3428  0002BC                     __pbssBANK2:
  3429                           	opt callstack 0
  3430  0002BC                     _S:
  3431                           	opt callstack 0
  3432  0002BC                     	ds	41
  3433  0002E5                     _tickCount:
  3434                           	opt callstack 0
  3435  0002E5                     	ds	24
  3436                           
  3437                           	psect	dataBANK2
  3438  000200                     __pdataBANK2:
  3439                           	opt callstack 0
  3440  000200                     _V:
  3441                           	opt callstack 0
  3442  000200                     	ds	188
  3443                           
  3444                           	psect	bssBANK3
  3445  000300                     __pbssBANK3:
  3446                           	opt callstack 0
  3447  000300                     lp_filter@smooth:
  3448                           	opt callstack 0
  3449  000300                     	ds	84
  3450  000354                     _uart2TxBuffer:
  3451                           	opt callstack 0
  3452  000354                     	ds	64
  3453  000394                     _dbuf:
  3454                           	opt callstack 0
  3455  000394                     	ds	80
  3456                           
  3457                           	psect	bssBANK4
  3458  000400                     __pbssBANK4:
  3459                           	opt callstack 0
  3460  000400                     _ring_buf2:
  3461                           	opt callstack 0
  3462  000400                     	ds	67
  3463  000443                     _ring_buf1:
  3464                           	opt callstack 0
  3465  000443                     	ds	67
  3466                           
  3467                           	psect	bssBANK5
  3468  000500                     __pbssBANK5:
  3469                           	opt callstack 0
  3470  000500                     _uart2RxBuffer:
  3471                           	opt callstack 0
  3472  000500                     	ds	255
  3473                           
  3474                           	psect	bssBIGRAM
  3475  0007FF                     __pbssBIGRAM:
  3476                           	opt callstack 0
  3477  0007FF                     _D:
  3478                           	opt callstack 0
  3479  0007FF                     	ds	290
  3480                           
  3481                           	psect	dataBIGRAM
  3482  0005FF                     __pdataBIGRAM:
  3483                           	opt callstack 0
  3484  0005FF                     _port_data:
  3485                           	opt callstack 0
  3486  0005FF                     	ds	512
  3487                           
  3488                           	psect	cstackBANK3
  3489  0003E4                     __pcstackBANK3:
  3490                           	opt callstack 0
  3491  0003E4                     ??_TMR3_ISR:
  3492                           
  3493                           ; 1 bytes @ 0x0
  3494  0003E4                     	ds	25
  3495                           
  3496                           	psect	cstackCOMRAM
  3497  000038                     __pcstackCOMRAM:
  3498                           	opt callstack 0
  3499  000038                     ??_ADCC_ThresholdISR:
  3500  000038                     
  3501                           ; 1 bytes @ 0x0
  3502  000038                     	ds	5
  3503  00003D                     ??_TMR6_ISR:
  3504                           
  3505                           ; 1 bytes @ 0x5
  3506  00003D                     	ds	1
  3507  00003E                     ??_INT1_ISR:
  3508  00003E                     
  3509                           ; 1 bytes @ 0x6
  3510  00003E                     	ds	4
  3511  000042                     ??_TMR5_ISR:
  3512                           
  3513                           ; 1 bytes @ 0xA
  3514  000042                     	ds	4
  3515                           
  3516 ;;
  3517 ;;Main: autosize = 6, tempsize = 0, incstack = 0, save=0
  3518 ;;
  3519 ;; *************** function _main *****************
  3520 ;; Defined at:
  3521 ;;		line 174 in file "main.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  k               1  [STACK] unsigned char 
  3526 ;;  j               1  [STACK] unsigned char 
  3527 ;;  i               1  [STACK] unsigned char 
  3528 ;;  inp_index       1  [STACK] unsigned char 
  3529 ;;  mode            1  [STACK] enum E17013
  3530 ;;  i_ror           1  [STACK] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1  [STACK] void 
  3533 ;; Registers used:
  3534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3544 ;;Total ram usage:        0 bytes
  3545 ;; Hardware stack levels required when called:   28
  3546 ;; This function calls:
  3547 ;;		_SYSTEM_Initialize
  3548 ;;		_StartTimer
  3549 ;;		_TimerDone
  3550 ;;		_WaitMs
  3551 ;;		___flge
  3552 ;;		_calc_model_data
  3553 ;;		_calc_ror_data
  3554 ;;		_check_adc_scan
  3555 ;;		_check_enter_button
  3556 ;;		_check_help
  3557 ;;		_clear_adc_scan
  3558 ;;		_clear_hid_pflags
  3559 ;;		_conv_raw_result
  3560 ;;		_convert_adc_data
  3561 ;;		_eaDogM_WriteCommand
  3562 ;;		_esr_check
  3563 ;;		_get_raw_result
  3564 ;;		_get_switch
  3565 ;;		_get_vterm_ptr
  3566 ;;		_hid_display
  3567 ;;		_init_bsoc
  3568 ;;		_init_display
  3569 ;;		_init_port_dma
  3570 ;;		_lp_filter
  3571 ;;		_mode_lamp_dim
  3572 ;;		_set_display_info
  3573 ;;		_set_load_relay_one
  3574 ;;		_set_load_relay_two
  3575 ;;		_set_vterm
  3576 ;;		_spinners
  3577 ;;		_sprintf
  3578 ;;		_srand
  3579 ;;		_start_adc_scan
  3580 ;;		_start_switch_handler
  3581 ;;		_static_soc
  3582 ;;		_update_lcd
  3583 ;; This function is called by:
  3584 ;;		Startup code after reset
  3585 ;; This function uses a reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text0
  3589  0121F0                     __ptext0:
  3590                           	opt callstack 0
  3591  0121F0                     _main:
  3592                           	opt callstack 0
  3593                           
  3594                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3595  0121F0  0E06               	movlw	6
  3596  0121F2  26E1               	addwf	fsr1l,f,c
  3597  0121F4  0E00               	movlw	0
  3598  0121F6  22E2               	addwfc	fsr1h,f,c
  3599                           
  3600                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3601                           ;stkvar	_inp_index @ sp[(-6)+3]
  3602                           
  3603                           ;incstack = 0
  3604  0121F8  0EFD               	movlw	-3
  3605  0121FA  6AE3               	clrf	plusw1,c
  3606                           
  3607                           ;stkvar	_i @ sp[(-6)+2]
  3608  0121FC  0EFC               	movlw	-4
  3609  0121FE  6AE3               	clrf	plusw1,c
  3610                           
  3611                           ;stkvar	_j @ sp[(-6)+1]
  3612  012200  0EFB               	movlw	-5
  3613  012202  6AE3               	clrf	plusw1,c
  3614  012204  2AE3               	incf	plusw1,f,c
  3615                           
  3616                           ;stkvar	_k @ sp[(-6)+0]
  3617  012206  0EFA               	movlw	-6
  3618  012208  6AE3               	clrf	plusw1,c
  3619  01220A  82E3               	bsf	plusw1,1,c
  3620                           
  3621                           ;main.c: 180:  SYSTEM_Initialize();
  3622  01220C  EC0B  F0D2         	call	_SYSTEM_Initialize	;wreg free
  3623                           
  3624                           ; BSR set to: 60
  3625                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3626  012210  8ED2               	bsf	210,7,c	;volatile
  3627                           
  3628                           ; BSR set to: 60
  3629                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3630  012212  8CD2               	bsf	210,6,c	;volatile
  3631                           
  3632                           ; BSR set to: 60
  3633                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3634  012214  0102               	movlb	2	; () banked
  3635  012216  6B00               	clrf	_V& (0+255),b	;volatile
  3636                           
  3637                           ; BSR set to: 2
  3638                           ;main.c: 193:  WaitMs(300);
  3639  012218  0E2C               	movlw	44
  3640  01221A  6EE6               	movwf	postinc1,c
  3641  01221C  0E01               	movlw	1
  3642  01221E  6EE6               	movwf	postinc1,c
  3643  012220  EC39  F0D4         	call	_WaitMs	;wreg free
  3644                           
  3645                           ;main.c: 194:  if (PORTBbits.RB0) {
  3646  012224  A0CB               	btfss	203,0,c	;volatile
  3647  012226  D004               	goto	l12318
  3648                           
  3649                           ;main.c: 195:   mode = UI_STATE_HOST;
  3650                           ;stkvar	_mode @ sp[(-6)+4]
  3651  012228  0EFE               	movlw	-2
  3652  01222A  6AE3               	clrf	plusw1,c
  3653  01222C  2AE3               	incf	plusw1,f,c
  3654                           
  3655                           ;main.c: 196:  } else {
  3656  01222E  D004               	goto	l12320
  3657  012230                     l12318:
  3658                           
  3659                           ;main.c: 197:   mode = UI_STATE_LOG;
  3660                           ;stkvar	_mode @ sp[(-6)+4]
  3661  012230  0EFE               	movlw	-2
  3662  012232  6AE3               	clrf	plusw1,c
  3663  012234  80E3               	bsf	plusw1,0,c
  3664  012236  82E3               	bsf	plusw1,1,c	;indir
  3665  012238                     l12320:
  3666                           
  3667                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3668                           ;stkvar	_mode @ sp[(-6)+4]
  3669  012238  0EFE               	movlw	-2
  3670  01223A  04E3               	decf	plusw1,w,c
  3671  01223C  A4D8               	btfss	status,2,c
  3672  01223E  D007               	goto	l1320
  3673                           
  3674                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3675  012240  80BD               	bsf	189,0,c	;volatile
  3676                           
  3677                           ;main.c: 202:   V.mode_pwm = 70;
  3678  012242  0E00               	movlw	0
  3679  012244  0102               	movlb	2	; () banked
  3680  012246  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3681  012248  0E46               	movlw	70
  3682  01224A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3683                           
  3684                           ;main.c: 203:  } else {
  3685  01224C  D004               	goto	l12324
  3686  01224E                     l1320:
  3687  01224E  90BD               	bcf	189,0,c	;volatile
  3688                           
  3689                           ;main.c: 205:   V.mode_pwm = 0;
  3690  012250  0102               	movlb	2	; () banked
  3691  012252  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3692  012254  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3693  012256                     l12324:
  3694                           
  3695                           ; BSR set to: 2
  3696                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3697  012256  0060  FA57  FFE6   	movff	_V+149,postinc1
  3698  01225C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3699  012262  EC01  F0D8         	call	_mode_lamp_dim	;wreg free
  3700  012266  D282               	goto	l12434
  3701  012268                     l12326:
  3702                           
  3703                           ; BSR set to: 2
  3704                           ;main.c: 215:    init_port_dma();
  3705  012268  ECBD  F0D4         	call	_init_port_dma	;wreg free
  3706                           
  3707                           ; BSR set to: 59
  3708                           ;main.c: 217:    init_display();
  3709  01226C  ECC2  F0C8         	call	_init_display	;wreg free
  3710                           
  3711                           ; BSR set to: 61
  3712                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3713  012270  0E0C               	movlw	12
  3714  012272  6EE6               	movwf	postinc1,c
  3715  012274  EC65  F0D8         	call	_eaDogM_WriteCommand	;wreg free
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;main.c: 222:    set_load_relay_one(1);
  3719  012278  0E01               	movlw	1
  3720  01227A  6EE6               	movwf	postinc1,c
  3721  01227C  EC55  F0D8         	call	_set_load_relay_one	;wreg free
  3722                           
  3723                           ;main.c: 223:    set_load_relay_two(1);
  3724  012280  0E01               	movlw	1
  3725  012282  6EE6               	movwf	postinc1,c
  3726  012284  EC4D  F0D8         	call	_set_load_relay_two	;wreg free
  3727                           
  3728                           ;main.c: 225:    V.ui_state = mode;
  3729                           ;stkvar	_mode @ sp[(-6)+4]
  3730  012288  0EFE               	movlw	-2
  3731  01228A  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3732                           
  3733                           ;main.c: 226:    srand(1957);
  3734  012290  0EA5               	movlw	165
  3735  012292  6EE6               	movwf	postinc1,c
  3736  012294  0E07               	movlw	7
  3737  012296  6EE6               	movwf	postinc1,c
  3738  012298  EC6F  F0D4         	call	_srand	;wreg free
  3739                           
  3740                           ; BSR set to: 1
  3741                           ;main.c: 227:    set_vterm(0);
  3742  01229C  0E00               	movlw	0
  3743  01229E  6EE6               	movwf	postinc1,c
  3744  0122A0  EC8E  F0D7         	call	_set_vterm	;wreg free
  3745                           
  3746                           ;main.c: 228:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3747  0122A4  0E50               	movlw	low STR_1
  3748  0122A6  6EE6               	movwf	postinc1,c
  3749  0122A8  0EFF               	movlw	high STR_1
  3750  0122AA  6EE6               	movwf	postinc1,c
  3751  0122AC  0E00               	movlw	0
  3752  0122AE  6EE6               	movwf	postinc1,c
  3753  0122B0  0E00               	movlw	0
  3754  0122B2  6EE6               	movwf	postinc1,c
  3755  0122B4  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  3756  0122B8  0060  F007  FFE6   	movff	btemp,postinc1
  3757  0122BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3758  0122C4  0E04               	movlw	4
  3759  0122C6  6EE6               	movwf	postinc1,c
  3760  0122C8  EC42  F0C7         	call	_sprintf	;wreg free
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;main.c: 229:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.003");
  3764  0122CC  0ED0               	movlw	low STR_3
  3765  0122CE  6EE6               	movwf	postinc1,c
  3766  0122D0  0EFF               	movlw	high STR_3
  3767  0122D2  6EE6               	movwf	postinc1,c
  3768  0122D4  0EA2               	movlw	low STR_2
  3769  0122D6  6EE6               	movwf	postinc1,c
  3770  0122D8  0EFF               	movlw	high STR_2
  3771  0122DA  6EE6               	movwf	postinc1,c
  3772  0122DC  0E00               	movlw	0
  3773  0122DE  6EE6               	movwf	postinc1,c
  3774  0122E0  0E01               	movlw	1
  3775  0122E2  6EE6               	movwf	postinc1,c
  3776  0122E4  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  3777  0122E8  0060  F007  FFE6   	movff	btemp,postinc1
  3778  0122EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3779  0122F4  0E06               	movlw	6
  3780  0122F6  6EE6               	movwf	postinc1,c
  3781  0122F8  EC42  F0C7         	call	_sprintf	;wreg free
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;main.c: 230:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3785  0122FC  0E1D               	movlw	low STR_4
  3786  0122FE  6EE6               	movwf	postinc1,c
  3787  012300  0EFF               	movlw	high STR_4
  3788  012302  6EE6               	movwf	postinc1,c
  3789  012304  0E00               	movlw	0
  3790  012306  6EE6               	movwf	postinc1,c
  3791  012308  0E02               	movlw	2
  3792  01230A  6EE6               	movwf	postinc1,c
  3793  01230C  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  3794  012310  0060  F007  FFE6   	movff	btemp,postinc1
  3795  012316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3796  01231C  0E04               	movlw	4
  3797  01231E  6EE6               	movwf	postinc1,c
  3798  012320  EC42  F0C7         	call	_sprintf	;wreg free
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;main.c: 231:    sprintf(get_vterm_ptr(0, 2), "                ");
  3802  012324  0E4F               	movlw	low (STR_48+2)
  3803  012326  6EE6               	movwf	postinc1,c
  3804  012328  0EFE               	movlw	high (STR_48+2)
  3805  01232A  6EE6               	movwf	postinc1,c
  3806  01232C  0E02               	movlw	2
  3807  01232E  6EE6               	movwf	postinc1,c
  3808  012330  0E00               	movlw	0
  3809  012332  6EE6               	movwf	postinc1,c
  3810  012334  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  3811  012338  0060  F007  FFE6   	movff	btemp,postinc1
  3812  01233E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3813  012344  0E04               	movlw	4
  3814  012346  6EE6               	movwf	postinc1,c
  3815  012348  EC42  F0C7         	call	_sprintf	;wreg free
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;main.c: 232:    sprintf(get_vterm_ptr(1, 2), "                ");
  3819  01234C  0E4F               	movlw	low (STR_48+2)
  3820  01234E  6EE6               	movwf	postinc1,c
  3821  012350  0EFE               	movlw	high (STR_48+2)
  3822  012352  6EE6               	movwf	postinc1,c
  3823  012354  0E02               	movlw	2
  3824  012356  6EE6               	movwf	postinc1,c
  3825  012358  0E01               	movlw	1
  3826  01235A  6EE6               	movwf	postinc1,c
  3827  01235C  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  3828  012360  0060  F007  FFE6   	movff	btemp,postinc1
  3829  012366  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3830  01236C  0E04               	movlw	4
  3831  01236E  6EE6               	movwf	postinc1,c
  3832  012370  EC42  F0C7         	call	_sprintf	;wreg free
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;main.c: 233:    sprintf(get_vterm_ptr(2, 2), "                ");
  3836  012374  0E4F               	movlw	low (STR_48+2)
  3837  012376  6EE6               	movwf	postinc1,c
  3838  012378  0EFE               	movlw	high (STR_48+2)
  3839  01237A  6EE6               	movwf	postinc1,c
  3840  01237C  0E02               	movlw	2
  3841  01237E  6EE6               	movwf	postinc1,c
  3842  012380  0E02               	movlw	2
  3843  012382  6EE6               	movwf	postinc1,c
  3844  012384  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  3845  012388  0060  F007  FFE6   	movff	btemp,postinc1
  3846  01238E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3847  012394  0E04               	movlw	4
  3848  012396  6EE6               	movwf	postinc1,c
  3849  012398  EC42  F0C7         	call	_sprintf	;wreg free
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;main.c: 234:    update_lcd(0);
  3853  01239C  0E00               	movlw	0
  3854  01239E  6EE6               	movwf	postinc1,c
  3855  0123A0  EC33  F0C6         	call	_update_lcd	;wreg free
  3856                           
  3857                           ;main.c: 235:    WaitMs(1000);
  3858  0123A4  0EE8               	movlw	232
  3859  0123A6  6EE6               	movwf	postinc1,c
  3860  0123A8  0E03               	movlw	3
  3861  0123AA  6EE6               	movwf	postinc1,c
  3862  0123AC  EC39  F0D4         	call	_WaitMs	;wreg free
  3863                           
  3864                           ;main.c: 236:    StartTimer(TMR_DISPLAY, 250);
  3865  0123B0  0EFA               	movlw	250
  3866  0123B2  6EE6               	movwf	postinc1,c
  3867  0123B4  0E00               	movlw	0
  3868  0123B6  6EE6               	movwf	postinc1,c
  3869  0123B8  0E0A               	movlw	10
  3870  0123BA  6EE6               	movwf	postinc1,c
  3871  0123BC  EC46  F0D3         	call	_StartTimer	;wreg free
  3872                           
  3873                           ;main.c: 237:    StartTimer(TMR_ADC, 200);
  3874  0123C0  0EC8               	movlw	200
  3875  0123C2  6EE6               	movwf	postinc1,c
  3876  0123C4  0E00               	movlw	0
  3877  0123C6  6EE6               	movwf	postinc1,c
  3878  0123C8  0E01               	movlw	1
  3879  0123CA  6EE6               	movwf	postinc1,c
  3880  0123CC  EC46  F0D3         	call	_StartTimer	;wreg free
  3881                           
  3882                           ;main.c: 238:    StartTimer(TMR_INFO, 3000);
  3883  0123D0  0EB8               	movlw	184
  3884  0123D2  6EE6               	movwf	postinc1,c
  3885  0123D4  0E0B               	movlw	11
  3886  0123D6  6EE6               	movwf	postinc1,c
  3887  0123D8  0E07               	movlw	7
  3888  0123DA  6EE6               	movwf	postinc1,c
  3889  0123DC  EC46  F0D3         	call	_StartTimer	;wreg free
  3890                           
  3891                           ;main.c: 239:    StartTimer(TMR_FLIPPER, 1500);
  3892  0123E0  0EDC               	movlw	220
  3893  0123E2  6EE6               	movwf	postinc1,c
  3894  0123E4  0E05               	movlw	5
  3895  0123E6  6EE6               	movwf	postinc1,c
  3896  0123E8  0E0B               	movlw	11
  3897  0123EA  6EE6               	movwf	postinc1,c
  3898  0123EC  EC46  F0D3         	call	_StartTimer	;wreg free
  3899                           
  3900                           ;main.c: 240:    StartTimer(TMR_HELPDIS, 3000);
  3901  0123F0  0EB8               	movlw	184
  3902  0123F2  6EE6               	movwf	postinc1,c
  3903  0123F4  0E0B               	movlw	11
  3904  0123F6  6EE6               	movwf	postinc1,c
  3905  0123F8  0E09               	movlw	9
  3906  0123FA  6EE6               	movwf	postinc1,c
  3907  0123FC  EC46  F0D3         	call	_StartTimer	;wreg free
  3908                           
  3909                           ;main.c: 242:    start_adc_scan();
  3910  012400  EC1E  F0D0         	call	_start_adc_scan	;wreg free
  3911                           
  3912                           ;main.c: 243:    start_switch_handler();
  3913  012404  EC6F  F0D7         	call	_start_switch_handler	;wreg free
  3914                           
  3915                           ; BSR set to: 57
  3916                           ;main.c: 244:    WaitMs(1000);
  3917  012408  0EE8               	movlw	232
  3918  01240A  6EE6               	movwf	postinc1,c
  3919  01240C  0E03               	movlw	3
  3920  01240E  6EE6               	movwf	postinc1,c
  3921  012410  EC39  F0D4         	call	_WaitMs	;wreg free
  3922                           
  3923                           ;main.c: 249:    i_ror = 1;
  3924                           ;stkvar	_i_ror @ sp[(-6)+5]
  3925  012414  0EFF               	movlw	-1
  3926  012416  6AE3               	clrf	plusw1,c
  3927  012418  2AE3               	incf	plusw1,f,c
  3928  01241A                     l12376:
  3929                           
  3930                           ;main.c: 251:     calc_ror_data();
  3931  01241A  EC82  F0BE         	call	_calc_ror_data	;wreg free
  3932                           
  3933                           ;main.c: 252:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  3934  01241E  0E00               	movlw	0
  3935  012420  6EE6               	movwf	postinc1,c
  3936  012422  0E04               	movlw	4
  3937  012424  6EE6               	movwf	postinc1,c
  3938  012426  EC02  F0A5         	call	_conv_raw_result	;wreg free
  3939  01242A  0060  F007  FFE6   	movff	btemp,postinc1
  3940  012430  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3941  012436  0060  F00F  FFE6   	movff	btemp+2,postinc1
  3942  01243C  0060  F013  FFE6   	movff	btemp+3,postinc1
  3943  012442  0E0B               	movlw	low STR_8
  3944  012444  6EE6               	movwf	postinc1,c
  3945  012446  0EFF               	movlw	high STR_8
  3946  012448  6EE6               	movwf	postinc1,c
  3947  01244A  0E00               	movlw	0
  3948  01244C  6EE6               	movwf	postinc1,c
  3949  01244E  0E01               	movlw	1
  3950  012450  6EE6               	movwf	postinc1,c
  3951  012452  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  3952  012456  0060  F007  FFE6   	movff	btemp,postinc1
  3953  01245C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3954  012462  0E08               	movlw	8
  3955  012464  6EE6               	movwf	postinc1,c
  3956  012466  EC42  F0C7         	call	_sprintf	;wreg free
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;main.c: 253:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  3960  01246A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3961  012470  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3962  012476  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3963  01247C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3964                           
  3965                           ;stkvar	_i_ror @ sp[(-10)+5]
  3966  012482  0EFB               	movlw	-5
  3967  012484  50E3               	movf	plusw1,w,c
  3968  012486  6EE6               	movwf	postinc1,c
  3969  012488  0E00               	movlw	0
  3970  01248A  6EE6               	movwf	postinc1,c
  3971  01248C  0E00               	movlw	0
  3972  01248E  6EE6               	movwf	postinc1,c
  3973  012490  0E05               	movlw	5
  3974  012492  6EE6               	movwf	postinc1,c
  3975  012494  EC37  F0C9         	call	_spinners	;wreg free
  3976  012498  5001               	movf	btemp^0,w,c
  3977  01249A  6EE6               	movwf	postinc1,c
  3978  01249C  0E00               	movlw	0
  3979  01249E  6EE6               	movwf	postinc1,c
  3980  0124A0  0ECC               	movlw	low STR_9
  3981  0124A2  6EE6               	movwf	postinc1,c
  3982  0124A4  0EFD               	movlw	high STR_9
  3983  0124A6  6EE6               	movwf	postinc1,c
  3984  0124A8  0E00               	movlw	0
  3985  0124AA  6EE6               	movwf	postinc1,c
  3986  0124AC  0E02               	movlw	2
  3987  0124AE  6EE6               	movwf	postinc1,c
  3988  0124B0  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  3989  0124B4  0060  F007  FFE6   	movff	btemp,postinc1
  3990  0124BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3991  0124C0  0E0C               	movlw	12
  3992  0124C2  6EE6               	movwf	postinc1,c
  3993  0124C4  EC42  F0C7         	call	_sprintf	;wreg free
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;main.c: 254:     update_lcd(0);
  3997  0124C8  0E00               	movlw	0
  3998  0124CA  6EE6               	movwf	postinc1,c
  3999  0124CC  EC33  F0C6         	call	_update_lcd	;wreg free
  4000                           
  4001                           ;main.c: 255:     WaitMs(2000);
  4002  0124D0  0ED0               	movlw	208
  4003  0124D2  6EE6               	movwf	postinc1,c
  4004  0124D4  0E07               	movlw	7
  4005  0124D6  6EE6               	movwf	postinc1,c
  4006  0124D8  EC39  F0D4         	call	_WaitMs	;wreg free
  4007                           
  4008                           ;main.c: 256:     clear_adc_scan();
  4009  0124DC  ECB3  F0D8         	call	_clear_adc_scan	;wreg free
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;main.c: 257:     start_adc_scan();
  4013  0124E0  EC1E  F0D0         	call	_start_adc_scan	;wreg free
  4014                           
  4015                           ;main.c: 258:     WaitMs(500);
  4016  0124E4  0EF4               	movlw	244
  4017  0124E6  6EE6               	movwf	postinc1,c
  4018  0124E8  0E01               	movlw	1
  4019  0124EA  6EE6               	movwf	postinc1,c
  4020  0124EC  EC39  F0D4         	call	_WaitMs	;wreg free
  4021                           
  4022                           ;main.c: 259:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4023                           ;stkvar	_i_ror @ sp[(-6)+5]
  4024  0124F0  0EFF               	movlw	-1
  4025  0124F2  006F FF8C  F00C    	movff	plusw1,btemp+11
  4026  0124F8  2A0C               	incf	(btemp+11)^0,f,c
  4027  0124FA  0060  F033  FFE3   	movff	btemp+11,plusw1
  4028  012500  060C               	decf	(btemp+11)^0,f,c
  4029  012502  0E1E               	movlw	30
  4030  012504  600C               	cpfslt	(btemp+11)^0,c
  4031  012506  D018               	goto	u11870
  4032  012508  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4033  01250E  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4034  012514  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4035  01251A  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4036  012520  0E42               	movlw	66
  4037  012522  6EE6               	movwf	postinc1,c
  4038  012524  0E60               	movlw	96
  4039  012526  6EE6               	movwf	postinc1,c
  4040  012528  0E65               	movlw	101
  4041  01252A  6EE6               	movwf	postinc1,c
  4042  01252C  0E3C               	movlw	60
  4043  01252E  6EE6               	movwf	postinc1,c
  4044  012530  ECAD  F0C0         	call	___flge	;wreg free
  4045  012534  A001               	btfss	btemp& (0+255),0,c
  4046  012536  D771               	goto	l12376
  4047  012538                     u11870:
  4048                           
  4049                           ;main.c: 261:    static_soc();
  4050  012538  ECE0  F0D6         	call	_static_soc	;wreg free
  4051                           
  4052                           ; BSR set to: 1
  4053                           ;main.c: 262:    init_bsoc();
  4054  01253C  ECF5  F0BF         	call	_init_bsoc	;wreg free
  4055                           
  4056                           ;main.c: 263:    set_load_relay_one(0);
  4057  012540  0E00               	movlw	0
  4058  012542  6EE6               	movwf	postinc1,c
  4059  012544  EC55  F0D8         	call	_set_load_relay_one	;wreg free
  4060                           
  4061                           ;main.c: 264:    set_load_relay_two(0);
  4062  012548  0E00               	movlw	0
  4063  01254A  6EE6               	movwf	postinc1,c
  4064  01254C  EC4D  F0D8         	call	_set_load_relay_two	;wreg free
  4065                           
  4066                           ;main.c: 265:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4067  012550  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4068  012556  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4069  01255C  0EF9               	movlw	low STR_10
  4070  01255E  6EE6               	movwf	postinc1,c
  4071  012560  0EFD               	movlw	high STR_10
  4072  012562  6EE6               	movwf	postinc1,c
  4073  012564  0E00               	movlw	0
  4074  012566  6EE6               	movwf	postinc1,c
  4075  012568  0E00               	movlw	0
  4076  01256A  6EE6               	movwf	postinc1,c
  4077  01256C  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4078  012570  0060  F007  FFE6   	movff	btemp,postinc1
  4079  012576  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4080  01257C  0E06               	movlw	6
  4081  01257E  6EE6               	movwf	postinc1,c
  4082  012580  EC42  F0C7         	call	_sprintf	;wreg free
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;main.c: 266:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4086  012584  0060  F633  FFE6   	movff	_C+140,postinc1
  4087  01258A  0060  F637  FFE6   	movff	_C+141,postinc1
  4088  012590  0060  F63B  FFE6   	movff	_C+142,postinc1
  4089  012596  0060  F63F  FFE6   	movff	_C+143,postinc1
  4090  01259C  0E0F               	movlw	low STR_11
  4091  01259E  6EE6               	movwf	postinc1,c
  4092  0125A0  0EFE               	movlw	high STR_11
  4093  0125A2  6EE6               	movwf	postinc1,c
  4094  0125A4  0E00               	movlw	0
  4095  0125A6  6EE6               	movwf	postinc1,c
  4096  0125A8  0E01               	movlw	1
  4097  0125AA  6EE6               	movwf	postinc1,c
  4098  0125AC  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4099  0125B0  0060  F007  FFE6   	movff	btemp,postinc1
  4100  0125B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4101  0125BC  0E08               	movlw	8
  4102  0125BE  6EE6               	movwf	postinc1,c
  4103  0125C0  EC42  F0C7         	call	_sprintf	;wreg free
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;main.c: 267:    update_lcd(0);
  4107  0125C4  0E00               	movlw	0
  4108  0125C6  6EE6               	movwf	postinc1,c
  4109  0125C8  EC33  F0C6         	call	_update_lcd	;wreg free
  4110                           
  4111                           ;main.c: 268:    WaitMs(2000);
  4112  0125CC  0ED0               	movlw	208
  4113  0125CE  6EE6               	movwf	postinc1,c
  4114  0125D0  0E07               	movlw	7
  4115  0125D2  6EE6               	movwf	postinc1,c
  4116  0125D4  EC39  F0D4         	call	_WaitMs	;wreg free
  4117                           
  4118                           ;main.c: 269:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4119  0125D8  0E2E               	movlw	low STR_12
  4120  0125DA  6EE6               	movwf	postinc1,c
  4121  0125DC  0EFF               	movlw	high STR_12
  4122  0125DE  6EE6               	movwf	postinc1,c
  4123  0125E0  0E00               	movlw	0
  4124  0125E2  6EE6               	movwf	postinc1,c
  4125  0125E4  0E00               	movlw	0
  4126  0125E6  6EE6               	movwf	postinc1,c
  4127  0125E8  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4128  0125EC  0060  F007  FFE6   	movff	btemp,postinc1
  4129  0125F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4130  0125F8  0E04               	movlw	4
  4131  0125FA  6EE6               	movwf	postinc1,c
  4132  0125FC  EC42  F0C7         	call	_sprintf	;wreg free
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;main.c: 270:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4136  012600  0E3F               	movlw	low STR_13
  4137  012602  6EE6               	movwf	postinc1,c
  4138  012604  0EFF               	movlw	high STR_13
  4139  012606  6EE6               	movwf	postinc1,c
  4140  012608  0E00               	movlw	0
  4141  01260A  6EE6               	movwf	postinc1,c
  4142  01260C  0E01               	movlw	1
  4143  01260E  6EE6               	movwf	postinc1,c
  4144  012610  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4145  012614  0060  F007  FFE6   	movff	btemp,postinc1
  4146  01261A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4147  012620  0E04               	movlw	4
  4148  012622  6EE6               	movwf	postinc1,c
  4149  012624  EC42  F0C7         	call	_sprintf	;wreg free
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;main.c: 271:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4153  012628  0E72               	movlw	low STR_14
  4154  01262A  6EE6               	movwf	postinc1,c
  4155  01262C  0EFF               	movlw	high STR_14
  4156  01262E  6EE6               	movwf	postinc1,c
  4157  012630  0E00               	movlw	0
  4158  012632  6EE6               	movwf	postinc1,c
  4159  012634  0E02               	movlw	2
  4160  012636  6EE6               	movwf	postinc1,c
  4161  012638  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4162  01263C  0060  F007  FFE6   	movff	btemp,postinc1
  4163  012642  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4164  012648  0E04               	movlw	4
  4165  01264A  6EE6               	movwf	postinc1,c
  4166  01264C  EC42  F0C7         	call	_sprintf	;wreg free
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;main.c: 272:    update_lcd(0);
  4170  012650  0E00               	movlw	0
  4171  012652  6EE6               	movwf	postinc1,c
  4172  012654  EC33  F0C6         	call	_update_lcd	;wreg free
  4173                           
  4174                           ;main.c: 273:    esr_check();
  4175  012658  EC26  F0BB         	call	_esr_check	;wreg free
  4176                           
  4177                           ;main.c: 274:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4178  01265C  0060  F613  FFE6   	movff	_C+132,postinc1
  4179  012662  0060  F617  FFE6   	movff	_C+133,postinc1
  4180  012668  0060  F61B  FFE6   	movff	_C+134,postinc1
  4181  01266E  0060  F61F  FFE6   	movff	_C+135,postinc1
  4182  012674  0EE3               	movlw	low STR_15
  4183  012676  6EE6               	movwf	postinc1,c
  4184  012678  0EFD               	movlw	high STR_15
  4185  01267A  6EE6               	movwf	postinc1,c
  4186  01267C  0E00               	movlw	0
  4187  01267E  6EE6               	movwf	postinc1,c
  4188  012680  0E00               	movlw	0
  4189  012682  6EE6               	movwf	postinc1,c
  4190  012684  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4191  012688  0060  F007  FFE6   	movff	btemp,postinc1
  4192  01268E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4193  012694  0E08               	movlw	8
  4194  012696  6EE6               	movwf	postinc1,c
  4195  012698  EC42  F0C7         	call	_sprintf	;wreg free
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;main.c: 275:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4199  01269C  0060  F77F  FFE6   	movff	_C+223,postinc1
  4200  0126A2  0060  F783  FFE6   	movff	_C+224,postinc1
  4201  0126A8  0060  F787  FFE6   	movff	_C+225,postinc1
  4202  0126AE  0060  F78B  FFE6   	movff	_C+226,postinc1
  4203  0126B4  0060  F7AF  FFE6   	movff	_C+235,postinc1
  4204  0126BA  0060  F7B3  FFE6   	movff	_C+236,postinc1
  4205  0126C0  0060  F7B7  FFE6   	movff	_C+237,postinc1
  4206  0126C6  0060  F7BB  FFE6   	movff	_C+238,postinc1
  4207  0126CC  0E80               	movlw	low STR_16
  4208  0126CE  6EE6               	movwf	postinc1,c
  4209  0126D0  0EFD               	movlw	high STR_16
  4210  0126D2  6EE6               	movwf	postinc1,c
  4211  0126D4  0E00               	movlw	0
  4212  0126D6  6EE6               	movwf	postinc1,c
  4213  0126D8  0E01               	movlw	1
  4214  0126DA  6EE6               	movwf	postinc1,c
  4215  0126DC  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4216  0126E0  0060  F007  FFE6   	movff	btemp,postinc1
  4217  0126E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4218  0126EC  0E0C               	movlw	12
  4219  0126EE  6EE6               	movwf	postinc1,c
  4220  0126F0  EC42  F0C7         	call	_sprintf	;wreg free
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;main.c: 276:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4224  0126F4  0060  F78F  FFE6   	movff	_C+227,postinc1
  4225  0126FA  0060  F793  FFE6   	movff	_C+228,postinc1
  4226  012700  0060  F797  FFE6   	movff	_C+229,postinc1
  4227  012706  0060  F79B  FFE6   	movff	_C+230,postinc1
  4228  01270C  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4229  012712  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4230  012718  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4231  01271E  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4232  012724  0E9A               	movlw	low STR_17
  4233  012726  6EE6               	movwf	postinc1,c
  4234  012728  0EFD               	movlw	high STR_17
  4235  01272A  6EE6               	movwf	postinc1,c
  4236  01272C  0E00               	movlw	0
  4237  01272E  6EE6               	movwf	postinc1,c
  4238  012730  0E02               	movlw	2
  4239  012732  6EE6               	movwf	postinc1,c
  4240  012734  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4241  012738  0060  F007  FFE6   	movff	btemp,postinc1
  4242  01273E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4243  012744  0E0C               	movlw	12
  4244  012746  6EE6               	movwf	postinc1,c
  4245  012748  EC42  F0C7         	call	_sprintf	;wreg free
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;main.c: 277:    update_lcd(0);
  4249  01274C  0E00               	movlw	0
  4250  01274E  6EE6               	movwf	postinc1,c
  4251  012750  EC33  F0C6         	call	_update_lcd	;wreg free
  4252                           
  4253                           ;main.c: 278:    WaitMs(5000);
  4254  012754  0E88               	movlw	136
  4255  012756  6EE6               	movwf	postinc1,c
  4256  012758  0E13               	movlw	19
  4257  01275A  6EE6               	movwf	postinc1,c
  4258  01275C  EC39  F0D4         	call	_WaitMs	;wreg free
  4259                           
  4260                           ;main.c: 279:    break;
  4261  012760  D01C               	goto	l12436
  4262  012762                     l1332:
  4263                           
  4264                           ; BSR set to: 2
  4265                           ;main.c: 285:    P.SYSTEM_STABLE = 1;
  4266  012762  0100               	movlb	0	; () banked
  4267  012764  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4268                           
  4269                           ;main.c: 286:    break;
  4270  012766  D019               	goto	l12436
  4271  012768                     l1334:
  4272                           
  4273                           ; BSR set to: 2
  4274                           ;main.c: 289:    V.ui_state = UI_STATE_INIT;
  4275  012768  6B00               	clrf	_V& (0+255),b	;volatile
  4276                           
  4277                           ;main.c: 290:    break;
  4278  01276A  D017               	goto	l12436
  4279  01276C                     l12434:
  4280  01276C  0102               	movlb	2	; () banked
  4281  01276E  5100               	movf	_V& (0+255),w,b	;volatile
  4282  012770  6E0B               	movwf	(btemp+10)^0,c
  4283  012772  6A0C               	clrf	(btemp+11)^0,c
  4284                           
  4285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4286                           ; Switch size 1, requested type "simple"
  4287                           ; Number of cases is 1, Range of values is 0 to 0
  4288                           ; switch strategies available:
  4289                           ; Name         Instructions Cycles
  4290                           ; simple_byte            4     3 (average)
  4291                           ;	Chosen strategy is simple_byte
  4292  012774  500C               	movf	(btemp+11)^0,w,c
  4293  012776  0A00               	xorlw	0	; case 0
  4294  012778  A4D8               	btfss	status,2,c
  4295  01277A  D7F6               	goto	l1334
  4296                           
  4297                           ; BSR set to: 2
  4298                           ; Switch size 1, requested type "simple"
  4299                           ; Number of cases is 5, Range of values is 0 to 5
  4300                           ; switch strategies available:
  4301                           ; Name         Instructions Cycles
  4302                           ; simple_byte           16     9 (average)
  4303                           ;	Chosen strategy is simple_byte
  4304  01277C  500B               	movf	(btemp+10)^0,w,c
  4305  01277E  0A00               	xorlw	0	; case 0
  4306  012780  B4D8               	btfsc	status,2,c
  4307  012782  D572               	goto	l12326
  4308  012784  0A01               	xorlw	1	; case 1
  4309  012786  B4D8               	btfsc	status,2,c
  4310  012788  D008               	goto	l12436
  4311  01278A  0A02               	xorlw	2	; case 3
  4312  01278C  B4D8               	btfsc	status,2,c
  4313  01278E  D005               	goto	l12436
  4314  012790  0A07               	xorlw	7	; case 4
  4315  012792  B4D8               	btfsc	status,2,c
  4316  012794  D7E6               	goto	l1332
  4317  012796  0A01               	xorlw	1	; case 5
  4318  012798  D7E7               	goto	l1334
  4319  01279A                     l12436:
  4320                           
  4321                           ;main.c: 293:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4322  01279A  0E01               	movlw	1
  4323  01279C  6EE6               	movwf	postinc1,c
  4324  01279E  ECC7  F0D5         	call	_TimerDone	;wreg free
  4325  0127A2  5001               	movf	btemp^0,w,c
  4326  0127A4  B4D8               	btfsc	status,2,c
  4327  0127A6  D013               	goto	l12448
  4328  0127A8  ECA3  F0D8         	call	_check_adc_scan	;wreg free
  4329  0127AC  5001               	movf	btemp^0,w,c
  4330  0127AE  B4D8               	btfsc	status,2,c
  4331  0127B0  D00E               	goto	l12448
  4332                           
  4333                           ;main.c: 297:    convert_adc_data();
  4334  0127B2  ECD4  F0CA         	call	_convert_adc_data	;wreg free
  4335                           
  4336                           ;main.c: 301:    clear_adc_scan();
  4337  0127B6  ECB3  F0D8         	call	_clear_adc_scan	;wreg free
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;main.c: 302:    start_adc_scan();
  4341  0127BA  EC1E  F0D0         	call	_start_adc_scan	;wreg free
  4342                           
  4343                           ;main.c: 303:    StartTimer(TMR_ADC, 200);
  4344  0127BE  0EC8               	movlw	200
  4345  0127C0  6EE6               	movwf	postinc1,c
  4346  0127C2  0E00               	movlw	0
  4347  0127C4  6EE6               	movwf	postinc1,c
  4348  0127C6  0E01               	movlw	1
  4349  0127C8  6EE6               	movwf	postinc1,c
  4350  0127CA  EC46  F0D3         	call	_StartTimer	;wreg free
  4351  0127CE                     l12448:
  4352                           
  4353                           ;main.c: 310:   if (TimerDone(TMR_DISPLAY)) {
  4354                           
  4355                           ;main.c: 306:   if (V.ticks) {
  4356  0127CE  0E0A               	movlw	10
  4357  0127D0  6EE6               	movwf	postinc1,c
  4358  0127D2  ECC7  F0D5         	call	_TimerDone	;wreg free
  4359  0127D6  5001               	movf	btemp^0,w,c
  4360  0127D8  B4D8               	btfsc	status,2,c
  4361  0127DA  D289               	goto	l12490
  4362                           
  4363                           ;main.c: 311:    if (TimerDone(TMR_HELPDIS)) {
  4364  0127DC  0E09               	movlw	9
  4365  0127DE  6EE6               	movwf	postinc1,c
  4366  0127E0  ECC7  F0D5         	call	_TimerDone	;wreg free
  4367  0127E4  5001               	movf	btemp^0,w,c
  4368  0127E6  B4D8               	btfsc	status,2,c
  4369  0127E8  D004               	goto	l12456
  4370                           
  4371                           ;main.c: 312:     set_display_info(DIS_STR);
  4372  0127EA  0E00               	movlw	0
  4373  0127EC  6EE6               	movwf	postinc1,c
  4374  0127EE  EC9D  F0D7         	call	_set_display_info	;wreg free
  4375  0127F2                     l12456:
  4376                           
  4377                           ;main.c: 314:    calc_model_data();
  4378  0127F2  EC75  F0AB         	call	_calc_model_data	;wreg free
  4379                           
  4380                           ; BSR set to: 1
  4381                           ;main.c: 321:     hid_display(&H);
  4382                           
  4383                           ;main.c: 316:    if (0) {
  4384  0127F6  0EF3               	movlw	_H& (0+255)
  4385  0127F8  6EE6               	movwf	postinc1,c
  4386  0127FA  ECC7  F0C7         	call	_hid_display	;wreg free
  4387                           
  4388                           ;main.c: 322:     switch (H.hid_display) {
  4389  0127FE  D252               	goto	l12482
  4390  012800                     l1342:
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;main.c: 324:      V.calib = 0;
  4394  012800  0102               	movlb	2	; () banked
  4395  012802  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4396                           
  4397                           ; BSR set to: 2
  4398                           ;main.c: 325:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  4399  012804  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4400  01280A  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4401  012810  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4402  012816  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4403  01281C  0E86               	movlw	low STR_21
  4404  01281E  6EE6               	movwf	postinc1,c
  4405  012820  0EFE               	movlw	high STR_21
  4406  012822  6EE6               	movwf	postinc1,c
  4407  012824  0E00               	movlw	0
  4408  012826  6EE6               	movwf	postinc1,c
  4409  012828  0E00               	movlw	0
  4410  01282A  6EE6               	movwf	postinc1,c
  4411  01282C  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4412  012830  0060  F007  FFE6   	movff	btemp,postinc1
  4413  012836  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4414  01283C  0E08               	movlw	8
  4415  01283E  6EE6               	movwf	postinc1,c
  4416  012840  EC42  F0C7         	call	_sprintf	;wreg free
  4417                           
  4418                           ;main.c: 326:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4419  012844  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4420  01284A  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4421  012850  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4422  012856  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4423  01285C  0EAC               	movlw	low STR_22
  4424  01285E  6EE6               	movwf	postinc1,c
  4425  012860  0EFE               	movlw	high STR_22
  4426  012862  6EE6               	movwf	postinc1,c
  4427  012864  0E00               	movlw	0
  4428  012866  6EE6               	movwf	postinc1,c
  4429  012868  0E01               	movlw	1
  4430  01286A  6EE6               	movwf	postinc1,c
  4431  01286C  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4432  012870  0060  F007  FFE6   	movff	btemp,postinc1
  4433  012876  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4434  01287C  0E08               	movlw	8
  4435  01287E  6EE6               	movwf	postinc1,c
  4436  012880  EC42  F0C7         	call	_sprintf	;wreg free
  4437                           
  4438                           ;main.c: 327:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4439  012884  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4440  01288A  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4441  012890  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4442  012896  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4443  01289C  0E99               	movlw	low STR_23
  4444  01289E  6EE6               	movwf	postinc1,c
  4445  0128A0  0EFE               	movlw	high STR_23
  4446  0128A2  6EE6               	movwf	postinc1,c
  4447  0128A4  0E00               	movlw	0
  4448  0128A6  6EE6               	movwf	postinc1,c
  4449  0128A8  0E02               	movlw	2
  4450  0128AA  6EE6               	movwf	postinc1,c
  4451  0128AC  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4452  0128B0  0060  F007  FFE6   	movff	btemp,postinc1
  4453  0128B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4454  0128BC  0E08               	movlw	8
  4455  0128BE  6EE6               	movwf	postinc1,c
  4456  0128C0  EC42  F0C7         	call	_sprintf	;wreg free
  4457                           
  4458                           ;main.c: 328:      break;
  4459  0128C4  D204               	goto	l12484
  4460  0128C6                     l1344:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;main.c: 330:      V.calib = 0;
  4464  0128C6  0102               	movlb	2	; () banked
  4465  0128C8  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4466                           
  4467                           ; BSR set to: 2
  4468                           ;main.c: 331:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4469  0128CA  0060  F413  FFE6   	movff	_C+4,postinc1
  4470  0128D0  0060  F417  FFE6   	movff	_C+5,postinc1
  4471  0128D6  0060  F41B  FFE6   	movff	_C+6,postinc1
  4472  0128DC  0060  F41F  FFE6   	movff	_C+7,postinc1
  4473  0128E2  0060  F453  FFE6   	movff	_C+20,postinc1
  4474  0128E8  0060  F457  FFE6   	movff	_C+21,postinc1
  4475  0128EE  0060  F45B  FFE6   	movff	_C+22,postinc1
  4476  0128F4  0060  F45F  FFE6   	movff	_C+23,postinc1
  4477  0128FA  0EF8               	movlw	low STR_24
  4478  0128FC  6EE6               	movwf	postinc1,c
  4479  0128FE  0EFE               	movlw	high STR_24
  4480  012900  6EE6               	movwf	postinc1,c
  4481  012902  0E00               	movlw	0
  4482  012904  6EE6               	movwf	postinc1,c
  4483  012906  0E00               	movlw	0
  4484  012908  6EE6               	movwf	postinc1,c
  4485  01290A  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4486  01290E  0060  F007  FFE6   	movff	btemp,postinc1
  4487  012914  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4488  01291A  0E0C               	movlw	12
  4489  01291C  6EE6               	movwf	postinc1,c
  4490  01291E  EC42  F0C7         	call	_sprintf	;wreg free
  4491                           
  4492                           ;main.c: 332:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4493  012922  0060  F403  FFE6   	movff	_C,postinc1
  4494  012928  0060  F407  FFE6   	movff	_C+1,postinc1
  4495  01292E  0060  F40B  FFE6   	movff	_C+2,postinc1
  4496  012934  0060  F40F  FFE6   	movff	_C+3,postinc1
  4497  01293A  0060  F443  FFE6   	movff	_C+16,postinc1
  4498  012940  0060  F447  FFE6   	movff	_C+17,postinc1
  4499  012946  0060  F44B  FFE6   	movff	_C+18,postinc1
  4500  01294C  0060  F44F  FFE6   	movff	_C+19,postinc1
  4501  012952  0ED2               	movlw	low STR_25
  4502  012954  6EE6               	movwf	postinc1,c
  4503  012956  0EFE               	movlw	high STR_25
  4504  012958  6EE6               	movwf	postinc1,c
  4505  01295A  0E00               	movlw	0
  4506  01295C  6EE6               	movwf	postinc1,c
  4507  01295E  0E01               	movlw	1
  4508  012960  6EE6               	movwf	postinc1,c
  4509  012962  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4510  012966  0060  F007  FFE6   	movff	btemp,postinc1
  4511  01296C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4512  012972  0E0C               	movlw	12
  4513  012974  6EE6               	movwf	postinc1,c
  4514  012976  EC42  F0C7         	call	_sprintf	;wreg free
  4515                           
  4516                           ;main.c: 333:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4517  01297A  0060  F503  FFE6   	movff	_C+64,postinc1
  4518  012980  0060  F507  FFE6   	movff	_C+65,postinc1
  4519  012986  0060  F50B  FFE6   	movff	_C+66,postinc1
  4520  01298C  0060  F50F  FFE6   	movff	_C+67,postinc1
  4521  012992  0060  F423  FFE6   	movff	_C+8,postinc1
  4522  012998  0060  F427  FFE6   	movff	_C+9,postinc1
  4523  01299E  0060  F42B  FFE6   	movff	_C+10,postinc1
  4524  0129A4  0060  F42F  FFE6   	movff	_C+11,postinc1
  4525  0129AA  0EE5               	movlw	low STR_26
  4526  0129AC  6EE6               	movwf	postinc1,c
  4527  0129AE  0EFE               	movlw	high STR_26
  4528  0129B0  6EE6               	movwf	postinc1,c
  4529  0129B2  0E00               	movlw	0
  4530  0129B4  6EE6               	movwf	postinc1,c
  4531  0129B6  0E02               	movlw	2
  4532  0129B8  6EE6               	movwf	postinc1,c
  4533  0129BA  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4534  0129BE  0060  F007  FFE6   	movff	btemp,postinc1
  4535  0129C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4536  0129CA  0E0C               	movlw	12
  4537  0129CC  6EE6               	movwf	postinc1,c
  4538  0129CE  EC42  F0C7         	call	_sprintf	;wreg free
  4539                           
  4540                           ;main.c: 334:      break;
  4541  0129D2  D17D               	goto	l12484
  4542  0129D4                     l1345:
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;main.c: 336:      V.calib = 0;
  4546  0129D4  0102               	movlb	2	; () banked
  4547  0129D6  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4548                           
  4549                           ; BSR set to: 2
  4550                           ;main.c: 337:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  4551  0129D8  0060  F5F3  FFE6   	movff	_C+124,postinc1
  4552  0129DE  0060  F5F7  FFE6   	movff	_C+125,postinc1
  4553  0129E4  0060  F5FB  FFE6   	movff	_C+126,postinc1
  4554  0129EA  0060  F5FF  FFE6   	movff	_C+127,postinc1
  4555  0129F0  0EBF               	movlw	low STR_27
  4556  0129F2  6EE6               	movwf	postinc1,c
  4557  0129F4  0EFE               	movlw	high STR_27
  4558  0129F6  6EE6               	movwf	postinc1,c
  4559  0129F8  0E00               	movlw	0
  4560  0129FA  6EE6               	movwf	postinc1,c
  4561  0129FC  0E00               	movlw	0
  4562  0129FE  6EE6               	movwf	postinc1,c
  4563  012A00  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4564  012A04  0060  F007  FFE6   	movff	btemp,postinc1
  4565  012A0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4566  012A10  0E08               	movlw	8
  4567  012A12  6EE6               	movwf	postinc1,c
  4568  012A14  EC42  F0C7         	call	_sprintf	;wreg free
  4569                           
  4570                           ;main.c: 338:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  4571  012A18  0060  F643  FFE6   	movff	_C+144,postinc1
  4572  012A1E  0060  F647  FFE6   	movff	_C+145,postinc1
  4573  012A24  0060  F64B  FFE6   	movff	_C+146,postinc1
  4574  012A2A  0060  F64F  FFE6   	movff	_C+147,postinc1
  4575  012A30  0060  F633  FFE6   	movff	_C+140,postinc1
  4576  012A36  0060  F637  FFE6   	movff	_C+141,postinc1
  4577  012A3C  0060  F63B  FFE6   	movff	_C+142,postinc1
  4578  012A42  0060  F63F  FFE6   	movff	_C+143,postinc1
  4579  012A48  0E39               	movlw	low STR_28
  4580  012A4A  6EE6               	movwf	postinc1,c
  4581  012A4C  0EFE               	movlw	high STR_28
  4582  012A4E  6EE6               	movwf	postinc1,c
  4583  012A50  0E00               	movlw	0
  4584  012A52  6EE6               	movwf	postinc1,c
  4585  012A54  0E01               	movlw	1
  4586  012A56  6EE6               	movwf	postinc1,c
  4587  012A58  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4588  012A5C  0060  F007  FFE6   	movff	btemp,postinc1
  4589  012A62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4590  012A68  0E0C               	movlw	12
  4591  012A6A  6EE6               	movwf	postinc1,c
  4592  012A6C  EC42  F0C7         	call	_sprintf	;wreg free
  4593                           
  4594                           ;main.c: 339:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  4595  012A70  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4596  012A76  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4597  012A7C  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4598  012A82  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4599  012A88  0E00               	movlw	0
  4600  012A8A  6EE6               	movwf	postinc1,c
  4601  012A8C  0E05               	movlw	5
  4602  012A8E  6EE6               	movwf	postinc1,c
  4603  012A90  EC37  F0C9         	call	_spinners	;wreg free
  4604  012A94  5001               	movf	btemp^0,w,c
  4605  012A96  6EE6               	movwf	postinc1,c
  4606  012A98  0E00               	movlw	0
  4607  012A9A  6EE6               	movwf	postinc1,c
  4608  012A9C  0E25               	movlw	low STR_29
  4609  012A9E  6EE6               	movwf	postinc1,c
  4610  012AA0  0EFE               	movlw	high STR_29
  4611  012AA2  6EE6               	movwf	postinc1,c
  4612  012AA4  0E00               	movlw	0
  4613  012AA6  6EE6               	movwf	postinc1,c
  4614  012AA8  0E02               	movlw	2
  4615  012AAA  6EE6               	movwf	postinc1,c
  4616  012AAC  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4617  012AB0  0060  F007  FFE6   	movff	btemp,postinc1
  4618  012AB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4619  012ABC  0E0A               	movlw	10
  4620  012ABE  6EE6               	movwf	postinc1,c
  4621  012AC0  EC42  F0C7         	call	_sprintf	;wreg free
  4622                           
  4623                           ;main.c: 340:      break;
  4624  012AC4  D104               	goto	l12484
  4625  012AC6                     l12468:
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;main.c: 342:      if (!V.calib) {
  4629  012AC6  0102               	movlb	2	; () banked
  4630  012AC8  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4631  012ACA  A4D8               	btfss	status,2,c
  4632  012ACC  D02D               	goto	l12472
  4633                           
  4634                           ; BSR set to: 2
  4635                           ;main.c: 343:       lp_filter(0.0, i, -1);
  4636  012ACE  0EFF               	movlw	255
  4637  012AD0  6EE6               	movwf	postinc1,c
  4638                           
  4639                           ;stkvar	_i @ sp[(-7)+2]
  4640  012AD2  0EFB               	movlw	-5
  4641  012AD4  50E3               	movf	plusw1,w,c
  4642  012AD6  6EE6               	movwf	postinc1,c
  4643  012AD8  0E00               	movlw	0
  4644  012ADA  6EE6               	movwf	postinc1,c
  4645  012ADC  0E00               	movlw	0
  4646  012ADE  6EE6               	movwf	postinc1,c
  4647  012AE0  0E00               	movlw	0
  4648  012AE2  6EE6               	movwf	postinc1,c
  4649  012AE4  0E00               	movlw	0
  4650  012AE6  6EE6               	movwf	postinc1,c
  4651  012AE8  EC19  F0BC         	call	_lp_filter	;wreg free
  4652                           
  4653                           ;main.c: 344:       lp_filter(0.0, j, -1);
  4654  012AEC  0EFF               	movlw	255
  4655  012AEE  6EE6               	movwf	postinc1,c
  4656                           
  4657                           ;stkvar	_j @ sp[(-7)+1]
  4658  012AF0  0EFA               	movlw	-6
  4659  012AF2  50E3               	movf	plusw1,w,c
  4660  012AF4  6EE6               	movwf	postinc1,c
  4661  012AF6  0E00               	movlw	0
  4662  012AF8  6EE6               	movwf	postinc1,c
  4663  012AFA  0E00               	movlw	0
  4664  012AFC  6EE6               	movwf	postinc1,c
  4665  012AFE  0E00               	movlw	0
  4666  012B00  6EE6               	movwf	postinc1,c
  4667  012B02  0E00               	movlw	0
  4668  012B04  6EE6               	movwf	postinc1,c
  4669  012B06  EC19  F0BC         	call	_lp_filter	;wreg free
  4670                           
  4671                           ;main.c: 345:       lp_filter(0.0, k, -1);
  4672  012B0A  0EFF               	movlw	255
  4673  012B0C  6EE6               	movwf	postinc1,c
  4674                           
  4675                           ;stkvar	_k @ sp[(-7)+0]
  4676  012B0E  0EF9               	movlw	-7
  4677  012B10  50E3               	movf	plusw1,w,c
  4678  012B12  6EE6               	movwf	postinc1,c
  4679  012B14  0E00               	movlw	0
  4680  012B16  6EE6               	movwf	postinc1,c
  4681  012B18  0E00               	movlw	0
  4682  012B1A  6EE6               	movwf	postinc1,c
  4683  012B1C  0E00               	movlw	0
  4684  012B1E  6EE6               	movwf	postinc1,c
  4685  012B20  0E00               	movlw	0
  4686  012B22  6EE6               	movwf	postinc1,c
  4687  012B24  EC19  F0BC         	call	_lp_filter	;wreg free
  4688  012B28                     l12472:
  4689                           
  4690                           ;main.c: 347:      V.calib = 1;
  4691  012B28  0E01               	movlw	1
  4692  012B2A  0102               	movlb	2	; () banked
  4693  012B2C  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  4694                           
  4695                           ; BSR set to: 2
  4696                           ;main.c: 348:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  4697  012B2E  0E02               	movlw	2
  4698  012B30  6EE6               	movwf	postinc1,c
  4699  012B32  EC34  F0D5         	call	_get_switch	;wreg free
  4700  012B36  5001               	movf	btemp^0,w,c
  4701  012B38  6EE6               	movwf	postinc1,c
  4702  012B3A  0E00               	movlw	0
  4703  012B3C  6EE6               	movwf	postinc1,c
  4704                           
  4705                           ;stkvar	_i @ sp[(-8)+2]
  4706  012B3E  0EFA               	movlw	-6
  4707  012B40  50E3               	movf	plusw1,w,c
  4708  012B42  0D04               	mullw	4
  4709  012B44  0E00               	movlw	low _C
  4710  012B46  24F3               	addwf	243,w,c
  4711  012B48  6ED9               	movwf	fsr2l,c
  4712  012B4A  0E01               	movlw	high _C
  4713  012B4C  20F4               	addwfc	prodh,w,c
  4714  012B4E  6EDA               	movwf	fsr2h,c
  4715  012B50  006F FF7B FFE6     	movff	postinc2,postinc1
  4716  012B56  006F FF7B FFE6     	movff	postinc2,postinc1
  4717  012B5C  006F FF7B FFE6     	movff	postinc2,postinc1
  4718  012B62  006F FF7B FFE6     	movff	postinc2,postinc1
  4719                           
  4720                           ;stkvar	_i @ sp[(-12)+2]
  4721  012B68  0EF6               	movlw	-10
  4722  012B6A  50E3               	movf	plusw1,w,c
  4723  012B6C  6EE6               	movwf	postinc1,c
  4724  012B6E  ECAC  F0D7         	call	_get_raw_result	;wreg free
  4725  012B72  0060  F007  FFE6   	movff	btemp,postinc1
  4726  012B78  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4727  012B7E  0E83               	movlw	low STR_18
  4728  012B80  6EE6               	movwf	postinc1,c
  4729  012B82  0EFF               	movlw	high STR_18
  4730  012B84  6EE6               	movwf	postinc1,c
  4731  012B86  0E00               	movlw	0
  4732  012B88  6EE6               	movwf	postinc1,c
  4733  012B8A  0E00               	movlw	0
  4734  012B8C  6EE6               	movwf	postinc1,c
  4735  012B8E  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4736  012B92  0060  F007  FFE6   	movff	btemp,postinc1
  4737  012B98  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4738  012B9E  0E0C               	movlw	12
  4739  012BA0  6EE6               	movwf	postinc1,c
  4740  012BA2  EC42  F0C7         	call	_sprintf	;wreg free
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;main.c: 349:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  4744  012BA6  0E03               	movlw	3
  4745  012BA8  6EE6               	movwf	postinc1,c
  4746  012BAA  EC34  F0D5         	call	_get_switch	;wreg free
  4747  012BAE  5001               	movf	btemp^0,w,c
  4748  012BB0  6EE6               	movwf	postinc1,c
  4749  012BB2  0E00               	movlw	0
  4750  012BB4  6EE6               	movwf	postinc1,c
  4751                           
  4752                           ;stkvar	_j @ sp[(-8)+1]
  4753  012BB6  0EF9               	movlw	-7
  4754  012BB8  50E3               	movf	plusw1,w,c
  4755  012BBA  0D04               	mullw	4
  4756  012BBC  0E00               	movlw	low _C
  4757  012BBE  24F3               	addwf	243,w,c
  4758  012BC0  6ED9               	movwf	fsr2l,c
  4759  012BC2  0E01               	movlw	high _C
  4760  012BC4  20F4               	addwfc	prodh,w,c
  4761  012BC6  6EDA               	movwf	fsr2h,c
  4762  012BC8  006F FF7B FFE6     	movff	postinc2,postinc1
  4763  012BCE  006F FF7B FFE6     	movff	postinc2,postinc1
  4764  012BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  4765  012BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  4766                           
  4767                           ;stkvar	_j @ sp[(-12)+1]
  4768  012BE0  0EF5               	movlw	-11
  4769  012BE2  50E3               	movf	plusw1,w,c
  4770  012BE4  6EE6               	movwf	postinc1,c
  4771  012BE6  ECAC  F0D7         	call	_get_raw_result	;wreg free
  4772  012BEA  0060  F007  FFE6   	movff	btemp,postinc1
  4773  012BF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4774  012BF6  0E83               	movlw	low STR_18
  4775  012BF8  6EE6               	movwf	postinc1,c
  4776  012BFA  0EFF               	movlw	high STR_18
  4777  012BFC  6EE6               	movwf	postinc1,c
  4778  012BFE  0E00               	movlw	0
  4779  012C00  6EE6               	movwf	postinc1,c
  4780  012C02  0E01               	movlw	1
  4781  012C04  6EE6               	movwf	postinc1,c
  4782  012C06  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4783  012C0A  0060  F007  FFE6   	movff	btemp,postinc1
  4784  012C10  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4785  012C16  0E0C               	movlw	12
  4786  012C18  6EE6               	movwf	postinc1,c
  4787  012C1A  EC42  F0C7         	call	_sprintf	;wreg free
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;main.c: 350:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  4791                           ;stkvar	_inp_index @ sp[(-6)+3]
  4792  012C1E  0EFD               	movlw	-3
  4793  012C20  50E3               	movf	plusw1,w,c
  4794  012C22  6E0B               	movwf	(btemp+10)^0,c
  4795  012C24  6A0C               	clrf	(btemp+11)^0,c
  4796  012C26  0E01               	movlw	1
  4797  012C28  260B               	addwf	(btemp+10)^0,f,c
  4798  012C2A  0E00               	movlw	0
  4799  012C2C  220C               	addwfc	(btemp+11)^0,f,c
  4800  012C2E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4801  012C34  0060  F033  FFE6   	movff	btemp+11,postinc1
  4802                           
  4803                           ;stkvar	_k @ sp[(-8)+0]
  4804  012C3A  0EF8               	movlw	-8
  4805  012C3C  50E3               	movf	plusw1,w,c
  4806  012C3E  0D04               	mullw	4
  4807  012C40  0E00               	movlw	low _C
  4808  012C42  24F3               	addwf	243,w,c
  4809  012C44  6ED9               	movwf	fsr2l,c
  4810  012C46  0E01               	movlw	high _C
  4811  012C48  20F4               	addwfc	prodh,w,c
  4812  012C4A  6EDA               	movwf	fsr2h,c
  4813  012C4C  006F FF7B FFE6     	movff	postinc2,postinc1
  4814  012C52  006F FF7B FFE6     	movff	postinc2,postinc1
  4815  012C58  006F FF7B FFE6     	movff	postinc2,postinc1
  4816  012C5E  006F FF7B FFE6     	movff	postinc2,postinc1
  4817                           
  4818                           ;stkvar	_k @ sp[(-12)+0]
  4819  012C64  0EF4               	movlw	-12
  4820  012C66  50E3               	movf	plusw1,w,c
  4821  012C68  6EE6               	movwf	postinc1,c
  4822  012C6A  ECAC  F0D7         	call	_get_raw_result	;wreg free
  4823  012C6E  0060  F007  FFE6   	movff	btemp,postinc1
  4824  012C74  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4825  012C7A  0E61               	movlw	low STR_20
  4826  012C7C  6EE6               	movwf	postinc1,c
  4827  012C7E  0EFF               	movlw	high STR_20
  4828  012C80  6EE6               	movwf	postinc1,c
  4829  012C82  0E00               	movlw	0
  4830  012C84  6EE6               	movwf	postinc1,c
  4831  012C86  0E02               	movlw	2
  4832  012C88  6EE6               	movwf	postinc1,c
  4833  012C8A  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  4834  012C8E  0060  F007  FFE6   	movff	btemp,postinc1
  4835  012C94  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4836  012C9A  0E0C               	movlw	12
  4837  012C9C  6EE6               	movwf	postinc1,c
  4838  012C9E  EC42  F0C7         	call	_sprintf	;wreg free
  4839                           
  4840                           ;main.c: 351:      break;
  4841  012CA2  D015               	goto	l12484
  4842  012CA4                     l12482:
  4843  012CA4  0100               	movlb	0	; () banked
  4844  012CA6  51F3               	movf	_H& (0+255),w,b
  4845  012CA8  6E0B               	movwf	(btemp+10)^0,c
  4846  012CAA  6A0C               	clrf	(btemp+11)^0,c
  4847                           
  4848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4849                           ; Switch size 1, requested type "simple"
  4850                           ; Number of cases is 1, Range of values is 0 to 0
  4851                           ; switch strategies available:
  4852                           ; Name         Instructions Cycles
  4853                           ; simple_byte            4     3 (average)
  4854                           ;	Chosen strategy is simple_byte
  4855  012CAC  500C               	movf	(btemp+11)^0,w,c
  4856  012CAE  0A00               	xorlw	0	; case 0
  4857  012CB0  A4D8               	btfss	status,2,c
  4858  012CB2  D00D               	goto	l12484
  4859                           
  4860                           ; BSR set to: 0
  4861                           ; Switch size 1, requested type "simple"
  4862                           ; Number of cases is 4, Range of values is 0 to 3
  4863                           ; switch strategies available:
  4864                           ; Name         Instructions Cycles
  4865                           ; simple_byte           13     7 (average)
  4866                           ;	Chosen strategy is simple_byte
  4867  012CB4  500B               	movf	(btemp+10)^0,w,c
  4868  012CB6  0A00               	xorlw	0	; case 0
  4869  012CB8  B4D8               	btfsc	status,2,c
  4870  012CBA  D605               	goto	l1344
  4871  012CBC  0A01               	xorlw	1	; case 1
  4872  012CBE  B4D8               	btfsc	status,2,c
  4873  012CC0  D59F               	goto	l1342
  4874  012CC2  0A03               	xorlw	3	; case 2
  4875  012CC4  B4D8               	btfsc	status,2,c
  4876  012CC6  D686               	goto	l1345
  4877  012CC8  0A01               	xorlw	1	; case 3
  4878  012CCA  B4D8               	btfsc	status,2,c
  4879  012CCC  D6FC               	goto	l12468
  4880  012CCE                     l12484:
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;main.c: 355:     clear_hid_pflags(&H);
  4884  012CCE  0EF3               	movlw	_H& (0+255)
  4885  012CD0  6EE6               	movwf	postinc1,c
  4886  012CD2  ECF2  F0D6         	call	_clear_hid_pflags	;wreg free
  4887                           
  4888                           ;main.c: 357:    StartTimer(TMR_DISPLAY, 250);
  4889  012CD6  0EFA               	movlw	250
  4890  012CD8  6EE6               	movwf	postinc1,c
  4891  012CDA  0E00               	movlw	0
  4892  012CDC  6EE6               	movwf	postinc1,c
  4893  012CDE  0E0A               	movlw	10
  4894  012CE0  6EE6               	movwf	postinc1,c
  4895  012CE2  EC46  F0D3         	call	_StartTimer	;wreg free
  4896                           
  4897                           ;main.c: 358:    update_lcd(0);
  4898  012CE6  0E00               	movlw	0
  4899  012CE8  6EE6               	movwf	postinc1,c
  4900  012CEA  EC33  F0C6         	call	_update_lcd	;wreg free
  4901  012CEE                     l12490:
  4902                           
  4903                           ;main.c: 364:   check_help(V.flipper);
  4904  012CEE  0102               	movlb	2	; () banked
  4905  012CF0  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4906  012CF2  6EE6               	movwf	postinc1,c
  4907  012CF4  EC1B  F0B8         	call	_check_help	;wreg free
  4908                           
  4909                           ;main.c: 366:   if (check_enter_button(&H)) {
  4910  012CF8  0EF3               	movlw	_H& (0+255)
  4911  012CFA  6EE6               	movwf	postinc1,c
  4912  012CFC  EC66  F0D3         	call	_check_enter_button	;wreg free
  4913  012D00  5001               	movf	btemp^0,w,c
  4914  012D02  B4D8               	btfsc	status,2,c
  4915  012D04  D062               	goto	l1349
  4916                           
  4917                           ;main.c: 367:    V.calib = 0;
  4918  012D06  0102               	movlb	2	; () banked
  4919  012D08  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4920                           
  4921                           ; BSR set to: 2
  4922                           ;main.c: 368:    inp_index += 3;
  4923                           ;stkvar	_inp_index @ sp[(-6)+3]
  4924  012D0A  0EFD               	movlw	-3
  4925  012D0C  006F FF8C  F001    	movff	plusw1,btemp
  4926  012D12  0E03               	movlw	3
  4927  012D14  2601               	addwf	btemp^0,f,c
  4928  012D16  0EFD               	movlw	-3
  4929  012D18  0060  F007  FFE3   	movff	btemp,plusw1
  4930                           
  4931                           ;main.c: 369:    if (inp_index > 9)
  4932                           ;stkvar	_inp_index @ sp[(-6)+3]
  4933  012D1E  0EFD               	movlw	-3
  4934  012D20  006F FF8C  F001    	movff	plusw1,btemp
  4935  012D26  0E09               	movlw	9
  4936  012D28  6401               	cpfsgt	btemp^0,c
  4937  012D2A  D03A               	goto	l12518
  4938                           
  4939                           ; BSR set to: 2
  4940                           ;main.c: 370:     inp_index = 0;
  4941                           ;stkvar	_inp_index @ sp[(-6)+3]
  4942  012D2C  0EFD               	movlw	-3
  4943  012D2E  6AE3               	clrf	plusw1,c
  4944  012D30  D037               	goto	l12518
  4945  012D32                     l12500:
  4946                           
  4947                           ; BSR set to: 2
  4948                           ;main.c: 373:     i = C_BATT;
  4949                           ;stkvar	_i @ sp[(-6)+2]
  4950  012D32  0EFC               	movlw	-4
  4951  012D34  6AE3               	clrf	plusw1,c
  4952                           
  4953                           ; BSR set to: 2
  4954                           ;main.c: 374:     j = C_PV;
  4955                           ;stkvar	_j @ sp[(-6)+1]
  4956  012D36  0EFB               	movlw	-5
  4957  012D38  6AE3               	clrf	plusw1,c
  4958  012D3A  2AE3               	incf	plusw1,f,c
  4959                           
  4960                           ; BSR set to: 2
  4961                           ;main.c: 375:     k = V_CC;
  4962                           ;stkvar	_k @ sp[(-6)+0]
  4963  012D3C  0EFA               	movlw	-6
  4964  012D3E  6AE3               	clrf	plusw1,c
  4965  012D40  82E3               	bsf	plusw1,1,c
  4966                           
  4967                           ;main.c: 376:     break;
  4968  012D42  D043               	goto	l1349
  4969  012D44                     l12506:
  4970                           
  4971                           ; BSR set to: 2
  4972                           ;main.c: 378:     i = V_BAT;
  4973                           ;stkvar	_i @ sp[(-6)+2]
  4974  012D44  0EFC               	movlw	-4
  4975  012D46  6AE3               	clrf	plusw1,c
  4976  012D48  84E3               	bsf	plusw1,2,c
  4977                           
  4978                           ;main.c: 379:     j = V_PV;
  4979                           ;stkvar	_j @ sp[(-6)+1]
  4980  012D4A  0EFB               	movlw	-5
  4981  012D4C  6AE3               	clrf	plusw1,c
  4982  012D4E  80E3               	bsf	plusw1,0,c
  4983  012D50  84E3               	bsf	plusw1,2,c	;indir
  4984                           
  4985                           ;main.c: 380:     k = V_CBUS;
  4986                           ;stkvar	_k @ sp[(-6)+0]
  4987  012D52  0EFA               	movlw	-6
  4988  012D54  6AE3               	clrf	plusw1,c
  4989  012D56  82E3               	bsf	plusw1,1,c
  4990  012D58  84E3               	bsf	plusw1,2,c	;indir
  4991                           
  4992                           ;main.c: 381:     break;
  4993  012D5A  D037               	goto	l1349
  4994  012D5C                     l12508:
  4995                           
  4996                           ; BSR set to: 2
  4997                           ;main.c: 383:     i = V_BBAT;
  4998                           ;stkvar	_i @ sp[(-6)+2]
  4999  012D5C  0EFC               	movlw	-4
  5000  012D5E  6AE3               	clrf	plusw1,c
  5001  012D60  82E3               	bsf	plusw1,1,c
  5002  012D62  86E3               	bsf	plusw1,3,c	;indir
  5003                           
  5004                           ; BSR set to: 2
  5005                           ;main.c: 384:     j = V_TEMP;
  5006  012D64  0E0B               	movlw	11
  5007  012D66  6E0C               	movwf	(btemp+11)^0,c
  5008                           
  5009                           ;stkvar	_j @ sp[(-6)+1]
  5010  012D68  0EFB               	movlw	-5
  5011  012D6A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5012                           
  5013                           ; BSR set to: 2
  5014                           ;main.c: 385:     k = V_INVERTER;
  5015                           ;stkvar	_k @ sp[(-6)+0]
  5016  012D70  0EFA               	movlw	-6
  5017  012D72  6AE3               	clrf	plusw1,c
  5018  012D74  84E3               	bsf	plusw1,2,c
  5019  012D76  86E3               	bsf	plusw1,3,c	;indir
  5020                           
  5021                           ;main.c: 386:     break;
  5022  012D78  D028               	goto	l1349
  5023  012D7A                     l12514:
  5024                           
  5025                           ; BSR set to: 2
  5026                           ;main.c: 388:     i = channel_ANB5;
  5027  012D7A  0E0D               	movlw	13
  5028  012D7C  6E0C               	movwf	(btemp+11)^0,c
  5029                           
  5030                           ;stkvar	_i @ sp[(-6)+2]
  5031  012D7E  0EFC               	movlw	-4
  5032  012D80  0060  F033  FFE3   	movff	btemp+11,plusw1
  5033                           
  5034                           ;main.c: 389:     j = channel_ANB5;
  5035  012D86  0E0D               	movlw	13
  5036  012D88  6E0C               	movwf	(btemp+11)^0,c
  5037                           
  5038                           ;stkvar	_j @ sp[(-6)+1]
  5039  012D8A  0EFB               	movlw	-5
  5040  012D8C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5041                           
  5042                           ;main.c: 390:     k = channel_ANB5;
  5043  012D92  0E0D               	movlw	13
  5044  012D94  6E0C               	movwf	(btemp+11)^0,c
  5045                           
  5046                           ;stkvar	_k @ sp[(-6)+0]
  5047  012D96  0EFA               	movlw	-6
  5048  012D98  0060  F033  FFE3   	movff	btemp+11,plusw1
  5049                           
  5050                           ;main.c: 391:     break;
  5051  012D9E  D015               	goto	l1349
  5052  012DA0                     l12518:
  5053                           
  5054                           ; BSR set to: 2
  5055                           ;stkvar	_inp_index @ sp[(-6)+3]
  5056  012DA0  0EFD               	movlw	-3
  5057  012DA2  50E3               	movf	plusw1,w,c
  5058  012DA4  6E0B               	movwf	(btemp+10)^0,c
  5059  012DA6  6A0C               	clrf	(btemp+11)^0,c
  5060                           
  5061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5062                           ; Switch size 1, requested type "simple"
  5063                           ; Number of cases is 1, Range of values is 0 to 0
  5064                           ; switch strategies available:
  5065                           ; Name         Instructions Cycles
  5066                           ; simple_byte            4     3 (average)
  5067                           ;	Chosen strategy is simple_byte
  5068  012DA8  500C               	movf	(btemp+11)^0,w,c
  5069  012DAA  0A00               	xorlw	0	; case 0
  5070  012DAC  A4D8               	btfss	status,2,c
  5071  012DAE  D00D               	goto	l1349
  5072                           
  5073                           ; BSR set to: 2
  5074                           ; Switch size 1, requested type "simple"
  5075                           ; Number of cases is 4, Range of values is 0 to 9
  5076                           ; switch strategies available:
  5077                           ; Name         Instructions Cycles
  5078                           ; simple_byte           13     7 (average)
  5079                           ;	Chosen strategy is simple_byte
  5080  012DB0  500B               	movf	(btemp+10)^0,w,c
  5081  012DB2  0A00               	xorlw	0	; case 0
  5082  012DB4  B4D8               	btfsc	status,2,c
  5083  012DB6  D7BD               	goto	l12500
  5084  012DB8  0A03               	xorlw	3	; case 3
  5085  012DBA  B4D8               	btfsc	status,2,c
  5086  012DBC  D7C3               	goto	l12506
  5087  012DBE  0A05               	xorlw	5	; case 6
  5088  012DC0  B4D8               	btfsc	status,2,c
  5089  012DC2  D7CC               	goto	l12508
  5090  012DC4  0A0F               	xorlw	15	; case 9
  5091  012DC6  B4D8               	btfsc	status,2,c
  5092  012DC8  D7D8               	goto	l12514
  5093  012DCA                     l1349:
  5094                           
  5095                           ;main.c: 400:   if (V.set_sequ) {
  5096  012DCA  0102               	movlb	2	; () banked
  5097  012DCC  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  5098  012DCE  D4CE               	goto	l12434
  5099                           
  5100                           ; BSR set to: 2
  5101                           ;main.c: 401:    if (TimerDone(TMR_INFO)) {
  5102  012DD0  0E07               	movlw	7
  5103  012DD2  6EE6               	movwf	postinc1,c
  5104  012DD4  ECC7  F0D5         	call	_TimerDone	;wreg free
  5105  012DD8  5001               	movf	btemp^0,w,c
  5106  012DDA  B4D8               	btfsc	status,2,c
  5107  012DDC  D00B               	goto	l12528
  5108                           
  5109                           ;main.c: 402:     V.set_sequ = 0;
  5110  012DDE  0102               	movlb	2	; () banked
  5111  012DE0  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  5112                           
  5113                           ; BSR set to: 2
  5114                           ;main.c: 403:     set_vterm(0);
  5115  012DE2  0E00               	movlw	0
  5116  012DE4  6EE6               	movwf	postinc1,c
  5117  012DE6  EC8E  F0D7         	call	_set_vterm	;wreg free
  5118                           
  5119                           ;main.c: 404:     update_lcd(0);
  5120  012DEA  0E00               	movlw	0
  5121  012DEC  6EE6               	movwf	postinc1,c
  5122  012DEE  EC33  F0C6         	call	_update_lcd	;wreg free
  5123                           
  5124                           ;main.c: 405:    } else {
  5125  012DF2  D4BC               	goto	l12434
  5126  012DF4                     l12528:
  5127                           
  5128                           ;main.c: 406:     set_vterm(2);
  5129  012DF4  0E02               	movlw	2
  5130  012DF6  6EE6               	movwf	postinc1,c
  5131  012DF8  EC8E  F0D7         	call	_set_vterm	;wreg free
  5132                           
  5133                           ;main.c: 407:     update_lcd(2);
  5134  012DFC  0E02               	movlw	2
  5135  012DFE  6EE6               	movwf	postinc1,c
  5136  012E00  EC33  F0C6         	call	_update_lcd	;wreg free
  5137  012E04  D4B3               	goto	l12434
  5138  012E06                     __end_of_main:
  5139                           	opt callstack 0
  5140                           
  5141 ;; *************** function _static_soc *****************
  5142 ;; Defined at:
  5143 ;;		line 116 in file "mbmc.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1  [STACK] void 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 3F/1
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5161 ;;Total ram usage:        0 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:   15
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_main
  5168 ;; This function uses a reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text1
  5172  01ADC0                     __ptext1:
  5173                           	opt callstack 0
  5174  01ADC0                     _static_soc:
  5175                           	opt callstack 15
  5176                           
  5177                           ;mbmc.c: 118:  C.runtime = 120;
  5178                           
  5179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5180                           ;incstack = 0
  5181  01ADC0  0E00               	movlw	0
  5182  01ADC2  0101               	movlb	1	; () banked
  5183  01ADC4  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
  5184  01ADC6  0E78               	movlw	120
  5185  01ADC8  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
  5186                           
  5187                           ;mbmc.c: 119:  C.soc = 100;
  5188  01ADCA  0E00               	movlw	0
  5189  01ADCC  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
  5190  01ADCE  0E64               	movlw	100
  5191  01ADD0  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
  5192                           
  5193                           ; BSR set to: 1
  5194                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5195  01ADD2  C188  F18C         	movff	_C+136,_C+140	;volatile
  5196  01ADD6  C189  F18D         	movff	_C+137,_C+141	;volatile
  5197  01ADDA  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5198  01ADDE  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5199                           
  5200                           ; BSR set to: 1
  5201                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5202  01ADE2  0012               	return		;funcret
  5203  01ADE4                     __end_of_static_soc:
  5204                           	opt callstack 0
  5205                           
  5206 ;; *************** function _start_switch_handler *****************
  5207 ;; Defined at:
  5208 ;;		line 119 in file "dio.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;		None
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1  [STACK] void 
  5215 ;; Registers used:
  5216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5217 ;; Tracked objects:
  5218 ;;		On entry : 1/0
  5219 ;;		On exit  : 3F/39
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5226 ;;Total ram usage:        0 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:   16
  5229 ;; This function calls:
  5230 ;;		_INT1_SetInterruptHandler
  5231 ;; This function is called by:
  5232 ;;		_main
  5233 ;; This function uses a reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text2
  5237  01AEDE                     __ptext2:
  5238                           	opt callstack 0
  5239  01AEDE                     _start_switch_handler:
  5240                           	opt callstack 14
  5241                           
  5242                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  5243                           
  5244                           ; BSR set to: 1
  5245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5246                           ;incstack = 0
  5247  01AEDE  0139               	movlb	57	; () banked
  5248  01AEE0  9195               	bcf	149,0,b	;volatile
  5249                           
  5250                           ; BSR set to: 57
  5251                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  5252  01AEE2  0EAC               	movlw	low _switch_handler
  5253  01AEE4  6EE6               	movwf	postinc1,c
  5254  01AEE6  0E86               	movlw	high _switch_handler
  5255  01AEE8  6EE6               	movwf	postinc1,c
  5256  01AEEA  0E01               	movlw	low (_switch_handler shr (0+16))
  5257  01AEEC  6EE6               	movwf	postinc1,c
  5258  01AEEE  EC53  F0D6         	call	_INT1_SetInterruptHandler	;wreg free
  5259                           
  5260                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  5261  01AEF2  0E02               	movlw	2
  5262  01AEF4  0102               	movlb	2	; () banked
  5263  01AEF6  6FDF               	movwf	(_S+35)& (0+255),b	;volatile
  5264                           
  5265                           ; BSR set to: 2
  5266                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  5267  01AEF8  0139               	movlb	57	; () banked
  5268  01AEFA  8195               	bsf	149,0,b	;volatile
  5269                           
  5270                           ; BSR set to: 57
  5271                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5272  01AEFC  0012               	return		;funcret
  5273  01AEFE                     __end_of_start_switch_handler:
  5274                           	opt callstack 0
  5275                           
  5276 ;; *************** function _srand *****************
  5277 ;; Defined at:
  5278 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  s               2  [STACK] unsigned int 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1  [STACK] void 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 3F/1
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5296 ;;Total ram usage:        0 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:   15
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_main
  5303 ;; This function uses a reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text3
  5307  01A8DE                     __ptext3:
  5308                           	opt callstack 0
  5309  01A8DE                     _srand:
  5310                           	opt callstack 15
  5311                           
  5312                           ;stkvar	_s @ sp[(0)+-2]
  5313                           
  5314                           ; BSR set to: 57
  5315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5316                           ;incstack = 0
  5317  01A8DE  0EFE               	movlw	-2
  5318  01A8E0  50E3               	movf	plusw1,w,c
  5319  01A8E2  0FFF               	addlw	255
  5320  01A8E4  6E0B               	movwf	(btemp+10)^0,c
  5321  01A8E6  0EFF               	movlw	-1
  5322  01A8E8  006F FF8C  F00C    	movff	plusw1,btemp+11
  5323  01A8EE  0EFF               	movlw	255
  5324  01A8F0  220C               	addwfc	(btemp+11)^0,f,c
  5325  01A8F2  0060  F02C  F1F3   	movff	btemp+10,_seed
  5326  01A8F8  0060  F030  F1F4   	movff	btemp+11,_seed+1
  5327  01A8FE  0101               	movlb	1	; () banked
  5328  01A900  6BF5               	clrf	(_seed+2)& (0+255),b
  5329  01A902  6BF6               	clrf	(_seed+3)& (0+255),b
  5330  01A904  6BF7               	clrf	(_seed+4)& (0+255),b
  5331  01A906  6BF8               	clrf	(_seed+5)& (0+255),b
  5332  01A908  6BF9               	clrf	(_seed+6)& (0+255),b
  5333  01A90A  6BFA               	clrf	(_seed+7)& (0+255),b
  5334                           
  5335                           ; BSR set to: 1
  5336                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5337  01A90C  52E5               	movf	postdec1,f,c
  5338  01A90E  52E5               	movf	postdec1,f,c
  5339  01A910  0012               	return		;funcret
  5340  01A912                     __end_of_srand:
  5341                           	opt callstack 0
  5342                           
  5343 ;; *************** function _spinners *****************
  5344 ;; Defined at:
  5345 ;;		line 134 in file "mbmc.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  shape           1  [STACK] unsigned char 
  5348 ;;  reset           1  [STACK] unsigned char 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  c               1  [STACK] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1  [STACK] unsigned char 
  5353 ;; Registers used:
  5354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  5355 ;; Tracked objects:
  5356 ;;		On entry : 3F/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5364 ;;Total ram usage:        0 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:   16
  5367 ;; This function calls:
  5368 ;;		_strlen
  5369 ;; This function is called by:
  5370 ;;		_main
  5371 ;; This function uses a reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text4
  5375  01926E                     __ptext4:
  5376                           	opt callstack 0
  5377  01926E                     _spinners:
  5378                           	opt callstack 0
  5379                           
  5380                           ; BSR set to: 1
  5381                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5382  01926E  52E6               	movf	postinc1,f,c
  5383                           
  5384                           ;mbmc.c: 134: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 135: {;mbmc.c: 136:  s
      +                          tatic uint8_t s[6];;mbmc.c: 137:  char c;;mbmc.c: 139:  if (shape > (6 - 1)) shape = 0;
  5385                           ;stkvar	_shape @ sp[(-1)+-1]
  5386                           
  5387                           ;incstack = 0
  5388  019270  0EFE               	movlw	-2
  5389  019272  006F FF8C  F001    	movff	plusw1,btemp
  5390  019278  0E05               	movlw	5
  5391  01927A  6401               	cpfsgt	btemp^0,c
  5392  01927C  D002               	goto	l1859
  5393                           
  5394                           ;stkvar	_shape @ sp[(-1)+-1]
  5395  01927E  0EFE               	movlw	-2
  5396  019280  6AE3               	clrf	plusw1,c
  5397  019282                     l1859:
  5398                           
  5399                           ;mbmc.c: 140:  if (reset) s[shape] = 0;
  5400                           ;stkvar	_reset @ sp[(-1)+-2]
  5401  019282  0EFD               	movlw	-3
  5402  019284  50E3               	movf	plusw1,w,c
  5403  019286  B4D8               	btfsc	status,2,c
  5404  019288  D00A               	goto	l10396
  5405                           
  5406                           ;stkvar	_shape @ sp[(-1)+-1]
  5407  01928A  0EFE               	movlw	-2
  5408  01928C  006F FF8C  F00C    	movff	plusw1,btemp+11
  5409  019292  500C               	movf	(btemp+11)^0,w,c
  5410  019294  0F74               	addlw	low spinners@s
  5411  019296  6ED9               	movwf	fsr2l,c
  5412  019298  6ADA               	clrf	fsr2h,c
  5413  01929A  0E00               	movlw	0
  5414  01929C  6EDF               	movwf	indf2,c
  5415  01929E                     l10396:
  5416                           
  5417                           ;mbmc.c: 141:  c = spin[shape][s[shape]];
  5418                           ;stkvar	_shape @ sp[(-1)+-1]
  5419  01929E  0EFE               	movlw	-2
  5420  0192A0  50E3               	movf	plusw1,w,c
  5421  0192A2  0D14               	mullw	20
  5422  0192A4  0E9F               	movlw	low _spin
  5423  0192A6  6E0B               	movwf	(btemp+10)^0,c
  5424  0192A8  0EFC               	movlw	high _spin
  5425  0192AA  6E0C               	movwf	(btemp+11)^0,c
  5426  0192AC  50F3               	movf	243,w,c
  5427  0192AE  260B               	addwf	(btemp+10)^0,f,c
  5428  0192B0  50F4               	movf	244,w,c
  5429  0192B2  220C               	addwfc	(btemp+11)^0,f,c
  5430                           
  5431                           ;stkvar	_shape @ sp[(-1)+-1]
  5432  0192B4  0EFE               	movlw	-2
  5433  0192B6  006F FF8C  F00A    	movff	plusw1,btemp+9
  5434  0192BC  500A               	movf	(btemp+9)^0,w,c
  5435  0192BE  0F74               	addlw	low spinners@s
  5436  0192C0  6ED9               	movwf	fsr2l,c
  5437  0192C2  6ADA               	clrf	fsr2h,c
  5438  0192C4  50DF               	movf	indf2,w,c
  5439  0192C6  260B               	addwf	(btemp+10)^0,f,c
  5440  0192C8  0E00               	movlw	0
  5441  0192CA  220C               	addwfc	(btemp+11)^0,f,c
  5442  0192CC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  5443  0192D2  0060  F033  FFF7   	movff	btemp+11,tblptrh
  5444  0192D8                     	if	0	;tblptru may be non-zero
  5445  0192D8                     	endif
  5446  0192D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5447  0192D8  0E00               	movlw	low (__mediumconst shr (0+16))
  5448  0192DA  6EF8               	movwf	tblptru,c
  5449  0192DC                     	endif
  5450                           
  5451                           ;stkvar	_c @ sp[(-1)+0]
  5452  0192DC  0008               	tblrd		*
  5453  0192DE  0EFF               	movlw	-1
  5454  0192E0  006F FFD7 FFE3     	movff	tablat,plusw1
  5455                           
  5456                           ;mbmc.c: 142:  if (++s[shape] >= strlen(spin[shape])) s[shape] = 0;
  5457                           ;stkvar	_shape @ sp[(-1)+-1]
  5458  0192E6  0EFE               	movlw	-2
  5459  0192E8  50E3               	movf	plusw1,w,c
  5460  0192EA  0D14               	mullw	20
  5461  0192EC  0E9F               	movlw	low _spin
  5462  0192EE  6E0B               	movwf	(btemp+10)^0,c
  5463  0192F0  0EFC               	movlw	high _spin
  5464  0192F2  6E0C               	movwf	(btemp+11)^0,c
  5465  0192F4  50F3               	movf	243,w,c
  5466  0192F6  260B               	addwf	(btemp+10)^0,f,c
  5467  0192F8  50F4               	movf	244,w,c
  5468  0192FA  220C               	addwfc	(btemp+11)^0,f,c
  5469  0192FC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5470  019302  0060  F033  FFE6   	movff	btemp+11,postinc1
  5471  019308  EC85  F0CC         	call	_strlen	;wreg free
  5472                           
  5473                           ;stkvar	_shape @ sp[(-1)+-1]
  5474  01930C  0EFE               	movlw	-2
  5475  01930E  006F FF8C  F00C    	movff	plusw1,btemp+11
  5476  019314  500C               	movf	(btemp+11)^0,w,c
  5477  019316  0F74               	addlw	low spinners@s
  5478  019318  6ED9               	movwf	fsr2l,c
  5479  01931A  6ADA               	clrf	fsr2h,c
  5480  01931C  2ADF               	incf	indf2,f,c
  5481  01931E  50DF               	movf	indf2,w,c
  5482  019320  6E0B               	movwf	(btemp+10)^0,c
  5483  019322  6A0C               	clrf	(btemp+11)^0,c
  5484  019324  5001               	movf	btemp^0,w,c
  5485  019326  5C0B               	subwf	(btemp+10)^0,w,c
  5486  019328  5002               	movf	(btemp+1)^0,w,c
  5487  01932A  580C               	subwfb	(btemp+11)^0,w,c
  5488  01932C  A0D8               	btfss	status,0,c
  5489  01932E  D00A               	goto	l10402
  5490                           
  5491                           ;stkvar	_shape @ sp[(-1)+-1]
  5492  019330  0EFE               	movlw	-2
  5493  019332  006F FF8C  F00C    	movff	plusw1,btemp+11
  5494  019338  500C               	movf	(btemp+11)^0,w,c
  5495  01933A  0F74               	addlw	low spinners@s
  5496  01933C  6ED9               	movwf	fsr2l,c
  5497  01933E  6ADA               	clrf	fsr2h,c
  5498  019340  0E00               	movlw	0
  5499  019342  6EDF               	movwf	indf2,c
  5500  019344                     l10402:
  5501                           
  5502                           ;mbmc.c: 143:  return c;
  5503                           ;stkvar	_c @ sp[(-1)+0]
  5504  019344  0EFF               	movlw	-1
  5505  019346  006F FF8C  F001    	movff	plusw1,btemp
  5506                           
  5507                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  5508  01934C  52E5               	movf	postdec1,f,c
  5509  01934E  52E5               	movf	postdec1,f,c
  5510  019350  52E5               	movf	postdec1,f,c
  5511  019352  0012               	return		;funcret
  5512  019354                     __end_of_spinners:
  5513                           	opt callstack 0
  5514                           
  5515 ;; *************** function _init_port_dma *****************
  5516 ;; Defined at:
  5517 ;;		line 90 in file "eadog.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;		None
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1  [STACK] void 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/2
  5528 ;;		On exit  : 3F/3B
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5535 ;;Total ram usage:        0 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:   15
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_main
  5542 ;; This function uses a reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text5
  5546  01A97A                     __ptext5:
  5547                           	opt callstack 0
  5548  01A97A                     _init_port_dma:
  5549                           	opt callstack 15
  5550                           
  5551                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  5552                           
  5553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5554                           ;incstack = 0
  5555  01A97A  0E3F               	movlw	-193
  5556  01A97C  013B               	movlb	59	; () banked
  5557  01A97E  17DD               	andwf	221,f,b	;volatile
  5558                           
  5559                           ; BSR set to: 59
  5560                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  5561  01A980  9BDD               	bcf	221,5,b	;volatile
  5562                           
  5563                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  5564  01A982  51DD               	movf	221,w,b	;volatile
  5565  01A984  0BF9               	andlw	-7
  5566  01A986  0902               	iorlw	2
  5567  01A988  6FDD               	movwf	221,b	;volatile
  5568                           
  5569                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  5570  01A98A  0EE7               	movlw	-25
  5571  01A98C  17DD               	andwf	221,f,b	;volatile
  5572                           
  5573                           ; BSR set to: 59
  5574                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  5575  01A98E  81DD               	bsf	221,0,b	;volatile
  5576                           
  5577                           ; BSR set to: 59
  5578                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  5579  01A990  9DDC               	bcf	220,6,b	;volatile
  5580                           
  5581                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  5582  01A992  0E3D               	movlw	61
  5583  01A994  6FD1               	movwf	209,b	;volatile
  5584  01A996  0EEA               	movlw	234
  5585  01A998  6FD0               	movwf	208,b	;volatile
  5586                           
  5587                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  5588  01A99A  0EFF               	movlw	low _port_data
  5589  01A99C  6FD9               	movwf	217,b	;volatile
  5590  01A99E  0E05               	movlw	high _port_data
  5591  01A9A0  6FDA               	movwf	218,b	;volatile
  5592  01A9A2  0E00               	movlw	low (_port_data shr (0+16))
  5593  01A9A4  6FDB               	movwf	219,b	;volatile
  5594                           
  5595                           ; BSR set to: 59
  5596                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  5597  01A9A6  9BDC               	bcf	220,5,b	;volatile
  5598                           
  5599                           ; BSR set to: 59
  5600                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5601  01A9A8  0012               	return		;funcret
  5602  01A9AA                     __end_of_init_port_dma:
  5603                           	opt callstack 0
  5604                           
  5605 ;; *************** function _init_display *****************
  5606 ;; Defined at:
  5607 ;;		line 38 in file "eadog.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;		None
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;		None
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1  [STACK] void 
  5614 ;; Registers used:
  5615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5616 ;; Tracked objects:
  5617 ;;		On entry : 3F/3B
  5618 ;;		On exit  : 3F/3D
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5625 ;;Total ram usage:        0 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; Hardware stack levels required when called:   17
  5628 ;; This function calls:
  5629 ;;		_ringBufS_init
  5630 ;;		_send_lcd_cmd
  5631 ;;		_send_lcd_cmd_long
  5632 ;;		_wdtdelay
  5633 ;; This function is called by:
  5634 ;;		_main
  5635 ;; This function uses a reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text6
  5639  019184                     __ptext6:
  5640                           	opt callstack 0
  5641  019184                     _init_display:
  5642                           	opt callstack 13
  5643                           
  5644                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  5645                           
  5646                           ; BSR set to: 59
  5647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5648                           ;incstack = 0
  5649  019184  0E43               	movlw	low _ring_buf1
  5650  019186  0100               	movlb	0	; () banked
  5651  019188  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  5652  01918A  0E04               	movlw	high _ring_buf1
  5653  01918C  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  5654                           
  5655                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  5656  01918E  0E00               	movlw	low _ring_buf2
  5657  019190  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  5658  019192  0E04               	movlw	high _ring_buf2
  5659  019194  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  5663  019196  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  5664  01919C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  5665  0191A2  ECB3  F0D5         	call	_ringBufS_init	;wreg free
  5666                           
  5667                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  5668  0191A6  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  5669  0191AC  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  5670  0191B2  ECB3  F0D5         	call	_ringBufS_init	;wreg free
  5671                           
  5672                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  5673  0191B6  84BE               	bsf	190,2,c	;volatile
  5674  0191B8  84BC               	bsf	188,2,c	;volatile
  5675                           
  5676                           ;eadog.c: 59:  wdtdelay(350000);
  5677  0191BA  0E30               	movlw	48
  5678  0191BC  6EE6               	movwf	postinc1,c
  5679  0191BE  0E57               	movlw	87
  5680  0191C0  6EE6               	movwf	postinc1,c
  5681  0191C2  0E05               	movlw	5
  5682  0191C4  6EE6               	movwf	postinc1,c
  5683  0191C6  0E00               	movlw	0
  5684  0191C8  6EE6               	movwf	postinc1,c
  5685  0191CA  ECE1  F0D0         	call	_wdtdelay	;wreg free
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  5689  0191CE  0E39               	movlw	57
  5690  0191D0  6EE6               	movwf	postinc1,c
  5691  0191D2  EC9F  F0D5         	call	_send_lcd_cmd	;wreg free
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  5695  0191D6  0E1D               	movlw	29
  5696  0191D8  6EE6               	movwf	postinc1,c
  5697  0191DA  EC9F  F0D5         	call	_send_lcd_cmd	;wreg free
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  5701  0191DE  0E50               	movlw	80
  5702  0191E0  6EE6               	movwf	postinc1,c
  5703  0191E2  EC9F  F0D5         	call	_send_lcd_cmd	;wreg free
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  5707  0191E6  0E6C               	movlw	108
  5708  0191E8  6EE6               	movwf	postinc1,c
  5709  0191EA  EC9F  F0D5         	call	_send_lcd_cmd	;wreg free
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  5713  0191EE  0E76               	movlw	118
  5714  0191F0  6EE6               	movwf	postinc1,c
  5715  0191F2  EC9F  F0D5         	call	_send_lcd_cmd	;wreg free
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  5719  0191F6  0E38               	movlw	56
  5720  0191F8  6EE6               	movwf	postinc1,c
  5721  0191FA  EC8B  F0D5         	call	_send_lcd_cmd_long	;wreg free
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  5725  0191FE  0E0F               	movlw	15
  5726  019200  6EE6               	movwf	postinc1,c
  5727  019202  EC9F  F0D5         	call	_send_lcd_cmd	;wreg free
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  5731  019206  0E01               	movlw	1
  5732  019208  6EE6               	movwf	postinc1,c
  5733  01920A  EC8B  F0D5         	call	_send_lcd_cmd_long	;wreg free
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  5737  01920E  0E02               	movlw	2
  5738  019210  6EE6               	movwf	postinc1,c
  5739  019212  EC9F  F0D5         	call	_send_lcd_cmd	;wreg free
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  5743  019216  0E06               	movlw	6
  5744  019218  6EE6               	movwf	postinc1,c
  5745  01921A  EC9F  F0D5         	call	_send_lcd_cmd	;wreg free
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;eadog.c: 70:  wdtdelay(30);
  5749  01921E  0E1E               	movlw	30
  5750  019220  6EE6               	movwf	postinc1,c
  5751  019222  0E00               	movlw	0
  5752  019224  6EE6               	movwf	postinc1,c
  5753  019226  0E00               	movlw	0
  5754  019228  6EE6               	movwf	postinc1,c
  5755  01922A  0E00               	movlw	0
  5756  01922C  6EE6               	movwf	postinc1,c
  5757  01922E  ECE1  F0D0         	call	_wdtdelay	;wreg free
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5761  019232  0E02               	movlw	2
  5762  019234  013D               	movlb	61	; () banked
  5763  019236  6F16               	movwf	22,b	;volatile
  5764                           
  5765                           ; BSR set to: 61
  5766                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5767  019238  0E40               	movlw	64
  5768  01923A  6F15               	movwf	21,b	;volatile
  5769                           
  5770                           ; BSR set to: 61
  5771                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5772  01923C  0E83               	movlw	131
  5773  01923E  6F14               	movwf	20,b	;volatile
  5774                           
  5775                           ; BSR set to: 61
  5776                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5777  019240  931A               	bcf	26,1,b	;volatile
  5778                           
  5779                           ; BSR set to: 61
  5780                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5781  019242  0E3F               	movlw	-193
  5782  019244  013B               	movlb	59	; () banked
  5783  019246  17FD               	andwf	253,f,b	;volatile
  5784                           
  5785                           ; BSR set to: 59
  5786                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5787  019248  9BFD               	bcf	253,5,b	;volatile
  5788                           
  5789                           ; BSR set to: 59
  5790                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5791  01924A  51FD               	movf	253,w,b	;volatile
  5792  01924C  0BF9               	andlw	-7
  5793  01924E  0902               	iorlw	2
  5794  019250  6FFD               	movwf	253,b	;volatile
  5795                           
  5796                           ; BSR set to: 59
  5797                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5798  019252  0EE7               	movlw	-25
  5799  019254  17FD               	andwf	253,f,b	;volatile
  5800                           
  5801                           ; BSR set to: 59
  5802                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5803  019256  81FD               	bsf	253,0,b	;volatile
  5804                           
  5805                           ; BSR set to: 59
  5806                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5807  019258  0E43               	movlw	low _ring_buf1
  5808  01925A  6FF9               	movwf	249,b	;volatile
  5809  01925C  0E04               	movlw	high _ring_buf1
  5810  01925E  6FFA               	movwf	250,b	;volatile
  5811  019260  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5812  019262  6FFB               	movwf	251,b	;volatile
  5813                           
  5814                           ; BSR set to: 59
  5815                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5816  019264  9BFC               	bcf	252,5,b	;volatile
  5817                           
  5818                           ; BSR set to: 59
  5819                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5820  019266  013D               	movlb	61	; () banked
  5821  019268  831A               	bsf	26,1,b	;volatile
  5822                           
  5823                           ; BSR set to: 61
  5824                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5825  01926A  94BE               	bcf	190,2,c	;volatile
  5826                           
  5827                           ; BSR set to: 61
  5828                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5829  01926C  0012               	return		;funcret
  5830  01926E                     __end_of_init_display:
  5831                           	opt callstack 0
  5832                           
  5833 ;; *************** function _send_lcd_cmd_long *****************
  5834 ;; Defined at:
  5835 ;;		line 129 in file "eadog.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  cmd             1  [STACK] const unsigned char 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1  [STACK] void 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5844 ;; Tracked objects:
  5845 ;;		On entry : 3F/0
  5846 ;;		On exit  : 3F/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5853 ;;Total ram usage:        0 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:   16
  5856 ;; This function calls:
  5857 ;;		_SPI1_Exchange8bit
  5858 ;;		_wdtdelay
  5859 ;; This function is called by:
  5860 ;;		_init_display
  5861 ;; This function uses a reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text7
  5865  01AB16                     __ptext7:
  5866                           	opt callstack 0
  5867  01AB16                     _send_lcd_cmd_long:
  5868                           	opt callstack 13
  5869                           
  5870                           ; BSR set to: 61
  5871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5872                           ;incstack = 0
  5873                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5874  01AB16  92BC               	bcf	188,1,c	;volatile
  5875                           
  5876                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5877  01AB18  94BC               	bcf	188,2,c	;volatile
  5878                           
  5879                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5880                           ;stkvar	_cmd @ sp[(0)+-1]
  5881  01AB1A  0EFF               	movlw	-1
  5882  01AB1C  50E3               	movf	plusw1,w,c
  5883  01AB1E  6EE6               	movwf	postinc1,c
  5884  01AB20  EC7F  F0D7         	call	_SPI1_Exchange8bit	;wreg free
  5885                           
  5886                           ; BSR set to: 57
  5887                           ;eadog.c: 134:  wdtdelay(800);
  5888  01AB24  0E20               	movlw	32
  5889  01AB26  6EE6               	movwf	postinc1,c
  5890  01AB28  0E03               	movlw	3
  5891  01AB2A  6EE6               	movwf	postinc1,c
  5892  01AB2C  0E00               	movlw	0
  5893  01AB2E  6EE6               	movwf	postinc1,c
  5894  01AB30  0E00               	movlw	0
  5895  01AB32  6EE6               	movwf	postinc1,c
  5896  01AB34  ECE1  F0D0         	call	_wdtdelay	;wreg free
  5897                           
  5898                           ; BSR set to: 0
  5899  01AB38  82BC               	bsf	188,1,c	;volatile
  5900                           
  5901                           ; BSR set to: 0
  5902                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5903  01AB3A  52E5               	movf	postdec1,f,c
  5904  01AB3C  0012               	return		;funcret
  5905  01AB3E                     __end_of_send_lcd_cmd_long:
  5906                           	opt callstack 0
  5907                           
  5908 ;; *************** function _send_lcd_cmd *****************
  5909 ;; Defined at:
  5910 ;;		line 117 in file "eadog.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  cmd             1  [STACK] const unsigned char 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;		None
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1  [STACK] void 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5919 ;; Tracked objects:
  5920 ;;		On entry : 3F/0
  5921 ;;		On exit  : 3F/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5928 ;;Total ram usage:        0 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:   16
  5931 ;; This function calls:
  5932 ;;		_SPI1_Exchange8bit
  5933 ;;		_wdtdelay
  5934 ;; This function is called by:
  5935 ;;		_init_display
  5936 ;; This function uses a reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text8
  5940  01AB3E                     __ptext8:
  5941                           	opt callstack 0
  5942  01AB3E                     _send_lcd_cmd:
  5943                           	opt callstack 13
  5944                           
  5945                           ; BSR set to: 0
  5946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5947                           ;incstack = 0
  5948                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  5949  01AB3E  92BC               	bcf	188,1,c	;volatile
  5950                           
  5951                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  5952  01AB40  94BC               	bcf	188,2,c	;volatile
  5953                           
  5954                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  5955                           ;stkvar	_cmd @ sp[(0)+-1]
  5956  01AB42  0EFF               	movlw	-1
  5957  01AB44  50E3               	movf	plusw1,w,c
  5958  01AB46  6EE6               	movwf	postinc1,c
  5959  01AB48  EC7F  F0D7         	call	_SPI1_Exchange8bit	;wreg free
  5960                           
  5961                           ; BSR set to: 57
  5962                           ;eadog.c: 122:  wdtdelay(30);
  5963  01AB4C  0E1E               	movlw	30
  5964  01AB4E  6EE6               	movwf	postinc1,c
  5965  01AB50  0E00               	movlw	0
  5966  01AB52  6EE6               	movwf	postinc1,c
  5967  01AB54  0E00               	movlw	0
  5968  01AB56  6EE6               	movwf	postinc1,c
  5969  01AB58  0E00               	movlw	0
  5970  01AB5A  6EE6               	movwf	postinc1,c
  5971  01AB5C  ECE1  F0D0         	call	_wdtdelay	;wreg free
  5972                           
  5973                           ; BSR set to: 0
  5974  01AB60  82BC               	bsf	188,1,c	;volatile
  5975                           
  5976                           ; BSR set to: 0
  5977                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5978  01AB62  52E5               	movf	postdec1,f,c
  5979  01AB64  0012               	return		;funcret
  5980  01AB66                     __end_of_send_lcd_cmd:
  5981                           	opt callstack 0
  5982                           
  5983 ;; *************** function _SPI1_Exchange8bit *****************
  5984 ;; Defined at:
  5985 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  data            1  [STACK] unsigned char 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;		None
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1  [STACK] unsigned char 
  5992 ;; Registers used:
  5993 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 3F/39
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6003 ;;Total ram usage:        0 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:   15
  6006 ;; This function calls:
  6007 ;;		Nothing
  6008 ;; This function is called by:
  6009 ;;		_send_lcd_cmd
  6010 ;;		_send_lcd_cmd_long
  6011 ;; This function uses a reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text9
  6015  01AEFE                     __ptext9:
  6016                           	opt callstack 0
  6017  01AEFE                     _SPI1_Exchange8bit:
  6018                           	opt callstack 13
  6019                           
  6020                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6021                           
  6022                           ; BSR set to: 0
  6023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6024                           ;incstack = 0
  6025  01AEFE  0E01               	movlw	1
  6026  01AF00  013D               	movlb	61	; () banked
  6027  01AF02  6F12               	movwf	18,b	;volatile
  6028                           
  6029                           ; BSR set to: 61
  6030                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6031                           ;stkvar	_data @ sp[(0)+-1]
  6032  01AF04  0EFF               	movlw	-1
  6033  01AF06  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6034  01AF0C                     l807:
  6035                           
  6036                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6037  01AF0C  0139               	movlb	57	; () banked
  6038  01AF0E  A9A2               	btfss	162,4,b	;volatile
  6039  01AF10  D7FD               	goto	l807
  6040                           
  6041                           ; BSR set to: 57
  6042                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6043  01AF12  006F F440  F001    	movff	15632,btemp	;volatile
  6044                           
  6045                           ; BSR set to: 57
  6046                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6047  01AF18  52E5               	movf	postdec1,f,c
  6048  01AF1A  0012               	return		;funcret
  6049  01AF1C                     __end_of_SPI1_Exchange8bit:
  6050                           	opt callstack 0
  6051                           
  6052 ;; *************** function _ringBufS_init *****************
  6053 ;; Defined at:
  6054 ;;		line 22 in file "ringbufs.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  _this           2  [STACK] PTR volatile struct ring
  6057 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;		None
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  1  [STACK] void 
  6062 ;; Registers used:
  6063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6073 ;;Total ram usage:        0 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; Hardware stack levels required when called:   16
  6076 ;; This function calls:
  6077 ;;		_memset
  6078 ;; This function is called by:
  6079 ;;		_init_display
  6080 ;; This function uses a reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text10
  6084  01AB66                     __ptext10:
  6085                           	opt callstack 0
  6086  01AB66                     _ringBufS_init:
  6087                           	opt callstack 13
  6088                           
  6089                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6090                           
  6091                           ; BSR set to: 57
  6092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6093                           ;incstack = 0
  6094  01AB66  0E43               	movlw	67
  6095  01AB68  6EE6               	movwf	postinc1,c
  6096  01AB6A  0E00               	movlw	0
  6097  01AB6C  6EE6               	movwf	postinc1,c
  6098  01AB6E  0E00               	movlw	0
  6099  01AB70  6EE6               	movwf	postinc1,c
  6100  01AB72  0E00               	movlw	0
  6101  01AB74  6EE6               	movwf	postinc1,c
  6102                           
  6103                           ;stkvar	__this @ sp[(-4)+-2]
  6104  01AB76  0EFA               	movlw	-6
  6105  01AB78  006F FF8F FFE6     	movff	plusw1,postinc1
  6106  01AB7E  006F FF8F FFE6     	movff	plusw1,postinc1
  6107  01AB84  EC9C  F0B0         	call	_memset	;wreg free
  6108                           
  6109                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6110  01AB88  52E5               	movf	postdec1,f,c
  6111  01AB8A  52E5               	movf	postdec1,f,c
  6112  01AB8C  0012               	return		;funcret
  6113  01AB8E                     __end_of_ringBufS_init:
  6114                           	opt callstack 0
  6115                           
  6116 ;; *************** function _init_bsoc *****************
  6117 ;; Defined at:
  6118 ;;		line 88 in file "bsoc.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1  [STACK] void 
  6125 ;; Registers used:
  6126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6127 ;; Tracked objects:
  6128 ;;		On entry : 3F/1
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6136 ;;Total ram usage:        0 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:   18
  6139 ;; This function calls:
  6140 ;;		_TMR3_SetInterruptHandler
  6141 ;;		_Volts_to_SOC
  6142 ;;		___fldiv
  6143 ;;		___flmul
  6144 ;;		___fltol
  6145 ;;		___xxtofl
  6146 ;;		_conv_raw_result
  6147 ;; This function is called by:
  6148 ;;		_main
  6149 ;; This function uses a reentrant model
  6150 ;;
  6151                           
  6152                           	psect	text11
  6153  017FEA                     __ptext11:
  6154                           	opt callstack 0
  6155  017FEA                     _init_bsoc:
  6156                           	opt callstack 12
  6157                           
  6158                           ;bsoc.c: 93:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6159                           
  6160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6161                           ;incstack = 0
  6162  017FEA  0E00               	movlw	0
  6163  017FEC  6EE6               	movwf	postinc1,c
  6164  017FEE  0E00               	movlw	0
  6165  017FF0  6EE6               	movwf	postinc1,c
  6166  017FF2  0E7A               	movlw	122
  6167  017FF4  6EE6               	movwf	postinc1,c
  6168  017FF6  0E44               	movlw	68
  6169  017FF8  6EE6               	movwf	postinc1,c
  6170  017FFA  0E00               	movlw	0
  6171  017FFC  6EE6               	movwf	postinc1,c
  6172  017FFE  0E04               	movlw	4
  6173  018000  6EE6               	movwf	postinc1,c
  6174  018002  EC02  F0A5         	call	_conv_raw_result	;wreg free
  6175  018006  0060  F007  FFE6   	movff	btemp,postinc1
  6176  01800C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6177  018012  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6178  018018  0060  F013  FFE6   	movff	btemp+3,postinc1
  6179  01801E  EC3C  F0BF         	call	___fltol	;wreg free
  6180  018022  0060  F007  FFE6   	movff	btemp,postinc1
  6181  018028  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6182  01802E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6183  018034  0060  F013  FFE6   	movff	btemp+3,postinc1
  6184  01803A  0E00               	movlw	0
  6185  01803C  6EE6               	movwf	postinc1,c
  6186  01803E  EC24  F0B9         	call	___xxtofl	;wreg free
  6187  018042  0060  F007  FFE6   	movff	btemp,postinc1
  6188  018048  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6189  01804E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6190  018054  0060  F013  FFE6   	movff	btemp+3,postinc1
  6191  01805A  EC03  F097         	call	___flmul	;wreg free
  6192  01805E  0060  F007  FFE6   	movff	btemp,postinc1
  6193  018064  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6194  01806A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6195  018070  0060  F013  FFE6   	movff	btemp+3,postinc1
  6196  018076  EC3C  F0BF         	call	___fltol	;wreg free
  6197  01807A  0060  F007  FFE6   	movff	btemp,postinc1
  6198  018080  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6199  018086  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6200  01808C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6201  018092  EC22  F0CD         	call	_Volts_to_SOC	;wreg free
  6202  018096  0060  F004  F1AA   	movff	btemp,_C+170	;volatile
  6203  01809C  0060  F008  F1AB   	movff	btemp+1,_C+171	;volatile
  6204                           
  6205                           ;bsoc.c: 94:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6206  0180A2  0060  F623  FFE6   	movff	_C+136,postinc1
  6207  0180A8  0060  F627  FFE6   	movff	_C+137,postinc1
  6208  0180AE  0060  F62B  FFE6   	movff	_C+138,postinc1
  6209  0180B4  0060  F62F  FFE6   	movff	_C+139,postinc1
  6210  0180BA  0E00               	movlw	0
  6211  0180BC  6EE6               	movwf	postinc1,c
  6212  0180BE  0E00               	movlw	0
  6213  0180C0  6EE6               	movwf	postinc1,c
  6214  0180C2  0EC8               	movlw	200
  6215  0180C4  6EE6               	movwf	postinc1,c
  6216  0180C6  0E42               	movlw	66
  6217  0180C8  6EE6               	movwf	postinc1,c
  6218  0180CA  0101               	movlb	1	; () banked
  6219  0180CC  51AA               	movf	(_C+170)& (0+255),w,b	;volatile
  6220  0180CE  6E09               	movwf	(btemp+8)^0,c
  6221  0180D0  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
  6222  0180D2  6E0A               	movwf	(btemp+9)^0,c
  6223  0180D4  6A0B               	clrf	(btemp+10)^0,c
  6224  0180D6  6A0C               	clrf	(btemp+11)^0,c
  6225  0180D8  0060  F027  FFE6   	movff	btemp+8,postinc1
  6226  0180DE  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6227  0180E4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6228  0180EA  0060  F033  FFE6   	movff	btemp+11,postinc1
  6229  0180F0  0E00               	movlw	0
  6230  0180F2  6EE6               	movwf	postinc1,c
  6231  0180F4  EC24  F0B9         	call	___xxtofl	;wreg free
  6232  0180F8  0060  F007  FFE6   	movff	btemp,postinc1
  6233  0180FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6234  018104  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6235  01810A  0060  F013  FFE6   	movff	btemp+3,postinc1
  6236  018110  EC45  F0A2         	call	___fldiv	;wreg free
  6237  018114  0060  F007  FFE6   	movff	btemp,postinc1
  6238  01811A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6239  018120  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6240  018126  0060  F013  FFE6   	movff	btemp+3,postinc1
  6241  01812C  EC03  F097         	call	___flmul	;wreg free
  6242  018130  0060  F004  F18C   	movff	btemp,_C+140	;volatile
  6243  018136  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
  6244  01813C  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
  6245  018142  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
  6246                           
  6247                           ;bsoc.c: 95:  TMR3_SetInterruptHandler(calc_bsoc);
  6248  018148  0EEC               	movlw	low _calc_bsoc
  6249  01814A  6EE6               	movwf	postinc1,c
  6250  01814C  0E3D               	movlw	high _calc_bsoc
  6251  01814E  6EE6               	movwf	postinc1,c
  6252  018150  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6253  018152  6EE6               	movwf	postinc1,c
  6254  018154  EC3F  F0D6         	call	_TMR3_SetInterruptHandler	;wreg free
  6255                           
  6256                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6257  018158  0012               	return		;funcret
  6258  01815A                     __end_of_init_bsoc:
  6259                           	opt callstack 0
  6260                           
  6261 ;; *************** function _Volts_to_SOC *****************
  6262 ;; Defined at:
  6263 ;;		line 152 in file "bsoc.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;  cvoltage        4  [STACK] unsigned long 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  2  [STACK] unsigned short 
  6270 ;; Registers used:
  6271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/1
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6281 ;;Total ram usage:        0 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:   15
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_init_bsoc
  6288 ;; This function uses a reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text12
  6292  019A44                     __ptext12:
  6293                           	opt callstack 0
  6294  019A44                     _Volts_to_SOC:
  6295                           	opt callstack 14
  6296                           
  6297                           ;bsoc.c: 152: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 153: {;bsoc.c: 154:  stat
      +                          ic uint8_t slot;;bsoc.c: 156:  C.soc = 0;
  6298                           
  6299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6300                           ;incstack = 0
  6301  019A44  0101               	movlb	1	; () banked
  6302  019A46  6BAA               	clrf	(_C+170)& (0+255),b	;volatile
  6303  019A48  6BAB               	clrf	(_C+171)& (0+255),b	;volatile
  6304                           
  6305                           ;bsoc.c: 157:  for (slot = 0; slot < 26; slot++) {
  6306  019A4A  6A2D               	clrf	Volts_to_SOC@slot^0,c
  6307  019A4C                     l10172:
  6308                           
  6309                           ;bsoc.c: 158:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6310                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6311  019A4C  502D               	movf	Volts_to_SOC@slot^0,w,c
  6312  019A4E  0D08               	mullw	8
  6313  019A50  0E3F               	movlw	low _BVSOC_TABLE
  6314  019A52  24F3               	addwf	243,w,c
  6315  019A54  6EF6               	movwf	tblptrl,c
  6316  019A56  0EFB               	movlw	high _BVSOC_TABLE
  6317  019A58  20F4               	addwfc	244,w,c
  6318  019A5A  6EF7               	movwf	tblptrh,c
  6319  019A5C                     	if	1	;There are 3 active tblptr bytes
  6320  019A5C  6AF8               	clrf	tblptru,c
  6321  019A5E  0E00               	movlw	low (__mediumconst shr (0+16))
  6322  019A60  22F8               	addwfc	tblptru,f,c
  6323  019A62                     	endif
  6324  019A62  0EFC               	movlw	-4
  6325  019A64  50E3               	movf	plusw1,w,c
  6326  019A66  0009               	tblrd		*+
  6327  019A68  5CF5               	subwf	tablat,w,c
  6328  019A6A  0EFD               	movlw	-3
  6329  019A6C  50E3               	movf	plusw1,w,c
  6330  019A6E  0009               	tblrd		*+
  6331  019A70  58F5               	subwfb	tablat,w,c
  6332  019A72  0EFE               	movlw	-2
  6333  019A74  50E3               	movf	plusw1,w,c
  6334  019A76  0009               	tblrd		*+
  6335  019A78  58F5               	subwfb	tablat,w,c
  6336  019A7A  0EFF               	movlw	-1
  6337  019A7C  50E3               	movf	plusw1,w,c
  6338  019A7E  0009               	tblrd		*+
  6339  019A80  58F5               	subwfb	tablat,w,c
  6340  019A82  B0D8               	btfsc	status,0,c
  6341  019A84  D017               	goto	l10176
  6342                           
  6343                           ;bsoc.c: 159:    C.soc = BVSOC_TABLE[slot][1];
  6344  019A86  502D               	movf	Volts_to_SOC@slot^0,w,c
  6345  019A88  0D08               	mullw	8
  6346  019A8A  0E04               	movlw	4
  6347  019A8C  26F3               	addwf	243,f,c
  6348  019A8E  0E00               	movlw	0
  6349  019A90  22F4               	addwfc	244,f,c
  6350  019A92  0E3F               	movlw	low _BVSOC_TABLE
  6351  019A94  24F3               	addwf	243,w,c
  6352  019A96  6EF6               	movwf	tblptrl,c
  6353  019A98  0EFB               	movlw	high _BVSOC_TABLE
  6354  019A9A  20F4               	addwfc	244,w,c
  6355  019A9C  6EF7               	movwf	tblptrh,c
  6356  019A9E                     	if	1	;There are 3 active tblptr bytes
  6357  019A9E  6AF8               	clrf	tblptru,c
  6358  019AA0  0E00               	movlw	low (__mediumconst shr (0+16))
  6359  019AA2  22F8               	addwfc	tblptru,f,c
  6360  019AA4                     	endif
  6361  019AA4  0009               	tblrd		*+
  6362  019AA6  006F FFD4  F1AA    	movff	tablat,_C+170	;volatile
  6363  019AAC  000A               	tblrd		*-
  6364  019AAE  006F FFD4  F1AB    	movff	tablat,_C+171	;volatile
  6365  019AB4                     l10176:
  6366                           
  6367                           ;bsoc.c: 161:  }
  6368  019AB4  2A2D               	incf	Volts_to_SOC@slot^0,f,c
  6369  019AB6  0E19               	movlw	25
  6370  019AB8  642D               	cpfsgt	Volts_to_SOC@slot^0,c
  6371  019ABA  D7C8               	goto	l10172
  6372                           
  6373                           ;bsoc.c: 163:  return C.soc;
  6374  019ABC  EE20  F1AA         	lfsr	2,_C+170	;volatile
  6375  019AC0  006F FF78  F001    	movff	postinc2,btemp
  6376  019AC6  006F FF74  F002    	movff	postdec2,btemp+1
  6377                           
  6378                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  6379  019ACC  52E5               	movf	postdec1,f,c
  6380  019ACE  52E5               	movf	postdec1,f,c
  6381  019AD0  52E5               	movf	postdec1,f,c
  6382  019AD2  52E5               	movf	postdec1,f,c
  6383  019AD4  0012               	return		;funcret
  6384  019AD6                     __end_of_Volts_to_SOC:
  6385                           	opt callstack 0
  6386                           
  6387 ;; *************** function _hid_display *****************
  6388 ;; Defined at:
  6389 ;;		line 17 in file "hid.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  h               1  [STACK] PTR struct H_data
  6392 ;;		 -> H(7), 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;		None
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1  [STACK] PTR struct H_data
  6397 ;; Registers used:
  6398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  6399 ;; Tracked objects:
  6400 ;;		On entry : 3F/1
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6408 ;;Total ram usage:        0 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; Hardware stack levels required when called:   17
  6411 ;; This function calls:
  6412 ;;		_hid_input
  6413 ;; This function is called by:
  6414 ;;		_main
  6415 ;; This function uses a reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text13
  6419  018F8E                     __ptext13:
  6420                           	opt callstack 0
  6421  018F8E                     _hid_display:
  6422                           	opt callstack 13
  6423                           
  6424                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  6425                           ;stkvar	_h @ sp[(0)+-1]
  6426                           
  6427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6428                           ;incstack = 0
  6429  018F8E  0EFF               	movlw	-1
  6430  018F90  50E3               	movf	plusw1,w,c
  6431  018F92  6EE6               	movwf	postinc1,c
  6432  018F94  ECFD  F0CD         	call	_hid_input	;wreg free
  6433                           
  6434                           ;hid.c: 21:  switch (h->h_state) {
  6435  018F98  D066               	goto	l10524
  6436  018F9A                     l10502:
  6437                           
  6438                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  6439                           ;stkvar	_h @ sp[(0)+-1]
  6440  018F9A  0EFF               	movlw	-1
  6441  018F9C  50E3               	movf	plusw1,w,c
  6442  018F9E  6ED9               	movwf	fsr2l,c
  6443  018FA0  6ADA               	clrf	fsr2h,c
  6444  018FA2  0E01               	movlw	1
  6445  018FA4  26D9               	addwf	fsr2l,f,c
  6446  018FA6  0E01               	movlw	1
  6447  018FA8  6EDF               	movwf	indf2,c
  6448                           
  6449                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  6450                           ;stkvar	_h @ sp[(0)+-1]
  6451  018FAA  0EFF               	movlw	-1
  6452  018FAC  50E3               	movf	plusw1,w,c
  6453  018FAE  6ED9               	movwf	fsr2l,c
  6454  018FB0  6ADA               	clrf	fsr2h,c
  6455  018FB2  0E00               	movlw	0
  6456  018FB4  6EDF               	movwf	indf2,c
  6457                           
  6458                           ;hid.c: 25:   h->wait_enter = 1;
  6459                           ;stkvar	_h @ sp[(0)+-1]
  6460  018FB6  0EFF               	movlw	-1
  6461  018FB8  50E3               	movf	plusw1,w,c
  6462  018FBA  6ED9               	movwf	fsr2l,c
  6463  018FBC  6ADA               	clrf	fsr2h,c
  6464  018FBE  0E04               	movlw	4
  6465  018FC0  26D9               	addwf	fsr2l,f,c
  6466  018FC2  0E01               	movlw	1
  6467  018FC4  6EDF               	movwf	indf2,c
  6468                           
  6469                           ;hid.c: 26:   h->wait_select = 1;
  6470                           ;stkvar	_h @ sp[(0)+-1]
  6471  018FC6  0EFF               	movlw	-1
  6472  018FC8  50E3               	movf	plusw1,w,c
  6473  018FCA  6ED9               	movwf	fsr2l,c
  6474  018FCC  6ADA               	clrf	fsr2h,c
  6475  018FCE  0E02               	movlw	2
  6476  018FD0  26D9               	addwf	fsr2l,f,c
  6477  018FD2  0E01               	movlw	1
  6478  018FD4  6EDF               	movwf	indf2,c
  6479                           
  6480                           ;hid.c: 27:   h->select_p = SW_OFF;
  6481                           ;stkvar	_h @ sp[(0)+-1]
  6482  018FD6  0EFF               	movlw	-1
  6483  018FD8  50E3               	movf	plusw1,w,c
  6484  018FDA  6ED9               	movwf	fsr2l,c
  6485  018FDC  6ADA               	clrf	fsr2h,c
  6486  018FDE  0E03               	movlw	3
  6487  018FE0  26D9               	addwf	fsr2l,f,c
  6488  018FE2  0E00               	movlw	0
  6489  018FE4  6EDF               	movwf	indf2,c
  6490                           
  6491                           ;hid.c: 28:   h->enter_p = SW_OFF;
  6492                           ;stkvar	_h @ sp[(0)+-1]
  6493  018FE6  0EFF               	movlw	-1
  6494  018FE8  50E3               	movf	plusw1,w,c
  6495  018FEA  6ED9               	movwf	fsr2l,c
  6496  018FEC  6ADA               	clrf	fsr2h,c
  6497  018FEE  0E05               	movlw	5
  6498  018FF0  26D9               	addwf	fsr2l,f,c
  6499  018FF2  0E00               	movlw	0
  6500  018FF4  D036               	goto	L1
  6501  018FF6                     l10514:
  6502                           
  6503                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  6504                           ;stkvar	_h @ sp[(0)+-1]
  6505  018FF6  0EFF               	movlw	-1
  6506  018FF8  50E3               	movf	plusw1,w,c
  6507  018FFA  6ED9               	movwf	fsr2l,c
  6508  018FFC  6ADA               	clrf	fsr2h,c
  6509  018FFE  0E02               	movlw	2
  6510  019000  26D9               	addwf	fsr2l,f,c
  6511  019002  50DF               	movf	indf2,w,c
  6512  019004  A4D8               	btfss	status,2,c
  6513  019006  D042               	goto	l1930
  6514                           
  6515                           ;stkvar	_h @ sp[(0)+-1]
  6516  019008  0EFF               	movlw	-1
  6517  01900A  50E3               	movf	plusw1,w,c
  6518  01900C  6ED9               	movwf	fsr2l,c
  6519  01900E  6ADA               	clrf	fsr2h,c
  6520  019010  0E03               	movlw	3
  6521  019012  26D9               	addwf	fsr2l,f,c
  6522  019014  50DF               	movf	indf2,w,c
  6523  019016  A4D8               	btfss	status,2,c
  6524  019018  D039               	goto	l1930
  6525                           
  6526                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  6527                           ;stkvar	_h @ sp[(0)+-1]
  6528  01901A  0EFF               	movlw	-1
  6529  01901C  50E3               	movf	plusw1,w,c
  6530  01901E  6ED9               	movwf	fsr2l,c
  6531  019020  6ADA               	clrf	fsr2h,c
  6532  019022  0E06               	movlw	6
  6533  019024  26D9               	addwf	fsr2l,f,c
  6534                           
  6535                           ;stkvar	_h @ sp[(0)+-1]
  6536  019026  0EFF               	movlw	-1
  6537  019028  50E3               	movf	plusw1,w,c
  6538  01902A  6EE9               	movwf	fsr0l,c
  6539  01902C  6AEA               	clrf	fsr0h,c
  6540  01902E  0E06               	movlw	6
  6541  019030  26E9               	addwf	fsr0l,f,c
  6542  019032  2AEF               	incf	indf0,f,c
  6543  019034  50EF               	movf	indf0,w,c
  6544  019036  0B03               	andlw	3
  6545  019038  6EDF               	movwf	indf2,c
  6546                           
  6547                           ;hid.c: 34:    h->hid_display = h->sequence;
  6548                           ;stkvar	_h @ sp[(0)+-1]
  6549  01903A  0EFF               	movlw	-1
  6550  01903C  50E3               	movf	plusw1,w,c
  6551  01903E  6ED9               	movwf	fsr2l,c
  6552  019040  6ADA               	clrf	fsr2h,c
  6553  019042  0E06               	movlw	6
  6554  019044  26D9               	addwf	fsr2l,f,c
  6555                           
  6556                           ;stkvar	_h @ sp[(0)+-1]
  6557  019046  0EFF               	movlw	-1
  6558  019048  50E3               	movf	plusw1,w,c
  6559  01904A  6EE9               	movwf	fsr0l,c
  6560  01904C  6AEA               	clrf	fsr0h,c
  6561  01904E  006F FF7F FFEF     	movff	indf2,indf0
  6562                           
  6563                           ;hid.c: 35:    h->wait_select = 1;
  6564                           ;stkvar	_h @ sp[(0)+-1]
  6565  019054  0EFF               	movlw	-1
  6566  019056  50E3               	movf	plusw1,w,c
  6567  019058  6ED9               	movwf	fsr2l,c
  6568  01905A  6ADA               	clrf	fsr2h,c
  6569  01905C  0E02               	movlw	2
  6570  01905E  26D9               	addwf	fsr2l,f,c
  6571  019060  0E01               	movlw	1
  6572  019062                     L1:
  6573  019062  6EDF               	movwf	indf2,c
  6574  019064  D013               	goto	l1930
  6575  019066                     l10524:
  6576                           
  6577                           ;stkvar	_h @ sp[(0)+-1]
  6578  019066  0EFF               	movlw	-1
  6579  019068  50E3               	movf	plusw1,w,c
  6580  01906A  6ED9               	movwf	fsr2l,c
  6581  01906C  6ADA               	clrf	fsr2h,c
  6582  01906E  0E01               	movlw	1
  6583  019070  26D9               	addwf	fsr2l,f,c
  6584  019072  50DF               	movf	indf2,w,c
  6585  019074  6E0B               	movwf	(btemp+10)^0,c
  6586  019076  6A0C               	clrf	(btemp+11)^0,c
  6587                           
  6588                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6589                           ; Switch size 1, requested type "simple"
  6590                           ; Number of cases is 1, Range of values is 0 to 0
  6591                           ; switch strategies available:
  6592                           ; Name         Instructions Cycles
  6593                           ; simple_byte            4     3 (average)
  6594                           ;	Chosen strategy is simple_byte
  6595  019078  500C               	movf	(btemp+11)^0,w,c
  6596  01907A  0A00               	xorlw	0	; case 0
  6597  01907C  A4D8               	btfss	status,2,c
  6598  01907E  D7BB               	goto	l10514
  6599                           
  6600                           ; Switch size 1, requested type "simple"
  6601                           ; Number of cases is 2, Range of values is 0 to 1
  6602                           ; switch strategies available:
  6603                           ; Name         Instructions Cycles
  6604                           ; simple_byte            7     4 (average)
  6605                           ;	Chosen strategy is simple_byte
  6606  019080  500B               	movf	(btemp+10)^0,w,c
  6607  019082  0A00               	xorlw	0	; case 0
  6608  019084  B4D8               	btfsc	status,2,c
  6609  019086  D789               	goto	l10502
  6610  019088  0A01               	xorlw	1	; case 1
  6611  01908A  D7B5               	goto	l10514
  6612  01908C                     l1930:
  6613                           
  6614                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6615  01908C  52E5               	movf	postdec1,f,c
  6616  01908E  0012               	return		;funcret
  6617  019090                     __end_of_hid_display:
  6618                           	opt callstack 0
  6619                           
  6620 ;; *************** function _hid_input *****************
  6621 ;; Defined at:
  6622 ;;		line 3 in file "hid.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  h               1  [STACK] PTR struct H_data
  6625 ;;		 -> H(7), 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  1  [STACK] PTR struct H_data
  6630 ;; Registers used:
  6631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/1
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6641 ;;Total ram usage:        0 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:   16
  6644 ;; This function calls:
  6645 ;;		_get_switch
  6646 ;; This function is called by:
  6647 ;;		_hid_display
  6648 ;; This function uses a reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text14
  6652  019BFA                     __ptext14:
  6653                           	opt callstack 0
  6654  019BFA                     _hid_input:
  6655                           	opt callstack 13
  6656                           
  6657                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  6658                           
  6659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6660                           ;incstack = 0
  6661  019BFA  0E02               	movlw	2
  6662  019BFC  6EE6               	movwf	postinc1,c
  6663  019BFE  EC34  F0D5         	call	_get_switch	;wreg free
  6664  019C02  5001               	movf	btemp^0,w,c
  6665  019C04  B4D8               	btfsc	status,2,c
  6666  019C06  D01C               	goto	l10104
  6667                           
  6668                           ;hid.c: 6:   h->wait_select = 0;
  6669                           ;stkvar	_h @ sp[(0)+-1]
  6670  019C08  0EFF               	movlw	-1
  6671  019C0A  50E3               	movf	plusw1,w,c
  6672  019C0C  6ED9               	movwf	fsr2l,c
  6673  019C0E  6ADA               	clrf	fsr2h,c
  6674  019C10  0E02               	movlw	2
  6675  019C12  26D9               	addwf	fsr2l,f,c
  6676  019C14  0E00               	movlw	0
  6677  019C16  6EDF               	movwf	indf2,c
  6678                           
  6679                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  6680  019C18  0E02               	movlw	2
  6681  019C1A  6EE6               	movwf	postinc1,c
  6682  019C1C  EC34  F0D5         	call	_get_switch	;wreg free
  6683  019C20  5001               	movf	btemp^0,w,c
  6684  019C22  B4D8               	btfsc	status,2,c
  6685  019C24  D003               	goto	u9290
  6686  019C26  6A0C               	clrf	(btemp+11)^0,c
  6687  019C28  2A0C               	incf	(btemp+11)^0,f,c
  6688  019C2A  D001               	goto	u9308
  6689  019C2C                     u9290:
  6690  019C2C  6A0C               	clrf	(btemp+11)^0,c
  6691  019C2E                     u9308:
  6692                           
  6693                           ;stkvar	_h @ sp[(0)+-1]
  6694  019C2E  0EFF               	movlw	-1
  6695  019C30  50E3               	movf	plusw1,w,c
  6696  019C32  6ED9               	movwf	fsr2l,c
  6697  019C34  6ADA               	clrf	fsr2h,c
  6698  019C36  0E03               	movlw	3
  6699  019C38  26D9               	addwf	fsr2l,f,c
  6700  019C3A  0060  F033  FFDF   	movff	btemp+11,indf2
  6701  019C40                     l10104:
  6702                           
  6703                           ;hid.c: 10:  if (get_switch(SENTER)) {
  6704  019C40  0E03               	movlw	3
  6705  019C42  6EE6               	movwf	postinc1,c
  6706  019C44  EC34  F0D5         	call	_get_switch	;wreg free
  6707  019C48  5001               	movf	btemp^0,w,c
  6708  019C4A  B4D8               	btfsc	status,2,c
  6709  019C4C  D01C               	goto	l1921
  6710                           
  6711                           ;hid.c: 11:   h->wait_enter = 0;
  6712                           ;stkvar	_h @ sp[(0)+-1]
  6713  019C4E  0EFF               	movlw	-1
  6714  019C50  50E3               	movf	plusw1,w,c
  6715  019C52  6ED9               	movwf	fsr2l,c
  6716  019C54  6ADA               	clrf	fsr2h,c
  6717  019C56  0E04               	movlw	4
  6718  019C58  26D9               	addwf	fsr2l,f,c
  6719  019C5A  0E00               	movlw	0
  6720  019C5C  6EDF               	movwf	indf2,c
  6721                           
  6722                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  6723  019C5E  0E03               	movlw	3
  6724  019C60  6EE6               	movwf	postinc1,c
  6725  019C62  EC34  F0D5         	call	_get_switch	;wreg free
  6726  019C66  5001               	movf	btemp^0,w,c
  6727  019C68  B4D8               	btfsc	status,2,c
  6728  019C6A  D003               	goto	u9320
  6729  019C6C  6A0C               	clrf	(btemp+11)^0,c
  6730  019C6E  2A0C               	incf	(btemp+11)^0,f,c
  6731  019C70  D001               	goto	u9338
  6732  019C72                     u9320:
  6733  019C72  6A0C               	clrf	(btemp+11)^0,c
  6734  019C74                     u9338:
  6735                           
  6736                           ;stkvar	_h @ sp[(0)+-1]
  6737  019C74  0EFF               	movlw	-1
  6738  019C76  50E3               	movf	plusw1,w,c
  6739  019C78  6ED9               	movwf	fsr2l,c
  6740  019C7A  6ADA               	clrf	fsr2h,c
  6741  019C7C  0E05               	movlw	5
  6742  019C7E  26D9               	addwf	fsr2l,f,c
  6743  019C80  0060  F033  FFDF   	movff	btemp+11,indf2
  6744  019C86                     l1921:
  6745                           
  6746                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6747  019C86  52E5               	movf	postdec1,f,c
  6748  019C88  0012               	return		;funcret
  6749  019C8A                     __end_of_hid_input:
  6750                           	opt callstack 0
  6751                           
  6752 ;; *************** function _get_switch *****************
  6753 ;; Defined at:
  6754 ;;		line 18 in file "dio.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  i               1  [STACK] unsigned char 
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;		None
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  1  [STACK] enum E17021
  6761 ;; Registers used:
  6762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/2
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6772 ;;Total ram usage:        0 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:   15
  6775 ;; This function calls:
  6776 ;;		Nothing
  6777 ;; This function is called by:
  6778 ;;		_main
  6779 ;;		_hid_input
  6780 ;; This function uses a reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text15
  6784  01AA68                     __ptext15:
  6785                           	opt callstack 0
  6786  01AA68                     _get_switch:
  6787                           	opt callstack 13
  6788                           
  6789                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6790                           ;stkvar	_i @ sp[(0)+-1]
  6791                           
  6792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6793                           ;incstack = 0
  6794  01AA68  0EFF               	movlw	-1
  6795  01AA6A  006F FF8C  F001    	movff	plusw1,btemp
  6796  01AA70  0E03               	movlw	3
  6797  01AA72  6401               	cpfsgt	btemp^0,c
  6798  01AA74  D002               	goto	l9368
  6799                           
  6800                           ;dio.c: 21:   return SW_OFF;
  6801  01AA76  0E00               	movlw	0
  6802  01AA78  D00A               	goto	L2
  6803  01AA7A                     l9368:
  6804                           
  6805                           ;dio.c: 23:  return S.button[i].sw;
  6806                           ;stkvar	_i @ sp[(0)+-1]
  6807  01AA7A  0EFF               	movlw	-1
  6808  01AA7C  50E3               	movf	plusw1,w,c
  6809  01AA7E  0D05               	mullw	5
  6810  01AA80  0EBC               	movlw	low _S
  6811  01AA82  24F3               	addwf	243,w,c
  6812  01AA84  6ED9               	movwf	fsr2l,c
  6813  01AA86  0E02               	movlw	high _S
  6814  01AA88  20F4               	addwfc	prodh,w,c
  6815  01AA8A  6EDA               	movwf	fsr2h,c
  6816  01AA8C  50DF               	movf	indf2,w,c
  6817  01AA8E                     L2:
  6818  01AA8E  6E01               	movwf	btemp^0,c
  6819                           
  6820                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6821  01AA90  52E5               	movf	postdec1,f,c
  6822  01AA92  0012               	return		;funcret
  6823  01AA94                     __end_of_get_switch:
  6824                           	opt callstack 0
  6825                           
  6826 ;; *************** function _esr_check *****************
  6827 ;; Defined at:
  6828 ;;		line 169 in file "bsoc.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;		None
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;		None
  6833 ;; Return value:  Size  Location     Type
  6834 ;;                  4  [STACK] float 
  6835 ;; Registers used:
  6836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6846 ;;Total ram usage:        0 bytes
  6847 ;; Hardware stack levels used:    1
  6848 ;; Hardware stack levels required when called:   18
  6849 ;; This function calls:
  6850 ;;		_WaitMs
  6851 ;;		___fldiv
  6852 ;;		___flsub
  6853 ;;		_conv_raw_result
  6854 ;;		_fabsf
  6855 ;;		_set_load_relay_one
  6856 ;;		_set_load_relay_two
  6857 ;;		_update_adc_result
  6858 ;; This function is called by:
  6859 ;;		_main
  6860 ;; This function uses a reentrant model
  6861 ;;
  6862                           
  6863                           	psect	text16
  6864  01764C                     __ptext16:
  6865                           	opt callstack 0
  6866  01764C                     _esr_check:
  6867                           	opt callstack 12
  6868                           
  6869                           ;bsoc.c: 171:  set_load_relay_one(0);
  6870                           
  6871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6872                           ;incstack = 0
  6873  01764C  0E00               	movlw	0
  6874  01764E  6EE6               	movwf	postinc1,c
  6875  017650  EC55  F0D8         	call	_set_load_relay_one	;wreg free
  6876                           
  6877                           ;bsoc.c: 172:  set_load_relay_two(0);
  6878  017654  0E00               	movlw	0
  6879  017656  6EE6               	movwf	postinc1,c
  6880  017658  EC4D  F0D8         	call	_set_load_relay_two	;wreg free
  6881                           
  6882                           ;bsoc.c: 173:  WaitMs(10000);
  6883  01765C  0E10               	movlw	16
  6884  01765E  6EE6               	movwf	postinc1,c
  6885  017660  0E27               	movlw	39
  6886  017662  6EE6               	movwf	postinc1,c
  6887  017664  EC39  F0D4         	call	_WaitMs	;wreg free
  6888                           
  6889                           ;bsoc.c: 174:  update_adc_result();
  6890  017668  ECE5  F0D3         	call	_update_adc_result	;wreg free
  6891                           
  6892                           ;bsoc.c: 175:  C.bv_noload = conv_raw_result(V_BAT, CONV);
  6893  01766C  0E00               	movlw	0
  6894  01766E  6EE6               	movwf	postinc1,c
  6895  017670  0E04               	movlw	4
  6896  017672  6EE6               	movwf	postinc1,c
  6897  017674  EC02  F0A5         	call	_conv_raw_result	;wreg free
  6898  017678  0060  F004  F1E7   	movff	btemp,_C+231	;volatile
  6899  01767E  0060  F008  F1E8   	movff	btemp+1,_C+232	;volatile
  6900  017684  0060  F00C  F1E9   	movff	btemp+2,_C+233	;volatile
  6901  01768A  0060  F010  F1EA   	movff	btemp+3,_C+234	;volatile
  6902                           
  6903                           ;bsoc.c: 177:  set_load_relay_one(1);
  6904  017690  0E01               	movlw	1
  6905  017692  6EE6               	movwf	postinc1,c
  6906  017694  EC55  F0D8         	call	_set_load_relay_one	;wreg free
  6907                           
  6908                           ;bsoc.c: 178:  WaitMs(10000);
  6909  017698  0E10               	movlw	16
  6910  01769A  6EE6               	movwf	postinc1,c
  6911  01769C  0E27               	movlw	39
  6912  01769E  6EE6               	movwf	postinc1,c
  6913  0176A0  EC39  F0D4         	call	_WaitMs	;wreg free
  6914                           
  6915                           ;bsoc.c: 179:  update_adc_result();
  6916  0176A4  ECE5  F0D3         	call	_update_adc_result	;wreg free
  6917                           
  6918                           ;bsoc.c: 180:  C.bv_one_load = conv_raw_result(V_BAT, CONV);
  6919  0176A8  0E00               	movlw	0
  6920  0176AA  6EE6               	movwf	postinc1,c
  6921  0176AC  0E04               	movlw	4
  6922  0176AE  6EE6               	movwf	postinc1,c
  6923  0176B0  EC02  F0A5         	call	_conv_raw_result	;wreg free
  6924  0176B4  0060  F004  F1EB   	movff	btemp,_C+235	;volatile
  6925  0176BA  0060  F008  F1EC   	movff	btemp+1,_C+236	;volatile
  6926  0176C0  0060  F00C  F1ED   	movff	btemp+2,_C+237	;volatile
  6927  0176C6  0060  F010  F1EE   	movff	btemp+3,_C+238	;volatile
  6928                           
  6929                           ;bsoc.c: 181:  C.load_i1 = conv_raw_result(C_BATT, CONV);
  6930  0176CC  0E00               	movlw	0
  6931  0176CE  6EE6               	movwf	postinc1,c
  6932  0176D0  0E00               	movlw	0
  6933  0176D2  6EE6               	movwf	postinc1,c
  6934  0176D4  EC02  F0A5         	call	_conv_raw_result	;wreg free
  6935  0176D8  0060  F004  F1DF   	movff	btemp,_C+223	;volatile
  6936  0176DE  0060  F008  F1E0   	movff	btemp+1,_C+224	;volatile
  6937  0176E4  0060  F00C  F1E1   	movff	btemp+2,_C+225	;volatile
  6938  0176EA  0060  F010  F1E2   	movff	btemp+3,_C+226	;volatile
  6939                           
  6940                           ;bsoc.c: 183:  set_load_relay_two(1);
  6941  0176F0  0E01               	movlw	1
  6942  0176F2  6EE6               	movwf	postinc1,c
  6943  0176F4  EC4D  F0D8         	call	_set_load_relay_two	;wreg free
  6944                           
  6945                           ;bsoc.c: 184:  WaitMs(10000);
  6946  0176F8  0E10               	movlw	16
  6947  0176FA  6EE6               	movwf	postinc1,c
  6948  0176FC  0E27               	movlw	39
  6949  0176FE  6EE6               	movwf	postinc1,c
  6950  017700  EC39  F0D4         	call	_WaitMs	;wreg free
  6951                           
  6952                           ;bsoc.c: 185:  update_adc_result();
  6953  017704  ECE5  F0D3         	call	_update_adc_result	;wreg free
  6954                           
  6955                           ;bsoc.c: 186:  C.bv_full_load = conv_raw_result(V_BAT, CONV);
  6956  017708  0E00               	movlw	0
  6957  01770A  6EE6               	movwf	postinc1,c
  6958  01770C  0E04               	movlw	4
  6959  01770E  6EE6               	movwf	postinc1,c
  6960  017710  EC02  F0A5         	call	_conv_raw_result	;wreg free
  6961  017714  0060  F004  F1EF   	movff	btemp,_C+239	;volatile
  6962  01771A  0060  F008  F1F0   	movff	btemp+1,_C+240	;volatile
  6963  017720  0060  F00C  F1F1   	movff	btemp+2,_C+241	;volatile
  6964  017726  0060  F010  F1F2   	movff	btemp+3,_C+242	;volatile
  6965                           
  6966                           ;bsoc.c: 187:  C.load_i2 = conv_raw_result(C_BATT, CONV);
  6967  01772C  0E00               	movlw	0
  6968  01772E  6EE6               	movwf	postinc1,c
  6969  017730  0E00               	movlw	0
  6970  017732  6EE6               	movwf	postinc1,c
  6971  017734  EC02  F0A5         	call	_conv_raw_result	;wreg free
  6972  017738  0060  F004  F1E3   	movff	btemp,_C+227	;volatile
  6973  01773E  0060  F008  F1E4   	movff	btemp+1,_C+228	;volatile
  6974  017744  0060  F00C  F1E5   	movff	btemp+2,_C+229	;volatile
  6975  01774A  0060  F010  F1E6   	movff	btemp+3,_C+230	;volatile
  6976                           
  6977                           ;bsoc.c: 189:  C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2))
      +                          ;
  6978  017750  0060  F78F  FFE6   	movff	_C+227,postinc1
  6979  017756  0060  F793  FFE6   	movff	_C+228,postinc1
  6980  01775C  0060  F797  FFE6   	movff	_C+229,postinc1
  6981  017762  0060  F79B  FFE6   	movff	_C+230,postinc1
  6982  017768  0060  F77F  FFE6   	movff	_C+223,postinc1
  6983  01776E  0060  F783  FFE6   	movff	_C+224,postinc1
  6984  017774  0060  F787  FFE6   	movff	_C+225,postinc1
  6985  01777A  0060  F78B  FFE6   	movff	_C+226,postinc1
  6986  017780  EC77  F0D2         	call	___flsub	;wreg free
  6987  017784  0060  F007  FFE6   	movff	btemp,postinc1
  6988  01778A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6989  017790  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6990  017796  0060  F013  FFE6   	movff	btemp+3,postinc1
  6991  01779C  0060  F7BF  FFE6   	movff	_C+239,postinc1
  6992  0177A2  0060  F7C3  FFE6   	movff	_C+240,postinc1
  6993  0177A8  0060  F7C7  FFE6   	movff	_C+241,postinc1
  6994  0177AE  0060  F7CB  FFE6   	movff	_C+242,postinc1
  6995  0177B4  0060  F7AF  FFE6   	movff	_C+235,postinc1
  6996  0177BA  0060  F7B3  FFE6   	movff	_C+236,postinc1
  6997  0177C0  0060  F7B7  FFE6   	movff	_C+237,postinc1
  6998  0177C6  0060  F7BB  FFE6   	movff	_C+238,postinc1
  6999  0177CC  EC77  F0D2         	call	___flsub	;wreg free
  7000  0177D0  0060  F007  FFE6   	movff	btemp,postinc1
  7001  0177D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7002  0177DC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7003  0177E2  0060  F013  FFE6   	movff	btemp+3,postinc1
  7004  0177E8  EC45  F0A2         	call	___fldiv	;wreg free
  7005  0177EC  0060  F007  FFE6   	movff	btemp,postinc1
  7006  0177F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7007  0177F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7008  0177FE  0060  F013  FFE6   	movff	btemp+3,postinc1
  7009  017804  EC30  F0CB         	call	_fabsf	;wreg free
  7010  017808  0060  F004  F184   	movff	btemp,_C+132	;volatile
  7011  01780E  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
  7012  017814  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
  7013  01781A  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
  7014                           
  7015                           ;bsoc.c: 190:  set_load_relay_one(0);
  7016  017820  0E00               	movlw	0
  7017  017822  6EE6               	movwf	postinc1,c
  7018  017824  EC55  F0D8         	call	_set_load_relay_one	;wreg free
  7019                           
  7020                           ;bsoc.c: 191:  set_load_relay_two(0);
  7021  017828  0E00               	movlw	0
  7022  01782A  6EE6               	movwf	postinc1,c
  7023  01782C  EC4D  F0D8         	call	_set_load_relay_two	;wreg free
  7024                           
  7025                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7026                           
  7027                           ;bsoc.c: 192:  return C.esr;;	Return value of _esr_check is never used
  7028  017830  0012               	return		;funcret
  7029  017832                     __end_of_esr_check:
  7030                           	opt callstack 0
  7031                           
  7032 ;; *************** function _update_adc_result *****************
  7033 ;; Defined at:
  7034 ;;		line 71 in file "daq.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;		None
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;		None
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1  [STACK] _Bool 
  7041 ;; Registers used:
  7042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7052 ;;Total ram usage:        0 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:   17
  7055 ;; This function calls:
  7056 ;;		_StartTimer
  7057 ;;		_TimerDone
  7058 ;;		_check_adc_scan
  7059 ;;		_clear_adc_scan
  7060 ;;		_start_adc_scan
  7061 ;; This function is called by:
  7062 ;;		_esr_check
  7063 ;; This function uses a reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text17
  7067  01A7CA                     __ptext17:
  7068                           	opt callstack 0
  7069  01A7CA                     _update_adc_result:
  7070                           	opt callstack 12
  7071                           
  7072                           ;daq.c: 73:  if (R.done) {
  7073                           
  7074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7075                           ;incstack = 0
  7076  01A7CA  0100               	movlb	0	; () banked
  7077  01A7CC  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7078  01A7CE  B4D8               	btfsc	status,2,c
  7079  01A7D0  0012               	return	
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;daq.c: 74:   clear_adc_scan();
  7083  01A7D2  ECB3  F0D8         	call	_clear_adc_scan	;wreg free
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;daq.c: 75:   start_adc_scan();
  7087  01A7D6  EC1E  F0D0         	call	_start_adc_scan	;wreg free
  7088                           
  7089                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7090  01A7DA  0EC8               	movlw	200
  7091  01A7DC  6EE6               	movwf	postinc1,c
  7092  01A7DE  0E00               	movlw	0
  7093  01A7E0  6EE6               	movwf	postinc1,c
  7094  01A7E2  0E01               	movlw	1
  7095  01A7E4  6EE6               	movwf	postinc1,c
  7096  01A7E6  EC46  F0D3         	call	_StartTimer	;wreg free
  7097  01A7EA                     l10034:
  7098  01A7EA  0E01               	movlw	1
  7099  01A7EC  6EE6               	movwf	postinc1,c
  7100  01A7EE  ECC7  F0D5         	call	_TimerDone	;wreg free
  7101  01A7F2  5001               	movf	btemp^0,w,c
  7102  01A7F4  A4D8               	btfss	status,2,c
  7103  01A7F6  0012               	return	
  7104  01A7F8  ECA3  F0D8         	call	_check_adc_scan	;wreg free
  7105  01A7FC  5001               	movf	btemp^0,w,c
  7106  01A7FE  A4D8               	btfss	status,2,c
  7107  01A800  0012               	return	
  7108  01A802  D7F3               	goto	l10034
  7109  01A804                     __end_of_update_adc_result:
  7110                           	opt callstack 0
  7111                           
  7112 ;; *************** function _start_adc_scan *****************
  7113 ;; Defined at:
  7114 ;;		line 32 in file "daq.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;		None
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1  [STACK] _Bool 
  7121 ;; Registers used:
  7122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 1/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7132 ;;Total ram usage:        0 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:   16
  7135 ;; This function calls:
  7136 ;;		_ADCC_DischargeSampleCapacitor
  7137 ;;		_ADCC_SetADIInterruptHandler
  7138 ;;		_ADCC_SetADTIInterruptHandler
  7139 ;;		_ADCC_StartConversion
  7140 ;; This function is called by:
  7141 ;;		_main
  7142 ;;		_update_adc_result
  7143 ;; This function uses a reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text18
  7147  01A03C                     __ptext18:
  7148                           	opt callstack 0
  7149  01A03C                     _start_adc_scan:
  7150                           	opt callstack 14
  7151                           
  7152                           ;daq.c: 34:  if (R.done)
  7153                           
  7154                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7155                           ;incstack = 0
  7156  01A03C  0100               	movlb	0	; () banked
  7157  01A03E  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7158  01A040  A4D8               	btfss	status,2,c
  7159  01A042  0012               	return	
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;daq.c: 37:  R.scan_index = 0;
  7163  01A044  6BE8               	clrf	(_R+36)& (0+255),b	;volatile
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7167  01A046  013A               	movlb	58	; () banked
  7168  01A048  5140               	movf	64,w,b	;volatile
  7169  01A04A  006E F940  F001    	movff	14928,btemp	;volatile
  7170  01A050  6A02               	clrf	(btemp+1)^0,c
  7171  01A052  0060  F004  F002   	movff	btemp,btemp+1
  7172  01A058  6A01               	clrf	btemp^0,c
  7173  01A05A  2601               	addwf	btemp^0,f,c
  7174  01A05C  0E00               	movlw	0
  7175  01A05E  2202               	addwfc	(btemp+1)^0,f,c
  7176  01A060  0E77               	movlw	119
  7177  01A062  1401               	andwf	btemp^0,w,c
  7178  01A064  0100               	movlb	0	; () banked
  7179  01A066  6FE9               	movwf	(_R+37)& (0+255),b	;volatile
  7180  01A068  0E3C               	movlw	60
  7181  01A06A  1402               	andwf	(btemp+1)^0,w,c
  7182  01A06C  6FEA               	movwf	(_R+38)& (0+255),b	;volatile
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  7186  01A06E  0E8E               	movlw	low _adc_int_handler
  7187  01A070  6EE6               	movwf	postinc1,c
  7188  01A072  0EB1               	movlw	high _adc_int_handler
  7189  01A074  6EE6               	movwf	postinc1,c
  7190  01A076  0E01               	movlw	low (_adc_int_handler shr (0+16))
  7191  01A078  6EE6               	movwf	postinc1,c
  7192  01A07A  EC8F  F0D6         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7193                           
  7194                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  7195  01A07E  0E1A               	movlw	low _adc_int_t_handler
  7196  01A080  6EE6               	movwf	postinc1,c
  7197  01A082  0E9E               	movlw	high _adc_int_t_handler
  7198  01A084  6EE6               	movwf	postinc1,c
  7199  01A086  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  7200  01A088  6EE6               	movwf	postinc1,c
  7201  01A08A  EC7B  F0D6         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7202                           
  7203                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  7204  01A08E  EC9F  F0D8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  7205                           
  7206                           ; BSR set to: 62
  7207                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  7208  01A092  0100               	movlb	0	; () banked
  7209  01A094  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
  7210  01A096  0B0F               	andlw	15
  7211  01A098  6EE6               	movwf	postinc1,c
  7212  01A09A  EC44  F0D8         	call	_ADCC_StartConversion	;wreg free
  7213                           
  7214                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7215  01A09E  0012               	return		;funcret
  7216  01A0A0                     __end_of_start_adc_scan:
  7217                           	opt callstack 0
  7218                           
  7219 ;; *************** function _ADCC_StartConversion *****************
  7220 ;; Defined at:
  7221 ;;		line 128 in file "mcc_generated_files/adcc.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  channel         1  [STACK] enum E16136
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;		None
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  1  [STACK] void 
  7228 ;; Registers used:
  7229 ;;		fsr1l, fsr1h
  7230 ;; Tracked objects:
  7231 ;;		On entry : 3F/0
  7232 ;;		On exit  : 3F/3E
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7239 ;;Total ram usage:        0 bytes
  7240 ;; Hardware stack levels used:    1
  7241 ;; Hardware stack levels required when called:   15
  7242 ;; This function calls:
  7243 ;;		Nothing
  7244 ;; This function is called by:
  7245 ;;		_start_adc_scan
  7246 ;;		_adc_int_t_handler
  7247 ;; This function uses a reentrant model
  7248 ;;
  7249                           
  7250                           	psect	text19
  7251  01B088                     __ptext19:
  7252                           	opt callstack 0
  7253  01B088                     _ADCC_StartConversion:
  7254                           	opt callstack 0
  7255                           
  7256                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  7257                           ;stkvar	_channel @ sp[(0)+-1]
  7258                           
  7259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7260                           ;incstack = 0
  7261 ;; hardware stack exceeded
  7262  01B088  0EFF               	movlw	-1
  7263  01B08A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  7264                           
  7265                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  7266  01B090  013E               	movlb	62	; () banked
  7267  01B092  8FF8               	bsf	248,7,b	;volatile
  7268                           
  7269                           ; BSR set to: 62
  7270                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  7271  01B094  81F8               	bsf	248,0,b	;volatile
  7272                           
  7273                           ; BSR set to: 62
  7274                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  7275  01B096  52E5               	movf	postdec1,f,c
  7276  01B098  0012               	return		;funcret
  7277  01B09A                     __end_of_ADCC_StartConversion:
  7278                           	opt callstack 0
  7279                           
  7280 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  7281 ;; Defined at:
  7282 ;;		line 189 in file "mcc_generated_files/adcc.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;		None
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;		None
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  1  [STACK] void 
  7289 ;; Registers used:
  7290 ;;		wreg, status,2
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 3F/3E
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7300 ;;Total ram usage:        0 bytes
  7301 ;; Hardware stack levels used:    1
  7302 ;; Hardware stack levels required when called:   15
  7303 ;; This function calls:
  7304 ;;		Nothing
  7305 ;; This function is called by:
  7306 ;;		_start_adc_scan
  7307 ;;		_adc_int_t_handler
  7308 ;; This function uses a reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text20
  7312  01B13E                     __ptext20:
  7313                           	opt callstack 0
  7314  01B13E                     _ADCC_DischargeSampleCapacitor:
  7315                           	opt callstack 0
  7316                           
  7317                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  7318                           
  7319                           ; BSR set to: 62
  7320                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7321                           ;incstack = 0
  7322 ;; hardware stack exceeded
  7323  01B13E  0E3B               	movlw	59
  7324  01B140  013E               	movlb	62	; () banked
  7325  01B142  6FF1               	movwf	241,b	;volatile
  7326                           
  7327                           ; BSR set to: 62
  7328                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  7329  01B144  0012               	return		;funcret
  7330  01B146                     __end_of_ADCC_DischargeSampleCapacitor:
  7331                           	opt callstack 0
  7332                           
  7333 ;; *************** function _clear_adc_scan *****************
  7334 ;; Defined at:
  7335 ;;		line 63 in file "daq.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;		None
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;		None
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  1  [STACK] void 
  7342 ;; Registers used:
  7343 ;;		None
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 3F/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7353 ;;Total ram usage:        0 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:   15
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_main
  7360 ;;		_update_adc_result
  7361 ;; This function uses a reentrant model
  7362 ;;
  7363                           
  7364                           	psect	text21
  7365  01B166                     __ptext21:
  7366                           	opt callstack 0
  7367  01B166                     _clear_adc_scan:
  7368                           	opt callstack 13
  7369                           
  7370                           ;daq.c: 65:  R.done = 0;
  7371                           
  7372                           ; BSR set to: 62
  7373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7374                           ;incstack = 0
  7375  01B166  0100               	movlb	0	; () banked
  7376  01B168  6BEB               	clrf	(_R+39)& (0+255),b	;volatile
  7377                           
  7378                           ; BSR set to: 0
  7379                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7380  01B16A  0012               	return		;funcret
  7381  01B16C                     __end_of_clear_adc_scan:
  7382                           	opt callstack 0
  7383                           
  7384 ;; *************** function _check_adc_scan *****************
  7385 ;; Defined at:
  7386 ;;		line 55 in file "daq.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;		None
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;		None
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  1  [STACK] _Bool 
  7393 ;; Registers used:
  7394 ;;		btemp
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7404 ;;Total ram usage:        0 bytes
  7405 ;; Hardware stack levels used:    1
  7406 ;; Hardware stack levels required when called:   15
  7407 ;; This function calls:
  7408 ;;		Nothing
  7409 ;; This function is called by:
  7410 ;;		_main
  7411 ;;		_update_adc_result
  7412 ;; This function uses a reentrant model
  7413 ;;
  7414                           
  7415                           	psect	text22
  7416  01B146                     __ptext22:
  7417                           	opt callstack 0
  7418  01B146                     _check_adc_scan:
  7419                           	opt callstack 13
  7420                           
  7421                           ;daq.c: 57:  return R.done;
  7422                           
  7423                           ; BSR set to: 0
  7424                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7425                           ;incstack = 0
  7426  01B146  0060  F3AC  F001   	movff	_R+39,btemp	;volatile
  7427                           
  7428                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7429  01B14C  0012               	return		;funcret
  7430  01B14E                     __end_of_check_adc_scan:
  7431                           	opt callstack 0
  7432                           
  7433 ;; *************** function _set_load_relay_two *****************
  7434 ;; Defined at:
  7435 ;;		line 128 in file "mbmc.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  mode            1  [STACK] _Bool 
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;		None
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  1  [STACK] void 
  7442 ;; Registers used:
  7443 ;;		wreg, fsr1l, fsr1h
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7453 ;;Total ram usage:        0 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; Hardware stack levels required when called:   15
  7456 ;; This function calls:
  7457 ;;		Nothing
  7458 ;; This function is called by:
  7459 ;;		_main
  7460 ;;		_esr_check
  7461 ;; This function uses a reentrant model
  7462 ;;
  7463                           
  7464                           	psect	text23
  7465  01B09A                     __ptext23:
  7466                           	opt callstack 0
  7467  01B09A                     _set_load_relay_two:
  7468                           	opt callstack 15
  7469                           
  7470                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  7471                           ;stkvar	_mode @ sp[(0)+-1]
  7472                           
  7473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7474                           ;incstack = 0
  7475  01B09A  0EFF               	movlw	-1
  7476  01B09C  B0E3               	btfsc	plusw1,0,c
  7477  01B09E  D002               	bra	u8935
  7478  01B0A0  9ABD               	bcf	189,5,c	;volatile
  7479  01B0A2  D001               	bra	u8936
  7480  01B0A4                     u8935:
  7481  01B0A4  8ABD               	bsf	189,5,c	;volatile
  7482  01B0A6                     u8936:
  7483                           
  7484                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7485  01B0A6  52E5               	movf	postdec1,f,c
  7486  01B0A8  0012               	return		;funcret
  7487  01B0AA                     __end_of_set_load_relay_two:
  7488                           	opt callstack 0
  7489                           
  7490 ;; *************** function _set_load_relay_one *****************
  7491 ;; Defined at:
  7492 ;;		line 123 in file "mbmc.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  mode            1  [STACK] _Bool 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;		None
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  1  [STACK] void 
  7499 ;; Registers used:
  7500 ;;		wreg, fsr1l, fsr1h
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7510 ;;Total ram usage:        0 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; Hardware stack levels required when called:   15
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		_main
  7517 ;;		_esr_check
  7518 ;; This function uses a reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text24
  7522  01B0AA                     __ptext24:
  7523                           	opt callstack 0
  7524  01B0AA                     _set_load_relay_one:
  7525                           	opt callstack 15
  7526                           
  7527                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  7528                           ;stkvar	_mode @ sp[(0)+-1]
  7529                           
  7530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7531                           ;incstack = 0
  7532  01B0AA  0EFF               	movlw	-1
  7533  01B0AC  B0E3               	btfsc	plusw1,0,c
  7534  01B0AE  D002               	bra	u8925
  7535  01B0B0  98BD               	bcf	189,4,c	;volatile
  7536  01B0B2  D001               	bra	u8926
  7537  01B0B4                     u8925:
  7538  01B0B4  88BD               	bsf	189,4,c	;volatile
  7539  01B0B6                     u8926:
  7540                           
  7541                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7542  01B0B6  52E5               	movf	postdec1,f,c
  7543  01B0B8  0012               	return		;funcret
  7544  01B0BA                     __end_of_set_load_relay_one:
  7545                           	opt callstack 0
  7546                           
  7547 ;; *************** function _eaDogM_WriteCommand *****************
  7548 ;; Defined at:
  7549 ;;		line 175 in file "eadog.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;  cmd             1  [STACK] const unsigned char 
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;		None
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  1  [STACK] void 
  7556 ;; Registers used:
  7557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7558 ;; Tracked objects:
  7559 ;;		On entry : 3F/3D
  7560 ;;		On exit  : 3F/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7567 ;;Total ram usage:        0 bytes
  7568 ;; Hardware stack levels used:    1
  7569 ;; Hardware stack levels required when called:   25
  7570 ;; This function calls:
  7571 ;;		_send_lcd_cmd_dma
  7572 ;; This function is called by:
  7573 ;;		_main
  7574 ;; This function uses a reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text25
  7578  01B0CA                     __ptext25:
  7579                           	opt callstack 0
  7580  01B0CA                     _eaDogM_WriteCommand:
  7581                           	opt callstack 5
  7582                           
  7583                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  7584                           ;stkvar	_cmd @ sp[(0)+-1]
  7585                           
  7586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7587                           ;incstack = 0
  7588  01B0CA  0EFF               	movlw	-1
  7589  01B0CC  50E3               	movf	plusw1,w,c
  7590  01B0CE  6EE6               	movwf	postinc1,c
  7591  01B0D0  EC69  F0D1         	call	_send_lcd_cmd_dma	;wreg free
  7592                           
  7593                           ; BSR set to: 0
  7594                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  7595  01B0D4  52E5               	movf	postdec1,f,c
  7596  01B0D6  0012               	return		;funcret
  7597  01B0D8                     __end_of_eaDogM_WriteCommand:
  7598                           	opt callstack 0
  7599                           
  7600 ;; *************** function _convert_adc_data *****************
  7601 ;; Defined at:
  7602 ;;		line 51 in file "mbmc.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;		None
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;  i               1  [STACK] unsigned char 
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1  [STACK] void 
  7609 ;; Registers used:
  7610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7620 ;;Total ram usage:        0 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; Hardware stack levels required when called:   18
  7623 ;; This function calls:
  7624 ;;		_conv_raw_result
  7625 ;;		_lp_filter
  7626 ;; This function is called by:
  7627 ;;		_main
  7628 ;; This function uses a reentrant model
  7629 ;;
  7630                           
  7631                           	psect	text26
  7632  0195A8                     __ptext26:
  7633                           	opt callstack 0
  7634  0195A8                     _convert_adc_data:
  7635                           	opt callstack 0
  7636                           
  7637                           ; BSR set to: 0
  7638                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7639  0195A8  52E6               	movf	postinc1,f,c
  7640                           
  7641                           ;mbmc.c: 53:  uint8_t i = 0;
  7642                           ;stkvar	_i @ sp[(-1)+0]
  7643                           
  7644                           ;incstack = 0
  7645  0195AA  0EFF               	movlw	-1
  7646  0195AC  6AE3               	clrf	plusw1,c
  7647  0195AE                     l10452:
  7648                           
  7649                           ;mbmc.c: 56:   if (V.calib) {
  7650  0195AE  0102               	movlb	2	; () banked
  7651  0195B0  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  7652  0195B2  B4D8               	btfsc	status,2,c
  7653  0195B4  D01B               	goto	l10456
  7654                           
  7655                           ; BSR set to: 2
  7656                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  7657  0195B6  0E01               	movlw	1
  7658  0195B8  6EE6               	movwf	postinc1,c
  7659                           
  7660                           ;stkvar	_i @ sp[(-2)+0]
  7661  0195BA  0EFE               	movlw	-2
  7662  0195BC  50E3               	movf	plusw1,w,c
  7663  0195BE  6EE6               	movwf	postinc1,c
  7664  0195C0  0E01               	movlw	1
  7665  0195C2  6EE6               	movwf	postinc1,c
  7666                           
  7667                           ;stkvar	_i @ sp[(-4)+0]
  7668  0195C4  0EFC               	movlw	-4
  7669  0195C6  50E3               	movf	plusw1,w,c
  7670  0195C8  6EE6               	movwf	postinc1,c
  7671  0195CA  EC02  F0A5         	call	_conv_raw_result	;wreg free
  7672  0195CE  0060  F007  FFE6   	movff	btemp,postinc1
  7673  0195D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7674  0195DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7675  0195E0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7676  0195E6  EC19  F0BC         	call	_lp_filter	;wreg free
  7677  0195EA  D01A               	goto	L3
  7678  0195EC                     l10456:
  7679                           
  7680                           ; BSR set to: 2
  7681                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  7682  0195EC  0E00               	movlw	0
  7683  0195EE  6EE6               	movwf	postinc1,c
  7684                           
  7685                           ;stkvar	_i @ sp[(-2)+0]
  7686  0195F0  0EFE               	movlw	-2
  7687  0195F2  50E3               	movf	plusw1,w,c
  7688  0195F4  6EE6               	movwf	postinc1,c
  7689  0195F6  0E00               	movlw	0
  7690  0195F8  6EE6               	movwf	postinc1,c
  7691                           
  7692                           ;stkvar	_i @ sp[(-4)+0]
  7693  0195FA  0EFC               	movlw	-4
  7694  0195FC  50E3               	movf	plusw1,w,c
  7695  0195FE  6EE6               	movwf	postinc1,c
  7696  019600  EC02  F0A5         	call	_conv_raw_result	;wreg free
  7697  019604  0060  F007  FFE6   	movff	btemp,postinc1
  7698  01960A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7699  019610  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7700  019616  0060  F013  FFE6   	movff	btemp+3,postinc1
  7701  01961C  EC19  F0BC         	call	_lp_filter	;wreg free
  7702  019620                     L3:
  7703                           
  7704                           ;stkvar	_i @ sp[(-1)+0]
  7705  019620  0EFF               	movlw	-1
  7706  019622  50E3               	movf	plusw1,w,c
  7707  019624  0D04               	mullw	4
  7708  019626  0E00               	movlw	low _C
  7709  019628  24F3               	addwf	243,w,c
  7710  01962A  6ED9               	movwf	fsr2l,c
  7711  01962C  0E01               	movlw	high _C
  7712  01962E  20F4               	addwfc	prodh,w,c
  7713  019630  6EDA               	movwf	fsr2h,c
  7714  019632  0060  F007  FFDE   	movff	btemp,postinc2
  7715  019638  0060  F00B  FFDE   	movff	btemp+1,postinc2
  7716  01963E  0060  F00F  FFDE   	movff	btemp+2,postinc2
  7717  019644  0060  F013  FFDE   	movff	btemp+3,postinc2
  7718                           
  7719                           ;mbmc.c: 61:  } while (++i < 16);
  7720                           ;stkvar	_i @ sp[(-1)+0]
  7721  01964A  0EFF               	movlw	-1
  7722  01964C  2AE3               	incf	plusw1,f,c
  7723  01964E  0EFF               	movlw	-1
  7724  019650  006F FF8C  F001    	movff	plusw1,btemp
  7725  019656  0E0F               	movlw	15
  7726  019658  6401               	cpfsgt	btemp^0,c
  7727  01965A  D7A9               	goto	l10452
  7728                           
  7729                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  7730  01965C  52E5               	movf	postdec1,f,c
  7731  01965E  0012               	return		;funcret
  7732  019660                     __end_of_convert_adc_data:
  7733                           	opt callstack 0
  7734                           
  7735 ;; *************** function _clear_hid_pflags *****************
  7736 ;; Defined at:
  7737 ;;		line 51 in file "hid.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;  h               1  [STACK] PTR struct H_data
  7740 ;;		 -> H(7), 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;		None
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  1  [STACK] void 
  7745 ;; Registers used:
  7746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7747 ;; Tracked objects:
  7748 ;;		On entry : 3F/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7756 ;;Total ram usage:        0 bytes
  7757 ;; Hardware stack levels used:    1
  7758 ;; Hardware stack levels required when called:   15
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_main
  7763 ;; This function uses a reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text27
  7767  01ADE4                     __ptext27:
  7768                           	opt callstack 0
  7769  01ADE4                     _clear_hid_pflags:
  7770                           	opt callstack 15
  7771                           
  7772                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  7773                           ;stkvar	_h @ sp[(0)+-1]
  7774                           
  7775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7776                           ;incstack = 0
  7777  01ADE4  0EFF               	movlw	-1
  7778  01ADE6  50E3               	movf	plusw1,w,c
  7779  01ADE8  6ED9               	movwf	fsr2l,c
  7780  01ADEA  6ADA               	clrf	fsr2h,c
  7781  01ADEC  0E03               	movlw	3
  7782  01ADEE  26D9               	addwf	fsr2l,f,c
  7783  01ADF0  0E00               	movlw	0
  7784  01ADF2  6EDF               	movwf	indf2,c
  7785                           
  7786                           ;hid.c: 54:  h->enter_p = SW_OFF;
  7787                           ;stkvar	_h @ sp[(0)+-1]
  7788  01ADF4  0EFF               	movlw	-1
  7789  01ADF6  50E3               	movf	plusw1,w,c
  7790  01ADF8  6ED9               	movwf	fsr2l,c
  7791  01ADFA  6ADA               	clrf	fsr2h,c
  7792  01ADFC  0E05               	movlw	5
  7793  01ADFE  26D9               	addwf	fsr2l,f,c
  7794  01AE00  0E00               	movlw	0
  7795  01AE02  6EDF               	movwf	indf2,c
  7796                           
  7797                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7798  01AE04  52E5               	movf	postdec1,f,c
  7799  01AE06  0012               	return		;funcret
  7800  01AE08                     __end_of_clear_hid_pflags:
  7801                           	opt callstack 0
  7802                           
  7803 ;; *************** function _check_help *****************
  7804 ;; Defined at:
  7805 ;;		line 40 in file "mconfig.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;  flipper         1  [STACK] const _Bool 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  estatus         1    0        _Bool 
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  1  [STACK] _Bool 
  7812 ;; Registers used:
  7813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7814 ;; Tracked objects:
  7815 ;;		On entry : 3F/2
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7823 ;;Total ram usage:        0 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; Hardware stack levels required when called:   27
  7826 ;; This function calls:
  7827 ;;		_StartTimer
  7828 ;;		_TimerDone
  7829 ;;		_display_help
  7830 ;;		_display_info
  7831 ;;		_get_vterm_ptr
  7832 ;;		_help_button
  7833 ;;		_mode_lamp_bright
  7834 ;;		_mode_lamp_dim
  7835 ;;		_set_display_info
  7836 ;;		_set_temp_display_help
  7837 ;;		_set_vterm
  7838 ;;		_sprintf
  7839 ;;		_update_lcd
  7840 ;;		_vterm_dump
  7841 ;; This function is called by:
  7842 ;;		_main
  7843 ;; This function uses a reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text28
  7847  017036                     __ptext28:
  7848                           	opt callstack 0
  7849  017036                     _check_help:
  7850                           	opt callstack 3
  7851                           
  7852                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  7853                           
  7854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7855                           ;incstack = 0
  7856  017036  EC02  F0D4         	call	_help_button	;wreg free
  7857  01703A  5001               	movf	btemp^0,w,c
  7858  01703C  B4D8               	btfsc	status,2,c
  7859  01703E  D0D0               	goto	l12270
  7860  017040  ECA7  F0D8         	call	_display_info	;wreg free
  7861  017044  0401               	decf	btemp^0,w,c
  7862  017046  B4D8               	btfsc	status,2,c
  7863  017048  D0CB               	goto	l12270
  7864                           
  7865                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  7866  01704A  0EDC               	movlw	220
  7867  01704C  6EE6               	movwf	postinc1,c
  7868  01704E  0E05               	movlw	5
  7869  017050  6EE6               	movwf	postinc1,c
  7870  017052  0E0B               	movlw	11
  7871  017054  6EE6               	movwf	postinc1,c
  7872  017056  EC46  F0D3         	call	_StartTimer	;wreg free
  7873                           
  7874                           ;mconfig.c: 48:   if (V.debug)
  7875  01705A  0102               	movlb	2	; () banked
  7876  01705C  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  7877                           
  7878                           ; BSR set to: 2
  7879                           ;mconfig.c: 49:    vterm_dump();
  7880  01705E  ECF4  F0C3         	call	_vterm_dump	;wreg free
  7881                           
  7882                           ;mconfig.c: 51:   set_vterm(1);
  7883  017062  0E01               	movlw	1
  7884  017064  6EE6               	movwf	postinc1,c
  7885  017066  EC8E  F0D7         	call	_set_vterm	;wreg free
  7886                           
  7887                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  7888  01706A  ECA7  F0D8         	call	_display_info	;wreg free
  7889  01706E  5001               	movf	btemp^0,w,c
  7890  017070  6EE6               	movwf	postinc1,c
  7891  017072  EC5D  F0D8         	call	_set_temp_display_help	;wreg free
  7892                           
  7893                           ; BSR set to: 2
  7894                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  7895  017076  0E01               	movlw	1
  7896  017078  6EE6               	movwf	postinc1,c
  7897  01707A  EC9D  F0D7         	call	_set_display_info	;wreg free
  7898                           
  7899                           ;mconfig.c: 54:   if (flipper) {
  7900                           ;stkvar	_flipper @ sp[(0)+-1]
  7901  01707E  0EFF               	movlw	-1
  7902  017080  50E3               	movf	plusw1,w,c
  7903  017082  B4D8               	btfsc	status,2,c
  7904  017084  D019               	goto	l12256
  7905                           
  7906                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  7907  017086  0EB1               	movlw	low STR_36
  7908  017088  6EE6               	movwf	postinc1,c
  7909  01708A  0EFF               	movlw	high STR_36
  7910  01708C  6EE6               	movwf	postinc1,c
  7911  01708E  0E60               	movlw	low STR_38
  7912  017090  6EE6               	movwf	postinc1,c
  7913  017092  0EFE               	movlw	high STR_38
  7914  017094  6EE6               	movwf	postinc1,c
  7915  017096  0E01               	movlw	1
  7916  017098  6EE6               	movwf	postinc1,c
  7917  01709A  0E00               	movlw	0
  7918  01709C  6EE6               	movwf	postinc1,c
  7919  01709E  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  7920  0170A2  0060  F007  FFE6   	movff	btemp,postinc1
  7921  0170A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7922  0170AE  0E06               	movlw	6
  7923  0170B0  6EE6               	movwf	postinc1,c
  7924  0170B2  EC42  F0C7         	call	_sprintf	;wreg free
  7925                           
  7926                           ;mconfig.c: 56:   } else {
  7927  0170B6  D018               	goto	l1657
  7928  0170B8                     l12256:
  7929                           
  7930                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  7931  0170B8  0EC7               	movlw	low STR_37
  7932  0170BA  6EE6               	movwf	postinc1,c
  7933  0170BC  0EFF               	movlw	high STR_37
  7934  0170BE  6EE6               	movwf	postinc1,c
  7935  0170C0  0E60               	movlw	low STR_38
  7936  0170C2  6EE6               	movwf	postinc1,c
  7937  0170C4  0EFE               	movlw	high STR_38
  7938  0170C6  6EE6               	movwf	postinc1,c
  7939  0170C8  0E01               	movlw	1
  7940  0170CA  6EE6               	movwf	postinc1,c
  7941  0170CC  0E00               	movlw	0
  7942  0170CE  6EE6               	movwf	postinc1,c
  7943  0170D0  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  7944  0170D4  0060  F007  FFE6   	movff	btemp,postinc1
  7945  0170DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7946  0170E0  0E06               	movlw	6
  7947  0170E2  6EE6               	movwf	postinc1,c
  7948  0170E4  EC42  F0C7         	call	_sprintf	;wreg free
  7949  0170E8                     l1657:
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  7953  0170E8  0102               	movlb	2	; () banked
  7954  0170EA  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7955  0170EC  32E8               	rrcf	wreg,f,c
  7956  0170EE  32E8               	rrcf	wreg,f,c
  7957  0170F0  0B03               	andlw	3
  7958  0170F2  0D24               	mullw	36
  7959  0170F4  0E12               	movlw	18
  7960  0170F6  26F3               	addwf	243,f,c
  7961  0170F8  0E00               	movlw	0
  7962  0170FA  22F4               	addwfc	244,f,c
  7963  0170FC  0E0F               	movlw	low _T
  7964  0170FE  6E0B               	movwf	(btemp+10)^0,c
  7965  017100  0EFC               	movlw	high _T
  7966  017102  6E0C               	movwf	(btemp+11)^0,c
  7967  017104  50F3               	movf	243,w,c
  7968  017106  260B               	addwf	(btemp+10)^0,f,c
  7969  017108  50F4               	movf	244,w,c
  7970  01710A  220C               	addwfc	(btemp+11)^0,f,c
  7971  01710C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7972  017112  0060  F033  FFE6   	movff	btemp+11,postinc1
  7973  017118  0EBD               	movlw	low STR_40
  7974  01711A  6EE6               	movwf	postinc1,c
  7975  01711C  0EFF               	movlw	high STR_40
  7976  01711E  6EE6               	movwf	postinc1,c
  7977  017120  0E01               	movlw	1
  7978  017122  6EE6               	movwf	postinc1,c
  7979  017124  0E01               	movlw	1
  7980  017126  6EE6               	movwf	postinc1,c
  7981  017128  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  7982  01712C  0060  F007  FFE6   	movff	btemp,postinc1
  7983  017132  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7984  017138  0E06               	movlw	6
  7985  01713A  6EE6               	movwf	postinc1,c
  7986  01713C  EC42  F0C7         	call	_sprintf	;wreg free
  7987                           
  7988                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  7989  017140  0102               	movlb	2	; () banked
  7990  017142  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7991  017144  32E8               	rrcf	wreg,f,c
  7992  017146  32E8               	rrcf	wreg,f,c
  7993  017148  0B03               	andlw	3
  7994  01714A  0D24               	mullw	36
  7995  01714C  0E0F               	movlw	low _T
  7996  01714E  6E0B               	movwf	(btemp+10)^0,c
  7997  017150  0EFC               	movlw	high _T
  7998  017152  6E0C               	movwf	(btemp+11)^0,c
  7999  017154  50F3               	movf	243,w,c
  8000  017156  260B               	addwf	(btemp+10)^0,f,c
  8001  017158  50F4               	movf	244,w,c
  8002  01715A  220C               	addwfc	(btemp+11)^0,f,c
  8003  01715C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8004  017162  0060  F033  FFE6   	movff	btemp+11,postinc1
  8005  017168  0EBD               	movlw	low STR_40
  8006  01716A  6EE6               	movwf	postinc1,c
  8007  01716C  0EFF               	movlw	high STR_40
  8008  01716E  6EE6               	movwf	postinc1,c
  8009  017170  0E01               	movlw	1
  8010  017172  6EE6               	movwf	postinc1,c
  8011  017174  0E02               	movlw	2
  8012  017176  6EE6               	movwf	postinc1,c
  8013  017178  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  8014  01717C  0060  F007  FFE6   	movff	btemp,postinc1
  8015  017182  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8016  017188  0E06               	movlw	6
  8017  01718A  6EE6               	movwf	postinc1,c
  8018  01718C  EC42  F0C7         	call	_sprintf	;wreg free
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;mconfig.c: 61:   V.help_id++;
  8022  017190  EE20  F29B         	lfsr	2,_V+155	;volatile
  8023  017194  38DF               	swapf	223,w,c
  8024  017196  6E0C               	movwf	(btemp+11)^0,c
  8025  017198  320C               	rrcf	(btemp+11)^0,f,c
  8026  01719A  300C               	rrcf	(btemp+11)^0,w,c
  8027  01719C  0B03               	andlw	3
  8028  01719E  6E0C               	movwf	(btemp+11)^0,c
  8029  0171A0  2A0C               	incf	(btemp+11)^0,f,c
  8030  0171A2  3A0C               	swapf	(btemp+11)^0,f,c
  8031  0171A4  360C               	rlcf	(btemp+11)^0,f,c
  8032  0171A6  360C               	rlcf	(btemp+11)^0,f,c
  8033  0171A8  50DF               	movf	223,w,c
  8034  0171AA  180C               	xorwf	(btemp+11)^0,w,c
  8035  0171AC  0B3F               	andlw	-193
  8036  0171AE  180C               	xorwf	(btemp+11)^0,w,c
  8037  0171B0  6EDF               	movwf	223,c
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8041  0171B2  0EB8               	movlw	184
  8042  0171B4  6EE6               	movwf	postinc1,c
  8043  0171B6  0E0B               	movlw	11
  8044  0171B8  6EE6               	movwf	postinc1,c
  8045  0171BA  0E09               	movlw	9
  8046  0171BC  6EE6               	movwf	postinc1,c
  8047  0171BE  EC46  F0D3         	call	_StartTimer	;wreg free
  8048                           
  8049                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8050  0171C2  0EB8               	movlw	184
  8051  0171C4  6EE6               	movwf	postinc1,c
  8052  0171C6  0E0B               	movlw	11
  8053  0171C8  6EE6               	movwf	postinc1,c
  8054  0171CA  0E07               	movlw	7
  8055  0171CC  6EE6               	movwf	postinc1,c
  8056  0171CE  EC46  F0D3         	call	_StartTimer	;wreg free
  8057                           
  8058                           ;mconfig.c: 64:   mode_lamp_bright();
  8059  0171D2  EC6C  F0D8         	call	_mode_lamp_bright	;wreg free
  8060                           
  8061                           ;mconfig.c: 65:   update_lcd(1);
  8062  0171D6  0E01               	movlw	1
  8063  0171D8  6EE6               	movwf	postinc1,c
  8064  0171DA  EC33  F0C6         	call	_update_lcd	;wreg free
  8065                           
  8066                           ;mconfig.c: 67:  } else {
  8067  0171DE  D032               	goto	l1658
  8068  0171E0                     l12270:
  8069                           
  8070                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8071  0171E0  0E09               	movlw	9
  8072  0171E2  6EE6               	movwf	postinc1,c
  8073  0171E4  ECC7  F0D5         	call	_TimerDone	;wreg free
  8074  0171E8  5001               	movf	btemp^0,w,c
  8075  0171EA  B4D8               	btfsc	status,2,c
  8076  0171EC  D02B               	goto	l1658
  8077                           
  8078                           ;mconfig.c: 69:    set_vterm(0);
  8079  0171EE  0E00               	movlw	0
  8080  0171F0  6EE6               	movwf	postinc1,c
  8081  0171F2  EC8E  F0D7         	call	_set_vterm	;wreg free
  8082                           
  8083                           ;mconfig.c: 70:    V.help = 0;
  8084  0171F6  0102               	movlb	2	; () banked
  8085  0171F8  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  8086                           
  8087                           ; BSR set to: 2
  8088                           ;mconfig.c: 71:    set_display_info(display_help());
  8089  0171FA  ECAB  F0D8         	call	_display_help	;wreg free
  8090  0171FE  5001               	movf	btemp^0,w,c
  8091  017200  6EE6               	movwf	postinc1,c
  8092  017202  EC9D  F0D7         	call	_set_display_info	;wreg free
  8093                           
  8094                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8095  017206  0060  FA57  FFE6   	movff	_V+149,postinc1
  8096  01720C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  8097  017212  EC01  F0D8         	call	_mode_lamp_dim	;wreg free
  8098                           
  8099                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8100  017216  0E0B               	movlw	11
  8101  017218  6EE6               	movwf	postinc1,c
  8102  01721A  ECC7  F0D5         	call	_TimerDone	;wreg free
  8103  01721E  5001               	movf	btemp^0,w,c
  8104  017220  B4D8               	btfsc	status,2,c
  8105  017222  D010               	goto	l1658
  8106                           
  8107                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8108  017224  0102               	movlb	2	; () banked
  8109  017226  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  8110  017228  A4D8               	btfss	status,2,c
  8111  01722A  D002               	goto	u11810
  8112  01722C  0E01               	movlw	1
  8113  01722E  D001               	goto	u11820
  8114  017230                     u11810:
  8115  017230  0E00               	movlw	0
  8116  017232                     u11820:
  8117  017232  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  8118                           
  8119                           ; BSR set to: 2
  8120                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8121  017234  0EDC               	movlw	220
  8122  017236  6EE6               	movwf	postinc1,c
  8123  017238  0E05               	movlw	5
  8124  01723A  6EE6               	movwf	postinc1,c
  8125  01723C  0E0B               	movlw	11
  8126  01723E  6EE6               	movwf	postinc1,c
  8127  017240  EC46  F0D3         	call	_StartTimer	;wreg free
  8128  017244                     l1658:
  8129                           
  8130                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8131  017244  52E5               	movf	postdec1,f,c
  8132  017246  0012               	return		;funcret
  8133  017248                     __end_of_check_help:
  8134                           	opt callstack 0
  8135                           
  8136 ;; *************** function _vterm_dump *****************
  8137 ;; Defined at:
  8138 ;;		line 121 in file "mconfig.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;		None
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;		None
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  1  [STACK] void 
  8145 ;; Registers used:
  8146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8147 ;; Tracked objects:
  8148 ;;		On entry : 3F/2
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8156 ;;Total ram usage:        0 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:   26
  8159 ;; This function calls:
  8160 ;;		_WaitMs
  8161 ;;		_eaDogM_WriteStringAtPos
  8162 ;;		_get_vterm_ptr
  8163 ;;		_sprintf
  8164 ;;		_wait_lcd_done
  8165 ;; This function is called by:
  8166 ;;		_check_help
  8167 ;; This function uses a reentrant model
  8168 ;;
  8169                           
  8170                           	psect	text29
  8171  0187E8                     __ptext29:
  8172                           	opt callstack 0
  8173  0187E8                     _vterm_dump:
  8174                           	opt callstack 3
  8175                           
  8176                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8177                           
  8178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8179                           ;incstack = 0
  8180  0187E8  0E01               	movlw	1
  8181  0187EA  6EE6               	movwf	postinc1,c
  8182  0187EC  0E00               	movlw	0
  8183  0187EE  6EE6               	movwf	postinc1,c
  8184  0187F0  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  8185  0187F4  0060  F007  FFE6   	movff	btemp,postinc1
  8186  0187FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8187  018800  0E00               	movlw	0
  8188  018802  6EE6               	movwf	postinc1,c
  8189  018804  0E00               	movlw	0
  8190  018806  6EE6               	movwf	postinc1,c
  8191  018808  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  8192  01880C  0060  F007  FFE6   	movff	btemp,postinc1
  8193  018812  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8194  018818  0E93               	movlw	low STR_42
  8195  01881A  6EE6               	movwf	postinc1,c
  8196  01881C  0EFF               	movlw	high STR_42
  8197  01881E  6EE6               	movwf	postinc1,c
  8198  018820  0E01               	movlw	low (_V+1)
  8199  018822  6EE6               	movwf	postinc1,c
  8200  018824  0E02               	movlw	high (_V+1)
  8201  018826  6EE6               	movwf	postinc1,c
  8202  018828  0E08               	movlw	8
  8203  01882A  6EE6               	movwf	postinc1,c
  8204  01882C  EC42  F0C7         	call	_sprintf	;wreg free
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;mconfig.c: 124:  wait_lcd_done();
  8208  018830  ECCA  F0D7         	call	_wait_lcd_done	;wreg free
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  8212  018834  0E01               	movlw	low (_V+1)
  8213  018836  6EE6               	movwf	postinc1,c
  8214  018838  0E02               	movlw	high (_V+1)
  8215  01883A  6EE6               	movwf	postinc1,c
  8216  01883C  0E00               	movlw	0
  8217  01883E  6EE6               	movwf	postinc1,c
  8218  018840  0E00               	movlw	0
  8219  018842  6EE6               	movwf	postinc1,c
  8220  018844  EC54  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8221                           
  8222                           ; BSR set to: 59
  8223                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  8224  018848  0E01               	movlw	1
  8225  01884A  6EE6               	movwf	postinc1,c
  8226  01884C  0E01               	movlw	1
  8227  01884E  6EE6               	movwf	postinc1,c
  8228  018850  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  8229  018854  0060  F007  FFE6   	movff	btemp,postinc1
  8230  01885A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8231  018860  0E00               	movlw	0
  8232  018862  6EE6               	movwf	postinc1,c
  8233  018864  0E01               	movlw	1
  8234  018866  6EE6               	movwf	postinc1,c
  8235  018868  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  8236  01886C  0060  F007  FFE6   	movff	btemp,postinc1
  8237  018872  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8238  018878  0E93               	movlw	low STR_42
  8239  01887A  6EE6               	movwf	postinc1,c
  8240  01887C  0EFF               	movlw	high STR_42
  8241  01887E  6EE6               	movwf	postinc1,c
  8242  018880  0E01               	movlw	low (_V+1)
  8243  018882  6EE6               	movwf	postinc1,c
  8244  018884  0E02               	movlw	high (_V+1)
  8245  018886  6EE6               	movwf	postinc1,c
  8246  018888  0E08               	movlw	8
  8247  01888A  6EE6               	movwf	postinc1,c
  8248  01888C  EC42  F0C7         	call	_sprintf	;wreg free
  8249                           
  8250                           ; BSR set to: 0
  8251                           ;mconfig.c: 127:  wait_lcd_done();
  8252  018890  ECCA  F0D7         	call	_wait_lcd_done	;wreg free
  8253                           
  8254                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  8255  018894  0E01               	movlw	low (_V+1)
  8256  018896  6EE6               	movwf	postinc1,c
  8257  018898  0E02               	movlw	high (_V+1)
  8258  01889A  6EE6               	movwf	postinc1,c
  8259  01889C  0E00               	movlw	0
  8260  01889E  6EE6               	movwf	postinc1,c
  8261  0188A0  0E01               	movlw	1
  8262  0188A2  6EE6               	movwf	postinc1,c
  8263  0188A4  EC54  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8264                           
  8265                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  8266  0188A8  0E01               	movlw	1
  8267  0188AA  6EE6               	movwf	postinc1,c
  8268  0188AC  0E02               	movlw	2
  8269  0188AE  6EE6               	movwf	postinc1,c
  8270  0188B0  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  8271  0188B4  0060  F007  FFE6   	movff	btemp,postinc1
  8272  0188BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8273  0188C0  0E00               	movlw	0
  8274  0188C2  6EE6               	movwf	postinc1,c
  8275  0188C4  0E02               	movlw	2
  8276  0188C6  6EE6               	movwf	postinc1,c
  8277  0188C8  EC1D  F0D5         	call	_get_vterm_ptr	;wreg free
  8278  0188CC  0060  F007  FFE6   	movff	btemp,postinc1
  8279  0188D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8280  0188D8  0E93               	movlw	low STR_42
  8281  0188DA  6EE6               	movwf	postinc1,c
  8282  0188DC  0EFF               	movlw	high STR_42
  8283  0188DE  6EE6               	movwf	postinc1,c
  8284  0188E0  0E01               	movlw	low (_V+1)
  8285  0188E2  6EE6               	movwf	postinc1,c
  8286  0188E4  0E02               	movlw	high (_V+1)
  8287  0188E6  6EE6               	movwf	postinc1,c
  8288  0188E8  0E08               	movlw	8
  8289  0188EA  6EE6               	movwf	postinc1,c
  8290  0188EC  EC42  F0C7         	call	_sprintf	;wreg free
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;mconfig.c: 130:  wait_lcd_done();
  8294  0188F0  ECCA  F0D7         	call	_wait_lcd_done	;wreg free
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  8298  0188F4  0E01               	movlw	low (_V+1)
  8299  0188F6  6EE6               	movwf	postinc1,c
  8300  0188F8  0E02               	movlw	high (_V+1)
  8301  0188FA  6EE6               	movwf	postinc1,c
  8302  0188FC  0E00               	movlw	0
  8303  0188FE  6EE6               	movwf	postinc1,c
  8304  018900  0E02               	movlw	2
  8305  018902  6EE6               	movwf	postinc1,c
  8306  018904  EC54  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8307                           
  8308                           ; BSR set to: 59
  8309                           ;mconfig.c: 132:  WaitMs(3000);
  8310  018908  0EB8               	movlw	184
  8311  01890A  6EE6               	movwf	postinc1,c
  8312  01890C  0E0B               	movlw	11
  8313  01890E  6EE6               	movwf	postinc1,c
  8314  018910  EC39  F0D4         	call	_WaitMs	;wreg free
  8315                           
  8316                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8317  018914  0012               	return		;funcret
  8318  018916                     __end_of_vterm_dump:
  8319                           	opt callstack 0
  8320                           
  8321 ;; *************** function _sprintf *****************
  8322 ;; Defined at:
  8323 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  s               2  [STACK] PTR unsigned char 
  8326 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  8327 ;;  fmt             2  [STACK] PTR const unsigned char 
  8328 ;;		 -> STR_55(85), STR_53(3), STR_52(3), STR_51(19), 
  8329 ;;		 -> STR_50(19), STR_49(19), STR_48(19), STR_47(19), 
  8330 ;;		 -> STR_46(19), STR_45(24), STR_44(15), STR_43(15), 
  8331 ;;		 -> STR_42(15), STR_41(10), STR_40(10), STR_39(19), 
  8332 ;;		 -> STR_38(19), STR_32(17), STR_31(16), STR_30(16), 
  8333 ;;		 -> STR_29(20), STR_28(20), STR_27(19), STR_26(19), 
  8334 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
  8335 ;;		 -> STR_21(19), STR_20(17), STR_19(16), STR_18(16), 
  8336 ;;		 -> STR_17(26), STR_16(26), STR_15(22), STR_14(17), 
  8337 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
  8338 ;;		 -> STR_9(23), STR_8(18), STR_7(17), STR_6(17), 
  8339 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  f               6  [STACK] struct _IO_FILE
  8342 ;;  ap              2  [STACK] PTR void [1]
  8343 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8344 ;;  ret             2    0        int 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  2  [STACK] int 
  8347 ;; Registers used:
  8348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/1
  8351 ;;		On exit  : 3F/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8358 ;;Total ram usage:        0 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; Hardware stack levels required when called:   23
  8361 ;; This function calls:
  8362 ;;		_vfprintf
  8363 ;; This function is called by:
  8364 ;;		_main
  8365 ;;		_check_help
  8366 ;;		_vterm_dump
  8367 ;;		_calc_bsoc
  8368 ;; This function uses a reentrant model
  8369 ;;
  8370                           
  8371                           	psect	text30
  8372  018E84                     __ptext30:
  8373                           	opt callstack 0
  8374  018E84                     _sprintf:
  8375                           	opt callstack 0
  8376                           
  8377                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8378  018E84  0E08               	movlw	8
  8379  018E86  26E1               	addwf	fsr1l,f,c
  8380  018E88  0E00               	movlw	0
  8381  018E8A  22E2               	addwfc	fsr1h,f,c
  8382                           
  8383                           ;incstack = 0
  8384 ;; hardware stack exceeded
  8385  018E8C  0EFE               	movlw	254
  8386  018E8E  6E0B               	movwf	(btemp+10)^0,c
  8387  018E90  0EFF               	movlw	255
  8388  018E92  6E0C               	movwf	(btemp+11)^0,c
  8389                           
  8390                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  8391  018E94  0EF5               	movlw	245
  8392  018E96  24E1               	addwf	fsr1l,w,c
  8393  018E98  6E09               	movwf	(btemp+8)^0,c
  8394  018E9A  0EFF               	movlw	255
  8395  018E9C  20E2               	addwfc	fsr1h,w,c
  8396  018E9E  6E0A               	movwf	(btemp+9)^0,c
  8397  018EA0  500B               	movf	(btemp+10)^0,w,c
  8398  018EA2  2609               	addwf	(btemp+8)^0,f,c
  8399  018EA4  500C               	movf	(btemp+11)^0,w,c
  8400  018EA6  220A               	addwfc	(btemp+9)^0,f,c
  8401                           
  8402                           ;stkvar	_ap @ sp[(-8)+6]
  8403  018EA8  0EFF               	movlw	-1
  8404  018EAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
  8405  018EB0  0EFE               	movlw	-2
  8406  018EB2  0060  F027  FFE3   	movff	btemp+8,plusw1
  8407                           
  8408                           ;stkvar	_s @ sp[(-8)+-3]
  8409  018EB8  0EF5               	movlw	-11
  8410  018EBA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8411  018EC0  0EF6               	movlw	-10
  8412  018EC2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8413                           
  8414                           ;stkvar	_f @ sp[(-8)+0]
  8415  018EC8  0EF9               	movlw	-7
  8416  018ECA  0060  F033  FFE3   	movff	btemp+11,plusw1
  8417  018ED0  0EF8               	movlw	-8
  8418  018ED2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8419                           
  8420                           ;stkvar	_f @ sp[(-8)+0]
  8421  018ED8  0EFA               	movlw	250
  8422  018EDA  24E1               	addwf	fsr1l,w,c
  8423  018EDC  6ED9               	movwf	fsr2l,c
  8424  018EDE  0EFF               	movlw	255
  8425  018EE0  20E2               	addwfc	fsr1h,w,c
  8426  018EE2  6EDA               	movwf	fsr2h,c
  8427  018EE4  0E00               	movlw	0
  8428  018EE6  6EDE               	movwf	postinc2,c
  8429  018EE8  0E00               	movlw	0
  8430  018EEA  6EDD               	movwf	postdec2,c
  8431                           
  8432                           ;stkvar	_f @ sp[(-8)+0]
  8433  018EEC  0EFC               	movlw	252
  8434  018EEE  24E1               	addwf	fsr1l,w,c
  8435  018EF0  6ED9               	movwf	fsr2l,c
  8436  018EF2  0EFF               	movlw	255
  8437  018EF4  20E2               	addwfc	fsr1h,w,c
  8438  018EF6  6EDA               	movwf	fsr2h,c
  8439  018EF8  0E00               	movlw	0
  8440  018EFA  6EDE               	movwf	postinc2,c
  8441  018EFC  0E00               	movlw	0
  8442  018EFE  6EDD               	movwf	postdec2,c
  8443                           
  8444                           ;stkvar	_ap @ sp[(-8)+6]
  8445  018F00  0EFE               	movlw	254
  8446  018F02  24E1               	addwf	fsr1l,w,c
  8447  018F04  6E01               	movwf	btemp^0,c
  8448  018F06  0EFF               	movlw	255
  8449  018F08  20E2               	addwfc	fsr1h,w,c
  8450  018F0A  6E02               	movwf	(btemp+1)^0,c
  8451  018F0C  0060  F007  FFE6   	movff	btemp,postinc1
  8452  018F12  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8453                           
  8454                           ;stkvar	_fmt @ sp[(-10)+-5]
  8455  018F18  0EF1               	movlw	-15
  8456  018F1A  006F FF8F FFE6     	movff	plusw1,postinc1
  8457  018F20  006F FF8F FFE6     	movff	plusw1,postinc1
  8458                           
  8459                           ;stkvar	_f @ sp[(-12)+0]
  8460  018F26  0EF4               	movlw	244
  8461  018F28  24E1               	addwf	fsr1l,w,c
  8462  018F2A  6E01               	movwf	btemp^0,c
  8463  018F2C  0EFF               	movlw	255
  8464  018F2E  20E2               	addwfc	fsr1h,w,c
  8465  018F30  6E02               	movwf	(btemp+1)^0,c
  8466  018F32  0060  F007  FFE6   	movff	btemp,postinc1
  8467  018F38  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8468  018F3E  EC87  F0CB         	call	_vfprintf	;wreg free
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;stkvar	_f @ sp[(-8)+0]
  8472  018F42  0EFA               	movlw	250
  8473  018F44  24E1               	addwf	fsr1l,w,c
  8474  018F46  6ED9               	movwf	fsr2l,c
  8475  018F48  0EFF               	movlw	255
  8476  018F4A  20E2               	addwfc	fsr1h,w,c
  8477  018F4C  6EDA               	movwf	fsr2h,c
  8478  018F4E  006F FF78  F00B    	movff	postinc2,btemp+10
  8479  018F54  006F FF74  F00C    	movff	postdec2,btemp+11
  8480                           
  8481                           ;stkvar	_s @ sp[(-8)+-3]
  8482  018F5A  0EF5               	movlw	-11
  8483  018F5C  006F FF8C  F009    	movff	plusw1,btemp+8
  8484  018F62  0EF6               	movlw	-10
  8485  018F64  006F FF8C  F00A    	movff	plusw1,btemp+9
  8486  018F6A  500B               	movf	(btemp+10)^0,w,c
  8487  018F6C  2409               	addwf	(btemp+8)^0,w,c
  8488  018F6E  6ED9               	movwf	fsr2l,c
  8489  018F70  500C               	movf	(btemp+11)^0,w,c
  8490  018F72  200A               	addwfc	(btemp+9)^0,w,c
  8491  018F74  6EDA               	movwf	fsr2h,c
  8492  018F76  0E00               	movlw	0
  8493  018F78  6EDF               	movwf	indf2,c
  8494                           
  8495                           ; BSR set to: 0
  8496                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  8497  018F7A  0EF8               	movlw	248
  8498  018F7C  26E1               	addwf	fsr1l,f,c
  8499  018F7E  0EFF               	movlw	255
  8500  018F80  22E2               	addwfc	fsr1h,f,c
  8501  018F82  52E5               	movf	postdec1,f,c
  8502  018F84  50E7               	movf	indf1,w,c
  8503  018F86  5EE1               	subwf	fsr1l,f,c
  8504  018F88  0E00               	movlw	0
  8505  018F8A  5AE2               	subwfb	fsr1h,f,c
  8506  018F8C  0012               	return		;funcret
  8507  018F8E                     __end_of_sprintf:
  8508                           	opt callstack 0
  8509                           
  8510 ;; *************** function _get_vterm_ptr *****************
  8511 ;; Defined at:
  8512 ;;		line 116 in file "mconfig.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;  line            1  [STACK] const unsigned char 
  8515 ;;  vterm           1  [STACK] const unsigned char 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  2  [STACK] PTR unsigned char 
  8520 ;; Registers used:
  8521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/1
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8531 ;;Total ram usage:        0 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; Hardware stack levels required when called:   15
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_main
  8538 ;;		_check_help
  8539 ;;		_vterm_dump
  8540 ;; This function uses a reentrant model
  8541 ;;
  8542                           
  8543                           	psect	text31
  8544  01AA3A                     __ptext31:
  8545                           	opt callstack 0
  8546  01AA3A                     _get_vterm_ptr:
  8547                           	opt callstack 15
  8548                           
  8549                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  8550                           ;stkvar	_vterm @ sp[(0)+-2]
  8551                           
  8552                           ; BSR set to: 0
  8553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8554                           ;incstack = 0
  8555  01AA3A  0EFE               	movlw	-2
  8556  01AA3C  50E3               	movf	plusw1,w,c
  8557  01AA3E  0B03               	andlw	3
  8558  01AA40  0D48               	mullw	72
  8559  01AA42  0EFF               	movlw	low _D
  8560  01AA44  6E01               	movwf	btemp^0,c
  8561  01AA46  0E07               	movlw	high _D
  8562  01AA48  6E02               	movwf	(btemp+1)^0,c
  8563  01AA4A  50F3               	movf	243,w,c
  8564  01AA4C  2601               	addwf	btemp^0,f,c
  8565  01AA4E  50F4               	movf	244,w,c
  8566  01AA50  2202               	addwfc	(btemp+1)^0,f,c
  8567                           
  8568                           ;stkvar	_line @ sp[(0)+-1]
  8569  01AA52  0EFF               	movlw	-1
  8570  01AA54  50E3               	movf	plusw1,w,c
  8571  01AA56  0B03               	andlw	3
  8572  01AA58  0D18               	mullw	24
  8573  01AA5A  50F3               	movf	243,w,c
  8574  01AA5C  2601               	addwf	btemp^0,f,c
  8575  01AA5E  50F4               	movf	244,w,c
  8576  01AA60  2202               	addwfc	(btemp+1)^0,f,c
  8577                           
  8578                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8579  01AA62  52E5               	movf	postdec1,f,c
  8580  01AA64  52E5               	movf	postdec1,f,c
  8581  01AA66  0012               	return		;funcret
  8582  01AA68                     __end_of_get_vterm_ptr:
  8583                           	opt callstack 0
  8584                           
  8585 ;; *************** function _WaitMs *****************
  8586 ;; Defined at:
  8587 ;;		line 32 in file "timers.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;  numMilliseco    2  [STACK] const unsigned short 
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;		None
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1  [STACK] void 
  8594 ;; Registers used:
  8595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/2
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8605 ;;Total ram usage:        0 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; Hardware stack levels required when called:   16
  8608 ;; This function calls:
  8609 ;;		_StartTimer
  8610 ;;		_TimerDone
  8611 ;; This function is called by:
  8612 ;;		_main
  8613 ;;		_vterm_dump
  8614 ;;		_esr_check
  8615 ;; This function uses a reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text32
  8619  01A872                     __ptext32:
  8620                           	opt callstack 0
  8621  01A872                     _WaitMs:
  8622                           	opt callstack 13
  8623                           
  8624                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  8625                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8626                           
  8627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8628                           ;incstack = 0
  8629  01A872  0EFE               	movlw	-2
  8630  01A874  006F FF8F FFE6     	movff	plusw1,postinc1
  8631  01A87A  006F FF8F FFE6     	movff	plusw1,postinc1
  8632  01A880  0E00               	movlw	0
  8633  01A882  6EE6               	movwf	postinc1,c
  8634  01A884  EC46  F0D3         	call	_StartTimer	;wreg free
  8635                           
  8636                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8637  01A888  D005               	goto	l9314
  8638  01A88A                     l1589:
  8639                           
  8640                           ;timers.c: 36:   __nop();
  8641  01A88A  F000               	nop	
  8642                           
  8643                           ;timers.c: 37:   __nop();
  8644  01A88C  F000               	nop	
  8645                           
  8646                           ;timers.c: 38:   __nop();
  8647  01A88E  F000               	nop	
  8648                           
  8649                           ;timers.c: 39:   __nop();
  8650  01A890  F000               	nop	
  8651  01A892  0004               	clrwdt		;# 
  8652  01A894                     l9314:
  8653                           
  8654                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8655  01A894  0E00               	movlw	0
  8656  01A896  6EE6               	movwf	postinc1,c
  8657  01A898  ECC7  F0D5         	call	_TimerDone	;wreg free
  8658  01A89C  5001               	movf	btemp^0,w,c
  8659  01A89E  B4D8               	btfsc	status,2,c
  8660  01A8A0  D7F4               	goto	l1589
  8661                           
  8662                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8663  01A8A2  52E5               	movf	postdec1,f,c
  8664  01A8A4  52E5               	movf	postdec1,f,c
  8665  01A8A6  0012               	return		;funcret
  8666  01A8A8                     __end_of_WaitMs:
  8667                           	opt callstack 0
  8668                           
  8669 ;; *************** function _update_lcd *****************
  8670 ;; Defined at:
  8671 ;;		line 85 in file "mconfig.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  vterm           1  [STACK] unsigned char 
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  1  [STACK] unsigned char 
  8678 ;; Registers used:
  8679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8689 ;;Total ram usage:        0 bytes
  8690 ;; Hardware stack levels used:    1
  8691 ;; Hardware stack levels required when called:   26
  8692 ;; This function calls:
  8693 ;;		_eaDogM_WriteStringAtPos
  8694 ;;		_wait_lcd_done
  8695 ;; This function is called by:
  8696 ;;		_main
  8697 ;;		_check_help
  8698 ;; This function uses a reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text33
  8702  018C66                     __ptext33:
  8703                           	opt callstack 0
  8704  018C66                     _update_lcd:
  8705                           	opt callstack 4
  8706                           
  8707                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  8708                           ;stkvar	_vterm @ sp[(0)+-1]
  8709                           
  8710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8711                           ;incstack = 0
  8712  018C66  0EFF               	movlw	-1
  8713  018C68  006F FF8C  F001    	movff	plusw1,btemp
  8714  018C6E  0E03               	movlw	3
  8715  018C70  1601               	andwf	btemp^0,f,c
  8716  018C72  0EFF               	movlw	-1
  8717  018C74  0060  F007  FFE3   	movff	btemp,plusw1
  8718                           
  8719                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  8720  018C7A  EE22  F11F         	lfsr	2,_D+288
  8721  018C7E  A0DF               	btfss	indf2,0,c
  8722  018C80  D004               	goto	l12072
  8723                           
  8724                           ;stkvar	_vterm @ sp[(0)+-1]
  8725  018C82  0EFF               	movlw	-1
  8726  018C84  50E3               	movf	plusw1,w,c
  8727  018C86  B4D8               	btfsc	status,2,c
  8728  018C88  D074               	goto	l1665
  8729  018C8A                     l12072:
  8730                           
  8731                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  8732                           ;stkvar	_vterm @ sp[(0)+-1]
  8733  018C8A  0EFF               	movlw	-1
  8734  018C8C  50E3               	movf	plusw1,w,c
  8735  018C8E  0D48               	mullw	72
  8736  018C90  0E0F               	movlw	low (_D+16)
  8737  018C92  24F3               	addwf	243,w,c
  8738  018C94  6ED9               	movwf	fsr2l,c
  8739  018C96  0E08               	movlw	high (_D+16)
  8740  018C98  20F4               	addwfc	prodh,w,c
  8741  018C9A  6EDA               	movwf	fsr2h,c
  8742  018C9C  0E00               	movlw	0
  8743  018C9E  6EDF               	movwf	indf2,c
  8744                           
  8745                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  8746                           ;stkvar	_vterm @ sp[(0)+-1]
  8747  018CA0  0EFF               	movlw	-1
  8748  018CA2  50E3               	movf	plusw1,w,c
  8749  018CA4  0D48               	mullw	72
  8750  018CA6  0E27               	movlw	low (_D+40)
  8751  018CA8  24F3               	addwf	243,w,c
  8752  018CAA  6ED9               	movwf	fsr2l,c
  8753  018CAC  0E08               	movlw	high (_D+40)
  8754  018CAE  20F4               	addwfc	prodh,w,c
  8755  018CB0  6EDA               	movwf	fsr2h,c
  8756  018CB2  0E00               	movlw	0
  8757  018CB4  6EDF               	movwf	indf2,c
  8758                           
  8759                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  8760                           ;stkvar	_vterm @ sp[(0)+-1]
  8761  018CB6  0EFF               	movlw	-1
  8762  018CB8  50E3               	movf	plusw1,w,c
  8763  018CBA  0D48               	mullw	72
  8764  018CBC  0E3F               	movlw	low (_D+64)
  8765  018CBE  24F3               	addwf	243,w,c
  8766  018CC0  6ED9               	movwf	fsr2l,c
  8767  018CC2  0E08               	movlw	high (_D+64)
  8768  018CC4  20F4               	addwfc	prodh,w,c
  8769  018CC6  6EDA               	movwf	fsr2h,c
  8770  018CC8  0E00               	movlw	0
  8771  018CCA  6EDF               	movwf	indf2,c
  8772                           
  8773                           ;mconfig.c: 95:  wait_lcd_done();
  8774  018CCC  ECCA  F0D7         	call	_wait_lcd_done	;wreg free
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  8778                           ;stkvar	_vterm @ sp[(0)+-1]
  8779  018CD0  0EFF               	movlw	-1
  8780  018CD2  50E3               	movf	plusw1,w,c
  8781  018CD4  0D48               	mullw	72
  8782  018CD6  0EFF               	movlw	low _D
  8783  018CD8  6E0B               	movwf	(btemp+10)^0,c
  8784  018CDA  0E07               	movlw	high _D
  8785  018CDC  6E0C               	movwf	(btemp+11)^0,c
  8786  018CDE  50F3               	movf	243,w,c
  8787  018CE0  260B               	addwf	(btemp+10)^0,f,c
  8788  018CE2  50F4               	movf	244,w,c
  8789  018CE4  220C               	addwfc	(btemp+11)^0,f,c
  8790  018CE6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8791  018CEC  0060  F033  FFE6   	movff	btemp+11,postinc1
  8792  018CF2  0E00               	movlw	0
  8793  018CF4  6EE6               	movwf	postinc1,c
  8794  018CF6  0E00               	movlw	0
  8795  018CF8  6EE6               	movwf	postinc1,c
  8796  018CFA  EC54  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8797                           
  8798                           ; BSR set to: 59
  8799                           ;mconfig.c: 97:  wait_lcd_done();
  8800  018CFE  ECCA  F0D7         	call	_wait_lcd_done	;wreg free
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  8804                           ;stkvar	_vterm @ sp[(0)+-1]
  8805  018D02  0EFF               	movlw	-1
  8806  018D04  50E3               	movf	plusw1,w,c
  8807  018D06  0D48               	mullw	72
  8808  018D08  0EFF               	movlw	low _D
  8809  018D0A  6E0B               	movwf	(btemp+10)^0,c
  8810  018D0C  0E07               	movlw	high _D
  8811  018D0E  6E0C               	movwf	(btemp+11)^0,c
  8812  018D10  0E18               	movlw	24
  8813  018D12  260B               	addwf	(btemp+10)^0,f,c
  8814  018D14  0E00               	movlw	0
  8815  018D16  220C               	addwfc	(btemp+11)^0,f,c
  8816  018D18  50F3               	movf	243,w,c
  8817  018D1A  260B               	addwf	(btemp+10)^0,f,c
  8818  018D1C  50F4               	movf	244,w,c
  8819  018D1E  220C               	addwfc	(btemp+11)^0,f,c
  8820  018D20  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8821  018D26  0060  F033  FFE6   	movff	btemp+11,postinc1
  8822  018D2C  0E00               	movlw	0
  8823  018D2E  6EE6               	movwf	postinc1,c
  8824  018D30  0E01               	movlw	1
  8825  018D32  6EE6               	movwf	postinc1,c
  8826  018D34  EC54  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8827                           
  8828                           ; BSR set to: 59
  8829                           ;mconfig.c: 99:  wait_lcd_done();
  8830  018D38  ECCA  F0D7         	call	_wait_lcd_done	;wreg free
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  8834                           ;stkvar	_vterm @ sp[(0)+-1]
  8835  018D3C  0EFF               	movlw	-1
  8836  018D3E  50E3               	movf	plusw1,w,c
  8837  018D40  0D48               	mullw	72
  8838  018D42  0EFF               	movlw	low _D
  8839  018D44  6E0B               	movwf	(btemp+10)^0,c
  8840  018D46  0E07               	movlw	high _D
  8841  018D48  6E0C               	movwf	(btemp+11)^0,c
  8842  018D4A  0E30               	movlw	48
  8843  018D4C  260B               	addwf	(btemp+10)^0,f,c
  8844  018D4E  0E00               	movlw	0
  8845  018D50  220C               	addwfc	(btemp+11)^0,f,c
  8846  018D52  50F3               	movf	243,w,c
  8847  018D54  260B               	addwf	(btemp+10)^0,f,c
  8848  018D56  50F4               	movf	244,w,c
  8849  018D58  220C               	addwfc	(btemp+11)^0,f,c
  8850  018D5A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8851  018D60  0060  F033  FFE6   	movff	btemp+11,postinc1
  8852  018D66  0E00               	movlw	0
  8853  018D68  6EE6               	movwf	postinc1,c
  8854  018D6A  0E02               	movlw	2
  8855  018D6C  6EE6               	movwf	postinc1,c
  8856  018D6E  EC54  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8857  018D72                     l1665:
  8858                           
  8859                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8860  018D72  52E5               	movf	postdec1,f,c
  8861  018D74  0012               	return		;funcret
  8862  018D76                     __end_of_update_lcd:
  8863                           	opt callstack 0
  8864                           
  8865 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8866 ;; Defined at:
  8867 ;;		line 278 in file "eadog.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;  r               1  [STACK] const unsigned char 
  8870 ;;  c               1  [STACK] const unsigned char 
  8871 ;;  strPtr          2  [STACK] PTR unsigned char 
  8872 ;;		 -> D.lcd(288), D(290), V(188), 
  8873 ;; Auto vars:     Size  Location     Type
  8874 ;;		None
  8875 ;; Return value:  Size  Location     Type
  8876 ;;                  1  [STACK] void 
  8877 ;; Registers used:
  8878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8879 ;; Tracked objects:
  8880 ;;		On entry : 3F/0
  8881 ;;		On exit  : 3F/3B
  8882 ;;		Unchanged: 0/0
  8883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8888 ;;Total ram usage:        0 bytes
  8889 ;; Hardware stack levels used:    1
  8890 ;; Hardware stack levels required when called:   25
  8891 ;; This function calls:
  8892 ;;		_eaDogM_WriteString
  8893 ;;		_send_lcd_cmd_dma
  8894 ;; This function is called by:
  8895 ;;		_update_lcd
  8896 ;;		_vterm_dump
  8897 ;; This function uses a reentrant model
  8898 ;;
  8899                           
  8900                           	psect	text34
  8901  01A8A8                     __ptext34:
  8902                           	opt callstack 0
  8903  01A8A8                     _eaDogM_WriteStringAtPos:
  8904                           	opt callstack 4
  8905                           
  8906                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8907                           ;stkvar	_c @ sp[(0)+-2]
  8908                           
  8909                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8910                           ;incstack = 0
  8911  01A8A8  0EFE               	movlw	-2
  8912  01A8AA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8913                           
  8914                           ;stkvar	_r @ sp[(0)+-1]
  8915  01A8B0  0EFF               	movlw	-1
  8916  01A8B2  50E3               	movf	plusw1,w,c
  8917  01A8B4  0D10               	mullw	16
  8918  01A8B6  50F3               	movf	243,w,c
  8919  01A8B8  240C               	addwf	(btemp+11)^0,w,c
  8920  01A8BA  0F80               	addlw	128
  8921  01A8BC  6EE6               	movwf	postinc1,c
  8922  01A8BE  EC69  F0D1         	call	_send_lcd_cmd_dma	;wreg free
  8923                           
  8924                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  8925                           ;stkvar	_strPtr @ sp[(0)+-4]
  8926  01A8C2  0EFC               	movlw	-4
  8927  01A8C4  006F FF8F FFE6     	movff	plusw1,postinc1
  8928  01A8CA  006F FF8F FFE6     	movff	plusw1,postinc1
  8929  01A8D0  EC32  F0CC         	call	_eaDogM_WriteString	;wreg free
  8930                           
  8931                           ; BSR set to: 59
  8932                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  8933  01A8D4  52E5               	movf	postdec1,f,c
  8934  01A8D6  52E5               	movf	postdec1,f,c
  8935  01A8D8  52E5               	movf	postdec1,f,c
  8936  01A8DA  52E5               	movf	postdec1,f,c
  8937  01A8DC  0012               	return		;funcret
  8938  01A8DE                     __end_of_eaDogM_WriteStringAtPos:
  8939                           	opt callstack 0
  8940                           
  8941 ;; *************** function _send_lcd_cmd_dma *****************
  8942 ;; Defined at:
  8943 ;;		line 220 in file "eadog.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;  strPtr          1  [STACK] unsigned char 
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;		None
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  1  [STACK] void 
  8950 ;; Registers used:
  8951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/3D
  8954 ;;		On exit  : 3F/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8961 ;;Total ram usage:        0 bytes
  8962 ;; Hardware stack levels used:    1
  8963 ;; Hardware stack levels required when called:   24
  8964 ;; This function calls:
  8965 ;;		_printf
  8966 ;;		_ringBufS_flush
  8967 ;;		_start_lcd
  8968 ;;		_wait_lcd_done
  8969 ;;		_wait_lcd_set
  8970 ;; This function is called by:
  8971 ;;		_eaDogM_WriteCommand
  8972 ;;		_eaDogM_WriteStringAtPos
  8973 ;; This function uses a reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text35
  8977  01A2D2                     __ptext35:
  8978                           	opt callstack 0
  8979  01A2D2                     _send_lcd_cmd_dma:
  8980                           	opt callstack 4
  8981                           
  8982                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  8983                           
  8984                           ; BSR set to: 59
  8985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8986                           ;incstack = 0
  8987  01A2D2  ECB6  F0D8         	call	_wait_lcd_set	;wreg free
  8988                           
  8989                           ; BSR set to: 0
  8990                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  8991  01A2D6  0E00               	movlw	0
  8992  01A2D8  6EE6               	movwf	postinc1,c
  8993  01A2DA  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8994  01A2E0  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8995  01A2E6  EC6B  F0CD         	call	_ringBufS_flush	;wreg free
  8996  01A2EA  92BC               	bcf	188,1,c	;volatile
  8997  01A2EC  94BC               	bcf	188,2,c	;volatile
  8998                           
  8999                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9000  01A2EE  013B               	movlb	59	; () banked
  9001  01A2F0  9FFC               	bcf	252,7,b	;volatile
  9002                           
  9003                           ; BSR set to: 59
  9004                           ;eadog.c: 229:  DMA1SSZ = 1;
  9005  01A2F2  0E00               	movlw	0
  9006  01A2F4  6FF8               	movwf	248,b	;volatile
  9007  01A2F6  0E01               	movlw	1
  9008  01A2F8  6FF7               	movwf	247,b	;volatile
  9009                           
  9010                           ; BSR set to: 59
  9011                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9012  01A2FA  8FFC               	bsf	252,7,b	;volatile
  9013                           
  9014                           ; BSR set to: 59
  9015                           ;eadog.c: 231:  printf("%c", strPtr);
  9016                           ;stkvar	_strPtr @ sp[(0)+-1]
  9017  01A2FC  0EFF               	movlw	-1
  9018  01A2FE  50E3               	movf	plusw1,w,c
  9019  01A300  6EE6               	movwf	postinc1,c
  9020  01A302  0E00               	movlw	0
  9021  01A304  6EE6               	movwf	postinc1,c
  9022  01A306  0EF8               	movlw	low STR_34
  9023  01A308  6EE6               	movwf	postinc1,c
  9024  01A30A  0EFF               	movlw	high STR_34
  9025  01A30C  6EE6               	movwf	postinc1,c
  9026  01A30E  0E04               	movlw	4
  9027  01A310  6EE6               	movwf	postinc1,c
  9028  01A312  EC50  F0D0         	call	_printf	;wreg free
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;eadog.c: 232:  start_lcd();
  9032  01A316  ECB9  F0D8         	call	_start_lcd	;wreg free
  9033                           
  9034                           ; BSR set to: 59
  9035                           ;eadog.c: 233:  wait_lcd_done();
  9036  01A31A  ECCA  F0D7         	call	_wait_lcd_done	;wreg free
  9037                           
  9038                           ; BSR set to: 0
  9039  01A31E  82BC               	bsf	188,1,c	;volatile
  9040                           
  9041                           ; BSR set to: 0
  9042                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9043  01A320  52E5               	movf	postdec1,f,c
  9044  01A322  0012               	return		;funcret
  9045  01A324                     __end_of_send_lcd_cmd_dma:
  9046                           	opt callstack 0
  9047                           
  9048 ;; *************** function _wait_lcd_done *****************
  9049 ;; Defined at:
  9050 ;;		line 156 in file "eadog.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;		None
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;		None
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  1  [STACK] void 
  9057 ;; Registers used:
  9058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 3F/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9068 ;;Total ram usage:        0 bytes
  9069 ;; Hardware stack levels used:    1
  9070 ;; Hardware stack levels required when called:   16
  9071 ;; This function calls:
  9072 ;;		_wdtdelay
  9073 ;; This function is called by:
  9074 ;;		_send_lcd_cmd_dma
  9075 ;;		_update_lcd
  9076 ;;		_vterm_dump
  9077 ;; This function uses a reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text36
  9081  01AF94                     __ptext36:
  9082                           	opt callstack 0
  9083  01AF94                     _wait_lcd_done:
  9084                           	opt callstack 13
  9085                           
  9086                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9087                           
  9088                           ; BSR set to: 0
  9089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9090                           ;incstack = 0
  9091  01AF94  0100               	movlb	0	; () banked
  9092  01AF96  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9093  01AF98  D7FD               	goto	_wait_lcd_done
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;eadog.c: 159:  wdtdelay(50);
  9097  01AF9A  0E32               	movlw	50
  9098  01AF9C  6EE6               	movwf	postinc1,c
  9099  01AF9E  0E00               	movlw	0
  9100  01AFA0  6EE6               	movwf	postinc1,c
  9101  01AFA2  0E00               	movlw	0
  9102  01AFA4  6EE6               	movwf	postinc1,c
  9103  01AFA6  0E00               	movlw	0
  9104  01AFA8  6EE6               	movwf	postinc1,c
  9105  01AFAA  ECE1  F0D0         	call	_wdtdelay	;wreg free
  9106                           
  9107                           ; BSR set to: 0
  9108                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9109  01AFAE  0012               	return		;funcret
  9110  01AFB0                     __end_of_wait_lcd_done:
  9111                           	opt callstack 0
  9112                           
  9113 ;; *************** function _wdtdelay *****************
  9114 ;; Defined at:
  9115 ;;		line 23 in file "eadog.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;  delay           4  [STACK] const unsigned long 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;		None
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1  [STACK] void 
  9122 ;; Registers used:
  9123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 3F/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9133 ;;Total ram usage:        0 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; Hardware stack levels required when called:   15
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_init_display
  9140 ;;		_send_lcd_cmd
  9141 ;;		_send_lcd_cmd_long
  9142 ;;		_wait_lcd_done
  9143 ;; This function uses a reentrant model
  9144 ;;
  9145                           
  9146                           	psect	text37
  9147  01A1C2                     __ptext37:
  9148                           	opt callstack 0
  9149  01A1C2                     _wdtdelay:
  9150                           	opt callstack 13
  9151                           
  9152                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9153                           
  9154                           ; BSR set to: 0
  9155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9156                           ;incstack = 0
  9157  01A1C2  0100               	movlb	0	; () banked
  9158  01A1C4  6B9A               	clrf	wdtdelay@dcount& (0+255),b
  9159  01A1C6  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9160  01A1C8  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9161  01A1CA  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9162  01A1CC                     l1430:
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;eadog.c: 28:   __nop();
  9166  01A1CC  F000               	nop	
  9167  01A1CE  0004               	clrwdt		;# 
  9168                           
  9169                           ;eadog.c: 30:  };
  9170  01A1D0  0E01               	movlw	1
  9171  01A1D2  0100               	movlb	0	; () banked
  9172  01A1D4  279A               	addwf	wdtdelay@dcount& (0+255),f,b
  9173  01A1D6  0E00               	movlw	0
  9174  01A1D8  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9175  01A1DA  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9176  01A1DC  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9177                           
  9178                           ; BSR set to: 0
  9179                           ;stkvar	_delay @ sp[(0)+-4]
  9180  01A1DE  0EFC               	movlw	-4
  9181  01A1E0  006F FF8C  F001    	movff	plusw1,btemp
  9182  01A1E6  519A               	movf	wdtdelay@dcount& (0+255),w,b
  9183  01A1E8  5C01               	subwf	btemp^0,w,c
  9184  01A1EA  0EFD               	movlw	-3
  9185  01A1EC  006F FF8C  F001    	movff	plusw1,btemp
  9186  01A1F2  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9187  01A1F4  5801               	subwfb	btemp^0,w,c
  9188  01A1F6  0EFE               	movlw	-2
  9189  01A1F8  006F FF8C  F001    	movff	plusw1,btemp
  9190  01A1FE  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9191  01A200  5801               	subwfb	btemp^0,w,c
  9192  01A202  0EFF               	movlw	-1
  9193  01A204  006F FF8C  F001    	movff	plusw1,btemp
  9194  01A20A  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9195  01A20C  5801               	subwfb	btemp^0,w,c
  9196  01A20E  B0D8               	btfsc	status,0,c
  9197  01A210  D7DD               	goto	l1430
  9198                           
  9199                           ; BSR set to: 0
  9200                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9201  01A212  52E5               	movf	postdec1,f,c
  9202  01A214  52E5               	movf	postdec1,f,c
  9203  01A216  52E5               	movf	postdec1,f,c
  9204  01A218  52E5               	movf	postdec1,f,c
  9205  01A21A  0012               	return		;funcret
  9206  01A21C                     __end_of_wdtdelay:
  9207                           	opt callstack 0
  9208                           
  9209 ;; *************** function _eaDogM_WriteString *****************
  9210 ;; Defined at:
  9211 ;;		line 199 in file "eadog.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  strPtr          2  [STACK] PTR unsigned char 
  9214 ;;		 -> D.lcd(288), D(290), V(188), 
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;		None
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1  [STACK] void 
  9219 ;; Registers used:
  9220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9221 ;; Tracked objects:
  9222 ;;		On entry : 3F/0
  9223 ;;		On exit  : 3F/3B
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9230 ;;Total ram usage:        0 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; Hardware stack levels required when called:   24
  9233 ;; This function calls:
  9234 ;;		_printf
  9235 ;;		_ringBufS_flush
  9236 ;;		_start_lcd
  9237 ;;		_strlen
  9238 ;;		_wait_lcd_set
  9239 ;; This function is called by:
  9240 ;;		_eaDogM_WriteStringAtPos
  9241 ;; This function uses a reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text38
  9245  019864                     __ptext38:
  9246                           	opt callstack 0
  9247  019864                     _eaDogM_WriteString:
  9248                           	opt callstack 4
  9249                           
  9250                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  9251                           
  9252                           ; BSR set to: 0
  9253                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9254                           ;incstack = 0
  9255  019864  ECB6  F0D8         	call	_wait_lcd_set	;wreg free
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  9259  019868  0E00               	movlw	0
  9260  01986A  6EE6               	movwf	postinc1,c
  9261  01986C  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9262  019872  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9263  019878  EC6B  F0CD         	call	_ringBufS_flush	;wreg free
  9264  01987C  94BC               	bcf	188,2,c	;volatile
  9265                           
  9266                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  9267                           ;stkvar	_strPtr @ sp[(0)+-2]
  9268  01987E  0EFE               	movlw	-2
  9269  019880  006F FF8F FFE6     	movff	plusw1,postinc1
  9270  019886  006F FF8F FFE6     	movff	plusw1,postinc1
  9271  01988C  EC85  F0CC         	call	_strlen	;wreg free
  9272  019890  5002               	movf	(btemp+1)^0,w,c
  9273  019892  E104               	bnz	u11620
  9274  019894  0E41               	movlw	65
  9275  019896  5C01               	subwf	btemp^0,w,c
  9276  019898  A0D8               	btfss	status,0,c
  9277  01989A  D010               	goto	l12026
  9278  01989C                     u11620:
  9279                           
  9280                           ;stkvar	_strPtr @ sp[(0)+-2]
  9281  01989C  0EFE               	movlw	-2
  9282  01989E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9283  0198A4  0EFF               	movlw	-1
  9284  0198A6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9285  0198AC  0E40               	movlw	64
  9286  0198AE  240B               	addwf	(btemp+10)^0,w,c
  9287  0198B0  6ED9               	movwf	fsr2l,c
  9288  0198B2  0E00               	movlw	0
  9289  0198B4  200C               	addwfc	(btemp+11)^0,w,c
  9290  0198B6  6EDA               	movwf	fsr2h,c
  9291  0198B8  0E00               	movlw	0
  9292  0198BA  6EDF               	movwf	indf2,c
  9293  0198BC                     l12026:
  9294                           
  9295                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  9296  0198BC  013B               	movlb	59	; () banked
  9297  0198BE  9FFC               	bcf	252,7,b	;volatile
  9298                           
  9299                           ; BSR set to: 59
  9300                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  9301                           ;stkvar	_strPtr @ sp[(0)+-2]
  9302  0198C0  0EFE               	movlw	-2
  9303  0198C2  006F FF8F FFE6     	movff	plusw1,postinc1
  9304  0198C8  006F FF8F FFE6     	movff	plusw1,postinc1
  9305  0198CE  EC85  F0CC         	call	_strlen	;wreg free
  9306  0198D2  0060  F007  FBF7   	movff	btemp,15351	;volatile
  9307  0198D8  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  9308                           
  9309                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  9310  0198DE  013B               	movlb	59	; () banked
  9311  0198E0  8FFC               	bsf	252,7,b	;volatile
  9312                           
  9313                           ; BSR set to: 59
  9314                           ;eadog.c: 210:  printf("%s", strPtr);
  9315                           ;stkvar	_strPtr @ sp[(0)+-2]
  9316  0198E2  0EFE               	movlw	-2
  9317  0198E4  006F FF8F FFE6     	movff	plusw1,postinc1
  9318  0198EA  006F FF8F FFE6     	movff	plusw1,postinc1
  9319  0198F0  0EFB               	movlw	low STR_33
  9320  0198F2  6EE6               	movwf	postinc1,c
  9321  0198F4  0EFF               	movlw	high STR_33
  9322  0198F6  6EE6               	movwf	postinc1,c
  9323  0198F8  0E04               	movlw	4
  9324  0198FA  6EE6               	movwf	postinc1,c
  9325  0198FC  EC50  F0D0         	call	_printf	;wreg free
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;eadog.c: 211:  start_lcd();
  9329  019900  ECB9  F0D8         	call	_start_lcd	;wreg free
  9330                           
  9331                           ; BSR set to: 59
  9332                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  9333  019904  52E5               	movf	postdec1,f,c
  9334  019906  52E5               	movf	postdec1,f,c
  9335  019908  0012               	return		;funcret
  9336  01990A                     __end_of_eaDogM_WriteString:
  9337                           	opt callstack 0
  9338                           
  9339 ;; *************** function _wait_lcd_set *****************
  9340 ;; Defined at:
  9341 ;;		line 146 in file "eadog.c"
  9342 ;; Parameters:    Size  Location     Type
  9343 ;;		None
  9344 ;; Auto vars:     Size  Location     Type
  9345 ;;		None
  9346 ;; Return value:  Size  Location     Type
  9347 ;;                  1  [STACK] void 
  9348 ;; Registers used:
  9349 ;;		None
  9350 ;; Tracked objects:
  9351 ;;		On entry : 0/3D
  9352 ;;		On exit  : 3F/0
  9353 ;;		Unchanged: 0/0
  9354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9359 ;;Total ram usage:        0 bytes
  9360 ;; Hardware stack levels used:    1
  9361 ;; Hardware stack levels required when called:   15
  9362 ;; This function calls:
  9363 ;;		Nothing
  9364 ;; This function is called by:
  9365 ;;		_eaDogM_WriteString
  9366 ;;		_send_lcd_cmd_dma
  9367 ;; This function uses a reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text39
  9371  01B16C                     __ptext39:
  9372                           	opt callstack 0
  9373  01B16C                     _wait_lcd_set:
  9374                           	opt callstack 12
  9375                           
  9376                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  9377                           
  9378                           ; BSR set to: 59
  9379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9380                           ;incstack = 0
  9381  01B16C  0100               	movlb	0	; () banked
  9382  01B16E  8760               	bsf	_spi_link& (0+255),3,b	;volatile
  9383                           
  9384                           ; BSR set to: 0
  9385                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9386  01B170  0012               	return		;funcret
  9387  01B172                     __end_of_wait_lcd_set:
  9388                           	opt callstack 0
  9389                           
  9390 ;; *************** function _start_lcd *****************
  9391 ;; Defined at:
  9392 ;;		line 141 in file "eadog.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;		None
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;		None
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1  [STACK] void 
  9399 ;; Registers used:
  9400 ;;		None
  9401 ;; Tracked objects:
  9402 ;;		On entry : 3F/0
  9403 ;;		On exit  : 3F/3B
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9410 ;;Total ram usage:        0 bytes
  9411 ;; Hardware stack levels used:    1
  9412 ;; Hardware stack levels required when called:   15
  9413 ;; This function calls:
  9414 ;;		Nothing
  9415 ;; This function is called by:
  9416 ;;		_eaDogM_WriteString
  9417 ;;		_send_lcd_cmd_dma
  9418 ;; This function uses a reentrant model
  9419 ;;
  9420                           
  9421                           	psect	text40
  9422  01B172                     __ptext40:
  9423                           	opt callstack 0
  9424  01B172                     _start_lcd:
  9425                           	opt callstack 12
  9426                           
  9427                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  9428                           
  9429                           ; BSR set to: 0
  9430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9431                           ;incstack = 0
  9432  01B172  013B               	movlb	59	; () banked
  9433  01B174  8DFC               	bsf	252,6,b	;volatile
  9434                           
  9435                           ; BSR set to: 59
  9436                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9437  01B176  0012               	return		;funcret
  9438  01B178                     __end_of_start_lcd:
  9439                           	opt callstack 0
  9440                           
  9441 ;; *************** function _ringBufS_flush *****************
  9442 ;; Defined at:
  9443 ;;		line 76 in file "ringbufs.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9446 ;;		 -> ring_buf1(67), 
  9447 ;;  clearBuffer     1  [STACK] const char 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1  [STACK] void 
  9452 ;; Registers used:
  9453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9454 ;; Tracked objects:
  9455 ;;		On entry : 3F/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9463 ;;Total ram usage:        0 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:   16
  9466 ;; This function calls:
  9467 ;;		_memset
  9468 ;; This function is called by:
  9469 ;;		_eaDogM_WriteString
  9470 ;;		_send_lcd_cmd_dma
  9471 ;; This function uses a reentrant model
  9472 ;;
  9473                           
  9474                           	psect	text41
  9475  019AD6                     __ptext41:
  9476                           	opt callstack 0
  9477  019AD6                     _ringBufS_flush:
  9478                           	opt callstack 11
  9479                           
  9480                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9481                           ;stkvar	__this @ sp[(0)+-2]
  9482                           
  9483                           ; BSR set to: 59
  9484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9485                           ;incstack = 0
  9486  019AD6  0EFE               	movlw	-2
  9487  019AD8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9488  019ADE  0EFF               	movlw	-1
  9489  019AE0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9490  019AE6  0E42               	movlw	66
  9491  019AE8  240B               	addwf	(btemp+10)^0,w,c
  9492  019AEA  6ED9               	movwf	fsr2l,c
  9493  019AEC  0E00               	movlw	0
  9494  019AEE  200C               	addwfc	(btemp+11)^0,w,c
  9495  019AF0  6EDA               	movwf	fsr2h,c
  9496  019AF2  0E00               	movlw	0
  9497  019AF4  6EDF               	movwf	indf2,c
  9498                           
  9499                           ;ringbufs.c: 79:  _this->head = 0;
  9500                           ;stkvar	__this @ sp[(0)+-2]
  9501  019AF6  0EFE               	movlw	-2
  9502  019AF8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9503  019AFE  0EFF               	movlw	-1
  9504  019B00  006F FF8C  F00C    	movff	plusw1,btemp+11
  9505  019B06  0E40               	movlw	64
  9506  019B08  240B               	addwf	(btemp+10)^0,w,c
  9507  019B0A  6ED9               	movwf	fsr2l,c
  9508  019B0C  0E00               	movlw	0
  9509  019B0E  200C               	addwfc	(btemp+11)^0,w,c
  9510  019B10  6EDA               	movwf	fsr2h,c
  9511  019B12  0E00               	movlw	0
  9512  019B14  6EDF               	movwf	indf2,c
  9513                           
  9514                           ;ringbufs.c: 80:  _this->tail = 0;
  9515                           ;stkvar	__this @ sp[(0)+-2]
  9516  019B16  0EFE               	movlw	-2
  9517  019B18  006F FF8C  F00B    	movff	plusw1,btemp+10
  9518  019B1E  0EFF               	movlw	-1
  9519  019B20  006F FF8C  F00C    	movff	plusw1,btemp+11
  9520  019B26  0E41               	movlw	65
  9521  019B28  240B               	addwf	(btemp+10)^0,w,c
  9522  019B2A  6ED9               	movwf	fsr2l,c
  9523  019B2C  0E00               	movlw	0
  9524  019B2E  200C               	addwfc	(btemp+11)^0,w,c
  9525  019B30  6EDA               	movwf	fsr2h,c
  9526  019B32  0E00               	movlw	0
  9527  019B34  6EDF               	movwf	indf2,c
  9528                           
  9529                           ;ringbufs.c: 81:  if (clearBuffer) {
  9530                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9531  019B36  0EFD               	movlw	-3
  9532  019B38  50E3               	movf	plusw1,w,c
  9533  019B3A  B4D8               	btfsc	status,2,c
  9534  019B3C  D011               	goto	l1574
  9535                           
  9536                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9537  019B3E  0E40               	movlw	64
  9538  019B40  6EE6               	movwf	postinc1,c
  9539  019B42  0E00               	movlw	0
  9540  019B44  6EE6               	movwf	postinc1,c
  9541  019B46  0E00               	movlw	0
  9542  019B48  6EE6               	movwf	postinc1,c
  9543  019B4A  0E00               	movlw	0
  9544  019B4C  6EE6               	movwf	postinc1,c
  9545                           
  9546                           ;stkvar	__this @ sp[(-4)+-2]
  9547  019B4E  0EFA               	movlw	-6
  9548  019B50  006F FF8F FFE6     	movff	plusw1,postinc1
  9549  019B56  006F FF8F FFE6     	movff	plusw1,postinc1
  9550  019B5C  EC9C  F0B0         	call	_memset	;wreg free
  9551  019B60                     l1574:
  9552                           
  9553                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9554  019B60  52E5               	movf	postdec1,f,c
  9555  019B62  52E5               	movf	postdec1,f,c
  9556  019B64  52E5               	movf	postdec1,f,c
  9557  019B66  0012               	return		;funcret
  9558  019B68                     __end_of_ringBufS_flush:
  9559                           	opt callstack 0
  9560                           
  9561 ;; *************** function _memset *****************
  9562 ;; Defined at:
  9563 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;  dest            2  [STACK] PTR void 
  9566 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9567 ;;  c               2  [STACK] int 
  9568 ;;  n               2  [STACK] unsigned int 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;  s               2  [STACK] PTR unsigned char 
  9571 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9572 ;;  k               2  [STACK] unsigned int 
  9573 ;; Return value:  Size  Location     Type
  9574 ;;                  2  [STACK] PTR void 
  9575 ;; Registers used:
  9576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9577 ;; Tracked objects:
  9578 ;;		On entry : 0/0
  9579 ;;		On exit  : 0/0
  9580 ;;		Unchanged: 0/0
  9581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9586 ;;Total ram usage:        0 bytes
  9587 ;; Hardware stack levels used:    1
  9588 ;; Hardware stack levels required when called:   15
  9589 ;; This function calls:
  9590 ;;		Nothing
  9591 ;; This function is called by:
  9592 ;;		_ringBufS_init
  9593 ;;		_ringBufS_flush
  9594 ;; This function uses a reentrant model
  9595 ;;
  9596                           
  9597                           	psect	text42
  9598  016138                     __ptext42:
  9599                           	opt callstack 0
  9600  016138                     _memset:
  9601                           	opt callstack 0
  9602                           
  9603                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9604  016138  52E6               	movf	postinc1,f,c
  9605  01613A  52E6               	movf	postinc1,f,c
  9606  01613C  52E6               	movf	postinc1,f,c
  9607  01613E  52E6               	movf	postinc1,f,c
  9608                           
  9609                           ;stkvar	_dest @ sp[(-4)+-2]
  9610                           
  9611                           ;incstack = 0
  9612  016140  0EFA               	movlw	-6
  9613  016142  006F FF8C  F00B    	movff	plusw1,btemp+10
  9614  016148  0EFB               	movlw	-5
  9615  01614A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9616                           
  9617                           ;stkvar	_s @ sp[(-4)+0]
  9618  016150  0EFD               	movlw	-3
  9619  016152  0060  F033  FFE3   	movff	btemp+11,plusw1
  9620  016158  0EFC               	movlw	-4
  9621  01615A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9622                           
  9623                           ;stkvar	_n @ sp[(-4)+-6]
  9624  016160  0EF6               	movlw	-10
  9625  016162  006F FF8C  F001    	movff	plusw1,btemp
  9626  016168  0EF7               	movlw	-9
  9627  01616A  50E3               	movf	plusw1,w,c
  9628  01616C  1001               	iorwf	btemp^0,w,c
  9629  01616E  B4D8               	btfsc	status,2,c
  9630  016170  D154               	goto	u10230
  9631                           
  9632                           ;stkvar	_c @ sp[(-4)+-4]
  9633                           ;stkvar	_s @ sp[(-4)+0]
  9634  016172  0EFC               	movlw	-4
  9635  016174  006F FF8F FFD9     	movff	plusw1,fsr2l
  9636  01617A  0EFD               	movlw	-3
  9637  01617C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9638  016182  0EF8               	movlw	-8
  9639  016184  006F FF8F FFDF     	movff	plusw1,indf2
  9640                           
  9641                           ;stkvar	_c @ sp[(-4)+-4]
  9642                           ;stkvar	_n @ sp[(-4)+-6]
  9643                           ;stkvar	_s @ sp[(-4)+0]
  9644  01618A  0EFC               	movlw	-4
  9645  01618C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9646  016192  0EFD               	movlw	-3
  9647  016194  006F FF8C  F00C    	movff	plusw1,btemp+11
  9648  01619A  0EF6               	movlw	-10
  9649  01619C  50E3               	movf	plusw1,w,c
  9650  01619E  260B               	addwf	(btemp+10)^0,f,c
  9651  0161A0  0EF7               	movlw	-9
  9652  0161A2  50E3               	movf	plusw1,w,c
  9653  0161A4  220C               	addwfc	(btemp+11)^0,f,c
  9654  0161A6  0EFF               	movlw	255
  9655  0161A8  240B               	addwf	(btemp+10)^0,w,c
  9656  0161AA  6ED9               	movwf	fsr2l,c
  9657  0161AC  0EFF               	movlw	255
  9658  0161AE  200C               	addwfc	(btemp+11)^0,w,c
  9659  0161B0  6EDA               	movwf	fsr2h,c
  9660  0161B2  0EF8               	movlw	-8
  9661  0161B4  006F FF8F FFDF     	movff	plusw1,indf2
  9662                           
  9663                           ;stkvar	_n @ sp[(-4)+-6]
  9664  0161BA  0EF7               	movlw	-9
  9665  0161BC  50E3               	movf	plusw1,w,c
  9666  0161BE  E108               	bnz	l11198
  9667  0161C0  0EF6               	movlw	-10
  9668  0161C2  006F FF8C  F001    	movff	plusw1,btemp
  9669  0161C8  0E03               	movlw	3
  9670  0161CA  5E01               	subwf	btemp^0,f,c
  9671  0161CC  A0D8               	btfss	status,0,c
  9672  0161CE  D125               	goto	u10230
  9673  0161D0                     l11198:
  9674                           
  9675                           ;stkvar	_c @ sp[(-4)+-4]
  9676                           ;stkvar	_s @ sp[(-4)+0]
  9677  0161D0  0EFC               	movlw	-4
  9678  0161D2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9679  0161D8  0EFD               	movlw	-3
  9680  0161DA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9681  0161E0  0E01               	movlw	1
  9682  0161E2  240B               	addwf	(btemp+10)^0,w,c
  9683  0161E4  6ED9               	movwf	fsr2l,c
  9684  0161E6  0E00               	movlw	0
  9685  0161E8  200C               	addwfc	(btemp+11)^0,w,c
  9686  0161EA  6EDA               	movwf	fsr2h,c
  9687  0161EC  0EF8               	movlw	-8
  9688  0161EE  006F FF8F FFDF     	movff	plusw1,indf2
  9689                           
  9690                           ;stkvar	_c @ sp[(-4)+-4]
  9691                           ;stkvar	_s @ sp[(-4)+0]
  9692  0161F4  0EFC               	movlw	-4
  9693  0161F6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9694  0161FC  0EFD               	movlw	-3
  9695  0161FE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9696  016204  0E02               	movlw	2
  9697  016206  240B               	addwf	(btemp+10)^0,w,c
  9698  016208  6ED9               	movwf	fsr2l,c
  9699  01620A  0E00               	movlw	0
  9700  01620C  200C               	addwfc	(btemp+11)^0,w,c
  9701  01620E  6EDA               	movwf	fsr2h,c
  9702  016210  0EF8               	movlw	-8
  9703  016212  006F FF8F FFDF     	movff	plusw1,indf2
  9704                           
  9705                           ;stkvar	_c @ sp[(-4)+-4]
  9706                           ;stkvar	_n @ sp[(-4)+-6]
  9707                           ;stkvar	_s @ sp[(-4)+0]
  9708  016218  0EFC               	movlw	-4
  9709  01621A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9710  016220  0EFD               	movlw	-3
  9711  016222  006F FF8C  F00C    	movff	plusw1,btemp+11
  9712  016228  0EF6               	movlw	-10
  9713  01622A  50E3               	movf	plusw1,w,c
  9714  01622C  260B               	addwf	(btemp+10)^0,f,c
  9715  01622E  0EF7               	movlw	-9
  9716  016230  50E3               	movf	plusw1,w,c
  9717  016232  220C               	addwfc	(btemp+11)^0,f,c
  9718  016234  0EFE               	movlw	254
  9719  016236  240B               	addwf	(btemp+10)^0,w,c
  9720  016238  6ED9               	movwf	fsr2l,c
  9721  01623A  0EFF               	movlw	255
  9722  01623C  200C               	addwfc	(btemp+11)^0,w,c
  9723  01623E  6EDA               	movwf	fsr2h,c
  9724  016240  0EF8               	movlw	-8
  9725  016242  006F FF8F FFDF     	movff	plusw1,indf2
  9726                           
  9727                           ;stkvar	_c @ sp[(-4)+-4]
  9728                           ;stkvar	_n @ sp[(-4)+-6]
  9729                           ;stkvar	_s @ sp[(-4)+0]
  9730  016248  0EFC               	movlw	-4
  9731  01624A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9732  016250  0EFD               	movlw	-3
  9733  016252  006F FF8C  F00C    	movff	plusw1,btemp+11
  9734  016258  0EF6               	movlw	-10
  9735  01625A  50E3               	movf	plusw1,w,c
  9736  01625C  260B               	addwf	(btemp+10)^0,f,c
  9737  01625E  0EF7               	movlw	-9
  9738  016260  50E3               	movf	plusw1,w,c
  9739  016262  220C               	addwfc	(btemp+11)^0,f,c
  9740  016264  0EFD               	movlw	253
  9741  016266  240B               	addwf	(btemp+10)^0,w,c
  9742  016268  6ED9               	movwf	fsr2l,c
  9743  01626A  0EFF               	movlw	255
  9744  01626C  200C               	addwfc	(btemp+11)^0,w,c
  9745  01626E  6EDA               	movwf	fsr2h,c
  9746  016270  0EF8               	movlw	-8
  9747  016272  006F FF8F FFDF     	movff	plusw1,indf2
  9748                           
  9749                           ;stkvar	_n @ sp[(-4)+-6]
  9750  016278  0EF7               	movlw	-9
  9751  01627A  50E3               	movf	plusw1,w,c
  9752  01627C  E108               	bnz	l11204
  9753  01627E  0EF6               	movlw	-10
  9754  016280  006F FF8C  F001    	movff	plusw1,btemp
  9755  016286  0E07               	movlw	7
  9756  016288  5E01               	subwf	btemp^0,f,c
  9757  01628A  A0D8               	btfss	status,0,c
  9758  01628C  D0C6               	goto	u10230
  9759  01628E                     l11204:
  9760                           
  9761                           ;stkvar	_c @ sp[(-4)+-4]
  9762                           ;stkvar	_s @ sp[(-4)+0]
  9763  01628E  0EFC               	movlw	-4
  9764  016290  006F FF8C  F00B    	movff	plusw1,btemp+10
  9765  016296  0EFD               	movlw	-3
  9766  016298  006F FF8C  F00C    	movff	plusw1,btemp+11
  9767  01629E  0E03               	movlw	3
  9768  0162A0  240B               	addwf	(btemp+10)^0,w,c
  9769  0162A2  6ED9               	movwf	fsr2l,c
  9770  0162A4  0E00               	movlw	0
  9771  0162A6  200C               	addwfc	(btemp+11)^0,w,c
  9772  0162A8  6EDA               	movwf	fsr2h,c
  9773  0162AA  0EF8               	movlw	-8
  9774  0162AC  006F FF8F FFDF     	movff	plusw1,indf2
  9775                           
  9776                           ;stkvar	_c @ sp[(-4)+-4]
  9777                           ;stkvar	_n @ sp[(-4)+-6]
  9778                           ;stkvar	_s @ sp[(-4)+0]
  9779  0162B2  0EFC               	movlw	-4
  9780  0162B4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9781  0162BA  0EFD               	movlw	-3
  9782  0162BC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9783  0162C2  0EF6               	movlw	-10
  9784  0162C4  50E3               	movf	plusw1,w,c
  9785  0162C6  260B               	addwf	(btemp+10)^0,f,c
  9786  0162C8  0EF7               	movlw	-9
  9787  0162CA  50E3               	movf	plusw1,w,c
  9788  0162CC  220C               	addwfc	(btemp+11)^0,f,c
  9789  0162CE  0EFC               	movlw	252
  9790  0162D0  240B               	addwf	(btemp+10)^0,w,c
  9791  0162D2  6ED9               	movwf	fsr2l,c
  9792  0162D4  0EFF               	movlw	255
  9793  0162D6  200C               	addwfc	(btemp+11)^0,w,c
  9794  0162D8  6EDA               	movwf	fsr2h,c
  9795  0162DA  0EF8               	movlw	-8
  9796  0162DC  006F FF8F FFDF     	movff	plusw1,indf2
  9797                           
  9798                           ;stkvar	_n @ sp[(-4)+-6]
  9799  0162E2  0EF7               	movlw	-9
  9800  0162E4  50E3               	movf	plusw1,w,c
  9801  0162E6  E108               	bnz	l11210
  9802  0162E8  0EF6               	movlw	-10
  9803  0162EA  006F FF8C  F001    	movff	plusw1,btemp
  9804  0162F0  0E09               	movlw	9
  9805  0162F2  5E01               	subwf	btemp^0,f,c
  9806  0162F4  A0D8               	btfss	status,0,c
  9807  0162F6  D091               	goto	u10230
  9808  0162F8                     l11210:
  9809                           
  9810                           ;stkvar	_s @ sp[(-4)+0]
  9811  0162F8  0EFC               	movlw	-4
  9812  0162FA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9813  016300  1E0B               	comf	(btemp+10)^0,f,c
  9814  016302  0EFD               	movlw	-3
  9815  016304  006F FF8C  F00C    	movff	plusw1,btemp+11
  9816  01630A  1E0C               	comf	(btemp+11)^0,f,c
  9817  01630C  2A0B               	incf	(btemp+10)^0,f,c
  9818  01630E  B4D8               	btfsc	status,2,c
  9819  016310  2A0C               	incf	(btemp+11)^0,f,c
  9820  016312  0E03               	movlw	3
  9821  016314  160B               	andwf	(btemp+10)^0,f,c
  9822  016316  0E00               	movlw	0
  9823  016318  160C               	andwf	(btemp+11)^0,f,c
  9824                           
  9825                           ;stkvar	_k @ sp[(-4)+2]
  9826  01631A  0EFE               	movlw	-2
  9827  01631C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9828  016322  0EFF               	movlw	-1
  9829  016324  0060  F033  FFE3   	movff	btemp+11,plusw1
  9830                           
  9831                           ;stkvar	_k @ sp[(-4)+2]
  9832                           ;stkvar	_s @ sp[(-4)+0]
  9833  01632A  0EFC               	movlw	-4
  9834  01632C  50E3               	movf	plusw1,w,c
  9835  01632E  6E01               	movwf	btemp^0,c
  9836  016330  0EFE               	movlw	-2
  9837  016332  50E3               	movf	plusw1,w,c
  9838  016334  2601               	addwf	btemp^0,f,c
  9839  016336  0EFC               	movlw	-4
  9840  016338  0060  F007  FFE3   	movff	btemp,plusw1
  9841  01633E  0EFD               	movlw	-3
  9842  016340  50E3               	movf	plusw1,w,c
  9843  016342  6E01               	movwf	btemp^0,c
  9844  016344  0EFF               	movlw	-1
  9845  016346  50E3               	movf	plusw1,w,c
  9846  016348  2201               	addwfc	btemp^0,f,c
  9847  01634A  0EFD               	movlw	-3
  9848  01634C  0060  F007  FFE3   	movff	btemp,plusw1
  9849                           
  9850                           ;stkvar	_k @ sp[(-4)+2]
  9851                           ;stkvar	_n @ sp[(-4)+-6]
  9852  016352  0EF6               	movlw	-10
  9853  016354  50E3               	movf	plusw1,w,c
  9854  016356  6E01               	movwf	btemp^0,c
  9855  016358  0EFE               	movlw	-2
  9856  01635A  50E3               	movf	plusw1,w,c
  9857  01635C  5E01               	subwf	btemp^0,f,c
  9858  01635E  0EF6               	movlw	-10
  9859  016360  0060  F007  FFE3   	movff	btemp,plusw1
  9860  016366  0EF7               	movlw	-9
  9861  016368  50E3               	movf	plusw1,w,c
  9862  01636A  6E01               	movwf	btemp^0,c
  9863  01636C  0EFF               	movlw	-1
  9864  01636E  50E3               	movf	plusw1,w,c
  9865  016370  5A01               	subwfb	btemp^0,f,c
  9866  016372  0EF7               	movlw	-9
  9867  016374  0060  F007  FFE3   	movff	btemp,plusw1
  9868  01637A  0EFC               	movlw	252
  9869  01637C  6E0B               	movwf	(btemp+10)^0,c
  9870  01637E  0EFF               	movlw	255
  9871  016380  6E0C               	movwf	(btemp+11)^0,c
  9872                           
  9873                           ;stkvar	_n @ sp[(-4)+-6]
  9874  016382  0EF6               	movlw	-10
  9875  016384  006F FF8C  F001    	movff	plusw1,btemp
  9876  01638A  500B               	movf	(btemp+10)^0,w,c
  9877  01638C  1601               	andwf	btemp^0,f,c
  9878  01638E  0EF6               	movlw	-10
  9879  016390  0060  F007  FFE3   	movff	btemp,plusw1
  9880  016396  0EF7               	movlw	-9
  9881  016398  006F FF8C  F001    	movff	plusw1,btemp
  9882  01639E  500C               	movf	(btemp+11)^0,w,c
  9883  0163A0  1601               	andwf	btemp^0,f,c
  9884  0163A2  0EF7               	movlw	-9
  9885  0163A4  D02E               	goto	L4
  9886  0163A6                     l11218:
  9887                           
  9888                           ;stkvar	_c @ sp[(-4)+-4]
  9889                           ;stkvar	_s @ sp[(-4)+0]
  9890  0163A6  0EFC               	movlw	-4
  9891  0163A8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9892  0163AE  0EFD               	movlw	-3
  9893  0163B0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9894  0163B6  0EF8               	movlw	-8
  9895  0163B8  006F FF8F FFDF     	movff	plusw1,indf2
  9896                           
  9897                           ;stkvar	_n @ sp[(-4)+-6]
  9898  0163BE  0EF6               	movlw	-10
  9899  0163C0  006F FF8C  F001    	movff	plusw1,btemp
  9900  0163C6  0E01               	movlw	1
  9901  0163C8  5E01               	subwf	btemp^0,f,c
  9902  0163CA  0EF6               	movlw	-10
  9903  0163CC  0060  F007  FFE3   	movff	btemp,plusw1
  9904  0163D2  0EF7               	movlw	-9
  9905  0163D4  006F FF8C  F001    	movff	plusw1,btemp
  9906  0163DA  0E00               	movlw	0
  9907  0163DC  5A01               	subwfb	btemp^0,f,c
  9908  0163DE  0EF7               	movlw	-9
  9909  0163E0  0060  F007  FFE3   	movff	btemp,plusw1
  9910                           
  9911                           ;stkvar	_s @ sp[(-4)+0]
  9912  0163E6  0EFC               	movlw	-4
  9913  0163E8  50E3               	movf	plusw1,w,c
  9914  0163EA  0F01               	addlw	1
  9915  0163EC  6E01               	movwf	btemp^0,c
  9916  0163EE  0EFC               	movlw	-4
  9917  0163F0  0060  F007  FFE3   	movff	btemp,plusw1
  9918  0163F6  6A01               	clrf	btemp^0,c
  9919  0163F8  0EFD               	movlw	-3
  9920  0163FA  50E3               	movf	plusw1,w,c
  9921  0163FC  2001               	addwfc	btemp^0,w,c
  9922  0163FE  6E01               	movwf	btemp^0,c
  9923  016400  0EFD               	movlw	-3
  9924  016402                     L4:
  9925  016402  0060  F007  FFE3   	movff	btemp,plusw1
  9926                           
  9927                           ;stkvar	_n @ sp[(-4)+-6]
  9928  016408  0EF6               	movlw	-10
  9929  01640A  006F FF8C  F001    	movff	plusw1,btemp
  9930  016410  0EF7               	movlw	-9
  9931  016412  50E3               	movf	plusw1,w,c
  9932  016414  1001               	iorwf	btemp^0,w,c
  9933  016416  A4D8               	btfss	status,2,c
  9934  016418  D7C6               	goto	l11218
  9935  01641A                     u10230:
  9936                           
  9937                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9938  01641A  0EF6               	movlw	246
  9939  01641C  26E1               	addwf	fsr1l,f,c
  9940  01641E  0EFF               	movlw	255
  9941  016420  22E2               	addwfc	fsr1h,f,c
  9942  016422  0012               	return		;funcret
  9943  016424                     __end_of_memset:
  9944                           	opt callstack 0
  9945                           
  9946 ;; *************** function _printf *****************
  9947 ;; Defined at:
  9948 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  9949 ;; Parameters:    Size  Location     Type
  9950 ;;  fmt             2  [STACK] PTR const unsigned char 
  9951 ;;		 -> STR_35(3), STR_34(3), STR_33(3), 
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;  ap              2  [STACK] PTR void [1]
  9954 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9955 ;;  ret             2    0        int 
  9956 ;; Return value:  Size  Location     Type
  9957 ;;                  2  [STACK] int 
  9958 ;; Registers used:
  9959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9960 ;; Tracked objects:
  9961 ;;		On entry : 3F/3B
  9962 ;;		On exit  : 3F/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9969 ;;Total ram usage:        0 bytes
  9970 ;; Hardware stack levels used:    1
  9971 ;; Hardware stack levels required when called:   23
  9972 ;; This function calls:
  9973 ;;		_vfprintf
  9974 ;; This function is called by:
  9975 ;;		_eaDogM_WriteString
  9976 ;;		_send_lcd_cmd_dma
  9977 ;; This function uses a reentrant model
  9978 ;;
  9979                           
  9980                           	psect	text43
  9981  01A0A0                     __ptext43:
  9982                           	opt callstack 0
  9983  01A0A0                     _printf:
  9984                           	opt callstack 0
  9985                           
  9986                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9987  01A0A0  52E6               	movf	postinc1,f,c
  9988  01A0A2  52E6               	movf	postinc1,f,c
  9989                           
  9990                           ;stkvar	?_printf @ sp[(-2)+-3]
  9991                           
  9992                           ;incstack = 0
  9993  01A0A4  0EFB               	movlw	251
  9994  01A0A6  24E1               	addwf	fsr1l,w,c
  9995  01A0A8  6E0B               	movwf	(btemp+10)^0,c
  9996  01A0AA  0EFF               	movlw	255
  9997  01A0AC  20E2               	addwfc	fsr1h,w,c
  9998  01A0AE  6E0C               	movwf	(btemp+11)^0,c
  9999                           
 10000                           ;stkvar	_ap @ sp[(-2)+0]
 10001  01A0B0  0EFF               	movlw	-1
 10002  01A0B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10003  01A0B8  0EFE               	movlw	-2
 10004  01A0BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10005                           
 10006                           ;stkvar	_ap @ sp[(-2)+0]
 10007  01A0C0  0EFE               	movlw	254
 10008  01A0C2  24E1               	addwf	fsr1l,w,c
 10009  01A0C4  6E01               	movwf	btemp^0,c
 10010  01A0C6  0EFF               	movlw	255
 10011  01A0C8  20E2               	addwfc	fsr1h,w,c
 10012  01A0CA  6E02               	movwf	(btemp+1)^0,c
 10013  01A0CC  0060  F007  FFE6   	movff	btemp,postinc1
 10014  01A0D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10015                           
 10016                           ;stkvar	_fmt @ sp[(-4)+-3]
 10017  01A0D8  0EF9               	movlw	-7
 10018  01A0DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10019  01A0E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10020  01A0E6  0E00               	movlw	0
 10021  01A0E8  6EE6               	movwf	postinc1,c
 10022  01A0EA  0E00               	movlw	0
 10023  01A0EC  6EE6               	movwf	postinc1,c
 10024  01A0EE  EC87  F0CB         	call	_vfprintf	;wreg free
 10025                           
 10026                           ; BSR set to: 0
 10027                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10028  01A0F2  52E5               	movf	postdec1,f,c
 10029  01A0F4  52E5               	movf	postdec1,f,c
 10030  01A0F6  52E5               	movf	postdec1,f,c
 10031  01A0F8  50E7               	movf	indf1,w,c
 10032  01A0FA  5EE1               	subwf	fsr1l,f,c
 10033  01A0FC  0E00               	movlw	0
 10034  01A0FE  5AE2               	subwfb	fsr1h,f,c
 10035  01A100  0012               	return		;funcret
 10036  01A102                     __end_of_printf:
 10037                           	opt callstack 0
 10038                           
 10039 ;; *************** function _vfprintf *****************
 10040 ;; Defined at:
 10041 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10044 ;;		 -> f(6), NULL(0), 
 10045 ;;  fmt             2  [STACK] PTR const unsigned char 
 10046 ;;		 -> STR_55(85), STR_53(3), STR_52(3), STR_51(19), 
 10047 ;;		 -> STR_50(19), STR_49(19), STR_48(19), STR_47(19), 
 10048 ;;		 -> STR_46(19), STR_45(24), STR_44(15), STR_43(15), 
 10049 ;;		 -> STR_42(15), STR_41(10), STR_40(10), STR_39(19), 
 10050 ;;		 -> STR_38(19), STR_35(3), STR_34(3), STR_33(3), 
 10051 ;;		 -> STR_32(17), STR_31(16), STR_30(16), STR_29(20), 
 10052 ;;		 -> STR_28(20), STR_27(19), STR_26(19), STR_25(19), 
 10053 ;;		 -> STR_24(19), STR_23(19), STR_22(19), STR_21(19), 
 10054 ;;		 -> STR_20(17), STR_19(16), STR_18(16), STR_17(26), 
 10055 ;;		 -> STR_16(26), STR_15(22), STR_14(17), STR_13(17), 
 10056 ;;		 -> STR_12(17), STR_11(22), STR_10(22), STR_9(23), 
 10057 ;;		 -> STR_8(18), STR_7(17), STR_6(17), STR_5(17), 
 10058 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 10059 ;;  ap              2  [STACK] PTR PTR void 
 10060 ;;		 -> ap(2), ap(2), 
 10061 ;; Auto vars:     Size  Location     Type
 10062 ;;  cfmt            2  [STACK] PTR unsigned char 
 10063 ;;		 -> STR_55(85), STR_53(3), STR_52(3), STR_51(19), 
 10064 ;;		 -> STR_50(19), STR_49(19), STR_48(19), STR_47(19), 
 10065 ;;		 -> STR_46(19), STR_45(24), STR_44(15), STR_43(15), 
 10066 ;;		 -> STR_42(15), STR_41(10), STR_40(10), STR_39(19), 
 10067 ;;		 -> STR_38(19), STR_35(3), STR_34(3), STR_33(3), 
 10068 ;;		 -> STR_32(17), STR_31(16), STR_30(16), STR_29(20), 
 10069 ;;		 -> STR_28(20), STR_27(19), STR_26(19), STR_25(19), 
 10070 ;;		 -> STR_24(19), STR_23(19), STR_22(19), STR_21(19), 
 10071 ;;		 -> STR_20(17), STR_19(16), STR_18(16), STR_17(26), 
 10072 ;;		 -> STR_16(26), STR_15(22), STR_14(17), STR_13(17), 
 10073 ;;		 -> STR_12(17), STR_11(22), STR_10(22), STR_9(23), 
 10074 ;;		 -> STR_8(18), STR_7(17), STR_6(17), STR_5(17), 
 10075 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  2  [STACK] int 
 10078 ;; Registers used:
 10079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/1
 10082 ;;		On exit  : 3F/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10089 ;;Total ram usage:        0 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:   22
 10092 ;; This function calls:
 10093 ;;		_vfpfcnvrt
 10094 ;; This function is called by:
 10095 ;;		_sprintf
 10096 ;;		_printf
 10097 ;; This function uses a reentrant model
 10098 ;;
 10099                           
 10100                           	psect	text44
 10101  01970E                     __ptext44:
 10102                           	opt callstack 0
 10103  01970E                     _vfprintf:
 10104                           	opt callstack 0
 10105                           
 10106                           ; BSR set to: 0
 10107                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10108  01970E  52E6               	movf	postinc1,f,c
 10109  019710  52E6               	movf	postinc1,f,c
 10110                           
 10111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10112                           ;stkvar	_fmt @ sp[(-2)+-4]
 10113                           
 10114                           ;incstack = 0
 10115 ;; hardware stack exceeded
 10116  019712  0EFA               	movlw	-6
 10117  019714  006F FF8C  F00B    	movff	plusw1,btemp+10
 10118  01971A  0EFB               	movlw	-5
 10119  01971C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10120                           
 10121                           ;stkvar	_cfmt @ sp[(-2)+0]
 10122  019722  0EFF               	movlw	-1
 10123  019724  0060  F033  FFE3   	movff	btemp+11,plusw1
 10124  01972A  0EFE               	movlw	-2
 10125  01972C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10126                           
 10127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10128  019732  0100               	movlb	0	; () banked
 10129  019734  6BC0               	clrf	_nout& (0+255),b
 10130  019736  6BC1               	clrf	(_nout+1)& (0+255),b
 10131                           
 10132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10133  019738  D021               	goto	l12042
 10134  01973A                     l12040:
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10138                           ;stkvar	_ap @ sp[(-2)+-6]
 10139  01973A  0EF8               	movlw	-8
 10140  01973C  006F FF8F FFE6     	movff	plusw1,postinc1
 10141  019742  006F FF8F FFE6     	movff	plusw1,postinc1
 10142                           
 10143                           ;stkvar	_cfmt @ sp[(-4)+0]
 10144  019748  0EFC               	movlw	252
 10145  01974A  24E1               	addwf	fsr1l,w,c
 10146  01974C  6E01               	movwf	btemp^0,c
 10147  01974E  0EFF               	movlw	255
 10148  019750  20E2               	addwfc	fsr1h,w,c
 10149  019752  6E02               	movwf	(btemp+1)^0,c
 10150  019754  0060  F007  FFE6   	movff	btemp,postinc1
 10151  01975A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10152                           
 10153                           ;stkvar	_fp @ sp[(-6)+-2]
 10154  019760  0EF8               	movlw	-8
 10155  019762  006F FF8F FFE6     	movff	plusw1,postinc1
 10156  019768  006F FF8F FFE6     	movff	plusw1,postinc1
 10157  01976E  EC22  F089         	call	_vfpfcnvrt	;wreg free
 10158  019772  5001               	movf	btemp^0,w,c
 10159  019774  0100               	movlb	0	; () banked
 10160  019776  27C0               	addwf	_nout& (0+255),f,b
 10161  019778  5002               	movf	(btemp+1)^0,w,c
 10162  01977A  23C1               	addwfc	(_nout+1)& (0+255),f,b
 10163  01977C                     l12042:
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10167                           ;stkvar	_cfmt @ sp[(-2)+0]
 10168  01977C  50E1               	movf	fsr1l,w,c
 10169  01977E  0FFE               	addlw	-2
 10170  019780  6ED9               	movwf	fsr2l,c
 10171  019782  50E2               	movf	fsr1h,w,c
 10172  019784  6EDA               	movwf	fsr2h,c
 10173  019786  0EFF               	movlw	255
 10174  019788  22DA               	addwfc	fsr2h,f,c
 10175  01978A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10176  019790  006F FF77 FFF7     	movff	postdec2,tblptrh
 10177  019796                     	if	0	;tblptru may be non-zero
 10178  019796                     	endif
 10179  019796                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10180  019796  0E00               	movlw	low (__mediumconst shr (0+16))
 10181  019798  6EF8               	movwf	tblptru,c
 10182  01979A                     	endif
 10183  01979A  0008               	tblrd		*
 10184  01979C  50F5               	movf	tablat,w,c
 10185  01979E  0900               	iorlw	0
 10186  0197A0  A4D8               	btfss	status,2,c
 10187  0197A2  D7CB               	goto	l12040
 10188                           
 10189                           ; BSR set to: 0
 10190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10191  0197A4  0060  F300  F001   	movff	_nout,btemp
 10192  0197AA  0060  F304  F002   	movff	_nout+1,btemp+1
 10193                           
 10194                           ; BSR set to: 0
 10195                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10196  0197B0  0EF8               	movlw	248
 10197  0197B2  26E1               	addwf	fsr1l,f,c
 10198  0197B4  0EFF               	movlw	255
 10199  0197B6  22E2               	addwfc	fsr1h,f,c
 10200  0197B8  0012               	return		;funcret
 10201  0197BA                     __end_of_vfprintf:
 10202                           	opt callstack 0
 10203                           
 10204 ;; *************** function _vfpfcnvrt *****************
 10205 ;; Defined at:
 10206 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10209 ;;		 -> f(6), NULL(0), 
 10210 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10211 ;;		 -> cfmt(2), 
 10212 ;;  ap              2  [STACK] PTR PTR void 
 10213 ;;		 -> ap(2), ap(2), 
 10214 ;; Auto vars:     Size  Location     Type
 10215 ;;  llu             8  [STACK] unsigned long long 
 10216 ;;  ll              8  [STACK] long long 
 10217 ;;  f               4  [STACK] long long 
 10218 ;;  ct              3  [STACK] unsigned char [3]
 10219 ;;  vp              3    0        PTR void 
 10220 ;;  cp              2  [STACK] PTR unsigned char 
 10221 ;;		 -> ?_printf(2), ?_sprintf(2), STR_37(9), STR_36(12), 
 10222 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 10223 ;;		 -> V(188), 
 10224 ;;  i               2    0        int 
 10225 ;;  done            2    0        int 
 10226 ;;  c               1  [STACK] unsigned char 
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  2  [STACK] int 
 10229 ;; Registers used:
 10230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10240 ;;Total ram usage:        0 bytes
 10241 ;; Hardware stack levels used:    1
 10242 ;; Hardware stack levels required when called:   21
 10243 ;; This function calls:
 10244 ;;		_atoi
 10245 ;;		_ctoa
 10246 ;;		_dtoa
 10247 ;;		_efgtoa
 10248 ;;		_fputc
 10249 ;;		_isdigit
 10250 ;;		_isupper
 10251 ;;		_stoa
 10252 ;;		_strncmp
 10253 ;;		_tolower
 10254 ;;		_utoa
 10255 ;;		_xtoa
 10256 ;; This function is called by:
 10257 ;;		_vfprintf
 10258 ;; This function uses a reentrant model
 10259 ;;
 10260                           
 10261                           	psect	text45
 10262  011244                     __ptext45:
 10263                           	opt callstack 0
 10264  011244                     _vfpfcnvrt:
 10265                           	opt callstack 0
 10266                           
 10267                           ; BSR set to: 0
 10268                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10269  011244  0E20               	movlw	32
 10270  011246  26E1               	addwf	fsr1l,f,c
 10271  011248  0E00               	movlw	0
 10272  01124A  22E2               	addwfc	fsr1h,f,c
 10273                           
 10274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 10275                           ;stkvar	_fmt @ sp[(-32)+-4]
 10276                           
 10277                           ;incstack = 0
 10278 ;; hardware stack exceeded
 10279  01124C  0EDC               	movlw	-36
 10280  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10281  011254  0EDD               	movlw	-35
 10282  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
 10283  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10284  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
 10285  011268                     	if	0	;tblptru may be non-zero
 10286  011268                     	endif
 10287  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10288  011268  0E00               	movlw	low (__mediumconst shr (0+16))
 10289  01126A  6EF8               	movwf	tblptru,c
 10290  01126C                     	endif
 10291  01126C  0008               	tblrd		*
 10292  01126E  50F5               	movf	tablat,w,c
 10293  011270  0A25               	xorlw	37
 10294  011272  A4D8               	btfss	status,2,c
 10295  011274  EFC9  F090         	goto	l11986
 10296                           
 10297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 10298                           ;stkvar	_fmt @ sp[(-32)+-4]
 10299  011278  0EDC               	movlw	-36
 10300  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10301  011280  0EDD               	movlw	-35
 10302  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
 10303  011288  2ADE               	incf	postinc2,f,c
 10304  01128A  0E00               	movlw	0
 10305  01128C  22DD               	addwfc	postdec2,f,c
 10306                           
 10307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 10308  01128E  6A21               	clrf	_width^0,c
 10309  011290  6A22               	clrf	(_width+1)^0,c
 10310  011292  6A25               	clrf	_flags^0,c
 10311  011294  6A26               	clrf	(_flags+1)^0,c
 10312                           
 10313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 10314  011296  6823               	setf	_prec^0,c
 10315  011298  6824               	setf	(_prec+1)^0,c
 10316                           
 10317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 10318                           ;stkvar	_fmt @ sp[(-32)+-4]
 10319  01129A  0EDC               	movlw	-36
 10320  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10321  0112A2  0EDD               	movlw	-35
 10322  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10323  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10324  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10325  0112B6                     	if	0	;tblptru may be non-zero
 10326  0112B6                     	endif
 10327  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10328  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
 10329  0112B8  6EF8               	movwf	tblptru,c
 10330  0112BA                     	endif
 10331  0112BA  0008               	tblrd		*
 10332  0112BC  50F5               	movf	tablat,w,c
 10333  0112BE  0A2A               	xorlw	42
 10334  0112C0  A4D8               	btfss	status,2,c
 10335  0112C2  D031               	goto	l11804
 10336                           
 10337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 10338                           ;stkvar	_fmt @ sp[(-32)+-4]
 10339  0112C4  0EDC               	movlw	-36
 10340  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10341  0112CC  0EDD               	movlw	-35
 10342  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10343  0112D4  2ADE               	incf	postinc2,f,c
 10344  0112D6  0E00               	movlw	0
 10345  0112D8  22DD               	addwfc	postdec2,f,c
 10346                           
 10347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 10348                           ;stkvar	_ap @ sp[(-32)+-6]
 10349  0112DA  0EDA               	movlw	-38
 10350  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10351  0112E2  0EDB               	movlw	-37
 10352  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10353  0112EA  0E02               	movlw	2
 10354  0112EC  5EDE               	subwf	postinc2,f,c
 10355  0112EE  0E00               	movlw	0
 10356  0112F0  5ADD               	subwfb	postdec2,f,c
 10357  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
 10358  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
 10359  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10360  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10361  01130A  006F FF78  F021    	movff	postinc2,_width
 10362  011310  006F FF74  F022    	movff	postdec2,_width+1
 10363                           
 10364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 10365  011316  AE22               	btfss	(_width+1)^0,7,c
 10366  011318  D066               	goto	u11360
 10367                           
 10368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 10369  01131A  8025               	bsf	_flags^0,0,c
 10370                           
 10371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 10372  01131C  6C21               	negf	_width^0,c
 10373  01131E  1E22               	comf	(_width+1)^0,f,c
 10374  011320  B0D8               	btfsc	status,0,c
 10375  011322  2A22               	incf	(_width+1)^0,f,c
 10376  011324  D060               	goto	u11360
 10377  011326                     l11804:
 10378                           
 10379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 10380                           ;stkvar	_fmt @ sp[(-32)+-4]
 10381  011326  0EDC               	movlw	-36
 10382  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
 10383  01132E  0EDD               	movlw	-35
 10384  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
 10385  011336  006F FF78  F00B    	movff	postinc2,btemp+10
 10386  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
 10387  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10388  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
 10389  01134E  ECB1  F0B4         	call	_atoi	;wreg free
 10390  011352  0060  F004  F021   	movff	btemp,_width
 10391  011358  0060  F008  F022   	movff	btemp+1,_width+1
 10392                           
 10393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10394  01135E  D00B               	goto	l11808
 10395  011360                     l11806:
 10396                           
 10397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 10398                           ;stkvar	_fmt @ sp[(-32)+-4]
 10399  011360  0EDC               	movlw	-36
 10400  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
 10401  011368  0EDD               	movlw	-35
 10402  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10403  011370  2ADE               	incf	postinc2,f,c
 10404  011372  0E00               	movlw	0
 10405  011374  22DD               	addwfc	postdec2,f,c
 10406  011376                     l11808:
 10407  011376  0ED0               	movlw	208
 10408  011378  6E0B               	movwf	(btemp+10)^0,c
 10409  01137A  0EFF               	movlw	255
 10410  01137C  6E0C               	movwf	(btemp+11)^0,c
 10411                           
 10412                           ;stkvar	_fmt @ sp[(-32)+-4]
 10413  01137E  0EDC               	movlw	-36
 10414  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
 10415  011386  0EDD               	movlw	-35
 10416  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
 10417  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10418  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
 10419  01139A                     	if	0	;tblptru may be non-zero
 10420  01139A                     	endif
 10421  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10422  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
 10423  01139C  6EF8               	movwf	tblptru,c
 10424  01139E                     	endif
 10425  01139E  0008               	tblrd		*
 10426  0113A0  50F5               	movf	tablat,w,c
 10427  0113A2  6E09               	movwf	(btemp+8)^0,c
 10428  0113A4  6A0A               	clrf	(btemp+9)^0,c
 10429  0113A6  500B               	movf	(btemp+10)^0,w,c
 10430  0113A8  2609               	addwf	(btemp+8)^0,f,c
 10431  0113AA  500C               	movf	(btemp+11)^0,w,c
 10432  0113AC  220A               	addwfc	(btemp+9)^0,f,c
 10433  0113AE  500A               	movf	(btemp+9)^0,w,c
 10434  0113B0  E106               	bnz	u11340
 10435  0113B2  0E0A               	movlw	10
 10436  0113B4  5C09               	subwf	(btemp+8)^0,w,c
 10437  0113B6  B0D8               	btfsc	status,0,c
 10438  0113B8  D002               	goto	u11340
 10439  0113BA  0E01               	movlw	1
 10440  0113BC  D001               	goto	u11350
 10441  0113BE                     u11340:
 10442  0113BE  0E00               	movlw	0
 10443  0113C0                     u11350:
 10444  0113C0  6E0B               	movwf	(btemp+10)^0,c
 10445  0113C2  6A0C               	clrf	(btemp+11)^0,c
 10446                           
 10447                           ;stkvar	_vfpfcnvrt$5352 @ sp[(-32)+4]
 10448  0113C4  0EE4               	movlw	-28
 10449  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10450  0113CC  0EE5               	movlw	-27
 10451  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10452                           
 10453                           ;stkvar	_vfpfcnvrt$5352 @ sp[(-32)+4]
 10454  0113D4  0EE4               	movlw	-28
 10455  0113D6  006F FF8C  F001    	movff	plusw1,btemp
 10456  0113DC  0EE5               	movlw	-27
 10457  0113DE  50E3               	movf	plusw1,w,c
 10458  0113E0  1001               	iorwf	btemp^0,w,c
 10459  0113E2  A4D8               	btfss	status,2,c
 10460  0113E4  D7BD               	goto	l11806
 10461  0113E6                     u11360:
 10462                           
 10463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 10464                           ;stkvar	_fmt @ sp[(-32)+-4]
 10465  0113E6  0EDC               	movlw	-36
 10466  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10467  0113EE  0EDD               	movlw	-35
 10468  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10469  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10470  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10471  011402                     	if	0	;tblptru may be non-zero
 10472  011402                     	endif
 10473  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10474  011402  0E00               	movlw	low (__mediumconst shr (0+16))
 10475  011404  6EF8               	movwf	tblptru,c
 10476  011406                     	endif
 10477  011406  0008               	tblrd		*
 10478  011408  50F5               	movf	tablat,w,c
 10479  01140A  0A2E               	xorlw	46
 10480  01140C  A4D8               	btfss	status,2,c
 10481  01140E  D0AC               	goto	u11410
 10482                           
 10483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 10484  011410  6A23               	clrf	_prec^0,c
 10485  011412  6A24               	clrf	(_prec+1)^0,c
 10486                           
 10487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 10488                           ;stkvar	_fmt @ sp[(-32)+-4]
 10489  011414  0EDC               	movlw	-36
 10490  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
 10491  01141C  0EDD               	movlw	-35
 10492  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10493  011424  2ADE               	incf	postinc2,f,c
 10494  011426  0E00               	movlw	0
 10495  011428  22DD               	addwfc	postdec2,f,c
 10496                           
 10497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 10498                           ;stkvar	_fmt @ sp[(-32)+-4]
 10499  01142A  0EDC               	movlw	-36
 10500  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10501  011432  0EDD               	movlw	-35
 10502  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
 10503  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10504  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
 10505  011446                     	if	0	;tblptru may be non-zero
 10506  011446                     	endif
 10507  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10508  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 10509  011448  6EF8               	movwf	tblptru,c
 10510  01144A                     	endif
 10511  01144A  0008               	tblrd		*
 10512  01144C  50F5               	movf	tablat,w,c
 10513  01144E  0A2A               	xorlw	42
 10514  011450  A4D8               	btfss	status,2,c
 10515  011452  D02A               	goto	l11826
 10516                           
 10517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 10518                           ;stkvar	_fmt @ sp[(-32)+-4]
 10519  011454  0EDC               	movlw	-36
 10520  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
 10521  01145C  0EDD               	movlw	-35
 10522  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10523  011464  2ADE               	incf	postinc2,f,c
 10524  011466  0E00               	movlw	0
 10525  011468  22DD               	addwfc	postdec2,f,c
 10526                           
 10527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 10528                           ;stkvar	_ap @ sp[(-32)+-6]
 10529  01146A  0EDA               	movlw	-38
 10530  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10531  011472  0EDB               	movlw	-37
 10532  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
 10533  01147A  0E02               	movlw	2
 10534  01147C  5EDE               	subwf	postinc2,f,c
 10535  01147E  0E00               	movlw	0
 10536  011480  5ADD               	subwfb	postdec2,f,c
 10537  011482  006F FF78  F00B    	movff	postinc2,btemp+10
 10538  011488  006F FF74  F00C    	movff	postdec2,btemp+11
 10539  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10540  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10541  01149A  006F FF78  F023    	movff	postinc2,_prec
 10542  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
 10543                           
 10544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 10545  0114A6  D060               	goto	u11410
 10546  0114A8                     l11826:
 10547                           
 10548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 10549                           ;stkvar	_fmt @ sp[(-32)+-4]
 10550  0114A8  0EDC               	movlw	-36
 10551  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10552  0114B0  0EDD               	movlw	-35
 10553  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10554  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
 10555  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
 10556  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10557  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10558  0114D0  ECB1  F0B4         	call	_atoi	;wreg free
 10559  0114D4  0060  F004  F023   	movff	btemp,_prec
 10560  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
 10561                           
 10562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10563  0114E0  D00B               	goto	l11830
 10564  0114E2                     l11828:
 10565                           
 10566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 10567                           ;stkvar	_fmt @ sp[(-32)+-4]
 10568  0114E2  0EDC               	movlw	-36
 10569  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10570  0114EA  0EDD               	movlw	-35
 10571  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10572  0114F2  2ADE               	incf	postinc2,f,c
 10573  0114F4  0E00               	movlw	0
 10574  0114F6  22DD               	addwfc	postdec2,f,c
 10575  0114F8                     l11830:
 10576  0114F8  0ED0               	movlw	208
 10577  0114FA  6E0B               	movwf	(btemp+10)^0,c
 10578  0114FC  0EFF               	movlw	255
 10579  0114FE  6E0C               	movwf	(btemp+11)^0,c
 10580                           
 10581                           ;stkvar	_fmt @ sp[(-32)+-4]
 10582  011500  0EDC               	movlw	-36
 10583  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
 10584  011508  0EDD               	movlw	-35
 10585  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10586  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
 10587  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
 10588  01151C                     	if	0	;tblptru may be non-zero
 10589  01151C                     	endif
 10590  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10591  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 10592  01151E  6EF8               	movwf	tblptru,c
 10593  011520                     	endif
 10594  011520  0008               	tblrd		*
 10595  011522  50F5               	movf	tablat,w,c
 10596  011524  6E09               	movwf	(btemp+8)^0,c
 10597  011526  6A0A               	clrf	(btemp+9)^0,c
 10598  011528  500B               	movf	(btemp+10)^0,w,c
 10599  01152A  2609               	addwf	(btemp+8)^0,f,c
 10600  01152C  500C               	movf	(btemp+11)^0,w,c
 10601  01152E  220A               	addwfc	(btemp+9)^0,f,c
 10602  011530  500A               	movf	(btemp+9)^0,w,c
 10603  011532  E106               	bnz	u11390
 10604  011534  0E0A               	movlw	10
 10605  011536  5C09               	subwf	(btemp+8)^0,w,c
 10606  011538  B0D8               	btfsc	status,0,c
 10607  01153A  D002               	goto	u11390
 10608  01153C  0E01               	movlw	1
 10609  01153E  D001               	goto	u11400
 10610  011540                     u11390:
 10611  011540  0E00               	movlw	0
 10612  011542                     u11400:
 10613  011542  6E0B               	movwf	(btemp+10)^0,c
 10614  011544  6A0C               	clrf	(btemp+11)^0,c
 10615                           
 10616                           ;stkvar	_vfpfcnvrt$5353 @ sp[(-32)+0]
 10617  011546  0EE0               	movlw	-32
 10618  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10619  01154E  0EE1               	movlw	-31
 10620  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
 10621                           
 10622                           ;stkvar	_vfpfcnvrt$5353 @ sp[(-32)+0]
 10623  011556  0EE0               	movlw	-32
 10624  011558  006F FF8C  F001    	movff	plusw1,btemp
 10625  01155E  0EE1               	movlw	-31
 10626  011560  50E3               	movf	plusw1,w,c
 10627  011562  1001               	iorwf	btemp^0,w,c
 10628  011564  A4D8               	btfss	status,2,c
 10629  011566  D7BD               	goto	l11828
 10630  011568                     u11410:
 10631                           
 10632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 10633                           ;stkvar	_fmt @ sp[(-32)+-4]
 10634  011568  0EDC               	movlw	-36
 10635  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10636  011570  0EDD               	movlw	-35
 10637  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
 10638  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
 10639  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10640  011584                     	if	0	;tblptru may be non-zero
 10641  011584                     	endif
 10642  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10643  011584  0E00               	movlw	low (__mediumconst shr (0+16))
 10644  011586  6EF8               	movwf	tblptru,c
 10645  011588                     	endif
 10646  011588  0008               	tblrd		*
 10647  01158A  50F5               	movf	tablat,w,c
 10648  01158C  6EE6               	movwf	postinc1,c
 10649  01158E  0E00               	movlw	0
 10650  011590  6EE6               	movwf	postinc1,c
 10651  011592  ECCB  F0CE         	call	_tolower	;wreg free
 10652                           
 10653                           ;stkvar	_ct @ sp[(-32)+26]
 10654  011596  0EFA               	movlw	-6
 10655  011598  0060  F007  FFE3   	movff	btemp,plusw1
 10656                           
 10657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 10658                           ;stkvar	_ct @ sp[(-32)+26]
 10659  01159E  0EFA               	movlw	-6
 10660  0115A0  50E3               	movf	plusw1,w,c
 10661  0115A2  B4D8               	btfsc	status,2,c
 10662  0115A4  D05B               	goto	l11846
 10663                           
 10664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 10665                           ;stkvar	_ct @ sp[(-32)+26]
 10666  0115A6  0EFB               	movlw	251
 10667  0115A8  24E1               	addwf	fsr1l,w,c
 10668  0115AA  6ED9               	movwf	fsr2l,c
 10669  0115AC  0EFF               	movlw	255
 10670  0115AE  20E2               	addwfc	fsr1h,w,c
 10671  0115B0  6EDA               	movwf	fsr2h,c
 10672                           
 10673                           ;stkvar	_fmt @ sp[(-32)+-4]
 10674  0115B2  0EDC               	movlw	-36
 10675  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
 10676  0115BA  0EDD               	movlw	-35
 10677  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
 10678  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
 10679  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
 10680  0115CE  0E01               	movlw	1
 10681  0115D0  260B               	addwf	(btemp+10)^0,f,c
 10682  0115D2  0E00               	movlw	0
 10683  0115D4  220C               	addwfc	(btemp+11)^0,f,c
 10684  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10685  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10686  0115E2                     	if	0	;tblptru may be non-zero
 10687  0115E2                     	endif
 10688  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10689  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
 10690  0115E4  6EF8               	movwf	tblptru,c
 10691  0115E6                     	endif
 10692  0115E6  0008               	tblrd		*
 10693  0115E8  50F5               	movf	tablat,w,c
 10694  0115EA  6EE6               	movwf	postinc1,c
 10695  0115EC  0E00               	movlw	0
 10696  0115EE  6EE6               	movwf	postinc1,c
 10697  0115F0  ECCB  F0CE         	call	_tolower	;wreg free
 10698  0115F4  5001               	movf	btemp^0,w,c
 10699  0115F6  6EDF               	movwf	indf2,c
 10700                           
 10701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 10702                           ;stkvar	_ct @ sp[(-32)+26]
 10703  0115F8  0EFB               	movlw	251
 10704  0115FA  24E1               	addwf	fsr1l,w,c
 10705  0115FC  6ED9               	movwf	fsr2l,c
 10706  0115FE  0EFF               	movlw	255
 10707  011600  20E2               	addwfc	fsr1h,w,c
 10708  011602  6EDA               	movwf	fsr2h,c
 10709  011604  50DF               	movf	indf2,w,c
 10710  011606  B4D8               	btfsc	status,2,c
 10711  011608  D029               	goto	l11846
 10712                           
 10713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 10714                           ;stkvar	_ct @ sp[(-32)+26]
 10715  01160A  0EFC               	movlw	252
 10716  01160C  24E1               	addwf	fsr1l,w,c
 10717  01160E  6ED9               	movwf	fsr2l,c
 10718  011610  0EFF               	movlw	255
 10719  011612  20E2               	addwfc	fsr1h,w,c
 10720  011614  6EDA               	movwf	fsr2h,c
 10721                           
 10722                           ;stkvar	_fmt @ sp[(-32)+-4]
 10723  011616  0EDC               	movlw	-36
 10724  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
 10725  01161E  0EDD               	movlw	-35
 10726  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
 10727  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
 10728  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
 10729  011632  0E02               	movlw	2
 10730  011634  260B               	addwf	(btemp+10)^0,f,c
 10731  011636  0E00               	movlw	0
 10732  011638  220C               	addwfc	(btemp+11)^0,f,c
 10733  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10734  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10735  011646                     	if	0	;tblptru may be non-zero
 10736  011646                     	endif
 10737  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10738  011646  0E00               	movlw	low (__mediumconst shr (0+16))
 10739  011648  6EF8               	movwf	tblptru,c
 10740  01164A                     	endif
 10741  01164A  0008               	tblrd		*
 10742  01164C  50F5               	movf	tablat,w,c
 10743  01164E  6EE6               	movwf	postinc1,c
 10744  011650  0E00               	movlw	0
 10745  011652  6EE6               	movwf	postinc1,c
 10746  011654  ECCB  F0CE         	call	_tolower	;wreg free
 10747  011658  5001               	movf	btemp^0,w,c
 10748  01165A  6EDF               	movwf	indf2,c
 10749  01165C                     l11846:
 10750                           
 10751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10752                           ;stkvar	_fmt @ sp[(-32)+-4]
 10753  01165C  0EDC               	movlw	-36
 10754  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10755  011664  0EDD               	movlw	-35
 10756  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 10757  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10758  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
 10759  011678                     	if	0	;tblptru may be non-zero
 10760  011678                     	endif
 10761  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10762  011678  0E00               	movlw	low (__mediumconst shr (0+16))
 10763  01167A  6EF8               	movwf	tblptru,c
 10764  01167C                     	endif
 10765  01167C  0008               	tblrd		*
 10766  01167E  50F5               	movf	tablat,w,c
 10767  011680  0A63               	xorlw	99
 10768  011682  A4D8               	btfss	status,2,c
 10769  011684  D037               	goto	l11856
 10770                           
 10771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10772                           ;stkvar	_fmt @ sp[(-32)+-4]
 10773  011686  0EDC               	movlw	-36
 10774  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
 10775  01168E  0EDD               	movlw	-35
 10776  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
 10777  011696  2ADE               	incf	postinc2,f,c
 10778  011698  0E00               	movlw	0
 10779  01169A  22DD               	addwfc	postdec2,f,c
 10780                           
 10781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10782                           ;stkvar	_ap @ sp[(-32)+-6]
 10783  01169C  0EDA               	movlw	-38
 10784  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10785  0116A4  0EDB               	movlw	-37
 10786  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10787  0116AC  0E02               	movlw	2
 10788  0116AE  5EDE               	subwf	postinc2,f,c
 10789  0116B0  0E00               	movlw	0
 10790  0116B2  5ADD               	subwfb	postdec2,f,c
 10791  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
 10792  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
 10793  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10794  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10795  0116CC  50DF               	movf	indf2,w,c
 10796  0116CE  6E0C               	movwf	(btemp+11)^0,c
 10797                           
 10798                           ;stkvar	_c @ sp[(-32)+31]
 10799  0116D0  0EFF               	movlw	-1
 10800  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10801                           
 10802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10803                           ;stkvar	_c @ sp[(-32)+31]
 10804  0116D8  0EFF               	movlw	-1
 10805  0116DA  50E3               	movf	plusw1,w,c
 10806  0116DC  6EE6               	movwf	postinc1,c
 10807                           
 10808                           ;stkvar	_fp @ sp[(-33)+-2]
 10809  0116DE  0EDD               	movlw	-35
 10810  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10811  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10812  0116EC  EC45  F0CE         	call	_ctoa	;wreg free
 10813  0116F0  EFF3  F090         	goto	l2302
 10814  0116F4                     l11856:
 10815                           
 10816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10817                           ;stkvar	_fmt @ sp[(-32)+-4]
 10818  0116F4  0EDC               	movlw	-36
 10819  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10820  0116FC  0EDD               	movlw	-35
 10821  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10822  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
 10823  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10824  011710                     	if	0	;tblptru may be non-zero
 10825  011710                     	endif
 10826  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10827  011710  0E00               	movlw	low (__mediumconst shr (0+16))
 10828  011712  6EF8               	movwf	tblptru,c
 10829  011714                     	endif
 10830  011714  0008               	tblrd		*
 10831  011716  50F5               	movf	tablat,w,c
 10832  011718  0A64               	xorlw	100
 10833  01171A  B4D8               	btfsc	status,2,c
 10834  01171C  D015               	goto	u11460
 10835                           
 10836                           ;stkvar	_fmt @ sp[(-32)+-4]
 10837  01171E  0EDC               	movlw	-36
 10838  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
 10839  011726  0EDD               	movlw	-35
 10840  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
 10841  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10842  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
 10843  01173A                     	if	0	;tblptru may be non-zero
 10844  01173A                     	endif
 10845  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10846  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
 10847  01173C  6EF8               	movwf	tblptru,c
 10848  01173E                     	endif
 10849  01173E  0008               	tblrd		*
 10850  011740  50F5               	movf	tablat,w,c
 10851  011742  0A69               	xorlw	105
 10852  011744  A4D8               	btfss	status,2,c
 10853  011746  D076               	goto	l11868
 10854  011748                     u11460:
 10855                           
 10856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10857                           ;stkvar	_fmt @ sp[(-32)+-4]
 10858  011748  0EDC               	movlw	-36
 10859  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10860  011750  0EDD               	movlw	-35
 10861  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
 10862  011758  2ADE               	incf	postinc2,f,c
 10863  01175A  0E00               	movlw	0
 10864  01175C  22DD               	addwfc	postdec2,f,c
 10865                           
 10866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10867                           ;stkvar	_ap @ sp[(-32)+-6]
 10868  01175E  0EDA               	movlw	-38
 10869  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
 10870  011766  0EDB               	movlw	-37
 10871  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
 10872  01176E  0E02               	movlw	2
 10873  011770  5EDE               	subwf	postinc2,f,c
 10874  011772  0E00               	movlw	0
 10875  011774  5ADD               	subwfb	postdec2,f,c
 10876  011776  006F FF78  F00B    	movff	postinc2,btemp+10
 10877  01177C  006F FF74  F00C    	movff	postdec2,btemp+11
 10878  011782  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10879  011788  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10880  01178E  006F FF78  F00B    	movff	postinc2,btemp+10
 10881  011794  006F FF74  F00C    	movff	postdec2,btemp+11
 10882                           
 10883                           ;stkvar	_ll @ sp[(-32)+14]
 10884  01179A  0EEE               	movlw	-18
 10885  01179C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10886  0117A2  0EEF               	movlw	-17
 10887  0117A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 10888  0117AA  6A01               	clrf	btemp^0,c
 10889  0117AC  BEE3               	btfsc	plusw1,7,c
 10890  0117AE  6801               	setf	btemp^0,c
 10891  0117B0  0EF0               	movlw	-16
 10892  0117B2  0060  F007  FFE3   	movff	btemp,plusw1
 10893  0117B8  0EF1               	movlw	-15
 10894  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
 10895  0117C0  0EF2               	movlw	-14
 10896  0117C2  0060  F007  FFE3   	movff	btemp,plusw1
 10897  0117C8  0EF3               	movlw	-13
 10898  0117CA  0060  F007  FFE3   	movff	btemp,plusw1
 10899  0117D0  0EF4               	movlw	-12
 10900  0117D2  0060  F007  FFE3   	movff	btemp,plusw1
 10901  0117D8  0EF5               	movlw	-11
 10902  0117DA  0060  F007  FFE3   	movff	btemp,plusw1
 10903  0117E0                     l11864:
 10904                           
 10905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10906                           ;stkvar	_ll @ sp[(-32)+14]
 10907  0117E0  50E1               	movf	fsr1l,w,c
 10908  0117E2  0FEE               	addlw	-18
 10909  0117E4  6ED9               	movwf	fsr2l,c
 10910  0117E6  50E2               	movf	fsr1h,w,c
 10911  0117E8  6EDA               	movwf	fsr2h,c
 10912  0117EA  0EFF               	movlw	255
 10913  0117EC  22DA               	addwfc	fsr2h,f,c
 10914  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
 10915  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
 10916  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
 10917  011800  006F FF7B FFE6     	movff	postinc2,postinc1
 10918  011806  006F FF7B FFE6     	movff	postinc2,postinc1
 10919  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
 10920  011812  006F FF7B FFE6     	movff	postinc2,postinc1
 10921  011818  006F FF7B FFE6     	movff	postinc2,postinc1
 10922                           
 10923                           ;stkvar	_fp @ sp[(-40)+-2]
 10924  01181E  0ED6               	movlw	-42
 10925  011820  006F FF8F FFE6     	movff	plusw1,postinc1
 10926  011826  006F FF8F FFE6     	movff	plusw1,postinc1
 10927  01182C  EC58  F0A7         	call	_dtoa	;wreg free
 10928  011830  EFF3  F090         	goto	l2302
 10929  011834                     l11868:
 10930                           
 10931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 10932  011834  0E02               	movlw	2
 10933  011836  6EE6               	movwf	postinc1,c
 10934  011838  0E00               	movlw	0
 10935  01183A  6EE6               	movwf	postinc1,c
 10936  01183C  0EE9               	movlw	low STR_64
 10937  01183E  6EE6               	movwf	postinc1,c
 10938  011840  0EFF               	movlw	high STR_64
 10939  011842  6EE6               	movwf	postinc1,c
 10940                           
 10941                           ;stkvar	_fmt @ sp[(-36)+-4]
 10942  011844  0ED8               	movlw	-40
 10943  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
 10944  01184C  0ED9               	movlw	-39
 10945  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10946  011854  006F FF78  F00B    	movff	postinc2,btemp+10
 10947  01185A  006F FF74  F00C    	movff	postdec2,btemp+11
 10948  011860  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10949  011866  0060  F033  FFE6   	movff	btemp+11,postinc1
 10950  01186C  EC0B  F0B7         	call	_strncmp	;wreg free
 10951  011870  5001               	movf	btemp^0,w,c
 10952  011872  1002               	iorwf	(btemp+1)^0,w,c
 10953  011874  B4D8               	btfsc	status,2,c
 10954  011876  D022               	goto	u11480
 10955  011878  0E02               	movlw	2
 10956  01187A  6EE6               	movwf	postinc1,c
 10957  01187C  0E00               	movlw	0
 10958  01187E  6EE6               	movwf	postinc1,c
 10959  011880  0EEF               	movlw	low STR_68
 10960  011882  6EE6               	movwf	postinc1,c
 10961  011884  0EFF               	movlw	high STR_68
 10962  011886  6EE6               	movwf	postinc1,c
 10963                           
 10964                           ;stkvar	_fmt @ sp[(-36)+-4]
 10965  011888  0ED8               	movlw	-40
 10966  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10967  011890  0ED9               	movlw	-39
 10968  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
 10969  011898  006F FF78  F00B    	movff	postinc2,btemp+10
 10970  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
 10971  0118A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10972  0118AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10973  0118B0  EC0B  F0B7         	call	_strncmp	;wreg free
 10974  0118B4  5001               	movf	btemp^0,w,c
 10975  0118B6  1002               	iorwf	(btemp+1)^0,w,c
 10976  0118B8  A4D8               	btfss	status,2,c
 10977  0118BA  D069               	goto	l11880
 10978  0118BC                     u11480:
 10979                           
 10980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 10981                           ;stkvar	_fmt @ sp[(-32)+-4]
 10982  0118BC  0EDC               	movlw	-36
 10983  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10984  0118C4  0EDD               	movlw	-35
 10985  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10986  0118CC  0E02               	movlw	2
 10987  0118CE  26DE               	addwf	postinc2,f,c
 10988  0118D0  0E00               	movlw	0
 10989  0118D2  22DD               	addwfc	postdec2,f,c
 10990                           
 10991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 10992                           ;stkvar	_ap @ sp[(-32)+-6]
 10993  0118D4  0EDA               	movlw	-38
 10994  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10995  0118DC  0EDB               	movlw	-37
 10996  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10997  0118E4  0E04               	movlw	4
 10998  0118E6  5EDE               	subwf	postinc2,f,c
 10999  0118E8  0E00               	movlw	0
 11000  0118EA  5ADD               	subwfb	postdec2,f,c
 11001  0118EC  006F FF78  F00B    	movff	postinc2,btemp+10
 11002  0118F2  006F FF74  F00C    	movff	postdec2,btemp+11
 11003  0118F8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11004  0118FE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11005  011904  006F FF78  F009    	movff	postinc2,btemp+8
 11006  01190A  006F FF78  F00A    	movff	postinc2,btemp+9
 11007  011910  006F FF78  F00B    	movff	postinc2,btemp+10
 11008  011916  006F FF78  F00C    	movff	postinc2,btemp+11
 11009  01191C  0060  F024  F011   	movff	btemp+8,btemp+16
 11010  011922  0060  F028  F012   	movff	btemp+9,btemp+17
 11011  011928  0060  F02C  F013   	movff	btemp+10,btemp+18
 11012  01192E  0060  F030  F014   	movff	btemp+11,btemp+19
 11013  011934  6A15               	clrf	(btemp+20)^0,c
 11014  011936  BE14               	btfsc	(btemp+19)^0,7,c
 11015  011938  6815               	setf	(btemp+20)^0,c
 11016  01193A  0060  F054  F016   	movff	btemp+20,btemp+21
 11017  011940  0060  F054  F017   	movff	btemp+20,btemp+22
 11018  011946  0060  F054  F018   	movff	btemp+20,btemp+23
 11019                           
 11020                           ;stkvar	_ll @ sp[(-32)+14]
 11021  01194C  0EEE               	movlw	-18
 11022  01194E  0060  F047  FFE3   	movff	btemp+16,plusw1
 11023  011954  0EEF               	movlw	-17
 11024  011956  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11025  01195C  0EF0               	movlw	-16
 11026  01195E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11027  011964  0EF1               	movlw	-15
 11028  011966  0060  F053  FFE3   	movff	btemp+19,plusw1
 11029  01196C  0EF2               	movlw	-14
 11030  01196E  0060  F057  FFE3   	movff	btemp+20,plusw1
 11031  011974  0EF3               	movlw	-13
 11032  011976  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11033  01197C  0EF4               	movlw	-12
 11034  01197E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11035  011984  0EF5               	movlw	-11
 11036  011986  0060  F063  FFE3   	movff	btemp+23,plusw1
 11037  01198C  D729               	goto	l11864
 11038  01198E                     l11880:
 11039                           
 11040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11041                           ;stkvar	_ct @ sp[(-32)+26]
 11042  01198E  0EFA               	movlw	-6
 11043  011990  006F FF8C  F001    	movff	plusw1,btemp
 11044  011996  0E66               	movlw	102
 11045  011998  1801               	xorwf	btemp^0,w,c
 11046  01199A  A4D8               	btfss	status,2,c
 11047  01199C  D06E               	goto	l11892
 11048                           
 11049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11050                           ;stkvar	_fmt @ sp[(-32)+-4]
 11051  01199E  0EDC               	movlw	-36
 11052  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11053  0119A6  0EDD               	movlw	-35
 11054  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11055  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11056  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11057  0119BA                     	if	0	;tblptru may be non-zero
 11058  0119BA                     	endif
 11059  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11060  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
 11061  0119BC  6EF8               	movwf	tblptru,c
 11062  0119BE                     	endif
 11063                           
 11064                           ;stkvar	_c @ sp[(-32)+31]
 11065  0119BE  0008               	tblrd		*
 11066  0119C0  0EFF               	movlw	-1
 11067  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
 11068                           
 11069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11070                           ;stkvar	_fmt @ sp[(-32)+-4]
 11071  0119C8  0EDC               	movlw	-36
 11072  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11073  0119D0  0EDD               	movlw	-35
 11074  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11075  0119D8  2ADE               	incf	postinc2,f,c
 11076  0119DA  0E00               	movlw	0
 11077  0119DC  22DD               	addwfc	postdec2,f,c
 11078                           
 11079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11080                           ;stkvar	_ap @ sp[(-32)+-6]
 11081  0119DE  0EDA               	movlw	-38
 11082  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11083  0119E6  0EDB               	movlw	-37
 11084  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11085  0119EE  0E04               	movlw	4
 11086  0119F0  5EDE               	subwf	postinc2,f,c
 11087  0119F2  0E00               	movlw	0
 11088  0119F4  5ADD               	subwfb	postdec2,f,c
 11089  0119F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11090  0119FC  006F FF74  F00C    	movff	postdec2,btemp+11
 11091  011A02  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11092  011A08  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11093  011A0E  006F FF78  F009    	movff	postinc2,btemp+8
 11094  011A14  006F FF78  F00A    	movff	postinc2,btemp+9
 11095  011A1A  006F FF78  F00B    	movff	postinc2,btemp+10
 11096  011A20  006F FF78  F00C    	movff	postinc2,btemp+11
 11097                           
 11098                           ;stkvar	_f @ sp[(-32)+22]
 11099  011A26  0EF6               	movlw	-10
 11100  011A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 11101  011A2E  0EF7               	movlw	-9
 11102  011A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11103  011A36  0EF8               	movlw	-8
 11104  011A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11105  011A3E  0EF9               	movlw	-7
 11106  011A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 11107  011A46                     l11888:
 11108                           
 11109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11110                           ;stkvar	_c @ sp[(-32)+31]
 11111  011A46  0EFF               	movlw	-1
 11112  011A48  50E3               	movf	plusw1,w,c
 11113  011A4A  6EE6               	movwf	postinc1,c
 11114                           
 11115                           ;stkvar	_f @ sp[(-33)+22]
 11116  011A4C  0EF5               	movlw	-11
 11117  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 11118  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
 11119  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 11120  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
 11121                           
 11122                           ;stkvar	_fp @ sp[(-37)+-2]
 11123  011A66  0ED9               	movlw	-39
 11124  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
 11125  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11126  011A74  EC00  F080         	call	_efgtoa	;wreg free
 11127  011A78  D3B6               	goto	l2302
 11128  011A7A                     l11892:
 11129                           
 11130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11131  011A7A  0E02               	movlw	2
 11132  011A7C  6EE6               	movwf	postinc1,c
 11133  011A7E  0E00               	movlw	0
 11134  011A80  6EE6               	movwf	postinc1,c
 11135  011A82  0EEC               	movlw	low STR_73
 11136  011A84  6EE6               	movwf	postinc1,c
 11137  011A86  0EFF               	movlw	high STR_73
 11138  011A88  6EE6               	movwf	postinc1,c
 11139                           
 11140                           ;stkvar	_ct @ sp[(-36)+26]
 11141  011A8A  0EF6               	movlw	246
 11142  011A8C  24E1               	addwf	fsr1l,w,c
 11143  011A8E  6E01               	movwf	btemp^0,c
 11144  011A90  0EFF               	movlw	255
 11145  011A92  20E2               	addwfc	fsr1h,w,c
 11146  011A94  6E02               	movwf	(btemp+1)^0,c
 11147  011A96  0060  F007  FFE6   	movff	btemp,postinc1
 11148  011A9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11149  011AA2  EC0B  F0B7         	call	_strncmp	;wreg free
 11150  011AA6  5001               	movf	btemp^0,w,c
 11151  011AA8  1002               	iorwf	(btemp+1)^0,w,c
 11152  011AAA  A4D8               	btfss	status,2,c
 11153  011AAC  D096               	goto	l11912
 11154                           
 11155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11156                           ;stkvar	_fmt @ sp[(-32)+-4]
 11157  011AAE  0EDC               	movlw	-36
 11158  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11159  011AB6  0EDD               	movlw	-35
 11160  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11161  011ABE  006F FF78  F00B    	movff	postinc2,btemp+10
 11162  011AC4  006F FF74  F00C    	movff	postdec2,btemp+11
 11163  011ACA  0E01               	movlw	1
 11164  011ACC  260B               	addwf	(btemp+10)^0,f,c
 11165  011ACE  0E00               	movlw	0
 11166  011AD0  220C               	addwfc	(btemp+11)^0,f,c
 11167  011AD2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11168  011AD8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11169  011ADE                     	if	0	;tblptru may be non-zero
 11170  011ADE                     	endif
 11171  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11172  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 11173  011AE0  6EF8               	movwf	tblptru,c
 11174  011AE2                     	endif
 11175                           
 11176                           ;stkvar	_c @ sp[(-32)+31]
 11177  011AE2  0008               	tblrd		*
 11178  011AE4  0EFF               	movlw	-1
 11179  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
 11180  011AEC  0EBF               	movlw	191
 11181  011AEE  6E0B               	movwf	(btemp+10)^0,c
 11182  011AF0  0EFF               	movlw	255
 11183  011AF2  6E0C               	movwf	(btemp+11)^0,c
 11184                           
 11185                           ;stkvar	_fmt @ sp[(-32)+-4]
 11186  011AF4  0EDC               	movlw	-36
 11187  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11188  011AFC  0EDD               	movlw	-35
 11189  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11190  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
 11191  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11192  011B10                     	if	0	;tblptru may be non-zero
 11193  011B10                     	endif
 11194  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11195  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
 11196  011B12  6EF8               	movwf	tblptru,c
 11197  011B14                     	endif
 11198  011B14  0008               	tblrd		*
 11199  011B16  50F5               	movf	tablat,w,c
 11200  011B18  6E09               	movwf	(btemp+8)^0,c
 11201  011B1A  6A0A               	clrf	(btemp+9)^0,c
 11202  011B1C  500B               	movf	(btemp+10)^0,w,c
 11203  011B1E  2609               	addwf	(btemp+8)^0,f,c
 11204  011B20  500C               	movf	(btemp+11)^0,w,c
 11205  011B22  220A               	addwfc	(btemp+9)^0,f,c
 11206  011B24  500A               	movf	(btemp+9)^0,w,c
 11207  011B26  E106               	bnz	u11510
 11208  011B28  0E1A               	movlw	26
 11209  011B2A  5C09               	subwf	(btemp+8)^0,w,c
 11210  011B2C  B0D8               	btfsc	status,0,c
 11211  011B2E  D002               	goto	u11510
 11212  011B30  0E01               	movlw	1
 11213  011B32  D001               	goto	u11520
 11214  011B34                     u11510:
 11215  011B34  0E00               	movlw	0
 11216  011B36                     u11520:
 11217  011B36  6E0B               	movwf	(btemp+10)^0,c
 11218  011B38  6A0C               	clrf	(btemp+11)^0,c
 11219                           
 11220                           ;stkvar	_vfpfcnvrt$5364 @ sp[(-32)+2]
 11221  011B3A  0EE2               	movlw	-30
 11222  011B3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11223  011B42  0EE3               	movlw	-29
 11224  011B44  0060  F033  FFE3   	movff	btemp+11,plusw1
 11225                           
 11226                           ;stkvar	_vfpfcnvrt$5364 @ sp[(-32)+2]
 11227  011B4A  0EE2               	movlw	-30
 11228  011B4C  006F FF8C  F001    	movff	plusw1,btemp
 11229  011B52  0EE3               	movlw	-29
 11230  011B54  50E3               	movf	plusw1,w,c
 11231  011B56  1001               	iorwf	btemp^0,w,c
 11232                           
 11233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 11234                           ;stkvar	_ap @ sp[(-32)+-6]
 11235                           
 11236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 11237                           
 11238                           ;stkvar	_f @ sp[(-32)+22]
 11239                           
 11240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 11241                           ;stkvar	_ap @ sp[(-32)+-6]
 11242  011B58  0EDA               	movlw	-38
 11243  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11244  011B60  0EDB               	movlw	-37
 11245  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
 11246  011B68  0E04               	movlw	4
 11247  011B6A  5EDE               	subwf	postinc2,f,c
 11248  011B6C  0E00               	movlw	0
 11249  011B6E  5ADD               	subwfb	postdec2,f,c
 11250  011B70  006F FF78  F00B    	movff	postinc2,btemp+10
 11251  011B76  006F FF74  F00C    	movff	postdec2,btemp+11
 11252  011B7C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11253  011B82  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11254  011B88  006F FF78  F009    	movff	postinc2,btemp+8
 11255  011B8E  006F FF78  F00A    	movff	postinc2,btemp+9
 11256  011B94  006F FF78  F00B    	movff	postinc2,btemp+10
 11257  011B9A  006F FF78  F00C    	movff	postinc2,btemp+11
 11258                           
 11259                           ;stkvar	_f @ sp[(-32)+22]
 11260  011BA0  0EF6               	movlw	-10
 11261  011BA2  0060  F027  FFE3   	movff	btemp+8,plusw1
 11262  011BA8  0EF7               	movlw	-9
 11263  011BAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11264  011BB0  0EF8               	movlw	-8
 11265  011BB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11266  011BB8  0EF9               	movlw	-7
 11267  011BBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11268                           
 11269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 11270                           ;stkvar	_fmt @ sp[(-32)+-4]
 11271  011BC0  0EDC               	movlw	-36
 11272  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11273  011BC8  0EDD               	movlw	-35
 11274  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11275  011BD0  0E02               	movlw	2
 11276  011BD2  26DE               	addwf	postinc2,f,c
 11277  011BD4  0E00               	movlw	0
 11278  011BD6  22DD               	addwfc	postdec2,f,c
 11279  011BD8  D736               	goto	l11888
 11280  011BDA                     l11912:
 11281                           
 11282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 11283                           ;stkvar	_fmt @ sp[(-32)+-4]
 11284  011BDA  0EDC               	movlw	-36
 11285  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11286  011BE2  0EDD               	movlw	-35
 11287  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11288  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11289  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11290  011BF6                     	if	0	;tblptru may be non-zero
 11291  011BF6                     	endif
 11292  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11293  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 11294  011BF8  6EF8               	movwf	tblptru,c
 11295  011BFA                     	endif
 11296  011BFA  0008               	tblrd		*
 11297  011BFC  50F5               	movf	tablat,w,c
 11298  011BFE  0A73               	xorlw	115
 11299  011C00  A4D8               	btfss	status,2,c
 11300  011C02  D042               	goto	l11922
 11301                           
 11302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 11303                           ;stkvar	_fmt @ sp[(-32)+-4]
 11304  011C04  0EDC               	movlw	-36
 11305  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 11306  011C0C  0EDD               	movlw	-35
 11307  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11308  011C14  2ADE               	incf	postinc2,f,c
 11309  011C16  0E00               	movlw	0
 11310  011C18  22DD               	addwfc	postdec2,f,c
 11311                           
 11312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 11313                           ;stkvar	_ap @ sp[(-32)+-6]
 11314  011C1A  0EDA               	movlw	-38
 11315  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11316  011C22  0EDB               	movlw	-37
 11317  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
 11318  011C2A  0E02               	movlw	2
 11319  011C2C  5EDE               	subwf	postinc2,f,c
 11320  011C2E  0E00               	movlw	0
 11321  011C30  5ADD               	subwfb	postdec2,f,c
 11322  011C32  006F FF78  F00B    	movff	postinc2,btemp+10
 11323  011C38  006F FF74  F00C    	movff	postdec2,btemp+11
 11324  011C3E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11325  011C44  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11326  011C4A  006F FF78  F00B    	movff	postinc2,btemp+10
 11327  011C50  006F FF74  F00C    	movff	postdec2,btemp+11
 11328                           
 11329                           ;stkvar	_cp @ sp[(-32)+29]
 11330  011C56  0EFE               	movlw	-2
 11331  011C58  0060  F033  FFE3   	movff	btemp+11,plusw1
 11332  011C5E  0EFD               	movlw	-3
 11333  011C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11334                           
 11335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 11336                           ;stkvar	_cp @ sp[(-32)+29]
 11337  011C66  0EFD               	movlw	-3
 11338  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 11339  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11340                           
 11341                           ;stkvar	_fp @ sp[(-34)+-2]
 11342  011C74  0EDC               	movlw	-36
 11343  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 11344  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11345  011C82  EC12  F0B2         	call	_stoa	;wreg free
 11346  011C86  D2AF               	goto	l2302
 11347  011C88                     l11922:
 11348                           
 11349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 11350                           ;stkvar	_fmt @ sp[(-32)+-4]
 11351  011C88  0EDC               	movlw	-36
 11352  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11353  011C90  0EDD               	movlw	-35
 11354  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
 11355  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
 11356  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11357  011CA4                     	if	0	;tblptru may be non-zero
 11358  011CA4                     	endif
 11359  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11360  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 11361  011CA6  6EF8               	movwf	tblptru,c
 11362  011CA8                     	endif
 11363  011CA8  0008               	tblrd		*
 11364  011CAA  50F5               	movf	tablat,w,c
 11365  011CAC  0A75               	xorlw	117
 11366  011CAE  A4D8               	btfss	status,2,c
 11367  011CB0  D07C               	goto	l11932
 11368                           
 11369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 11370                           ;stkvar	_fmt @ sp[(-32)+-4]
 11371  011CB2  0EDC               	movlw	-36
 11372  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11373  011CBA  0EDD               	movlw	-35
 11374  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11375  011CC2  2ADE               	incf	postinc2,f,c
 11376  011CC4  0E00               	movlw	0
 11377  011CC6  22DD               	addwfc	postdec2,f,c
 11378                           
 11379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11380                           ;stkvar	_ap @ sp[(-32)+-6]
 11381  011CC8  0EDA               	movlw	-38
 11382  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11383  011CD0  0EDB               	movlw	-37
 11384  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11385  011CD8  0E02               	movlw	2
 11386  011CDA  5EDE               	subwf	postinc2,f,c
 11387  011CDC  0E00               	movlw	0
 11388  011CDE  5ADD               	subwfb	postdec2,f,c
 11389  011CE0  006F FF78  F00B    	movff	postinc2,btemp+10
 11390  011CE6  006F FF74  F00C    	movff	postdec2,btemp+11
 11391  011CEC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11392  011CF2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11393  011CF8  006F FF78  F00B    	movff	postinc2,btemp+10
 11394  011CFE  006F FF74  F00C    	movff	postdec2,btemp+11
 11395  011D04  500B               	movf	(btemp+10)^0,w,c
 11396  011D06  6E11               	movwf	(btemp+16)^0,c
 11397  011D08  500C               	movf	(btemp+11)^0,w,c
 11398  011D0A  6E12               	movwf	(btemp+17)^0,c
 11399  011D0C  6A13               	clrf	(btemp+18)^0,c
 11400  011D0E  6A14               	clrf	(btemp+19)^0,c
 11401  011D10  6A15               	clrf	(btemp+20)^0,c
 11402  011D12  6A16               	clrf	(btemp+21)^0,c
 11403  011D14  6A17               	clrf	(btemp+22)^0,c
 11404  011D16  6A18               	clrf	(btemp+23)^0,c
 11405                           
 11406                           ;stkvar	_llu @ sp[(-32)+6]
 11407  011D18  0EE6               	movlw	-26
 11408  011D1A  0060  F047  FFE3   	movff	btemp+16,plusw1
 11409  011D20  0EE7               	movlw	-25
 11410  011D22  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11411  011D28  0EE8               	movlw	-24
 11412  011D2A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11413  011D30  0EE9               	movlw	-23
 11414  011D32  0060  F053  FFE3   	movff	btemp+19,plusw1
 11415  011D38  0EEA               	movlw	-22
 11416  011D3A  0060  F057  FFE3   	movff	btemp+20,plusw1
 11417  011D40  0EEB               	movlw	-21
 11418  011D42  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11419  011D48  0EEC               	movlw	-20
 11420  011D4A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11421  011D50  0EED               	movlw	-19
 11422  011D52  0060  F063  FFE3   	movff	btemp+23,plusw1
 11423                           
 11424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 11425                           ;stkvar	_llu @ sp[(-32)+6]
 11426  011D58  50E1               	movf	fsr1l,w,c
 11427  011D5A  0FE6               	addlw	-26
 11428  011D5C  6ED9               	movwf	fsr2l,c
 11429  011D5E  50E2               	movf	fsr1h,w,c
 11430  011D60  6EDA               	movwf	fsr2h,c
 11431  011D62  0EFF               	movlw	255
 11432  011D64  22DA               	addwfc	fsr2h,f,c
 11433  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
 11434  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 11435  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
 11436  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
 11437  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 11438  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
 11439  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 11440  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
 11441                           
 11442                           ;stkvar	_fp @ sp[(-40)+-2]
 11443  011D96  0ED6               	movlw	-42
 11444  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11445  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11446  011DA4  ECFC  F0AE         	call	_utoa	;wreg free
 11447  011DA8  D21E               	goto	l2302
 11448  011DAA                     l11932:
 11449                           
 11450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 11451  011DAA  0E02               	movlw	2
 11452  011DAC  6EE6               	movwf	postinc1,c
 11453  011DAE  0E00               	movlw	0
 11454  011DB0  6EE6               	movwf	postinc1,c
 11455  011DB2  0EF2               	movlw	low STR_78
 11456  011DB4  6EE6               	movwf	postinc1,c
 11457  011DB6  0EFF               	movlw	high STR_78
 11458  011DB8  6EE6               	movwf	postinc1,c
 11459                           
 11460                           ;stkvar	_fmt @ sp[(-36)+-4]
 11461  011DBA  0ED8               	movlw	-40
 11462  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11463  011DC2  0ED9               	movlw	-39
 11464  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11465  011DCA  006F FF78  F00B    	movff	postinc2,btemp+10
 11466  011DD0  006F FF74  F00C    	movff	postdec2,btemp+11
 11467  011DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11468  011DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 11469  011DE2  EC0B  F0B7         	call	_strncmp	;wreg free
 11470  011DE6  5001               	movf	btemp^0,w,c
 11471  011DE8  1002               	iorwf	(btemp+1)^0,w,c
 11472  011DEA  A4D8               	btfss	status,2,c
 11473  011DEC  D039               	goto	l11942
 11474                           
 11475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 11476                           ;stkvar	_fmt @ sp[(-32)+-4]
 11477  011DEE  0EDC               	movlw	-36
 11478  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11479  011DF6  0EDD               	movlw	-35
 11480  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11481  011DFE  0E02               	movlw	2
 11482  011E00  26DE               	addwf	postinc2,f,c
 11483  011E02  0E00               	movlw	0
 11484  011E04  22DD               	addwfc	postdec2,f,c
 11485                           
 11486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11487                           ;stkvar	_ap @ sp[(-32)+-6]
 11488  011E06  0EDA               	movlw	-38
 11489  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 11490  011E0E  0EDB               	movlw	-37
 11491  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 11492  011E16  0E04               	movlw	4
 11493  011E18  5EDE               	subwf	postinc2,f,c
 11494  011E1A  0E00               	movlw	0
 11495  011E1C  5ADD               	subwfb	postdec2,f,c
 11496  011E1E  006F FF78  F00B    	movff	postinc2,btemp+10
 11497  011E24  006F FF74  F00C    	movff	postdec2,btemp+11
 11498  011E2A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11499  011E30  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11500  011E36  006F FF78  F009    	movff	postinc2,btemp+8
 11501  011E3C  006F FF78  F00A    	movff	postinc2,btemp+9
 11502  011E42  006F FF78  F00B    	movff	postinc2,btemp+10
 11503  011E48  006F FF78  F00C    	movff	postinc2,btemp+11
 11504  011E4E  5009               	movf	(btemp+8)^0,w,c
 11505  011E50  6E11               	movwf	(btemp+16)^0,c
 11506  011E52  500A               	movf	(btemp+9)^0,w,c
 11507  011E54  6E12               	movwf	(btemp+17)^0,c
 11508  011E56  500B               	movf	(btemp+10)^0,w,c
 11509  011E58  6E13               	movwf	(btemp+18)^0,c
 11510  011E5A  500C               	movf	(btemp+11)^0,w,c
 11511  011E5C  6E14               	movwf	(btemp+19)^0,c
 11512  011E5E  D758               	goto	L5
 11513  011E60                     l11942:
 11514                           
 11515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 11516                           ;stkvar	_fmt @ sp[(-32)+-4]
 11517  011E60  0EDC               	movlw	-36
 11518  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11519  011E68  0EDD               	movlw	-35
 11520  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11521  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
 11522  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
 11523  011E7C                     	if	0	;tblptru may be non-zero
 11524  011E7C                     	endif
 11525  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11526  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 11527  011E7E  6EF8               	movwf	tblptru,c
 11528  011E80                     	endif
 11529  011E80  0008               	tblrd		*
 11530  011E82  50F5               	movf	tablat,w,c
 11531  011E84  0A78               	xorlw	120
 11532  011E86  B4D8               	btfsc	status,2,c
 11533  011E88  D015               	goto	u11580
 11534                           
 11535                           ;stkvar	_fmt @ sp[(-32)+-4]
 11536  011E8A  0EDC               	movlw	-36
 11537  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11538  011E92  0EDD               	movlw	-35
 11539  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
 11540  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11541  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11542  011EA6                     	if	0	;tblptru may be non-zero
 11543  011EA6                     	endif
 11544  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11545  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 11546  011EA8  6EF8               	movwf	tblptru,c
 11547  011EAA                     	endif
 11548  011EAA  0008               	tblrd		*
 11549  011EAC  50F5               	movf	tablat,w,c
 11550  011EAE  0A58               	xorlw	88
 11551  011EB0  A4D8               	btfss	status,2,c
 11552  011EB2  D094               	goto	l11956
 11553  011EB4                     u11580:
 11554                           
 11555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 11556                           ;stkvar	_fmt @ sp[(-32)+-4]
 11557  011EB4  0EDC               	movlw	-36
 11558  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11559  011EBC  0EDD               	movlw	-35
 11560  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11561  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 11562  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
 11563  011ED0                     	if	0	;tblptru may be non-zero
 11564  011ED0                     	endif
 11565  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11566  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
 11567  011ED2  6EF8               	movwf	tblptru,c
 11568  011ED4                     	endif
 11569                           
 11570                           ;stkvar	_c @ sp[(-32)+31]
 11571  011ED4  0008               	tblrd		*
 11572  011ED6  0EFF               	movlw	-1
 11573  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
 11574                           
 11575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 11576                           ;stkvar	_fmt @ sp[(-32)+-4]
 11577  011EDE  0EDC               	movlw	-36
 11578  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11579  011EE6  0EDD               	movlw	-35
 11580  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11581  011EEE  2ADE               	incf	postinc2,f,c
 11582  011EF0  0E00               	movlw	0
 11583  011EF2  22DD               	addwfc	postdec2,f,c
 11584                           
 11585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11586                           ;stkvar	_ap @ sp[(-32)+-6]
 11587  011EF4  0EDA               	movlw	-38
 11588  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11589  011EFC  0EDB               	movlw	-37
 11590  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11591  011F04  0E02               	movlw	2
 11592  011F06  5EDE               	subwf	postinc2,f,c
 11593  011F08  0E00               	movlw	0
 11594  011F0A  5ADD               	subwfb	postdec2,f,c
 11595  011F0C  006F FF78  F00B    	movff	postinc2,btemp+10
 11596  011F12  006F FF74  F00C    	movff	postdec2,btemp+11
 11597  011F18  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11598  011F1E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11599  011F24  006F FF78  F00B    	movff	postinc2,btemp+10
 11600  011F2A  006F FF74  F00C    	movff	postdec2,btemp+11
 11601  011F30  500B               	movf	(btemp+10)^0,w,c
 11602  011F32  6E11               	movwf	(btemp+16)^0,c
 11603  011F34  500C               	movf	(btemp+11)^0,w,c
 11604  011F36  6E12               	movwf	(btemp+17)^0,c
 11605  011F38  6A13               	clrf	(btemp+18)^0,c
 11606  011F3A  6A14               	clrf	(btemp+19)^0,c
 11607  011F3C  6A15               	clrf	(btemp+20)^0,c
 11608  011F3E  6A16               	clrf	(btemp+21)^0,c
 11609  011F40  6A17               	clrf	(btemp+22)^0,c
 11610  011F42  6A18               	clrf	(btemp+23)^0,c
 11611                           
 11612                           ;stkvar	_llu @ sp[(-32)+6]
 11613  011F44  0EE6               	movlw	-26
 11614  011F46  0060  F047  FFE3   	movff	btemp+16,plusw1
 11615  011F4C  0EE7               	movlw	-25
 11616  011F4E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11617  011F54  0EE8               	movlw	-24
 11618  011F56  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11619  011F5C  0EE9               	movlw	-23
 11620  011F5E  0060  F053  FFE3   	movff	btemp+19,plusw1
 11621  011F64  0EEA               	movlw	-22
 11622  011F66  0060  F057  FFE3   	movff	btemp+20,plusw1
 11623  011F6C  0EEB               	movlw	-21
 11624  011F6E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11625  011F74  0EEC               	movlw	-20
 11626  011F76  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11627  011F7C  0EED               	movlw	-19
 11628  011F7E  0060  F063  FFE3   	movff	btemp+23,plusw1
 11629                           
 11630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 11631                           ;stkvar	_c @ sp[(-32)+31]
 11632  011F84  0EFF               	movlw	-1
 11633  011F86  50E3               	movf	plusw1,w,c
 11634  011F88  6EE6               	movwf	postinc1,c
 11635                           
 11636                           ;stkvar	_llu @ sp[(-33)+6]
 11637  011F8A  50E1               	movf	fsr1l,w,c
 11638  011F8C  0FE5               	addlw	-27
 11639  011F8E  6ED9               	movwf	fsr2l,c
 11640  011F90  50E2               	movf	fsr1h,w,c
 11641  011F92  6EDA               	movwf	fsr2h,c
 11642  011F94  0EFF               	movlw	255
 11643  011F96  22DA               	addwfc	fsr2h,f,c
 11644  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
 11645  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 11646  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 11647  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 11648  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 11649  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 11650  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 11651  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 11652                           
 11653                           ;stkvar	_fp @ sp[(-41)+-2]
 11654  011FC8  0ED5               	movlw	-43
 11655  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 11656  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
 11657  011FD6  EC98  F0A9         	call	_xtoa	;wreg free
 11658  011FDA  D105               	goto	l2302
 11659  011FDC                     l11956:
 11660                           
 11661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 11662  011FDC  0E02               	movlw	2
 11663  011FDE  6EE6               	movwf	postinc1,c
 11664  011FE0  0E00               	movlw	0
 11665  011FE2  6EE6               	movwf	postinc1,c
 11666  011FE4  0EF5               	movlw	low STR_83
 11667  011FE6  6EE6               	movwf	postinc1,c
 11668  011FE8  0EFF               	movlw	high STR_83
 11669  011FEA  6EE6               	movwf	postinc1,c
 11670                           
 11671                           ;stkvar	_fmt @ sp[(-36)+-4]
 11672  011FEC  0ED8               	movlw	-40
 11673  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11674  011FF4  0ED9               	movlw	-39
 11675  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11676  011FFC  006F FF78  F00B    	movff	postinc2,btemp+10
 11677  012002  006F FF74  F00C    	movff	postdec2,btemp+11
 11678  012008  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11679  01200E  0060  F033  FFE6   	movff	btemp+11,postinc1
 11680  012014  EC0B  F0B7         	call	_strncmp	;wreg free
 11681  012018  5001               	movf	btemp^0,w,c
 11682  01201A  1002               	iorwf	(btemp+1)^0,w,c
 11683  01201C  B4D8               	btfsc	status,2,c
 11684  01201E  D022               	goto	u11600
 11685  012020  0E02               	movlw	2
 11686  012022  6EE6               	movwf	postinc1,c
 11687  012024  0E00               	movlw	0
 11688  012026  6EE6               	movwf	postinc1,c
 11689  012028  0EE6               	movlw	low STR_87
 11690  01202A  6EE6               	movwf	postinc1,c
 11691  01202C  0EFF               	movlw	high STR_87
 11692  01202E  6EE6               	movwf	postinc1,c
 11693                           
 11694                           ;stkvar	_fmt @ sp[(-36)+-4]
 11695  012030  0ED8               	movlw	-40
 11696  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
 11697  012038  0ED9               	movlw	-39
 11698  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11699  012040  006F FF78  F00B    	movff	postinc2,btemp+10
 11700  012046  006F FF74  F00C    	movff	postdec2,btemp+11
 11701  01204C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11702  012052  0060  F033  FFE6   	movff	btemp+11,postinc1
 11703  012058  EC0B  F0B7         	call	_strncmp	;wreg free
 11704  01205C  5001               	movf	btemp^0,w,c
 11705  01205E  1002               	iorwf	(btemp+1)^0,w,c
 11706  012060  A4D8               	btfss	status,2,c
 11707  012062  D058               	goto	l11970
 11708  012064                     u11600:
 11709                           
 11710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 11711                           ;stkvar	_fmt @ sp[(-32)+-4]
 11712  012064  0EDC               	movlw	-36
 11713  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
 11714  01206C  0EDD               	movlw	-35
 11715  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11716  012074  006F FF78  F00B    	movff	postinc2,btemp+10
 11717  01207A  006F FF74  F00C    	movff	postdec2,btemp+11
 11718  012080  0E01               	movlw	1
 11719  012082  260B               	addwf	(btemp+10)^0,f,c
 11720  012084  0E00               	movlw	0
 11721  012086  220C               	addwfc	(btemp+11)^0,f,c
 11722  012088  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11723  01208E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11724  012094                     	if	0	;tblptru may be non-zero
 11725  012094                     	endif
 11726  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11727  012094  0E00               	movlw	low (__mediumconst shr (0+16))
 11728  012096  6EF8               	movwf	tblptru,c
 11729  012098                     	endif
 11730                           
 11731                           ;stkvar	_c @ sp[(-32)+31]
 11732  012098  0008               	tblrd		*
 11733  01209A  0EFF               	movlw	-1
 11734  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
 11735                           
 11736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 11737                           ;stkvar	_fmt @ sp[(-32)+-4]
 11738  0120A2  0EDC               	movlw	-36
 11739  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11740  0120AA  0EDD               	movlw	-35
 11741  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11742  0120B2  0E02               	movlw	2
 11743  0120B4  26DE               	addwf	postinc2,f,c
 11744  0120B6  0E00               	movlw	0
 11745  0120B8  22DD               	addwfc	postdec2,f,c
 11746                           
 11747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11748                           ;stkvar	_ap @ sp[(-32)+-6]
 11749  0120BA  0EDA               	movlw	-38
 11750  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11751  0120C2  0EDB               	movlw	-37
 11752  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11753  0120CA  0E04               	movlw	4
 11754  0120CC  5EDE               	subwf	postinc2,f,c
 11755  0120CE  0E00               	movlw	0
 11756  0120D0  5ADD               	subwfb	postdec2,f,c
 11757  0120D2  006F FF78  F00B    	movff	postinc2,btemp+10
 11758  0120D8  006F FF74  F00C    	movff	postdec2,btemp+11
 11759  0120DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11760  0120E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11761  0120EA  006F FF78  F009    	movff	postinc2,btemp+8
 11762  0120F0  006F FF78  F00A    	movff	postinc2,btemp+9
 11763  0120F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11764  0120FC  006F FF78  F00C    	movff	postinc2,btemp+11
 11765  012102  5009               	movf	(btemp+8)^0,w,c
 11766  012104  6E11               	movwf	(btemp+16)^0,c
 11767  012106  500A               	movf	(btemp+9)^0,w,c
 11768  012108  6E12               	movwf	(btemp+17)^0,c
 11769  01210A  500B               	movf	(btemp+10)^0,w,c
 11770  01210C  6E13               	movwf	(btemp+18)^0,c
 11771  01210E  500C               	movf	(btemp+11)^0,w,c
 11772  012110  6E14               	movwf	(btemp+19)^0,c
 11773  012112  D714               	goto	L6
 11774  012114                     l11970:
 11775                           
 11776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 11777                           ;stkvar	_fmt @ sp[(-32)+-4]
 11778  012114  0EDC               	movlw	-36
 11779  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
 11780  01211C  0EDD               	movlw	-35
 11781  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11782  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
 11783  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11784  012130                     	if	0	;tblptru may be non-zero
 11785  012130                     	endif
 11786  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11787  012130  0E00               	movlw	low (__mediumconst shr (0+16))
 11788  012132  6EF8               	movwf	tblptru,c
 11789  012134                     	endif
 11790  012134  0008               	tblrd		*
 11791  012136  50F5               	movf	tablat,w,c
 11792  012138  0A25               	xorlw	37
 11793  01213A  A4D8               	btfss	status,2,c
 11794  01213C  D01A               	goto	l11980
 11795                           
 11796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 11797                           ;stkvar	_fmt @ sp[(-32)+-4]
 11798  01213E  0EDC               	movlw	-36
 11799  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
 11800  012146  0EDD               	movlw	-35
 11801  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
 11802  01214E  2ADE               	incf	postinc2,f,c
 11803  012150  0E00               	movlw	0
 11804  012152  22DD               	addwfc	postdec2,f,c
 11805                           
 11806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 11807                           ;stkvar	_fp @ sp[(-32)+-2]
 11808  012154  0EDE               	movlw	-34
 11809  012156  006F FF8F FFE6     	movff	plusw1,postinc1
 11810  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
 11811  012162  0E25               	movlw	37
 11812  012164  6EE6               	movwf	postinc1,c
 11813  012166  0E00               	movlw	0
 11814  012168  6EE6               	movwf	postinc1,c
 11815  01216A  EC8B  F0C4         	call	_fputc	;wreg free
 11816  01216E                     l11976:
 11817                           
 11818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 11819  01216E  0E01               	movlw	1
 11820  012170  D00C               	goto	L7
 11821  012172                     l11980:
 11822                           
 11823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 11824                           ;stkvar	_fmt @ sp[(-32)+-4]
 11825  012172  0EDC               	movlw	-36
 11826  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
 11827  01217A  0EDD               	movlw	-35
 11828  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11829  012182  2ADE               	incf	postinc2,f,c
 11830  012184  0E00               	movlw	0
 11831  012186  22DD               	addwfc	postdec2,f,c
 11832                           
 11833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 11834  012188  0E00               	movlw	0
 11835  01218A                     L7:
 11836  01218A  6E01               	movwf	btemp^0,c
 11837  01218C  0E00               	movlw	0
 11838  01218E  6E02               	movwf	(btemp+1)^0,c
 11839  012190  D02A               	goto	l2302
 11840  012192                     l11986:
 11841                           
 11842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 11843                           ;stkvar	_fp @ sp[(-32)+-2]
 11844  012192  0EDE               	movlw	-34
 11845  012194  006F FF8F FFE6     	movff	plusw1,postinc1
 11846  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
 11847                           
 11848                           ;stkvar	_fmt @ sp[(-34)+-4]
 11849  0121A0  0EDA               	movlw	-38
 11850  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11851  0121A8  0EDB               	movlw	-37
 11852  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11853  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 11854  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 11855  0121BC                     	if	0	;tblptru may be non-zero
 11856  0121BC                     	endif
 11857  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11858  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
 11859  0121BE  6EF8               	movwf	tblptru,c
 11860  0121C0                     	endif
 11861  0121C0  0008               	tblrd		*
 11862  0121C2  50F5               	movf	tablat,w,c
 11863  0121C4  6EE6               	movwf	postinc1,c
 11864  0121C6  0E00               	movlw	0
 11865  0121C8  6EE6               	movwf	postinc1,c
 11866  0121CA  EC8B  F0C4         	call	_fputc	;wreg free
 11867                           
 11868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 11869                           ;stkvar	_fmt @ sp[(-32)+-4]
 11870  0121CE  0EDC               	movlw	-36
 11871  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11872  0121D6  0EDD               	movlw	-35
 11873  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11874  0121DE  2ADE               	incf	postinc2,f,c
 11875  0121E0  0E00               	movlw	0
 11876  0121E2  22DD               	addwfc	postdec2,f,c
 11877  0121E4  D7C4               	goto	l11976
 11878  0121E6                     l2302:
 11879                           
 11880                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11881  0121E6  0EDA               	movlw	218
 11882  0121E8  26E1               	addwf	fsr1l,f,c
 11883  0121EA  0EFF               	movlw	255
 11884  0121EC  22E2               	addwfc	fsr1h,f,c
 11885  0121EE  0012               	return		;funcret
 11886  0121F0                     __end_of_vfpfcnvrt:
 11887                           	opt callstack 0
 11888                           
 11889 ;; *************** function _xtoa *****************
 11890 ;; Defined at:
 11891 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11894 ;;		 -> f(6), NULL(0), 
 11895 ;;  d               8  [STACK] unsigned long long 
 11896 ;;  x               1  [STACK] unsigned char 
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;  n               8  [STACK] unsigned long long 
 11899 ;;  c               2  [STACK] int 
 11900 ;;  i               2  [STACK] int 
 11901 ;;  w               2  [STACK] int 
 11902 ;;  p               2  [STACK] int 
 11903 ;; Return value:  Size  Location     Type
 11904 ;;                  2  [STACK] int 
 11905 ;; Registers used:
 11906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11907 ;; Tracked objects:
 11908 ;;		On entry : 0/0
 11909 ;;		On exit  : 0/0
 11910 ;;		Unchanged: 0/0
 11911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11916 ;;Total ram usage:        0 bytes
 11917 ;; Hardware stack levels used:    1
 11918 ;; Hardware stack levels required when called:   20
 11919 ;; This function calls:
 11920 ;;		_isalpha
 11921 ;;		_isupper
 11922 ;;		_pad
 11923 ;;		_toupper
 11924 ;; This function is called by:
 11925 ;;		_vfpfcnvrt
 11926 ;; This function uses a reentrant model
 11927 ;;
 11928                           
 11929                           	psect	text46
 11930  015330                     __ptext46:
 11931                           	opt callstack 0
 11932  015330                     _xtoa:
 11933                           	opt callstack 0
 11934                           
 11935                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11936  015330  0E14               	movlw	20
 11937  015332  26E1               	addwf	fsr1l,f,c
 11938  015334  0E00               	movlw	0
 11939  015336  22E2               	addwfc	fsr1h,f,c
 11940                           
 11941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 11942                           
 11943                           ;incstack = 0
 11944 ;; hardware stack exceeded
 11945  015338  AE24               	btfss	(_prec+1)^0,7,c
 11946                           
 11947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 11948  01533A  9225               	bcf	_flags^0,1,c
 11949                           
 11950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 11951  01533C  BE24               	btfsc	(_prec+1)^0,7,c
 11952  01533E  D005               	goto	u11130
 11953  015340  5024               	movf	(_prec+1)^0,w,c
 11954  015342  E110               	bnz	l11710
 11955  015344  0423               	decf	_prec^0,w,c
 11956  015346  B0D8               	btfsc	status,0,c
 11957  015348  D00D               	goto	l11710
 11958  01534A                     u11130:
 11959  01534A  0E01               	movlw	1
 11960  01534C  6E0B               	movwf	(btemp+10)^0,c
 11961  01534E  0E00               	movlw	0
 11962  015350  6E0C               	movwf	(btemp+11)^0,c
 11963                           
 11964                           ;stkvar	_p @ sp[(-20)+18]
 11965  015352  0EFE               	movlw	-2
 11966  015354  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11967  01535A  0EFF               	movlw	-1
 11968  01535C  0060  F033  FFE3   	movff	btemp+11,plusw1
 11969  015362  D008               	goto	l2252
 11970  015364                     l11710:
 11971                           
 11972                           ;stkvar	_p @ sp[(-20)+18]
 11973  015364  0EFE               	movlw	-2
 11974  015366  0060  F08F  FFE3   	movff	_prec,plusw1
 11975  01536C  0EFF               	movlw	-1
 11976  01536E  0060  F093  FFE3   	movff	_prec+1,plusw1
 11977  015374                     l2252:
 11978                           
 11979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 11980                           ;stkvar	_w @ sp[(-20)+16]
 11981  015374  0EFC               	movlw	-4
 11982  015376  0060  F087  FFE3   	movff	_width,plusw1
 11983  01537C  0EFD               	movlw	-3
 11984  01537E  0060  F08B  FFE3   	movff	_width+1,plusw1
 11985                           
 11986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 11987  015384  A825               	btfss	_flags^0,4,c
 11988  015386  D00B               	goto	l11716
 11989                           
 11990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 11991                           ;stkvar	_w @ sp[(-20)+16]
 11992  015388  50E1               	movf	fsr1l,w,c
 11993  01538A  0FFC               	addlw	-4
 11994  01538C  6ED9               	movwf	fsr2l,c
 11995  01538E  50E2               	movf	fsr1h,w,c
 11996  015390  6EDA               	movwf	fsr2h,c
 11997  015392  0EFF               	movlw	255
 11998  015394  22DA               	addwfc	fsr2h,f,c
 11999  015396  0EFE               	movlw	254
 12000  015398  26DE               	addwf	postinc2,f,c
 12001  01539A  0EFF               	movlw	255
 12002  01539C  22DD               	addwfc	postdec2,f,c
 12003  01539E                     l11716:
 12004                           
 12005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12006                           ;stkvar	_d @ sp[(-20)+-10]
 12007  01539E  0EE2               	movlw	226
 12008  0153A0  24E1               	addwf	fsr1l,w,c
 12009  0153A2  6ED9               	movwf	fsr2l,c
 12010  0153A4  0EFF               	movlw	255
 12011  0153A6  20E2               	addwfc	fsr1h,w,c
 12012  0153A8  6EDA               	movwf	fsr2h,c
 12013                           
 12014                           ;stkvar	_n @ sp[(-20)+4]
 12015  0153AA  0E08               	movlw	8
 12016  0153AC  6E01               	movwf	btemp^0,c
 12017  0153AE  0EF0               	movlw	-16
 12018  0153B0                     us1115999:
 12019  0153B0  006F FF7B FFE3     	movff	postinc2,plusw1
 12020  0153B6  28E8               	incf	wreg,w,c
 12021  0153B8  2E01               	decfsz	btemp^0,f,c
 12022  0153BA  D7FA               	bra	us1115999
 12023                           
 12024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12025  0153BC  0E4F               	movlw	79
 12026  0153BE  6E0B               	movwf	(btemp+10)^0,c
 12027  0153C0  0E00               	movlw	0
 12028  0153C2  6E0C               	movwf	(btemp+11)^0,c
 12029                           
 12030                           ;stkvar	_i @ sp[(-20)+14]
 12031  0153C4  0EFA               	movlw	-6
 12032  0153C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12033  0153CC  0EFB               	movlw	-5
 12034  0153CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 12035                           
 12036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12037  0153D4  0103               	movlb	3	; () banked
 12038  0153D6  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12039                           
 12040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12041  0153D8  D0EE               	goto	l11754
 12042  0153DA                     l11722:
 12043                           
 12044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12045                           ;stkvar	_i @ sp[(-20)+14]
 12046  0153DA  50E1               	movf	fsr1l,w,c
 12047  0153DC  0FFA               	addlw	-6
 12048  0153DE  6ED9               	movwf	fsr2l,c
 12049  0153E0  50E2               	movf	fsr1h,w,c
 12050  0153E2  6EDA               	movwf	fsr2h,c
 12051  0153E4  0EFF               	movlw	255
 12052  0153E6  22DA               	addwfc	fsr2h,f,c
 12053  0153E8  06DE               	decf	postinc2,f,c
 12054  0153EA  0E00               	movlw	0
 12055  0153EC  5ADD               	subwfb	postdec2,f,c
 12056                           
 12057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12058                           ;stkvar	_n @ sp[(-20)+4]
 12059  0153EE  0EF0               	movlw	-16
 12060  0153F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 12061  0153F6  0EF1               	movlw	-15
 12062  0153F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 12063  0153FE  0E0F               	movlw	15
 12064  015400  160B               	andwf	(btemp+10)^0,f,c
 12065  015402  0E00               	movlw	0
 12066  015404  160C               	andwf	(btemp+11)^0,f,c
 12067                           
 12068                           ;stkvar	_c @ sp[(-20)+12]
 12069  015406  0EF8               	movlw	-8
 12070  015408  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12071  01540E  0EF9               	movlw	-7
 12072  015410  0060  F033  FFE3   	movff	btemp+11,plusw1
 12073                           
 12074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12075                           ;stkvar	_c @ sp[(-20)+12]
 12076  015416  0EF9               	movlw	-7
 12077  015418  BEE3               	btfsc	plusw1,7,c
 12078  01541A  D00F               	goto	l11730
 12079  01541C  0EF9               	movlw	-7
 12080  01541E  50E3               	movf	plusw1,w,c
 12081  015420  E108               	bnz	u11160
 12082  015422  0EF8               	movlw	-8
 12083  015424  006F FF8C  F001    	movff	plusw1,btemp
 12084  01542A  0E0A               	movlw	10
 12085  01542C  5E01               	subwf	btemp^0,f,c
 12086  01542E  A0D8               	btfss	status,0,c
 12087  015430  D004               	goto	l11730
 12088  015432                     u11160:
 12089                           
 12090                           ;stkvar	_c @ sp[(-20)+12]
 12091  015432  0EF8               	movlw	-8
 12092  015434  50E3               	movf	plusw1,w,c
 12093  015436  0F57               	addlw	87
 12094  015438  D003               	goto	L8
 12095  01543A                     l11730:
 12096                           
 12097                           ;stkvar	_c @ sp[(-20)+12]
 12098  01543A  0EF8               	movlw	-8
 12099  01543C  50E3               	movf	plusw1,w,c
 12100  01543E  0F30               	addlw	48
 12101  015440                     L8:
 12102  015440  6E0B               	movwf	(btemp+10)^0,c
 12103  015442  0EF9               	movlw	-7
 12104  015444  006F FF8C  F00C    	movff	plusw1,btemp+11
 12105  01544A  0E00               	movlw	0
 12106  01544C  220C               	addwfc	(btemp+11)^0,f,c
 12107                           
 12108                           ;stkvar	_c @ sp[(-20)+12]
 12109  01544E  0EF8               	movlw	-8
 12110  015450  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12111  015456  0EF9               	movlw	-7
 12112  015458  0060  F033  FFE3   	movff	btemp+11,plusw1
 12113  01545E  0EBF               	movlw	191
 12114  015460  6E0B               	movwf	(btemp+10)^0,c
 12115  015462  0EFF               	movlw	255
 12116  015464  6E0C               	movwf	(btemp+11)^0,c
 12117                           
 12118                           ;stkvar	_x @ sp[(-20)+-11]
 12119  015466  0EE1               	movlw	-31
 12120  015468  50E3               	movf	plusw1,w,c
 12121  01546A  6E09               	movwf	(btemp+8)^0,c
 12122  01546C  6A0A               	clrf	(btemp+9)^0,c
 12123  01546E  500B               	movf	(btemp+10)^0,w,c
 12124  015470  2609               	addwf	(btemp+8)^0,f,c
 12125  015472  500C               	movf	(btemp+11)^0,w,c
 12126  015474  220A               	addwfc	(btemp+9)^0,f,c
 12127  015476  500A               	movf	(btemp+9)^0,w,c
 12128  015478  E106               	bnz	u11170
 12129  01547A  0E1A               	movlw	26
 12130  01547C  5C09               	subwf	(btemp+8)^0,w,c
 12131  01547E  B0D8               	btfsc	status,0,c
 12132  015480  D002               	goto	u11170
 12133  015482  0E01               	movlw	1
 12134  015484  D001               	goto	u11180
 12135  015486                     u11170:
 12136  015486  0E00               	movlw	0
 12137  015488                     u11180:
 12138  015488  6E0B               	movwf	(btemp+10)^0,c
 12139  01548A  6A0C               	clrf	(btemp+11)^0,c
 12140                           
 12141                           ;stkvar	_xtoa$5337 @ sp[(-20)+2]
 12142  01548C  0EEE               	movlw	-18
 12143  01548E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12144  015494  0EEF               	movlw	-17
 12145  015496  0060  F033  FFE3   	movff	btemp+11,plusw1
 12146                           
 12147                           ;stkvar	_xtoa$5337 @ sp[(-20)+2]
 12148  01549C  0EEE               	movlw	-18
 12149  01549E  006F FF8C  F001    	movff	plusw1,btemp
 12150  0154A4  0EEF               	movlw	-17
 12151  0154A6  50E3               	movf	plusw1,w,c
 12152  0154A8  1001               	iorwf	btemp^0,w,c
 12153  0154AA  B4D8               	btfsc	status,2,c
 12154  0154AC  D041               	goto	l11746
 12155  0154AE  0E9F               	movlw	159
 12156  0154B0  6E0B               	movwf	(btemp+10)^0,c
 12157  0154B2  0EFF               	movlw	255
 12158  0154B4  6E0C               	movwf	(btemp+11)^0,c
 12159                           
 12160                           ;stkvar	_c @ sp[(-20)+12]
 12161  0154B6  0EF8               	movlw	-8
 12162  0154B8  006F FF8C  F009    	movff	plusw1,btemp+8
 12163  0154BE  0EF9               	movlw	-7
 12164  0154C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 12165  0154C6  0E20               	movlw	32
 12166  0154C8  1209               	iorwf	(btemp+8)^0,f,c
 12167  0154CA  0E00               	movlw	0
 12168  0154CC  120A               	iorwf	(btemp+9)^0,f,c
 12169  0154CE  500B               	movf	(btemp+10)^0,w,c
 12170  0154D0  2609               	addwf	(btemp+8)^0,f,c
 12171  0154D2  500C               	movf	(btemp+11)^0,w,c
 12172  0154D4  220A               	addwfc	(btemp+9)^0,f,c
 12173  0154D6  500A               	movf	(btemp+9)^0,w,c
 12174  0154D8  E106               	bnz	u11200
 12175  0154DA  0E1A               	movlw	26
 12176  0154DC  5C09               	subwf	(btemp+8)^0,w,c
 12177  0154DE  B0D8               	btfsc	status,0,c
 12178  0154E0  D002               	goto	u11200
 12179  0154E2  0E01               	movlw	1
 12180  0154E4  D001               	goto	u11210
 12181  0154E6                     u11200:
 12182  0154E6  0E00               	movlw	0
 12183  0154E8                     u11210:
 12184  0154E8  6E0B               	movwf	(btemp+10)^0,c
 12185  0154EA  6A0C               	clrf	(btemp+11)^0,c
 12186                           
 12187                           ;stkvar	_xtoa$5338 @ sp[(-20)+0]
 12188  0154EC  0EEC               	movlw	-20
 12189  0154EE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12190  0154F4  0EED               	movlw	-19
 12191  0154F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12192                           
 12193                           ;stkvar	_xtoa$5338 @ sp[(-20)+0]
 12194  0154FC  0EEC               	movlw	-20
 12195  0154FE  006F FF8C  F001    	movff	plusw1,btemp
 12196  015504  0EED               	movlw	-19
 12197  015506  50E3               	movf	plusw1,w,c
 12198  015508  1001               	iorwf	btemp^0,w,c
 12199  01550A  B4D8               	btfsc	status,2,c
 12200  01550C  D011               	goto	l11746
 12201                           
 12202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 12203                           ;stkvar	_c @ sp[(-20)+12]
 12204  01550E  0EF8               	movlw	-8
 12205  015510  006F FF8F FFE6     	movff	plusw1,postinc1
 12206  015516  006F FF8F FFE6     	movff	plusw1,postinc1
 12207  01551C  EC89  F0CE         	call	_toupper	;wreg free
 12208                           
 12209                           ;stkvar	_c @ sp[(-20)+12]
 12210  015520  0EF8               	movlw	-8
 12211  015522  0060  F007  FFE3   	movff	btemp,plusw1
 12212  015528  0EF9               	movlw	-7
 12213  01552A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12214  015530                     l11746:
 12215                           
 12216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 12217                           ;stkvar	_c @ sp[(-20)+12]
 12218                           ;stkvar	_i @ sp[(-20)+14]
 12219  015530  0EFA               	movlw	-6
 12220  015532  006F FF8C  F00B    	movff	plusw1,btemp+10
 12221  015538  0EFB               	movlw	-5
 12222  01553A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12223  015540  0E94               	movlw	low _dbuf
 12224  015542  240B               	addwf	(btemp+10)^0,w,c
 12225  015544  6ED9               	movwf	fsr2l,c
 12226  015546  0E03               	movlw	high _dbuf
 12227  015548  200C               	addwfc	(btemp+11)^0,w,c
 12228  01554A  6EDA               	movwf	fsr2h,c
 12229  01554C  0EF8               	movlw	-8
 12230  01554E  006F FF8F FFDF     	movff	plusw1,indf2
 12231                           
 12232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 12233                           ;stkvar	_p @ sp[(-20)+18]
 12234  015554  50E1               	movf	fsr1l,w,c
 12235  015556  0FFE               	addlw	-2
 12236  015558  6ED9               	movwf	fsr2l,c
 12237  01555A  50E2               	movf	fsr1h,w,c
 12238  01555C  6EDA               	movwf	fsr2h,c
 12239  01555E  0EFF               	movlw	255
 12240  015560  22DA               	addwfc	fsr2h,f,c
 12241  015562  06DE               	decf	postinc2,f,c
 12242  015564  0E00               	movlw	0
 12243  015566  5ADD               	subwfb	postdec2,f,c
 12244                           
 12245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 12246                           ;stkvar	_w @ sp[(-20)+16]
 12247  015568  50E1               	movf	fsr1l,w,c
 12248  01556A  0FFC               	addlw	-4
 12249  01556C  6ED9               	movwf	fsr2l,c
 12250  01556E  50E2               	movf	fsr1h,w,c
 12251  015570  6EDA               	movwf	fsr2h,c
 12252  015572  0EFF               	movlw	255
 12253  015574  22DA               	addwfc	fsr2h,f,c
 12254  015576  06DE               	decf	postinc2,f,c
 12255  015578  0E00               	movlw	0
 12256  01557A  5ADD               	subwfb	postdec2,f,c
 12257                           
 12258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 12259  01557C  0E04               	movlw	4
 12260  01557E  6E0C               	movwf	(btemp+11)^0,c
 12261                           
 12262                           ;stkvar	_n @ sp[(-20)+4]
 12263  015580  50E1               	movf	fsr1l,w,c
 12264  015582  0FF0               	addlw	-16
 12265  015584  6ED9               	movwf	fsr2l,c
 12266  015586  50E2               	movf	fsr1h,w,c
 12267  015588  6EDA               	movwf	fsr2h,c
 12268  01558A  0EFF               	movlw	255
 12269  01558C  22DA               	addwfc	fsr2h,f,c
 12270  01558E  280C               	incf	(btemp+11)^0,w,c
 12271  015590  52DE               	movf	postinc2,f,c
 12272  015592  D00F               	goto	u11230
 12273  015594                     u11235:
 12274  015594  52DE               	movf	postinc2,f,c
 12275  015596  52DE               	movf	postinc2,f,c
 12276  015598  52DE               	movf	postinc2,f,c
 12277  01559A  52DE               	movf	postinc2,f,c
 12278  01559C  52DE               	movf	postinc2,f,c
 12279  01559E  52DE               	movf	postinc2,f,c
 12280  0155A0  90D8               	bcf	status,0,c
 12281  0155A2  32DD               	rrcf	postdec2,f,c
 12282  0155A4  32DD               	rrcf	postdec2,f,c
 12283  0155A6  32DD               	rrcf	postdec2,f,c
 12284  0155A8  32DD               	rrcf	postdec2,f,c
 12285  0155AA  32DD               	rrcf	postdec2,f,c
 12286  0155AC  32DD               	rrcf	postdec2,f,c
 12287  0155AE  32DD               	rrcf	postdec2,f,c
 12288  0155B0  32DE               	rrcf	postinc2,f,c
 12289  0155B2                     u11230:
 12290  0155B2  2EE8               	decfsz	wreg,f,c
 12291  0155B4  D7EF               	goto	u11235
 12292  0155B6                     l11754:
 12293                           
 12294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12295                           ;stkvar	_i @ sp[(-20)+14]
 12296  0155B6  0EFB               	movlw	-5
 12297  0155B8  BEE3               	btfsc	plusw1,7,c
 12298  0155BA  D03A               	goto	u11280
 12299  0155BC  0EFB               	movlw	-5
 12300  0155BE  50E3               	movf	plusw1,w,c
 12301  0155C0  E108               	bnz	u11240
 12302  0155C2  0EFA               	movlw	-6
 12303  0155C4  006F FF8C  F001    	movff	plusw1,btemp
 12304  0155CA  0E02               	movlw	2
 12305  0155CC  5E01               	subwf	btemp^0,f,c
 12306  0155CE  A0D8               	btfss	status,0,c
 12307  0155D0  D02F               	goto	u11280
 12308  0155D2                     u11240:
 12309                           
 12310                           ;stkvar	_n @ sp[(-20)+4]
 12311  0155D2  0EF0               	movlw	-16
 12312  0155D4  50E3               	movf	plusw1,w,c
 12313  0155D6  E115               	bnz	u11251
 12314  0155D8  0EF1               	movlw	-15
 12315  0155DA  50E3               	movf	plusw1,w,c
 12316  0155DC  E112               	bnz	u11251
 12317  0155DE  0EF2               	movlw	-14
 12318  0155E0  50E3               	movf	plusw1,w,c
 12319  0155E2  E10F               	bnz	u11251
 12320  0155E4  0EF3               	movlw	-13
 12321  0155E6  50E3               	movf	plusw1,w,c
 12322  0155E8  E10C               	bnz	u11251
 12323  0155EA  0EF4               	movlw	-12
 12324  0155EC  50E3               	movf	plusw1,w,c
 12325  0155EE  E109               	bnz	u11251
 12326  0155F0  0EF5               	movlw	-11
 12327  0155F2  50E3               	movf	plusw1,w,c
 12328  0155F4  E106               	bnz	u11251
 12329  0155F6  0EF6               	movlw	-10
 12330  0155F8  50E3               	movf	plusw1,w,c
 12331  0155FA  E103               	bnz	u11251
 12332  0155FC  0EF7               	movlw	-9
 12333  0155FE  50E3               	movf	plusw1,w,c
 12334  015600  A4D8               	btfss	status,2,c
 12335  015602                     u11251:
 12336  015602  D6EB               	goto	l11722
 12337                           
 12338                           ;stkvar	_p @ sp[(-20)+18]
 12339  015604  0EFF               	movlw	-1
 12340  015606  BEE3               	btfsc	plusw1,7,c
 12341  015608  D007               	goto	u11260
 12342  01560A  0EFF               	movlw	-1
 12343  01560C  50E3               	movf	plusw1,w,c
 12344  01560E  E103               	bnz	u11261
 12345  015610  0EFE               	movlw	-2
 12346  015612  04E3               	decf	plusw1,w,c
 12347  015614  B0D8               	btfsc	status,0,c
 12348  015616                     u11261:
 12349  015616  D6E1               	goto	l11722
 12350  015618                     u11260:
 12351                           
 12352                           ;stkvar	_w @ sp[(-20)+16]
 12353  015618  0EFD               	movlw	-3
 12354  01561A  BEE3               	btfsc	plusw1,7,c
 12355  01561C  D009               	goto	u11280
 12356  01561E  0EFD               	movlw	-3
 12357  015620  50E3               	movf	plusw1,w,c
 12358  015622  E104               	bnz	u11270
 12359  015624  0EFC               	movlw	-4
 12360  015626  04E3               	decf	plusw1,w,c
 12361  015628  A0D8               	btfss	status,0,c
 12362  01562A  D002               	goto	u11280
 12363  01562C                     u11270:
 12364  01562C  B225               	btfsc	_flags^0,1,c
 12365  01562E  D6D5               	goto	l11722
 12366  015630                     u11280:
 12367                           
 12368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 12369  015630  A825               	btfss	_flags^0,4,c
 12370  015632  D036               	goto	l11770
 12371                           
 12372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 12373                           ;stkvar	_i @ sp[(-20)+14]
 12374  015634  50E1               	movf	fsr1l,w,c
 12375  015636  0FFA               	addlw	-6
 12376  015638  6ED9               	movwf	fsr2l,c
 12377  01563A  50E2               	movf	fsr1h,w,c
 12378  01563C  6EDA               	movwf	fsr2h,c
 12379  01563E  0EFF               	movlw	255
 12380  015640  22DA               	addwfc	fsr2h,f,c
 12381  015642  06DE               	decf	postinc2,f,c
 12382  015644  0E00               	movlw	0
 12383  015646  5ADD               	subwfb	postdec2,f,c
 12384                           
 12385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 12386                           ;stkvar	_x @ sp[(-20)+-11]
 12387                           ;stkvar	_i @ sp[(-20)+14]
 12388  015648  0EFA               	movlw	-6
 12389  01564A  006F FF8C  F00B    	movff	plusw1,btemp+10
 12390  015650  0EFB               	movlw	-5
 12391  015652  006F FF8C  F00C    	movff	plusw1,btemp+11
 12392  015658  0E94               	movlw	low _dbuf
 12393  01565A  240B               	addwf	(btemp+10)^0,w,c
 12394  01565C  6ED9               	movwf	fsr2l,c
 12395  01565E  0E03               	movlw	high _dbuf
 12396  015660  200C               	addwfc	(btemp+11)^0,w,c
 12397  015662  6EDA               	movwf	fsr2h,c
 12398  015664  0EE1               	movlw	-31
 12399  015666  006F FF8F FFDF     	movff	plusw1,indf2
 12400                           
 12401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 12402                           ;stkvar	_i @ sp[(-20)+14]
 12403  01566C  50E1               	movf	fsr1l,w,c
 12404  01566E  0FFA               	addlw	-6
 12405  015670  6ED9               	movwf	fsr2l,c
 12406  015672  50E2               	movf	fsr1h,w,c
 12407  015674  6EDA               	movwf	fsr2h,c
 12408  015676  0EFF               	movlw	255
 12409  015678  22DA               	addwfc	fsr2h,f,c
 12410  01567A  06DE               	decf	postinc2,f,c
 12411  01567C  0E00               	movlw	0
 12412  01567E  5ADD               	subwfb	postdec2,f,c
 12413                           
 12414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 12415                           ;stkvar	_i @ sp[(-20)+14]
 12416  015680  0EFA               	movlw	-6
 12417  015682  006F FF8C  F00B    	movff	plusw1,btemp+10
 12418  015688  0EFB               	movlw	-5
 12419  01568A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12420  015690  0E94               	movlw	low _dbuf
 12421  015692  240B               	addwf	(btemp+10)^0,w,c
 12422  015694  6ED9               	movwf	fsr2l,c
 12423  015696  0E03               	movlw	high _dbuf
 12424  015698  200C               	addwfc	(btemp+11)^0,w,c
 12425  01569A  6EDA               	movwf	fsr2h,c
 12426  01569C  0E30               	movlw	48
 12427  01569E  6EDF               	movwf	indf2,c
 12428  0156A0                     l11770:
 12429                           
 12430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 12431                           ;stkvar	_w @ sp[(-20)+16]
 12432  0156A0  0EFC               	movlw	-4
 12433  0156A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12434  0156A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12435                           
 12436                           ;stkvar	_i @ sp[(-22)+14]
 12437  0156AE  0E94               	movlw	low _dbuf
 12438  0156B0  6E0B               	movwf	(btemp+10)^0,c
 12439  0156B2  0E03               	movlw	high _dbuf
 12440  0156B4  6E0C               	movwf	(btemp+11)^0,c
 12441  0156B6  0EF8               	movlw	-8
 12442  0156B8  50E3               	movf	plusw1,w,c
 12443  0156BA  260B               	addwf	(btemp+10)^0,f,c
 12444  0156BC  0EF9               	movlw	-7
 12445  0156BE  50E3               	movf	plusw1,w,c
 12446  0156C0  220C               	addwfc	(btemp+11)^0,f,c
 12447  0156C2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12448  0156C8  0060  F033  FFE6   	movff	btemp+11,postinc1
 12449                           
 12450                           ;stkvar	_fp @ sp[(-24)+-2]
 12451  0156CE  0EE6               	movlw	-26
 12452  0156D0  006F FF8F FFE6     	movff	plusw1,postinc1
 12453  0156D6  006F FF8F FFE6     	movff	plusw1,postinc1
 12454  0156DC  ECA9  F0C5         	call	_pad	;wreg free
 12455                           
 12456                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 12457  0156E0  0EE1               	movlw	225
 12458  0156E2  26E1               	addwf	fsr1l,f,c
 12459  0156E4  0EFF               	movlw	255
 12460  0156E6  22E2               	addwfc	fsr1h,f,c
 12461  0156E8  0012               	return		;funcret
 12462  0156EA                     __end_of_xtoa:
 12463                           	opt callstack 0
 12464                           
 12465 ;; *************** function _toupper *****************
 12466 ;; Defined at:
 12467 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;  c               2  [STACK] int 
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;		None
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  2  [STACK] int 
 12474 ;; Registers used:
 12475 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/3
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12485 ;;Total ram usage:        0 bytes
 12486 ;; Hardware stack levels used:    1
 12487 ;; Hardware stack levels required when called:   16
 12488 ;; This function calls:
 12489 ;;		_islower
 12490 ;; This function is called by:
 12491 ;;		_xtoa
 12492 ;; This function uses a reentrant model
 12493 ;;
 12494                           
 12495                           	psect	text47
 12496  019D12                     __ptext47:
 12497                           	opt callstack 0
 12498  019D12                     _toupper:
 12499                           	opt callstack 0
 12500                           
 12501                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12502  019D12  52E6               	movf	postinc1,f,c
 12503  019D14  52E6               	movf	postinc1,f,c
 12504                           
 12505                           ;stkvar	_c @ sp[(-2)+-2]
 12506                           
 12507                           ;incstack = 0
 12508 ;; hardware stack exceeded
 12509  019D16  0EFC               	movlw	-4
 12510  019D18  50E3               	movf	plusw1,w,c
 12511  019D1A  0F9F               	addlw	159
 12512  019D1C  6E0B               	movwf	(btemp+10)^0,c
 12513  019D1E  0EFD               	movlw	-3
 12514  019D20  006F FF8C  F00C    	movff	plusw1,btemp+11
 12515  019D26  0EFF               	movlw	255
 12516  019D28  220C               	addwfc	(btemp+11)^0,f,c
 12517  019D2A  500C               	movf	(btemp+11)^0,w,c
 12518  019D2C  E106               	bnz	u5870
 12519  019D2E  0E1A               	movlw	26
 12520  019D30  5C0B               	subwf	(btemp+10)^0,w,c
 12521  019D32  B0D8               	btfsc	status,0,c
 12522  019D34  D002               	goto	u5870
 12523  019D36  0E01               	movlw	1
 12524  019D38  D001               	goto	u5880
 12525  019D3A                     u5870:
 12526  019D3A  0E00               	movlw	0
 12527  019D3C                     u5880:
 12528  019D3C  6E0B               	movwf	(btemp+10)^0,c
 12529  019D3E  6A0C               	clrf	(btemp+11)^0,c
 12530                           
 12531                           ;stkvar	_toupper$6144 @ sp[(-2)+0]
 12532  019D40  0EFE               	movlw	-2
 12533  019D42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12534  019D48  0EFF               	movlw	-1
 12535  019D4A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12536                           
 12537                           ;stkvar	_toupper$6144 @ sp[(-2)+0]
 12538  019D50  0EFE               	movlw	-2
 12539  019D52  006F FF8C  F001    	movff	plusw1,btemp
 12540  019D58  0EFF               	movlw	-1
 12541  019D5A  50E3               	movf	plusw1,w,c
 12542  019D5C  1001               	iorwf	btemp^0,w,c
 12543  019D5E  B4D8               	btfsc	status,2,c
 12544  019D60  D00D               	goto	l7680
 12545                           
 12546                           ;stkvar	_c @ sp[(-2)+-2]
 12547  019D62  0EFC               	movlw	-4
 12548  019D64  006F FF8C  F001    	movff	plusw1,btemp
 12549  019D6A  0EFD               	movlw	-3
 12550  019D6C  006F FF8C  F002    	movff	plusw1,btemp+1
 12551  019D72  0E5F               	movlw	95
 12552  019D74  1601               	andwf	btemp^0,f,c
 12553  019D76  0E00               	movlw	0
 12554  019D78  1602               	andwf	(btemp+1)^0,f,c
 12555  019D7A  D008               	goto	l3419
 12556  019D7C                     l7680:
 12557                           
 12558                           ;stkvar	_c @ sp[(-2)+-2]
 12559  019D7C  0EFC               	movlw	-4
 12560  019D7E  006F FF8C  F001    	movff	plusw1,btemp
 12561  019D84  0EFD               	movlw	-3
 12562  019D86  006F FF8C  F002    	movff	plusw1,btemp+1
 12563  019D8C                     l3419:
 12564                           
 12565                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12566  019D8C  52E5               	movf	postdec1,f,c
 12567  019D8E  52E5               	movf	postdec1,f,c
 12568  019D90  52E5               	movf	postdec1,f,c
 12569  019D92  52E5               	movf	postdec1,f,c
 12570  019D94  0012               	return		;funcret
 12571  019D96                     __end_of_toupper:
 12572                           	opt callstack 0
 12573                           
 12574 ;; *************** function _islower *****************
 12575 ;; Defined at:
 12576 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;  c               2  [STACK] int 
 12579 ;; Auto vars:     Size  Location     Type
 12580 ;;		None
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  2  [STACK] int 
 12583 ;; Registers used:
 12584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12585 ;; Tracked objects:
 12586 ;;		On entry : 0/0
 12587 ;;		On exit  : 0/0
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12594 ;;Total ram usage:        0 bytes
 12595 ;; Hardware stack levels used:    1
 12596 ;; Hardware stack levels required when called:   15
 12597 ;; This function calls:
 12598 ;;		Nothing
 12599 ;; This function is called by:
 12600 ;;		_toupper
 12601 ;; This function uses a reentrant model
 12602 ;;
 12603                           
 12604                           	psect	text48
 12605  01A9AA                     __ptext48:
 12606                           	opt callstack 0
 12607  01A9AA                     _islower:
 12608                           	opt callstack 0
 12609                           
 12610                           ;stkvar	_c @ sp[(0)+-2]
 12611                           
 12612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12613                           ;incstack = 0
 12614 ;; hardware stack exceeded
 12615  01A9AA  0EFE               	movlw	-2
 12616  01A9AC  50E3               	movf	plusw1,w,c
 12617  01A9AE  0F9F               	addlw	159
 12618  01A9B0  6E0B               	movwf	(btemp+10)^0,c
 12619  01A9B2  0EFF               	movlw	-1
 12620  01A9B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 12621  01A9BA  0EFF               	movlw	255
 12622  01A9BC  220C               	addwfc	(btemp+11)^0,f,c
 12623  01A9BE  500C               	movf	(btemp+11)^0,w,c
 12624  01A9C0  E106               	bnz	u5560
 12625  01A9C2  0E1A               	movlw	26
 12626  01A9C4  5C0B               	subwf	(btemp+10)^0,w,c
 12627  01A9C6  B0D8               	btfsc	status,0,c
 12628  01A9C8  D002               	goto	u5560
 12629  01A9CA  0E01               	movlw	1
 12630  01A9CC  D001               	goto	u5570
 12631  01A9CE                     u5560:
 12632  01A9CE  0E00               	movlw	0
 12633  01A9D0                     u5570:
 12634  01A9D0  6E01               	movwf	btemp^0,c
 12635  01A9D2  6A02               	clrf	(btemp+1)^0,c
 12636                           
 12637                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12638  01A9D4  52E5               	movf	postdec1,f,c
 12639  01A9D6  52E5               	movf	postdec1,f,c
 12640  01A9D8  0012               	return		;funcret
 12641  01A9DA                     __end_of_islower:
 12642                           	opt callstack 0
 12643                           
 12644 ;; *************** function _isalpha *****************
 12645 ;; Defined at:
 12646 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 12647 ;; Parameters:    Size  Location     Type
 12648 ;;  c               2  [STACK] int 
 12649 ;; Auto vars:     Size  Location     Type
 12650 ;;		None
 12651 ;; Return value:  Size  Location     Type
 12652 ;;                  2  [STACK] int 
 12653 ;; Registers used:
 12654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 12655 ;; Tracked objects:
 12656 ;;		On entry : 0/0
 12657 ;;		On exit  : 0/0
 12658 ;;		Unchanged: 0/0
 12659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12664 ;;Total ram usage:        0 bytes
 12665 ;; Hardware stack levels used:    1
 12666 ;; Hardware stack levels required when called:   15
 12667 ;; This function calls:
 12668 ;;		Nothing
 12669 ;; This function is called by:
 12670 ;;		_xtoa
 12671 ;; This function uses a reentrant model
 12672 ;;
 12673                           
 12674                           	psect	text49
 12675  01A606                     __ptext49:
 12676                           	opt callstack 0
 12677  01A606                     _isalpha:
 12678                           	opt callstack 0
 12679                           
 12680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12681                           ;incstack = 0
 12682 ;; hardware stack exceeded
 12683  01A606  0E9F               	movlw	159
 12684  01A608  6E0B               	movwf	(btemp+10)^0,c
 12685  01A60A  0EFF               	movlw	255
 12686  01A60C  6E0C               	movwf	(btemp+11)^0,c
 12687                           
 12688                           ;stkvar	_c @ sp[(0)+-2]
 12689  01A60E  0EFE               	movlw	-2
 12690  01A610  006F FF8C  F009    	movff	plusw1,btemp+8
 12691  01A616  0EFF               	movlw	-1
 12692  01A618  006F FF8C  F00A    	movff	plusw1,btemp+9
 12693  01A61E  0E20               	movlw	32
 12694  01A620  1209               	iorwf	(btemp+8)^0,f,c
 12695  01A622  0E00               	movlw	0
 12696  01A624  120A               	iorwf	(btemp+9)^0,f,c
 12697  01A626  500B               	movf	(btemp+10)^0,w,c
 12698  01A628  2609               	addwf	(btemp+8)^0,f,c
 12699  01A62A  500C               	movf	(btemp+11)^0,w,c
 12700  01A62C  220A               	addwfc	(btemp+9)^0,f,c
 12701  01A62E  500A               	movf	(btemp+9)^0,w,c
 12702  01A630  E106               	bnz	u5850
 12703  01A632  0E1A               	movlw	26
 12704  01A634  5C09               	subwf	(btemp+8)^0,w,c
 12705  01A636  B0D8               	btfsc	status,0,c
 12706  01A638  D002               	goto	u5850
 12707  01A63A  0E01               	movlw	1
 12708  01A63C  D001               	goto	u5860
 12709  01A63E                     u5850:
 12710  01A63E  0E00               	movlw	0
 12711  01A640                     u5860:
 12712  01A640  6E01               	movwf	btemp^0,c
 12713  01A642  6A02               	clrf	(btemp+1)^0,c
 12714                           
 12715                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12716  01A644  52E5               	movf	postdec1,f,c
 12717  01A646  52E5               	movf	postdec1,f,c
 12718  01A648  0012               	return		;funcret
 12719  01A64A                     __end_of_isalpha:
 12720                           	opt callstack 0
 12721                           
 12722 ;; *************** function _utoa *****************
 12723 ;; Defined at:
 12724 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12727 ;;		 -> f(6), NULL(0), 
 12728 ;;  d               8  [STACK] unsigned long long 
 12729 ;; Auto vars:     Size  Location     Type
 12730 ;;  n               8  [STACK] unsigned long long 
 12731 ;;  i               2  [STACK] int 
 12732 ;;  w               2  [STACK] int 
 12733 ;;  p               2  [STACK] int 
 12734 ;; Return value:  Size  Location     Type
 12735 ;;                  2  [STACK] int 
 12736 ;; Registers used:
 12737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 12738 ;; Tracked objects:
 12739 ;;		On entry : 0/0
 12740 ;;		On exit  : 0/0
 12741 ;;		Unchanged: 0/0
 12742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12747 ;;Total ram usage:        0 bytes
 12748 ;; Hardware stack levels used:    1
 12749 ;; Hardware stack levels required when called:   20
 12750 ;; This function calls:
 12751 ;;		___lodiv
 12752 ;;		___lomod
 12753 ;;		_pad
 12754 ;; This function is called by:
 12755 ;;		_vfpfcnvrt
 12756 ;; This function uses a reentrant model
 12757 ;;
 12758                           
 12759                           	psect	text50
 12760  015DF8                     __ptext50:
 12761                           	opt callstack 0
 12762  015DF8                     _utoa:
 12763                           	opt callstack 0
 12764                           
 12765                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12766  015DF8  0E0E               	movlw	14
 12767  015DFA  26E1               	addwf	fsr1l,f,c
 12768  015DFC  0E00               	movlw	0
 12769  015DFE  22E2               	addwfc	fsr1h,f,c
 12770                           
 12771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 12772                           
 12773                           ;incstack = 0
 12774 ;; hardware stack exceeded
 12775  015E00  AE24               	btfss	(_prec+1)^0,7,c
 12776                           
 12777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 12778  015E02  9225               	bcf	_flags^0,1,c
 12779                           
 12780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 12781  015E04  BE24               	btfsc	(_prec+1)^0,7,c
 12782  015E06  D005               	goto	u11050
 12783  015E08  5024               	movf	(_prec+1)^0,w,c
 12784  015E0A  E110               	bnz	l11670
 12785  015E0C  0423               	decf	_prec^0,w,c
 12786  015E0E  B0D8               	btfsc	status,0,c
 12787  015E10  D00D               	goto	l11670
 12788  015E12                     u11050:
 12789  015E12  0E01               	movlw	1
 12790  015E14  6E0B               	movwf	(btemp+10)^0,c
 12791  015E16  0E00               	movlw	0
 12792  015E18  6E0C               	movwf	(btemp+11)^0,c
 12793                           
 12794                           ;stkvar	_p @ sp[(-14)+12]
 12795  015E1A  0EFE               	movlw	-2
 12796  015E1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12797  015E22  0EFF               	movlw	-1
 12798  015E24  0060  F033  FFE3   	movff	btemp+11,plusw1
 12799  015E2A  D008               	goto	l2237
 12800  015E2C                     l11670:
 12801                           
 12802                           ;stkvar	_p @ sp[(-14)+12]
 12803  015E2C  0EFE               	movlw	-2
 12804  015E2E  0060  F08F  FFE3   	movff	_prec,plusw1
 12805  015E34  0EFF               	movlw	-1
 12806  015E36  0060  F093  FFE3   	movff	_prec+1,plusw1
 12807  015E3C                     l2237:
 12808                           
 12809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 12810                           ;stkvar	_w @ sp[(-14)+10]
 12811  015E3C  0EFC               	movlw	-4
 12812  015E3E  0060  F087  FFE3   	movff	_width,plusw1
 12813  015E44  0EFD               	movlw	-3
 12814  015E46  0060  F08B  FFE3   	movff	_width+1,plusw1
 12815                           
 12816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 12817                           ;stkvar	_d @ sp[(-14)+-10]
 12818  015E4C  0EE8               	movlw	232
 12819  015E4E  24E1               	addwf	fsr1l,w,c
 12820  015E50  6ED9               	movwf	fsr2l,c
 12821  015E52  0EFF               	movlw	255
 12822  015E54  20E2               	addwfc	fsr1h,w,c
 12823  015E56  6EDA               	movwf	fsr2h,c
 12824                           
 12825                           ;stkvar	_n @ sp[(-14)+0]
 12826  015E58  0E08               	movlw	8
 12827  015E5A  6E01               	movwf	btemp^0,c
 12828  015E5C  0EF2               	movlw	-14
 12829  015E5E                     us1106999:
 12830  015E5E  006F FF7B FFE3     	movff	postinc2,plusw1
 12831  015E64  28E8               	incf	wreg,w,c
 12832  015E66  2E01               	decfsz	btemp^0,f,c
 12833  015E68  D7FA               	bra	us1106999
 12834                           
 12835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 12836  015E6A  0E4F               	movlw	79
 12837  015E6C  6E0B               	movwf	(btemp+10)^0,c
 12838  015E6E  0E00               	movlw	0
 12839  015E70  6E0C               	movwf	(btemp+11)^0,c
 12840                           
 12841                           ;stkvar	_i @ sp[(-14)+8]
 12842  015E72  0EFA               	movlw	-6
 12843  015E74  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12844  015E7A  0EFB               	movlw	-5
 12845  015E7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12846                           
 12847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 12848  015E82  0103               	movlb	3	; () banked
 12849  015E84  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12850                           
 12851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12852  015E86  D0FB               	goto	l11688
 12853  015E88                     l11678:
 12854                           
 12855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 12856                           ;stkvar	_i @ sp[(-14)+8]
 12857  015E88  50E1               	movf	fsr1l,w,c
 12858  015E8A  0FFA               	addlw	-6
 12859  015E8C  6ED9               	movwf	fsr2l,c
 12860  015E8E  50E2               	movf	fsr1h,w,c
 12861  015E90  6EDA               	movwf	fsr2h,c
 12862  015E92  0EFF               	movlw	255
 12863  015E94  22DA               	addwfc	fsr2h,f,c
 12864  015E96  06DE               	decf	postinc2,f,c
 12865  015E98  0E00               	movlw	0
 12866  015E9A  5ADD               	subwfb	postdec2,f,c
 12867                           
 12868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 12869  015E9C  0E0A               	movlw	10
 12870  015E9E  6EE6               	movwf	postinc1,c
 12871  015EA0  0E00               	movlw	0
 12872  015EA2  6EE6               	movwf	postinc1,c
 12873  015EA4  0E00               	movlw	0
 12874  015EA6  6EE6               	movwf	postinc1,c
 12875  015EA8  0E00               	movlw	0
 12876  015EAA  6EE6               	movwf	postinc1,c
 12877  015EAC  0E00               	movlw	0
 12878  015EAE  6EE6               	movwf	postinc1,c
 12879  015EB0  0E00               	movlw	0
 12880  015EB2  6EE6               	movwf	postinc1,c
 12881  015EB4  0E00               	movlw	0
 12882  015EB6  6EE6               	movwf	postinc1,c
 12883  015EB8  0E00               	movlw	0
 12884  015EBA  6EE6               	movwf	postinc1,c
 12885                           
 12886                           ;stkvar	_n @ sp[(-22)+0]
 12887  015EBC  50E1               	movf	fsr1l,w,c
 12888  015EBE  0FEA               	addlw	-22
 12889  015EC0  6ED9               	movwf	fsr2l,c
 12890  015EC2  50E2               	movf	fsr1h,w,c
 12891  015EC4  6EDA               	movwf	fsr2h,c
 12892  015EC6  0EFF               	movlw	255
 12893  015EC8  22DA               	addwfc	fsr2h,f,c
 12894  015ECA  006F FF7B FFE6     	movff	postinc2,postinc1
 12895  015ED0  006F FF7B FFE6     	movff	postinc2,postinc1
 12896  015ED6  006F FF7B FFE6     	movff	postinc2,postinc1
 12897  015EDC  006F FF7B FFE6     	movff	postinc2,postinc1
 12898  015EE2  006F FF7B FFE6     	movff	postinc2,postinc1
 12899  015EE8  006F FF7B FFE6     	movff	postinc2,postinc1
 12900  015EEE  006F FF7B FFE6     	movff	postinc2,postinc1
 12901  015EF4  006F FF7B FFE6     	movff	postinc2,postinc1
 12902  015EFA  ECB6  F0C2         	call	___lomod	;wreg free
 12903  015EFE  52E5               	movf	postdec1,f,c
 12904  015F00  006F FF9C  F018    	movff	indf1,btemp+23
 12905  015F06  52E5               	movf	postdec1,f,c
 12906  015F08  006F FF9C  F017    	movff	indf1,btemp+22
 12907  015F0E  52E5               	movf	postdec1,f,c
 12908  015F10  006F FF9C  F016    	movff	indf1,btemp+21
 12909  015F16  52E5               	movf	postdec1,f,c
 12910  015F18  006F FF9C  F015    	movff	indf1,btemp+20
 12911  015F1E  52E5               	movf	postdec1,f,c
 12912  015F20  006F FF9C  F014    	movff	indf1,btemp+19
 12913  015F26  52E5               	movf	postdec1,f,c
 12914  015F28  006F FF9C  F013    	movff	indf1,btemp+18
 12915  015F2E  52E5               	movf	postdec1,f,c
 12916  015F30  006F FF9C  F012    	movff	indf1,btemp+17
 12917  015F36  52E5               	movf	postdec1,f,c
 12918  015F38  006F FF9C  F011    	movff	indf1,btemp+16
 12919  015F3E  0EF8               	movlw	248
 12920  015F40  26E1               	addwf	fsr1l,f,c
 12921  015F42  0EFF               	movlw	255
 12922  015F44  22E2               	addwfc	fsr1h,f,c
 12923  015F46  0E30               	movlw	48
 12924  015F48  2611               	addwf	(btemp+16)^0,f,c
 12925                           
 12926                           ;stkvar	_i @ sp[(-14)+8]
 12927  015F4A  0EFA               	movlw	-6
 12928  015F4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12929  015F52  0EFB               	movlw	-5
 12930  015F54  006F FF8C  F00C    	movff	plusw1,btemp+11
 12931  015F5A  0E94               	movlw	low _dbuf
 12932  015F5C  240B               	addwf	(btemp+10)^0,w,c
 12933  015F5E  6ED9               	movwf	fsr2l,c
 12934  015F60  0E03               	movlw	high _dbuf
 12935  015F62  200C               	addwfc	(btemp+11)^0,w,c
 12936  015F64  6EDA               	movwf	fsr2h,c
 12937  015F66  0060  F047  FFDF   	movff	btemp+16,indf2
 12938                           
 12939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 12940                           ;stkvar	_p @ sp[(-14)+12]
 12941  015F6C  50E1               	movf	fsr1l,w,c
 12942  015F6E  0FFE               	addlw	-2
 12943  015F70  6ED9               	movwf	fsr2l,c
 12944  015F72  50E2               	movf	fsr1h,w,c
 12945  015F74  6EDA               	movwf	fsr2h,c
 12946  015F76  0EFF               	movlw	255
 12947  015F78  22DA               	addwfc	fsr2h,f,c
 12948  015F7A  06DE               	decf	postinc2,f,c
 12949  015F7C  0E00               	movlw	0
 12950  015F7E  5ADD               	subwfb	postdec2,f,c
 12951                           
 12952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 12953                           ;stkvar	_w @ sp[(-14)+10]
 12954  015F80  50E1               	movf	fsr1l,w,c
 12955  015F82  0FFC               	addlw	-4
 12956  015F84  6ED9               	movwf	fsr2l,c
 12957  015F86  50E2               	movf	fsr1h,w,c
 12958  015F88  6EDA               	movwf	fsr2h,c
 12959  015F8A  0EFF               	movlw	255
 12960  015F8C  22DA               	addwfc	fsr2h,f,c
 12961  015F8E  06DE               	decf	postinc2,f,c
 12962  015F90  0E00               	movlw	0
 12963  015F92  5ADD               	subwfb	postdec2,f,c
 12964                           
 12965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 12966  015F94  0E0A               	movlw	10
 12967  015F96  6EE6               	movwf	postinc1,c
 12968  015F98  0E00               	movlw	0
 12969  015F9A  6EE6               	movwf	postinc1,c
 12970  015F9C  0E00               	movlw	0
 12971  015F9E  6EE6               	movwf	postinc1,c
 12972  015FA0  0E00               	movlw	0
 12973  015FA2  6EE6               	movwf	postinc1,c
 12974  015FA4  0E00               	movlw	0
 12975  015FA6  6EE6               	movwf	postinc1,c
 12976  015FA8  0E00               	movlw	0
 12977  015FAA  6EE6               	movwf	postinc1,c
 12978  015FAC  0E00               	movlw	0
 12979  015FAE  6EE6               	movwf	postinc1,c
 12980  015FB0  0E00               	movlw	0
 12981  015FB2  6EE6               	movwf	postinc1,c
 12982                           
 12983                           ;stkvar	_n @ sp[(-22)+0]
 12984  015FB4  50E1               	movf	fsr1l,w,c
 12985  015FB6  0FEA               	addlw	-22
 12986  015FB8  6ED9               	movwf	fsr2l,c
 12987  015FBA  50E2               	movf	fsr1h,w,c
 12988  015FBC  6EDA               	movwf	fsr2h,c
 12989  015FBE  0EFF               	movlw	255
 12990  015FC0  22DA               	addwfc	fsr2h,f,c
 12991  015FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12992  015FC8  006F FF7B FFE6     	movff	postinc2,postinc1
 12993  015FCE  006F FF7B FFE6     	movff	postinc2,postinc1
 12994  015FD4  006F FF7B FFE6     	movff	postinc2,postinc1
 12995  015FDA  006F FF7B FFE6     	movff	postinc2,postinc1
 12996  015FE0  006F FF7B FFE6     	movff	postinc2,postinc1
 12997  015FE6  006F FF7B FFE6     	movff	postinc2,postinc1
 12998  015FEC  006F FF7B FFE6     	movff	postinc2,postinc1
 12999  015FF2  ECC2  F0BD         	call	___lodiv	;wreg free
 13000  015FF6  52E5               	movf	postdec1,f,c
 13001  015FF8  006F FF9C  F018    	movff	indf1,btemp+23
 13002  015FFE  52E5               	movf	postdec1,f,c
 13003  016000  006F FF9C  F017    	movff	indf1,btemp+22
 13004  016006  52E5               	movf	postdec1,f,c
 13005  016008  006F FF9C  F016    	movff	indf1,btemp+21
 13006  01600E  52E5               	movf	postdec1,f,c
 13007  016010  006F FF9C  F015    	movff	indf1,btemp+20
 13008  016016  52E5               	movf	postdec1,f,c
 13009  016018  006F FF9C  F014    	movff	indf1,btemp+19
 13010  01601E  52E5               	movf	postdec1,f,c
 13011  016020  006F FF9C  F013    	movff	indf1,btemp+18
 13012  016026  52E5               	movf	postdec1,f,c
 13013  016028  006F FF9C  F012    	movff	indf1,btemp+17
 13014  01602E  52E5               	movf	postdec1,f,c
 13015  016030  006F FF9C  F011    	movff	indf1,btemp+16
 13016  016036  0EF8               	movlw	248
 13017  016038  26E1               	addwf	fsr1l,f,c
 13018  01603A  0EFF               	movlw	255
 13019  01603C  22E2               	addwfc	fsr1h,f,c
 13020                           
 13021                           ;stkvar	_n @ sp[(-14)+0]
 13022  01603E  0EF2               	movlw	-14
 13023  016040  0060  F047  FFE3   	movff	btemp+16,plusw1
 13024  016046  0EF3               	movlw	-13
 13025  016048  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13026  01604E  0EF4               	movlw	-12
 13027  016050  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13028  016056  0EF5               	movlw	-11
 13029  016058  0060  F053  FFE3   	movff	btemp+19,plusw1
 13030  01605E  0EF6               	movlw	-10
 13031  016060  0060  F057  FFE3   	movff	btemp+20,plusw1
 13032  016066  0EF7               	movlw	-9
 13033  016068  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13034  01606E  0EF8               	movlw	-8
 13035  016070  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13036  016076  0EF9               	movlw	-7
 13037  016078  0060  F063  FFE3   	movff	btemp+23,plusw1
 13038  01607E                     l11688:
 13039                           
 13040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13041                           ;stkvar	_i @ sp[(-14)+8]
 13042  01607E  0EFA               	movlw	-6
 13043  016080  006F FF8C  F001    	movff	plusw1,btemp
 13044  016086  0EFB               	movlw	-5
 13045  016088  50E3               	movf	plusw1,w,c
 13046  01608A  1001               	iorwf	btemp^0,w,c
 13047  01608C  B4D8               	btfsc	status,2,c
 13048  01608E  D02F               	goto	u11110
 13049                           
 13050                           ;stkvar	_n @ sp[(-14)+0]
 13051  016090  0EF2               	movlw	-14
 13052  016092  50E3               	movf	plusw1,w,c
 13053  016094  E115               	bnz	u11081
 13054  016096  0EF3               	movlw	-13
 13055  016098  50E3               	movf	plusw1,w,c
 13056  01609A  E112               	bnz	u11081
 13057  01609C  0EF4               	movlw	-12
 13058  01609E  50E3               	movf	plusw1,w,c
 13059  0160A0  E10F               	bnz	u11081
 13060  0160A2  0EF5               	movlw	-11
 13061  0160A4  50E3               	movf	plusw1,w,c
 13062  0160A6  E10C               	bnz	u11081
 13063  0160A8  0EF6               	movlw	-10
 13064  0160AA  50E3               	movf	plusw1,w,c
 13065  0160AC  E109               	bnz	u11081
 13066  0160AE  0EF7               	movlw	-9
 13067  0160B0  50E3               	movf	plusw1,w,c
 13068  0160B2  E106               	bnz	u11081
 13069  0160B4  0EF8               	movlw	-8
 13070  0160B6  50E3               	movf	plusw1,w,c
 13071  0160B8  E103               	bnz	u11081
 13072  0160BA  0EF9               	movlw	-7
 13073  0160BC  50E3               	movf	plusw1,w,c
 13074  0160BE  A4D8               	btfss	status,2,c
 13075  0160C0                     u11081:
 13076  0160C0  D6E3               	goto	l11678
 13077                           
 13078                           ;stkvar	_p @ sp[(-14)+12]
 13079  0160C2  0EFF               	movlw	-1
 13080  0160C4  BEE3               	btfsc	plusw1,7,c
 13081  0160C6  D007               	goto	u11090
 13082  0160C8  0EFF               	movlw	-1
 13083  0160CA  50E3               	movf	plusw1,w,c
 13084  0160CC  E103               	bnz	u11091
 13085  0160CE  0EFE               	movlw	-2
 13086  0160D0  04E3               	decf	plusw1,w,c
 13087  0160D2  B0D8               	btfsc	status,0,c
 13088  0160D4                     u11091:
 13089  0160D4  D6D9               	goto	l11678
 13090  0160D6                     u11090:
 13091                           
 13092                           ;stkvar	_w @ sp[(-14)+10]
 13093  0160D6  0EFD               	movlw	-3
 13094  0160D8  BEE3               	btfsc	plusw1,7,c
 13095  0160DA  D009               	goto	u11110
 13096  0160DC  0EFD               	movlw	-3
 13097  0160DE  50E3               	movf	plusw1,w,c
 13098  0160E0  E104               	bnz	u11100
 13099  0160E2  0EFC               	movlw	-4
 13100  0160E4  04E3               	decf	plusw1,w,c
 13101  0160E6  A0D8               	btfss	status,0,c
 13102  0160E8  D002               	goto	u11110
 13103  0160EA                     u11100:
 13104  0160EA  B225               	btfsc	_flags^0,1,c
 13105  0160EC  D6CD               	goto	l11678
 13106  0160EE                     u11110:
 13107                           
 13108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13109                           ;stkvar	_w @ sp[(-14)+10]
 13110  0160EE  0EFC               	movlw	-4
 13111  0160F0  006F FF8F FFE6     	movff	plusw1,postinc1
 13112  0160F6  006F FF8F FFE6     	movff	plusw1,postinc1
 13113                           
 13114                           ;stkvar	_i @ sp[(-16)+8]
 13115  0160FC  0E94               	movlw	low _dbuf
 13116  0160FE  6E0B               	movwf	(btemp+10)^0,c
 13117  016100  0E03               	movlw	high _dbuf
 13118  016102  6E0C               	movwf	(btemp+11)^0,c
 13119  016104  0EF8               	movlw	-8
 13120  016106  50E3               	movf	plusw1,w,c
 13121  016108  260B               	addwf	(btemp+10)^0,f,c
 13122  01610A  0EF9               	movlw	-7
 13123  01610C  50E3               	movf	plusw1,w,c
 13124  01610E  220C               	addwfc	(btemp+11)^0,f,c
 13125  016110  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13126  016116  0060  F033  FFE6   	movff	btemp+11,postinc1
 13127                           
 13128                           ;stkvar	_fp @ sp[(-18)+-2]
 13129  01611C  0EEC               	movlw	-20
 13130  01611E  006F FF8F FFE6     	movff	plusw1,postinc1
 13131  016124  006F FF8F FFE6     	movff	plusw1,postinc1
 13132  01612A  ECA9  F0C5         	call	_pad	;wreg free
 13133                           
 13134                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13135  01612E  0EE8               	movlw	232
 13136  016130  26E1               	addwf	fsr1l,f,c
 13137  016132  0EFF               	movlw	255
 13138  016134  22E2               	addwfc	fsr1h,f,c
 13139  016136  0012               	return		;funcret
 13140  016138                     __end_of_utoa:
 13141                           	opt callstack 0
 13142                           
 13143 ;; *************** function ___lomod *****************
 13144 ;; Defined at:
 13145 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13146 ;; Parameters:    Size  Location     Type
 13147 ;;  dividend        8  [STACK] unsigned long long 
 13148 ;;  divisor         8  [STACK] unsigned long long 
 13149 ;; Auto vars:     Size  Location     Type
 13150 ;;  counter         1  [STACK] unsigned char 
 13151 ;; Return value:  Size  Location     Type
 13152 ;;                  8  [STACK] unsigned long long 
 13153 ;; Registers used:
 13154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13155 ;; Tracked objects:
 13156 ;;		On entry : 0/3
 13157 ;;		On exit  : 0/0
 13158 ;;		Unchanged: 0/0
 13159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13164 ;;Total ram usage:        0 bytes
 13165 ;; Hardware stack levels used:    1
 13166 ;; Hardware stack levels required when called:   15
 13167 ;; This function calls:
 13168 ;;		Nothing
 13169 ;; This function is called by:
 13170 ;;		_utoa
 13171 ;; This function uses a reentrant model
 13172 ;;
 13173                           
 13174                           	psect	text51
 13175  01856C                     __ptext51:
 13176                           	opt callstack 0
 13177  01856C                     ___lomod:
 13178                           	opt callstack 0
 13179                           
 13180                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13181  01856C  52E6               	movf	postinc1,f,c
 13182                           
 13183                           ;stkvar	_divisor @ sp[(-1)+-16]
 13184                           
 13185                           ;incstack = 0
 13186 ;; hardware stack exceeded
 13187  01856E  0EEF               	movlw	-17
 13188  018570  50E3               	movf	plusw1,w,c
 13189  018572  E116               	bnz	u7000
 13190  018574  0EF0               	movlw	-16
 13191  018576  50E3               	movf	plusw1,w,c
 13192  018578  E113               	bnz	u7000
 13193  01857A  0EF1               	movlw	-15
 13194  01857C  50E3               	movf	plusw1,w,c
 13195  01857E  E110               	bnz	u7000
 13196  018580  0EF2               	movlw	-14
 13197  018582  50E3               	movf	plusw1,w,c
 13198  018584  E10D               	bnz	u7000
 13199  018586  0EF3               	movlw	-13
 13200  018588  50E3               	movf	plusw1,w,c
 13201  01858A  E10A               	bnz	u7000
 13202  01858C  0EF4               	movlw	-12
 13203  01858E  50E3               	movf	plusw1,w,c
 13204  018590  E107               	bnz	u7000
 13205  018592  0EF5               	movlw	-11
 13206  018594  50E3               	movf	plusw1,w,c
 13207  018596  E104               	bnz	u7000
 13208  018598  0EF6               	movlw	-10
 13209  01859A  50E3               	movf	plusw1,w,c
 13210  01859C  B4D8               	btfsc	status,2,c
 13211  01859E  D075               	goto	u7030
 13212  0185A0                     u7000:
 13213                           
 13214                           ;stkvar	_counter @ sp[(-1)+0]
 13215  0185A0  0EFF               	movlw	-1
 13216  0185A2  6AE3               	clrf	plusw1,c
 13217  0185A4  D012               	goto	L9
 13218  0185A6                     l8290:
 13219                           
 13220                           ;stkvar	_divisor @ sp[(-1)+-16]
 13221  0185A6  90D8               	bcf	status,0,c
 13222  0185A8  0EEF               	movlw	-17
 13223  0185AA  36E3               	rlcf	plusw1,f,c
 13224  0185AC  0EF0               	movlw	-16
 13225  0185AE  36E3               	rlcf	plusw1,f,c
 13226  0185B0  0EF1               	movlw	-15
 13227  0185B2  36E3               	rlcf	plusw1,f,c
 13228  0185B4  0EF2               	movlw	-14
 13229  0185B6  36E3               	rlcf	plusw1,f,c
 13230  0185B8  0EF3               	movlw	-13
 13231  0185BA  36E3               	rlcf	plusw1,f,c
 13232  0185BC  0EF4               	movlw	-12
 13233  0185BE  36E3               	rlcf	plusw1,f,c
 13234  0185C0  0EF5               	movlw	-11
 13235  0185C2  36E3               	rlcf	plusw1,f,c
 13236  0185C4  0EF6               	movlw	-10
 13237  0185C6  36E3               	rlcf	plusw1,f,c
 13238                           
 13239                           ;stkvar	_counter @ sp[(-1)+0]
 13240  0185C8  0EFF               	movlw	-1
 13241  0185CA                     L9:
 13242  0185CA  2AE3               	incf	plusw1,f,c
 13243                           
 13244                           ;stkvar	_divisor @ sp[(-1)+-16]
 13245  0185CC  0EF6               	movlw	-10
 13246  0185CE  AEE3               	btfss	plusw1,7,c
 13247  0185D0  D7EA               	goto	l8290
 13248  0185D2                     u7010:
 13249                           
 13250                           ;stkvar	_divisor @ sp[(-1)+-16]
 13251                           ;stkvar	_dividend @ sp[(-1)+-8]
 13252  0185D2  50E1               	movf	fsr1l,w,c
 13253  0185D4  0FF7               	addlw	-9
 13254  0185D6  6ED9               	movwf	fsr2l,c
 13255  0185D8  50E2               	movf	fsr1h,w,c
 13256  0185DA  6EDA               	movwf	fsr2h,c
 13257  0185DC  0EFF               	movlw	255
 13258  0185DE  22DA               	addwfc	fsr2h,f,c
 13259  0185E0  0EEF               	movlw	-17
 13260  0185E2  50E3               	movf	plusw1,w,c
 13261  0185E4  5CDE               	subwf	postinc2,w,c
 13262  0185E6  0EF0               	movlw	-16
 13263  0185E8  50E3               	movf	plusw1,w,c
 13264  0185EA  58DE               	subwfb	postinc2,w,c
 13265  0185EC  0EF1               	movlw	-15
 13266  0185EE  50E3               	movf	plusw1,w,c
 13267  0185F0  58DE               	subwfb	postinc2,w,c
 13268  0185F2  0EF2               	movlw	-14
 13269  0185F4  50E3               	movf	plusw1,w,c
 13270  0185F6  58DE               	subwfb	postinc2,w,c
 13271  0185F8  0EF3               	movlw	-13
 13272  0185FA  50E3               	movf	plusw1,w,c
 13273  0185FC  58DE               	subwfb	postinc2,w,c
 13274  0185FE  0EF4               	movlw	-12
 13275  018600  50E3               	movf	plusw1,w,c
 13276  018602  58DE               	subwfb	postinc2,w,c
 13277  018604  0EF5               	movlw	-11
 13278  018606  50E3               	movf	plusw1,w,c
 13279  018608  58DE               	subwfb	postinc2,w,c
 13280  01860A  0EF6               	movlw	-10
 13281  01860C  50E3               	movf	plusw1,w,c
 13282  01860E  58DE               	subwfb	postinc2,w,c
 13283  018610  A0D8               	btfss	status,0,c
 13284  018612  D01F               	goto	l8298
 13285                           
 13286                           ;stkvar	_divisor @ sp[(-1)+-16]
 13287                           ;stkvar	_dividend @ sp[(-1)+-8]
 13288  018614  50E1               	movf	fsr1l,w,c
 13289  018616  0FF7               	addlw	-9
 13290  018618  6ED9               	movwf	fsr2l,c
 13291  01861A  50E2               	movf	fsr1h,w,c
 13292  01861C  6EDA               	movwf	fsr2h,c
 13293  01861E  0EFF               	movlw	255
 13294  018620  22DA               	addwfc	fsr2h,f,c
 13295  018622  0EEF               	movlw	-17
 13296  018624  50E3               	movf	plusw1,w,c
 13297  018626  5EDE               	subwf	postinc2,f,c
 13298  018628  0EF0               	movlw	-16
 13299  01862A  50E3               	movf	plusw1,w,c
 13300  01862C  5ADE               	subwfb	postinc2,f,c
 13301  01862E  0EF1               	movlw	-15
 13302  018630  50E3               	movf	plusw1,w,c
 13303  018632  5ADE               	subwfb	postinc2,f,c
 13304  018634  0EF2               	movlw	-14
 13305  018636  50E3               	movf	plusw1,w,c
 13306  018638  5ADE               	subwfb	postinc2,f,c
 13307  01863A  0EF3               	movlw	-13
 13308  01863C  50E3               	movf	plusw1,w,c
 13309  01863E  5ADE               	subwfb	postinc2,f,c
 13310  018640  0EF4               	movlw	-12
 13311  018642  50E3               	movf	plusw1,w,c
 13312  018644  5ADE               	subwfb	postinc2,f,c
 13313  018646  0EF5               	movlw	-11
 13314  018648  50E3               	movf	plusw1,w,c
 13315  01864A  5ADE               	subwfb	postinc2,f,c
 13316  01864C  0EF6               	movlw	-10
 13317  01864E  50E3               	movf	plusw1,w,c
 13318  018650  5ADE               	subwfb	postinc2,f,c
 13319  018652                     l8298:
 13320                           
 13321                           ;stkvar	_divisor @ sp[(-1)+-16]
 13322  018652  90D8               	bcf	status,0,c
 13323  018654  0EF6               	movlw	-10
 13324  018656  32E3               	rrcf	plusw1,f,c
 13325  018658  0EF5               	movlw	-11
 13326  01865A  32E3               	rrcf	plusw1,f,c
 13327  01865C  0EF4               	movlw	-12
 13328  01865E  32E3               	rrcf	plusw1,f,c
 13329  018660  0EF3               	movlw	-13
 13330  018662  32E3               	rrcf	plusw1,f,c
 13331  018664  0EF2               	movlw	-14
 13332  018666  32E3               	rrcf	plusw1,f,c
 13333  018668  0EF1               	movlw	-15
 13334  01866A  32E3               	rrcf	plusw1,f,c
 13335  01866C  0EF0               	movlw	-16
 13336  01866E  32E3               	rrcf	plusw1,f,c
 13337  018670  0EEF               	movlw	-17
 13338  018672  32E3               	rrcf	plusw1,f,c
 13339                           
 13340                           ;stkvar	_counter @ sp[(-1)+0]
 13341  018674  0EFF               	movlw	-1
 13342  018676  50E3               	movf	plusw1,w,c
 13343  018678  6E01               	movwf	btemp^0,c
 13344  01867A  0E01               	movlw	1
 13345  01867C  5E01               	subwf	btemp^0,f,c
 13346  01867E  0EFF               	movlw	-1
 13347  018680  0060  F007  FFE3   	movff	btemp,plusw1
 13348  018686  A4D8               	btfss	status,2,c
 13349  018688  D7A4               	goto	u7010
 13350  01868A                     u7030:
 13351                           
 13352                           ;stkvar	_dividend @ sp[(-1)+-8]
 13353  01868A  0EF7               	movlw	247
 13354  01868C  24E1               	addwf	fsr1l,w,c
 13355  01868E  6ED9               	movwf	fsr2l,c
 13356  018690  0EFF               	movlw	255
 13357  018692  20E2               	addwfc	fsr1h,w,c
 13358  018694  6EDA               	movwf	fsr2h,c
 13359                           
 13360                           ;stkvar	?___lomod @ sp[(-1)+-8]
 13361  018696  0E08               	movlw	8
 13362  018698  6E01               	movwf	btemp^0,c
 13363  01869A  0EF7               	movlw	-9
 13364  01869C                     us704999:
 13365  01869C  006F FF7B FFE3     	movff	postinc2,plusw1
 13366  0186A2  28E8               	incf	wreg,w,c
 13367  0186A4  2E01               	decfsz	btemp^0,f,c
 13368  0186A6  D7FA               	bra	us704999
 13369                           
 13370                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13371  0186A8  52E5               	movf	postdec1,f,c
 13372  0186AA  0012               	return		;funcret
 13373  0186AC                     __end_of___lomod:
 13374                           	opt callstack 0
 13375                           
 13376 ;; *************** function ___lodiv *****************
 13377 ;; Defined at:
 13378 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;  dividend        8  [STACK] unsigned long long 
 13381 ;;  divisor         8  [STACK] unsigned long long 
 13382 ;; Auto vars:     Size  Location     Type
 13383 ;;  quotient        8  [STACK] unsigned long long 
 13384 ;;  counter         1  [STACK] unsigned char 
 13385 ;; Return value:  Size  Location     Type
 13386 ;;                  8  [STACK] unsigned long long 
 13387 ;; Registers used:
 13388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13389 ;; Tracked objects:
 13390 ;;		On entry : 0/3
 13391 ;;		On exit  : 0/0
 13392 ;;		Unchanged: 0/0
 13393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13398 ;;Total ram usage:        0 bytes
 13399 ;; Hardware stack levels used:    1
 13400 ;; Hardware stack levels required when called:   15
 13401 ;; This function calls:
 13402 ;;		Nothing
 13403 ;; This function is called by:
 13404 ;;		_utoa
 13405 ;; This function uses a reentrant model
 13406 ;;
 13407                           
 13408                           	psect	text52
 13409  017B84                     __ptext52:
 13410                           	opt callstack 0
 13411  017B84                     ___lodiv:
 13412                           	opt callstack 0
 13413                           
 13414                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13415  017B84  0E09               	movlw	9
 13416  017B86  26E1               	addwf	fsr1l,f,c
 13417  017B88  0E00               	movlw	0
 13418  017B8A  22E2               	addwfc	fsr1h,f,c
 13419                           
 13420                           ;stkvar	_quotient @ sp[(-9)+0]
 13421                           
 13422                           ;incstack = 0
 13423 ;; hardware stack exceeded
 13424  017B8C  0E07               	movlw	7
 13425  017B8E  6E01               	movwf	btemp^0,c
 13426  017B90  0EF7               	movlw	-9
 13427  017B92                     u6941:
 13428  017B92  6AE3               	clrf	plusw1,c
 13429  017B94  2AE8               	incf	wreg,f,c
 13430  017B96  0601               	decf	btemp^0,f,c
 13431  017B98  E2FC               	bc	u6941
 13432                           
 13433                           ;stkvar	_divisor @ sp[(-9)+-16]
 13434  017B9A  0EE7               	movlw	-25
 13435  017B9C  50E3               	movf	plusw1,w,c
 13436  017B9E  E116               	bnz	u6950
 13437  017BA0  0EE8               	movlw	-24
 13438  017BA2  50E3               	movf	plusw1,w,c
 13439  017BA4  E113               	bnz	u6950
 13440  017BA6  0EE9               	movlw	-23
 13441  017BA8  50E3               	movf	plusw1,w,c
 13442  017BAA  E110               	bnz	u6950
 13443  017BAC  0EEA               	movlw	-22
 13444  017BAE  50E3               	movf	plusw1,w,c
 13445  017BB0  E10D               	bnz	u6950
 13446  017BB2  0EEB               	movlw	-21
 13447  017BB4  50E3               	movf	plusw1,w,c
 13448  017BB6  E10A               	bnz	u6950
 13449  017BB8  0EEC               	movlw	-20
 13450  017BBA  50E3               	movf	plusw1,w,c
 13451  017BBC  E107               	bnz	u6950
 13452  017BBE  0EED               	movlw	-19
 13453  017BC0  50E3               	movf	plusw1,w,c
 13454  017BC2  E104               	bnz	u6950
 13455  017BC4  0EEE               	movlw	-18
 13456  017BC6  50E3               	movf	plusw1,w,c
 13457  017BC8  B4D8               	btfsc	status,2,c
 13458  017BCA  D088               	goto	u6980
 13459  017BCC                     u6950:
 13460                           
 13461                           ;stkvar	_counter @ sp[(-9)+8]
 13462  017BCC  0EFF               	movlw	-1
 13463  017BCE  6AE3               	clrf	plusw1,c
 13464  017BD0  D012               	goto	L10
 13465  017BD2                     l8266:
 13466                           
 13467                           ;stkvar	_divisor @ sp[(-9)+-16]
 13468  017BD2  90D8               	bcf	status,0,c
 13469  017BD4  0EE7               	movlw	-25
 13470  017BD6  36E3               	rlcf	plusw1,f,c
 13471  017BD8  0EE8               	movlw	-24
 13472  017BDA  36E3               	rlcf	plusw1,f,c
 13473  017BDC  0EE9               	movlw	-23
 13474  017BDE  36E3               	rlcf	plusw1,f,c
 13475  017BE0  0EEA               	movlw	-22
 13476  017BE2  36E3               	rlcf	plusw1,f,c
 13477  017BE4  0EEB               	movlw	-21
 13478  017BE6  36E3               	rlcf	plusw1,f,c
 13479  017BE8  0EEC               	movlw	-20
 13480  017BEA  36E3               	rlcf	plusw1,f,c
 13481  017BEC  0EED               	movlw	-19
 13482  017BEE  36E3               	rlcf	plusw1,f,c
 13483  017BF0  0EEE               	movlw	-18
 13484  017BF2  36E3               	rlcf	plusw1,f,c
 13485                           
 13486                           ;stkvar	_counter @ sp[(-9)+8]
 13487  017BF4  0EFF               	movlw	-1
 13488  017BF6                     L10:
 13489  017BF6  2AE3               	incf	plusw1,f,c
 13490                           
 13491                           ;stkvar	_divisor @ sp[(-9)+-16]
 13492  017BF8  0EEE               	movlw	-18
 13493  017BFA  AEE3               	btfss	plusw1,7,c
 13494  017BFC  D7EA               	goto	l8266
 13495  017BFE                     u6960:
 13496                           
 13497                           ;stkvar	_quotient @ sp[(-9)+0]
 13498  017BFE  90D8               	bcf	status,0,c
 13499  017C00  0EF7               	movlw	-9
 13500  017C02  36E3               	rlcf	plusw1,f,c
 13501  017C04  0EF8               	movlw	-8
 13502  017C06  36E3               	rlcf	plusw1,f,c
 13503  017C08  0EF9               	movlw	-7
 13504  017C0A  36E3               	rlcf	plusw1,f,c
 13505  017C0C  0EFA               	movlw	-6
 13506  017C0E  36E3               	rlcf	plusw1,f,c
 13507  017C10  0EFB               	movlw	-5
 13508  017C12  36E3               	rlcf	plusw1,f,c
 13509  017C14  0EFC               	movlw	-4
 13510  017C16  36E3               	rlcf	plusw1,f,c
 13511  017C18  0EFD               	movlw	-3
 13512  017C1A  36E3               	rlcf	plusw1,f,c
 13513  017C1C  0EFE               	movlw	-2
 13514  017C1E  36E3               	rlcf	plusw1,f,c
 13515                           
 13516                           ;stkvar	_divisor @ sp[(-9)+-16]
 13517                           ;stkvar	_dividend @ sp[(-9)+-8]
 13518  017C20  50E1               	movf	fsr1l,w,c
 13519  017C22  0FEF               	addlw	-17
 13520  017C24  6ED9               	movwf	fsr2l,c
 13521  017C26  50E2               	movf	fsr1h,w,c
 13522  017C28  6EDA               	movwf	fsr2h,c
 13523  017C2A  0EFF               	movlw	255
 13524  017C2C  22DA               	addwfc	fsr2h,f,c
 13525  017C2E  0EE7               	movlw	-25
 13526  017C30  50E3               	movf	plusw1,w,c
 13527  017C32  5CDE               	subwf	postinc2,w,c
 13528  017C34  0EE8               	movlw	-24
 13529  017C36  50E3               	movf	plusw1,w,c
 13530  017C38  58DE               	subwfb	postinc2,w,c
 13531  017C3A  0EE9               	movlw	-23
 13532  017C3C  50E3               	movf	plusw1,w,c
 13533  017C3E  58DE               	subwfb	postinc2,w,c
 13534  017C40  0EEA               	movlw	-22
 13535  017C42  50E3               	movf	plusw1,w,c
 13536  017C44  58DE               	subwfb	postinc2,w,c
 13537  017C46  0EEB               	movlw	-21
 13538  017C48  50E3               	movf	plusw1,w,c
 13539  017C4A  58DE               	subwfb	postinc2,w,c
 13540  017C4C  0EEC               	movlw	-20
 13541  017C4E  50E3               	movf	plusw1,w,c
 13542  017C50  58DE               	subwfb	postinc2,w,c
 13543  017C52  0EED               	movlw	-19
 13544  017C54  50E3               	movf	plusw1,w,c
 13545  017C56  58DE               	subwfb	postinc2,w,c
 13546  017C58  0EEE               	movlw	-18
 13547  017C5A  50E3               	movf	plusw1,w,c
 13548  017C5C  58DE               	subwfb	postinc2,w,c
 13549  017C5E  A0D8               	btfss	status,0,c
 13550  017C60  D021               	goto	l8278
 13551                           
 13552                           ;stkvar	_divisor @ sp[(-9)+-16]
 13553                           ;stkvar	_dividend @ sp[(-9)+-8]
 13554  017C62  50E1               	movf	fsr1l,w,c
 13555  017C64  0FEF               	addlw	-17
 13556  017C66  6ED9               	movwf	fsr2l,c
 13557  017C68  50E2               	movf	fsr1h,w,c
 13558  017C6A  6EDA               	movwf	fsr2h,c
 13559  017C6C  0EFF               	movlw	255
 13560  017C6E  22DA               	addwfc	fsr2h,f,c
 13561  017C70  0EE7               	movlw	-25
 13562  017C72  50E3               	movf	plusw1,w,c
 13563  017C74  5EDE               	subwf	postinc2,f,c
 13564  017C76  0EE8               	movlw	-24
 13565  017C78  50E3               	movf	plusw1,w,c
 13566  017C7A  5ADE               	subwfb	postinc2,f,c
 13567  017C7C  0EE9               	movlw	-23
 13568  017C7E  50E3               	movf	plusw1,w,c
 13569  017C80  5ADE               	subwfb	postinc2,f,c
 13570  017C82  0EEA               	movlw	-22
 13571  017C84  50E3               	movf	plusw1,w,c
 13572  017C86  5ADE               	subwfb	postinc2,f,c
 13573  017C88  0EEB               	movlw	-21
 13574  017C8A  50E3               	movf	plusw1,w,c
 13575  017C8C  5ADE               	subwfb	postinc2,f,c
 13576  017C8E  0EEC               	movlw	-20
 13577  017C90  50E3               	movf	plusw1,w,c
 13578  017C92  5ADE               	subwfb	postinc2,f,c
 13579  017C94  0EED               	movlw	-19
 13580  017C96  50E3               	movf	plusw1,w,c
 13581  017C98  5ADE               	subwfb	postinc2,f,c
 13582  017C9A  0EEE               	movlw	-18
 13583  017C9C  50E3               	movf	plusw1,w,c
 13584  017C9E  5ADE               	subwfb	postinc2,f,c
 13585                           
 13586                           ;stkvar	_quotient @ sp[(-9)+0]
 13587  017CA0  0EF7               	movlw	-9
 13588  017CA2  80E3               	bsf	plusw1,0,c
 13589  017CA4                     l8278:
 13590                           
 13591                           ;stkvar	_divisor @ sp[(-9)+-16]
 13592  017CA4  90D8               	bcf	status,0,c
 13593  017CA6  0EEE               	movlw	-18
 13594  017CA8  32E3               	rrcf	plusw1,f,c
 13595  017CAA  0EED               	movlw	-19
 13596  017CAC  32E3               	rrcf	plusw1,f,c
 13597  017CAE  0EEC               	movlw	-20
 13598  017CB0  32E3               	rrcf	plusw1,f,c
 13599  017CB2  0EEB               	movlw	-21
 13600  017CB4  32E3               	rrcf	plusw1,f,c
 13601  017CB6  0EEA               	movlw	-22
 13602  017CB8  32E3               	rrcf	plusw1,f,c
 13603  017CBA  0EE9               	movlw	-23
 13604  017CBC  32E3               	rrcf	plusw1,f,c
 13605  017CBE  0EE8               	movlw	-24
 13606  017CC0  32E3               	rrcf	plusw1,f,c
 13607  017CC2  0EE7               	movlw	-25
 13608  017CC4  32E3               	rrcf	plusw1,f,c
 13609                           
 13610                           ;stkvar	_counter @ sp[(-9)+8]
 13611  017CC6  0EFF               	movlw	-1
 13612  017CC8  50E3               	movf	plusw1,w,c
 13613  017CCA  6E01               	movwf	btemp^0,c
 13614  017CCC  0E01               	movlw	1
 13615  017CCE  5E01               	subwf	btemp^0,f,c
 13616  017CD0  0EFF               	movlw	-1
 13617  017CD2  0060  F007  FFE3   	movff	btemp,plusw1
 13618  017CD8  A4D8               	btfss	status,2,c
 13619  017CDA  D791               	goto	u6960
 13620  017CDC                     u6980:
 13621                           
 13622                           ;stkvar	_quotient @ sp[(-9)+0]
 13623  017CDC  0EF7               	movlw	247
 13624  017CDE  24E1               	addwf	fsr1l,w,c
 13625  017CE0  6ED9               	movwf	fsr2l,c
 13626  017CE2  0EFF               	movlw	255
 13627  017CE4  20E2               	addwfc	fsr1h,w,c
 13628  017CE6  6EDA               	movwf	fsr2h,c
 13629                           
 13630                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 13631  017CE8  0E08               	movlw	8
 13632  017CEA  6E01               	movwf	btemp^0,c
 13633  017CEC  0EEF               	movlw	-17
 13634  017CEE                     us699999:
 13635  017CEE  006F FF7B FFE3     	movff	postinc2,plusw1
 13636  017CF4  28E8               	incf	wreg,w,c
 13637  017CF6  2E01               	decfsz	btemp^0,f,c
 13638  017CF8  D7FA               	bra	us699999
 13639                           
 13640                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13641  017CFA  0EF7               	movlw	247
 13642  017CFC  26E1               	addwf	fsr1l,f,c
 13643  017CFE  0EFF               	movlw	255
 13644  017D00  22E2               	addwfc	fsr1h,f,c
 13645  017D02  0012               	return		;funcret
 13646  017D04                     __end_of___lodiv:
 13647                           	opt callstack 0
 13648                           
 13649 ;; *************** function _strncmp *****************
 13650 ;; Defined at:
 13651 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 13652 ;; Parameters:    Size  Location     Type
 13653 ;;  _l              2  [STACK] PTR const unsigned char 
 13654 ;;		 -> ct(3), STR_55(85), STR_53(3), STR_52(3), 
 13655 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
 13656 ;;		 -> STR_47(19), STR_46(19), STR_45(24), STR_44(15), 
 13657 ;;		 -> STR_43(15), STR_42(15), STR_41(10), STR_40(10), 
 13658 ;;		 -> STR_39(19), STR_38(19), STR_35(3), STR_34(3), 
 13659 ;;		 -> STR_33(3), STR_32(17), STR_31(16), STR_30(16), 
 13660 ;;		 -> STR_29(20), STR_28(20), STR_27(19), STR_26(19), 
 13661 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
 13662 ;;		 -> STR_21(19), STR_20(17), STR_19(16), STR_18(16), 
 13663 ;;		 -> STR_17(26), STR_16(26), STR_15(22), STR_14(17), 
 13664 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
 13665 ;;		 -> STR_9(23), STR_8(18), STR_7(17), STR_6(17), 
 13666 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 13667 ;;  _r              2  [STACK] PTR const unsigned char 
 13668 ;;		 -> STR_89(3), STR_85(3), STR_80(3), STR_75(3), 
 13669 ;;		 -> STR_70(3), STR_66(3), 
 13670 ;;  n               2  [STACK] unsigned int 
 13671 ;; Auto vars:     Size  Location     Type
 13672 ;;  r               2  [STACK] PTR const unsigned char 
 13673 ;;		 -> STR_89(3), STR_85(3), STR_80(3), STR_75(3), 
 13674 ;;		 -> STR_70(3), STR_66(3), 
 13675 ;;  l               2  [STACK] PTR const unsigned char 
 13676 ;;		 -> ct(3), STR_55(85), STR_53(3), STR_52(3), 
 13677 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
 13678 ;;		 -> STR_47(19), STR_46(19), STR_45(24), STR_44(15), 
 13679 ;;		 -> STR_43(15), STR_42(15), STR_41(10), STR_40(10), 
 13680 ;;		 -> STR_39(19), STR_38(19), STR_35(3), STR_34(3), 
 13681 ;;		 -> STR_33(3), STR_32(17), STR_31(16), STR_30(16), 
 13682 ;;		 -> STR_29(20), STR_28(20), STR_27(19), STR_26(19), 
 13683 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
 13684 ;;		 -> STR_21(19), STR_20(17), STR_19(16), STR_18(16), 
 13685 ;;		 -> STR_17(26), STR_16(26), STR_15(22), STR_14(17), 
 13686 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
 13687 ;;		 -> STR_9(23), STR_8(18), STR_7(17), STR_6(17), 
 13688 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 13689 ;; Return value:  Size  Location     Type
 13690 ;;                  2  [STACK] int 
 13691 ;; Registers used:
 13692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 13693 ;; Tracked objects:
 13694 ;;		On entry : 0/0
 13695 ;;		On exit  : 0/0
 13696 ;;		Unchanged: 0/0
 13697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13702 ;;Total ram usage:        0 bytes
 13703 ;; Hardware stack levels used:    1
 13704 ;; Hardware stack levels required when called:   15
 13705 ;; This function calls:
 13706 ;;		Nothing
 13707 ;; This function is called by:
 13708 ;;		_vfpfcnvrt
 13709 ;; This function uses a reentrant model
 13710 ;;
 13711                           
 13712                           	psect	text53
 13713  016E16                     __ptext53:
 13714                           	opt callstack 0
 13715  016E16                     _strncmp:
 13716                           	opt callstack 0
 13717                           
 13718                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13719  016E16  52E6               	movf	postinc1,f,c
 13720  016E18  52E6               	movf	postinc1,f,c
 13721  016E1A  52E6               	movf	postinc1,f,c
 13722  016E1C  52E6               	movf	postinc1,f,c
 13723                           
 13724                           ;stkvar	__l @ sp[(-4)+-2]
 13725                           
 13726                           ;incstack = 0
 13727 ;; hardware stack exceeded
 13728  016E1E  0EFA               	movlw	-6
 13729  016E20  006F FF8C  F00B    	movff	plusw1,btemp+10
 13730  016E26  0EFB               	movlw	-5
 13731  016E28  006F FF8C  F00C    	movff	plusw1,btemp+11
 13732                           
 13733                           ;stkvar	_l @ sp[(-4)+2]
 13734  016E2E  0EFF               	movlw	-1
 13735  016E30  0060  F033  FFE3   	movff	btemp+11,plusw1
 13736  016E36  0EFE               	movlw	-2
 13737  016E38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13738                           
 13739                           ;stkvar	__r @ sp[(-4)+-4]
 13740  016E3E  0EF8               	movlw	-8
 13741  016E40  006F FF8C  F00B    	movff	plusw1,btemp+10
 13742  016E46  0EF9               	movlw	-7
 13743  016E48  006F FF8C  F00C    	movff	plusw1,btemp+11
 13744                           
 13745                           ;stkvar	_r @ sp[(-4)+0]
 13746  016E4E  0EFD               	movlw	-3
 13747  016E50  0060  F033  FFE3   	movff	btemp+11,plusw1
 13748  016E56  0EFC               	movlw	-4
 13749  016E58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13750                           
 13751                           ;stkvar	_n @ sp[(-4)+-6]
 13752  016E5E  0EF6               	movlw	-10
 13753  016E60  006F FF8C  F001    	movff	plusw1,btemp
 13754  016E66  0E01               	movlw	1
 13755  016E68  5E01               	subwf	btemp^0,f,c
 13756  016E6A  0EF6               	movlw	-10
 13757  016E6C  0060  F007  FFE3   	movff	btemp,plusw1
 13758  016E72  0EF7               	movlw	-9
 13759  016E74  006F FF8C  F001    	movff	plusw1,btemp
 13760  016E7A  0E00               	movlw	0
 13761  016E7C  5A01               	subwfb	btemp^0,f,c
 13762  016E7E  0EF7               	movlw	-9
 13763  016E80  0060  F007  FFE3   	movff	btemp,plusw1
 13764  016E86  0EF6               	movlw	-10
 13765  016E88  28E3               	incf	plusw1,w,c
 13766  016E8A  E13F               	bnz	l8974
 13767  016E8C  0EF7               	movlw	-9
 13768  016E8E  28E3               	incf	plusw1,w,c
 13769  016E90  A4D8               	btfss	status,2,c
 13770  016E92  D03B               	goto	l8974
 13771  016E94  0E00               	movlw	0
 13772  016E96  6E01               	movwf	btemp^0,c
 13773  016E98  0E00               	movlw	0
 13774  016E9A  6E02               	movwf	(btemp+1)^0,c
 13775  016E9C  D0C7               	goto	l3391
 13776  016E9E                     l8972:
 13777                           
 13778                           ;stkvar	_l @ sp[(-4)+2]
 13779  016E9E  0EFE               	movlw	-2
 13780  016EA0  50E3               	movf	plusw1,w,c
 13781  016EA2  0F01               	addlw	1
 13782  016EA4  6E01               	movwf	btemp^0,c
 13783  016EA6  0EFE               	movlw	-2
 13784  016EA8  0060  F007  FFE3   	movff	btemp,plusw1
 13785  016EAE  6A01               	clrf	btemp^0,c
 13786  016EB0  0EFF               	movlw	-1
 13787  016EB2  50E3               	movf	plusw1,w,c
 13788  016EB4  2001               	addwfc	btemp^0,w,c
 13789  016EB6  6E01               	movwf	btemp^0,c
 13790  016EB8  0EFF               	movlw	-1
 13791  016EBA  0060  F007  FFE3   	movff	btemp,plusw1
 13792                           
 13793                           ;stkvar	_r @ sp[(-4)+0]
 13794  016EC0  0EFC               	movlw	-4
 13795  016EC2  50E3               	movf	plusw1,w,c
 13796  016EC4  0F01               	addlw	1
 13797  016EC6  6E01               	movwf	btemp^0,c
 13798  016EC8  0EFC               	movlw	-4
 13799  016ECA  0060  F007  FFE3   	movff	btemp,plusw1
 13800  016ED0  6A01               	clrf	btemp^0,c
 13801  016ED2  0EFD               	movlw	-3
 13802  016ED4  50E3               	movf	plusw1,w,c
 13803  016ED6  2001               	addwfc	btemp^0,w,c
 13804  016ED8  6E01               	movwf	btemp^0,c
 13805  016EDA  0EFD               	movlw	-3
 13806  016EDC  0060  F007  FFE3   	movff	btemp,plusw1
 13807                           
 13808                           ;stkvar	_n @ sp[(-4)+-6]
 13809  016EE2  0EF6               	movlw	-10
 13810  016EE4  006F FF8C  F001    	movff	plusw1,btemp
 13811  016EEA  0E01               	movlw	1
 13812  016EEC  5E01               	subwf	btemp^0,f,c
 13813  016EEE  0EF6               	movlw	-10
 13814  016EF0  0060  F007  FFE3   	movff	btemp,plusw1
 13815  016EF6  0EF7               	movlw	-9
 13816  016EF8  006F FF8C  F001    	movff	plusw1,btemp
 13817  016EFE  0E00               	movlw	0
 13818  016F00  5A01               	subwfb	btemp^0,f,c
 13819  016F02  0EF7               	movlw	-9
 13820  016F04  0060  F007  FFE3   	movff	btemp,plusw1
 13821  016F0A                     l8974:
 13822                           
 13823                           ;stkvar	_l @ sp[(-4)+2]
 13824  016F0A  0EFE               	movlw	-2
 13825  016F0C  006F FF8F FFF6     	movff	plusw1,tblptrl
 13826  016F12  0EFF               	movlw	-1
 13827  016F14  006F FF8F FFF7     	movff	plusw1,tblptrh
 13828  016F1A  0E00               	movlw	low (__mediumconst shr (0+16))
 13829  016F1C  6EF8               	movwf	tblptru,c
 13830  016F1E  0E1F               	movlw	(high __ramtop+-1)
 13831  016F20  64F7               	cpfsgt	tblptrh,c
 13832  016F22  D003               	bra	u8277
 13833  016F24  0008               	tblrd		*
 13834  016F26  50F5               	movf	tablat,w,c
 13835  016F28  D007               	bra	u8270
 13836  016F2A                     u8277:
 13837  016F2A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13838  016F30  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13839  016F36  50EF               	movf	indf0,w,c
 13840  016F38                     u8270:
 13841  016F38  0900               	iorlw	0
 13842  016F3A  B4D8               	btfsc	status,2,c
 13843  016F3C  D04A               	goto	u8310
 13844                           
 13845                           ;stkvar	_r @ sp[(-4)+0]
 13846  016F3E  50E1               	movf	fsr1l,w,c
 13847  016F40  0FFC               	addlw	-4
 13848  016F42  6ED9               	movwf	fsr2l,c
 13849  016F44  50E2               	movf	fsr1h,w,c
 13850  016F46  6EDA               	movwf	fsr2h,c
 13851  016F48  0EFF               	movlw	255
 13852  016F4A  22DA               	addwfc	fsr2h,f,c
 13853  016F4C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13854  016F52  006F FF77 FFF7     	movff	postdec2,tblptrh
 13855  016F58                     	if	0	;tblptru may be non-zero
 13856  016F58                     	endif
 13857  016F58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13858  016F58  0E00               	movlw	low (__mediumconst shr (0+16))
 13859  016F5A  6EF8               	movwf	tblptru,c
 13860  016F5C                     	endif
 13861  016F5C  0008               	tblrd		*
 13862  016F5E  50F5               	movf	tablat,w,c
 13863  016F60  0900               	iorlw	0
 13864  016F62  B4D8               	btfsc	status,2,c
 13865  016F64  D036               	goto	u8310
 13866                           
 13867                           ;stkvar	_n @ sp[(-4)+-6]
 13868  016F66  0EF6               	movlw	-10
 13869  016F68  006F FF8C  F001    	movff	plusw1,btemp
 13870  016F6E  0EF7               	movlw	-9
 13871  016F70  50E3               	movf	plusw1,w,c
 13872  016F72  1001               	iorwf	btemp^0,w,c
 13873  016F74  B4D8               	btfsc	status,2,c
 13874  016F76  D02D               	goto	u8310
 13875                           
 13876                           ;stkvar	_r @ sp[(-4)+0]
 13877  016F78  50E1               	movf	fsr1l,w,c
 13878  016F7A  0FFC               	addlw	-4
 13879  016F7C  6ED9               	movwf	fsr2l,c
 13880  016F7E  50E2               	movf	fsr1h,w,c
 13881  016F80  6EDA               	movwf	fsr2h,c
 13882  016F82  0EFF               	movlw	255
 13883  016F84  22DA               	addwfc	fsr2h,f,c
 13884  016F86  006F FF7B FFF6     	movff	postinc2,tblptrl
 13885  016F8C  006F FF77 FFF7     	movff	postdec2,tblptrh
 13886  016F92                     	if	0	;tblptru may be non-zero
 13887  016F92                     	endif
 13888  016F92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13889  016F92  0E00               	movlw	low (__mediumconst shr (0+16))
 13890  016F94  6EF8               	movwf	tblptru,c
 13891  016F96                     	endif
 13892  016F96  0008               	tblrd		*
 13893  016F98  006F FFD4  F00C    	movff	tablat,btemp+11
 13894                           
 13895                           ;stkvar	_l @ sp[(-4)+2]
 13896  016F9E  0EFE               	movlw	-2
 13897  016FA0  006F FF8F FFF6     	movff	plusw1,tblptrl
 13898  016FA6  0EFF               	movlw	-1
 13899  016FA8  006F FF8F FFF7     	movff	plusw1,tblptrh
 13900  016FAE  0E00               	movlw	low (__mediumconst shr (0+16))
 13901  016FB0  6EF8               	movwf	tblptru,c
 13902  016FB2  0E1F               	movlw	(high __ramtop+-1)
 13903  016FB4  64F7               	cpfsgt	tblptrh,c
 13904  016FB6  D003               	bra	u8317
 13905  016FB8  0008               	tblrd		*
 13906  016FBA  50F5               	movf	tablat,w,c
 13907  016FBC  D007               	bra	u8315
 13908  016FBE                     u8317:
 13909  016FBE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13910  016FC4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13911  016FCA  50EF               	movf	indf0,w,c
 13912  016FCC                     u8315:
 13913  016FCC  180C               	xorwf	(btemp+11)^0,w,c
 13914  016FCE  B4D8               	btfsc	status,2,c
 13915  016FD0  D766               	goto	l8972
 13916  016FD2                     u8310:
 13917                           
 13918                           ;stkvar	_l @ sp[(-4)+2]
 13919  016FD2  0EFE               	movlw	-2
 13920  016FD4  006F FF8F FFF6     	movff	plusw1,tblptrl
 13921  016FDA  0EFF               	movlw	-1
 13922  016FDC  006F FF8F FFF7     	movff	plusw1,tblptrh
 13923  016FE2  0E00               	movlw	low (__mediumconst shr (0+16))
 13924  016FE4  6EF8               	movwf	tblptru,c
 13925  016FE6  0E1F               	movlw	(high __ramtop+-1)
 13926  016FE8  64F7               	cpfsgt	tblptrh,c
 13927  016FEA  D003               	bra	u8327
 13928  016FEC  0008               	tblrd		*
 13929  016FEE  50F5               	movf	tablat,w,c
 13930  016FF0  D007               	bra	u8320
 13931  016FF2                     u8327:
 13932  016FF2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13933  016FF8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13934  016FFE  50EF               	movf	indf0,w,c
 13935  017000                     u8320:
 13936  017000  6E01               	movwf	btemp^0,c
 13937  017002  6A02               	clrf	(btemp+1)^0,c
 13938                           
 13939                           ;stkvar	_r @ sp[(-4)+0]
 13940  017004  50E1               	movf	fsr1l,w,c
 13941  017006  0FFC               	addlw	-4
 13942  017008  6ED9               	movwf	fsr2l,c
 13943  01700A  50E2               	movf	fsr1h,w,c
 13944  01700C  6EDA               	movwf	fsr2h,c
 13945  01700E  0EFF               	movlw	255
 13946  017010  22DA               	addwfc	fsr2h,f,c
 13947  017012  006F FF7B FFF6     	movff	postinc2,tblptrl
 13948  017018  006F FF77 FFF7     	movff	postdec2,tblptrh
 13949  01701E                     	if	0	;tblptru may be non-zero
 13950  01701E                     	endif
 13951  01701E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13952  01701E  0E00               	movlw	low (__mediumconst shr (0+16))
 13953  017020  6EF8               	movwf	tblptru,c
 13954  017022                     	endif
 13955  017022  0008               	tblrd		*
 13956  017024  50F5               	movf	tablat,w,c
 13957  017026  5E01               	subwf	btemp^0,f,c
 13958  017028  0E00               	movlw	0
 13959  01702A  5A02               	subwfb	(btemp+1)^0,f,c
 13960  01702C                     l3391:
 13961                           
 13962                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 13963  01702C  0EF6               	movlw	246
 13964  01702E  26E1               	addwf	fsr1l,f,c
 13965  017030  0EFF               	movlw	255
 13966  017032  22E2               	addwfc	fsr1h,f,c
 13967  017034  0012               	return		;funcret
 13968  017036                     __end_of_strncmp:
 13969                           	opt callstack 0
 13970                           
 13971 ;; *************** function _stoa *****************
 13972 ;; Defined at:
 13973 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13974 ;; Parameters:    Size  Location     Type
 13975 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13976 ;;		 -> f(6), NULL(0), 
 13977 ;;  s               2  [STACK] PTR unsigned char 
 13978 ;;		 -> ?_printf(2), ?_sprintf(2), STR_37(9), STR_36(12), 
 13979 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 13980 ;;		 -> V(188), 
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;  nuls            7  [STACK] unsigned char [7]
 13983 ;;  l               2  [STACK] int 
 13984 ;;  p               2  [STACK] int 
 13985 ;;  cp              2  [STACK] PTR unsigned char 
 13986 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_37(9), 
 13987 ;;		 -> STR_36(12), D.lcd(288), D(290), T(144), 
 13988 ;;		 -> STR_3(6), V(188), 
 13989 ;;  w               2  [STACK] int 
 13990 ;;  i               2  [STACK] int 
 13991 ;; Return value:  Size  Location     Type
 13992 ;;                  2  [STACK] int 
 13993 ;; Registers used:
 13994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13995 ;; Tracked objects:
 13996 ;;		On entry : 0/0
 13997 ;;		On exit  : 0/0
 13998 ;;		Unchanged: 0/0
 13999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14004 ;;Total ram usage:        0 bytes
 14005 ;; Hardware stack levels used:    1
 14006 ;; Hardware stack levels required when called:   18
 14007 ;; This function calls:
 14008 ;;		_fputc
 14009 ;;		_strlen
 14010 ;; This function is called by:
 14011 ;;		_vfpfcnvrt
 14012 ;; This function uses a reentrant model
 14013 ;;
 14014                           
 14015                           	psect	text54
 14016  016424                     __ptext54:
 14017                           	opt callstack 0
 14018  016424                     _stoa:
 14019                           	opt callstack 0
 14020                           
 14021                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14022  016424  0E11               	movlw	17
 14023  016426  26E1               	addwf	fsr1l,f,c
 14024  016428  0E00               	movlw	0
 14025  01642A  22E2               	addwfc	fsr1h,f,c
 14026                           
 14027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14028                           
 14029                           ;incstack = 0
 14030 ;; hardware stack exceeded
 14031  01642C  EE20  F0EC         	lfsr	2,stoa@F1166
 14032                           
 14033                           ;stkvar	_nuls @ sp[(-17)+0]
 14034  016430  0E07               	movlw	7
 14035  016432  6E01               	movwf	btemp^0,c
 14036  016434  0EEF               	movlw	-17
 14037  016436                     us1094999:
 14038  016436  006F FF7B FFE3     	movff	postinc2,plusw1
 14039  01643C  28E8               	incf	wreg,w,c
 14040  01643E  2E01               	decfsz	btemp^0,f,c
 14041  016440  D7FA               	bra	us1094999
 14042                           
 14043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14044                           ;stkvar	_s @ sp[(-17)+-4]
 14045  016442  0EEB               	movlw	-21
 14046  016444  006F FF8C  F00B    	movff	plusw1,btemp+10
 14047  01644A  0EEC               	movlw	-20
 14048  01644C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14049                           
 14050                           ;stkvar	_cp @ sp[(-17)+11]
 14051  016452  0EFB               	movlw	-5
 14052  016454  0060  F033  FFE3   	movff	btemp+11,plusw1
 14053  01645A  0EFA               	movlw	-6
 14054  01645C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14055                           
 14056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14057                           ;stkvar	_cp @ sp[(-17)+11]
 14058  016462  0EFA               	movlw	-6
 14059  016464  006F FF8C  F001    	movff	plusw1,btemp
 14060  01646A  0EFB               	movlw	-5
 14061  01646C  50E3               	movf	plusw1,w,c
 14062  01646E  1001               	iorwf	btemp^0,w,c
 14063  016470  A4D8               	btfss	status,2,c
 14064  016472  D00E               	goto	l11618
 14065                           
 14066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14067                           ;stkvar	_nuls @ sp[(-17)+0]
 14068  016474  0EEF               	movlw	239
 14069  016476  24E1               	addwf	fsr1l,w,c
 14070  016478  6E0B               	movwf	(btemp+10)^0,c
 14071  01647A  0EFF               	movlw	255
 14072  01647C  20E2               	addwfc	fsr1h,w,c
 14073  01647E  6E0C               	movwf	(btemp+11)^0,c
 14074                           
 14075                           ;stkvar	_cp @ sp[(-17)+11]
 14076  016480  0EFB               	movlw	-5
 14077  016482  0060  F033  FFE3   	movff	btemp+11,plusw1
 14078  016488  0EFA               	movlw	-6
 14079  01648A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14080  016490                     l11618:
 14081                           
 14082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14083                           ;stkvar	_cp @ sp[(-17)+11]
 14084  016490  0EFA               	movlw	-6
 14085  016492  006F FF8F FFE6     	movff	plusw1,postinc1
 14086  016498  006F FF8F FFE6     	movff	plusw1,postinc1
 14087  01649E  EC85  F0CC         	call	_strlen	;wreg free
 14088                           
 14089                           ;stkvar	_l @ sp[(-17)+7]
 14090  0164A2  0EF6               	movlw	-10
 14091  0164A4  0060  F007  FFE3   	movff	btemp,plusw1
 14092  0164AA  0EF7               	movlw	-9
 14093  0164AC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14094                           
 14095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14096                           ;stkvar	_p @ sp[(-17)+9]
 14097  0164B2  0EF8               	movlw	-8
 14098  0164B4  0060  F08F  FFE3   	movff	_prec,plusw1
 14099  0164BA  0EF9               	movlw	-7
 14100  0164BC  0060  F093  FFE3   	movff	_prec+1,plusw1
 14101                           
 14102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14103                           ;stkvar	_p @ sp[(-17)+9]
 14104  0164C2  0EF9               	movlw	-7
 14105  0164C4  BEE3               	btfsc	plusw1,7,c
 14106  0164C6  D023               	goto	l2216
 14107                           
 14108                           ;stkvar	_l @ sp[(-17)+7]
 14109                           ;stkvar	_p @ sp[(-17)+9]
 14110  0164C8  50E1               	movf	fsr1l,w,c
 14111  0164CA  0FF8               	addlw	-8
 14112  0164CC  6ED9               	movwf	fsr2l,c
 14113  0164CE  50E2               	movf	fsr1h,w,c
 14114  0164D0  6EDA               	movwf	fsr2h,c
 14115  0164D2  0EFF               	movlw	255
 14116  0164D4  22DA               	addwfc	fsr2h,f,c
 14117  0164D6  0EF6               	movlw	-10
 14118  0164D8  50E3               	movf	plusw1,w,c
 14119  0164DA  5CDE               	subwf	postinc2,w,c
 14120  0164DC  50DE               	movf	postinc2,w,c
 14121  0164DE  0A80               	xorlw	128
 14122  0164E0  6E01               	movwf	btemp^0,c
 14123  0164E2  0EF7               	movlw	-9
 14124  0164E4  50E3               	movf	plusw1,w,c
 14125  0164E6  0A80               	xorlw	128
 14126  0164E8  5801               	subwfb	btemp^0,w,c
 14127  0164EA  B0D8               	btfsc	status,0,c
 14128  0164EC  D010               	goto	l2216
 14129                           
 14130                           ;stkvar	_p @ sp[(-17)+9]
 14131                           ;stkvar	_l @ sp[(-17)+7]
 14132  0164EE  0EF8               	movlw	-8
 14133  0164F0  006F FF8C  F001    	movff	plusw1,btemp
 14134  0164F6  0EF6               	movlw	-10
 14135  0164F8  0060  F007  FFE3   	movff	btemp,plusw1
 14136  0164FE  0EF9               	movlw	-7
 14137  016500  006F FF8C  F001    	movff	plusw1,btemp
 14138  016506  0EF7               	movlw	-9
 14139  016508  0060  F007  FFE3   	movff	btemp,plusw1
 14140  01650E                     l2216:
 14141                           
 14142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14143                           ;stkvar	_l @ sp[(-17)+7]
 14144                           ;stkvar	_p @ sp[(-17)+9]
 14145  01650E  0EF6               	movlw	-10
 14146  016510  006F FF8C  F001    	movff	plusw1,btemp
 14147  016516  0EF8               	movlw	-8
 14148  016518  0060  F007  FFE3   	movff	btemp,plusw1
 14149  01651E  0EF7               	movlw	-9
 14150  016520  006F FF8C  F001    	movff	plusw1,btemp
 14151  016526  0EF9               	movlw	-7
 14152  016528  0060  F007  FFE3   	movff	btemp,plusw1
 14153                           
 14154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14155                           ;stkvar	_w @ sp[(-17)+13]
 14156  01652E  0EFC               	movlw	-4
 14157  016530  0060  F087  FFE3   	movff	_width,plusw1
 14158  016536  0EFD               	movlw	-3
 14159  016538  0060  F08B  FFE3   	movff	_width+1,plusw1
 14160                           
 14161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14162  01653E  A025               	btfss	_flags^0,0,c
 14163  016540  D01F               	goto	l11638
 14164  016542  D031               	goto	u10990
 14165  016544                     l11634:
 14166                           
 14167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14168                           ;stkvar	_fp @ sp[(-17)+-2]
 14169  016544  0EED               	movlw	-19
 14170  016546  006F FF8F FFE6     	movff	plusw1,postinc1
 14171  01654C  006F FF8F FFE6     	movff	plusw1,postinc1
 14172  016552  0E20               	movlw	32
 14173  016554  6EE6               	movwf	postinc1,c
 14174  016556  0E00               	movlw	0
 14175  016558  6EE6               	movwf	postinc1,c
 14176  01655A  EC8B  F0C4         	call	_fputc	;wreg free
 14177                           
 14178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14179                           ;stkvar	_l @ sp[(-17)+7]
 14180  01655E  0EF6               	movlw	-10
 14181  016560  50E3               	movf	plusw1,w,c
 14182  016562  0F01               	addlw	1
 14183  016564  6E01               	movwf	btemp^0,c
 14184  016566  0EF6               	movlw	-10
 14185  016568  0060  F007  FFE3   	movff	btemp,plusw1
 14186  01656E  6A01               	clrf	btemp^0,c
 14187  016570  0EF7               	movlw	-9
 14188  016572  50E3               	movf	plusw1,w,c
 14189  016574  2001               	addwfc	btemp^0,w,c
 14190  016576  6E01               	movwf	btemp^0,c
 14191  016578  0EF7               	movlw	-9
 14192  01657A  0060  F007  FFE3   	movff	btemp,plusw1
 14193  016580                     l11638:
 14194                           
 14195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 14196                           ;stkvar	_w @ sp[(-17)+13]
 14197                           ;stkvar	_l @ sp[(-17)+7]
 14198  016580  50E1               	movf	fsr1l,w,c
 14199  016582  0FF6               	addlw	-10
 14200  016584  6ED9               	movwf	fsr2l,c
 14201  016586  50E2               	movf	fsr1h,w,c
 14202  016588  6EDA               	movwf	fsr2h,c
 14203  01658A  0EFF               	movlw	255
 14204  01658C  22DA               	addwfc	fsr2h,f,c
 14205  01658E  0EFC               	movlw	-4
 14206  016590  50E3               	movf	plusw1,w,c
 14207  016592  5CDE               	subwf	postinc2,w,c
 14208  016594  50DE               	movf	postinc2,w,c
 14209  016596  0A80               	xorlw	128
 14210  016598  6E01               	movwf	btemp^0,c
 14211  01659A  0EFD               	movlw	-3
 14212  01659C  50E3               	movf	plusw1,w,c
 14213  01659E  0A80               	xorlw	128
 14214  0165A0  5801               	subwfb	btemp^0,w,c
 14215  0165A2  A0D8               	btfss	status,0,c
 14216  0165A4  D7CF               	goto	l11634
 14217  0165A6                     u10990:
 14218                           
 14219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 14220                           ;stkvar	_i @ sp[(-17)+15]
 14221  0165A6  0EFE               	movlw	-2
 14222  0165A8  6AE3               	clrf	plusw1,c
 14223  0165AA  0EFF               	movlw	-1
 14224  0165AC  6AE3               	clrf	plusw1,c
 14225                           
 14226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14227  0165AE  D045               	goto	l11648
 14228  0165B0                     l11642:
 14229                           
 14230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 14231                           ;stkvar	_fp @ sp[(-17)+-2]
 14232  0165B0  0EED               	movlw	-19
 14233  0165B2  006F FF8F FFE6     	movff	plusw1,postinc1
 14234  0165B8  006F FF8F FFE6     	movff	plusw1,postinc1
 14235                           
 14236                           ;stkvar	_cp @ sp[(-19)+11]
 14237  0165BE  0EF8               	movlw	-8
 14238  0165C0  006F FF8F FFF6     	movff	plusw1,tblptrl
 14239  0165C6  0EF9               	movlw	-7
 14240  0165C8  006F FF8F FFF7     	movff	plusw1,tblptrh
 14241  0165CE  0E00               	movlw	low (__mediumconst shr (0+16))
 14242  0165D0  6EF8               	movwf	tblptru,c
 14243  0165D2  0E1F               	movlw	(high __ramtop+-1)
 14244  0165D4  64F7               	cpfsgt	tblptrh,c
 14245  0165D6  D003               	bra	u11007
 14246  0165D8  0008               	tblrd		*
 14247  0165DA  50F5               	movf	tablat,w,c
 14248  0165DC  D007               	bra	u11000
 14249  0165DE                     u11007:
 14250  0165DE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14251  0165E4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14252  0165EA  50EF               	movf	indf0,w,c
 14253  0165EC                     u11000:
 14254  0165EC  6EE6               	movwf	postinc1,c
 14255  0165EE  0E00               	movlw	0
 14256  0165F0  6EE6               	movwf	postinc1,c
 14257  0165F2  EC8B  F0C4         	call	_fputc	;wreg free
 14258                           
 14259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 14260                           ;stkvar	_cp @ sp[(-17)+11]
 14261  0165F6  0EFA               	movlw	-6
 14262  0165F8  50E3               	movf	plusw1,w,c
 14263  0165FA  0F01               	addlw	1
 14264  0165FC  6E01               	movwf	btemp^0,c
 14265  0165FE  0EFA               	movlw	-6
 14266  016600  0060  F007  FFE3   	movff	btemp,plusw1
 14267  016606  6A01               	clrf	btemp^0,c
 14268  016608  0EFB               	movlw	-5
 14269  01660A  50E3               	movf	plusw1,w,c
 14270  01660C  2001               	addwfc	btemp^0,w,c
 14271  01660E  6E01               	movwf	btemp^0,c
 14272  016610  0EFB               	movlw	-5
 14273  016612  0060  F007  FFE3   	movff	btemp,plusw1
 14274                           
 14275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 14276                           ;stkvar	_i @ sp[(-17)+15]
 14277  016618  0EFE               	movlw	-2
 14278  01661A  50E3               	movf	plusw1,w,c
 14279  01661C  0F01               	addlw	1
 14280  01661E  6E01               	movwf	btemp^0,c
 14281  016620  0EFE               	movlw	-2
 14282  016622  0060  F007  FFE3   	movff	btemp,plusw1
 14283  016628  6A01               	clrf	btemp^0,c
 14284  01662A  0EFF               	movlw	-1
 14285  01662C  50E3               	movf	plusw1,w,c
 14286  01662E  2001               	addwfc	btemp^0,w,c
 14287  016630  6E01               	movwf	btemp^0,c
 14288  016632  0EFF               	movlw	-1
 14289  016634  0060  F007  FFE3   	movff	btemp,plusw1
 14290  01663A                     l11648:
 14291                           
 14292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14293                           ;stkvar	_p @ sp[(-17)+9]
 14294                           ;stkvar	_i @ sp[(-17)+15]
 14295  01663A  50E1               	movf	fsr1l,w,c
 14296  01663C  0FFE               	addlw	-2
 14297  01663E  6ED9               	movwf	fsr2l,c
 14298  016640  50E2               	movf	fsr1h,w,c
 14299  016642  6EDA               	movwf	fsr2h,c
 14300  016644  0EFF               	movlw	255
 14301  016646  22DA               	addwfc	fsr2h,f,c
 14302  016648  0EF8               	movlw	-8
 14303  01664A  50E3               	movf	plusw1,w,c
 14304  01664C  5CDE               	subwf	postinc2,w,c
 14305  01664E  50DE               	movf	postinc2,w,c
 14306  016650  0A80               	xorlw	128
 14307  016652  6E01               	movwf	btemp^0,c
 14308  016654  0EF9               	movlw	-7
 14309  016656  50E3               	movf	plusw1,w,c
 14310  016658  0A80               	xorlw	128
 14311  01665A  5801               	subwfb	btemp^0,w,c
 14312  01665C  A0D8               	btfss	status,0,c
 14313  01665E  D7A8               	goto	l11642
 14314                           
 14315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 14316  016660  B025               	btfsc	_flags^0,0,c
 14317  016662  D01F               	goto	l11656
 14318  016664  D031               	goto	u11030
 14319  016666                     l11652:
 14320                           
 14321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 14322                           ;stkvar	_fp @ sp[(-17)+-2]
 14323  016666  0EED               	movlw	-19
 14324  016668  006F FF8F FFE6     	movff	plusw1,postinc1
 14325  01666E  006F FF8F FFE6     	movff	plusw1,postinc1
 14326  016674  0E20               	movlw	32
 14327  016676  6EE6               	movwf	postinc1,c
 14328  016678  0E00               	movlw	0
 14329  01667A  6EE6               	movwf	postinc1,c
 14330  01667C  EC8B  F0C4         	call	_fputc	;wreg free
 14331                           
 14332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 14333                           ;stkvar	_l @ sp[(-17)+7]
 14334  016680  0EF6               	movlw	-10
 14335  016682  50E3               	movf	plusw1,w,c
 14336  016684  0F01               	addlw	1
 14337  016686  6E01               	movwf	btemp^0,c
 14338  016688  0EF6               	movlw	-10
 14339  01668A  0060  F007  FFE3   	movff	btemp,plusw1
 14340  016690  6A01               	clrf	btemp^0,c
 14341  016692  0EF7               	movlw	-9
 14342  016694  50E3               	movf	plusw1,w,c
 14343  016696  2001               	addwfc	btemp^0,w,c
 14344  016698  6E01               	movwf	btemp^0,c
 14345  01669A  0EF7               	movlw	-9
 14346  01669C  0060  F007  FFE3   	movff	btemp,plusw1
 14347  0166A2                     l11656:
 14348                           
 14349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 14350                           ;stkvar	_w @ sp[(-17)+13]
 14351                           ;stkvar	_l @ sp[(-17)+7]
 14352  0166A2  50E1               	movf	fsr1l,w,c
 14353  0166A4  0FF6               	addlw	-10
 14354  0166A6  6ED9               	movwf	fsr2l,c
 14355  0166A8  50E2               	movf	fsr1h,w,c
 14356  0166AA  6EDA               	movwf	fsr2h,c
 14357  0166AC  0EFF               	movlw	255
 14358  0166AE  22DA               	addwfc	fsr2h,f,c
 14359  0166B0  0EFC               	movlw	-4
 14360  0166B2  50E3               	movf	plusw1,w,c
 14361  0166B4  5CDE               	subwf	postinc2,w,c
 14362  0166B6  50DE               	movf	postinc2,w,c
 14363  0166B8  0A80               	xorlw	128
 14364  0166BA  6E01               	movwf	btemp^0,c
 14365  0166BC  0EFD               	movlw	-3
 14366  0166BE  50E3               	movf	plusw1,w,c
 14367  0166C0  0A80               	xorlw	128
 14368  0166C2  5801               	subwfb	btemp^0,w,c
 14369  0166C4  A0D8               	btfss	status,0,c
 14370  0166C6  D7CF               	goto	l11652
 14371  0166C8                     u11030:
 14372                           
 14373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 14374                           ;stkvar	_l @ sp[(-17)+7]
 14375  0166C8  0EF6               	movlw	-10
 14376  0166CA  006F FF8C  F001    	movff	plusw1,btemp
 14377  0166D0  0EF7               	movlw	-9
 14378  0166D2  006F FF8C  F002    	movff	plusw1,btemp+1
 14379                           
 14380                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 14381  0166D8  0EEB               	movlw	235
 14382  0166DA  26E1               	addwf	fsr1l,f,c
 14383  0166DC  0EFF               	movlw	255
 14384  0166DE  22E2               	addwfc	fsr1h,f,c
 14385  0166E0  0012               	return		;funcret
 14386  0166E2                     __end_of_stoa:
 14387                           	opt callstack 0
 14388                           
 14389 ;; *************** function _efgtoa *****************
 14390 ;; Defined at:
 14391 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14392 ;; Parameters:    Size  Location     Type
 14393 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14394 ;;		 -> f(6), NULL(0), 
 14395 ;;  f               4  [STACK] PTR struct _IO_FILE
 14396 ;;  c               1  [STACK] unsigned char 
 14397 ;; Auto vars:     Size  Location     Type
 14398 ;;  u               4  [STACK] unsigned char 
 14399 ;;  g               4  [STACK] unsigned char 
 14400 ;;  l               4  [STACK] unsigned char 
 14401 ;;  h               4  [STACK] unsigned char 
 14402 ;;  ou              4  [STACK] unsigned char 
 14403 ;;  n               2  [STACK] int 
 14404 ;;  e               2  [STACK] int 
 14405 ;;  i               2  [STACK] int 
 14406 ;;  w               2  [STACK] int 
 14407 ;;  p               2  [STACK] int 
 14408 ;;  sign            2  [STACK] int 
 14409 ;;  d               2  [STACK] int 
 14410 ;;  ne              2  [STACK] int 
 14411 ;;  m               2  [STACK] int 
 14412 ;;  pp              2  [STACK] int 
 14413 ;;  t               2  [STACK] int 
 14414 ;;  mode            1  [STACK] unsigned char 
 14415 ;;  nmode           1  [STACK] unsigned char 
 14416 ;; Return value:  Size  Location     Type
 14417 ;;                  2  [STACK] int 
 14418 ;; Registers used:
 14419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14420 ;; Tracked objects:
 14421 ;;		On entry : 0/0
 14422 ;;		On exit  : 0/0
 14423 ;;		Unchanged: 0/0
 14424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14429 ;;Total ram usage:        0 bytes
 14430 ;; Hardware stack levels used:    1
 14431 ;; Hardware stack levels required when called:   20
 14432 ;; This function calls:
 14433 ;;		___awdiv
 14434 ;;		___awmod
 14435 ;;		___fladd
 14436 ;;		___fldiv
 14437 ;;		___fleq
 14438 ;;		___flge
 14439 ;;		___flmul
 14440 ;;		___flneg
 14441 ;;		___flsub
 14442 ;;		___fltol
 14443 ;;		___fpclassifyf
 14444 ;;		_floorf
 14445 ;;		_isupper
 14446 ;;		_pad
 14447 ;;		_strcpy
 14448 ;;		_tolower
 14449 ;; This function is called by:
 14450 ;;		_vfpfcnvrt
 14451 ;; This function uses a reentrant model
 14452 ;;
 14453                           
 14454                           	psect	text55
 14455  010000                     __ptext55:
 14456                           	opt callstack 0
 14457  010000                     _efgtoa:
 14458                           	opt callstack 0
 14459                           
 14460                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14461  010000  0E38               	movlw	56
 14462  010002  26E1               	addwf	fsr1l,f,c
 14463  010004  0E00               	movlw	0
 14464  010006  22E2               	addwfc	fsr1h,f,c
 14465                           
 14466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 14467                           ;stkvar	_sign @ sp[(-56)+42]
 14468                           
 14469                           ;incstack = 0
 14470 ;; hardware stack exceeded
 14471  010008  0EF2               	movlw	-14
 14472  01000A  6AE3               	clrf	plusw1,c
 14473  01000C  0EF3               	movlw	-13
 14474  01000E  6AE3               	clrf	plusw1,c
 14475                           
 14476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 14477                           ;stkvar	_f @ sp[(-56)+-6]
 14478  010010  0EC2               	movlw	-62
 14479  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 14480  010018  0EC3               	movlw	-61
 14481  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14482  010020  0EC4               	movlw	-60
 14483  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 14484  010028  0EC5               	movlw	-59
 14485  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14486                           
 14487                           ;stkvar	_g @ sp[(-56)+16]
 14488  010030  0ED8               	movlw	-40
 14489  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 14490  010038  0ED9               	movlw	-39
 14491  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14492  010040  0EDA               	movlw	-38
 14493  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14494  010048  0EDB               	movlw	-37
 14495  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14496                           
 14497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 14498                           ;stkvar	_g @ sp[(-56)+16]
 14499  010050  0EDB               	movlw	-37
 14500  010052  AEE3               	btfss	plusw1,7,c
 14501  010054  D02B               	goto	l11316
 14502                           
 14503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 14504  010056  0E01               	movlw	1
 14505  010058  6E0B               	movwf	(btemp+10)^0,c
 14506  01005A  0E00               	movlw	0
 14507  01005C  6E0C               	movwf	(btemp+11)^0,c
 14508                           
 14509                           ;stkvar	_sign @ sp[(-56)+42]
 14510  01005E  0EF2               	movlw	-14
 14511  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14512  010066  0EF3               	movlw	-13
 14513  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 14514                           
 14515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 14516                           ;stkvar	_g @ sp[(-56)+16]
 14517  01006E  0ED8               	movlw	-40
 14518  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 14519  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 14520  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 14521  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 14522  010088  EC30  F0D2         	call	___flneg	;wreg free
 14523                           
 14524                           ;stkvar	_g @ sp[(-56)+16]
 14525  01008C  0ED8               	movlw	-40
 14526  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 14527  010094  0ED9               	movlw	-39
 14528  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14529  01009C  0EDA               	movlw	-38
 14530  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14531  0100A4  0EDB               	movlw	-37
 14532  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 14533  0100AC                     l11316:
 14534                           
 14535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 14536                           ;stkvar	_n @ sp[(-56)+32]
 14537  0100AC  0EE8               	movlw	-24
 14538  0100AE  6AE3               	clrf	plusw1,c
 14539  0100B0  0EE9               	movlw	-23
 14540  0100B2  6AE3               	clrf	plusw1,c
 14541                           
 14542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 14543                           ;stkvar	_w @ sp[(-56)+38]
 14544  0100B4  0EEE               	movlw	-18
 14545  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 14546  0100BC  0EEF               	movlw	-17
 14547  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 14548                           
 14549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 14550                           ;stkvar	_sign @ sp[(-56)+42]
 14551  0100C4  0EF2               	movlw	-14
 14552  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 14553  0100CC  0EF3               	movlw	-13
 14554  0100CE  50E3               	movf	plusw1,w,c
 14555  0100D0  1001               	iorwf	btemp^0,w,c
 14556  0100D2  A4D8               	btfss	status,2,c
 14557  0100D4  D002               	goto	u10440
 14558  0100D6  A425               	btfss	_flags^0,2,c
 14559  0100D8  D036               	goto	l11336
 14560  0100DA                     u10440:
 14561                           
 14562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 14563                           ;stkvar	_sign @ sp[(-56)+42]
 14564  0100DA  0EF2               	movlw	-14
 14565  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 14566  0100E2  0EF3               	movlw	-13
 14567  0100E4  50E3               	movf	plusw1,w,c
 14568  0100E6  1001               	iorwf	btemp^0,w,c
 14569  0100E8  A4D8               	btfss	status,2,c
 14570  0100EA  D002               	goto	l11328
 14571  0100EC  0E2B               	movlw	43
 14572  0100EE  D001               	goto	L11
 14573  0100F0                     l11328:
 14574  0100F0  0E2D               	movlw	45
 14575  0100F2                     L11:
 14576  0100F2  6E0B               	movwf	(btemp+10)^0,c
 14577  0100F4  0E00               	movlw	0
 14578  0100F6  6E0C               	movwf	(btemp+11)^0,c
 14579                           
 14580                           ;stkvar	_efgtoa$5299 @ sp[(-56)+10]
 14581  0100F8  0ED2               	movlw	-46
 14582  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14583  010100  0ED3               	movlw	-45
 14584  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 14585                           
 14586                           ;stkvar	_efgtoa$5299 @ sp[(-56)+10]
 14587  010108  0ED2               	movlw	-46
 14588  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 14589                           
 14590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 14591                           ;stkvar	_n @ sp[(-56)+32]
 14592  010110  0EE8               	movlw	-24
 14593  010112  50E3               	movf	plusw1,w,c
 14594  010114  0F01               	addlw	1
 14595  010116  6E01               	movwf	btemp^0,c
 14596  010118  0EE8               	movlw	-24
 14597  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 14598  010120  6A01               	clrf	btemp^0,c
 14599  010122  0EE9               	movlw	-23
 14600  010124  50E3               	movf	plusw1,w,c
 14601  010126  2001               	addwfc	btemp^0,w,c
 14602  010128  6E01               	movwf	btemp^0,c
 14603  01012A  0EE9               	movlw	-23
 14604  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 14605                           
 14606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 14607                           ;stkvar	_w @ sp[(-56)+38]
 14608  010132  50E1               	movf	fsr1l,w,c
 14609  010134  0FEE               	addlw	-18
 14610  010136  6ED9               	movwf	fsr2l,c
 14611  010138  50E2               	movf	fsr1h,w,c
 14612  01013A  6EDA               	movwf	fsr2h,c
 14613  01013C  0EFF               	movlw	255
 14614  01013E  22DA               	addwfc	fsr2h,f,c
 14615  010140  06DE               	decf	postinc2,f,c
 14616  010142  0E00               	movlw	0
 14617  010144  5ADD               	subwfb	postdec2,f,c
 14618  010146                     l11336:
 14619                           
 14620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14621                           ;stkvar	_g @ sp[(-56)+16]
 14622  010146  0ED8               	movlw	-40
 14623  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 14624  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 14625  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 14626  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 14627  010160  ECF7  F0BC         	call	___fpclassifyf	;wreg free
 14628  010164  0401               	decf	btemp^0,w,c
 14629  010166  1002               	iorwf	(btemp+1)^0,w,c
 14630  010168  A4D8               	btfss	status,2,c
 14631  01016A  D076               	goto	l11354
 14632  01016C  0EBF               	movlw	191
 14633  01016E  6E0B               	movwf	(btemp+10)^0,c
 14634  010170  0EFF               	movlw	255
 14635  010172  6E0C               	movwf	(btemp+11)^0,c
 14636                           
 14637                           ;stkvar	_c @ sp[(-56)+-7]
 14638  010174  0EC1               	movlw	-63
 14639  010176  50E3               	movf	plusw1,w,c
 14640  010178  6E09               	movwf	(btemp+8)^0,c
 14641  01017A  6A0A               	clrf	(btemp+9)^0,c
 14642  01017C  500B               	movf	(btemp+10)^0,w,c
 14643  01017E  2609               	addwf	(btemp+8)^0,f,c
 14644  010180  500C               	movf	(btemp+11)^0,w,c
 14645  010182  220A               	addwfc	(btemp+9)^0,f,c
 14646  010184  500A               	movf	(btemp+9)^0,w,c
 14647  010186  E106               	bnz	u10470
 14648  010188  0E1A               	movlw	26
 14649  01018A  5C09               	subwf	(btemp+8)^0,w,c
 14650  01018C  B0D8               	btfsc	status,0,c
 14651  01018E  D002               	goto	u10470
 14652  010190  0E01               	movlw	1
 14653  010192  D001               	goto	u10480
 14654  010194                     u10470:
 14655  010194  0E00               	movlw	0
 14656  010196                     u10480:
 14657  010196  6E0B               	movwf	(btemp+10)^0,c
 14658  010198  6A0C               	clrf	(btemp+11)^0,c
 14659                           
 14660                           ;stkvar	_efgtoa$5300 @ sp[(-56)+8]
 14661  01019A  0ED0               	movlw	-48
 14662  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14663  0101A2  0ED1               	movlw	-47
 14664  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14665                           
 14666                           ;stkvar	_efgtoa$5300 @ sp[(-56)+8]
 14667  0101AA  0ED0               	movlw	-48
 14668  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 14669  0101B2  0ED1               	movlw	-47
 14670  0101B4  50E3               	movf	plusw1,w,c
 14671  0101B6  1001               	iorwf	btemp^0,w,c
 14672  0101B8  B4D8               	btfsc	status,2,c
 14673  0101BA  D017               	goto	l11346
 14674                           
 14675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 14676  0101BC  0ED6               	movlw	low STR_56
 14677  0101BE  6EE6               	movwf	postinc1,c
 14678  0101C0  0EFF               	movlw	high STR_56
 14679  0101C2  6EE6               	movwf	postinc1,c
 14680                           
 14681                           ;stkvar	_n @ sp[(-58)+32]
 14682  0101C4  0E94               	movlw	low _dbuf
 14683  0101C6  6E0B               	movwf	(btemp+10)^0,c
 14684  0101C8  0E03               	movlw	high _dbuf
 14685  0101CA  6E0C               	movwf	(btemp+11)^0,c
 14686  0101CC  0EE6               	movlw	-26
 14687  0101CE  50E3               	movf	plusw1,w,c
 14688  0101D0  260B               	addwf	(btemp+10)^0,f,c
 14689  0101D2  0EE7               	movlw	-25
 14690  0101D4  50E3               	movf	plusw1,w,c
 14691  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 14692  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14693  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14694  0101E4  ECAA  F0C9         	call	_strcpy	;wreg free
 14695                           
 14696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 14697  0101E8  D016               	goto	l11348
 14698  0101EA                     l11346:
 14699                           
 14700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 14701  0101EA  0EDE               	movlw	low STR_57
 14702  0101EC  6EE6               	movwf	postinc1,c
 14703  0101EE  0EFF               	movlw	high STR_57
 14704  0101F0  6EE6               	movwf	postinc1,c
 14705                           
 14706                           ;stkvar	_n @ sp[(-58)+32]
 14707  0101F2  0E94               	movlw	low _dbuf
 14708  0101F4  6E0B               	movwf	(btemp+10)^0,c
 14709  0101F6  0E03               	movlw	high _dbuf
 14710  0101F8  6E0C               	movwf	(btemp+11)^0,c
 14711  0101FA  0EE6               	movlw	-26
 14712  0101FC  50E3               	movf	plusw1,w,c
 14713  0101FE  260B               	addwf	(btemp+10)^0,f,c
 14714  010200  0EE7               	movlw	-25
 14715  010202  50E3               	movf	plusw1,w,c
 14716  010204  220C               	addwfc	(btemp+11)^0,f,c
 14717  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14718  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14719  010212  ECAA  F0C9         	call	_strcpy	;wreg free
 14720  010216                     l11348:
 14721                           
 14722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 14723                           ;stkvar	_w @ sp[(-56)+38]
 14724  010216  50E1               	movf	fsr1l,w,c
 14725  010218  0FEE               	addlw	-18
 14726  01021A  6ED9               	movwf	fsr2l,c
 14727  01021C  50E2               	movf	fsr1h,w,c
 14728  01021E  6EDA               	movwf	fsr2h,c
 14729  010220  0EFF               	movlw	255
 14730  010222  22DA               	addwfc	fsr2h,f,c
 14731  010224  0EFD               	movlw	253
 14732  010226  26DE               	addwf	postinc2,f,c
 14733  010228  0EFF               	movlw	255
 14734  01022A  22DD               	addwfc	postdec2,f,c
 14735  01022C                     l11350:
 14736                           
 14737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 14738                           ;stkvar	_w @ sp[(-56)+38]
 14739  01022C  0EEE               	movlw	-18
 14740  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 14741  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 14742  01023A  0E94               	movlw	low _dbuf
 14743  01023C  6EE6               	movwf	postinc1,c
 14744  01023E  0E03               	movlw	high _dbuf
 14745  010240  6EE6               	movwf	postinc1,c
 14746                           
 14747                           ;stkvar	_fp @ sp[(-60)+-2]
 14748  010242  0EC2               	movlw	-62
 14749  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 14750  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 14751  010250  ECA9  F0C5         	call	_pad	;wreg free
 14752  010254  EF1D  F089         	goto	l2134
 14753  010258                     l11354:
 14754                           
 14755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14756                           ;stkvar	_g @ sp[(-56)+16]
 14757  010258  0ED8               	movlw	-40
 14758  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 14759  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 14760  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 14761  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 14762  010272  ECF7  F0BC         	call	___fpclassifyf	;wreg free
 14763  010276  5001               	movf	btemp^0,w,c
 14764  010278  1002               	iorwf	(btemp+1)^0,w,c
 14765  01027A  A4D8               	btfss	status,2,c
 14766  01027C  D056               	goto	l11372
 14767  01027E  0EBF               	movlw	191
 14768  010280  6E0B               	movwf	(btemp+10)^0,c
 14769  010282  0EFF               	movlw	255
 14770  010284  6E0C               	movwf	(btemp+11)^0,c
 14771                           
 14772                           ;stkvar	_c @ sp[(-56)+-7]
 14773  010286  0EC1               	movlw	-63
 14774  010288  50E3               	movf	plusw1,w,c
 14775  01028A  6E09               	movwf	(btemp+8)^0,c
 14776  01028C  6A0A               	clrf	(btemp+9)^0,c
 14777  01028E  500B               	movf	(btemp+10)^0,w,c
 14778  010290  2609               	addwf	(btemp+8)^0,f,c
 14779  010292  500C               	movf	(btemp+11)^0,w,c
 14780  010294  220A               	addwfc	(btemp+9)^0,f,c
 14781  010296  500A               	movf	(btemp+9)^0,w,c
 14782  010298  E106               	bnz	u10510
 14783  01029A  0E1A               	movlw	26
 14784  01029C  5C09               	subwf	(btemp+8)^0,w,c
 14785  01029E  B0D8               	btfsc	status,0,c
 14786  0102A0  D002               	goto	u10510
 14787  0102A2  0E01               	movlw	1
 14788  0102A4  D001               	goto	u10520
 14789  0102A6                     u10510:
 14790  0102A6  0E00               	movlw	0
 14791  0102A8                     u10520:
 14792  0102A8  6E0B               	movwf	(btemp+10)^0,c
 14793  0102AA  6A0C               	clrf	(btemp+11)^0,c
 14794                           
 14795                           ;stkvar	_efgtoa$5304 @ sp[(-56)+6]
 14796  0102AC  0ECE               	movlw	-50
 14797  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14798  0102B4  0ECF               	movlw	-49
 14799  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 14800                           
 14801                           ;stkvar	_efgtoa$5304 @ sp[(-56)+6]
 14802  0102BC  0ECE               	movlw	-50
 14803  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 14804  0102C4  0ECF               	movlw	-49
 14805  0102C6  50E3               	movf	plusw1,w,c
 14806  0102C8  1001               	iorwf	btemp^0,w,c
 14807  0102CA  B4D8               	btfsc	status,2,c
 14808  0102CC  D017               	goto	l11364
 14809                           
 14810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 14811  0102CE  0EDA               	movlw	low STR_60
 14812  0102D0  6EE6               	movwf	postinc1,c
 14813  0102D2  0EFF               	movlw	high STR_60
 14814  0102D4  6EE6               	movwf	postinc1,c
 14815                           
 14816                           ;stkvar	_n @ sp[(-58)+32]
 14817  0102D6  0E94               	movlw	low _dbuf
 14818  0102D8  6E0B               	movwf	(btemp+10)^0,c
 14819  0102DA  0E03               	movlw	high _dbuf
 14820  0102DC  6E0C               	movwf	(btemp+11)^0,c
 14821  0102DE  0EE6               	movlw	-26
 14822  0102E0  50E3               	movf	plusw1,w,c
 14823  0102E2  260B               	addwf	(btemp+10)^0,f,c
 14824  0102E4  0EE7               	movlw	-25
 14825  0102E6  50E3               	movf	plusw1,w,c
 14826  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 14827  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14828  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 14829  0102F6  ECAA  F0C9         	call	_strcpy	;wreg free
 14830                           
 14831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 14832  0102FA  D78D               	goto	l11348
 14833  0102FC                     l11364:
 14834                           
 14835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 14836  0102FC  0EE2               	movlw	low STR_61
 14837  0102FE  6EE6               	movwf	postinc1,c
 14838  010300  0EFF               	movlw	high STR_61
 14839  010302  6EE6               	movwf	postinc1,c
 14840                           
 14841                           ;stkvar	_n @ sp[(-58)+32]
 14842  010304  0E94               	movlw	low _dbuf
 14843  010306  6E0B               	movwf	(btemp+10)^0,c
 14844  010308  0E03               	movlw	high _dbuf
 14845  01030A  6E0C               	movwf	(btemp+11)^0,c
 14846  01030C  0EE6               	movlw	-26
 14847  01030E  50E3               	movf	plusw1,w,c
 14848  010310  260B               	addwf	(btemp+10)^0,f,c
 14849  010312  0EE7               	movlw	-25
 14850  010314  50E3               	movf	plusw1,w,c
 14851  010316  220C               	addwfc	(btemp+11)^0,f,c
 14852  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14853  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 14854  010324  ECAA  F0C9         	call	_strcpy	;wreg free
 14855  010328  D776               	goto	l11348
 14856  01032A                     l11372:
 14857                           
 14858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 14859  01032A  0E00               	movlw	0
 14860  01032C  6E09               	movwf	(btemp+8)^0,c
 14861  01032E  0E00               	movlw	0
 14862  010330  6E0A               	movwf	(btemp+9)^0,c
 14863  010332  0E80               	movlw	128
 14864  010334  6E0B               	movwf	(btemp+10)^0,c
 14865  010336  0E3F               	movlw	63
 14866  010338  6E0C               	movwf	(btemp+11)^0,c
 14867                           
 14868                           ;stkvar	_u @ sp[(-56)+12]
 14869  01033A  0ED4               	movlw	-44
 14870  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 14871  010342  0ED5               	movlw	-43
 14872  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14873  01034A  0ED6               	movlw	-42
 14874  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14875  010352  0ED7               	movlw	-41
 14876  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 14877                           
 14878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 14879                           ;stkvar	_e @ sp[(-56)+34]
 14880  01035A  0EEA               	movlw	-22
 14881  01035C  6AE3               	clrf	plusw1,c
 14882  01035E  0EEB               	movlw	-21
 14883  010360  6AE3               	clrf	plusw1,c
 14884                           
 14885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 14886  010362  0E00               	movlw	0
 14887  010364  6EE6               	movwf	postinc1,c
 14888  010366  0E00               	movlw	0
 14889  010368  6EE6               	movwf	postinc1,c
 14890  01036A  0E00               	movlw	0
 14891  01036C  6EE6               	movwf	postinc1,c
 14892  01036E  0E00               	movlw	0
 14893  010370  6EE6               	movwf	postinc1,c
 14894                           
 14895                           ;stkvar	_g @ sp[(-60)+16]
 14896  010372  0ED4               	movlw	-44
 14897  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 14898  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 14899  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 14900  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 14901  01038C  EC14  F0CA         	call	___fleq	;wreg free
 14902  010390  A001               	btfss	btemp& (0+255),0,c
 14903  010392  D039               	goto	l11384
 14904  010394  D0BC               	goto	u10560
 14905  010396                     l11380:
 14906                           
 14907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 14908  010396  0E00               	movlw	0
 14909  010398  6EE6               	movwf	postinc1,c
 14910  01039A  0E00               	movlw	0
 14911  01039C  6EE6               	movwf	postinc1,c
 14912  01039E  0E20               	movlw	32
 14913  0103A0  6EE6               	movwf	postinc1,c
 14914  0103A2  0E41               	movlw	65
 14915  0103A4  6EE6               	movwf	postinc1,c
 14916                           
 14917                           ;stkvar	_u @ sp[(-60)+12]
 14918  0103A6  0ED0               	movlw	-48
 14919  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14920  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 14921  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 14922  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 14923  0103C0  EC03  F097         	call	___flmul	;wreg free
 14924                           
 14925                           ;stkvar	_u @ sp[(-56)+12]
 14926  0103C4  0ED4               	movlw	-44
 14927  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 14928  0103CC  0ED5               	movlw	-43
 14929  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14930  0103D4  0ED6               	movlw	-42
 14931  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14932  0103DC  0ED7               	movlw	-41
 14933  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 14934                           
 14935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 14936                           ;stkvar	_e @ sp[(-56)+34]
 14937  0103E4  0EEA               	movlw	-22
 14938  0103E6  50E3               	movf	plusw1,w,c
 14939  0103E8  0F01               	addlw	1
 14940  0103EA  6E01               	movwf	btemp^0,c
 14941  0103EC  0EEA               	movlw	-22
 14942  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 14943  0103F4  6A01               	clrf	btemp^0,c
 14944  0103F6  0EEB               	movlw	-21
 14945  0103F8  50E3               	movf	plusw1,w,c
 14946  0103FA  2001               	addwfc	btemp^0,w,c
 14947  0103FC  6E01               	movwf	btemp^0,c
 14948  0103FE  0EEB               	movlw	-21
 14949  010400  0060  F007  FFE3   	movff	btemp,plusw1
 14950  010406                     l11384:
 14951                           
 14952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 14953  010406  0E00               	movlw	0
 14954  010408  6EE6               	movwf	postinc1,c
 14955  01040A  0E00               	movlw	0
 14956  01040C  6EE6               	movwf	postinc1,c
 14957  01040E  0E20               	movlw	32
 14958  010410  6EE6               	movwf	postinc1,c
 14959  010412  0E41               	movlw	65
 14960  010414  6EE6               	movwf	postinc1,c
 14961                           
 14962                           ;stkvar	_u @ sp[(-60)+12]
 14963  010416  0ED0               	movlw	-48
 14964  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 14965  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 14966  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 14967  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 14968  010430  EC03  F097         	call	___flmul	;wreg free
 14969  010434  0060  F007  FFE6   	movff	btemp,postinc1
 14970  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14971  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14972  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 14973                           
 14974                           ;stkvar	_g @ sp[(-60)+16]
 14975  01044C  0ED4               	movlw	-44
 14976  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 14977  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 14978  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 14979  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 14980  010466  ECAD  F0C0         	call	___flge	;wreg free
 14981  01046A  A001               	btfss	btemp& (0+255),0,c
 14982  01046C  D032               	goto	l11390
 14983  01046E  D793               	goto	l11380
 14984  010470                     l11386:
 14985                           
 14986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 14987  010470  0E00               	movlw	0
 14988  010472  6EE6               	movwf	postinc1,c
 14989  010474  0E00               	movlw	0
 14990  010476  6EE6               	movwf	postinc1,c
 14991  010478  0E20               	movlw	32
 14992  01047A  6EE6               	movwf	postinc1,c
 14993  01047C  0E41               	movlw	65
 14994  01047E  6EE6               	movwf	postinc1,c
 14995                           
 14996                           ;stkvar	_u @ sp[(-60)+12]
 14997  010480  0ED0               	movlw	-48
 14998  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 14999  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15000  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15001  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15002  01049A  EC45  F0A2         	call	___fldiv	;wreg free
 15003                           
 15004                           ;stkvar	_u @ sp[(-56)+12]
 15005  01049E  0ED4               	movlw	-44
 15006  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 15007  0104A6  0ED5               	movlw	-43
 15008  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15009  0104AE  0ED6               	movlw	-42
 15010  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15011  0104B6  0ED7               	movlw	-41
 15012  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15013                           
 15014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15015                           ;stkvar	_e @ sp[(-56)+34]
 15016  0104BE  50E1               	movf	fsr1l,w,c
 15017  0104C0  0FEA               	addlw	-22
 15018  0104C2  6ED9               	movwf	fsr2l,c
 15019  0104C4  50E2               	movf	fsr1h,w,c
 15020  0104C6  6EDA               	movwf	fsr2h,c
 15021  0104C8  0EFF               	movlw	255
 15022  0104CA  22DA               	addwfc	fsr2h,f,c
 15023  0104CC  06DE               	decf	postinc2,f,c
 15024  0104CE  0E00               	movlw	0
 15025  0104D0  5ADD               	subwfb	postdec2,f,c
 15026  0104D2                     l11390:
 15027                           
 15028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15029                           ;stkvar	_u @ sp[(-56)+12]
 15030  0104D2  0ED4               	movlw	-44
 15031  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15032  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15033  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15034  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15035                           
 15036                           ;stkvar	_g @ sp[(-60)+16]
 15037  0104EC  0ED4               	movlw	-44
 15038  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15039  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15040  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15041  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15042  010506  ECAD  F0C0         	call	___flge	;wreg free
 15043  01050A  A001               	btfss	btemp& (0+255),0,c
 15044  01050C  D7B1               	goto	l11386
 15045  01050E                     u10560:
 15046                           
 15047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15048                           ;stkvar	_c @ sp[(-56)+-7]
 15049  01050E  0EC1               	movlw	-63
 15050  010510  50E3               	movf	plusw1,w,c
 15051  010512  6EE6               	movwf	postinc1,c
 15052  010514  0E00               	movlw	0
 15053  010516  6EE6               	movwf	postinc1,c
 15054  010518  ECCB  F0CE         	call	_tolower	;wreg free
 15055                           
 15056                           ;stkvar	_mode @ sp[(-56)+54]
 15057  01051C  0EFE               	movlw	-2
 15058  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 15059                           
 15060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15061                           ;stkvar	_mode @ sp[(-56)+54]
 15062                           ;stkvar	_nmode @ sp[(-56)+55]
 15063  010524  0EFE               	movlw	-2
 15064  010526  006F FF8C  F001    	movff	plusw1,btemp
 15065  01052C  0EFF               	movlw	-1
 15066  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 15067                           
 15068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15069                           ;stkvar	_mode @ sp[(-56)+54]
 15070  010534  0EFE               	movlw	-2
 15071  010536  006F FF8C  F001    	movff	plusw1,btemp
 15072  01053C  0E67               	movlw	103
 15073  01053E  1801               	xorwf	btemp^0,w,c
 15074  010540  A4D8               	btfss	status,2,c
 15075  010542  D025               	goto	l11408
 15076                           
 15077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15078  010544  5023               	movf	_prec^0,w,c
 15079  010546  1024               	iorwf	(_prec+1)^0,w,c
 15080  010548  A4D8               	btfss	status,2,c
 15081  01054A  D004               	goto	l11402
 15082                           
 15083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15084  01054C  0E00               	movlw	0
 15085  01054E  6E24               	movwf	(_prec+1)^0,c
 15086  010550  0E01               	movlw	1
 15087  010552  6E23               	movwf	_prec^0,c
 15088  010554                     l11402:
 15089                           
 15090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15091  010554  BE24               	btfsc	(_prec+1)^0,7,c
 15092  010556  D005               	goto	u10590
 15093  010558  5024               	movf	(_prec+1)^0,w,c
 15094  01055A  E110               	bnz	l11406
 15095  01055C  0423               	decf	_prec^0,w,c
 15096  01055E  B0D8               	btfsc	status,0,c
 15097  010560  D00D               	goto	l11406
 15098  010562                     u10590:
 15099  010562  0E06               	movlw	6
 15100  010564  6E0B               	movwf	(btemp+10)^0,c
 15101  010566  0E00               	movlw	0
 15102  010568  6E0C               	movwf	(btemp+11)^0,c
 15103                           
 15104                           ;stkvar	_p @ sp[(-56)+40]
 15105  01056A  0EF0               	movlw	-16
 15106  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15107  010572  0EF1               	movlw	-15
 15108  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 15109  01057A  D00C               	goto	l11414
 15110  01057C                     l11406:
 15111                           
 15112                           ;stkvar	_p @ sp[(-56)+40]
 15113  01057C  0EF0               	movlw	-16
 15114  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 15115  010584  0EF1               	movlw	-15
 15116  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 15117  01058C  D003               	goto	l11414
 15118  01058E                     l11408:
 15119                           
 15120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15121  01058E  AE24               	btfss	(_prec+1)^0,7,c
 15122  010590  D7F5               	goto	l11406
 15123  010592  D7E7               	goto	u10590
 15124  010594                     l11414:
 15125                           
 15126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15127                           ;stkvar	_mode @ sp[(-56)+54]
 15128  010594  0EFE               	movlw	-2
 15129  010596  006F FF8C  F001    	movff	plusw1,btemp
 15130  01059C  0E67               	movlw	103
 15131  01059E  1801               	xorwf	btemp^0,w,c
 15132  0105A0  A4D8               	btfss	status,2,c
 15133  0105A2  D02F               	goto	l11424
 15134                           
 15135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15136                           ;stkvar	_e @ sp[(-56)+34]
 15137  0105A4  0EEB               	movlw	-21
 15138  0105A6  AEE3               	btfss	plusw1,7,c
 15139  0105A8  D00E               	goto	u10620
 15140  0105AA  0EEA               	movlw	-22
 15141  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 15142  0105B2  0EFC               	movlw	252
 15143  0105B4  5E01               	subwf	btemp^0,f,c
 15144  0105B6  0EEB               	movlw	-21
 15145  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 15146  0105BE  0EFF               	movlw	255
 15147  0105C0  5A01               	subwfb	btemp^0,f,c
 15148  0105C2  A0D8               	btfss	status,0,c
 15149  0105C4  D018               	goto	l11422
 15150  0105C6                     u10620:
 15151                           
 15152                           ;stkvar	_e @ sp[(-56)+34]
 15153                           ;stkvar	_p @ sp[(-56)+40]
 15154  0105C6  0EF0               	movlw	-16
 15155  0105C8  50E3               	movf	plusw1,w,c
 15156  0105CA  0FFF               	addlw	255
 15157  0105CC  6E0B               	movwf	(btemp+10)^0,c
 15158  0105CE  0EF1               	movlw	-15
 15159  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15160  0105D6  0EFF               	movlw	255
 15161  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 15162  0105DA  0EEA               	movlw	-22
 15163  0105DC  50E3               	movf	plusw1,w,c
 15164  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 15165  0105E0  500C               	movf	(btemp+11)^0,w,c
 15166  0105E2  0A80               	xorlw	128
 15167  0105E4  6E01               	movwf	btemp^0,c
 15168  0105E6  0EEB               	movlw	-21
 15169  0105E8  50E3               	movf	plusw1,w,c
 15170  0105EA  0A80               	xorlw	128
 15171  0105EC  5801               	subwfb	btemp^0,w,c
 15172  0105EE  A0D8               	btfss	status,0,c
 15173  0105F0  D002               	goto	l11422
 15174                           
 15175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15176  0105F2  0E66               	movlw	102
 15177  0105F4  D001               	goto	L12
 15178  0105F6                     l11422:
 15179                           
 15180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15181  0105F6  0E65               	movlw	101
 15182  0105F8                     L12:
 15183  0105F8  6E0C               	movwf	(btemp+11)^0,c
 15184                           
 15185                           ;stkvar	_nmode @ sp[(-56)+55]
 15186  0105FA  0EFF               	movlw	-1
 15187  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15188  010602                     l11424:
 15189                           
 15190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 15191                           ;stkvar	_p @ sp[(-56)+40]
 15192                           ;stkvar	_m @ sp[(-56)+48]
 15193  010602  0EF0               	movlw	-16
 15194  010604  006F FF8C  F001    	movff	plusw1,btemp
 15195  01060A  0EF8               	movlw	-8
 15196  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 15197  010612  0EF1               	movlw	-15
 15198  010614  006F FF8C  F001    	movff	plusw1,btemp
 15199  01061A  0EF9               	movlw	-7
 15200  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 15201                           
 15202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 15203                           ;stkvar	_mode @ sp[(-56)+54]
 15204  010622  0EFE               	movlw	-2
 15205  010624  006F FF8C  F001    	movff	plusw1,btemp
 15206  01062A  0E67               	movlw	103
 15207  01062C  1801               	xorwf	btemp^0,w,c
 15208  01062E  A4D8               	btfss	status,2,c
 15209  010630  D00B               	goto	u10660
 15210                           
 15211                           ;stkvar	_nmode @ sp[(-56)+55]
 15212  010632  0EFF               	movlw	-1
 15213  010634  006F FF8C  F001    	movff	plusw1,btemp
 15214  01063A  0E66               	movlw	102
 15215  01063C  1801               	xorwf	btemp^0,w,c
 15216  01063E  A4D8               	btfss	status,2,c
 15217  010640  D014               	goto	l2163
 15218                           
 15219                           ;stkvar	_e @ sp[(-56)+34]
 15220  010642  0EEB               	movlw	-21
 15221  010644  AEE3               	btfss	plusw1,7,c
 15222  010646  D011               	goto	l2163
 15223  010648                     u10660:
 15224                           
 15225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 15226                           ;stkvar	_m @ sp[(-56)+48]
 15227  010648  0EF8               	movlw	-8
 15228  01064A  50E3               	movf	plusw1,w,c
 15229  01064C  0F01               	addlw	1
 15230  01064E  6E01               	movwf	btemp^0,c
 15231  010650  0EF8               	movlw	-8
 15232  010652  0060  F007  FFE3   	movff	btemp,plusw1
 15233  010658  6A01               	clrf	btemp^0,c
 15234  01065A  0EF9               	movlw	-7
 15235  01065C  50E3               	movf	plusw1,w,c
 15236  01065E  2001               	addwfc	btemp^0,w,c
 15237  010660  6E01               	movwf	btemp^0,c
 15238  010662  0EF9               	movlw	-7
 15239  010664  0060  F007  FFE3   	movff	btemp,plusw1
 15240  01066A                     l2163:
 15241                           
 15242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 15243                           ;stkvar	_nmode @ sp[(-56)+55]
 15244  01066A  0EFF               	movlw	-1
 15245  01066C  006F FF8C  F001    	movff	plusw1,btemp
 15246  010672  0E66               	movlw	102
 15247  010674  1801               	xorwf	btemp^0,w,c
 15248  010676  A4D8               	btfss	status,2,c
 15249  010678  D03B               	goto	l11444
 15250                           
 15251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 15252                           ;stkvar	_e @ sp[(-56)+34]
 15253  01067A  0EEB               	movlw	-21
 15254  01067C  AEE3               	btfss	plusw1,7,c
 15255  01067E  D01C               	goto	l11440
 15256                           
 15257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 15258  010680  0E00               	movlw	0
 15259  010682  6E09               	movwf	(btemp+8)^0,c
 15260  010684  0E00               	movlw	0
 15261  010686  6E0A               	movwf	(btemp+9)^0,c
 15262  010688  0E80               	movlw	128
 15263  01068A  6E0B               	movwf	(btemp+10)^0,c
 15264  01068C  0E3F               	movlw	63
 15265  01068E  6E0C               	movwf	(btemp+11)^0,c
 15266                           
 15267                           ;stkvar	_u @ sp[(-56)+12]
 15268  010690  0ED4               	movlw	-44
 15269  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 15270  010698  0ED5               	movlw	-43
 15271  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15272  0106A0  0ED6               	movlw	-42
 15273  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15274  0106A8  0ED7               	movlw	-41
 15275  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15276                           
 15277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 15278                           ;stkvar	_e @ sp[(-56)+34]
 15279  0106B0  0EEA               	movlw	-22
 15280  0106B2  6AE3               	clrf	plusw1,c
 15281  0106B4  0EEB               	movlw	-21
 15282  0106B6  6AE3               	clrf	plusw1,c
 15283  0106B8                     l11440:
 15284                           
 15285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 15286                           ;stkvar	_mode @ sp[(-56)+54]
 15287  0106B8  0EFE               	movlw	-2
 15288  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 15289  0106C0  0E67               	movlw	103
 15290  0106C2  1801               	xorwf	btemp^0,w,c
 15291  0106C4  B4D8               	btfsc	status,2,c
 15292  0106C6  D014               	goto	l11444
 15293                           
 15294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 15295                           ;stkvar	_e @ sp[(-56)+34]
 15296                           ;stkvar	_m @ sp[(-56)+48]
 15297  0106C8  0EF8               	movlw	-8
 15298  0106CA  50E3               	movf	plusw1,w,c
 15299  0106CC  6E01               	movwf	btemp^0,c
 15300  0106CE  0EEA               	movlw	-22
 15301  0106D0  50E3               	movf	plusw1,w,c
 15302  0106D2  2601               	addwf	btemp^0,f,c
 15303  0106D4  0EF8               	movlw	-8
 15304  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 15305  0106DC  0EF9               	movlw	-7
 15306  0106DE  50E3               	movf	plusw1,w,c
 15307  0106E0  6E01               	movwf	btemp^0,c
 15308  0106E2  0EEB               	movlw	-21
 15309  0106E4  50E3               	movf	plusw1,w,c
 15310  0106E6  2201               	addwfc	btemp^0,f,c
 15311  0106E8  0EF9               	movlw	-7
 15312  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 15313  0106F0                     l11444:
 15314                           
 15315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 15316                           ;stkvar	_i @ sp[(-56)+36]
 15317  0106F0  0EEC               	movlw	-20
 15318  0106F2  6AE3               	clrf	plusw1,c
 15319  0106F4  0EED               	movlw	-19
 15320  0106F6  6AE3               	clrf	plusw1,c
 15321                           
 15322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 15323                           ;stkvar	_g @ sp[(-56)+16]
 15324  0106F8  0ED8               	movlw	-40
 15325  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 15326  010700  0ED9               	movlw	-39
 15327  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 15328  010708  0EDA               	movlw	-38
 15329  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15330  010710  0EDB               	movlw	-37
 15331  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 15332                           
 15333                           ;stkvar	_h @ sp[(-56)+24]
 15334  010718  0EE0               	movlw	-32
 15335  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15336  010720  0EE1               	movlw	-31
 15337  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15338  010728  0EE2               	movlw	-30
 15339  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15340  010730  0EE3               	movlw	-29
 15341  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 15342                           
 15343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 15344                           ;stkvar	_u @ sp[(-56)+12]
 15345  010738  0ED4               	movlw	-44
 15346  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 15347  010740  0ED5               	movlw	-43
 15348  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 15349  010748  0ED6               	movlw	-42
 15350  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15351  010750  0ED7               	movlw	-41
 15352  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 15353                           
 15354                           ;stkvar	_ou @ sp[(-56)+28]
 15355  010758  0EE4               	movlw	-28
 15356  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15357  010760  0EE5               	movlw	-27
 15358  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15359  010768  0EE6               	movlw	-26
 15360  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15361  010770  0EE7               	movlw	-25
 15362  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 15363                           
 15364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15365  010778  D0D6               	goto	l11460
 15366  01077A                     l11450:
 15367                           
 15368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 15369                           ;stkvar	_u @ sp[(-56)+12]
 15370  01077A  0ED4               	movlw	-44
 15371  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 15372  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 15373  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 15374  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 15375                           
 15376                           ;stkvar	_h @ sp[(-60)+24]
 15377  010794  0EDC               	movlw	-36
 15378  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 15379  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 15380  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15381  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15382  0107AE  EC45  F0A2         	call	___fldiv	;wreg free
 15383  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 15384  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15385  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15386  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 15387  0107CA  EC46  F0AD         	call	_floorf	;wreg free
 15388                           
 15389                           ;stkvar	_l @ sp[(-56)+20]
 15390  0107CE  0EDC               	movlw	-36
 15391  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 15392  0107D6  0EDD               	movlw	-35
 15393  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15394  0107DE  0EDE               	movlw	-34
 15395  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15396  0107E6  0EDF               	movlw	-33
 15397  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15398                           
 15399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 15400                           ;stkvar	_l @ sp[(-56)+20]
 15401  0107EE  0EDC               	movlw	-36
 15402  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 15403  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 15404  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 15405  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 15406  010808  EC3C  F0BF         	call	___fltol	;wreg free
 15407  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 15408  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 15409                           
 15410                           ;stkvar	_d @ sp[(-56)+44]
 15411  010818  0EF4               	movlw	-12
 15412  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15413  010820  0EF5               	movlw	-11
 15414  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 15415                           
 15416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 15417                           ;stkvar	_u @ sp[(-56)+12]
 15418  010828  0ED4               	movlw	-44
 15419  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 15420  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 15421  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 15422  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 15423                           
 15424                           ;stkvar	_l @ sp[(-60)+20]
 15425  010842  0ED8               	movlw	-40
 15426  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 15427  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 15428  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 15429  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 15430  01085C  EC03  F097         	call	___flmul	;wreg free
 15431  010860  0060  F007  FFE6   	movff	btemp,postinc1
 15432  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15433  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15434  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 15435                           
 15436                           ;stkvar	_h @ sp[(-60)+24]
 15437  010878  0EDC               	movlw	-36
 15438  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 15439  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 15440  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 15441  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 15442  010892  EC77  F0D2         	call	___flsub	;wreg free
 15443                           
 15444                           ;stkvar	_h @ sp[(-56)+24]
 15445  010896  0EE0               	movlw	-32
 15446  010898  0060  F007  FFE3   	movff	btemp,plusw1
 15447  01089E  0EE1               	movlw	-31
 15448  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15449  0108A6  0EE2               	movlw	-30
 15450  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15451  0108AE  0EE3               	movlw	-29
 15452  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 15453                           
 15454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 15455  0108B6  0E00               	movlw	0
 15456  0108B8  6EE6               	movwf	postinc1,c
 15457  0108BA  0E00               	movlw	0
 15458  0108BC  6EE6               	movwf	postinc1,c
 15459  0108BE  0E20               	movlw	32
 15460  0108C0  6EE6               	movwf	postinc1,c
 15461  0108C2  0E41               	movlw	65
 15462  0108C4  6EE6               	movwf	postinc1,c
 15463                           
 15464                           ;stkvar	_u @ sp[(-60)+12]
 15465  0108C6  0ED0               	movlw	-48
 15466  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15467  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15468  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15469  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15470  0108E0  EC45  F0A2         	call	___fldiv	;wreg free
 15471                           
 15472                           ;stkvar	_u @ sp[(-56)+12]
 15473  0108E4  0ED4               	movlw	-44
 15474  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 15475  0108EC  0ED5               	movlw	-43
 15476  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15477  0108F4  0ED6               	movlw	-42
 15478  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15479  0108FC  0ED7               	movlw	-41
 15480  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15481                           
 15482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 15483                           ;stkvar	_i @ sp[(-56)+36]
 15484  010904  0EEC               	movlw	-20
 15485  010906  50E3               	movf	plusw1,w,c
 15486  010908  0F01               	addlw	1
 15487  01090A  6E01               	movwf	btemp^0,c
 15488  01090C  0EEC               	movlw	-20
 15489  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 15490  010914  6A01               	clrf	btemp^0,c
 15491  010916  0EED               	movlw	-19
 15492  010918  50E3               	movf	plusw1,w,c
 15493  01091A  2001               	addwfc	btemp^0,w,c
 15494  01091C  6E01               	movwf	btemp^0,c
 15495  01091E  0EED               	movlw	-19
 15496  010920  0060  F007  FFE3   	movff	btemp,plusw1
 15497  010926                     l11460:
 15498                           
 15499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15500                           ;stkvar	_m @ sp[(-56)+48]
 15501                           ;stkvar	_i @ sp[(-56)+36]
 15502  010926  50E1               	movf	fsr1l,w,c
 15503  010928  0FEC               	addlw	-20
 15504  01092A  6ED9               	movwf	fsr2l,c
 15505  01092C  50E2               	movf	fsr1h,w,c
 15506  01092E  6EDA               	movwf	fsr2h,c
 15507  010930  0EFF               	movlw	255
 15508  010932  22DA               	addwfc	fsr2h,f,c
 15509  010934  0EF8               	movlw	-8
 15510  010936  50E3               	movf	plusw1,w,c
 15511  010938  5CDE               	subwf	postinc2,w,c
 15512  01093A  50DE               	movf	postinc2,w,c
 15513  01093C  0A80               	xorlw	128
 15514  01093E  6E01               	movwf	btemp^0,c
 15515  010940  0EF9               	movlw	-7
 15516  010942  50E3               	movf	plusw1,w,c
 15517  010944  0A80               	xorlw	128
 15518  010946  5801               	subwfb	btemp^0,w,c
 15519  010948  A0D8               	btfss	status,0,c
 15520  01094A  D717               	goto	l11450
 15521                           
 15522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 15523  01094C  0E00               	movlw	0
 15524  01094E  6EE6               	movwf	postinc1,c
 15525  010950  0E00               	movlw	0
 15526  010952  6EE6               	movwf	postinc1,c
 15527  010954  0EA0               	movlw	160
 15528  010956  6EE6               	movwf	postinc1,c
 15529  010958  0E40               	movlw	64
 15530  01095A  6EE6               	movwf	postinc1,c
 15531                           
 15532                           ;stkvar	_u @ sp[(-60)+12]
 15533  01095C  0ED0               	movlw	-48
 15534  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 15535  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 15536  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 15537  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 15538  010976  EC03  F097         	call	___flmul	;wreg free
 15539                           
 15540                           ;stkvar	_l @ sp[(-56)+20]
 15541  01097A  0EDC               	movlw	-36
 15542  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 15543  010982  0EDD               	movlw	-35
 15544  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15545  01098A  0EDE               	movlw	-34
 15546  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15547  010992  0EDF               	movlw	-33
 15548  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 15549                           
 15550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 15551                           ;stkvar	_l @ sp[(-56)+20]
 15552  01099A  0EDC               	movlw	-36
 15553  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 15554  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15555  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15556  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15557                           
 15558                           ;stkvar	_h @ sp[(-60)+24]
 15559  0109B4  0EDC               	movlw	-36
 15560  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 15561  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 15562  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 15563  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15564  0109CE  ECAD  F0C0         	call	___flge	;wreg free
 15565  0109D2  A001               	btfss	btemp& (0+255),0,c
 15566  0109D4  D021               	goto	u10730
 15567                           
 15568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 15569                           ;stkvar	_l @ sp[(-56)+20]
 15570                           
 15571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 15572                           
 15573                           ;stkvar	_l @ sp[(-56)+20]
 15574                           
 15575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 15576  0109D6  0EDC               	movlw	-36
 15577  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 15578  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 15579  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 15580  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 15581                           
 15582                           ;stkvar	_h @ sp[(-60)+24]
 15583  0109F0  0EDC               	movlw	-36
 15584  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 15585  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 15586  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 15587  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 15588  010A0A  EC14  F0CA         	call	___fleq	;wreg free
 15589  010A0E  A001               	btfss	btemp& (0+255),0,c
 15590  010A10  D01B               	goto	l11474
 15591                           
 15592                           ;stkvar	_d @ sp[(-56)+44]
 15593  010A12  0EF4               	movlw	-12
 15594  010A14  B0E3               	btfsc	plusw1,0,c
 15595  010A16  D018               	goto	l11474
 15596  010A18                     u10730:
 15597                           
 15598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 15599  010A18  0E00               	movlw	0
 15600  010A1A  6E09               	movwf	(btemp+8)^0,c
 15601  010A1C  0E00               	movlw	0
 15602  010A1E  6E0A               	movwf	(btemp+9)^0,c
 15603  010A20  0E00               	movlw	0
 15604  010A22  6E0B               	movwf	(btemp+10)^0,c
 15605  010A24  0E00               	movlw	0
 15606  010A26  6E0C               	movwf	(btemp+11)^0,c
 15607                           
 15608                           ;stkvar	_l @ sp[(-56)+20]
 15609  010A28  0EDC               	movlw	-36
 15610  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15611  010A30  0EDD               	movlw	-35
 15612  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15613  010A38  0EDE               	movlw	-34
 15614  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15615  010A40  0EDF               	movlw	-33
 15616  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 15617  010A48                     l11474:
 15618                           
 15619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 15620                           ;stkvar	_l @ sp[(-56)+20]
 15621  010A48  0EDC               	movlw	-36
 15622  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 15623  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 15624  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 15625  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15626                           
 15627                           ;stkvar	_g @ sp[(-60)+16]
 15628  010A62  0ED4               	movlw	-44
 15629  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 15630  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 15631  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 15632  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 15633  010A7C  EC18  F09B         	call	___fladd	;wreg free
 15634                           
 15635                           ;stkvar	_h @ sp[(-56)+24]
 15636  010A80  0EE0               	movlw	-32
 15637  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 15638  010A88  0EE1               	movlw	-31
 15639  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15640  010A90  0EE2               	movlw	-30
 15641  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15642  010A98  0EE3               	movlw	-29
 15643  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 15644                           
 15645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 15646                           ;stkvar	_ou @ sp[(-56)+28]
 15647  010AA0  0EE4               	movlw	-28
 15648  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 15649  010AA8  0EE5               	movlw	-27
 15650  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 15651  010AB0  0EE6               	movlw	-26
 15652  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15653  010AB8  0EE7               	movlw	-25
 15654  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15655                           
 15656                           ;stkvar	_u @ sp[(-56)+12]
 15657  010AC0  0ED4               	movlw	-44
 15658  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 15659  010AC8  0ED5               	movlw	-43
 15660  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15661  010AD0  0ED6               	movlw	-42
 15662  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15663  010AD8  0ED7               	movlw	-41
 15664  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15665                           
 15666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 15667                           ;stkvar	_nmode @ sp[(-56)+55]
 15668  010AE0  0EFF               	movlw	-1
 15669  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 15670  010AE8  0E65               	movlw	101
 15671  010AEA  1801               	xorwf	btemp^0,w,c
 15672  010AEC  B4D8               	btfsc	status,2,c
 15673  010AEE  D011               	goto	l11482
 15674                           
 15675                           ;stkvar	_e @ sp[(-56)+34]
 15676                           ;stkvar	_ne @ sp[(-56)+46]
 15677  010AF0  0EEA               	movlw	-22
 15678  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 15679  010AF8  0EF6               	movlw	-10
 15680  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 15681  010B00  0EEB               	movlw	-21
 15682  010B02  006F FF8C  F001    	movff	plusw1,btemp
 15683  010B08  0EF7               	movlw	-9
 15684  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 15685  010B10  D004               	goto	l2178
 15686  010B12                     l11482:
 15687                           
 15688                           ;stkvar	_ne @ sp[(-56)+46]
 15689  010B12  0EF6               	movlw	-10
 15690  010B14  6AE3               	clrf	plusw1,c
 15691  010B16  0EF7               	movlw	-9
 15692  010B18  6AE3               	clrf	plusw1,c
 15693  010B1A                     l2178:
 15694                           
 15695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 15696                           ;stkvar	_pp @ sp[(-56)+50]
 15697  010B1A  0EFA               	movlw	-6
 15698  010B1C  6AE3               	clrf	plusw1,c
 15699  010B1E  0EFB               	movlw	-5
 15700  010B20  6AE3               	clrf	plusw1,c
 15701                           
 15702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 15703                           ;stkvar	_t @ sp[(-56)+52]
 15704  010B22  0EFC               	movlw	-4
 15705  010B24  6AE3               	clrf	plusw1,c
 15706  010B26  0EFD               	movlw	-3
 15707  010B28  6AE3               	clrf	plusw1,c
 15708                           
 15709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 15710                           ;stkvar	_i @ sp[(-56)+36]
 15711  010B2A  0EEC               	movlw	-20
 15712  010B2C  6AE3               	clrf	plusw1,c
 15713  010B2E  0EED               	movlw	-19
 15714  010B30  6AE3               	clrf	plusw1,c
 15715                           
 15716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15717  010B32  D1B7               	goto	l11534
 15718  010B34                     l11484:
 15719                           
 15720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 15721                           ;stkvar	_u @ sp[(-56)+12]
 15722  010B34  0ED4               	movlw	-44
 15723  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 15724  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15725  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 15726  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 15727                           
 15728                           ;stkvar	_h @ sp[(-60)+24]
 15729  010B4E  0EDC               	movlw	-36
 15730  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 15731  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 15732  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15733  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 15734  010B68  EC45  F0A2         	call	___fldiv	;wreg free
 15735  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 15736  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15737  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15738  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 15739  010B84  EC46  F0AD         	call	_floorf	;wreg free
 15740                           
 15741                           ;stkvar	_l @ sp[(-56)+20]
 15742  010B88  0EDC               	movlw	-36
 15743  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 15744  010B90  0EDD               	movlw	-35
 15745  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15746  010B98  0EDE               	movlw	-34
 15747  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15748  010BA0  0EDF               	movlw	-33
 15749  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 15750                           
 15751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 15752                           ;stkvar	_l @ sp[(-56)+20]
 15753  010BA8  0EDC               	movlw	-36
 15754  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 15755  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 15756  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 15757  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 15758  010BC2  EC3C  F0BF         	call	___fltol	;wreg free
 15759  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 15760  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 15761                           
 15762                           ;stkvar	_d @ sp[(-56)+44]
 15763  010BD2  0EF4               	movlw	-12
 15764  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15765  010BDA  0EF5               	movlw	-11
 15766  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15767                           
 15768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 15769  010BE2  B825               	btfsc	_flags^0,4,c
 15770  010BE4  D026               	goto	l11498
 15771                           
 15772                           ;stkvar	_d @ sp[(-56)+44]
 15773  010BE6  0EF4               	movlw	-12
 15774  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 15775  010BEE  0EF5               	movlw	-11
 15776  010BF0  50E3               	movf	plusw1,w,c
 15777  010BF2  1001               	iorwf	btemp^0,w,c
 15778  010BF4  A4D8               	btfss	status,2,c
 15779  010BF6  D01D               	goto	l11498
 15780                           
 15781                           ;stkvar	_mode @ sp[(-56)+54]
 15782  010BF8  0EFE               	movlw	-2
 15783  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 15784  010C00  0E67               	movlw	103
 15785  010C02  1801               	xorwf	btemp^0,w,c
 15786  010C04  A4D8               	btfss	status,2,c
 15787  010C06  D015               	goto	l11498
 15788                           
 15789                           ;stkvar	_ne @ sp[(-56)+46]
 15790  010C08  0EF7               	movlw	-9
 15791  010C0A  AEE3               	btfss	plusw1,7,c
 15792  010C0C  D012               	goto	l11498
 15793                           
 15794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 15795                           ;stkvar	_t @ sp[(-56)+52]
 15796  010C0E  0EFC               	movlw	-4
 15797  010C10  50E3               	movf	plusw1,w,c
 15798  010C12  0F01               	addlw	1
 15799  010C14  6E01               	movwf	btemp^0,c
 15800  010C16  0EFC               	movlw	-4
 15801  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 15802  010C1E  6A01               	clrf	btemp^0,c
 15803  010C20  0EFD               	movlw	-3
 15804  010C22  50E3               	movf	plusw1,w,c
 15805  010C24  2001               	addwfc	btemp^0,w,c
 15806  010C26  6E01               	movwf	btemp^0,c
 15807  010C28  0EFD               	movlw	-3
 15808  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 15809                           
 15810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 15811  010C30  D0AF               	goto	l11526
 15812  010C32                     l11498:
 15813                           
 15814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 15815                           ;stkvar	_pp @ sp[(-56)+50]
 15816  010C32  0EFA               	movlw	-6
 15817  010C34  006F FF8C  F001    	movff	plusw1,btemp
 15818  010C3A  0EFB               	movlw	-5
 15819  010C3C  50E3               	movf	plusw1,w,c
 15820  010C3E  1001               	iorwf	btemp^0,w,c
 15821  010C40  A4D8               	btfss	status,2,c
 15822  010C42  D070               	goto	l11518
 15823                           
 15824                           ;stkvar	_ne @ sp[(-56)+46]
 15825  010C44  0EF7               	movlw	-9
 15826  010C46  AEE3               	btfss	plusw1,7,c
 15827  010C48  D06D               	goto	l11518
 15828                           
 15829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 15830                           ;stkvar	_n @ sp[(-56)+32]
 15831  010C4A  0EE8               	movlw	-24
 15832  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15833  010C52  0EE9               	movlw	-23
 15834  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 15835  010C5A  0E94               	movlw	low _dbuf
 15836  010C5C  240B               	addwf	(btemp+10)^0,w,c
 15837  010C5E  6ED9               	movwf	fsr2l,c
 15838  010C60  0E03               	movlw	high _dbuf
 15839  010C62  200C               	addwfc	(btemp+11)^0,w,c
 15840  010C64  6EDA               	movwf	fsr2h,c
 15841  010C66  0E2E               	movlw	46
 15842  010C68  6EDF               	movwf	indf2,c
 15843                           
 15844                           ;stkvar	_n @ sp[(-56)+32]
 15845  010C6A  0EE8               	movlw	-24
 15846  010C6C  50E3               	movf	plusw1,w,c
 15847  010C6E  0F01               	addlw	1
 15848  010C70  6E01               	movwf	btemp^0,c
 15849  010C72  0EE8               	movlw	-24
 15850  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 15851  010C7A  6A01               	clrf	btemp^0,c
 15852  010C7C  0EE9               	movlw	-23
 15853  010C7E  50E3               	movf	plusw1,w,c
 15854  010C80  2001               	addwfc	btemp^0,w,c
 15855  010C82  6E01               	movwf	btemp^0,c
 15856  010C84  0EE9               	movlw	-23
 15857  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 15858                           
 15859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 15860                           ;stkvar	_w @ sp[(-56)+38]
 15861  010C8C  50E1               	movf	fsr1l,w,c
 15862  010C8E  0FEE               	addlw	-18
 15863  010C90  6ED9               	movwf	fsr2l,c
 15864  010C92  50E2               	movf	fsr1h,w,c
 15865  010C94  6EDA               	movwf	fsr2h,c
 15866  010C96  0EFF               	movlw	255
 15867  010C98  22DA               	addwfc	fsr2h,f,c
 15868  010C9A  06DE               	decf	postinc2,f,c
 15869  010C9C  0E00               	movlw	0
 15870  010C9E  5ADD               	subwfb	postdec2,f,c
 15871                           
 15872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 15873  010CA0  0E01               	movlw	1
 15874  010CA2  6E0B               	movwf	(btemp+10)^0,c
 15875  010CA4  0E00               	movlw	0
 15876  010CA6  6E0C               	movwf	(btemp+11)^0,c
 15877                           
 15878                           ;stkvar	_pp @ sp[(-56)+50]
 15879  010CA8  0EFA               	movlw	-6
 15880  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15881  010CB0  0EFB               	movlw	-5
 15882  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15883  010CB8  D035               	goto	l11518
 15884  010CBA                     l11510:
 15885                           
 15886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 15887                           ;stkvar	_n @ sp[(-56)+32]
 15888  010CBA  0EE8               	movlw	-24
 15889  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15890  010CC2  0EE9               	movlw	-23
 15891  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15892  010CCA  0E94               	movlw	low _dbuf
 15893  010CCC  240B               	addwf	(btemp+10)^0,w,c
 15894  010CCE  6ED9               	movwf	fsr2l,c
 15895  010CD0  0E03               	movlw	high _dbuf
 15896  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 15897  010CD4  6EDA               	movwf	fsr2h,c
 15898  010CD6  0E30               	movlw	48
 15899  010CD8  6EDF               	movwf	indf2,c
 15900                           
 15901                           ;stkvar	_n @ sp[(-56)+32]
 15902  010CDA  0EE8               	movlw	-24
 15903  010CDC  50E3               	movf	plusw1,w,c
 15904  010CDE  0F01               	addlw	1
 15905  010CE0  6E01               	movwf	btemp^0,c
 15906  010CE2  0EE8               	movlw	-24
 15907  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 15908  010CEA  6A01               	clrf	btemp^0,c
 15909  010CEC  0EE9               	movlw	-23
 15910  010CEE  50E3               	movf	plusw1,w,c
 15911  010CF0  2001               	addwfc	btemp^0,w,c
 15912  010CF2  6E01               	movwf	btemp^0,c
 15913  010CF4  0EE9               	movlw	-23
 15914  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 15915                           
 15916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 15917                           ;stkvar	_w @ sp[(-56)+38]
 15918  010CFC  50E1               	movf	fsr1l,w,c
 15919  010CFE  0FEE               	addlw	-18
 15920  010D00  6ED9               	movwf	fsr2l,c
 15921  010D02  50E2               	movf	fsr1h,w,c
 15922  010D04  6EDA               	movwf	fsr2h,c
 15923  010D06  0EFF               	movlw	255
 15924  010D08  22DA               	addwfc	fsr2h,f,c
 15925  010D0A  06DE               	decf	postinc2,f,c
 15926  010D0C  0E00               	movlw	0
 15927  010D0E  5ADD               	subwfb	postdec2,f,c
 15928                           
 15929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 15930                           ;stkvar	_t @ sp[(-56)+52]
 15931  010D10  50E1               	movf	fsr1l,w,c
 15932  010D12  0FFC               	addlw	-4
 15933  010D14  6ED9               	movwf	fsr2l,c
 15934  010D16  50E2               	movf	fsr1h,w,c
 15935  010D18  6EDA               	movwf	fsr2h,c
 15936  010D1A  0EFF               	movlw	255
 15937  010D1C  22DA               	addwfc	fsr2h,f,c
 15938  010D1E  06DE               	decf	postinc2,f,c
 15939  010D20  0E00               	movlw	0
 15940  010D22  5ADD               	subwfb	postdec2,f,c
 15941  010D24                     l11518:
 15942                           
 15943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 15944                           ;stkvar	_t @ sp[(-56)+52]
 15945  010D24  0EFC               	movlw	-4
 15946  010D26  006F FF8C  F001    	movff	plusw1,btemp
 15947  010D2C  0EFD               	movlw	-3
 15948  010D2E  50E3               	movf	plusw1,w,c
 15949  010D30  1001               	iorwf	btemp^0,w,c
 15950  010D32  A4D8               	btfss	status,2,c
 15951  010D34  D7C2               	goto	l11510
 15952                           
 15953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 15954                           ;stkvar	_n @ sp[(-56)+32]
 15955  010D36  0EE8               	movlw	-24
 15956  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 15957  010D3E  0EE9               	movlw	-23
 15958  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 15959  010D46  0E94               	movlw	low _dbuf
 15960  010D48  240B               	addwf	(btemp+10)^0,w,c
 15961  010D4A  6ED9               	movwf	fsr2l,c
 15962  010D4C  0E03               	movlw	high _dbuf
 15963  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 15964  010D50  6EDA               	movwf	fsr2h,c
 15965                           
 15966                           ;stkvar	_d @ sp[(-56)+44]
 15967  010D52  0EF4               	movlw	-12
 15968  010D54  50E3               	movf	plusw1,w,c
 15969  010D56  0F30               	addlw	48
 15970  010D58  6EDF               	movwf	indf2,c
 15971                           
 15972                           ;stkvar	_n @ sp[(-56)+32]
 15973  010D5A  0EE8               	movlw	-24
 15974  010D5C  50E3               	movf	plusw1,w,c
 15975  010D5E  0F01               	addlw	1
 15976  010D60  6E01               	movwf	btemp^0,c
 15977  010D62  0EE8               	movlw	-24
 15978  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 15979  010D6A  6A01               	clrf	btemp^0,c
 15980  010D6C  0EE9               	movlw	-23
 15981  010D6E  50E3               	movf	plusw1,w,c
 15982  010D70  2001               	addwfc	btemp^0,w,c
 15983  010D72  6E01               	movwf	btemp^0,c
 15984  010D74  0EE9               	movlw	-23
 15985  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 15986                           
 15987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 15988                           ;stkvar	_w @ sp[(-56)+38]
 15989  010D7C  50E1               	movf	fsr1l,w,c
 15990  010D7E  0FEE               	addlw	-18
 15991  010D80  6ED9               	movwf	fsr2l,c
 15992  010D82  50E2               	movf	fsr1h,w,c
 15993  010D84  6EDA               	movwf	fsr2h,c
 15994  010D86  0EFF               	movlw	255
 15995  010D88  22DA               	addwfc	fsr2h,f,c
 15996  010D8A  06DE               	decf	postinc2,f,c
 15997  010D8C  0E00               	movlw	0
 15998  010D8E  5ADD               	subwfb	postdec2,f,c
 15999  010D90                     l11526:
 16000                           
 16001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16002                           ;stkvar	_u @ sp[(-56)+12]
 16003  010D90  0ED4               	movlw	-44
 16004  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16005  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16006  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16007  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16008                           
 16009                           ;stkvar	_l @ sp[(-60)+20]
 16010  010DAA  0ED8               	movlw	-40
 16011  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16012  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16013  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16014  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16015  010DC4  EC03  F097         	call	___flmul	;wreg free
 16016  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 16017  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16018  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16019  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 16020                           
 16021                           ;stkvar	_h @ sp[(-60)+24]
 16022  010DE0  0EDC               	movlw	-36
 16023  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16024  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16025  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16026  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16027  010DFA  EC77  F0D2         	call	___flsub	;wreg free
 16028                           
 16029                           ;stkvar	_h @ sp[(-56)+24]
 16030  010DFE  0EE0               	movlw	-32
 16031  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 16032  010E06  0EE1               	movlw	-31
 16033  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16034  010E0E  0EE2               	movlw	-30
 16035  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16036  010E16  0EE3               	movlw	-29
 16037  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 16038                           
 16039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16040  010E1E  0E00               	movlw	0
 16041  010E20  6EE6               	movwf	postinc1,c
 16042  010E22  0E00               	movlw	0
 16043  010E24  6EE6               	movwf	postinc1,c
 16044  010E26  0E20               	movlw	32
 16045  010E28  6EE6               	movwf	postinc1,c
 16046  010E2A  0E41               	movlw	65
 16047  010E2C  6EE6               	movwf	postinc1,c
 16048                           
 16049                           ;stkvar	_u @ sp[(-60)+12]
 16050  010E2E  0ED0               	movlw	-48
 16051  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16052  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16053  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16054  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16055  010E48  EC45  F0A2         	call	___fldiv	;wreg free
 16056                           
 16057                           ;stkvar	_u @ sp[(-56)+12]
 16058  010E4C  0ED4               	movlw	-44
 16059  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 16060  010E54  0ED5               	movlw	-43
 16061  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16062  010E5C  0ED6               	movlw	-42
 16063  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16064  010E64  0ED7               	movlw	-41
 16065  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 16066                           
 16067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16068                           ;stkvar	_ne @ sp[(-56)+46]
 16069  010E6C  50E1               	movf	fsr1l,w,c
 16070  010E6E  0FF6               	addlw	-10
 16071  010E70  6ED9               	movwf	fsr2l,c
 16072  010E72  50E2               	movf	fsr1h,w,c
 16073  010E74  6EDA               	movwf	fsr2h,c
 16074  010E76  0EFF               	movlw	255
 16075  010E78  22DA               	addwfc	fsr2h,f,c
 16076  010E7A  06DE               	decf	postinc2,f,c
 16077  010E7C  0E00               	movlw	0
 16078  010E7E  5ADD               	subwfb	postdec2,f,c
 16079                           
 16080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16081                           ;stkvar	_i @ sp[(-56)+36]
 16082  010E80  0EEC               	movlw	-20
 16083  010E82  50E3               	movf	plusw1,w,c
 16084  010E84  0F01               	addlw	1
 16085  010E86  6E01               	movwf	btemp^0,c
 16086  010E88  0EEC               	movlw	-20
 16087  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 16088  010E90  6A01               	clrf	btemp^0,c
 16089  010E92  0EED               	movlw	-19
 16090  010E94  50E3               	movf	plusw1,w,c
 16091  010E96  2001               	addwfc	btemp^0,w,c
 16092  010E98  6E01               	movwf	btemp^0,c
 16093  010E9A  0EED               	movlw	-19
 16094  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 16095  010EA2                     l11534:
 16096                           
 16097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16098                           ;stkvar	_m @ sp[(-56)+48]
 16099                           ;stkvar	_i @ sp[(-56)+36]
 16100  010EA2  50E1               	movf	fsr1l,w,c
 16101  010EA4  0FEC               	addlw	-20
 16102  010EA6  6ED9               	movwf	fsr2l,c
 16103  010EA8  50E2               	movf	fsr1h,w,c
 16104  010EAA  6EDA               	movwf	fsr2h,c
 16105  010EAC  0EFF               	movlw	255
 16106  010EAE  22DA               	addwfc	fsr2h,f,c
 16107  010EB0  0EF8               	movlw	-8
 16108  010EB2  50E3               	movf	plusw1,w,c
 16109  010EB4  5CDE               	subwf	postinc2,w,c
 16110  010EB6  50DE               	movf	postinc2,w,c
 16111  010EB8  0A80               	xorlw	128
 16112  010EBA  6E01               	movwf	btemp^0,c
 16113  010EBC  0EF9               	movlw	-7
 16114  010EBE  50E3               	movf	plusw1,w,c
 16115  010EC0  0A80               	xorlw	128
 16116  010EC2  5801               	subwfb	btemp^0,w,c
 16117  010EC4  B0D8               	btfsc	status,0,c
 16118  010EC6  D00E               	goto	u10830
 16119                           
 16120                           ;stkvar	_n @ sp[(-56)+32]
 16121  010EC8  0EE9               	movlw	-23
 16122  010ECA  BEE3               	btfsc	plusw1,7,c
 16123  010ECC  D633               	goto	l11484
 16124  010ECE  0EE9               	movlw	-23
 16125  010ED0  50E3               	movf	plusw1,w,c
 16126  010ED2  E108               	bnz	u10830
 16127  010ED4  0EE8               	movlw	-24
 16128  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 16129  010EDC  0E4B               	movlw	75
 16130  010EDE  5E01               	subwf	btemp^0,f,c
 16131  010EE0  A0D8               	btfss	status,0,c
 16132  010EE2  D628               	goto	l11484
 16133  010EE4                     u10830:
 16134                           
 16135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16136                           ;stkvar	_pp @ sp[(-56)+50]
 16137  010EE4  0EFA               	movlw	-6
 16138  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 16139  010EEC  0EFB               	movlw	-5
 16140  010EEE  50E3               	movf	plusw1,w,c
 16141  010EF0  1001               	iorwf	btemp^0,w,c
 16142  010EF2  B4D8               	btfsc	status,2,c
 16143  010EF4  A825               	btfss	_flags^0,4,c
 16144  010EF6  D021               	goto	l11546
 16145                           
 16146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16147                           ;stkvar	_n @ sp[(-56)+32]
 16148  010EF8  0EE8               	movlw	-24
 16149  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16150  010F00  0EE9               	movlw	-23
 16151  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 16152  010F08  0E94               	movlw	low _dbuf
 16153  010F0A  240B               	addwf	(btemp+10)^0,w,c
 16154  010F0C  6ED9               	movwf	fsr2l,c
 16155  010F0E  0E03               	movlw	high _dbuf
 16156  010F10  200C               	addwfc	(btemp+11)^0,w,c
 16157  010F12  6EDA               	movwf	fsr2h,c
 16158  010F14  0E2E               	movlw	46
 16159  010F16  6EDF               	movwf	indf2,c
 16160                           
 16161                           ;stkvar	_n @ sp[(-56)+32]
 16162  010F18  0EE8               	movlw	-24
 16163  010F1A  50E3               	movf	plusw1,w,c
 16164  010F1C  0F01               	addlw	1
 16165  010F1E  6E01               	movwf	btemp^0,c
 16166  010F20  0EE8               	movlw	-24
 16167  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 16168  010F28  6A01               	clrf	btemp^0,c
 16169  010F2A  0EE9               	movlw	-23
 16170  010F2C  50E3               	movf	plusw1,w,c
 16171  010F2E  2001               	addwfc	btemp^0,w,c
 16172  010F30  6E01               	movwf	btemp^0,c
 16173  010F32  0EE9               	movlw	-23
 16174  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 16175  010F3A                     l11546:
 16176                           
 16177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16178                           ;stkvar	_n @ sp[(-56)+32]
 16179  010F3A  0EE8               	movlw	-24
 16180  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16181  010F42  0EE9               	movlw	-23
 16182  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 16183  010F4A  0E94               	movlw	low _dbuf
 16184  010F4C  240B               	addwf	(btemp+10)^0,w,c
 16185  010F4E  6ED9               	movwf	fsr2l,c
 16186  010F50  0E03               	movlw	high _dbuf
 16187  010F52  200C               	addwfc	(btemp+11)^0,w,c
 16188  010F54  6EDA               	movwf	fsr2h,c
 16189  010F56  0E00               	movlw	0
 16190  010F58  6EDF               	movwf	indf2,c
 16191                           
 16192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 16193                           ;stkvar	_nmode @ sp[(-56)+55]
 16194  010F5A  0EFF               	movlw	-1
 16195  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 16196  010F62  0E65               	movlw	101
 16197  010F64  1801               	xorwf	btemp^0,w,c
 16198  010F66  A4D8               	btfss	status,2,c
 16199  010F68  EF16  F081         	goto	l11350
 16200                           
 16201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 16202  010F6C  0E4F               	movlw	79
 16203  010F6E  6E0B               	movwf	(btemp+10)^0,c
 16204  010F70  0E00               	movlw	0
 16205  010F72  6E0C               	movwf	(btemp+11)^0,c
 16206                           
 16207                           ;stkvar	_i @ sp[(-56)+36]
 16208  010F74  0EEC               	movlw	-20
 16209  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16210  010F7C  0EED               	movlw	-19
 16211  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16212                           
 16213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 16214                           ;stkvar	_i @ sp[(-56)+36]
 16215  010F84  0EEC               	movlw	-20
 16216  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 16217  010F8C  0EED               	movlw	-19
 16218  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16219  010F94  0E94               	movlw	low _dbuf
 16220  010F96  240B               	addwf	(btemp+10)^0,w,c
 16221  010F98  6ED9               	movwf	fsr2l,c
 16222  010F9A  0E03               	movlw	high _dbuf
 16223  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 16224  010F9E  6EDA               	movwf	fsr2h,c
 16225  010FA0  0E00               	movlw	0
 16226  010FA2  6EDF               	movwf	indf2,c
 16227                           
 16228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 16229                           ;stkvar	_sign @ sp[(-56)+42]
 16230  010FA4  0EF2               	movlw	-14
 16231  010FA6  6AE3               	clrf	plusw1,c
 16232  010FA8  0EF3               	movlw	-13
 16233  010FAA  6AE3               	clrf	plusw1,c
 16234                           
 16235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 16236                           ;stkvar	_e @ sp[(-56)+34]
 16237  010FAC  0EEB               	movlw	-21
 16238  010FAE  AEE3               	btfss	plusw1,7,c
 16239  010FB0  D012               	goto	l11560
 16240                           
 16241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 16242  010FB2  0E01               	movlw	1
 16243  010FB4  6E0B               	movwf	(btemp+10)^0,c
 16244  010FB6  0E00               	movlw	0
 16245  010FB8  6E0C               	movwf	(btemp+11)^0,c
 16246                           
 16247                           ;stkvar	_sign @ sp[(-56)+42]
 16248  010FBA  0EF2               	movlw	-14
 16249  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16250  010FC2  0EF3               	movlw	-13
 16251  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16252                           
 16253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 16254                           ;stkvar	_e @ sp[(-56)+34]
 16255                           ;stkvar	_e @ sp[(-56)+34]
 16256  010FCA  0EEA               	movlw	-22
 16257  010FCC  6CE3               	negf	plusw1,c
 16258  010FCE  0EEB               	movlw	-21
 16259  010FD0  1EE3               	comf	plusw1,f,c
 16260  010FD2  B0D8               	btfsc	status,0,c
 16261  010FD4  2AE3               	incf	plusw1,f,c
 16262  010FD6                     l11560:
 16263                           
 16264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 16265  010FD6  0E02               	movlw	2
 16266  010FD8  6E0B               	movwf	(btemp+10)^0,c
 16267  010FDA  0E00               	movlw	0
 16268  010FDC  6E0C               	movwf	(btemp+11)^0,c
 16269                           
 16270                           ;stkvar	_p @ sp[(-56)+40]
 16271  010FDE  0EF0               	movlw	-16
 16272  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16273  010FE6  0EF1               	movlw	-15
 16274  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16275                           
 16276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16277  010FEE  D051               	goto	l11572
 16278  010FF0                     l11562:
 16279                           
 16280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 16281                           ;stkvar	_i @ sp[(-56)+36]
 16282  010FF0  50E1               	movf	fsr1l,w,c
 16283  010FF2  0FEC               	addlw	-20
 16284  010FF4  6ED9               	movwf	fsr2l,c
 16285  010FF6  50E2               	movf	fsr1h,w,c
 16286  010FF8  6EDA               	movwf	fsr2h,c
 16287  010FFA  0EFF               	movlw	255
 16288  010FFC  22DA               	addwfc	fsr2h,f,c
 16289  010FFE  06DE               	decf	postinc2,f,c
 16290  011000  0E00               	movlw	0
 16291  011002  5ADD               	subwfb	postdec2,f,c
 16292                           
 16293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 16294                           ;stkvar	_i @ sp[(-56)+36]
 16295  011004  0EEC               	movlw	-20
 16296  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 16297  01100C  0EED               	movlw	-19
 16298  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16299  011014  0E94               	movlw	low _dbuf
 16300  011016  240B               	addwf	(btemp+10)^0,w,c
 16301  011018  6ED9               	movwf	fsr2l,c
 16302  01101A  0E03               	movlw	high _dbuf
 16303  01101C  200C               	addwfc	(btemp+11)^0,w,c
 16304  01101E  6EDA               	movwf	fsr2h,c
 16305  011020  0E0A               	movlw	10
 16306  011022  6EE6               	movwf	postinc1,c
 16307  011024  0E00               	movlw	0
 16308  011026  6EE6               	movwf	postinc1,c
 16309                           
 16310                           ;stkvar	_e @ sp[(-58)+34]
 16311  011028  0EE8               	movlw	-24
 16312  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 16313  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 16314  011036  EC1D  F0C5         	call	___awmod	;wreg free
 16315  01103A  5001               	movf	btemp^0,w,c
 16316  01103C  0F30               	addlw	48
 16317  01103E  6EDF               	movwf	indf2,c
 16318                           
 16319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 16320  011040  0E0A               	movlw	10
 16321  011042  6EE6               	movwf	postinc1,c
 16322  011044  0E00               	movlw	0
 16323  011046  6EE6               	movwf	postinc1,c
 16324                           
 16325                           ;stkvar	_e @ sp[(-58)+34]
 16326  011048  0EE8               	movlw	-24
 16327  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 16328  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 16329  011056  EC0F  F0C2         	call	___awdiv	;wreg free
 16330                           
 16331                           ;stkvar	_e @ sp[(-56)+34]
 16332  01105A  0EEA               	movlw	-22
 16333  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 16334  011062  0EEB               	movlw	-21
 16335  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16336                           
 16337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 16338                           ;stkvar	_p @ sp[(-56)+40]
 16339  01106A  50E1               	movf	fsr1l,w,c
 16340  01106C  0FF0               	addlw	-16
 16341  01106E  6ED9               	movwf	fsr2l,c
 16342  011070  50E2               	movf	fsr1h,w,c
 16343  011072  6EDA               	movwf	fsr2h,c
 16344  011074  0EFF               	movlw	255
 16345  011076  22DA               	addwfc	fsr2h,f,c
 16346  011078  06DE               	decf	postinc2,f,c
 16347  01107A  0E00               	movlw	0
 16348  01107C  5ADD               	subwfb	postdec2,f,c
 16349                           
 16350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 16351                           ;stkvar	_w @ sp[(-56)+38]
 16352  01107E  50E1               	movf	fsr1l,w,c
 16353  011080  0FEE               	addlw	-18
 16354  011082  6ED9               	movwf	fsr2l,c
 16355  011084  50E2               	movf	fsr1h,w,c
 16356  011086  6EDA               	movwf	fsr2h,c
 16357  011088  0EFF               	movlw	255
 16358  01108A  22DA               	addwfc	fsr2h,f,c
 16359  01108C  06DE               	decf	postinc2,f,c
 16360  01108E  0E00               	movlw	0
 16361  011090  5ADD               	subwfb	postdec2,f,c
 16362  011092                     l11572:
 16363                           
 16364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16365                           ;stkvar	_e @ sp[(-56)+34]
 16366  011092  0EEA               	movlw	-22
 16367  011094  006F FF8C  F001    	movff	plusw1,btemp
 16368  01109A  0EEB               	movlw	-21
 16369  01109C  50E3               	movf	plusw1,w,c
 16370  01109E  1001               	iorwf	btemp^0,w,c
 16371  0110A0  A4D8               	btfss	status,2,c
 16372  0110A2  D7A6               	goto	l11562
 16373                           
 16374                           ;stkvar	_p @ sp[(-56)+40]
 16375  0110A4  0EF1               	movlw	-15
 16376  0110A6  BEE3               	btfsc	plusw1,7,c
 16377  0110A8  D007               	goto	u10890
 16378  0110AA  0EF1               	movlw	-15
 16379  0110AC  50E3               	movf	plusw1,w,c
 16380  0110AE  E1A0               	bnz	l11562
 16381  0110B0  0EF0               	movlw	-16
 16382  0110B2  04E3               	decf	plusw1,w,c
 16383  0110B4  B0D8               	btfsc	status,0,c
 16384  0110B6  D79C               	goto	l11562
 16385  0110B8                     u10890:
 16386                           
 16387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 16388                           ;stkvar	_i @ sp[(-56)+36]
 16389  0110B8  50E1               	movf	fsr1l,w,c
 16390  0110BA  0FEC               	addlw	-20
 16391  0110BC  6ED9               	movwf	fsr2l,c
 16392  0110BE  50E2               	movf	fsr1h,w,c
 16393  0110C0  6EDA               	movwf	fsr2h,c
 16394  0110C2  0EFF               	movlw	255
 16395  0110C4  22DA               	addwfc	fsr2h,f,c
 16396  0110C6  06DE               	decf	postinc2,f,c
 16397  0110C8  0E00               	movlw	0
 16398  0110CA  5ADD               	subwfb	postdec2,f,c
 16399                           
 16400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 16401                           ;stkvar	_sign @ sp[(-56)+42]
 16402  0110CC  0EF2               	movlw	-14
 16403  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 16404  0110D4  0EF3               	movlw	-13
 16405  0110D6  50E3               	movf	plusw1,w,c
 16406  0110D8  1001               	iorwf	btemp^0,w,c
 16407  0110DA  A4D8               	btfss	status,2,c
 16408  0110DC  D002               	goto	l11582
 16409  0110DE  0E2B               	movlw	43
 16410  0110E0  D001               	goto	L13
 16411  0110E2                     l11582:
 16412  0110E2  0E2D               	movlw	45
 16413  0110E4                     L13:
 16414  0110E4  6E0B               	movwf	(btemp+10)^0,c
 16415  0110E6  0E00               	movlw	0
 16416  0110E8  6E0C               	movwf	(btemp+11)^0,c
 16417                           
 16418                           ;stkvar	_efgtoa$5308 @ sp[(-56)+4]
 16419  0110EA  0ECC               	movlw	-52
 16420  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16421  0110F2  0ECD               	movlw	-51
 16422  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16423                           
 16424                           ;stkvar	_efgtoa$5308 @ sp[(-56)+4]
 16425                           ;stkvar	_i @ sp[(-56)+36]
 16426  0110FA  0EEC               	movlw	-20
 16427  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16428  011102  0EED               	movlw	-19
 16429  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 16430  01110A  0E94               	movlw	low _dbuf
 16431  01110C  240B               	addwf	(btemp+10)^0,w,c
 16432  01110E  6ED9               	movwf	fsr2l,c
 16433  011110  0E03               	movlw	high _dbuf
 16434  011112  200C               	addwfc	(btemp+11)^0,w,c
 16435  011114  6EDA               	movwf	fsr2h,c
 16436  011116  0ECC               	movlw	-52
 16437  011118  006F FF8F FFDF     	movff	plusw1,indf2
 16438                           
 16439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 16440                           ;stkvar	_w @ sp[(-56)+38]
 16441  01111E  50E1               	movf	fsr1l,w,c
 16442  011120  0FEE               	addlw	-18
 16443  011122  6ED9               	movwf	fsr2l,c
 16444  011124  50E2               	movf	fsr1h,w,c
 16445  011126  6EDA               	movwf	fsr2h,c
 16446  011128  0EFF               	movlw	255
 16447  01112A  22DA               	addwfc	fsr2h,f,c
 16448  01112C  06DE               	decf	postinc2,f,c
 16449  01112E  0E00               	movlw	0
 16450  011130  5ADD               	subwfb	postdec2,f,c
 16451                           
 16452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 16453                           ;stkvar	_i @ sp[(-56)+36]
 16454  011132  50E1               	movf	fsr1l,w,c
 16455  011134  0FEC               	addlw	-20
 16456  011136  6ED9               	movwf	fsr2l,c
 16457  011138  50E2               	movf	fsr1h,w,c
 16458  01113A  6EDA               	movwf	fsr2h,c
 16459  01113C  0EFF               	movlw	255
 16460  01113E  22DA               	addwfc	fsr2h,f,c
 16461  011140  06DE               	decf	postinc2,f,c
 16462  011142  0E00               	movlw	0
 16463  011144  5ADD               	subwfb	postdec2,f,c
 16464  011146  0EBF               	movlw	191
 16465  011148  6E0B               	movwf	(btemp+10)^0,c
 16466  01114A  0EFF               	movlw	255
 16467  01114C  6E0C               	movwf	(btemp+11)^0,c
 16468                           
 16469                           ;stkvar	_c @ sp[(-56)+-7]
 16470  01114E  0EC1               	movlw	-63
 16471  011150  50E3               	movf	plusw1,w,c
 16472  011152  6E09               	movwf	(btemp+8)^0,c
 16473  011154  6A0A               	clrf	(btemp+9)^0,c
 16474  011156  500B               	movf	(btemp+10)^0,w,c
 16475  011158  2609               	addwf	(btemp+8)^0,f,c
 16476  01115A  500C               	movf	(btemp+11)^0,w,c
 16477  01115C  220A               	addwfc	(btemp+9)^0,f,c
 16478  01115E  500A               	movf	(btemp+9)^0,w,c
 16479  011160  E106               	bnz	u10910
 16480  011162  0E1A               	movlw	26
 16481  011164  5C09               	subwf	(btemp+8)^0,w,c
 16482  011166  B0D8               	btfsc	status,0,c
 16483  011168  D002               	goto	u10910
 16484  01116A  0E01               	movlw	1
 16485  01116C  D001               	goto	u10920
 16486  01116E                     u10910:
 16487  01116E  0E00               	movlw	0
 16488  011170                     u10920:
 16489  011170  6E0B               	movwf	(btemp+10)^0,c
 16490  011172  6A0C               	clrf	(btemp+11)^0,c
 16491                           
 16492                           ;stkvar	_efgtoa$5310 @ sp[(-56)+0]
 16493  011174  0EC8               	movlw	-56
 16494  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16495  01117C  0EC9               	movlw	-55
 16496  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16497                           
 16498                           ;stkvar	_efgtoa$5310 @ sp[(-56)+0]
 16499  011184  0EC8               	movlw	-56
 16500  011186  006F FF8C  F001    	movff	plusw1,btemp
 16501  01118C  0EC9               	movlw	-55
 16502  01118E  50E3               	movf	plusw1,w,c
 16503  011190  1001               	iorwf	btemp^0,w,c
 16504  011192  A4D8               	btfss	status,2,c
 16505  011194  D002               	goto	l11598
 16506  011196  0E65               	movlw	101
 16507  011198  D001               	goto	L14
 16508  01119A                     l11598:
 16509  01119A  0E45               	movlw	69
 16510  01119C                     L14:
 16511  01119C  6E0B               	movwf	(btemp+10)^0,c
 16512  01119E  0E00               	movlw	0
 16513  0111A0  6E0C               	movwf	(btemp+11)^0,c
 16514                           
 16515                           ;stkvar	_efgtoa$5309 @ sp[(-56)+2]
 16516  0111A2  0ECA               	movlw	-54
 16517  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16518  0111AA  0ECB               	movlw	-53
 16519  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16520                           
 16521                           ;stkvar	_efgtoa$5309 @ sp[(-56)+2]
 16522                           ;stkvar	_i @ sp[(-56)+36]
 16523  0111B2  0EEC               	movlw	-20
 16524  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 16525  0111BA  0EED               	movlw	-19
 16526  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 16527  0111C2  0E94               	movlw	low _dbuf
 16528  0111C4  240B               	addwf	(btemp+10)^0,w,c
 16529  0111C6  6ED9               	movwf	fsr2l,c
 16530  0111C8  0E03               	movlw	high _dbuf
 16531  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 16532  0111CC  6EDA               	movwf	fsr2h,c
 16533  0111CE  0ECA               	movlw	-54
 16534  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 16535                           
 16536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 16537                           ;stkvar	_w @ sp[(-56)+38]
 16538  0111D6  50E1               	movf	fsr1l,w,c
 16539  0111D8  0FEE               	addlw	-18
 16540  0111DA  6ED9               	movwf	fsr2l,c
 16541  0111DC  50E2               	movf	fsr1h,w,c
 16542  0111DE  6EDA               	movwf	fsr2h,c
 16543  0111E0  0EFF               	movlw	255
 16544  0111E2  22DA               	addwfc	fsr2h,f,c
 16545  0111E4  06DE               	decf	postinc2,f,c
 16546  0111E6  0E00               	movlw	0
 16547  0111E8  5ADD               	subwfb	postdec2,f,c
 16548                           
 16549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 16550                           ;stkvar	_i @ sp[(-56)+36]
 16551  0111EA  0EEC               	movlw	-20
 16552  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16553  0111F2  0EED               	movlw	-19
 16554  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16555  0111FA  0E94               	movlw	low _dbuf
 16556  0111FC  240B               	addwf	(btemp+10)^0,w,c
 16557  0111FE  6E09               	movwf	(btemp+8)^0,c
 16558  011200  0E03               	movlw	high _dbuf
 16559  011202  200C               	addwfc	(btemp+11)^0,w,c
 16560  011204  6E0A               	movwf	(btemp+9)^0,c
 16561  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 16562  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 16563                           
 16564                           ;stkvar	_n @ sp[(-58)+32]
 16565  011212  0E94               	movlw	low _dbuf
 16566  011214  6E0B               	movwf	(btemp+10)^0,c
 16567  011216  0E03               	movlw	high _dbuf
 16568  011218  6E0C               	movwf	(btemp+11)^0,c
 16569  01121A  0EE6               	movlw	-26
 16570  01121C  50E3               	movf	plusw1,w,c
 16571  01121E  260B               	addwf	(btemp+10)^0,f,c
 16572  011220  0EE7               	movlw	-25
 16573  011222  50E3               	movf	plusw1,w,c
 16574  011224  220C               	addwfc	(btemp+11)^0,f,c
 16575  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16576  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16577  011232  ECAA  F0C9         	call	_strcpy	;wreg free
 16578  011236  EF16  F081         	goto	l11350
 16579  01123A                     l2134:
 16580                           
 16581                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 16582  01123A  0EC1               	movlw	193
 16583  01123C  26E1               	addwf	fsr1l,f,c
 16584  01123E  0EFF               	movlw	255
 16585  011240  22E2               	addwfc	fsr1h,f,c
 16586  011242  0012               	return		;funcret
 16587  011244                     __end_of_efgtoa:
 16588                           	opt callstack 0
 16589                           
 16590 ;; *************** function _tolower *****************
 16591 ;; Defined at:
 16592 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 16593 ;; Parameters:    Size  Location     Type
 16594 ;;  c               2  [STACK] int 
 16595 ;; Auto vars:     Size  Location     Type
 16596 ;;		None
 16597 ;; Return value:  Size  Location     Type
 16598 ;;                  2  [STACK] int 
 16599 ;; Registers used:
 16600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 16601 ;; Tracked objects:
 16602 ;;		On entry : 0/0
 16603 ;;		On exit  : 0/0
 16604 ;;		Unchanged: 0/0
 16605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16610 ;;Total ram usage:        0 bytes
 16611 ;; Hardware stack levels used:    1
 16612 ;; Hardware stack levels required when called:   16
 16613 ;; This function calls:
 16614 ;;		_isupper
 16615 ;; This function is called by:
 16616 ;;		_efgtoa
 16617 ;;		_vfpfcnvrt
 16618 ;; This function uses a reentrant model
 16619 ;;
 16620                           
 16621                           	psect	text56
 16622  019D96                     __ptext56:
 16623                           	opt callstack 0
 16624  019D96                     _tolower:
 16625                           	opt callstack 0
 16626                           
 16627                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16628  019D96  52E6               	movf	postinc1,f,c
 16629  019D98  52E6               	movf	postinc1,f,c
 16630                           
 16631                           ;stkvar	_c @ sp[(-2)+-2]
 16632                           
 16633                           ;incstack = 0
 16634 ;; hardware stack exceeded
 16635  019D9A  0EFC               	movlw	-4
 16636  019D9C  50E3               	movf	plusw1,w,c
 16637  019D9E  0FBF               	addlw	191
 16638  019DA0  6E0B               	movwf	(btemp+10)^0,c
 16639  019DA2  0EFD               	movlw	-3
 16640  019DA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16641  019DAA  0EFF               	movlw	255
 16642  019DAC  220C               	addwfc	(btemp+11)^0,f,c
 16643  019DAE  500C               	movf	(btemp+11)^0,w,c
 16644  019DB0  E106               	bnz	u5720
 16645  019DB2  0E1A               	movlw	26
 16646  019DB4  5C0B               	subwf	(btemp+10)^0,w,c
 16647  019DB6  B0D8               	btfsc	status,0,c
 16648  019DB8  D002               	goto	u5720
 16649  019DBA  0E01               	movlw	1
 16650  019DBC  D001               	goto	u5730
 16651  019DBE                     u5720:
 16652  019DBE  0E00               	movlw	0
 16653  019DC0                     u5730:
 16654  019DC0  6E0B               	movwf	(btemp+10)^0,c
 16655  019DC2  6A0C               	clrf	(btemp+11)^0,c
 16656                           
 16657                           ;stkvar	_tolower$6129 @ sp[(-2)+0]
 16658  019DC4  0EFE               	movlw	-2
 16659  019DC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16660  019DCC  0EFF               	movlw	-1
 16661  019DCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16662                           
 16663                           ;stkvar	_tolower$6129 @ sp[(-2)+0]
 16664  019DD4  0EFE               	movlw	-2
 16665  019DD6  006F FF8C  F001    	movff	plusw1,btemp
 16666  019DDC  0EFF               	movlw	-1
 16667  019DDE  50E3               	movf	plusw1,w,c
 16668  019DE0  1001               	iorwf	btemp^0,w,c
 16669  019DE2  B4D8               	btfsc	status,2,c
 16670  019DE4  D00D               	goto	l7624
 16671                           
 16672                           ;stkvar	_c @ sp[(-2)+-2]
 16673  019DE6  0EFC               	movlw	-4
 16674  019DE8  006F FF8C  F001    	movff	plusw1,btemp
 16675  019DEE  0EFD               	movlw	-3
 16676  019DF0  006F FF8C  F002    	movff	plusw1,btemp+1
 16677  019DF6  0E20               	movlw	32
 16678  019DF8  1201               	iorwf	btemp^0,f,c
 16679  019DFA  0E00               	movlw	0
 16680  019DFC  1202               	iorwf	(btemp+1)^0,f,c
 16681  019DFE  D008               	goto	l3406
 16682  019E00                     l7624:
 16683                           
 16684                           ;stkvar	_c @ sp[(-2)+-2]
 16685  019E00  0EFC               	movlw	-4
 16686  019E02  006F FF8C  F001    	movff	plusw1,btemp
 16687  019E08  0EFD               	movlw	-3
 16688  019E0A  006F FF8C  F002    	movff	plusw1,btemp+1
 16689  019E10                     l3406:
 16690                           
 16691                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16692  019E10  52E5               	movf	postdec1,f,c
 16693  019E12  52E5               	movf	postdec1,f,c
 16694  019E14  52E5               	movf	postdec1,f,c
 16695  019E16  52E5               	movf	postdec1,f,c
 16696  019E18  0012               	return		;funcret
 16697  019E1A                     __end_of_tolower:
 16698                           	opt callstack 0
 16699                           
 16700 ;; *************** function _isupper *****************
 16701 ;; Defined at:
 16702 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 16703 ;; Parameters:    Size  Location     Type
 16704 ;;  c               2  [STACK] int 
 16705 ;; Auto vars:     Size  Location     Type
 16706 ;;		None
 16707 ;; Return value:  Size  Location     Type
 16708 ;;                  2  [STACK] int 
 16709 ;; Registers used:
 16710 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 16711 ;; Tracked objects:
 16712 ;;		On entry : 0/0
 16713 ;;		On exit  : 0/0
 16714 ;;		Unchanged: 0/0
 16715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16720 ;;Total ram usage:        0 bytes
 16721 ;; Hardware stack levels used:    1
 16722 ;; Hardware stack levels required when called:   15
 16723 ;; This function calls:
 16724 ;;		Nothing
 16725 ;; This function is called by:
 16726 ;;		_efgtoa
 16727 ;;		_xtoa
 16728 ;;		_vfpfcnvrt
 16729 ;;		_tolower
 16730 ;; This function uses a reentrant model
 16731 ;;
 16732                           
 16733                           	psect	text57
 16734  01A9DA                     __ptext57:
 16735                           	opt callstack 0
 16736  01A9DA                     _isupper:
 16737                           	opt callstack 0
 16738                           
 16739                           ;stkvar	_c @ sp[(0)+-2]
 16740                           
 16741                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16742                           ;incstack = 0
 16743 ;; hardware stack exceeded
 16744  01A9DA  0EFE               	movlw	-2
 16745  01A9DC  50E3               	movf	plusw1,w,c
 16746  01A9DE  0FBF               	addlw	191
 16747  01A9E0  6E0B               	movwf	(btemp+10)^0,c
 16748  01A9E2  0EFF               	movlw	-1
 16749  01A9E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16750  01A9EA  0EFF               	movlw	255
 16751  01A9EC  220C               	addwfc	(btemp+11)^0,f,c
 16752  01A9EE  500C               	movf	(btemp+11)^0,w,c
 16753  01A9F0  E106               	bnz	u5120
 16754  01A9F2  0E1A               	movlw	26
 16755  01A9F4  5C0B               	subwf	(btemp+10)^0,w,c
 16756  01A9F6  B0D8               	btfsc	status,0,c
 16757  01A9F8  D002               	goto	u5120
 16758  01A9FA  0E01               	movlw	1
 16759  01A9FC  D001               	goto	u5130
 16760  01A9FE                     u5120:
 16761  01A9FE  0E00               	movlw	0
 16762  01AA00                     u5130:
 16763  01AA00  6E01               	movwf	btemp^0,c
 16764  01AA02  6A02               	clrf	(btemp+1)^0,c
 16765                           
 16766                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16767  01AA04  52E5               	movf	postdec1,f,c
 16768  01AA06  52E5               	movf	postdec1,f,c
 16769  01AA08  0012               	return		;funcret
 16770  01AA0A                     __end_of_isupper:
 16771                           	opt callstack 0
 16772                           
 16773 ;; *************** function _strcpy *****************
 16774 ;; Defined at:
 16775 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 16776 ;; Parameters:    Size  Location     Type
 16777 ;;  dest            2  [STACK] PTR unsigned char 
 16778 ;;		 -> dbuf(80), 
 16779 ;;  src             2  [STACK] PTR const unsigned char 
 16780 ;;		 -> STR_61(4), STR_60(4), STR_57(4), STR_56(4), 
 16781 ;;		 -> dbuf(80), 
 16782 ;; Auto vars:     Size  Location     Type
 16783 ;;  d               2  [STACK] PTR unsigned char 
 16784 ;;		 -> dbuf(80), 
 16785 ;;  s               2  [STACK] PTR const unsigned char 
 16786 ;;		 -> STR_61(4), STR_60(4), STR_57(4), STR_56(4), 
 16787 ;;		 -> dbuf(80), 
 16788 ;; Return value:  Size  Location     Type
 16789 ;;                  2  [STACK] PTR unsigned char 
 16790 ;; Registers used:
 16791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 16792 ;; Tracked objects:
 16793 ;;		On entry : 0/0
 16794 ;;		On exit  : 0/0
 16795 ;;		Unchanged: 0/0
 16796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16801 ;;Total ram usage:        0 bytes
 16802 ;; Hardware stack levels used:    1
 16803 ;; Hardware stack levels required when called:   15
 16804 ;; This function calls:
 16805 ;;		Nothing
 16806 ;; This function is called by:
 16807 ;;		_efgtoa
 16808 ;; This function uses a reentrant model
 16809 ;;
 16810                           
 16811                           	psect	text58
 16812  019354                     __ptext58:
 16813                           	opt callstack 0
 16814  019354                     _strcpy:
 16815                           	opt callstack 0
 16816                           
 16817                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16818  019354  52E6               	movf	postinc1,f,c
 16819  019356  52E6               	movf	postinc1,f,c
 16820  019358  52E6               	movf	postinc1,f,c
 16821  01935A  52E6               	movf	postinc1,f,c
 16822                           
 16823                           ;stkvar	_src @ sp[(-4)+-4]
 16824                           
 16825                           ;incstack = 0
 16826 ;; hardware stack exceeded
 16827  01935C  0EF8               	movlw	-8
 16828  01935E  006F FF8C  F00B    	movff	plusw1,btemp+10
 16829  019364  0EF9               	movlw	-7
 16830  019366  006F FF8C  F00C    	movff	plusw1,btemp+11
 16831                           
 16832                           ;stkvar	_s @ sp[(-4)+2]
 16833  01936C  0EFF               	movlw	-1
 16834  01936E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16835  019374  0EFE               	movlw	-2
 16836  019376  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16837                           
 16838                           ;stkvar	_dest @ sp[(-4)+-2]
 16839  01937C  0EFA               	movlw	-6
 16840  01937E  006F FF8C  F00B    	movff	plusw1,btemp+10
 16841  019384  0EFB               	movlw	-5
 16842  019386  006F FF8C  F00C    	movff	plusw1,btemp+11
 16843                           
 16844                           ;stkvar	_d @ sp[(-4)+0]
 16845  01938C  0EFD               	movlw	-3
 16846  01938E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16847  019394  0EFC               	movlw	-4
 16848  019396  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16849  01939C                     l11182:
 16850                           
 16851                           ;stkvar	_s @ sp[(-4)+2]
 16852  01939C  50E1               	movf	fsr1l,w,c
 16853  01939E  0FFE               	addlw	-2
 16854  0193A0  6ED9               	movwf	fsr2l,c
 16855  0193A2  50E2               	movf	fsr1h,w,c
 16856  0193A4  6EDA               	movwf	fsr2h,c
 16857  0193A6  0EFF               	movlw	255
 16858  0193A8  22DA               	addwfc	fsr2h,f,c
 16859  0193AA  006F FF7C  F00B    	movff	indf2,btemp+10
 16860  0193B0  0E01               	movlw	1
 16861  0193B2  26DE               	addwf	postinc2,f,c
 16862  0193B4  006F FF7C  F00C    	movff	indf2,btemp+11
 16863  0193BA  0E00               	movlw	0
 16864  0193BC  22DD               	addwfc	postdec2,f,c
 16865  0193BE  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16866  0193C4  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16867  0193CA  0E00               	movlw	low (__mediumconst shr (0+16))
 16868  0193CC  6EF8               	movwf	tblptru,c
 16869                           
 16870                           ;stkvar	_d @ sp[(-4)+0]
 16871  0193CE  50E1               	movf	fsr1l,w,c
 16872  0193D0  0FFC               	addlw	-4
 16873  0193D2  6ED9               	movwf	fsr2l,c
 16874  0193D4  50E2               	movf	fsr1h,w,c
 16875  0193D6  6EDA               	movwf	fsr2h,c
 16876  0193D8  0EFF               	movlw	255
 16877  0193DA  22DA               	addwfc	fsr2h,f,c
 16878  0193DC  006F FF7C  F00B    	movff	indf2,btemp+10
 16879  0193E2  0E01               	movlw	1
 16880  0193E4  26DE               	addwf	postinc2,f,c
 16881  0193E6  006F FF7C  F00C    	movff	indf2,btemp+11
 16882  0193EC  0E00               	movlw	0
 16883  0193EE  22DD               	addwfc	postdec2,f,c
 16884  0193F0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16885  0193F6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16886  0193FC  0E1F               	movlw	(high __ramtop+-1)
 16887  0193FE  64F7               	cpfsgt	tblptrh,c
 16888  019400  D003               	bra	u10177
 16889  019402  0008               	tblrd		*
 16890  019404  50F5               	movf	tablat,w,c
 16891  019406  D007               	bra	u10170
 16892  019408                     u10177:
 16893  019408  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16894  01940E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16895  019414  50EF               	movf	indf0,w,c
 16896  019416                     u10170:
 16897  019416  6EDF               	movwf	indf2,c
 16898  019418  50DF               	movf	indf2,w,c
 16899  01941A  A4D8               	btfss	status,2,c
 16900  01941C  D7BF               	goto	l11182
 16901                           
 16902                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 16903  01941E  0EF8               	movlw	248
 16904  019420  26E1               	addwf	fsr1l,f,c
 16905  019422  0EFF               	movlw	255
 16906  019424  22E2               	addwfc	fsr1h,f,c
 16907  019426  0012               	return		;funcret
 16908  019428                     __end_of_strcpy:
 16909                           	opt callstack 0
 16910                           
 16911 ;; *************** function _floorf *****************
 16912 ;; Defined at:
 16913 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 16914 ;; Parameters:    Size  Location     Type
 16915 ;;  x               4  [STACK] float 
 16916 ;; Auto vars:     Size  Location     Type
 16917 ;;  u               4  [STACK] struct .
 16918 ;;  m               4  [STACK] unsigned long 
 16919 ;;  e               2  [STACK] int 
 16920 ;; Return value:  Size  Location     Type
 16921 ;;                  4  [STACK] float 
 16922 ;; Registers used:
 16923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 16924 ;; Tracked objects:
 16925 ;;		On entry : 0/0
 16926 ;;		On exit  : 0/0
 16927 ;;		Unchanged: 0/0
 16928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16933 ;;Total ram usage:        0 bytes
 16934 ;; Hardware stack levels used:    1
 16935 ;; Hardware stack levels required when called:   15
 16936 ;; This function calls:
 16937 ;;		Nothing
 16938 ;; This function is called by:
 16939 ;;		_efgtoa
 16940 ;; This function uses a reentrant model
 16941 ;;
 16942                           
 16943                           	psect	text59
 16944  015A8C                     __ptext59:
 16945                           	opt callstack 0
 16946  015A8C                     _floorf:
 16947                           	opt callstack 0
 16948                           
 16949                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16950  015A8C  0E0A               	movlw	10
 16951  015A8E  26E1               	addwf	fsr1l,f,c
 16952  015A90  0E00               	movlw	0
 16953  015A92  22E2               	addwfc	fsr1h,f,c
 16954                           
 16955                           ;incstack = 0
 16956 ;; hardware stack exceeded
 16957  015A94  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 16958  015A9A  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 16959  015AA0  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 16960  015AA6  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 16961                           
 16962                           ;stkvar	_u @ sp[(-10)+0]
 16963  015AAC  0EF6               	movlw	-10
 16964  015AAE  0060  F027  FFE3   	movff	btemp+8,plusw1
 16965  015AB4  0EF7               	movlw	-9
 16966  015AB6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16967  015ABC  0EF8               	movlw	-8
 16968  015ABE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16969  015AC4  0EF9               	movlw	-7
 16970  015AC6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16971                           
 16972                           ;stkvar	_x @ sp[(-10)+-4]
 16973  015ACC  0EF2               	movlw	-14
 16974  015ACE  006F FF8C  F009    	movff	plusw1,btemp+8
 16975  015AD4  0EF3               	movlw	-13
 16976  015AD6  006F FF8C  F00A    	movff	plusw1,btemp+9
 16977  015ADC  0EF4               	movlw	-12
 16978  015ADE  006F FF8C  F00B    	movff	plusw1,btemp+10
 16979  015AE4  0EF5               	movlw	-11
 16980  015AE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 16981                           
 16982                           ;stkvar	_u @ sp[(-10)+0]
 16983  015AEC  0EF6               	movlw	-10
 16984  015AEE  0060  F027  FFE3   	movff	btemp+8,plusw1
 16985  015AF4  0EF7               	movlw	-9
 16986  015AF6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16987  015AFC  0EF8               	movlw	-8
 16988  015AFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16989  015B04  0EF9               	movlw	-7
 16990  015B06  0060  F033  FFE3   	movff	btemp+11,plusw1
 16991  015B0C  0E81               	movlw	129
 16992  015B0E  6E0B               	movwf	(btemp+10)^0,c
 16993  015B10  0EFF               	movlw	255
 16994  015B12  6E0C               	movwf	(btemp+11)^0,c
 16995                           
 16996                           ;stkvar	_u @ sp[(-10)+0]
 16997  015B14  0EF6               	movlw	-10
 16998  015B16  006F FF8C  F005    	movff	plusw1,btemp+4
 16999  015B1C  0EF7               	movlw	-9
 17000  015B1E  006F FF8C  F006    	movff	plusw1,btemp+5
 17001  015B24  0EF8               	movlw	-8
 17002  015B26  006F FF8C  F007    	movff	plusw1,btemp+6
 17003  015B2C  0EF9               	movlw	-7
 17004  015B2E  006F FF8C  F008    	movff	plusw1,btemp+7
 17005  015B34  0E18               	movlw	24
 17006  015B36  D005               	goto	u5750
 17007  015B38                     u5755:
 17008  015B38  90D8               	bcf	status,0,c
 17009  015B3A  3208               	rrcf	(btemp+7)^0,f,c
 17010  015B3C  3207               	rrcf	(btemp+6)^0,f,c
 17011  015B3E  3206               	rrcf	(btemp+5)^0,f,c
 17012  015B40  3205               	rrcf	(btemp+4)^0,f,c
 17013  015B42                     u5750:
 17014  015B42  2EE8               	decfsz	wreg,f,c
 17015  015B44  D7F9               	goto	u5755
 17016  015B46  0060  F014  F009   	movff	btemp+4,btemp+8
 17017  015B4C  0060  F018  F00A   	movff	btemp+5,btemp+9
 17018  015B52  0EFF               	movlw	255
 17019  015B54  1609               	andwf	(btemp+8)^0,f,c
 17020  015B56  0E00               	movlw	0
 17021  015B58  160A               	andwf	(btemp+9)^0,f,c
 17022  015B5A  500B               	movf	(btemp+10)^0,w,c
 17023  015B5C  2609               	addwf	(btemp+8)^0,f,c
 17024  015B5E  500C               	movf	(btemp+11)^0,w,c
 17025  015B60  220A               	addwfc	(btemp+9)^0,f,c
 17026                           
 17027                           ;stkvar	_e @ sp[(-10)+8]
 17028  015B62  0EFE               	movlw	-2
 17029  015B64  0060  F027  FFE3   	movff	btemp+8,plusw1
 17030  015B6A  0EFF               	movlw	-1
 17031  015B6C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17032                           
 17033                           ;stkvar	_e @ sp[(-10)+8]
 17034  015B72  0EFF               	movlw	-1
 17035  015B74  BEE3               	btfsc	plusw1,7,c
 17036  015B76  D019               	goto	l7638
 17037  015B78  0EFF               	movlw	-1
 17038  015B7A  50E3               	movf	plusw1,w,c
 17039  015B7C  E108               	bnz	u5760
 17040  015B7E  0EFE               	movlw	-2
 17041  015B80  006F FF8C  F001    	movff	plusw1,btemp
 17042  015B86  0E17               	movlw	23
 17043  015B88  5E01               	subwf	btemp^0,f,c
 17044  015B8A  A0D8               	btfss	status,0,c
 17045  015B8C  D00E               	goto	l7638
 17046  015B8E                     u5760:
 17047                           
 17048                           ;stkvar	_x @ sp[(-10)+-4]
 17049  015B8E  0EF2               	movlw	-14
 17050  015B90  006F FF8C  F001    	movff	plusw1,btemp
 17051  015B96  0EF3               	movlw	-13
 17052  015B98  006F FF8C  F002    	movff	plusw1,btemp+1
 17053  015B9E  0EF4               	movlw	-12
 17054  015BA0  006F FF8C  F003    	movff	plusw1,btemp+2
 17055  015BA6  0EF5               	movlw	-11
 17056  015BA8  D11F               	goto	L15
 17057  015BAA                     l7638:
 17058                           
 17059                           ;stkvar	_e @ sp[(-10)+8]
 17060  015BAA  0EFF               	movlw	-1
 17061  015BAC  BEE3               	btfsc	plusw1,7,c
 17062  015BAE  D0B4               	goto	l7654
 17063                           
 17064                           ;stkvar	_e @ sp[(-10)+8]
 17065  015BB0  0EFE               	movlw	-2
 17066  015BB2  006F FF8C  F00C    	movff	plusw1,btemp+11
 17067  015BB8  0EFF               	movlw	255
 17068  015BBA  6E05               	movwf	(btemp+4)^0,c
 17069  015BBC  0EFF               	movlw	255
 17070  015BBE  6E06               	movwf	(btemp+5)^0,c
 17071  015BC0  0E7F               	movlw	127
 17072  015BC2  6E07               	movwf	(btemp+6)^0,c
 17073  015BC4  0E00               	movlw	0
 17074  015BC6  6E08               	movwf	(btemp+7)^0,c
 17075  015BC8                     u5785:
 17076  015BC8  660C               	tstfsz	(btemp+11)^0,c
 17077  015BCA  D001               	goto	u5786
 17078  015BCC  D007               	goto	u5787
 17079  015BCE                     u5786:
 17080  015BCE  3408               	rlcf	(btemp+7)^0,w,c
 17081  015BD0  3208               	rrcf	(btemp+7)^0,f,c
 17082  015BD2  3207               	rrcf	(btemp+6)^0,f,c
 17083  015BD4  3206               	rrcf	(btemp+5)^0,f,c
 17084  015BD6  3205               	rrcf	(btemp+4)^0,f,c
 17085  015BD8  2E0C               	decfsz	(btemp+11)^0,f,c
 17086  015BDA  D7F6               	goto	u5785
 17087  015BDC                     u5787:
 17088                           
 17089                           ;stkvar	_m @ sp[(-10)+4]
 17090  015BDC  0EFA               	movlw	-6
 17091  015BDE  0060  F017  FFE3   	movff	btemp+4,plusw1
 17092  015BE4  0EFB               	movlw	-5
 17093  015BE6  0060  F01B  FFE3   	movff	btemp+5,plusw1
 17094  015BEC  0EFC               	movlw	-4
 17095  015BEE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17096  015BF4  0EFD               	movlw	-3
 17097  015BF6  0060  F023  FFE3   	movff	btemp+7,plusw1
 17098                           
 17099                           ;stkvar	_m @ sp[(-10)+4]
 17100                           ;stkvar	_u @ sp[(-10)+0]
 17101  015BFC  0EF6               	movlw	-10
 17102  015BFE  006F FF8C  F009    	movff	plusw1,btemp+8
 17103  015C04  0EF7               	movlw	-9
 17104  015C06  006F FF8C  F00A    	movff	plusw1,btemp+9
 17105  015C0C  0EF8               	movlw	-8
 17106  015C0E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17107  015C14  0EF9               	movlw	-7
 17108  015C16  006F FF8C  F00C    	movff	plusw1,btemp+11
 17109  015C1C  0EFA               	movlw	-6
 17110  015C1E  50E3               	movf	plusw1,w,c
 17111  015C20  1609               	andwf	(btemp+8)^0,f,c
 17112  015C22  0EFB               	movlw	-5
 17113  015C24  50E3               	movf	plusw1,w,c
 17114  015C26  160A               	andwf	(btemp+9)^0,f,c
 17115  015C28  0EFC               	movlw	-4
 17116  015C2A  50E3               	movf	plusw1,w,c
 17117  015C2C  160B               	andwf	(btemp+10)^0,f,c
 17118  015C2E  0EFD               	movlw	-3
 17119  015C30  50E3               	movf	plusw1,w,c
 17120  015C32  160C               	andwf	(btemp+11)^0,f,c
 17121  015C34  5009               	movf	(btemp+8)^0,w,c
 17122  015C36  100A               	iorwf	(btemp+9)^0,w,c
 17123  015C38  100B               	iorwf	(btemp+10)^0,w,c
 17124  015C3A  100C               	iorwf	(btemp+11)^0,w,c
 17125  015C3C  B4D8               	btfsc	status,2,c
 17126  015C3E  D7A7               	goto	u5760
 17127                           
 17128                           ;stkvar	_u @ sp[(-10)+0]
 17129  015C40  0EF6               	movlw	-10
 17130  015C42  006F FF8C  F009    	movff	plusw1,btemp+8
 17131  015C48  0EF7               	movlw	-9
 17132  015C4A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17133  015C50  0EF8               	movlw	-8
 17134  015C52  006F FF8C  F00B    	movff	plusw1,btemp+10
 17135  015C58  0EF9               	movlw	-7
 17136  015C5A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17137  015C60  0E20               	movlw	32
 17138  015C62  D005               	goto	u5800
 17139  015C64                     u5805:
 17140  015C64  90D8               	bcf	status,0,c
 17141  015C66  320C               	rrcf	(btemp+11)^0,f,c
 17142  015C68  320B               	rrcf	(btemp+10)^0,f,c
 17143  015C6A  320A               	rrcf	(btemp+9)^0,f,c
 17144  015C6C  3209               	rrcf	(btemp+8)^0,f,c
 17145  015C6E                     u5800:
 17146  015C6E  2EE8               	decfsz	wreg,f,c
 17147  015C70  D7F9               	goto	u5805
 17148  015C72  5009               	movf	(btemp+8)^0,w,c
 17149  015C74  B4D8               	btfsc	status,2,c
 17150  015C76  D028               	goto	l7652
 17151                           
 17152                           ;stkvar	_m @ sp[(-10)+4]
 17153                           ;stkvar	_u @ sp[(-10)+0]
 17154  015C78  0EF6               	movlw	-10
 17155  015C7A  50E3               	movf	plusw1,w,c
 17156  015C7C  6E01               	movwf	btemp^0,c
 17157  015C7E  0EFA               	movlw	-6
 17158  015C80  50E3               	movf	plusw1,w,c
 17159  015C82  2601               	addwf	btemp^0,f,c
 17160  015C84  0EF6               	movlw	-10
 17161  015C86  0060  F007  FFE3   	movff	btemp,plusw1
 17162  015C8C  0EF7               	movlw	-9
 17163  015C8E  50E3               	movf	plusw1,w,c
 17164  015C90  6E01               	movwf	btemp^0,c
 17165  015C92  0EFB               	movlw	-5
 17166  015C94  50E3               	movf	plusw1,w,c
 17167  015C96  2201               	addwfc	btemp^0,f,c
 17168  015C98  0EF7               	movlw	-9
 17169  015C9A  0060  F007  FFE3   	movff	btemp,plusw1
 17170  015CA0  0EF8               	movlw	-8
 17171  015CA2  50E3               	movf	plusw1,w,c
 17172  015CA4  6E01               	movwf	btemp^0,c
 17173  015CA6  0EFC               	movlw	-4
 17174  015CA8  50E3               	movf	plusw1,w,c
 17175  015CAA  2201               	addwfc	btemp^0,f,c
 17176  015CAC  0EF8               	movlw	-8
 17177  015CAE  0060  F007  FFE3   	movff	btemp,plusw1
 17178  015CB4  0EF9               	movlw	-7
 17179  015CB6  50E3               	movf	plusw1,w,c
 17180  015CB8  6E01               	movwf	btemp^0,c
 17181  015CBA  0EFD               	movlw	-3
 17182  015CBC  50E3               	movf	plusw1,w,c
 17183  015CBE  2201               	addwfc	btemp^0,f,c
 17184  015CC0  0EF9               	movlw	-7
 17185  015CC2  0060  F007  FFE3   	movff	btemp,plusw1
 17186  015CC8                     l7652:
 17187                           
 17188                           ;stkvar	_m @ sp[(-10)+4]
 17189  015CC8  0EFA               	movlw	-6
 17190  015CCA  006F FF8C  F009    	movff	plusw1,btemp+8
 17191  015CD0  0EFB               	movlw	-5
 17192  015CD2  006F FF8C  F00A    	movff	plusw1,btemp+9
 17193  015CD8  0EFC               	movlw	-4
 17194  015CDA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17195  015CE0  0EFD               	movlw	-3
 17196  015CE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 17197  015CE8  1C09               	comf	(btemp+8)^0,w,c
 17198  015CEA  6E05               	movwf	(btemp+4)^0,c
 17199  015CEC  1C0A               	comf	(btemp+9)^0,w,c
 17200  015CEE  6E06               	movwf	(btemp+5)^0,c
 17201  015CF0  1C0B               	comf	(btemp+10)^0,w,c
 17202  015CF2  6E07               	movwf	(btemp+6)^0,c
 17203  015CF4  1C0C               	comf	(btemp+11)^0,w,c
 17204  015CF6  6E08               	movwf	(btemp+7)^0,c
 17205                           
 17206                           ;stkvar	_u @ sp[(-10)+0]
 17207  015CF8  50E1               	movf	fsr1l,w,c
 17208  015CFA  0FF6               	addlw	-10
 17209  015CFC  6ED9               	movwf	fsr2l,c
 17210  015CFE  50E2               	movf	fsr1h,w,c
 17211  015D00  6EDA               	movwf	fsr2h,c
 17212  015D02  0EFF               	movlw	255
 17213  015D04  22DA               	addwfc	fsr2h,f,c
 17214  015D06  5005               	movf	(btemp+4)^0,w,c
 17215  015D08  16DE               	andwf	postinc2,f,c
 17216  015D0A  5006               	movf	(btemp+5)^0,w,c
 17217  015D0C  16DE               	andwf	postinc2,f,c
 17218  015D0E  5007               	movf	(btemp+6)^0,w,c
 17219  015D10  16DE               	andwf	postinc2,f,c
 17220  015D12  5008               	movf	(btemp+7)^0,w,c
 17221  015D14  16DE               	andwf	postinc2,f,c
 17222  015D16  D05B               	goto	l7662
 17223  015D18                     l7654:
 17224                           
 17225                           ;stkvar	_u @ sp[(-10)+0]
 17226  015D18  0EF6               	movlw	-10
 17227  015D1A  006F FF8C  F009    	movff	plusw1,btemp+8
 17228  015D20  0EF7               	movlw	-9
 17229  015D22  006F FF8C  F00A    	movff	plusw1,btemp+9
 17230  015D28  0EF8               	movlw	-8
 17231  015D2A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17232  015D30  0EF9               	movlw	-7
 17233  015D32  006F FF8C  F00C    	movff	plusw1,btemp+11
 17234  015D38  0E20               	movlw	32
 17235  015D3A  D005               	goto	u5820
 17236  015D3C                     u5825:
 17237  015D3C  90D8               	bcf	status,0,c
 17238  015D3E  320C               	rrcf	(btemp+11)^0,f,c
 17239  015D40  320B               	rrcf	(btemp+10)^0,f,c
 17240  015D42  320A               	rrcf	(btemp+9)^0,f,c
 17241  015D44  3209               	rrcf	(btemp+8)^0,f,c
 17242  015D46                     u5820:
 17243  015D46  2EE8               	decfsz	wreg,f,c
 17244  015D48  D7F9               	goto	u5825
 17245  015D4A  6609               	tstfsz	(btemp+8)^0,c
 17246  015D4C  D009               	goto	l7658
 17247                           
 17248                           ;stkvar	_u @ sp[(-10)+0]
 17249  015D4E  0EF6               	movlw	-10
 17250  015D50  6AE3               	clrf	plusw1,c
 17251  015D52  0EF7               	movlw	-9
 17252  015D54  6AE3               	clrf	plusw1,c
 17253  015D56  0EF8               	movlw	-8
 17254  015D58  6AE3               	clrf	plusw1,c
 17255  015D5A  0EF9               	movlw	-7
 17256  015D5C  6AE3               	clrf	plusw1,c
 17257  015D5E  D037               	goto	l7662
 17258  015D60                     l7658:
 17259                           
 17260                           ;stkvar	_u @ sp[(-10)+0]
 17261  015D60  0EF6               	movlw	-10
 17262  015D62  006F FF8C  F009    	movff	plusw1,btemp+8
 17263  015D68  0EF7               	movlw	-9
 17264  015D6A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17265  015D70  0EF8               	movlw	-8
 17266  015D72  006F FF8C  F00B    	movff	plusw1,btemp+10
 17267  015D78  0EF9               	movlw	-7
 17268  015D7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17269  015D80  90D8               	bcf	status,0,c
 17270  015D82  3409               	rlcf	(btemp+8)^0,w,c
 17271  015D84  6E05               	movwf	(btemp+4)^0,c
 17272  015D86  340A               	rlcf	(btemp+9)^0,w,c
 17273  015D88  6E06               	movwf	(btemp+5)^0,c
 17274  015D8A  340B               	rlcf	(btemp+10)^0,w,c
 17275  015D8C  6E07               	movwf	(btemp+6)^0,c
 17276  015D8E  340C               	rlcf	(btemp+11)^0,w,c
 17277  015D90  6E08               	movwf	(btemp+7)^0,c
 17278  015D92  5005               	movf	(btemp+4)^0,w,c
 17279  015D94  1006               	iorwf	(btemp+5)^0,w,c
 17280  015D96  1007               	iorwf	(btemp+6)^0,w,c
 17281  015D98  1008               	iorwf	(btemp+7)^0,w,c
 17282  015D9A  B4D8               	btfsc	status,2,c
 17283  015D9C  D018               	goto	l7662
 17284  015D9E  0E00               	movlw	0
 17285  015DA0  6E09               	movwf	(btemp+8)^0,c
 17286  015DA2  0E00               	movlw	0
 17287  015DA4  6E0A               	movwf	(btemp+9)^0,c
 17288  015DA6  0E80               	movlw	128
 17289  015DA8  6E0B               	movwf	(btemp+10)^0,c
 17290  015DAA  0EBF               	movlw	191
 17291  015DAC  6E0C               	movwf	(btemp+11)^0,c
 17292                           
 17293                           ;stkvar	_u @ sp[(-10)+0]
 17294  015DAE  0EF6               	movlw	-10
 17295  015DB0  0060  F027  FFE3   	movff	btemp+8,plusw1
 17296  015DB6  0EF7               	movlw	-9
 17297  015DB8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17298  015DBE  0EF8               	movlw	-8
 17299  015DC0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17300  015DC6  0EF9               	movlw	-7
 17301  015DC8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17302  015DCE                     l7662:
 17303                           
 17304                           ;stkvar	_u @ sp[(-10)+0]
 17305  015DCE  0EF6               	movlw	-10
 17306  015DD0  006F FF8C  F001    	movff	plusw1,btemp
 17307  015DD6  0EF7               	movlw	-9
 17308  015DD8  006F FF8C  F002    	movff	plusw1,btemp+1
 17309  015DDE  0EF8               	movlw	-8
 17310  015DE0  006F FF8C  F003    	movff	plusw1,btemp+2
 17311  015DE6  0EF9               	movlw	-7
 17312  015DE8                     L15:
 17313  015DE8  006F FF8C  F004    	movff	plusw1,btemp+3
 17314                           
 17315                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17316  015DEE  0EF2               	movlw	242
 17317  015DF0  26E1               	addwf	fsr1l,f,c
 17318  015DF2  0EFF               	movlw	255
 17319  015DF4  22E2               	addwfc	fsr1h,f,c
 17320  015DF6  0012               	return		;funcret
 17321  015DF8                     __end_of_floorf:
 17322                           	opt callstack 0
 17323                           
 17324 ;; *************** function ___fpclassifyf *****************
 17325 ;; Defined at:
 17326 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 17327 ;; Parameters:    Size  Location     Type
 17328 ;;  x               4  [STACK] float 
 17329 ;; Auto vars:     Size  Location     Type
 17330 ;;  u               4  [STACK] struct .
 17331 ;;  e               2  [STACK] int 
 17332 ;; Return value:  Size  Location     Type
 17333 ;;                  2  [STACK] int 
 17334 ;; Registers used:
 17335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 17336 ;; Tracked objects:
 17337 ;;		On entry : 0/0
 17338 ;;		On exit  : 0/0
 17339 ;;		Unchanged: 0/0
 17340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17345 ;;Total ram usage:        0 bytes
 17346 ;; Hardware stack levels used:    1
 17347 ;; Hardware stack levels required when called:   15
 17348 ;; This function calls:
 17349 ;;		Nothing
 17350 ;; This function is called by:
 17351 ;;		_efgtoa
 17352 ;; This function uses a reentrant model
 17353 ;;
 17354                           
 17355                           	psect	text60
 17356  0179EE                     __ptext60:
 17357                           	opt callstack 0
 17358  0179EE                     ___fpclassifyf:
 17359                           	opt callstack 0
 17360                           
 17361                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17362  0179EE  0E06               	movlw	6
 17363  0179F0  26E1               	addwf	fsr1l,f,c
 17364  0179F2  0E00               	movlw	0
 17365  0179F4  22E2               	addwfc	fsr1h,f,c
 17366                           
 17367                           ;incstack = 0
 17368 ;; hardware stack exceeded
 17369  0179F6  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 17370  0179FC  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 17371  017A02  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 17372  017A08  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 17373                           
 17374                           ;stkvar	_u @ sp[(-6)+0]
 17375  017A0E  0EFA               	movlw	-6
 17376  017A10  0060  F027  FFE3   	movff	btemp+8,plusw1
 17377  017A16  0EFB               	movlw	-5
 17378  017A18  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17379  017A1E  0EFC               	movlw	-4
 17380  017A20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17381  017A26  0EFD               	movlw	-3
 17382  017A28  0060  F033  FFE3   	movff	btemp+11,plusw1
 17383                           
 17384                           ;stkvar	_x @ sp[(-6)+-4]
 17385  017A2E  0EF6               	movlw	-10
 17386  017A30  006F FF8C  F009    	movff	plusw1,btemp+8
 17387  017A36  0EF7               	movlw	-9
 17388  017A38  006F FF8C  F00A    	movff	plusw1,btemp+9
 17389  017A3E  0EF8               	movlw	-8
 17390  017A40  006F FF8C  F00B    	movff	plusw1,btemp+10
 17391  017A46  0EF9               	movlw	-7
 17392  017A48  006F FF8C  F00C    	movff	plusw1,btemp+11
 17393                           
 17394                           ;stkvar	_u @ sp[(-6)+0]
 17395  017A4E  0EFA               	movlw	-6
 17396  017A50  0060  F027  FFE3   	movff	btemp+8,plusw1
 17397  017A56  0EFB               	movlw	-5
 17398  017A58  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17399  017A5E  0EFC               	movlw	-4
 17400  017A60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17401  017A66  0EFD               	movlw	-3
 17402  017A68  0060  F033  FFE3   	movff	btemp+11,plusw1
 17403                           
 17404                           ;stkvar	_u @ sp[(-6)+0]
 17405  017A6E  0EFA               	movlw	-6
 17406  017A70  006F FF8C  F009    	movff	plusw1,btemp+8
 17407  017A76  0EFB               	movlw	-5
 17408  017A78  006F FF8C  F00A    	movff	plusw1,btemp+9
 17409  017A7E  0EFC               	movlw	-4
 17410  017A80  006F FF8C  F00B    	movff	plusw1,btemp+10
 17411  017A86  0EFD               	movlw	-3
 17412  017A88  006F FF8C  F00C    	movff	plusw1,btemp+11
 17413  017A8E  0E18               	movlw	24
 17414  017A90  D005               	goto	u5630
 17415  017A92                     u5635:
 17416  017A92  90D8               	bcf	status,0,c
 17417  017A94  320C               	rrcf	(btemp+11)^0,f,c
 17418  017A96  320B               	rrcf	(btemp+10)^0,f,c
 17419  017A98  320A               	rrcf	(btemp+9)^0,f,c
 17420  017A9A  3209               	rrcf	(btemp+8)^0,f,c
 17421  017A9C                     u5630:
 17422  017A9C  2EE8               	decfsz	wreg,f,c
 17423  017A9E  D7F9               	goto	u5635
 17424  017AA0  0060  F024  F007   	movff	btemp+8,btemp+6
 17425  017AA6  0060  F028  F008   	movff	btemp+9,btemp+7
 17426  017AAC  0EFF               	movlw	255
 17427  017AAE  1607               	andwf	(btemp+6)^0,f,c
 17428  017AB0  0E00               	movlw	0
 17429  017AB2  1608               	andwf	(btemp+7)^0,f,c
 17430                           
 17431                           ;stkvar	_e @ sp[(-6)+4]
 17432  017AB4  0EFE               	movlw	-2
 17433  017AB6  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17434  017ABC  0EFF               	movlw	-1
 17435  017ABE  0060  F023  FFE3   	movff	btemp+7,plusw1
 17436                           
 17437                           ;stkvar	_e @ sp[(-6)+4]
 17438  017AC4  0EFE               	movlw	-2
 17439  017AC6  006F FF8C  F001    	movff	plusw1,btemp
 17440  017ACC  0EFF               	movlw	-1
 17441  017ACE  50E3               	movf	plusw1,w,c
 17442  017AD0  1001               	iorwf	btemp^0,w,c
 17443  017AD2  A4D8               	btfss	status,2,c
 17444  017AD4  D023               	goto	l7600
 17445                           
 17446                           ;stkvar	_u @ sp[(-6)+0]
 17447  017AD6  0EFA               	movlw	-6
 17448  017AD8  006F FF8C  F009    	movff	plusw1,btemp+8
 17449  017ADE  0EFB               	movlw	-5
 17450  017AE0  006F FF8C  F00A    	movff	plusw1,btemp+9
 17451  017AE6  0EFC               	movlw	-4
 17452  017AE8  006F FF8C  F00B    	movff	plusw1,btemp+10
 17453  017AEE  0EFD               	movlw	-3
 17454  017AF0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17455  017AF6  90D8               	bcf	status,0,c
 17456  017AF8  3409               	rlcf	(btemp+8)^0,w,c
 17457  017AFA  6E05               	movwf	(btemp+4)^0,c
 17458  017AFC  340A               	rlcf	(btemp+9)^0,w,c
 17459  017AFE  6E06               	movwf	(btemp+5)^0,c
 17460  017B00  340B               	rlcf	(btemp+10)^0,w,c
 17461  017B02  6E07               	movwf	(btemp+6)^0,c
 17462  017B04  340C               	rlcf	(btemp+11)^0,w,c
 17463  017B06  6E08               	movwf	(btemp+7)^0,c
 17464  017B08  5005               	movf	(btemp+4)^0,w,c
 17465  017B0A  1006               	iorwf	(btemp+5)^0,w,c
 17466  017B0C  1007               	iorwf	(btemp+6)^0,w,c
 17467  017B0E  1008               	iorwf	(btemp+7)^0,w,c
 17468  017B10  A4D8               	btfss	status,2,c
 17469  017B12  D002               	goto	l7596
 17470  017B14  0E02               	movlw	2
 17471  017B16  D02E               	goto	L16
 17472  017B18                     l7596:
 17473  017B18  0E03               	movlw	3
 17474  017B1A  D02C               	goto	L16
 17475  017B1C                     l7600:
 17476                           
 17477                           ;stkvar	_e @ sp[(-6)+4]
 17478  017B1C  0EFE               	movlw	-2
 17479  017B1E  28E3               	incf	plusw1,w,c
 17480  017B20  E128               	bnz	l7606
 17481  017B22  0EFF               	movlw	-1
 17482  017B24  50E3               	movf	plusw1,w,c
 17483  017B26  A4D8               	btfss	status,2,c
 17484  017B28  D024               	goto	l7606
 17485                           
 17486                           ;stkvar	_u @ sp[(-6)+0]
 17487  017B2A  0EFA               	movlw	-6
 17488  017B2C  006F FF8C  F009    	movff	plusw1,btemp+8
 17489  017B32  0EFB               	movlw	-5
 17490  017B34  006F FF8C  F00A    	movff	plusw1,btemp+9
 17491  017B3A  0EFC               	movlw	-4
 17492  017B3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17493  017B42  0EFD               	movlw	-3
 17494  017B44  006F FF8C  F00C    	movff	plusw1,btemp+11
 17495  017B4A  0E09               	movlw	9
 17496  017B4C                     u5675:
 17497  017B4C  90D8               	bcf	status,0,c
 17498  017B4E  3609               	rlcf	(btemp+8)^0,f,c
 17499  017B50  360A               	rlcf	(btemp+9)^0,f,c
 17500  017B52  360B               	rlcf	(btemp+10)^0,f,c
 17501  017B54  360C               	rlcf	(btemp+11)^0,f,c
 17502  017B56  2EE8               	decfsz	wreg,f,c
 17503  017B58  D7F9               	goto	u5675
 17504  017B5A  5009               	movf	(btemp+8)^0,w,c
 17505  017B5C  100A               	iorwf	(btemp+9)^0,w,c
 17506  017B5E  100B               	iorwf	(btemp+10)^0,w,c
 17507  017B60  100C               	iorwf	(btemp+11)^0,w,c
 17508  017B62  A4D8               	btfss	status,2,c
 17509  017B64  D002               	goto	u5680
 17510  017B66  0E01               	movlw	1
 17511  017B68  D001               	goto	u5690
 17512  017B6A                     u5680:
 17513  017B6A  0E00               	movlw	0
 17514  017B6C                     u5690:
 17515  017B6C  6E01               	movwf	btemp^0,c
 17516  017B6E  6A02               	clrf	(btemp+1)^0,c
 17517  017B70  D004               	goto	l3016
 17518  017B72                     l7606:
 17519  017B72  0E04               	movlw	4
 17520  017B74                     L16:
 17521  017B74  6E01               	movwf	btemp^0,c
 17522  017B76  0E00               	movlw	0
 17523  017B78  6E02               	movwf	(btemp+1)^0,c
 17524  017B7A                     l3016:
 17525                           
 17526                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 17527  017B7A  0EF6               	movlw	246
 17528  017B7C  26E1               	addwf	fsr1l,f,c
 17529  017B7E  0EFF               	movlw	255
 17530  017B80  22E2               	addwfc	fsr1h,f,c
 17531  017B82  0012               	return		;funcret
 17532  017B84                     __end_of___fpclassifyf:
 17533                           	opt callstack 0
 17534                           
 17535 ;; *************** function ___fltol *****************
 17536 ;; Defined at:
 17537 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 17538 ;; Parameters:    Size  Location     Type
 17539 ;;  f1              4  [STACK] int 
 17540 ;; Auto vars:     Size  Location     Type
 17541 ;;  exp1            1  [STACK] unsigned char 
 17542 ;;  sign1           1  [STACK] unsigned char 
 17543 ;; Return value:  Size  Location     Type
 17544 ;;                  4  [STACK] long 
 17545 ;; Registers used:
 17546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17547 ;; Tracked objects:
 17548 ;;		On entry : 0/1
 17549 ;;		On exit  : 0/0
 17550 ;;		Unchanged: 0/0
 17551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17556 ;;Total ram usage:        0 bytes
 17557 ;; Hardware stack levels used:    1
 17558 ;; Hardware stack levels required when called:   15
 17559 ;; This function calls:
 17560 ;;		Nothing
 17561 ;; This function is called by:
 17562 ;;		_calc_bsoc
 17563 ;;		_init_bsoc
 17564 ;;		_efgtoa
 17565 ;; This function uses a reentrant model
 17566 ;;
 17567                           
 17568                           	psect	text61
 17569  017E78                     __ptext61:
 17570                           	opt callstack 0
 17571  017E78                     ___fltol:
 17572                           	opt callstack 0
 17573                           
 17574                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17575  017E78  52E6               	movf	postinc1,f,c
 17576  017E7A  52E6               	movf	postinc1,f,c
 17577                           
 17578                           ;stkvar	_f1 @ sp[(-2)+-4]
 17579                           
 17580                           ;incstack = 0
 17581 ;; hardware stack exceeded
 17582  017E7C  0EFA               	movlw	-6
 17583  017E7E  006F FF8C  F009    	movff	plusw1,btemp+8
 17584  017E84  0EFB               	movlw	-5
 17585  017E86  006F FF8C  F00A    	movff	plusw1,btemp+9
 17586  017E8C  0EFC               	movlw	-4
 17587  017E8E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17588  017E94  0EFD               	movlw	-3
 17589  017E96  006F FF8C  F00C    	movff	plusw1,btemp+11
 17590  017E9C  0E18               	movlw	24
 17591  017E9E  D005               	goto	u6840
 17592  017EA0                     u6845:
 17593  017EA0  90D8               	bcf	status,0,c
 17594  017EA2  320C               	rrcf	(btemp+11)^0,f,c
 17595  017EA4  320B               	rrcf	(btemp+10)^0,f,c
 17596  017EA6  320A               	rrcf	(btemp+9)^0,f,c
 17597  017EA8  3209               	rrcf	(btemp+8)^0,f,c
 17598  017EAA                     u6840:
 17599  017EAA  2EE8               	decfsz	wreg,f,c
 17600  017EAC  D7F9               	goto	u6845
 17601                           
 17602                           ;stkvar	_exp1 @ sp[(-2)+0]
 17603  017EAE  0EFE               	movlw	-2
 17604  017EB0  0060  F027  FFE3   	movff	btemp+8,plusw1
 17605  017EB6  0EFE               	movlw	-2
 17606  017EB8  50E3               	movf	plusw1,w,c
 17607  017EBA  A4D8               	btfss	status,2,c
 17608  017EBC  D006               	goto	l8226
 17609  017EBE                     u6850:
 17610  017EBE  0E00               	movlw	0
 17611  017EC0  6E01               	movwf	btemp^0,c
 17612  017EC2  6A02               	clrf	(btemp+1)^0,c
 17613  017EC4  6A03               	clrf	(btemp+2)^0,c
 17614  017EC6  6A04               	clrf	(btemp+3)^0,c
 17615  017EC8  D08B               	goto	l2632
 17616  017ECA                     l8226:
 17617                           
 17618                           ;stkvar	_f1 @ sp[(-2)+-4]
 17619  017ECA  0EFA               	movlw	-6
 17620  017ECC  006F FF8C  F009    	movff	plusw1,btemp+8
 17621  017ED2  0EFB               	movlw	-5
 17622  017ED4  006F FF8C  F00A    	movff	plusw1,btemp+9
 17623  017EDA  0EFC               	movlw	-4
 17624  017EDC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17625  017EE2  0EFD               	movlw	-3
 17626  017EE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17627  017EEA  0E20               	movlw	32
 17628  017EEC  D005               	goto	u6860
 17629  017EEE                     u6865:
 17630  017EEE  90D8               	bcf	status,0,c
 17631  017EF0  320C               	rrcf	(btemp+11)^0,f,c
 17632  017EF2  320B               	rrcf	(btemp+10)^0,f,c
 17633  017EF4  320A               	rrcf	(btemp+9)^0,f,c
 17634  017EF6  3209               	rrcf	(btemp+8)^0,f,c
 17635  017EF8                     u6860:
 17636  017EF8  2EE8               	decfsz	wreg,f,c
 17637  017EFA  D7F9               	goto	u6865
 17638                           
 17639                           ;stkvar	_sign1 @ sp[(-2)+1]
 17640  017EFC  0EFF               	movlw	-1
 17641  017EFE  0060  F027  FFE3   	movff	btemp+8,plusw1
 17642                           
 17643                           ;stkvar	_f1 @ sp[(-2)+-4]
 17644  017F04  0EFC               	movlw	-4
 17645  017F06  8EE3               	bsf	plusw1,7,c
 17646                           
 17647                           ;stkvar	_f1 @ sp[(-2)+-4]
 17648  017F08  50E1               	movf	fsr1l,w,c
 17649  017F0A  0FFA               	addlw	-6
 17650  017F0C  6ED9               	movwf	fsr2l,c
 17651  017F0E  50E2               	movf	fsr1h,w,c
 17652  017F10  6EDA               	movwf	fsr2h,c
 17653  017F12  0EFF               	movlw	255
 17654  017F14  22DA               	addwfc	fsr2h,f,c
 17655  017F16  0EFF               	movlw	255
 17656  017F18  16DE               	andwf	postinc2,f,c
 17657  017F1A  0EFF               	movlw	255
 17658  017F1C  16DE               	andwf	postinc2,f,c
 17659  017F1E  0EFF               	movlw	255
 17660  017F20  16DE               	andwf	postinc2,f,c
 17661  017F22  0E00               	movlw	0
 17662  017F24  16DE               	andwf	postinc2,f,c
 17663                           
 17664                           ;stkvar	_exp1 @ sp[(-2)+0]
 17665  017F26  0EFE               	movlw	-2
 17666  017F28  006F FF8C  F001    	movff	plusw1,btemp
 17667  017F2E  0E96               	movlw	150
 17668  017F30  5E01               	subwf	btemp^0,f,c
 17669  017F32  0EFE               	movlw	-2
 17670  017F34  0060  F007  FFE3   	movff	btemp,plusw1
 17671                           
 17672                           ;stkvar	_exp1 @ sp[(-2)+0]
 17673  017F3A  0EFE               	movlw	-2
 17674  017F3C  AEE3               	btfss	plusw1,7,c
 17675  017F3E  D014               	goto	l8244
 17676                           
 17677                           ;stkvar	_exp1 @ sp[(-2)+0]
 17678  017F40  0EFE               	movlw	-2
 17679  017F42  50E3               	movf	plusw1,w,c
 17680  017F44  0A80               	xorlw	128
 17681  017F46  0F97               	addlw	151
 17682  017F48  A0D8               	btfss	status,0,c
 17683  017F4A  D7B9               	goto	u6850
 17684  017F4C                     l8242:
 17685                           
 17686                           ;stkvar	_f1 @ sp[(-2)+-4]
 17687  017F4C  90D8               	bcf	status,0,c
 17688  017F4E  0EFD               	movlw	-3
 17689  017F50  32E3               	rrcf	plusw1,f,c
 17690  017F52  0EFC               	movlw	-4
 17691  017F54  32E3               	rrcf	plusw1,f,c
 17692  017F56  0EFB               	movlw	-5
 17693  017F58  32E3               	rrcf	plusw1,f,c
 17694  017F5A  0EFA               	movlw	-6
 17695  017F5C  32E3               	rrcf	plusw1,f,c
 17696                           
 17697                           ;stkvar	_exp1 @ sp[(-2)+0]
 17698  017F5E  0EFE               	movlw	-2
 17699  017F60  2AE3               	incf	plusw1,f,c
 17700  017F62  B4D8               	btfsc	status,2,c
 17701  017F64  D018               	goto	u6910
 17702  017F66  D7F2               	goto	l8242
 17703  017F68                     l8244:
 17704                           
 17705                           ;stkvar	_exp1 @ sp[(-2)+0]
 17706  017F68  0EFE               	movlw	-2
 17707  017F6A  006F FF8C  F001    	movff	plusw1,btemp
 17708  017F70  0E1F               	movlw	31
 17709  017F72  6401               	cpfsgt	btemp^0,c
 17710  017F74  D00C               	goto	l8252
 17711  017F76  D7A3               	goto	u6850
 17712  017F78                     l8250:
 17713                           
 17714                           ;stkvar	_f1 @ sp[(-2)+-4]
 17715  017F78  90D8               	bcf	status,0,c
 17716  017F7A  0EFA               	movlw	-6
 17717  017F7C  36E3               	rlcf	plusw1,f,c
 17718  017F7E  0EFB               	movlw	-5
 17719  017F80  36E3               	rlcf	plusw1,f,c
 17720  017F82  0EFC               	movlw	-4
 17721  017F84  36E3               	rlcf	plusw1,f,c
 17722  017F86  0EFD               	movlw	-3
 17723  017F88  36E3               	rlcf	plusw1,f,c
 17724                           
 17725                           ;stkvar	_exp1 @ sp[(-2)+0]
 17726  017F8A  0EFE               	movlw	-2
 17727  017F8C  06E3               	decf	plusw1,f,c
 17728  017F8E                     l8252:
 17729                           
 17730                           ;stkvar	_exp1 @ sp[(-2)+0]
 17731  017F8E  0EFE               	movlw	-2
 17732  017F90  50E3               	movf	plusw1,w,c
 17733  017F92  A4D8               	btfss	status,2,c
 17734  017F94  D7F1               	goto	l8250
 17735  017F96                     u6910:
 17736                           
 17737                           ;stkvar	_sign1 @ sp[(-2)+1]
 17738  017F96  0EFF               	movlw	-1
 17739  017F98  50E3               	movf	plusw1,w,c
 17740  017F9A  B4D8               	btfsc	status,2,c
 17741  017F9C  D011               	goto	u6930
 17742                           
 17743                           ;stkvar	_f1 @ sp[(-2)+-4]
 17744                           ;stkvar	_f1 @ sp[(-2)+-4]
 17745  017F9E  0EFA               	movlw	-6
 17746  017FA0  6CE3               	negf	plusw1,c
 17747  017FA2  0EFB               	movlw	-5
 17748  017FA4  1EE3               	comf	plusw1,f,c
 17749  017FA6  0EFC               	movlw	-4
 17750  017FA8  1EE3               	comf	plusw1,f,c
 17751  017FAA  0EFD               	movlw	-3
 17752  017FAC  1EE3               	comf	plusw1,f,c
 17753  017FAE  E308               	bnc	u6930
 17754  017FB0  0EFB               	movlw	-5
 17755  017FB2  2AE3               	incf	plusw1,f,c
 17756  017FB4  E305               	bnc	u6930
 17757  017FB6  0EFC               	movlw	-4
 17758  017FB8  2AE3               	incf	plusw1,f,c
 17759  017FBA  E302               	bnc	u6930
 17760  017FBC  0EFD               	movlw	-3
 17761  017FBE  2AE3               	incf	plusw1,f,c
 17762  017FC0                     u6930:
 17763                           
 17764                           ;stkvar	_f1 @ sp[(-2)+-4]
 17765  017FC0  0EFA               	movlw	-6
 17766  017FC2  006F FF8C  F001    	movff	plusw1,btemp
 17767  017FC8  0EFB               	movlw	-5
 17768  017FCA  006F FF8C  F002    	movff	plusw1,btemp+1
 17769  017FD0  0EFC               	movlw	-4
 17770  017FD2  006F FF8C  F003    	movff	plusw1,btemp+2
 17771  017FD8  0EFD               	movlw	-3
 17772  017FDA  006F FF8C  F004    	movff	plusw1,btemp+3
 17773  017FE0                     l2632:
 17774                           
 17775                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17776  017FE0  0EFA               	movlw	250
 17777  017FE2  26E1               	addwf	fsr1l,f,c
 17778  017FE4  0EFF               	movlw	255
 17779  017FE6  22E2               	addwfc	fsr1h,f,c
 17780  017FE8  0012               	return		;funcret
 17781  017FEA                     __end_of___fltol:
 17782                           	opt callstack 0
 17783                           
 17784 ;; *************** function ___flneg *****************
 17785 ;; Defined at:
 17786 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 17787 ;; Parameters:    Size  Location     Type
 17788 ;;  f1              4  [STACK] long 
 17789 ;; Auto vars:     Size  Location     Type
 17790 ;;		None
 17791 ;; Return value:  Size  Location     Type
 17792 ;;                  4  [STACK] long 
 17793 ;; Registers used:
 17794 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 17795 ;; Tracked objects:
 17796 ;;		On entry : 0/0
 17797 ;;		On exit  : 0/0
 17798 ;;		Unchanged: 0/0
 17799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17804 ;;Total ram usage:        0 bytes
 17805 ;; Hardware stack levels used:    1
 17806 ;; Hardware stack levels required when called:   15
 17807 ;; This function calls:
 17808 ;;		Nothing
 17809 ;; This function is called by:
 17810 ;;		_calc_bsoc
 17811 ;;		_efgtoa
 17812 ;; This function uses a reentrant model
 17813 ;;
 17814                           
 17815                           	psect	text62
 17816  01A460                     __ptext62:
 17817                           	opt callstack 0
 17818  01A460                     ___flneg:
 17819                           	opt callstack 0
 17820                           
 17821                           ;stkvar	_f1 @ sp[(0)+-4]
 17822                           
 17823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17824                           ;incstack = 0
 17825 ;; hardware stack exceeded
 17826  01A460  0EFC               	movlw	-4
 17827  01A462  50E3               	movf	plusw1,w,c
 17828  01A464  E10A               	bnz	u6830
 17829  01A466  0EFD               	movlw	-3
 17830  01A468  50E3               	movf	plusw1,w,c
 17831  01A46A  E107               	bnz	u6830
 17832  01A46C  0EFE               	movlw	-2
 17833  01A46E  50E3               	movf	plusw1,w,c
 17834  01A470  E104               	bnz	u6830
 17835  01A472  0EFF               	movlw	-1
 17836  01A474  50E3               	movf	plusw1,w,c
 17837  01A476  B4D8               	btfsc	status,2,c
 17838  01A478  D002               	goto	l8216
 17839  01A47A                     u6830:
 17840                           
 17841                           ;stkvar	_f1 @ sp[(0)+-4]
 17842  01A47A  0EFF               	movlw	-1
 17843  01A47C  7EE3               	btg	plusw1,7,c
 17844  01A47E                     l8216:
 17845                           
 17846                           ;stkvar	_f1 @ sp[(0)+-4]
 17847  01A47E  0EFC               	movlw	-4
 17848  01A480  006F FF8C  F001    	movff	plusw1,btemp
 17849  01A486  0EFD               	movlw	-3
 17850  01A488  006F FF8C  F002    	movff	plusw1,btemp+1
 17851  01A48E  0EFE               	movlw	-2
 17852  01A490  006F FF8C  F003    	movff	plusw1,btemp+2
 17853  01A496  0EFF               	movlw	-1
 17854  01A498  006F FF8C  F004    	movff	plusw1,btemp+3
 17855                           
 17856                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17857  01A49E  52E5               	movf	postdec1,f,c
 17858  01A4A0  52E5               	movf	postdec1,f,c
 17859  01A4A2  52E5               	movf	postdec1,f,c
 17860  01A4A4  52E5               	movf	postdec1,f,c
 17861  01A4A6  0012               	return		;funcret
 17862  01A4A8                     __end_of___flneg:
 17863                           	opt callstack 0
 17864                           
 17865 ;; *************** function ___fleq *****************
 17866 ;; Defined at:
 17867 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17868 ;; Parameters:    Size  Location     Type
 17869 ;;  ff1             4  [STACK] long 
 17870 ;;  ff2             4  [STACK] long 
 17871 ;; Auto vars:     Size  Location     Type
 17872 ;;		None
 17873 ;; Return value:  Size  Location     Type
 17874 ;;		None               void
 17875 ;; Registers used:
 17876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17877 ;; Tracked objects:
 17878 ;;		On entry : 0/0
 17879 ;;		On exit  : 0/0
 17880 ;;		Unchanged: 0/0
 17881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17886 ;;Total ram usage:        0 bytes
 17887 ;; Hardware stack levels used:    1
 17888 ;; Hardware stack levels required when called:   15
 17889 ;; This function calls:
 17890 ;;		Nothing
 17891 ;; This function is called by:
 17892 ;;		_efgtoa
 17893 ;; This function uses a reentrant model
 17894 ;;
 17895                           
 17896                           	psect	text63
 17897  019428                     __ptext63:
 17898                           	opt callstack 0
 17899  019428                     ___fleq:
 17900                           	opt callstack 0
 17901                           
 17902                           ;stkvar	_ff1 @ sp[(0)+-4]
 17903                           
 17904                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17905                           ;incstack = 0
 17906 ;; hardware stack exceeded
 17907  019428  50E1               	movf	fsr1l,w,c
 17908  01942A  0FFC               	addlw	-4
 17909  01942C  6ED9               	movwf	fsr2l,c
 17910  01942E  50E2               	movf	fsr1h,w,c
 17911  019430  6EDA               	movwf	fsr2h,c
 17912  019432  0EFF               	movlw	255
 17913  019434  22DA               	addwfc	fsr2h,f,c
 17914  019436  0E00               	movlw	0
 17915  019438  14DE               	andwf	postinc2,w,c
 17916  01943A  6E09               	movwf	(btemp+8)^0,c
 17917  01943C  0E00               	movlw	0
 17918  01943E  14DE               	andwf	postinc2,w,c
 17919  019440  6E0A               	movwf	(btemp+9)^0,c
 17920  019442  0E80               	movlw	128
 17921  019444  14DE               	andwf	postinc2,w,c
 17922  019446  6E0B               	movwf	(btemp+10)^0,c
 17923  019448  0E7F               	movlw	127
 17924  01944A  14DE               	andwf	postinc2,w,c
 17925  01944C  6E0C               	movwf	(btemp+11)^0,c
 17926  01944E  5009               	movf	(btemp+8)^0,w,c
 17927  019450  100A               	iorwf	(btemp+9)^0,w,c
 17928  019452  100B               	iorwf	(btemp+10)^0,w,c
 17929  019454  100C               	iorwf	(btemp+11)^0,w,c
 17930  019456  A4D8               	btfss	status,2,c
 17931  019458  D008               	goto	l8174
 17932                           
 17933                           ;stkvar	_ff1 @ sp[(0)+-4]
 17934  01945A  0EFC               	movlw	-4
 17935  01945C  6AE3               	clrf	plusw1,c
 17936  01945E  0EFD               	movlw	-3
 17937  019460  6AE3               	clrf	plusw1,c
 17938  019462  0EFE               	movlw	-2
 17939  019464  6AE3               	clrf	plusw1,c
 17940  019466  0EFF               	movlw	-1
 17941  019468  6AE3               	clrf	plusw1,c
 17942  01946A                     l8174:
 17943                           
 17944                           ;stkvar	_ff2 @ sp[(0)+-8]
 17945  01946A  50E1               	movf	fsr1l,w,c
 17946  01946C  0FF8               	addlw	-8
 17947  01946E  6ED9               	movwf	fsr2l,c
 17948  019470  50E2               	movf	fsr1h,w,c
 17949  019472  6EDA               	movwf	fsr2h,c
 17950  019474  0EFF               	movlw	255
 17951  019476  22DA               	addwfc	fsr2h,f,c
 17952  019478  0E00               	movlw	0
 17953  01947A  14DE               	andwf	postinc2,w,c
 17954  01947C  6E09               	movwf	(btemp+8)^0,c
 17955  01947E  0E00               	movlw	0
 17956  019480  14DE               	andwf	postinc2,w,c
 17957  019482  6E0A               	movwf	(btemp+9)^0,c
 17958  019484  0E80               	movlw	128
 17959  019486  14DE               	andwf	postinc2,w,c
 17960  019488  6E0B               	movwf	(btemp+10)^0,c
 17961  01948A  0E7F               	movlw	127
 17962  01948C  14DE               	andwf	postinc2,w,c
 17963  01948E  6E0C               	movwf	(btemp+11)^0,c
 17964  019490  5009               	movf	(btemp+8)^0,w,c
 17965  019492  100A               	iorwf	(btemp+9)^0,w,c
 17966  019494  100B               	iorwf	(btemp+10)^0,w,c
 17967  019496  100C               	iorwf	(btemp+11)^0,w,c
 17968  019498  A4D8               	btfss	status,2,c
 17969  01949A  D008               	goto	l8178
 17970                           
 17971                           ;stkvar	_ff2 @ sp[(0)+-8]
 17972  01949C  0EF8               	movlw	-8
 17973  01949E  6AE3               	clrf	plusw1,c
 17974  0194A0  0EF9               	movlw	-7
 17975  0194A2  6AE3               	clrf	plusw1,c
 17976  0194A4  0EFA               	movlw	-6
 17977  0194A6  6AE3               	clrf	plusw1,c
 17978  0194A8  0EFB               	movlw	-5
 17979  0194AA  6AE3               	clrf	plusw1,c
 17980  0194AC                     l8178:
 17981                           
 17982                           ;stkvar	_ff2 @ sp[(0)+-8]
 17983                           ;stkvar	_ff1 @ sp[(0)+-4]
 17984  0194AC  50E1               	movf	fsr1l,w,c
 17985  0194AE  0FFC               	addlw	-4
 17986  0194B0  6ED9               	movwf	fsr2l,c
 17987  0194B2  50E2               	movf	fsr1h,w,c
 17988  0194B4  6EDA               	movwf	fsr2h,c
 17989  0194B6  0EFF               	movlw	255
 17990  0194B8  22DA               	addwfc	fsr2h,f,c
 17991  0194BA  0EF8               	movlw	-8
 17992  0194BC  50E3               	movf	plusw1,w,c
 17993  0194BE  18DE               	xorwf	postinc2,w,c
 17994  0194C0  E10D               	bnz	u6770
 17995  0194C2  0EF9               	movlw	-7
 17996  0194C4  50E3               	movf	plusw1,w,c
 17997  0194C6  18DE               	xorwf	postinc2,w,c
 17998  0194C8  E109               	bnz	u6770
 17999  0194CA  0EFA               	movlw	-6
 18000  0194CC  50E3               	movf	plusw1,w,c
 18001  0194CE  18DE               	xorwf	postinc2,w,c
 18002  0194D0  E105               	bnz	u6770
 18003  0194D2  0EFB               	movlw	-5
 18004  0194D4  50E3               	movf	plusw1,w,c
 18005  0194D6  18DE               	xorwf	postinc2,w,c
 18006  0194D8  B4D8               	btfsc	status,2,c
 18007  0194DA  D002               	goto	l8182
 18008  0194DC                     u6770:
 18009  0194DC  9001               	bcf	btemp& (0+255),0,c
 18010  0194DE  D001               	goto	l2594
 18011  0194E0                     l8182:
 18012  0194E0  8001               	bsf	btemp& (0+255),0,c
 18013  0194E2                     l2594:
 18014                           
 18015                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18016  0194E2  0EF8               	movlw	248
 18017  0194E4  26E1               	addwf	fsr1l,f,c
 18018  0194E6  0EFF               	movlw	255
 18019  0194E8  22E2               	addwfc	fsr1h,f,c
 18020  0194EA  0012               	return		;funcret
 18021  0194EC                     __end_of___fleq:
 18022                           	opt callstack 0
 18023                           
 18024 ;; *************** function ___awmod *****************
 18025 ;; Defined at:
 18026 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18027 ;; Parameters:    Size  Location     Type
 18028 ;;  dividend        2  [STACK] int 
 18029 ;;  divisor         2  [STACK] int 
 18030 ;; Auto vars:     Size  Location     Type
 18031 ;;  sign            1  [STACK] unsigned char 
 18032 ;;  counter         1  [STACK] unsigned char 
 18033 ;; Return value:  Size  Location     Type
 18034 ;;                  2  [STACK] int 
 18035 ;; Registers used:
 18036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18037 ;; Tracked objects:
 18038 ;;		On entry : 0/0
 18039 ;;		On exit  : 0/0
 18040 ;;		Unchanged: 0/0
 18041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18046 ;;Total ram usage:        0 bytes
 18047 ;; Hardware stack levels used:    1
 18048 ;; Hardware stack levels required when called:   15
 18049 ;; This function calls:
 18050 ;;		Nothing
 18051 ;; This function is called by:
 18052 ;;		_efgtoa
 18053 ;; This function uses a reentrant model
 18054 ;;
 18055                           
 18056                           	psect	text64
 18057  018A3A                     __ptext64:
 18058                           	opt callstack 0
 18059  018A3A                     ___awmod:
 18060                           	opt callstack 0
 18061                           
 18062                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18063  018A3A  52E6               	movf	postinc1,f,c
 18064  018A3C  52E6               	movf	postinc1,f,c
 18065                           
 18066                           ;stkvar	_sign @ sp[(-2)+0]
 18067                           
 18068                           ;incstack = 0
 18069 ;; hardware stack exceeded
 18070  018A3E  0EFE               	movlw	-2
 18071  018A40  6AE3               	clrf	plusw1,c
 18072                           
 18073                           ;stkvar	_dividend @ sp[(-2)+-2]
 18074  018A42  0EFD               	movlw	-3
 18075  018A44  AEE3               	btfss	plusw1,7,c
 18076  018A46  D009               	goto	l8140
 18077                           
 18078                           ;stkvar	_dividend @ sp[(-2)+-2]
 18079                           ;stkvar	_dividend @ sp[(-2)+-2]
 18080  018A48  0EFC               	movlw	-4
 18081  018A4A  6CE3               	negf	plusw1,c
 18082  018A4C  0EFD               	movlw	-3
 18083  018A4E  1EE3               	comf	plusw1,f,c
 18084  018A50  B0D8               	btfsc	status,0,c
 18085  018A52  2AE3               	incf	plusw1,f,c
 18086                           
 18087                           ;stkvar	_sign @ sp[(-2)+0]
 18088  018A54  0EFE               	movlw	-2
 18089  018A56  6AE3               	clrf	plusw1,c
 18090  018A58  2AE3               	incf	plusw1,f,c
 18091  018A5A                     l8140:
 18092                           
 18093                           ;stkvar	_divisor @ sp[(-2)+-4]
 18094  018A5A  0EFB               	movlw	-5
 18095  018A5C  AEE3               	btfss	plusw1,7,c
 18096  018A5E  D006               	goto	l8144
 18097                           
 18098                           ;stkvar	_divisor @ sp[(-2)+-4]
 18099                           ;stkvar	_divisor @ sp[(-2)+-4]
 18100  018A60  0EFA               	movlw	-6
 18101  018A62  6CE3               	negf	plusw1,c
 18102  018A64  0EFB               	movlw	-5
 18103  018A66  1EE3               	comf	plusw1,f,c
 18104  018A68  B0D8               	btfsc	status,0,c
 18105  018A6A  2AE3               	incf	plusw1,f,c
 18106  018A6C                     l8144:
 18107                           
 18108                           ;stkvar	_divisor @ sp[(-2)+-4]
 18109  018A6C  0EFA               	movlw	-6
 18110  018A6E  006F FF8C  F001    	movff	plusw1,btemp
 18111  018A74  0EFB               	movlw	-5
 18112  018A76  50E3               	movf	plusw1,w,c
 18113  018A78  1001               	iorwf	btemp^0,w,c
 18114  018A7A  B4D8               	btfsc	status,2,c
 18115  018A7C  D053               	goto	u6730
 18116                           
 18117                           ;stkvar	_counter @ sp[(-2)+1]
 18118  018A7E  0EFF               	movlw	-1
 18119  018A80  6AE3               	clrf	plusw1,c
 18120  018A82  D012               	goto	L17
 18121  018A84                     l8148:
 18122                           
 18123                           ;stkvar	_divisor @ sp[(-2)+-4]
 18124  018A84  0EFA               	movlw	-6
 18125  018A86  50E3               	movf	plusw1,w,c
 18126  018A88  90D8               	bcf	status,0,c
 18127  018A8A  34E8               	rlcf	wreg,w,c
 18128  018A8C  6E01               	movwf	btemp^0,c
 18129  018A8E  0EFA               	movlw	-6
 18130  018A90  0060  F007  FFE3   	movff	btemp,plusw1
 18131  018A96  0EFB               	movlw	-5
 18132  018A98  50E3               	movf	plusw1,w,c
 18133  018A9A  34E8               	rlcf	wreg,w,c
 18134  018A9C  6E01               	movwf	btemp^0,c
 18135  018A9E  0EFB               	movlw	-5
 18136  018AA0  0060  F007  FFE3   	movff	btemp,plusw1
 18137                           
 18138                           ;stkvar	_counter @ sp[(-2)+1]
 18139  018AA6  0EFF               	movlw	-1
 18140  018AA8                     L17:
 18141  018AA8  2AE3               	incf	plusw1,f,c
 18142                           
 18143                           ;stkvar	_divisor @ sp[(-2)+-4]
 18144  018AAA  0EFB               	movlw	-5
 18145  018AAC  AEE3               	btfss	plusw1,7,c
 18146  018AAE  D7EA               	goto	l8148
 18147  018AB0                     u6710:
 18148                           
 18149                           ;stkvar	_divisor @ sp[(-2)+-4]
 18150  018AB0  0EFA               	movlw	-6
 18151  018AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18152  018AB8  0EFB               	movlw	-5
 18153  018ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18154                           
 18155                           ;stkvar	_dividend @ sp[(-2)+-2]
 18156  018AC0  0EFC               	movlw	-4
 18157  018AC2  006F FF8C  F009    	movff	plusw1,btemp+8
 18158  018AC8  0EFD               	movlw	-3
 18159  018ACA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18160  018AD0  500B               	movf	(btemp+10)^0,w,c
 18161  018AD2  5C09               	subwf	(btemp+8)^0,w,c
 18162  018AD4  500C               	movf	(btemp+11)^0,w,c
 18163  018AD6  580A               	subwfb	(btemp+9)^0,w,c
 18164  018AD8  A0D8               	btfss	status,0,c
 18165  018ADA  D014               	goto	l8158
 18166                           
 18167                           ;stkvar	_divisor @ sp[(-2)+-4]
 18168                           ;stkvar	_dividend @ sp[(-2)+-2]
 18169  018ADC  0EFC               	movlw	-4
 18170  018ADE  50E3               	movf	plusw1,w,c
 18171  018AE0  6E01               	movwf	btemp^0,c
 18172  018AE2  0EFA               	movlw	-6
 18173  018AE4  50E3               	movf	plusw1,w,c
 18174  018AE6  5E01               	subwf	btemp^0,f,c
 18175  018AE8  0EFC               	movlw	-4
 18176  018AEA  0060  F007  FFE3   	movff	btemp,plusw1
 18177  018AF0  0EFD               	movlw	-3
 18178  018AF2  50E3               	movf	plusw1,w,c
 18179  018AF4  6E01               	movwf	btemp^0,c
 18180  018AF6  0EFB               	movlw	-5
 18181  018AF8  50E3               	movf	plusw1,w,c
 18182  018AFA  5A01               	subwfb	btemp^0,f,c
 18183  018AFC  0EFD               	movlw	-3
 18184  018AFE  0060  F007  FFE3   	movff	btemp,plusw1
 18185  018B04                     l8158:
 18186                           
 18187                           ;stkvar	_divisor @ sp[(-2)+-4]
 18188  018B04  90D8               	bcf	status,0,c
 18189  018B06  0EFB               	movlw	-5
 18190  018B08  32E3               	rrcf	plusw1,f,c
 18191  018B0A  0EFA               	movlw	-6
 18192  018B0C  32E3               	rrcf	plusw1,f,c
 18193                           
 18194                           ;stkvar	_counter @ sp[(-2)+1]
 18195  018B0E  0EFF               	movlw	-1
 18196  018B10  50E3               	movf	plusw1,w,c
 18197  018B12  6E01               	movwf	btemp^0,c
 18198  018B14  0E01               	movlw	1
 18199  018B16  5E01               	subwf	btemp^0,f,c
 18200  018B18  0EFF               	movlw	-1
 18201  018B1A  0060  F007  FFE3   	movff	btemp,plusw1
 18202  018B20  A4D8               	btfss	status,2,c
 18203  018B22  D7C6               	goto	u6710
 18204  018B24                     u6730:
 18205                           
 18206                           ;stkvar	_sign @ sp[(-2)+0]
 18207  018B24  0EFE               	movlw	-2
 18208  018B26  50E3               	movf	plusw1,w,c
 18209  018B28  B4D8               	btfsc	status,2,c
 18210  018B2A  D006               	goto	l8166
 18211                           
 18212                           ;stkvar	_dividend @ sp[(-2)+-2]
 18213                           ;stkvar	_dividend @ sp[(-2)+-2]
 18214  018B2C  0EFC               	movlw	-4
 18215  018B2E  6CE3               	negf	plusw1,c
 18216  018B30  0EFD               	movlw	-3
 18217  018B32  1EE3               	comf	plusw1,f,c
 18218  018B34  B0D8               	btfsc	status,0,c
 18219  018B36  2AE3               	incf	plusw1,f,c
 18220  018B38                     l8166:
 18221                           
 18222                           ;stkvar	_dividend @ sp[(-2)+-2]
 18223  018B38  0EFC               	movlw	-4
 18224  018B3A  006F FF8C  F001    	movff	plusw1,btemp
 18225  018B40  0EFD               	movlw	-3
 18226  018B42  006F FF8C  F002    	movff	plusw1,btemp+1
 18227                           
 18228                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18229  018B48  0EFA               	movlw	250
 18230  018B4A  26E1               	addwf	fsr1l,f,c
 18231  018B4C  0EFF               	movlw	255
 18232  018B4E  22E2               	addwfc	fsr1h,f,c
 18233  018B50  0012               	return		;funcret
 18234  018B52                     __end_of___awmod:
 18235                           	opt callstack 0
 18236                           
 18237 ;; *************** function ___awdiv *****************
 18238 ;; Defined at:
 18239 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18240 ;; Parameters:    Size  Location     Type
 18241 ;;  dividend        2  [STACK] int 
 18242 ;;  divisor         2  [STACK] int 
 18243 ;; Auto vars:     Size  Location     Type
 18244 ;;  quotient        2  [STACK] int 
 18245 ;;  sign            1  [STACK] unsigned char 
 18246 ;;  counter         1  [STACK] unsigned char 
 18247 ;; Return value:  Size  Location     Type
 18248 ;;                  2  [STACK] int 
 18249 ;; Registers used:
 18250 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18251 ;; Tracked objects:
 18252 ;;		On entry : 0/0
 18253 ;;		On exit  : 0/0
 18254 ;;		Unchanged: 0/0
 18255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18260 ;;Total ram usage:        0 bytes
 18261 ;; Hardware stack levels used:    1
 18262 ;; Hardware stack levels required when called:   15
 18263 ;; This function calls:
 18264 ;;		Nothing
 18265 ;; This function is called by:
 18266 ;;		_efgtoa
 18267 ;; This function uses a reentrant model
 18268 ;;
 18269                           
 18270                           	psect	text65
 18271  01841E                     __ptext65:
 18272                           	opt callstack 0
 18273  01841E                     ___awdiv:
 18274                           	opt callstack 0
 18275                           
 18276                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18277  01841E  52E6               	movf	postinc1,f,c
 18278  018420  52E6               	movf	postinc1,f,c
 18279  018422  52E6               	movf	postinc1,f,c
 18280  018424  52E6               	movf	postinc1,f,c
 18281                           
 18282                           ;stkvar	_sign @ sp[(-4)+2]
 18283                           
 18284                           ;incstack = 0
 18285 ;; hardware stack exceeded
 18286  018426  0EFE               	movlw	-2
 18287  018428  6AE3               	clrf	plusw1,c
 18288                           
 18289                           ;stkvar	_divisor @ sp[(-4)+-4]
 18290  01842A  0EF9               	movlw	-7
 18291  01842C  AEE3               	btfss	plusw1,7,c
 18292  01842E  D009               	goto	l8094
 18293                           
 18294                           ;stkvar	_divisor @ sp[(-4)+-4]
 18295                           ;stkvar	_divisor @ sp[(-4)+-4]
 18296  018430  0EF8               	movlw	-8
 18297  018432  6CE3               	negf	plusw1,c
 18298  018434  0EF9               	movlw	-7
 18299  018436  1EE3               	comf	plusw1,f,c
 18300  018438  B0D8               	btfsc	status,0,c
 18301  01843A  2AE3               	incf	plusw1,f,c
 18302                           
 18303                           ;stkvar	_sign @ sp[(-4)+2]
 18304  01843C  0EFE               	movlw	-2
 18305  01843E  6AE3               	clrf	plusw1,c
 18306  018440  2AE3               	incf	plusw1,f,c
 18307  018442                     l8094:
 18308                           
 18309                           ;stkvar	_dividend @ sp[(-4)+-2]
 18310  018442  0EFB               	movlw	-5
 18311  018444  AEE3               	btfss	plusw1,7,c
 18312  018446  D008               	goto	l8100
 18313                           
 18314                           ;stkvar	_dividend @ sp[(-4)+-2]
 18315                           ;stkvar	_dividend @ sp[(-4)+-2]
 18316  018448  0EFA               	movlw	-6
 18317  01844A  6CE3               	negf	plusw1,c
 18318  01844C  0EFB               	movlw	-5
 18319  01844E  1EE3               	comf	plusw1,f,c
 18320  018450  B0D8               	btfsc	status,0,c
 18321  018452  2AE3               	incf	plusw1,f,c
 18322                           
 18323                           ;stkvar	_sign @ sp[(-4)+2]
 18324  018454  0EFE               	movlw	-2
 18325  018456  70E3               	btg	plusw1,0,c
 18326  018458                     l8100:
 18327                           
 18328                           ;stkvar	_quotient @ sp[(-4)+0]
 18329  018458  0EFC               	movlw	-4
 18330  01845A  6AE3               	clrf	plusw1,c
 18331  01845C  0EFD               	movlw	-3
 18332  01845E  6AE3               	clrf	plusw1,c
 18333                           
 18334                           ;stkvar	_divisor @ sp[(-4)+-4]
 18335  018460  0EF8               	movlw	-8
 18336  018462  006F FF8C  F001    	movff	plusw1,btemp
 18337  018468  0EF9               	movlw	-7
 18338  01846A  50E3               	movf	plusw1,w,c
 18339  01846C  1001               	iorwf	btemp^0,w,c
 18340  01846E  B4D8               	btfsc	status,2,c
 18341  018470  D066               	goto	u6660
 18342                           
 18343                           ;stkvar	_counter @ sp[(-4)+3]
 18344  018472  0EFF               	movlw	-1
 18345  018474  6AE3               	clrf	plusw1,c
 18346  018476  D012               	goto	L18
 18347  018478                     l8106:
 18348                           
 18349                           ;stkvar	_divisor @ sp[(-4)+-4]
 18350  018478  0EF8               	movlw	-8
 18351  01847A  50E3               	movf	plusw1,w,c
 18352  01847C  90D8               	bcf	status,0,c
 18353  01847E  34E8               	rlcf	wreg,w,c
 18354  018480  6E01               	movwf	btemp^0,c
 18355  018482  0EF8               	movlw	-8
 18356  018484  0060  F007  FFE3   	movff	btemp,plusw1
 18357  01848A  0EF9               	movlw	-7
 18358  01848C  50E3               	movf	plusw1,w,c
 18359  01848E  34E8               	rlcf	wreg,w,c
 18360  018490  6E01               	movwf	btemp^0,c
 18361  018492  0EF9               	movlw	-7
 18362  018494  0060  F007  FFE3   	movff	btemp,plusw1
 18363                           
 18364                           ;stkvar	_counter @ sp[(-4)+3]
 18365  01849A  0EFF               	movlw	-1
 18366  01849C                     L18:
 18367  01849C  2AE3               	incf	plusw1,f,c
 18368                           
 18369                           ;stkvar	_divisor @ sp[(-4)+-4]
 18370  01849E  0EF9               	movlw	-7
 18371  0184A0  AEE3               	btfss	plusw1,7,c
 18372  0184A2  D7EA               	goto	l8106
 18373  0184A4                     u6640:
 18374                           
 18375                           ;stkvar	_quotient @ sp[(-4)+0]
 18376  0184A4  0EFC               	movlw	-4
 18377  0184A6  50E3               	movf	plusw1,w,c
 18378  0184A8  90D8               	bcf	status,0,c
 18379  0184AA  34E8               	rlcf	wreg,w,c
 18380  0184AC  6E01               	movwf	btemp^0,c
 18381  0184AE  0EFC               	movlw	-4
 18382  0184B0  0060  F007  FFE3   	movff	btemp,plusw1
 18383  0184B6  0EFD               	movlw	-3
 18384  0184B8  50E3               	movf	plusw1,w,c
 18385  0184BA  34E8               	rlcf	wreg,w,c
 18386  0184BC  6E01               	movwf	btemp^0,c
 18387  0184BE  0EFD               	movlw	-3
 18388  0184C0  0060  F007  FFE3   	movff	btemp,plusw1
 18389                           
 18390                           ;stkvar	_divisor @ sp[(-4)+-4]
 18391  0184C6  0EF8               	movlw	-8
 18392  0184C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 18393  0184CE  0EF9               	movlw	-7
 18394  0184D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18395                           
 18396                           ;stkvar	_dividend @ sp[(-4)+-2]
 18397  0184D6  0EFA               	movlw	-6
 18398  0184D8  006F FF8C  F009    	movff	plusw1,btemp+8
 18399  0184DE  0EFB               	movlw	-5
 18400  0184E0  006F FF8C  F00A    	movff	plusw1,btemp+9
 18401  0184E6  500B               	movf	(btemp+10)^0,w,c
 18402  0184E8  5C09               	subwf	(btemp+8)^0,w,c
 18403  0184EA  500C               	movf	(btemp+11)^0,w,c
 18404  0184EC  580A               	subwfb	(btemp+9)^0,w,c
 18405  0184EE  A0D8               	btfss	status,0,c
 18406  0184F0  D016               	goto	l8120
 18407                           
 18408                           ;stkvar	_divisor @ sp[(-4)+-4]
 18409                           ;stkvar	_dividend @ sp[(-4)+-2]
 18410  0184F2  0EFA               	movlw	-6
 18411  0184F4  50E3               	movf	plusw1,w,c
 18412  0184F6  6E01               	movwf	btemp^0,c
 18413  0184F8  0EF8               	movlw	-8
 18414  0184FA  50E3               	movf	plusw1,w,c
 18415  0184FC  5E01               	subwf	btemp^0,f,c
 18416  0184FE  0EFA               	movlw	-6
 18417  018500  0060  F007  FFE3   	movff	btemp,plusw1
 18418  018506  0EFB               	movlw	-5
 18419  018508  50E3               	movf	plusw1,w,c
 18420  01850A  6E01               	movwf	btemp^0,c
 18421  01850C  0EF9               	movlw	-7
 18422  01850E  50E3               	movf	plusw1,w,c
 18423  018510  5A01               	subwfb	btemp^0,f,c
 18424  018512  0EFB               	movlw	-5
 18425  018514  0060  F007  FFE3   	movff	btemp,plusw1
 18426                           
 18427                           ;stkvar	_quotient @ sp[(-4)+0]
 18428  01851A  0EFC               	movlw	-4
 18429  01851C  80E3               	bsf	plusw1,0,c
 18430  01851E                     l8120:
 18431                           
 18432                           ;stkvar	_divisor @ sp[(-4)+-4]
 18433  01851E  90D8               	bcf	status,0,c
 18434  018520  0EF9               	movlw	-7
 18435  018522  32E3               	rrcf	plusw1,f,c
 18436  018524  0EF8               	movlw	-8
 18437  018526  32E3               	rrcf	plusw1,f,c
 18438                           
 18439                           ;stkvar	_counter @ sp[(-4)+3]
 18440  018528  0EFF               	movlw	-1
 18441  01852A  50E3               	movf	plusw1,w,c
 18442  01852C  6E01               	movwf	btemp^0,c
 18443  01852E  0E01               	movlw	1
 18444  018530  5E01               	subwf	btemp^0,f,c
 18445  018532  0EFF               	movlw	-1
 18446  018534  0060  F007  FFE3   	movff	btemp,plusw1
 18447  01853A  A4D8               	btfss	status,2,c
 18448  01853C  D7B3               	goto	u6640
 18449  01853E                     u6660:
 18450                           
 18451                           ;stkvar	_sign @ sp[(-4)+2]
 18452  01853E  0EFE               	movlw	-2
 18453  018540  50E3               	movf	plusw1,w,c
 18454  018542  B4D8               	btfsc	status,2,c
 18455  018544  D006               	goto	l8128
 18456                           
 18457                           ;stkvar	_quotient @ sp[(-4)+0]
 18458                           ;stkvar	_quotient @ sp[(-4)+0]
 18459  018546  0EFC               	movlw	-4
 18460  018548  6CE3               	negf	plusw1,c
 18461  01854A  0EFD               	movlw	-3
 18462  01854C  1EE3               	comf	plusw1,f,c
 18463  01854E  B0D8               	btfsc	status,0,c
 18464  018550  2AE3               	incf	plusw1,f,c
 18465  018552                     l8128:
 18466                           
 18467                           ;stkvar	_quotient @ sp[(-4)+0]
 18468  018552  0EFC               	movlw	-4
 18469  018554  006F FF8C  F001    	movff	plusw1,btemp
 18470  01855A  0EFD               	movlw	-3
 18471  01855C  006F FF8C  F002    	movff	plusw1,btemp+1
 18472                           
 18473                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18474  018562  0EF8               	movlw	248
 18475  018564  26E1               	addwf	fsr1l,f,c
 18476  018566  0EFF               	movlw	255
 18477  018568  22E2               	addwfc	fsr1h,f,c
 18478  01856A  0012               	return		;funcret
 18479  01856C                     __end_of___awdiv:
 18480                           	opt callstack 0
 18481                           
 18482 ;; *************** function _dtoa *****************
 18483 ;; Defined at:
 18484 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18485 ;; Parameters:    Size  Location     Type
 18486 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18487 ;;		 -> f(6), NULL(0), 
 18488 ;;  d               8  [STACK] long long 
 18489 ;; Auto vars:     Size  Location     Type
 18490 ;;  n               8  [STACK] long long 
 18491 ;;  i               2  [STACK] int 
 18492 ;;  s               2  [STACK] int 
 18493 ;;  w               2  [STACK] int 
 18494 ;;  p               2  [STACK] int 
 18495 ;; Return value:  Size  Location     Type
 18496 ;;                  2  [STACK] int 
 18497 ;; Registers used:
 18498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18499 ;; Tracked objects:
 18500 ;;		On entry : 0/0
 18501 ;;		On exit  : 0/0
 18502 ;;		Unchanged: 0/0
 18503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18508 ;;Total ram usage:        0 bytes
 18509 ;; Hardware stack levels used:    1
 18510 ;; Hardware stack levels required when called:   20
 18511 ;; This function calls:
 18512 ;;		___aodiv
 18513 ;;		___aomod
 18514 ;;		_abs
 18515 ;;		_pad
 18516 ;; This function is called by:
 18517 ;;		_vfpfcnvrt
 18518 ;; This function uses a reentrant model
 18519 ;;
 18520                           
 18521                           	psect	text66
 18522  014EB0                     __ptext66:
 18523                           	opt callstack 0
 18524  014EB0                     _dtoa:
 18525                           	opt callstack 0
 18526                           
 18527                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18528  014EB0  0E12               	movlw	18
 18529  014EB2  26E1               	addwf	fsr1l,f,c
 18530  014EB4  0E00               	movlw	0
 18531  014EB6  22E2               	addwfc	fsr1h,f,c
 18532                           
 18533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 18534                           ;stkvar	_d @ sp[(-18)+-10]
 18535                           
 18536                           ;incstack = 0
 18537 ;; hardware stack exceeded
 18538  014EB8  0EE4               	movlw	228
 18539  014EBA  24E1               	addwf	fsr1l,w,c
 18540  014EBC  6ED9               	movwf	fsr2l,c
 18541  014EBE  0EFF               	movlw	255
 18542  014EC0  20E2               	addwfc	fsr1h,w,c
 18543  014EC2  6EDA               	movwf	fsr2h,c
 18544                           
 18545                           ;stkvar	_n @ sp[(-18)+2]
 18546  014EC4  0E08               	movlw	8
 18547  014EC6  6E01               	movwf	btemp^0,c
 18548  014EC8  0EF0               	movlw	-16
 18549  014ECA                     us1025999:
 18550  014ECA  006F FF7B FFE3     	movff	postinc2,plusw1
 18551  014ED0  28E8               	incf	wreg,w,c
 18552  014ED2  2E01               	decfsz	btemp^0,f,c
 18553  014ED4  D7FA               	bra	us1025999
 18554                           
 18555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 18556                           ;stkvar	_n @ sp[(-18)+2]
 18557  014ED6  0EF7               	movlw	-9
 18558  014ED8  AEE3               	btfss	plusw1,7,c
 18559  014EDA  D002               	goto	u10260
 18560  014EDC  0E01               	movlw	1
 18561  014EDE  D001               	goto	u10270
 18562  014EE0                     u10260:
 18563  014EE0  0E00               	movlw	0
 18564  014EE2                     u10270:
 18565  014EE2  6E0B               	movwf	(btemp+10)^0,c
 18566  014EE4  6A0C               	clrf	(btemp+11)^0,c
 18567                           
 18568                           ;stkvar	_s @ sp[(-18)+12]
 18569  014EE6  0EFA               	movlw	-6
 18570  014EE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18571  014EEE  0EFB               	movlw	-5
 18572  014EF0  0060  F033  FFE3   	movff	btemp+11,plusw1
 18573                           
 18574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 18575                           ;stkvar	_s @ sp[(-18)+12]
 18576  014EF6  0EFA               	movlw	-6
 18577  014EF8  006F FF8C  F001    	movff	plusw1,btemp
 18578  014EFE  0EFB               	movlw	-5
 18579  014F00  50E3               	movf	plusw1,w,c
 18580  014F02  1001               	iorwf	btemp^0,w,c
 18581  014F04  B4D8               	btfsc	status,2,c
 18582  014F06  D025               	goto	u10290
 18583                           
 18584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 18585                           ;stkvar	_n @ sp[(-18)+2]
 18586                           ;stkvar	_n @ sp[(-18)+2]
 18587  014F08  0EF0               	movlw	-16
 18588  014F0A  6CE3               	negf	plusw1,c
 18589  014F0C  0EF1               	movlw	-15
 18590  014F0E  1EE3               	comf	plusw1,f,c
 18591  014F10  0EF2               	movlw	-14
 18592  014F12  1EE3               	comf	plusw1,f,c
 18593  014F14  0EF3               	movlw	-13
 18594  014F16  1EE3               	comf	plusw1,f,c
 18595  014F18  0EF4               	movlw	-12
 18596  014F1A  1EE3               	comf	plusw1,f,c
 18597  014F1C  0EF5               	movlw	-11
 18598  014F1E  1EE3               	comf	plusw1,f,c
 18599  014F20  0EF6               	movlw	-10
 18600  014F22  1EE3               	comf	plusw1,f,c
 18601  014F24  0EF7               	movlw	-9
 18602  014F26  1EE3               	comf	plusw1,f,c
 18603  014F28  E314               	bnc	u10290
 18604  014F2A  0EF1               	movlw	-15
 18605  014F2C  2AE3               	incf	plusw1,f,c
 18606  014F2E  E311               	bnc	u10290
 18607  014F30  0EF2               	movlw	-14
 18608  014F32  2AE3               	incf	plusw1,f,c
 18609  014F34  E30E               	bnc	u10290
 18610  014F36  0EF3               	movlw	-13
 18611  014F38  2AE3               	incf	plusw1,f,c
 18612  014F3A  E30B               	bnc	u10290
 18613  014F3C  0EF4               	movlw	-12
 18614  014F3E  2AE3               	incf	plusw1,f,c
 18615  014F40  E308               	bnc	u10290
 18616  014F42  0EF5               	movlw	-11
 18617  014F44  2AE3               	incf	plusw1,f,c
 18618  014F46  E305               	bnc	u10290
 18619  014F48  0EF6               	movlw	-10
 18620  014F4A  2AE3               	incf	plusw1,f,c
 18621  014F4C  E302               	bnc	u10290
 18622  014F4E  0EF7               	movlw	-9
 18623  014F50  2AE3               	incf	plusw1,f,c
 18624  014F52                     u10290:
 18625                           
 18626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 18627  014F52  AE24               	btfss	(_prec+1)^0,7,c
 18628                           
 18629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 18630  014F54  9225               	bcf	_flags^0,1,c
 18631                           
 18632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 18633  014F56  BE24               	btfsc	(_prec+1)^0,7,c
 18634  014F58  D005               	goto	u10310
 18635  014F5A  5024               	movf	(_prec+1)^0,w,c
 18636  014F5C  E110               	bnz	l11256
 18637  014F5E  0423               	decf	_prec^0,w,c
 18638  014F60  B0D8               	btfsc	status,0,c
 18639  014F62  D00D               	goto	l11256
 18640  014F64                     u10310:
 18641  014F64  0E01               	movlw	1
 18642  014F66  6E0B               	movwf	(btemp+10)^0,c
 18643  014F68  0E00               	movlw	0
 18644  014F6A  6E0C               	movwf	(btemp+11)^0,c
 18645                           
 18646                           ;stkvar	_p @ sp[(-18)+16]
 18647  014F6C  0EFE               	movlw	-2
 18648  014F6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18649  014F74  0EFF               	movlw	-1
 18650  014F76  0060  F033  FFE3   	movff	btemp+11,plusw1
 18651  014F7C  D008               	goto	l2098
 18652  014F7E                     l11256:
 18653                           
 18654                           ;stkvar	_p @ sp[(-18)+16]
 18655  014F7E  0EFE               	movlw	-2
 18656  014F80  0060  F08F  FFE3   	movff	_prec,plusw1
 18657  014F86  0EFF               	movlw	-1
 18658  014F88  0060  F093  FFE3   	movff	_prec+1,plusw1
 18659  014F8E                     l2098:
 18660                           
 18661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 18662                           ;stkvar	_w @ sp[(-18)+14]
 18663  014F8E  0EFC               	movlw	-4
 18664  014F90  0060  F087  FFE3   	movff	_width,plusw1
 18665  014F96  0EFD               	movlw	-3
 18666  014F98  0060  F08B  FFE3   	movff	_width+1,plusw1
 18667                           
 18668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 18669                           ;stkvar	_s @ sp[(-18)+12]
 18670  014F9E  0EFA               	movlw	-6
 18671  014FA0  006F FF8C  F001    	movff	plusw1,btemp
 18672  014FA6  0EFB               	movlw	-5
 18673  014FA8  50E3               	movf	plusw1,w,c
 18674  014FAA  1001               	iorwf	btemp^0,w,c
 18675  014FAC  A4D8               	btfss	status,2,c
 18676  014FAE  D002               	goto	u10330
 18677  014FB0  A425               	btfss	_flags^0,2,c
 18678  014FB2  D00A               	goto	l11264
 18679  014FB4                     u10330:
 18680                           
 18681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 18682                           ;stkvar	_w @ sp[(-18)+14]
 18683  014FB4  50E1               	movf	fsr1l,w,c
 18684  014FB6  0FFC               	addlw	-4
 18685  014FB8  6ED9               	movwf	fsr2l,c
 18686  014FBA  50E2               	movf	fsr1h,w,c
 18687  014FBC  6EDA               	movwf	fsr2h,c
 18688  014FBE  0EFF               	movlw	255
 18689  014FC0  22DA               	addwfc	fsr2h,f,c
 18690  014FC2  06DE               	decf	postinc2,f,c
 18691  014FC4  0E00               	movlw	0
 18692  014FC6  5ADD               	subwfb	postdec2,f,c
 18693  014FC8                     l11264:
 18694                           
 18695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 18696  014FC8  0E4F               	movlw	79
 18697  014FCA  6E0B               	movwf	(btemp+10)^0,c
 18698  014FCC  0E00               	movlw	0
 18699  014FCE  6E0C               	movwf	(btemp+11)^0,c
 18700                           
 18701                           ;stkvar	_i @ sp[(-18)+10]
 18702  014FD0  0EF8               	movlw	-8
 18703  014FD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18704  014FD8  0EF9               	movlw	-7
 18705  014FDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18706                           
 18707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 18708  014FE0  0103               	movlb	3	; () banked
 18709  014FE2  6BE3               	clrf	(_dbuf+79)& (0+255),b
 18710                           
 18711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18712  014FE4  D109               	goto	l11278
 18713  014FE6                     l11268:
 18714                           
 18715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 18716                           ;stkvar	_i @ sp[(-18)+10]
 18717  014FE6  50E1               	movf	fsr1l,w,c
 18718  014FE8  0FF8               	addlw	-8
 18719  014FEA  6ED9               	movwf	fsr2l,c
 18720  014FEC  50E2               	movf	fsr1h,w,c
 18721  014FEE  6EDA               	movwf	fsr2h,c
 18722  014FF0  0EFF               	movlw	255
 18723  014FF2  22DA               	addwfc	fsr2h,f,c
 18724  014FF4  06DE               	decf	postinc2,f,c
 18725  014FF6  0E00               	movlw	0
 18726  014FF8  5ADD               	subwfb	postdec2,f,c
 18727                           
 18728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 18729  014FFA  0E0A               	movlw	10
 18730  014FFC  6EE6               	movwf	postinc1,c
 18731  014FFE  0E00               	movlw	0
 18732  015000  6EE6               	movwf	postinc1,c
 18733  015002  0E00               	movlw	0
 18734  015004  6EE6               	movwf	postinc1,c
 18735  015006  0E00               	movlw	0
 18736  015008  6EE6               	movwf	postinc1,c
 18737  01500A  0E00               	movlw	0
 18738  01500C  6EE6               	movwf	postinc1,c
 18739  01500E  0E00               	movlw	0
 18740  015010  6EE6               	movwf	postinc1,c
 18741  015012  0E00               	movlw	0
 18742  015014  6EE6               	movwf	postinc1,c
 18743  015016  0E00               	movlw	0
 18744  015018  6EE6               	movwf	postinc1,c
 18745                           
 18746                           ;stkvar	_n @ sp[(-26)+2]
 18747  01501A  50E1               	movf	fsr1l,w,c
 18748  01501C  0FE8               	addlw	-24
 18749  01501E  6ED9               	movwf	fsr2l,c
 18750  015020  50E2               	movf	fsr1h,w,c
 18751  015022  6EDA               	movwf	fsr2h,c
 18752  015024  0EFF               	movlw	255
 18753  015026  22DA               	addwfc	fsr2h,f,c
 18754  015028  006F FF7B FFE6     	movff	postinc2,postinc1
 18755  01502E  006F FF7B FFE6     	movff	postinc2,postinc1
 18756  015034  006F FF7B FFE6     	movff	postinc2,postinc1
 18757  01503A  006F FF7B FFE6     	movff	postinc2,postinc1
 18758  015040  006F FF7B FFE6     	movff	postinc2,postinc1
 18759  015046  006F FF7B FFE6     	movff	postinc2,postinc1
 18760  01504C  006F FF7B FFE6     	movff	postinc2,postinc1
 18761  015052  006F FF7B FFE6     	movff	postinc2,postinc1
 18762  015058  ECEB  F0B5         	call	___aomod	;wreg free
 18763  01505C  52E5               	movf	postdec1,f,c
 18764  01505E  006F FF9C  F018    	movff	indf1,btemp+23
 18765  015064  52E5               	movf	postdec1,f,c
 18766  015066  006F FF9C  F017    	movff	indf1,btemp+22
 18767  01506C  52E5               	movf	postdec1,f,c
 18768  01506E  006F FF9C  F016    	movff	indf1,btemp+21
 18769  015074  52E5               	movf	postdec1,f,c
 18770  015076  006F FF9C  F015    	movff	indf1,btemp+20
 18771  01507C  52E5               	movf	postdec1,f,c
 18772  01507E  006F FF9C  F014    	movff	indf1,btemp+19
 18773  015084  52E5               	movf	postdec1,f,c
 18774  015086  006F FF9C  F013    	movff	indf1,btemp+18
 18775  01508C  52E5               	movf	postdec1,f,c
 18776  01508E  006F FF9C  F012    	movff	indf1,btemp+17
 18777  015094  52E5               	movf	postdec1,f,c
 18778  015096  006F FF9C  F011    	movff	indf1,btemp+16
 18779  01509C  0EF8               	movlw	248
 18780  01509E  26E1               	addwf	fsr1l,f,c
 18781  0150A0  0EFF               	movlw	255
 18782  0150A2  22E2               	addwfc	fsr1h,f,c
 18783  0150A4  0060  F044  F00B   	movff	btemp+16,btemp+10
 18784  0150AA  0060  F048  F00C   	movff	btemp+17,btemp+11
 18785  0150B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18786  0150B6  0060  F033  FFE6   	movff	btemp+11,postinc1
 18787  0150BC  EC54  F0D2         	call	_abs	;wreg free
 18788  0150C0  0E30               	movlw	48
 18789  0150C2  2601               	addwf	btemp^0,f,c
 18790                           
 18791                           ;stkvar	_i @ sp[(-18)+10]
 18792  0150C4  0EF8               	movlw	-8
 18793  0150C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18794  0150CC  0EF9               	movlw	-7
 18795  0150CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18796  0150D4  0E94               	movlw	low _dbuf
 18797  0150D6  240B               	addwf	(btemp+10)^0,w,c
 18798  0150D8  6ED9               	movwf	fsr2l,c
 18799  0150DA  0E03               	movlw	high _dbuf
 18800  0150DC  200C               	addwfc	(btemp+11)^0,w,c
 18801  0150DE  6EDA               	movwf	fsr2h,c
 18802  0150E0  0060  F007  FFDF   	movff	btemp,indf2
 18803                           
 18804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 18805                           ;stkvar	_p @ sp[(-18)+16]
 18806  0150E6  50E1               	movf	fsr1l,w,c
 18807  0150E8  0FFE               	addlw	-2
 18808  0150EA  6ED9               	movwf	fsr2l,c
 18809  0150EC  50E2               	movf	fsr1h,w,c
 18810  0150EE  6EDA               	movwf	fsr2h,c
 18811  0150F0  0EFF               	movlw	255
 18812  0150F2  22DA               	addwfc	fsr2h,f,c
 18813  0150F4  06DE               	decf	postinc2,f,c
 18814  0150F6  0E00               	movlw	0
 18815  0150F8  5ADD               	subwfb	postdec2,f,c
 18816                           
 18817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18818                           ;stkvar	_w @ sp[(-18)+14]
 18819  0150FA  50E1               	movf	fsr1l,w,c
 18820  0150FC  0FFC               	addlw	-4
 18821  0150FE  6ED9               	movwf	fsr2l,c
 18822  015100  50E2               	movf	fsr1h,w,c
 18823  015102  6EDA               	movwf	fsr2h,c
 18824  015104  0EFF               	movlw	255
 18825  015106  22DA               	addwfc	fsr2h,f,c
 18826  015108  06DE               	decf	postinc2,f,c
 18827  01510A  0E00               	movlw	0
 18828  01510C  5ADD               	subwfb	postdec2,f,c
 18829                           
 18830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18831  01510E  0E0A               	movlw	10
 18832  015110  6EE6               	movwf	postinc1,c
 18833  015112  0E00               	movlw	0
 18834  015114  6EE6               	movwf	postinc1,c
 18835  015116  0E00               	movlw	0
 18836  015118  6EE6               	movwf	postinc1,c
 18837  01511A  0E00               	movlw	0
 18838  01511C  6EE6               	movwf	postinc1,c
 18839  01511E  0E00               	movlw	0
 18840  015120  6EE6               	movwf	postinc1,c
 18841  015122  0E00               	movlw	0
 18842  015124  6EE6               	movwf	postinc1,c
 18843  015126  0E00               	movlw	0
 18844  015128  6EE6               	movwf	postinc1,c
 18845  01512A  0E00               	movlw	0
 18846  01512C  6EE6               	movwf	postinc1,c
 18847                           
 18848                           ;stkvar	_n @ sp[(-26)+2]
 18849  01512E  50E1               	movf	fsr1l,w,c
 18850  015130  0FE8               	addlw	-24
 18851  015132  6ED9               	movwf	fsr2l,c
 18852  015134  50E2               	movf	fsr1h,w,c
 18853  015136  6EDA               	movwf	fsr2h,c
 18854  015138  0EFF               	movlw	255
 18855  01513A  22DA               	addwfc	fsr2h,f,c
 18856  01513C  006F FF7B FFE6     	movff	postinc2,postinc1
 18857  015142  006F FF7B FFE6     	movff	postinc2,postinc1
 18858  015148  006F FF7B FFE6     	movff	postinc2,postinc1
 18859  01514E  006F FF7B FFE6     	movff	postinc2,postinc1
 18860  015154  006F FF7B FFE6     	movff	postinc2,postinc1
 18861  01515A  006F FF7B FFE6     	movff	postinc2,postinc1
 18862  015160  006F FF7B FFE6     	movff	postinc2,postinc1
 18863  015166  006F FF7B FFE6     	movff	postinc2,postinc1
 18864  01516C  EC71  F0B3         	call	___aodiv	;wreg free
 18865  015170  52E5               	movf	postdec1,f,c
 18866  015172  006F FF9C  F018    	movff	indf1,btemp+23
 18867  015178  52E5               	movf	postdec1,f,c
 18868  01517A  006F FF9C  F017    	movff	indf1,btemp+22
 18869  015180  52E5               	movf	postdec1,f,c
 18870  015182  006F FF9C  F016    	movff	indf1,btemp+21
 18871  015188  52E5               	movf	postdec1,f,c
 18872  01518A  006F FF9C  F015    	movff	indf1,btemp+20
 18873  015190  52E5               	movf	postdec1,f,c
 18874  015192  006F FF9C  F014    	movff	indf1,btemp+19
 18875  015198  52E5               	movf	postdec1,f,c
 18876  01519A  006F FF9C  F013    	movff	indf1,btemp+18
 18877  0151A0  52E5               	movf	postdec1,f,c
 18878  0151A2  006F FF9C  F012    	movff	indf1,btemp+17
 18879  0151A8  52E5               	movf	postdec1,f,c
 18880  0151AA  006F FF9C  F011    	movff	indf1,btemp+16
 18881  0151B0  0EF8               	movlw	248
 18882  0151B2  26E1               	addwf	fsr1l,f,c
 18883  0151B4  0EFF               	movlw	255
 18884  0151B6  22E2               	addwfc	fsr1h,f,c
 18885                           
 18886                           ;stkvar	_n @ sp[(-18)+2]
 18887  0151B8  0EF0               	movlw	-16
 18888  0151BA  0060  F047  FFE3   	movff	btemp+16,plusw1
 18889  0151C0  0EF1               	movlw	-15
 18890  0151C2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 18891  0151C8  0EF2               	movlw	-14
 18892  0151CA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 18893  0151D0  0EF3               	movlw	-13
 18894  0151D2  0060  F053  FFE3   	movff	btemp+19,plusw1
 18895  0151D8  0EF4               	movlw	-12
 18896  0151DA  0060  F057  FFE3   	movff	btemp+20,plusw1
 18897  0151E0  0EF5               	movlw	-11
 18898  0151E2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 18899  0151E8  0EF6               	movlw	-10
 18900  0151EA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 18901  0151F0  0EF7               	movlw	-9
 18902  0151F2  0060  F063  FFE3   	movff	btemp+23,plusw1
 18903  0151F8                     l11278:
 18904                           
 18905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18906                           ;stkvar	_i @ sp[(-18)+10]
 18907  0151F8  0EF9               	movlw	-7
 18908  0151FA  BEE3               	btfsc	plusw1,7,c
 18909  0151FC  D036               	goto	u10380
 18910  0151FE  0EF9               	movlw	-7
 18911  015200  50E3               	movf	plusw1,w,c
 18912  015202  E104               	bnz	u10340
 18913  015204  0EF8               	movlw	-8
 18914  015206  04E3               	decf	plusw1,w,c
 18915  015208  A0D8               	btfss	status,0,c
 18916  01520A  D02F               	goto	u10380
 18917  01520C                     u10340:
 18918                           
 18919                           ;stkvar	_n @ sp[(-18)+2]
 18920  01520C  0EF0               	movlw	-16
 18921  01520E  50E3               	movf	plusw1,w,c
 18922  015210  E115               	bnz	u10351
 18923  015212  0EF1               	movlw	-15
 18924  015214  50E3               	movf	plusw1,w,c
 18925  015216  E112               	bnz	u10351
 18926  015218  0EF2               	movlw	-14
 18927  01521A  50E3               	movf	plusw1,w,c
 18928  01521C  E10F               	bnz	u10351
 18929  01521E  0EF3               	movlw	-13
 18930  015220  50E3               	movf	plusw1,w,c
 18931  015222  E10C               	bnz	u10351
 18932  015224  0EF4               	movlw	-12
 18933  015226  50E3               	movf	plusw1,w,c
 18934  015228  E109               	bnz	u10351
 18935  01522A  0EF5               	movlw	-11
 18936  01522C  50E3               	movf	plusw1,w,c
 18937  01522E  E106               	bnz	u10351
 18938  015230  0EF6               	movlw	-10
 18939  015232  50E3               	movf	plusw1,w,c
 18940  015234  E103               	bnz	u10351
 18941  015236  0EF7               	movlw	-9
 18942  015238  50E3               	movf	plusw1,w,c
 18943  01523A  A4D8               	btfss	status,2,c
 18944  01523C                     u10351:
 18945  01523C  D6D4               	goto	l11268
 18946                           
 18947                           ;stkvar	_p @ sp[(-18)+16]
 18948  01523E  0EFF               	movlw	-1
 18949  015240  BEE3               	btfsc	plusw1,7,c
 18950  015242  D007               	goto	u10360
 18951  015244  0EFF               	movlw	-1
 18952  015246  50E3               	movf	plusw1,w,c
 18953  015248  E103               	bnz	u10361
 18954  01524A  0EFE               	movlw	-2
 18955  01524C  04E3               	decf	plusw1,w,c
 18956  01524E  B0D8               	btfsc	status,0,c
 18957  015250                     u10361:
 18958  015250  D6CA               	goto	l11268
 18959  015252                     u10360:
 18960                           
 18961                           ;stkvar	_w @ sp[(-18)+14]
 18962  015252  0EFD               	movlw	-3
 18963  015254  BEE3               	btfsc	plusw1,7,c
 18964  015256  D009               	goto	u10380
 18965  015258  0EFD               	movlw	-3
 18966  01525A  50E3               	movf	plusw1,w,c
 18967  01525C  E104               	bnz	u10370
 18968  01525E  0EFC               	movlw	-4
 18969  015260  04E3               	decf	plusw1,w,c
 18970  015262  A0D8               	btfss	status,0,c
 18971  015264  D002               	goto	u10380
 18972  015266                     u10370:
 18973  015266  B225               	btfsc	_flags^0,1,c
 18974  015268  D6BE               	goto	l11268
 18975  01526A                     u10380:
 18976                           
 18977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18978                           ;stkvar	_s @ sp[(-18)+12]
 18979  01526A  0EFA               	movlw	-6
 18980  01526C  006F FF8C  F001    	movff	plusw1,btemp
 18981  015272  0EFB               	movlw	-5
 18982  015274  50E3               	movf	plusw1,w,c
 18983  015276  1001               	iorwf	btemp^0,w,c
 18984  015278  A4D8               	btfss	status,2,c
 18985  01527A  D002               	goto	u10400
 18986  01527C  A425               	btfss	_flags^0,2,c
 18987  01527E  D033               	goto	l11302
 18988  015280                     u10400:
 18989                           
 18990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18991                           ;stkvar	_i @ sp[(-18)+10]
 18992  015280  50E1               	movf	fsr1l,w,c
 18993  015282  0FF8               	addlw	-8
 18994  015284  6ED9               	movwf	fsr2l,c
 18995  015286  50E2               	movf	fsr1h,w,c
 18996  015288  6EDA               	movwf	fsr2h,c
 18997  01528A  0EFF               	movlw	255
 18998  01528C  22DA               	addwfc	fsr2h,f,c
 18999  01528E  06DE               	decf	postinc2,f,c
 19000  015290  0E00               	movlw	0
 19001  015292  5ADD               	subwfb	postdec2,f,c
 19002                           
 19003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19004                           ;stkvar	_s @ sp[(-18)+12]
 19005  015294  0EFA               	movlw	-6
 19006  015296  006F FF8C  F001    	movff	plusw1,btemp
 19007  01529C  0EFB               	movlw	-5
 19008  01529E  50E3               	movf	plusw1,w,c
 19009  0152A0  1001               	iorwf	btemp^0,w,c
 19010  0152A2  A4D8               	btfss	status,2,c
 19011  0152A4  D002               	goto	l11298
 19012  0152A6  0E2B               	movlw	43
 19013  0152A8  D001               	goto	L19
 19014  0152AA                     l11298:
 19015  0152AA  0E2D               	movlw	45
 19016  0152AC                     L19:
 19017  0152AC  6E0B               	movwf	(btemp+10)^0,c
 19018  0152AE  0E00               	movlw	0
 19019  0152B0  6E0C               	movwf	(btemp+11)^0,c
 19020                           
 19021                           ;stkvar	_dtoa$5276 @ sp[(-18)+0]
 19022  0152B2  0EEE               	movlw	-18
 19023  0152B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19024  0152BA  0EEF               	movlw	-17
 19025  0152BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19026                           
 19027                           ;stkvar	_dtoa$5276 @ sp[(-18)+0]
 19028                           ;stkvar	_i @ sp[(-18)+10]
 19029  0152C2  0EF8               	movlw	-8
 19030  0152C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19031  0152CA  0EF9               	movlw	-7
 19032  0152CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19033  0152D2  0E94               	movlw	low _dbuf
 19034  0152D4  240B               	addwf	(btemp+10)^0,w,c
 19035  0152D6  6ED9               	movwf	fsr2l,c
 19036  0152D8  0E03               	movlw	high _dbuf
 19037  0152DA  200C               	addwfc	(btemp+11)^0,w,c
 19038  0152DC  6EDA               	movwf	fsr2h,c
 19039  0152DE  0EEE               	movlw	-18
 19040  0152E0  006F FF8F FFDF     	movff	plusw1,indf2
 19041  0152E6                     l11302:
 19042                           
 19043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19044                           ;stkvar	_w @ sp[(-18)+14]
 19045  0152E6  0EFC               	movlw	-4
 19046  0152E8  006F FF8F FFE6     	movff	plusw1,postinc1
 19047  0152EE  006F FF8F FFE6     	movff	plusw1,postinc1
 19048                           
 19049                           ;stkvar	_i @ sp[(-20)+10]
 19050  0152F4  0E94               	movlw	low _dbuf
 19051  0152F6  6E0B               	movwf	(btemp+10)^0,c
 19052  0152F8  0E03               	movlw	high _dbuf
 19053  0152FA  6E0C               	movwf	(btemp+11)^0,c
 19054  0152FC  0EF6               	movlw	-10
 19055  0152FE  50E3               	movf	plusw1,w,c
 19056  015300  260B               	addwf	(btemp+10)^0,f,c
 19057  015302  0EF7               	movlw	-9
 19058  015304  50E3               	movf	plusw1,w,c
 19059  015306  220C               	addwfc	(btemp+11)^0,f,c
 19060  015308  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19061  01530E  0060  F033  FFE6   	movff	btemp+11,postinc1
 19062                           
 19063                           ;stkvar	_fp @ sp[(-22)+-2]
 19064  015314  0EE8               	movlw	-24
 19065  015316  006F FF8F FFE6     	movff	plusw1,postinc1
 19066  01531C  006F FF8F FFE6     	movff	plusw1,postinc1
 19067  015322  ECA9  F0C5         	call	_pad	;wreg free
 19068                           
 19069                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19070  015326  0EE4               	movlw	228
 19071  015328  26E1               	addwf	fsr1l,f,c
 19072  01532A  0EFF               	movlw	255
 19073  01532C  22E2               	addwfc	fsr1h,f,c
 19074  01532E  0012               	return		;funcret
 19075  015330                     __end_of_dtoa:
 19076                           	opt callstack 0
 19077                           
 19078 ;; *************** function _abs *****************
 19079 ;; Defined at:
 19080 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19081 ;; Parameters:    Size  Location     Type
 19082 ;;  a               2  [STACK] int 
 19083 ;; Auto vars:     Size  Location     Type
 19084 ;;		None
 19085 ;; Return value:  Size  Location     Type
 19086 ;;                  2  [STACK] int 
 19087 ;; Registers used:
 19088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19089 ;; Tracked objects:
 19090 ;;		On entry : 0/3
 19091 ;;		On exit  : 0/0
 19092 ;;		Unchanged: 0/0
 19093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19098 ;;Total ram usage:        0 bytes
 19099 ;; Hardware stack levels used:    1
 19100 ;; Hardware stack levels required when called:   15
 19101 ;; This function calls:
 19102 ;;		Nothing
 19103 ;; This function is called by:
 19104 ;;		_dtoa
 19105 ;; This function uses a reentrant model
 19106 ;;
 19107                           
 19108                           	psect	text67
 19109  01A4A8                     __ptext67:
 19110                           	opt callstack 0
 19111  01A4A8                     _abs:
 19112                           	opt callstack 0
 19113                           
 19114                           ;stkvar	_a @ sp[(0)+-2]
 19115                           
 19116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19117                           ;incstack = 0
 19118 ;; hardware stack exceeded
 19119  01A4A8  0EFF               	movlw	-1
 19120  01A4AA  BEE3               	btfsc	plusw1,7,c
 19121  01A4AC  D007               	goto	u5620
 19122  01A4AE  0EFF               	movlw	-1
 19123  01A4B0  50E3               	movf	plusw1,w,c
 19124  01A4B2  E112               	bnz	l7582
 19125  01A4B4  0EFE               	movlw	-2
 19126  01A4B6  04E3               	decf	plusw1,w,c
 19127  01A4B8  B0D8               	btfsc	status,0,c
 19128  01A4BA  D00E               	goto	l7582
 19129  01A4BC                     u5620:
 19130                           
 19131                           ;stkvar	_a @ sp[(0)+-2]
 19132  01A4BC  0EFE               	movlw	-2
 19133  01A4BE  006F FF8C  F001    	movff	plusw1,btemp
 19134  01A4C4  1E01               	comf	btemp^0,f,c
 19135  01A4C6  0EFF               	movlw	-1
 19136  01A4C8  006F FF8C  F002    	movff	plusw1,btemp+1
 19137  01A4CE  1E02               	comf	(btemp+1)^0,f,c
 19138  01A4D0  2A01               	incf	btemp^0,f,c
 19139  01A4D2  B4D8               	btfsc	status,2,c
 19140  01A4D4  2A02               	incf	(btemp+1)^0,f,c
 19141  01A4D6  D008               	goto	l3024
 19142  01A4D8                     l7582:
 19143                           
 19144                           ;stkvar	_a @ sp[(0)+-2]
 19145  01A4D8  0EFE               	movlw	-2
 19146  01A4DA  006F FF8C  F001    	movff	plusw1,btemp
 19147  01A4E0  0EFF               	movlw	-1
 19148  01A4E2  006F FF8C  F002    	movff	plusw1,btemp+1
 19149  01A4E8                     l3024:
 19150                           
 19151                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19152  01A4E8  52E5               	movf	postdec1,f,c
 19153  01A4EA  52E5               	movf	postdec1,f,c
 19154  01A4EC  0012               	return		;funcret
 19155  01A4EE                     __end_of_abs:
 19156                           	opt callstack 0
 19157                           
 19158 ;; *************** function ___aomod *****************
 19159 ;; Defined at:
 19160 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19161 ;; Parameters:    Size  Location     Type
 19162 ;;  dividend        8  [STACK] long long 
 19163 ;;  divisor         8  [STACK] long long 
 19164 ;; Auto vars:     Size  Location     Type
 19165 ;;  sign            1  [STACK] unsigned char 
 19166 ;;  counter         1  [STACK] unsigned char 
 19167 ;; Return value:  Size  Location     Type
 19168 ;;                  8  [STACK] long long 
 19169 ;; Registers used:
 19170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19171 ;; Tracked objects:
 19172 ;;		On entry : 0/3
 19173 ;;		On exit  : 0/0
 19174 ;;		Unchanged: 0/0
 19175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19180 ;;Total ram usage:        0 bytes
 19181 ;; Hardware stack levels used:    1
 19182 ;; Hardware stack levels required when called:   15
 19183 ;; This function calls:
 19184 ;;		Nothing
 19185 ;; This function is called by:
 19186 ;;		_dtoa
 19187 ;; This function uses a reentrant model
 19188 ;;
 19189                           
 19190                           	psect	text68
 19191  016BD6                     __ptext68:
 19192                           	opt callstack 0
 19193  016BD6                     ___aomod:
 19194                           	opt callstack 0
 19195                           
 19196                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19197  016BD6  52E6               	movf	postinc1,f,c
 19198  016BD8  52E6               	movf	postinc1,f,c
 19199                           
 19200                           ;stkvar	_sign @ sp[(-2)+0]
 19201                           
 19202                           ;incstack = 0
 19203 ;; hardware stack exceeded
 19204  016BDA  0EFE               	movlw	-2
 19205  016BDC  6AE3               	clrf	plusw1,c
 19206                           
 19207                           ;stkvar	_dividend @ sp[(-2)+-8]
 19208  016BDE  0EFD               	movlw	-3
 19209  016BE0  AEE3               	btfss	plusw1,7,c
 19210  016BE2  D028               	goto	l7740
 19211                           
 19212                           ;stkvar	_dividend @ sp[(-2)+-8]
 19213                           ;stkvar	_dividend @ sp[(-2)+-8]
 19214  016BE4  0EF6               	movlw	-10
 19215  016BE6  6CE3               	negf	plusw1,c
 19216  016BE8  0EF7               	movlw	-9
 19217  016BEA  1EE3               	comf	plusw1,f,c
 19218  016BEC  0EF8               	movlw	-8
 19219  016BEE  1EE3               	comf	plusw1,f,c
 19220  016BF0  0EF9               	movlw	-7
 19221  016BF2  1EE3               	comf	plusw1,f,c
 19222  016BF4  0EFA               	movlw	-6
 19223  016BF6  1EE3               	comf	plusw1,f,c
 19224  016BF8  0EFB               	movlw	-5
 19225  016BFA  1EE3               	comf	plusw1,f,c
 19226  016BFC  0EFC               	movlw	-4
 19227  016BFE  1EE3               	comf	plusw1,f,c
 19228  016C00  0EFD               	movlw	-3
 19229  016C02  1EE3               	comf	plusw1,f,c
 19230  016C04  E314               	bnc	u6050
 19231  016C06  0EF7               	movlw	-9
 19232  016C08  2AE3               	incf	plusw1,f,c
 19233  016C0A  E311               	bnc	u6050
 19234  016C0C  0EF8               	movlw	-8
 19235  016C0E  2AE3               	incf	plusw1,f,c
 19236  016C10  E30E               	bnc	u6050
 19237  016C12  0EF9               	movlw	-7
 19238  016C14  2AE3               	incf	plusw1,f,c
 19239  016C16  E30B               	bnc	u6050
 19240  016C18  0EFA               	movlw	-6
 19241  016C1A  2AE3               	incf	plusw1,f,c
 19242  016C1C  E308               	bnc	u6050
 19243  016C1E  0EFB               	movlw	-5
 19244  016C20  2AE3               	incf	plusw1,f,c
 19245  016C22  E305               	bnc	u6050
 19246  016C24  0EFC               	movlw	-4
 19247  016C26  2AE3               	incf	plusw1,f,c
 19248  016C28  E302               	bnc	u6050
 19249  016C2A  0EFD               	movlw	-3
 19250  016C2C  2AE3               	incf	plusw1,f,c
 19251  016C2E                     u6050:
 19252                           
 19253                           ;stkvar	_sign @ sp[(-2)+0]
 19254  016C2E  0EFE               	movlw	-2
 19255  016C30  6AE3               	clrf	plusw1,c
 19256  016C32  2AE3               	incf	plusw1,f,c
 19257  016C34                     l7740:
 19258                           
 19259                           ;stkvar	_divisor @ sp[(-2)+-16]
 19260  016C34  0EF5               	movlw	-11
 19261  016C36  AEE3               	btfss	plusw1,7,c
 19262  016C38  D025               	goto	u6070
 19263                           
 19264                           ;stkvar	_divisor @ sp[(-2)+-16]
 19265                           ;stkvar	_divisor @ sp[(-2)+-16]
 19266  016C3A  0EEE               	movlw	-18
 19267  016C3C  6CE3               	negf	plusw1,c
 19268  016C3E  0EEF               	movlw	-17
 19269  016C40  1EE3               	comf	plusw1,f,c
 19270  016C42  0EF0               	movlw	-16
 19271  016C44  1EE3               	comf	plusw1,f,c
 19272  016C46  0EF1               	movlw	-15
 19273  016C48  1EE3               	comf	plusw1,f,c
 19274  016C4A  0EF2               	movlw	-14
 19275  016C4C  1EE3               	comf	plusw1,f,c
 19276  016C4E  0EF3               	movlw	-13
 19277  016C50  1EE3               	comf	plusw1,f,c
 19278  016C52  0EF4               	movlw	-12
 19279  016C54  1EE3               	comf	plusw1,f,c
 19280  016C56  0EF5               	movlw	-11
 19281  016C58  1EE3               	comf	plusw1,f,c
 19282  016C5A  E314               	bnc	u6070
 19283  016C5C  0EEF               	movlw	-17
 19284  016C5E  2AE3               	incf	plusw1,f,c
 19285  016C60  E311               	bnc	u6070
 19286  016C62  0EF0               	movlw	-16
 19287  016C64  2AE3               	incf	plusw1,f,c
 19288  016C66  E30E               	bnc	u6070
 19289  016C68  0EF1               	movlw	-15
 19290  016C6A  2AE3               	incf	plusw1,f,c
 19291  016C6C  E30B               	bnc	u6070
 19292  016C6E  0EF2               	movlw	-14
 19293  016C70  2AE3               	incf	plusw1,f,c
 19294  016C72  E308               	bnc	u6070
 19295  016C74  0EF3               	movlw	-13
 19296  016C76  2AE3               	incf	plusw1,f,c
 19297  016C78  E305               	bnc	u6070
 19298  016C7A  0EF4               	movlw	-12
 19299  016C7C  2AE3               	incf	plusw1,f,c
 19300  016C7E  E302               	bnc	u6070
 19301  016C80  0EF5               	movlw	-11
 19302  016C82  2AE3               	incf	plusw1,f,c
 19303  016C84                     u6070:
 19304                           
 19305                           ;stkvar	_divisor @ sp[(-2)+-16]
 19306  016C84  0EEE               	movlw	-18
 19307  016C86  50E3               	movf	plusw1,w,c
 19308  016C88  E116               	bnz	u6080
 19309  016C8A  0EEF               	movlw	-17
 19310  016C8C  50E3               	movf	plusw1,w,c
 19311  016C8E  E113               	bnz	u6080
 19312  016C90  0EF0               	movlw	-16
 19313  016C92  50E3               	movf	plusw1,w,c
 19314  016C94  E110               	bnz	u6080
 19315  016C96  0EF1               	movlw	-15
 19316  016C98  50E3               	movf	plusw1,w,c
 19317  016C9A  E10D               	bnz	u6080
 19318  016C9C  0EF2               	movlw	-14
 19319  016C9E  50E3               	movf	plusw1,w,c
 19320  016CA0  E10A               	bnz	u6080
 19321  016CA2  0EF3               	movlw	-13
 19322  016CA4  50E3               	movf	plusw1,w,c
 19323  016CA6  E107               	bnz	u6080
 19324  016CA8  0EF4               	movlw	-12
 19325  016CAA  50E3               	movf	plusw1,w,c
 19326  016CAC  E104               	bnz	u6080
 19327  016CAE  0EF5               	movlw	-11
 19328  016CB0  50E3               	movf	plusw1,w,c
 19329  016CB2  B4D8               	btfsc	status,2,c
 19330  016CB4  D075               	goto	u6110
 19331  016CB6                     u6080:
 19332                           
 19333                           ;stkvar	_counter @ sp[(-2)+1]
 19334  016CB6  0EFF               	movlw	-1
 19335  016CB8  6AE3               	clrf	plusw1,c
 19336  016CBA  D012               	goto	L20
 19337  016CBC                     l7748:
 19338                           
 19339                           ;stkvar	_divisor @ sp[(-2)+-16]
 19340  016CBC  90D8               	bcf	status,0,c
 19341  016CBE  0EEE               	movlw	-18
 19342  016CC0  36E3               	rlcf	plusw1,f,c
 19343  016CC2  0EEF               	movlw	-17
 19344  016CC4  36E3               	rlcf	plusw1,f,c
 19345  016CC6  0EF0               	movlw	-16
 19346  016CC8  36E3               	rlcf	plusw1,f,c
 19347  016CCA  0EF1               	movlw	-15
 19348  016CCC  36E3               	rlcf	plusw1,f,c
 19349  016CCE  0EF2               	movlw	-14
 19350  016CD0  36E3               	rlcf	plusw1,f,c
 19351  016CD2  0EF3               	movlw	-13
 19352  016CD4  36E3               	rlcf	plusw1,f,c
 19353  016CD6  0EF4               	movlw	-12
 19354  016CD8  36E3               	rlcf	plusw1,f,c
 19355  016CDA  0EF5               	movlw	-11
 19356  016CDC  36E3               	rlcf	plusw1,f,c
 19357                           
 19358                           ;stkvar	_counter @ sp[(-2)+1]
 19359  016CDE  0EFF               	movlw	-1
 19360  016CE0                     L20:
 19361  016CE0  2AE3               	incf	plusw1,f,c
 19362                           
 19363                           ;stkvar	_divisor @ sp[(-2)+-16]
 19364  016CE2  0EF5               	movlw	-11
 19365  016CE4  AEE3               	btfss	plusw1,7,c
 19366  016CE6  D7EA               	goto	l7748
 19367  016CE8                     u6090:
 19368                           
 19369                           ;stkvar	_divisor @ sp[(-2)+-16]
 19370                           ;stkvar	_dividend @ sp[(-2)+-8]
 19371  016CE8  50E1               	movf	fsr1l,w,c
 19372  016CEA  0FF6               	addlw	-10
 19373  016CEC  6ED9               	movwf	fsr2l,c
 19374  016CEE  50E2               	movf	fsr1h,w,c
 19375  016CF0  6EDA               	movwf	fsr2h,c
 19376  016CF2  0EFF               	movlw	255
 19377  016CF4  22DA               	addwfc	fsr2h,f,c
 19378  016CF6  0EEE               	movlw	-18
 19379  016CF8  50E3               	movf	plusw1,w,c
 19380  016CFA  5CDE               	subwf	postinc2,w,c
 19381  016CFC  0EEF               	movlw	-17
 19382  016CFE  50E3               	movf	plusw1,w,c
 19383  016D00  58DE               	subwfb	postinc2,w,c
 19384  016D02  0EF0               	movlw	-16
 19385  016D04  50E3               	movf	plusw1,w,c
 19386  016D06  58DE               	subwfb	postinc2,w,c
 19387  016D08  0EF1               	movlw	-15
 19388  016D0A  50E3               	movf	plusw1,w,c
 19389  016D0C  58DE               	subwfb	postinc2,w,c
 19390  016D0E  0EF2               	movlw	-14
 19391  016D10  50E3               	movf	plusw1,w,c
 19392  016D12  58DE               	subwfb	postinc2,w,c
 19393  016D14  0EF3               	movlw	-13
 19394  016D16  50E3               	movf	plusw1,w,c
 19395  016D18  58DE               	subwfb	postinc2,w,c
 19396  016D1A  0EF4               	movlw	-12
 19397  016D1C  50E3               	movf	plusw1,w,c
 19398  016D1E  58DE               	subwfb	postinc2,w,c
 19399  016D20  0EF5               	movlw	-11
 19400  016D22  50E3               	movf	plusw1,w,c
 19401  016D24  58DE               	subwfb	postinc2,w,c
 19402  016D26  A0D8               	btfss	status,0,c
 19403  016D28  D01F               	goto	l7756
 19404                           
 19405                           ;stkvar	_divisor @ sp[(-2)+-16]
 19406                           ;stkvar	_dividend @ sp[(-2)+-8]
 19407  016D2A  50E1               	movf	fsr1l,w,c
 19408  016D2C  0FF6               	addlw	-10
 19409  016D2E  6ED9               	movwf	fsr2l,c
 19410  016D30  50E2               	movf	fsr1h,w,c
 19411  016D32  6EDA               	movwf	fsr2h,c
 19412  016D34  0EFF               	movlw	255
 19413  016D36  22DA               	addwfc	fsr2h,f,c
 19414  016D38  0EEE               	movlw	-18
 19415  016D3A  50E3               	movf	plusw1,w,c
 19416  016D3C  5EDE               	subwf	postinc2,f,c
 19417  016D3E  0EEF               	movlw	-17
 19418  016D40  50E3               	movf	plusw1,w,c
 19419  016D42  5ADE               	subwfb	postinc2,f,c
 19420  016D44  0EF0               	movlw	-16
 19421  016D46  50E3               	movf	plusw1,w,c
 19422  016D48  5ADE               	subwfb	postinc2,f,c
 19423  016D4A  0EF1               	movlw	-15
 19424  016D4C  50E3               	movf	plusw1,w,c
 19425  016D4E  5ADE               	subwfb	postinc2,f,c
 19426  016D50  0EF2               	movlw	-14
 19427  016D52  50E3               	movf	plusw1,w,c
 19428  016D54  5ADE               	subwfb	postinc2,f,c
 19429  016D56  0EF3               	movlw	-13
 19430  016D58  50E3               	movf	plusw1,w,c
 19431  016D5A  5ADE               	subwfb	postinc2,f,c
 19432  016D5C  0EF4               	movlw	-12
 19433  016D5E  50E3               	movf	plusw1,w,c
 19434  016D60  5ADE               	subwfb	postinc2,f,c
 19435  016D62  0EF5               	movlw	-11
 19436  016D64  50E3               	movf	plusw1,w,c
 19437  016D66  5ADE               	subwfb	postinc2,f,c
 19438  016D68                     l7756:
 19439                           
 19440                           ;stkvar	_divisor @ sp[(-2)+-16]
 19441  016D68  90D8               	bcf	status,0,c
 19442  016D6A  0EF5               	movlw	-11
 19443  016D6C  32E3               	rrcf	plusw1,f,c
 19444  016D6E  0EF4               	movlw	-12
 19445  016D70  32E3               	rrcf	plusw1,f,c
 19446  016D72  0EF3               	movlw	-13
 19447  016D74  32E3               	rrcf	plusw1,f,c
 19448  016D76  0EF2               	movlw	-14
 19449  016D78  32E3               	rrcf	plusw1,f,c
 19450  016D7A  0EF1               	movlw	-15
 19451  016D7C  32E3               	rrcf	plusw1,f,c
 19452  016D7E  0EF0               	movlw	-16
 19453  016D80  32E3               	rrcf	plusw1,f,c
 19454  016D82  0EEF               	movlw	-17
 19455  016D84  32E3               	rrcf	plusw1,f,c
 19456  016D86  0EEE               	movlw	-18
 19457  016D88  32E3               	rrcf	plusw1,f,c
 19458                           
 19459                           ;stkvar	_counter @ sp[(-2)+1]
 19460  016D8A  0EFF               	movlw	-1
 19461  016D8C  50E3               	movf	plusw1,w,c
 19462  016D8E  6E01               	movwf	btemp^0,c
 19463  016D90  0E01               	movlw	1
 19464  016D92  5E01               	subwf	btemp^0,f,c
 19465  016D94  0EFF               	movlw	-1
 19466  016D96  0060  F007  FFE3   	movff	btemp,plusw1
 19467  016D9C  A4D8               	btfss	status,2,c
 19468  016D9E  D7A4               	goto	u6090
 19469  016DA0                     u6110:
 19470                           
 19471                           ;stkvar	_sign @ sp[(-2)+0]
 19472  016DA0  0EFE               	movlw	-2
 19473  016DA2  50E3               	movf	plusw1,w,c
 19474  016DA4  B4D8               	btfsc	status,2,c
 19475  016DA6  D025               	goto	u6130
 19476                           
 19477                           ;stkvar	_dividend @ sp[(-2)+-8]
 19478                           ;stkvar	_dividend @ sp[(-2)+-8]
 19479  016DA8  0EF6               	movlw	-10
 19480  016DAA  6CE3               	negf	plusw1,c
 19481  016DAC  0EF7               	movlw	-9
 19482  016DAE  1EE3               	comf	plusw1,f,c
 19483  016DB0  0EF8               	movlw	-8
 19484  016DB2  1EE3               	comf	plusw1,f,c
 19485  016DB4  0EF9               	movlw	-7
 19486  016DB6  1EE3               	comf	plusw1,f,c
 19487  016DB8  0EFA               	movlw	-6
 19488  016DBA  1EE3               	comf	plusw1,f,c
 19489  016DBC  0EFB               	movlw	-5
 19490  016DBE  1EE3               	comf	plusw1,f,c
 19491  016DC0  0EFC               	movlw	-4
 19492  016DC2  1EE3               	comf	plusw1,f,c
 19493  016DC4  0EFD               	movlw	-3
 19494  016DC6  1EE3               	comf	plusw1,f,c
 19495  016DC8  E314               	bnc	u6130
 19496  016DCA  0EF7               	movlw	-9
 19497  016DCC  2AE3               	incf	plusw1,f,c
 19498  016DCE  E311               	bnc	u6130
 19499  016DD0  0EF8               	movlw	-8
 19500  016DD2  2AE3               	incf	plusw1,f,c
 19501  016DD4  E30E               	bnc	u6130
 19502  016DD6  0EF9               	movlw	-7
 19503  016DD8  2AE3               	incf	plusw1,f,c
 19504  016DDA  E30B               	bnc	u6130
 19505  016DDC  0EFA               	movlw	-6
 19506  016DDE  2AE3               	incf	plusw1,f,c
 19507  016DE0  E308               	bnc	u6130
 19508  016DE2  0EFB               	movlw	-5
 19509  016DE4  2AE3               	incf	plusw1,f,c
 19510  016DE6  E305               	bnc	u6130
 19511  016DE8  0EFC               	movlw	-4
 19512  016DEA  2AE3               	incf	plusw1,f,c
 19513  016DEC  E302               	bnc	u6130
 19514  016DEE  0EFD               	movlw	-3
 19515  016DF0  2AE3               	incf	plusw1,f,c
 19516  016DF2                     u6130:
 19517                           
 19518                           ;stkvar	_dividend @ sp[(-2)+-8]
 19519  016DF2  0EF6               	movlw	246
 19520  016DF4  24E1               	addwf	fsr1l,w,c
 19521  016DF6  6ED9               	movwf	fsr2l,c
 19522  016DF8  0EFF               	movlw	255
 19523  016DFA  20E2               	addwfc	fsr1h,w,c
 19524  016DFC  6EDA               	movwf	fsr2h,c
 19525                           
 19526                           ;stkvar	?___aomod @ sp[(-2)+-8]
 19527  016DFE  0E08               	movlw	8
 19528  016E00  6E01               	movwf	btemp^0,c
 19529  016E02  0EF6               	movlw	-10
 19530  016E04                     us614999:
 19531  016E04  006F FF7B FFE3     	movff	postinc2,plusw1
 19532  016E0A  28E8               	incf	wreg,w,c
 19533  016E0C  2E01               	decfsz	btemp^0,f,c
 19534  016E0E  D7FA               	bra	us614999
 19535                           
 19536                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19537  016E10  52E5               	movf	postdec1,f,c
 19538  016E12  52E5               	movf	postdec1,f,c
 19539  016E14  0012               	return		;funcret
 19540  016E16                     __end_of___aomod:
 19541                           	opt callstack 0
 19542                           
 19543 ;; *************** function ___aodiv *****************
 19544 ;; Defined at:
 19545 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 19546 ;; Parameters:    Size  Location     Type
 19547 ;;  dividend        8  [STACK] long long 
 19548 ;;  divisor         8  [STACK] long long 
 19549 ;; Auto vars:     Size  Location     Type
 19550 ;;  quotient        8  [STACK] long long 
 19551 ;;  sign            1  [STACK] unsigned char 
 19552 ;;  counter         1  [STACK] unsigned char 
 19553 ;; Return value:  Size  Location     Type
 19554 ;;                  8  [STACK] long long 
 19555 ;; Registers used:
 19556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19557 ;; Tracked objects:
 19558 ;;		On entry : 0/3
 19559 ;;		On exit  : 0/0
 19560 ;;		Unchanged: 0/0
 19561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19566 ;;Total ram usage:        0 bytes
 19567 ;; Hardware stack levels used:    1
 19568 ;; Hardware stack levels required when called:   15
 19569 ;; This function calls:
 19570 ;;		Nothing
 19571 ;; This function is called by:
 19572 ;;		_dtoa
 19573 ;; This function uses a reentrant model
 19574 ;;
 19575                           
 19576                           	psect	text69
 19577  0166E2                     __ptext69:
 19578                           	opt callstack 0
 19579  0166E2                     ___aodiv:
 19580                           	opt callstack 0
 19581                           
 19582                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 19583  0166E2  0E0A               	movlw	10
 19584  0166E4  26E1               	addwf	fsr1l,f,c
 19585  0166E6  0E00               	movlw	0
 19586  0166E8  22E2               	addwfc	fsr1h,f,c
 19587                           
 19588                           ;stkvar	_sign @ sp[(-10)+8]
 19589                           
 19590                           ;incstack = 0
 19591 ;; hardware stack exceeded
 19592  0166EA  0EFE               	movlw	-2
 19593  0166EC  6AE3               	clrf	plusw1,c
 19594                           
 19595                           ;stkvar	_divisor @ sp[(-10)+-16]
 19596  0166EE  0EED               	movlw	-19
 19597  0166F0  AEE3               	btfss	plusw1,7,c
 19598  0166F2  D028               	goto	l7696
 19599                           
 19600                           ;stkvar	_divisor @ sp[(-10)+-16]
 19601                           ;stkvar	_divisor @ sp[(-10)+-16]
 19602  0166F4  0EE6               	movlw	-26
 19603  0166F6  6CE3               	negf	plusw1,c
 19604  0166F8  0EE7               	movlw	-25
 19605  0166FA  1EE3               	comf	plusw1,f,c
 19606  0166FC  0EE8               	movlw	-24
 19607  0166FE  1EE3               	comf	plusw1,f,c
 19608  016700  0EE9               	movlw	-23
 19609  016702  1EE3               	comf	plusw1,f,c
 19610  016704  0EEA               	movlw	-22
 19611  016706  1EE3               	comf	plusw1,f,c
 19612  016708  0EEB               	movlw	-21
 19613  01670A  1EE3               	comf	plusw1,f,c
 19614  01670C  0EEC               	movlw	-20
 19615  01670E  1EE3               	comf	plusw1,f,c
 19616  016710  0EED               	movlw	-19
 19617  016712  1EE3               	comf	plusw1,f,c
 19618  016714  E314               	bnc	u5930
 19619  016716  0EE7               	movlw	-25
 19620  016718  2AE3               	incf	plusw1,f,c
 19621  01671A  E311               	bnc	u5930
 19622  01671C  0EE8               	movlw	-24
 19623  01671E  2AE3               	incf	plusw1,f,c
 19624  016720  E30E               	bnc	u5930
 19625  016722  0EE9               	movlw	-23
 19626  016724  2AE3               	incf	plusw1,f,c
 19627  016726  E30B               	bnc	u5930
 19628  016728  0EEA               	movlw	-22
 19629  01672A  2AE3               	incf	plusw1,f,c
 19630  01672C  E308               	bnc	u5930
 19631  01672E  0EEB               	movlw	-21
 19632  016730  2AE3               	incf	plusw1,f,c
 19633  016732  E305               	bnc	u5930
 19634  016734  0EEC               	movlw	-20
 19635  016736  2AE3               	incf	plusw1,f,c
 19636  016738  E302               	bnc	u5930
 19637  01673A  0EED               	movlw	-19
 19638  01673C  2AE3               	incf	plusw1,f,c
 19639  01673E                     u5930:
 19640                           
 19641                           ;stkvar	_sign @ sp[(-10)+8]
 19642  01673E  0EFE               	movlw	-2
 19643  016740  6AE3               	clrf	plusw1,c
 19644  016742  2AE3               	incf	plusw1,f,c
 19645  016744                     l7696:
 19646                           
 19647                           ;stkvar	_dividend @ sp[(-10)+-8]
 19648  016744  0EF5               	movlw	-11
 19649  016746  AEE3               	btfss	plusw1,7,c
 19650  016748  D027               	goto	l7702
 19651                           
 19652                           ;stkvar	_dividend @ sp[(-10)+-8]
 19653                           ;stkvar	_dividend @ sp[(-10)+-8]
 19654  01674A  0EEE               	movlw	-18
 19655  01674C  6CE3               	negf	plusw1,c
 19656  01674E  0EEF               	movlw	-17
 19657  016750  1EE3               	comf	plusw1,f,c
 19658  016752  0EF0               	movlw	-16
 19659  016754  1EE3               	comf	plusw1,f,c
 19660  016756  0EF1               	movlw	-15
 19661  016758  1EE3               	comf	plusw1,f,c
 19662  01675A  0EF2               	movlw	-14
 19663  01675C  1EE3               	comf	plusw1,f,c
 19664  01675E  0EF3               	movlw	-13
 19665  016760  1EE3               	comf	plusw1,f,c
 19666  016762  0EF4               	movlw	-12
 19667  016764  1EE3               	comf	plusw1,f,c
 19668  016766  0EF5               	movlw	-11
 19669  016768  1EE3               	comf	plusw1,f,c
 19670  01676A  E314               	bnc	u5950
 19671  01676C  0EEF               	movlw	-17
 19672  01676E  2AE3               	incf	plusw1,f,c
 19673  016770  E311               	bnc	u5950
 19674  016772  0EF0               	movlw	-16
 19675  016774  2AE3               	incf	plusw1,f,c
 19676  016776  E30E               	bnc	u5950
 19677  016778  0EF1               	movlw	-15
 19678  01677A  2AE3               	incf	plusw1,f,c
 19679  01677C  E30B               	bnc	u5950
 19680  01677E  0EF2               	movlw	-14
 19681  016780  2AE3               	incf	plusw1,f,c
 19682  016782  E308               	bnc	u5950
 19683  016784  0EF3               	movlw	-13
 19684  016786  2AE3               	incf	plusw1,f,c
 19685  016788  E305               	bnc	u5950
 19686  01678A  0EF4               	movlw	-12
 19687  01678C  2AE3               	incf	plusw1,f,c
 19688  01678E  E302               	bnc	u5950
 19689  016790  0EF5               	movlw	-11
 19690  016792  2AE3               	incf	plusw1,f,c
 19691  016794                     u5950:
 19692                           
 19693                           ;stkvar	_sign @ sp[(-10)+8]
 19694  016794  0EFE               	movlw	-2
 19695  016796  70E3               	btg	plusw1,0,c
 19696  016798                     l7702:
 19697                           
 19698                           ;stkvar	_quotient @ sp[(-10)+0]
 19699  016798  0E07               	movlw	7
 19700  01679A  6E01               	movwf	btemp^0,c
 19701  01679C  0EF6               	movlw	-10
 19702  01679E                     u5961:
 19703  01679E  6AE3               	clrf	plusw1,c
 19704  0167A0  2AE8               	incf	wreg,f,c
 19705  0167A2  0601               	decf	btemp^0,f,c
 19706  0167A4  E2FC               	bc	u5961
 19707                           
 19708                           ;stkvar	_divisor @ sp[(-10)+-16]
 19709  0167A6  0EE6               	movlw	-26
 19710  0167A8  50E3               	movf	plusw1,w,c
 19711  0167AA  E116               	bnz	u5970
 19712  0167AC  0EE7               	movlw	-25
 19713  0167AE  50E3               	movf	plusw1,w,c
 19714  0167B0  E113               	bnz	u5970
 19715  0167B2  0EE8               	movlw	-24
 19716  0167B4  50E3               	movf	plusw1,w,c
 19717  0167B6  E110               	bnz	u5970
 19718  0167B8  0EE9               	movlw	-23
 19719  0167BA  50E3               	movf	plusw1,w,c
 19720  0167BC  E10D               	bnz	u5970
 19721  0167BE  0EEA               	movlw	-22
 19722  0167C0  50E3               	movf	plusw1,w,c
 19723  0167C2  E10A               	bnz	u5970
 19724  0167C4  0EEB               	movlw	-21
 19725  0167C6  50E3               	movf	plusw1,w,c
 19726  0167C8  E107               	bnz	u5970
 19727  0167CA  0EEC               	movlw	-20
 19728  0167CC  50E3               	movf	plusw1,w,c
 19729  0167CE  E104               	bnz	u5970
 19730  0167D0  0EED               	movlw	-19
 19731  0167D2  50E3               	movf	plusw1,w,c
 19732  0167D4  B4D8               	btfsc	status,2,c
 19733  0167D6  D088               	goto	u6000
 19734  0167D8                     u5970:
 19735                           
 19736                           ;stkvar	_counter @ sp[(-10)+9]
 19737  0167D8  0EFF               	movlw	-1
 19738  0167DA  6AE3               	clrf	plusw1,c
 19739  0167DC  D012               	goto	L21
 19740  0167DE                     l7708:
 19741                           
 19742                           ;stkvar	_divisor @ sp[(-10)+-16]
 19743  0167DE  90D8               	bcf	status,0,c
 19744  0167E0  0EE6               	movlw	-26
 19745  0167E2  36E3               	rlcf	plusw1,f,c
 19746  0167E4  0EE7               	movlw	-25
 19747  0167E6  36E3               	rlcf	plusw1,f,c
 19748  0167E8  0EE8               	movlw	-24
 19749  0167EA  36E3               	rlcf	plusw1,f,c
 19750  0167EC  0EE9               	movlw	-23
 19751  0167EE  36E3               	rlcf	plusw1,f,c
 19752  0167F0  0EEA               	movlw	-22
 19753  0167F2  36E3               	rlcf	plusw1,f,c
 19754  0167F4  0EEB               	movlw	-21
 19755  0167F6  36E3               	rlcf	plusw1,f,c
 19756  0167F8  0EEC               	movlw	-20
 19757  0167FA  36E3               	rlcf	plusw1,f,c
 19758  0167FC  0EED               	movlw	-19
 19759  0167FE  36E3               	rlcf	plusw1,f,c
 19760                           
 19761                           ;stkvar	_counter @ sp[(-10)+9]
 19762  016800  0EFF               	movlw	-1
 19763  016802                     L21:
 19764  016802  2AE3               	incf	plusw1,f,c
 19765                           
 19766                           ;stkvar	_divisor @ sp[(-10)+-16]
 19767  016804  0EED               	movlw	-19
 19768  016806  AEE3               	btfss	plusw1,7,c
 19769  016808  D7EA               	goto	l7708
 19770  01680A                     u5980:
 19771                           
 19772                           ;stkvar	_quotient @ sp[(-10)+0]
 19773  01680A  90D8               	bcf	status,0,c
 19774  01680C  0EF6               	movlw	-10
 19775  01680E  36E3               	rlcf	plusw1,f,c
 19776  016810  0EF7               	movlw	-9
 19777  016812  36E3               	rlcf	plusw1,f,c
 19778  016814  0EF8               	movlw	-8
 19779  016816  36E3               	rlcf	plusw1,f,c
 19780  016818  0EF9               	movlw	-7
 19781  01681A  36E3               	rlcf	plusw1,f,c
 19782  01681C  0EFA               	movlw	-6
 19783  01681E  36E3               	rlcf	plusw1,f,c
 19784  016820  0EFB               	movlw	-5
 19785  016822  36E3               	rlcf	plusw1,f,c
 19786  016824  0EFC               	movlw	-4
 19787  016826  36E3               	rlcf	plusw1,f,c
 19788  016828  0EFD               	movlw	-3
 19789  01682A  36E3               	rlcf	plusw1,f,c
 19790                           
 19791                           ;stkvar	_divisor @ sp[(-10)+-16]
 19792                           ;stkvar	_dividend @ sp[(-10)+-8]
 19793  01682C  50E1               	movf	fsr1l,w,c
 19794  01682E  0FEE               	addlw	-18
 19795  016830  6ED9               	movwf	fsr2l,c
 19796  016832  50E2               	movf	fsr1h,w,c
 19797  016834  6EDA               	movwf	fsr2h,c
 19798  016836  0EFF               	movlw	255
 19799  016838  22DA               	addwfc	fsr2h,f,c
 19800  01683A  0EE6               	movlw	-26
 19801  01683C  50E3               	movf	plusw1,w,c
 19802  01683E  5CDE               	subwf	postinc2,w,c
 19803  016840  0EE7               	movlw	-25
 19804  016842  50E3               	movf	plusw1,w,c
 19805  016844  58DE               	subwfb	postinc2,w,c
 19806  016846  0EE8               	movlw	-24
 19807  016848  50E3               	movf	plusw1,w,c
 19808  01684A  58DE               	subwfb	postinc2,w,c
 19809  01684C  0EE9               	movlw	-23
 19810  01684E  50E3               	movf	plusw1,w,c
 19811  016850  58DE               	subwfb	postinc2,w,c
 19812  016852  0EEA               	movlw	-22
 19813  016854  50E3               	movf	plusw1,w,c
 19814  016856  58DE               	subwfb	postinc2,w,c
 19815  016858  0EEB               	movlw	-21
 19816  01685A  50E3               	movf	plusw1,w,c
 19817  01685C  58DE               	subwfb	postinc2,w,c
 19818  01685E  0EEC               	movlw	-20
 19819  016860  50E3               	movf	plusw1,w,c
 19820  016862  58DE               	subwfb	postinc2,w,c
 19821  016864  0EED               	movlw	-19
 19822  016866  50E3               	movf	plusw1,w,c
 19823  016868  58DE               	subwfb	postinc2,w,c
 19824  01686A  A0D8               	btfss	status,0,c
 19825  01686C  D021               	goto	l7720
 19826                           
 19827                           ;stkvar	_divisor @ sp[(-10)+-16]
 19828                           ;stkvar	_dividend @ sp[(-10)+-8]
 19829  01686E  50E1               	movf	fsr1l,w,c
 19830  016870  0FEE               	addlw	-18
 19831  016872  6ED9               	movwf	fsr2l,c
 19832  016874  50E2               	movf	fsr1h,w,c
 19833  016876  6EDA               	movwf	fsr2h,c
 19834  016878  0EFF               	movlw	255
 19835  01687A  22DA               	addwfc	fsr2h,f,c
 19836  01687C  0EE6               	movlw	-26
 19837  01687E  50E3               	movf	plusw1,w,c
 19838  016880  5EDE               	subwf	postinc2,f,c
 19839  016882  0EE7               	movlw	-25
 19840  016884  50E3               	movf	plusw1,w,c
 19841  016886  5ADE               	subwfb	postinc2,f,c
 19842  016888  0EE8               	movlw	-24
 19843  01688A  50E3               	movf	plusw1,w,c
 19844  01688C  5ADE               	subwfb	postinc2,f,c
 19845  01688E  0EE9               	movlw	-23
 19846  016890  50E3               	movf	plusw1,w,c
 19847  016892  5ADE               	subwfb	postinc2,f,c
 19848  016894  0EEA               	movlw	-22
 19849  016896  50E3               	movf	plusw1,w,c
 19850  016898  5ADE               	subwfb	postinc2,f,c
 19851  01689A  0EEB               	movlw	-21
 19852  01689C  50E3               	movf	plusw1,w,c
 19853  01689E  5ADE               	subwfb	postinc2,f,c
 19854  0168A0  0EEC               	movlw	-20
 19855  0168A2  50E3               	movf	plusw1,w,c
 19856  0168A4  5ADE               	subwfb	postinc2,f,c
 19857  0168A6  0EED               	movlw	-19
 19858  0168A8  50E3               	movf	plusw1,w,c
 19859  0168AA  5ADE               	subwfb	postinc2,f,c
 19860                           
 19861                           ;stkvar	_quotient @ sp[(-10)+0]
 19862  0168AC  0EF6               	movlw	-10
 19863  0168AE  80E3               	bsf	plusw1,0,c
 19864  0168B0                     l7720:
 19865                           
 19866                           ;stkvar	_divisor @ sp[(-10)+-16]
 19867  0168B0  90D8               	bcf	status,0,c
 19868  0168B2  0EED               	movlw	-19
 19869  0168B4  32E3               	rrcf	plusw1,f,c
 19870  0168B6  0EEC               	movlw	-20
 19871  0168B8  32E3               	rrcf	plusw1,f,c
 19872  0168BA  0EEB               	movlw	-21
 19873  0168BC  32E3               	rrcf	plusw1,f,c
 19874  0168BE  0EEA               	movlw	-22
 19875  0168C0  32E3               	rrcf	plusw1,f,c
 19876  0168C2  0EE9               	movlw	-23
 19877  0168C4  32E3               	rrcf	plusw1,f,c
 19878  0168C6  0EE8               	movlw	-24
 19879  0168C8  32E3               	rrcf	plusw1,f,c
 19880  0168CA  0EE7               	movlw	-25
 19881  0168CC  32E3               	rrcf	plusw1,f,c
 19882  0168CE  0EE6               	movlw	-26
 19883  0168D0  32E3               	rrcf	plusw1,f,c
 19884                           
 19885                           ;stkvar	_counter @ sp[(-10)+9]
 19886  0168D2  0EFF               	movlw	-1
 19887  0168D4  50E3               	movf	plusw1,w,c
 19888  0168D6  6E01               	movwf	btemp^0,c
 19889  0168D8  0E01               	movlw	1
 19890  0168DA  5E01               	subwf	btemp^0,f,c
 19891  0168DC  0EFF               	movlw	-1
 19892  0168DE  0060  F007  FFE3   	movff	btemp,plusw1
 19893  0168E4  A4D8               	btfss	status,2,c
 19894  0168E6  D791               	goto	u5980
 19895  0168E8                     u6000:
 19896                           
 19897                           ;stkvar	_sign @ sp[(-10)+8]
 19898  0168E8  0EFE               	movlw	-2
 19899  0168EA  50E3               	movf	plusw1,w,c
 19900  0168EC  B4D8               	btfsc	status,2,c
 19901  0168EE  D025               	goto	u6020
 19902                           
 19903                           ;stkvar	_quotient @ sp[(-10)+0]
 19904                           ;stkvar	_quotient @ sp[(-10)+0]
 19905  0168F0  0EF6               	movlw	-10
 19906  0168F2  6CE3               	negf	plusw1,c
 19907  0168F4  0EF7               	movlw	-9
 19908  0168F6  1EE3               	comf	plusw1,f,c
 19909  0168F8  0EF8               	movlw	-8
 19910  0168FA  1EE3               	comf	plusw1,f,c
 19911  0168FC  0EF9               	movlw	-7
 19912  0168FE  1EE3               	comf	plusw1,f,c
 19913  016900  0EFA               	movlw	-6
 19914  016902  1EE3               	comf	plusw1,f,c
 19915  016904  0EFB               	movlw	-5
 19916  016906  1EE3               	comf	plusw1,f,c
 19917  016908  0EFC               	movlw	-4
 19918  01690A  1EE3               	comf	plusw1,f,c
 19919  01690C  0EFD               	movlw	-3
 19920  01690E  1EE3               	comf	plusw1,f,c
 19921  016910  E314               	bnc	u6020
 19922  016912  0EF7               	movlw	-9
 19923  016914  2AE3               	incf	plusw1,f,c
 19924  016916  E311               	bnc	u6020
 19925  016918  0EF8               	movlw	-8
 19926  01691A  2AE3               	incf	plusw1,f,c
 19927  01691C  E30E               	bnc	u6020
 19928  01691E  0EF9               	movlw	-7
 19929  016920  2AE3               	incf	plusw1,f,c
 19930  016922  E30B               	bnc	u6020
 19931  016924  0EFA               	movlw	-6
 19932  016926  2AE3               	incf	plusw1,f,c
 19933  016928  E308               	bnc	u6020
 19934  01692A  0EFB               	movlw	-5
 19935  01692C  2AE3               	incf	plusw1,f,c
 19936  01692E  E305               	bnc	u6020
 19937  016930  0EFC               	movlw	-4
 19938  016932  2AE3               	incf	plusw1,f,c
 19939  016934  E302               	bnc	u6020
 19940  016936  0EFD               	movlw	-3
 19941  016938  2AE3               	incf	plusw1,f,c
 19942  01693A                     u6020:
 19943                           
 19944                           ;stkvar	_quotient @ sp[(-10)+0]
 19945  01693A  0EF6               	movlw	246
 19946  01693C  24E1               	addwf	fsr1l,w,c
 19947  01693E  6ED9               	movwf	fsr2l,c
 19948  016940  0EFF               	movlw	255
 19949  016942  20E2               	addwfc	fsr1h,w,c
 19950  016944  6EDA               	movwf	fsr2h,c
 19951                           
 19952                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 19953  016946  0E08               	movlw	8
 19954  016948  6E01               	movwf	btemp^0,c
 19955  01694A  0EEE               	movlw	-18
 19956  01694C                     us603999:
 19957  01694C  006F FF7B FFE3     	movff	postinc2,plusw1
 19958  016952  28E8               	incf	wreg,w,c
 19959  016954  2E01               	decfsz	btemp^0,f,c
 19960  016956  D7FA               	bra	us603999
 19961                           
 19962                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19963  016958  0EF6               	movlw	246
 19964  01695A  26E1               	addwf	fsr1l,f,c
 19965  01695C  0EFF               	movlw	255
 19966  01695E  22E2               	addwfc	fsr1h,f,c
 19967  016960  0012               	return		;funcret
 19968  016962                     __end_of___aodiv:
 19969                           	opt callstack 0
 19970                           
 19971 ;; *************** function _ctoa *****************
 19972 ;; Defined at:
 19973 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19974 ;; Parameters:    Size  Location     Type
 19975 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19976 ;;		 -> f(6), NULL(0), 
 19977 ;;  c               1  [STACK] unsigned char 
 19978 ;; Auto vars:     Size  Location     Type
 19979 ;;  w               2  [STACK] int 
 19980 ;;  l               2    0        int 
 19981 ;; Return value:  Size  Location     Type
 19982 ;;                  2  [STACK] int 
 19983 ;; Registers used:
 19984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19985 ;; Tracked objects:
 19986 ;;		On entry : 0/0
 19987 ;;		On exit  : 0/0
 19988 ;;		Unchanged: 0/0
 19989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19994 ;;Total ram usage:        0 bytes
 19995 ;; Hardware stack levels used:    1
 19996 ;; Hardware stack levels required when called:   20
 19997 ;; This function calls:
 19998 ;;		_pad
 19999 ;; This function is called by:
 20000 ;;		_vfpfcnvrt
 20001 ;; This function uses a reentrant model
 20002 ;;
 20003                           
 20004                           	psect	text70
 20005  019C8A                     __ptext70:
 20006                           	opt callstack 0
 20007  019C8A                     _ctoa:
 20008                           	opt callstack 0
 20009                           
 20010                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20011  019C8A  52E6               	movf	postinc1,f,c
 20012  019C8C  52E6               	movf	postinc1,f,c
 20013                           
 20014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20015                           
 20016                           ;incstack = 0
 20017 ;; hardware stack exceeded
 20018  019C8E  5021               	movf	_width^0,w,c
 20019  019C90  1022               	iorwf	(_width+1)^0,w,c
 20020  019C92  A4D8               	btfss	status,2,c
 20021  019C94  D009               	goto	l11230
 20022                           
 20023                           ;stkvar	_w @ sp[(-2)+0]
 20024  019C96  0EFE               	movlw	-2
 20025  019C98  0060  F087  FFE3   	movff	_width,plusw1
 20026  019C9E  0EFF               	movlw	-1
 20027  019CA0  0060  F08B  FFE3   	movff	_width+1,plusw1
 20028  019CA6  D016               	goto	l11232
 20029  019CA8                     l11230:
 20030  019CA8  0EFF               	movlw	255
 20031  019CAA  6E0B               	movwf	(btemp+10)^0,c
 20032  019CAC  0EFF               	movlw	255
 20033  019CAE  6E0C               	movwf	(btemp+11)^0,c
 20034  019CB0  0060  F084  F009   	movff	_width,btemp+8
 20035  019CB6  0060  F088  F00A   	movff	_width+1,btemp+9
 20036  019CBC  500B               	movf	(btemp+10)^0,w,c
 20037  019CBE  2609               	addwf	(btemp+8)^0,f,c
 20038  019CC0  500C               	movf	(btemp+11)^0,w,c
 20039  019CC2  220A               	addwfc	(btemp+9)^0,f,c
 20040                           
 20041                           ;stkvar	_w @ sp[(-2)+0]
 20042  019CC4  0EFE               	movlw	-2
 20043  019CC6  0060  F027  FFE3   	movff	btemp+8,plusw1
 20044  019CCC  0EFF               	movlw	-1
 20045  019CCE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20046  019CD4                     l11232:
 20047                           
 20048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20049                           ;stkvar	_c @ sp[(-2)+-3]
 20050  019CD4  0EFB               	movlw	-5
 20051  019CD6  006F FF8C  F394    	movff	plusw1,_dbuf
 20052                           
 20053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20054  019CDC  0103               	movlb	3	; () banked
 20055  019CDE  6B95               	clrf	(_dbuf+1)& (0+255),b
 20056                           
 20057                           ; BSR set to: 3
 20058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20059                           ;stkvar	_w @ sp[(-2)+0]
 20060  019CE0  0EFE               	movlw	-2
 20061  019CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 20062  019CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 20063  019CEE  0E94               	movlw	low _dbuf
 20064  019CF0  6EE6               	movwf	postinc1,c
 20065  019CF2  0E03               	movlw	high _dbuf
 20066  019CF4  6EE6               	movwf	postinc1,c
 20067                           
 20068                           ;stkvar	_fp @ sp[(-6)+-2]
 20069  019CF6  0EF8               	movlw	-8
 20070  019CF8  006F FF8F FFE6     	movff	plusw1,postinc1
 20071  019CFE  006F FF8F FFE6     	movff	plusw1,postinc1
 20072  019D04  ECA9  F0C5         	call	_pad	;wreg free
 20073                           
 20074                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20075  019D08  0EFB               	movlw	251
 20076  019D0A  26E1               	addwf	fsr1l,f,c
 20077  019D0C  0EFF               	movlw	255
 20078  019D0E  22E2               	addwfc	fsr1h,f,c
 20079  019D10  0012               	return		;funcret
 20080  019D12                     __end_of_ctoa:
 20081                           	opt callstack 0
 20082                           
 20083 ;; *************** function _pad *****************
 20084 ;; Defined at:
 20085 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20086 ;; Parameters:    Size  Location     Type
 20087 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20088 ;;		 -> f(6), NULL(0), 
 20089 ;;  buf             2  [STACK] PTR unsigned char 
 20090 ;;		 -> dbuf(80), 
 20091 ;;  p               2  [STACK] int 
 20092 ;; Auto vars:     Size  Location     Type
 20093 ;;  w               2  [STACK] int 
 20094 ;;  i               2  [STACK] int 
 20095 ;; Return value:  Size  Location     Type
 20096 ;;                  2  [STACK] int 
 20097 ;; Registers used:
 20098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20099 ;; Tracked objects:
 20100 ;;		On entry : 0/3
 20101 ;;		On exit  : 0/0
 20102 ;;		Unchanged: 0/0
 20103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20108 ;;Total ram usage:        0 bytes
 20109 ;; Hardware stack levels used:    1
 20110 ;; Hardware stack levels required when called:   19
 20111 ;; This function calls:
 20112 ;;		_fputc
 20113 ;;		_fputs
 20114 ;;		_strlen
 20115 ;; This function is called by:
 20116 ;;		_ctoa
 20117 ;;		_dtoa
 20118 ;;		_efgtoa
 20119 ;;		_utoa
 20120 ;;		_xtoa
 20121 ;; This function uses a reentrant model
 20122 ;;
 20123                           
 20124                           	psect	text71
 20125  018B52                     __ptext71:
 20126                           	opt callstack 0
 20127  018B52                     _pad:
 20128                           	opt callstack 0
 20129                           
 20130                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20131  018B52  52E6               	movf	postinc1,f,c
 20132  018B54  52E6               	movf	postinc1,f,c
 20133  018B56  52E6               	movf	postinc1,f,c
 20134  018B58  52E6               	movf	postinc1,f,c
 20135                           
 20136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20137                           
 20138                           ;incstack = 0
 20139 ;; hardware stack exceeded
 20140  018B5A  A025               	btfss	_flags^0,0,c
 20141  018B5C  D010               	goto	l11162
 20142                           
 20143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20144                           ;stkvar	_fp @ sp[(-4)+-2]
 20145  018B5E  0EFA               	movlw	-6
 20146  018B60  006F FF8F FFE6     	movff	plusw1,postinc1
 20147  018B66  006F FF8F FFE6     	movff	plusw1,postinc1
 20148                           
 20149                           ;stkvar	_buf @ sp[(-6)+-4]
 20150  018B6C  0EF6               	movlw	-10
 20151  018B6E  006F FF8F FFE6     	movff	plusw1,postinc1
 20152  018B74  006F FF8F FFE6     	movff	plusw1,postinc1
 20153  018B7A  ECD6  F0CC         	call	_fputs	;wreg free
 20154  018B7E                     l11162:
 20155                           
 20156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20157                           ;stkvar	_p @ sp[(-4)+-6]
 20158  018B7E  0EF7               	movlw	-9
 20159  018B80  BEE3               	btfsc	plusw1,7,c
 20160  018B82  D011               	goto	l11166
 20161                           
 20162                           ;stkvar	_p @ sp[(-4)+-6]
 20163                           ;stkvar	_w @ sp[(-4)+0]
 20164  018B84  0EF6               	movlw	-10
 20165  018B86  006F FF8C  F001    	movff	plusw1,btemp
 20166  018B8C  0EFC               	movlw	-4
 20167  018B8E  0060  F007  FFE3   	movff	btemp,plusw1
 20168  018B94  0EF7               	movlw	-9
 20169  018B96  006F FF8C  F001    	movff	plusw1,btemp
 20170  018B9C  0EFD               	movlw	-3
 20171  018B9E  0060  F007  FFE3   	movff	btemp,plusw1
 20172  018BA4  D004               	goto	l2078
 20173  018BA6                     l11166:
 20174                           
 20175                           ;stkvar	_w @ sp[(-4)+0]
 20176  018BA6  0EFC               	movlw	-4
 20177  018BA8  6AE3               	clrf	plusw1,c
 20178  018BAA  0EFD               	movlw	-3
 20179  018BAC  6AE3               	clrf	plusw1,c
 20180  018BAE                     l2078:
 20181                           
 20182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20183                           ;stkvar	_i @ sp[(-4)+2]
 20184  018BAE  0EFE               	movlw	-2
 20185  018BB0  6AE3               	clrf	plusw1,c
 20186  018BB2  0EFF               	movlw	-1
 20187  018BB4  6AE3               	clrf	plusw1,c
 20188                           
 20189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20190  018BB6  D01E               	goto	l11172
 20191  018BB8                     l11168:
 20192                           
 20193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20194                           ;stkvar	_fp @ sp[(-4)+-2]
 20195  018BB8  0EFA               	movlw	-6
 20196  018BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 20197  018BC0  006F FF8F FFE6     	movff	plusw1,postinc1
 20198  018BC6  0E20               	movlw	32
 20199  018BC8  6EE6               	movwf	postinc1,c
 20200  018BCA  0E00               	movlw	0
 20201  018BCC  6EE6               	movwf	postinc1,c
 20202  018BCE  EC8B  F0C4         	call	_fputc	;wreg free
 20203                           
 20204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20205                           ;stkvar	_i @ sp[(-4)+2]
 20206  018BD2  0EFE               	movlw	-2
 20207  018BD4  50E3               	movf	plusw1,w,c
 20208  018BD6  0F01               	addlw	1
 20209  018BD8  6E01               	movwf	btemp^0,c
 20210  018BDA  0EFE               	movlw	-2
 20211  018BDC  0060  F007  FFE3   	movff	btemp,plusw1
 20212  018BE2  6A01               	clrf	btemp^0,c
 20213  018BE4  0EFF               	movlw	-1
 20214  018BE6  50E3               	movf	plusw1,w,c
 20215  018BE8  2001               	addwfc	btemp^0,w,c
 20216  018BEA  6E01               	movwf	btemp^0,c
 20217  018BEC  0EFF               	movlw	-1
 20218  018BEE  0060  F007  FFE3   	movff	btemp,plusw1
 20219  018BF4                     l11172:
 20220                           
 20221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20222                           ;stkvar	_w @ sp[(-4)+0]
 20223                           ;stkvar	_i @ sp[(-4)+2]
 20224  018BF4  50E1               	movf	fsr1l,w,c
 20225  018BF6  0FFE               	addlw	-2
 20226  018BF8  6ED9               	movwf	fsr2l,c
 20227  018BFA  50E2               	movf	fsr1h,w,c
 20228  018BFC  6EDA               	movwf	fsr2h,c
 20229  018BFE  0EFF               	movlw	255
 20230  018C00  22DA               	addwfc	fsr2h,f,c
 20231  018C02  0EFC               	movlw	-4
 20232  018C04  50E3               	movf	plusw1,w,c
 20233  018C06  5CDE               	subwf	postinc2,w,c
 20234  018C08  50DE               	movf	postinc2,w,c
 20235  018C0A  0A80               	xorlw	128
 20236  018C0C  6E01               	movwf	btemp^0,c
 20237  018C0E  0EFD               	movlw	-3
 20238  018C10  50E3               	movf	plusw1,w,c
 20239  018C12  0A80               	xorlw	128
 20240  018C14  5801               	subwfb	btemp^0,w,c
 20241  018C16  A0D8               	btfss	status,0,c
 20242  018C18  D7CF               	goto	l11168
 20243                           
 20244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20245  018C1A  B025               	btfsc	_flags^0,0,c
 20246  018C1C  D010               	goto	l11176
 20247                           
 20248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20249                           ;stkvar	_fp @ sp[(-4)+-2]
 20250  018C1E  0EFA               	movlw	-6
 20251  018C20  006F FF8F FFE6     	movff	plusw1,postinc1
 20252  018C26  006F FF8F FFE6     	movff	plusw1,postinc1
 20253                           
 20254                           ;stkvar	_buf @ sp[(-6)+-4]
 20255  018C2C  0EF6               	movlw	-10
 20256  018C2E  006F FF8F FFE6     	movff	plusw1,postinc1
 20257  018C34  006F FF8F FFE6     	movff	plusw1,postinc1
 20258  018C3A  ECD6  F0CC         	call	_fputs	;wreg free
 20259  018C3E                     l11176:
 20260                           
 20261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 20262                           ;stkvar	_w @ sp[(-4)+0]
 20263                           ;stkvar	_buf @ sp[(-4)+-4]
 20264  018C3E  0EF8               	movlw	-8
 20265  018C40  006F FF8F FFE6     	movff	plusw1,postinc1
 20266  018C46  006F FF8F FFE6     	movff	plusw1,postinc1
 20267  018C4C  EC85  F0CC         	call	_strlen	;wreg free
 20268  018C50  0EFC               	movlw	-4
 20269  018C52  50E3               	movf	plusw1,w,c
 20270  018C54  2601               	addwf	btemp^0,f,c
 20271  018C56  0EFD               	movlw	-3
 20272  018C58  50E3               	movf	plusw1,w,c
 20273  018C5A  2202               	addwfc	(btemp+1)^0,f,c
 20274                           
 20275                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 20276  018C5C  0EF6               	movlw	246
 20277  018C5E  26E1               	addwf	fsr1l,f,c
 20278  018C60  0EFF               	movlw	255
 20279  018C62  22E2               	addwfc	fsr1h,f,c
 20280  018C64  0012               	return		;funcret
 20281  018C66                     __end_of_pad:
 20282                           	opt callstack 0
 20283                           
 20284 ;; *************** function _strlen *****************
 20285 ;; Defined at:
 20286 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 20287 ;; Parameters:    Size  Location     Type
 20288 ;;  s               2  [STACK] PTR const unsigned char 
 20289 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20290 ;;		 -> spin(120), STR_37(9), STR_36(12), D.lcd(288), 
 20291 ;;		 -> D(290), T(144), port_data(512), STR_3(6), 
 20292 ;;		 -> V(188), 
 20293 ;; Auto vars:     Size  Location     Type
 20294 ;;  a               2  [STACK] PTR const unsigned char 
 20295 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20296 ;;		 -> spin(120), STR_37(9), STR_36(12), D.lcd(288), 
 20297 ;;		 -> D(290), T(144), port_data(512), STR_3(6), 
 20298 ;;		 -> V(188), 
 20299 ;; Return value:  Size  Location     Type
 20300 ;;                  2  [STACK] unsigned int 
 20301 ;; Registers used:
 20302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 20303 ;; Tracked objects:
 20304 ;;		On entry : 0/0
 20305 ;;		On exit  : 0/0
 20306 ;;		Unchanged: 0/0
 20307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20312 ;;Total ram usage:        0 bytes
 20313 ;; Hardware stack levels used:    1
 20314 ;; Hardware stack levels required when called:   15
 20315 ;; This function calls:
 20316 ;;		Nothing
 20317 ;; This function is called by:
 20318 ;;		_eaDogM_WriteString
 20319 ;;		_spinners
 20320 ;;		_calc_bsoc
 20321 ;;		_pad
 20322 ;;		_stoa
 20323 ;; This function uses a reentrant model
 20324 ;;
 20325                           
 20326                           	psect	text72
 20327  01990A                     __ptext72:
 20328                           	opt callstack 0
 20329  01990A                     _strlen:
 20330                           	opt callstack 0
 20331                           
 20332                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20333  01990A  52E6               	movf	postinc1,f,c
 20334  01990C  52E6               	movf	postinc1,f,c
 20335                           
 20336                           ;stkvar	_s @ sp[(-2)+-2]
 20337                           
 20338                           ;incstack = 0
 20339 ;; hardware stack exceeded
 20340  01990E  0EFC               	movlw	-4
 20341  019910  006F FF8C  F00B    	movff	plusw1,btemp+10
 20342  019916  0EFD               	movlw	-3
 20343  019918  006F FF8C  F00C    	movff	plusw1,btemp+11
 20344                           
 20345                           ;stkvar	_a @ sp[(-2)+0]
 20346  01991E  0EFF               	movlw	-1
 20347  019920  0060  F033  FFE3   	movff	btemp+11,plusw1
 20348  019926  0EFE               	movlw	-2
 20349  019928  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20350  01992E  D011               	goto	l7314
 20351  019930                     l7312:
 20352                           
 20353                           ;stkvar	_s @ sp[(-2)+-2]
 20354  019930  0EFC               	movlw	-4
 20355  019932  50E3               	movf	plusw1,w,c
 20356  019934  0F01               	addlw	1
 20357  019936  6E01               	movwf	btemp^0,c
 20358  019938  0EFC               	movlw	-4
 20359  01993A  0060  F007  FFE3   	movff	btemp,plusw1
 20360  019940  6A01               	clrf	btemp^0,c
 20361  019942  0EFD               	movlw	-3
 20362  019944  50E3               	movf	plusw1,w,c
 20363  019946  2001               	addwfc	btemp^0,w,c
 20364  019948  6E01               	movwf	btemp^0,c
 20365  01994A  0EFD               	movlw	-3
 20366  01994C  0060  F007  FFE3   	movff	btemp,plusw1
 20367  019952                     l7314:
 20368                           
 20369                           ;stkvar	_s @ sp[(-2)+-2]
 20370  019952  0EFC               	movlw	-4
 20371  019954  006F FF8F FFF6     	movff	plusw1,tblptrl
 20372  01995A  0EFD               	movlw	-3
 20373  01995C  006F FF8F FFF7     	movff	plusw1,tblptrh
 20374  019962  0E00               	movlw	low (__mediumconst shr (0+16))
 20375  019964  6EF8               	movwf	tblptru,c
 20376  019966  0E1F               	movlw	(high __ramtop+-1)
 20377  019968  64F7               	cpfsgt	tblptrh,c
 20378  01996A  D003               	bra	u5097
 20379  01996C  0008               	tblrd		*
 20380  01996E  50F5               	movf	tablat,w,c
 20381  019970  D007               	bra	u5090
 20382  019972                     u5097:
 20383  019972  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20384  019978  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20385  01997E  50EF               	movf	indf0,w,c
 20386  019980                     u5090:
 20387  019980  0900               	iorlw	0
 20388  019982  A4D8               	btfss	status,2,c
 20389  019984  D7D5               	goto	l7312
 20390                           
 20391                           ;stkvar	_a @ sp[(-2)+0]
 20392                           ;stkvar	_s @ sp[(-2)+-2]
 20393  019986  0EFC               	movlw	-4
 20394  019988  006F FF8C  F001    	movff	plusw1,btemp
 20395  01998E  0EFD               	movlw	-3
 20396  019990  006F FF8C  F002    	movff	plusw1,btemp+1
 20397  019996  0EFE               	movlw	-2
 20398  019998  50E3               	movf	plusw1,w,c
 20399  01999A  5E01               	subwf	btemp^0,f,c
 20400  01999C  0EFF               	movlw	-1
 20401  01999E  50E3               	movf	plusw1,w,c
 20402  0199A0  5A02               	subwfb	(btemp+1)^0,f,c
 20403                           
 20404                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 20405  0199A2  52E5               	movf	postdec1,f,c
 20406  0199A4  52E5               	movf	postdec1,f,c
 20407  0199A6  52E5               	movf	postdec1,f,c
 20408  0199A8  52E5               	movf	postdec1,f,c
 20409  0199AA  0012               	return		;funcret
 20410  0199AC                     __end_of_strlen:
 20411                           	opt callstack 0
 20412                           
 20413 ;; *************** function _fputs *****************
 20414 ;; Defined at:
 20415 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 20416 ;; Parameters:    Size  Location     Type
 20417 ;;  s               2  [STACK] PTR const unsigned char 
 20418 ;;		 -> dbuf(80), 
 20419 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20420 ;;		 -> f(6), NULL(0), 
 20421 ;; Auto vars:     Size  Location     Type
 20422 ;;  i               2  [STACK] int 
 20423 ;;  c               1  [STACK] unsigned char 
 20424 ;; Return value:  Size  Location     Type
 20425 ;;                  2  [STACK] int 
 20426 ;; Registers used:
 20427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20428 ;; Tracked objects:
 20429 ;;		On entry : 0/3
 20430 ;;		On exit  : 0/0
 20431 ;;		Unchanged: 0/0
 20432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20437 ;;Total ram usage:        0 bytes
 20438 ;; Hardware stack levels used:    1
 20439 ;; Hardware stack levels required when called:   18
 20440 ;; This function calls:
 20441 ;;		_fputc
 20442 ;; This function is called by:
 20443 ;;		_pad
 20444 ;; This function uses a reentrant model
 20445 ;;
 20446                           
 20447                           	psect	text73
 20448  0199AC                     __ptext73:
 20449                           	opt callstack 0
 20450  0199AC                     _fputs:
 20451                           	opt callstack 0
 20452                           
 20453                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20454  0199AC  52E6               	movf	postinc1,f,c
 20455  0199AE  52E6               	movf	postinc1,f,c
 20456  0199B0  52E6               	movf	postinc1,f,c
 20457                           
 20458                           ;stkvar	_i @ sp[(-3)+0]
 20459                           
 20460                           ;incstack = 0
 20461 ;; hardware stack exceeded
 20462  0199B2  0EFD               	movlw	-3
 20463  0199B4  6AE3               	clrf	plusw1,c
 20464  0199B6  0EFE               	movlw	-2
 20465  0199B8  6AE3               	clrf	plusw1,c
 20466  0199BA  D01F               	goto	l11156
 20467  0199BC                     l11152:
 20468                           
 20469                           ;stkvar	_fp @ sp[(-3)+-4]
 20470  0199BC  0EF9               	movlw	-7
 20471  0199BE  006F FF8F FFE6     	movff	plusw1,postinc1
 20472  0199C4  006F FF8F FFE6     	movff	plusw1,postinc1
 20473                           
 20474                           ;stkvar	_c @ sp[(-5)+2]
 20475  0199CA  0EFD               	movlw	-3
 20476  0199CC  50E3               	movf	plusw1,w,c
 20477  0199CE  6EE6               	movwf	postinc1,c
 20478  0199D0  0E00               	movlw	0
 20479  0199D2  6EE6               	movwf	postinc1,c
 20480  0199D4  EC8B  F0C4         	call	_fputc	;wreg free
 20481                           
 20482                           ;stkvar	_i @ sp[(-3)+0]
 20483  0199D8  0EFD               	movlw	-3
 20484  0199DA  50E3               	movf	plusw1,w,c
 20485  0199DC  0F01               	addlw	1
 20486  0199DE  6E01               	movwf	btemp^0,c
 20487  0199E0  0EFD               	movlw	-3
 20488  0199E2  0060  F007  FFE3   	movff	btemp,plusw1
 20489  0199E8  6A01               	clrf	btemp^0,c
 20490  0199EA  0EFE               	movlw	-2
 20491  0199EC  50E3               	movf	plusw1,w,c
 20492  0199EE  2001               	addwfc	btemp^0,w,c
 20493  0199F0  6E01               	movwf	btemp^0,c
 20494  0199F2  0EFE               	movlw	-2
 20495  0199F4  0060  F007  FFE3   	movff	btemp,plusw1
 20496  0199FA                     l11156:
 20497                           
 20498                           ;stkvar	_i @ sp[(-3)+0]
 20499  0199FA  0EFD               	movlw	-3
 20500  0199FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20501  019A02  0EFE               	movlw	-2
 20502  019A04  006F FF8C  F00C    	movff	plusw1,btemp+11
 20503                           
 20504                           ;stkvar	_s @ sp[(-3)+-2]
 20505  019A0A  0EFB               	movlw	-5
 20506  019A0C  006F FF8C  F009    	movff	plusw1,btemp+8
 20507  019A12  0EFC               	movlw	-4
 20508  019A14  006F FF8C  F00A    	movff	plusw1,btemp+9
 20509  019A1A  500B               	movf	(btemp+10)^0,w,c
 20510  019A1C  2409               	addwf	(btemp+8)^0,w,c
 20511  019A1E  6ED9               	movwf	fsr2l,c
 20512  019A20  500C               	movf	(btemp+11)^0,w,c
 20513  019A22  200A               	addwfc	(btemp+9)^0,w,c
 20514  019A24  6EDA               	movwf	fsr2h,c
 20515  019A26  50DF               	movf	indf2,w,c
 20516  019A28  6E0C               	movwf	(btemp+11)^0,c
 20517                           
 20518                           ;stkvar	_c @ sp[(-3)+2]
 20519  019A2A  0EFF               	movlw	-1
 20520  019A2C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20521  019A32  0EFF               	movlw	-1
 20522  019A34  50E3               	movf	plusw1,w,c
 20523  019A36  A4D8               	btfss	status,2,c
 20524  019A38  D7C1               	goto	l11152
 20525                           
 20526                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20527  019A3A  0EF9               	movlw	249
 20528  019A3C  26E1               	addwf	fsr1l,f,c
 20529  019A3E  0EFF               	movlw	255
 20530  019A40  22E2               	addwfc	fsr1h,f,c
 20531  019A42  0012               	return		;funcret
 20532  019A44                     __end_of_fputs:
 20533                           	opt callstack 0
 20534                           
 20535 ;; *************** function _fputc *****************
 20536 ;; Defined at:
 20537 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 20538 ;; Parameters:    Size  Location     Type
 20539 ;;  c               2  [STACK] int 
 20540 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20541 ;;		 -> f(6), NULL(0), 
 20542 ;; Auto vars:     Size  Location     Type
 20543 ;;		None
 20544 ;; Return value:  Size  Location     Type
 20545 ;;                  2  [STACK] int 
 20546 ;; Registers used:
 20547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20548 ;; Tracked objects:
 20549 ;;		On entry : 0/0
 20550 ;;		On exit  : 0/0
 20551 ;;		Unchanged: 0/0
 20552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20557 ;;Total ram usage:        0 bytes
 20558 ;; Hardware stack levels used:    1
 20559 ;; Hardware stack levels required when called:   17
 20560 ;; This function calls:
 20561 ;;		_putch
 20562 ;; This function is called by:
 20563 ;;		_pad
 20564 ;;		_stoa
 20565 ;;		_vfpfcnvrt
 20566 ;;		_fputs
 20567 ;; This function uses a reentrant model
 20568 ;;
 20569                           
 20570                           	psect	text74
 20571  018916                     __ptext74:
 20572                           	opt callstack 0
 20573  018916                     _fputc:
 20574                           	opt callstack 0
 20575                           
 20576                           ;stkvar	_fp @ sp[(0)+-4]
 20577                           
 20578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20579                           ;incstack = 0
 20580 ;; hardware stack exceeded
 20581  018916  0EFC               	movlw	-4
 20582  018918  006F FF8C  F001    	movff	plusw1,btemp
 20583  01891E  0EFD               	movlw	-3
 20584  018920  50E3               	movf	plusw1,w,c
 20585  018922  1001               	iorwf	btemp^0,w,c
 20586  018924  B4D8               	btfsc	status,2,c
 20587  018926  D009               	goto	u10090
 20588                           
 20589                           ;stkvar	_fp @ sp[(0)+-4]
 20590  018928  0EFC               	movlw	-4
 20591  01892A  006F FF8C  F001    	movff	plusw1,btemp
 20592  018930  0EFD               	movlw	-3
 20593  018932  50E3               	movf	plusw1,w,c
 20594  018934  1001               	iorwf	btemp^0,w,c
 20595  018936  A4D8               	btfss	status,2,c
 20596  018938  D006               	goto	l11140
 20597  01893A                     u10090:
 20598                           
 20599                           ;stkvar	_c @ sp[(0)+-2]
 20600  01893A  0EFE               	movlw	-2
 20601  01893C  50E3               	movf	plusw1,w,c
 20602  01893E  6EE6               	movwf	postinc1,c
 20603  018940  ECE6  F0D7         	call	_putch	;wreg free
 20604  018944  D075               	goto	l3124
 20605  018946                     l11140:
 20606                           
 20607                           ;stkvar	_fp @ sp[(0)+-4]
 20608  018946  0EFC               	movlw	-4
 20609  018948  006F FF8C  F00B    	movff	plusw1,btemp+10
 20610  01894E  0EFD               	movlw	-3
 20611  018950  006F FF8C  F00C    	movff	plusw1,btemp+11
 20612  018956  0E04               	movlw	4
 20613  018958  240B               	addwf	(btemp+10)^0,w,c
 20614  01895A  6ED9               	movwf	fsr2l,c
 20615  01895C  0E00               	movlw	0
 20616  01895E  200C               	addwfc	(btemp+11)^0,w,c
 20617  018960  6EDA               	movwf	fsr2h,c
 20618  018962  50DE               	movf	postinc2,w,c
 20619  018964  10DE               	iorwf	postinc2,w,c
 20620  018966  B4D8               	btfsc	status,2,c
 20621  018968  D026               	goto	u10110
 20622                           
 20623                           ;stkvar	_fp @ sp[(0)+-4]
 20624  01896A  0EFC               	movlw	-4
 20625  01896C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20626  018972  0EFD               	movlw	-3
 20627  018974  006F FF8C  F00C    	movff	plusw1,btemp+11
 20628  01897A  0E04               	movlw	4
 20629  01897C  240B               	addwf	(btemp+10)^0,w,c
 20630  01897E  6ED9               	movwf	fsr2l,c
 20631  018980  0E00               	movlw	0
 20632  018982  200C               	addwfc	(btemp+11)^0,w,c
 20633  018984  6EDA               	movwf	fsr2h,c
 20634                           
 20635                           ;stkvar	_fp @ sp[(0)+-4]
 20636  018986  0EFC               	movlw	-4
 20637  018988  006F FF8C  F00B    	movff	plusw1,btemp+10
 20638  01898E  0EFD               	movlw	-3
 20639  018990  006F FF8C  F00C    	movff	plusw1,btemp+11
 20640  018996  0E02               	movlw	2
 20641  018998  240B               	addwf	(btemp+10)^0,w,c
 20642  01899A  6EE9               	movwf	fsr0l,c
 20643  01899C  0E00               	movlw	0
 20644  01899E  200C               	addwfc	(btemp+11)^0,w,c
 20645  0189A0  6EEA               	movwf	fsr0h,c
 20646  0189A2  50DE               	movf	postinc2,w,c
 20647  0189A4  5CEE               	subwf	postinc0,w,c
 20648  0189A6  50EE               	movf	postinc0,w,c
 20649  0189A8  0A80               	xorlw	128
 20650  0189AA  6E01               	movwf	btemp^0,c
 20651  0189AC  50DE               	movf	postinc2,w,c
 20652  0189AE  0A80               	xorlw	128
 20653  0189B0  5801               	subwfb	btemp^0,w,c
 20654  0189B2  B0D8               	btfsc	status,0,c
 20655  0189B4  D03D               	goto	l3124
 20656  0189B6                     u10110:
 20657                           
 20658                           ;stkvar	_c @ sp[(0)+-2]
 20659                           ;stkvar	_fp @ sp[(0)+-4]
 20660  0189B6  0EFC               	movlw	-4
 20661  0189B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20662  0189BE  0EFD               	movlw	-3
 20663  0189C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20664  0189C6  0E02               	movlw	2
 20665  0189C8  240B               	addwf	(btemp+10)^0,w,c
 20666  0189CA  6ED9               	movwf	fsr2l,c
 20667  0189CC  0E00               	movlw	0
 20668  0189CE  200C               	addwfc	(btemp+11)^0,w,c
 20669  0189D0  6EDA               	movwf	fsr2h,c
 20670  0189D2  006F FF78  F00B    	movff	postinc2,btemp+10
 20671  0189D8  006F FF74  F00C    	movff	postdec2,btemp+11
 20672                           
 20673                           ;stkvar	_fp @ sp[(0)+-4]
 20674  0189DE  0EFC               	movlw	-4
 20675  0189E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 20676  0189E6  0EFD               	movlw	-3
 20677  0189E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 20678  0189EE  006F FF78  F009    	movff	postinc2,btemp+8
 20679  0189F4  006F FF74  F00A    	movff	postdec2,btemp+9
 20680  0189FA  500B               	movf	(btemp+10)^0,w,c
 20681  0189FC  2409               	addwf	(btemp+8)^0,w,c
 20682  0189FE  6ED9               	movwf	fsr2l,c
 20683  018A00  500C               	movf	(btemp+11)^0,w,c
 20684  018A02  200A               	addwfc	(btemp+9)^0,w,c
 20685  018A04  6EDA               	movwf	fsr2h,c
 20686  018A06  0EFE               	movlw	-2
 20687  018A08  006F FF8F FFDF     	movff	plusw1,indf2
 20688                           
 20689                           ;stkvar	_fp @ sp[(0)+-4]
 20690  018A0E  0EFC               	movlw	-4
 20691  018A10  006F FF8C  F00B    	movff	plusw1,btemp+10
 20692  018A16  0EFD               	movlw	-3
 20693  018A18  006F FF8C  F00C    	movff	plusw1,btemp+11
 20694  018A1E  0E02               	movlw	2
 20695  018A20  240B               	addwf	(btemp+10)^0,w,c
 20696  018A22  6ED9               	movwf	fsr2l,c
 20697  018A24  0E00               	movlw	0
 20698  018A26  200C               	addwfc	(btemp+11)^0,w,c
 20699  018A28  6EDA               	movwf	fsr2h,c
 20700  018A2A  2ADE               	incf	postinc2,f,c
 20701  018A2C  0E00               	movlw	0
 20702  018A2E  22DD               	addwfc	postdec2,f,c
 20703  018A30                     l3124:
 20704                           
 20705                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20706  018A30  52E5               	movf	postdec1,f,c
 20707  018A32  52E5               	movf	postdec1,f,c
 20708  018A34  52E5               	movf	postdec1,f,c
 20709  018A36  52E5               	movf	postdec1,f,c
 20710  018A38  0012               	return		;funcret
 20711  018A3A                     __end_of_fputc:
 20712                           	opt callstack 0
 20713                           
 20714 ;; *************** function _putch *****************
 20715 ;; Defined at:
 20716 ;;		line 170 in file "eadog.c"
 20717 ;; Parameters:    Size  Location     Type
 20718 ;;  c               1  [STACK] unsigned char 
 20719 ;; Auto vars:     Size  Location     Type
 20720 ;;		None
 20721 ;; Return value:  Size  Location     Type
 20722 ;;                  1  [STACK] void 
 20723 ;; Registers used:
 20724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20725 ;; Tracked objects:
 20726 ;;		On entry : 0/0
 20727 ;;		On exit  : 0/0
 20728 ;;		Unchanged: 0/0
 20729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20734 ;;Total ram usage:        0 bytes
 20735 ;; Hardware stack levels used:    1
 20736 ;; Hardware stack levels required when called:   16
 20737 ;; This function calls:
 20738 ;;		_ringBufS_put_dma
 20739 ;; This function is called by:
 20740 ;;		_fputc
 20741 ;; This function uses a reentrant model
 20742 ;;
 20743                           
 20744                           	psect	text75
 20745  01AFCC                     __ptext75:
 20746                           	opt callstack 0
 20747  01AFCC                     _putch:
 20748                           	opt callstack 0
 20749                           
 20750                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 20751                           ;stkvar	_c @ sp[(0)+-1]
 20752                           
 20753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20754                           ;incstack = 0
 20755 ;; hardware stack exceeded
 20756  01AFCC  0EFF               	movlw	-1
 20757  01AFCE  50E3               	movf	plusw1,w,c
 20758  01AFD0  6EE6               	movwf	postinc1,c
 20759  01AFD2  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 20760  01AFD8  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 20761  01AFDE  ECDD  F0CB         	call	_ringBufS_put_dma	;wreg free
 20762                           
 20763                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 20764  01AFE2  52E5               	movf	postdec1,f,c
 20765  01AFE4  0012               	return		;funcret
 20766  01AFE6                     __end_of_putch:
 20767                           	opt callstack 0
 20768                           
 20769 ;; *************** function _ringBufS_put_dma *****************
 20770 ;; Defined at:
 20771 ;;		line 67 in file "ringbufs.c"
 20772 ;; Parameters:    Size  Location     Type
 20773 ;;  _this           2  [STACK] PTR struct ringBufS_t
 20774 ;;		 -> ring_buf1(67), 
 20775 ;;  c               1  [STACK] const unsigned char 
 20776 ;; Auto vars:     Size  Location     Type
 20777 ;;		None
 20778 ;; Return value:  Size  Location     Type
 20779 ;;                  1  [STACK] void 
 20780 ;; Registers used:
 20781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20782 ;; Tracked objects:
 20783 ;;		On entry : 0/0
 20784 ;;		On exit  : 0/0
 20785 ;;		Unchanged: 0/0
 20786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20791 ;;Total ram usage:        0 bytes
 20792 ;; Hardware stack levels used:    1
 20793 ;; Hardware stack levels required when called:   15
 20794 ;; This function calls:
 20795 ;;		Nothing
 20796 ;; This function is called by:
 20797 ;;		_putch
 20798 ;; This function uses a reentrant model
 20799 ;;
 20800                           
 20801                           	psect	text76
 20802  0197BA                     __ptext76:
 20803                           	opt callstack 0
 20804  0197BA                     _ringBufS_put_dma:
 20805                           	opt callstack 0
 20806                           
 20807                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 20808                           ;stkvar	__this @ sp[(0)+-2]
 20809                           
 20810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20811                           ;incstack = 0
 20812 ;; hardware stack exceeded
 20813  0197BA  0EFE               	movlw	-2
 20814  0197BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20815  0197C2  0EFF               	movlw	-1
 20816  0197C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20817  0197CA  0E42               	movlw	66
 20818  0197CC  240B               	addwf	(btemp+10)^0,w,c
 20819  0197CE  6ED9               	movwf	fsr2l,c
 20820  0197D0  0E00               	movlw	0
 20821  0197D2  200C               	addwfc	(btemp+11)^0,w,c
 20822  0197D4  6EDA               	movwf	fsr2h,c
 20823  0197D6  0E40               	movlw	64
 20824  0197D8  60DF               	cpfslt	indf2,c
 20825  0197DA  D040               	goto	l1570
 20826                           
 20827                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 20828                           ;stkvar	_c @ sp[(0)+-3]
 20829                           ;stkvar	__this @ sp[(0)+-2]
 20830  0197DC  0EFE               	movlw	-2
 20831  0197DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 20832  0197E4  0EFF               	movlw	-1
 20833  0197E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 20834  0197EC  0E40               	movlw	64
 20835  0197EE  240B               	addwf	(btemp+10)^0,w,c
 20836  0197F0  6ED9               	movwf	fsr2l,c
 20837  0197F2  0E00               	movlw	0
 20838  0197F4  200C               	addwfc	(btemp+11)^0,w,c
 20839  0197F6  6EDA               	movwf	fsr2h,c
 20840  0197F8  50DF               	movf	indf2,w,c
 20841  0197FA  6E0C               	movwf	(btemp+11)^0,c
 20842                           
 20843                           ;stkvar	__this @ sp[(0)+-2]
 20844  0197FC  0EFE               	movlw	-2
 20845  0197FE  006F FF8C  F009    	movff	plusw1,btemp+8
 20846  019804  0EFF               	movlw	-1
 20847  019806  006F FF8C  F00A    	movff	plusw1,btemp+9
 20848  01980C  500C               	movf	(btemp+11)^0,w,c
 20849  01980E  2409               	addwf	(btemp+8)^0,w,c
 20850  019810  6ED9               	movwf	fsr2l,c
 20851  019812  0E00               	movlw	0
 20852  019814  200A               	addwfc	(btemp+9)^0,w,c
 20853  019816  6EDA               	movwf	fsr2h,c
 20854  019818  0EFD               	movlw	-3
 20855  01981A  006F FF8F FFDF     	movff	plusw1,indf2
 20856                           
 20857                           ;ringbufs.c: 71:   ++_this->head;
 20858                           ;stkvar	__this @ sp[(0)+-2]
 20859  019820  0EFE               	movlw	-2
 20860  019822  006F FF8C  F00B    	movff	plusw1,btemp+10
 20861  019828  0EFF               	movlw	-1
 20862  01982A  006F FF8C  F00C    	movff	plusw1,btemp+11
 20863  019830  0E40               	movlw	64
 20864  019832  240B               	addwf	(btemp+10)^0,w,c
 20865  019834  6ED9               	movwf	fsr2l,c
 20866  019836  0E00               	movlw	0
 20867  019838  200C               	addwfc	(btemp+11)^0,w,c
 20868  01983A  6EDA               	movwf	fsr2h,c
 20869  01983C  2ADF               	incf	indf2,f,c
 20870                           
 20871                           ;ringbufs.c: 72:   ++_this->count;
 20872                           ;stkvar	__this @ sp[(0)+-2]
 20873  01983E  0EFE               	movlw	-2
 20874  019840  006F FF8C  F00B    	movff	plusw1,btemp+10
 20875  019846  0EFF               	movlw	-1
 20876  019848  006F FF8C  F00C    	movff	plusw1,btemp+11
 20877  01984E  0E42               	movlw	66
 20878  019850  240B               	addwf	(btemp+10)^0,w,c
 20879  019852  6ED9               	movwf	fsr2l,c
 20880  019854  0E00               	movlw	0
 20881  019856  200C               	addwfc	(btemp+11)^0,w,c
 20882  019858  6EDA               	movwf	fsr2h,c
 20883  01985A  2ADF               	incf	indf2,f,c
 20884  01985C                     l1570:
 20885                           
 20886                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20887  01985C  52E5               	movf	postdec1,f,c
 20888  01985E  52E5               	movf	postdec1,f,c
 20889  019860  52E5               	movf	postdec1,f,c
 20890  019862  0012               	return		;funcret
 20891  019864                     __end_of_ringBufS_put_dma:
 20892                           	opt callstack 0
 20893                           
 20894 ;; *************** function _atoi *****************
 20895 ;; Defined at:
 20896 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 20897 ;; Parameters:    Size  Location     Type
 20898 ;;  s               2  [STACK] PTR const unsigned char 
 20899 ;;		 -> STR_55(85), STR_53(3), STR_52(3), STR_51(19), 
 20900 ;;		 -> STR_50(19), STR_49(19), STR_48(19), STR_47(19), 
 20901 ;;		 -> STR_46(19), STR_45(24), STR_44(15), STR_43(15), 
 20902 ;;		 -> STR_42(15), STR_41(10), STR_40(10), STR_39(19), 
 20903 ;;		 -> STR_38(19), STR_35(3), STR_34(3), STR_33(3), 
 20904 ;;		 -> STR_32(17), STR_31(16), STR_30(16), STR_29(20), 
 20905 ;;		 -> STR_28(20), STR_27(19), STR_26(19), STR_25(19), 
 20906 ;;		 -> STR_24(19), STR_23(19), STR_22(19), STR_21(19), 
 20907 ;;		 -> STR_20(17), STR_19(16), STR_18(16), STR_17(26), 
 20908 ;;		 -> STR_16(26), STR_15(22), STR_14(17), STR_13(17), 
 20909 ;;		 -> STR_12(17), STR_11(22), STR_10(22), STR_9(23), 
 20910 ;;		 -> STR_8(18), STR_7(17), STR_6(17), STR_5(17), 
 20911 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 20912 ;; Auto vars:     Size  Location     Type
 20913 ;;  n               2  [STACK] int 
 20914 ;;  neg             2  [STACK] int 
 20915 ;; Return value:  Size  Location     Type
 20916 ;;                  2  [STACK] int 
 20917 ;; Registers used:
 20918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20919 ;; Tracked objects:
 20920 ;;		On entry : 0/0
 20921 ;;		On exit  : 0/0
 20922 ;;		Unchanged: 0/0
 20923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20928 ;;Total ram usage:        0 bytes
 20929 ;; Hardware stack levels used:    1
 20930 ;; Hardware stack levels required when called:   16
 20931 ;; This function calls:
 20932 ;;		_isdigit
 20933 ;;		_isspace
 20934 ;; This function is called by:
 20935 ;;		_vfpfcnvrt
 20936 ;; This function uses a reentrant model
 20937 ;;
 20938                           
 20939                           	psect	text77
 20940  016962                     __ptext77:
 20941                           	opt callstack 0
 20942  016962                     _atoi:
 20943                           	opt callstack 0
 20944                           
 20945                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20946  016962  0E09               	movlw	9
 20947  016964  26E1               	addwf	fsr1l,f,c
 20948  016966  0E00               	movlw	0
 20949  016968  22E2               	addwfc	fsr1h,f,c
 20950                           
 20951                           ;stkvar	_n @ sp[(-9)+5]
 20952                           
 20953                           ;incstack = 0
 20954 ;; hardware stack exceeded
 20955  01696A  0EFC               	movlw	-4
 20956  01696C  6AE3               	clrf	plusw1,c
 20957  01696E  0EFD               	movlw	-3
 20958  016970  6AE3               	clrf	plusw1,c
 20959                           
 20960                           ;stkvar	_neg @ sp[(-9)+7]
 20961  016972  0EFE               	movlw	-2
 20962  016974  6AE3               	clrf	plusw1,c
 20963  016976  0EFF               	movlw	-1
 20964  016978  6AE3               	clrf	plusw1,c
 20965  01697A  D011               	goto	l8922
 20966  01697C                     l8920:
 20967                           
 20968                           ;stkvar	_s @ sp[(-9)+-2]
 20969  01697C  0EF5               	movlw	-11
 20970  01697E  50E3               	movf	plusw1,w,c
 20971  016980  0F01               	addlw	1
 20972  016982  6E01               	movwf	btemp^0,c
 20973  016984  0EF5               	movlw	-11
 20974  016986  0060  F007  FFE3   	movff	btemp,plusw1
 20975  01698C  6A01               	clrf	btemp^0,c
 20976  01698E  0EF6               	movlw	-10
 20977  016990  50E3               	movf	plusw1,w,c
 20978  016992  2001               	addwfc	btemp^0,w,c
 20979  016994  6E01               	movwf	btemp^0,c
 20980  016996  0EF6               	movlw	-10
 20981  016998  0060  F007  FFE3   	movff	btemp,plusw1
 20982  01699E                     l8922:
 20983                           
 20984                           ;stkvar	_atoi$5859 @ sp[(-9)+4]
 20985  01699E  0EFB               	movlw	-5
 20986  0169A0  6AE3               	clrf	plusw1,c
 20987  0169A2  2AE3               	incf	plusw1,f,c
 20988                           
 20989                           ;stkvar	_s @ sp[(-9)+-2]
 20990  0169A4  50E1               	movf	fsr1l,w,c
 20991  0169A6  0FF5               	addlw	-11
 20992  0169A8  6ED9               	movwf	fsr2l,c
 20993  0169AA  50E2               	movf	fsr1h,w,c
 20994  0169AC  6EDA               	movwf	fsr2h,c
 20995  0169AE  0EFF               	movlw	255
 20996  0169B0  22DA               	addwfc	fsr2h,f,c
 20997  0169B2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20998  0169B8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20999  0169BE                     	if	0	;tblptru may be non-zero
 21000  0169BE                     	endif
 21001  0169BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21002  0169BE  0E00               	movlw	low (__mediumconst shr (0+16))
 21003  0169C0  6EF8               	movwf	tblptru,c
 21004  0169C2                     	endif
 21005  0169C2  0008               	tblrd		*
 21006  0169C4  50F5               	movf	tablat,w,c
 21007  0169C6  0A20               	xorlw	32
 21008  0169C8  B4D8               	btfsc	status,2,c
 21009  0169CA  D023               	goto	l8930
 21010  0169CC  0EF7               	movlw	247
 21011  0169CE  6E0B               	movwf	(btemp+10)^0,c
 21012  0169D0  0EFF               	movlw	255
 21013  0169D2  6E0C               	movwf	(btemp+11)^0,c
 21014                           
 21015                           ;stkvar	_s @ sp[(-9)+-2]
 21016  0169D4  50E1               	movf	fsr1l,w,c
 21017  0169D6  0FF5               	addlw	-11
 21018  0169D8  6ED9               	movwf	fsr2l,c
 21019  0169DA  50E2               	movf	fsr1h,w,c
 21020  0169DC  6EDA               	movwf	fsr2h,c
 21021  0169DE  0EFF               	movlw	255
 21022  0169E0  22DA               	addwfc	fsr2h,f,c
 21023  0169E2  006F FF7B FFF6     	movff	postinc2,tblptrl
 21024  0169E8  006F FF77 FFF7     	movff	postdec2,tblptrh
 21025  0169EE                     	if	0	;tblptru may be non-zero
 21026  0169EE                     	endif
 21027  0169EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21028  0169EE  0E00               	movlw	low (__mediumconst shr (0+16))
 21029  0169F0  6EF8               	movwf	tblptru,c
 21030  0169F2                     	endif
 21031  0169F2  0008               	tblrd		*
 21032  0169F4  50F5               	movf	tablat,w,c
 21033  0169F6  6E09               	movwf	(btemp+8)^0,c
 21034  0169F8  6A0A               	clrf	(btemp+9)^0,c
 21035  0169FA  500B               	movf	(btemp+10)^0,w,c
 21036  0169FC  2609               	addwf	(btemp+8)^0,f,c
 21037  0169FE  500C               	movf	(btemp+11)^0,w,c
 21038  016A00  220A               	addwfc	(btemp+9)^0,f,c
 21039  016A02  500A               	movf	(btemp+9)^0,w,c
 21040  016A04  E104               	bnz	u8200
 21041  016A06  0E05               	movlw	5
 21042  016A08  5C09               	subwf	(btemp+8)^0,w,c
 21043  016A0A  A0D8               	btfss	status,0,c
 21044  016A0C  D002               	goto	l8930
 21045  016A0E                     u8200:
 21046                           
 21047                           ;stkvar	_atoi$5859 @ sp[(-9)+4]
 21048  016A0E  0EFB               	movlw	-5
 21049  016A10  6AE3               	clrf	plusw1,c
 21050  016A12                     l8930:
 21051                           
 21052                           ;stkvar	_atoi$5859 @ sp[(-9)+4]
 21053  016A12  0EFB               	movlw	-5
 21054  016A14  50E3               	movf	plusw1,w,c
 21055  016A16  6E0B               	movwf	(btemp+10)^0,c
 21056  016A18  6A0C               	clrf	(btemp+11)^0,c
 21057                           
 21058                           ;stkvar	_atoi$5858 @ sp[(-9)+2]
 21059  016A1A  0EF9               	movlw	-7
 21060  016A1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21061  016A22  0EFA               	movlw	-6
 21062  016A24  0060  F033  FFE3   	movff	btemp+11,plusw1
 21063                           
 21064                           ;stkvar	_atoi$5858 @ sp[(-9)+2]
 21065  016A2A  0EF9               	movlw	-7
 21066  016A2C  006F FF8C  F001    	movff	plusw1,btemp
 21067  016A32  0EFA               	movlw	-6
 21068  016A34  50E3               	movf	plusw1,w,c
 21069  016A36  1001               	iorwf	btemp^0,w,c
 21070  016A38  B4D8               	btfsc	status,2,c
 21071  016A3A  D01F               	goto	l8940
 21072  016A3C  D79F               	goto	l8920
 21073  016A3E                     l8936:
 21074  016A3E  0E01               	movlw	1
 21075  016A40  6E0B               	movwf	(btemp+10)^0,c
 21076  016A42  0E00               	movlw	0
 21077  016A44  6E0C               	movwf	(btemp+11)^0,c
 21078                           
 21079                           ;stkvar	_neg @ sp[(-9)+7]
 21080  016A46  0EFE               	movlw	-2
 21081  016A48  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21082  016A4E  0EFF               	movlw	-1
 21083  016A50  0060  F033  FFE3   	movff	btemp+11,plusw1
 21084  016A56                     l8938:
 21085                           
 21086                           ;stkvar	_s @ sp[(-9)+-2]
 21087  016A56  0EF5               	movlw	-11
 21088  016A58  50E3               	movf	plusw1,w,c
 21089  016A5A  0F01               	addlw	1
 21090  016A5C  6E01               	movwf	btemp^0,c
 21091  016A5E  0EF5               	movlw	-11
 21092  016A60  0060  F007  FFE3   	movff	btemp,plusw1
 21093  016A66  6A01               	clrf	btemp^0,c
 21094  016A68  0EF6               	movlw	-10
 21095  016A6A  50E3               	movf	plusw1,w,c
 21096  016A6C  2001               	addwfc	btemp^0,w,c
 21097  016A6E  6E01               	movwf	btemp^0,c
 21098  016A70  0EF6               	movlw	-10
 21099  016A72  0060  F007  FFE3   	movff	btemp,plusw1
 21100  016A78  D053               	goto	l8946
 21101  016A7A                     l8940:
 21102                           
 21103                           ;stkvar	_s @ sp[(-9)+-2]
 21104  016A7A  50E1               	movf	fsr1l,w,c
 21105  016A7C  0FF5               	addlw	-11
 21106  016A7E  6ED9               	movwf	fsr2l,c
 21107  016A80  50E2               	movf	fsr1h,w,c
 21108  016A82  6EDA               	movwf	fsr2h,c
 21109  016A84  0EFF               	movlw	255
 21110  016A86  22DA               	addwfc	fsr2h,f,c
 21111  016A88  006F FF7B FFF6     	movff	postinc2,tblptrl
 21112  016A8E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21113  016A94                     	if	0	;tblptru may be non-zero
 21114  016A94                     	endif
 21115  016A94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21116  016A94  0E00               	movlw	low (__mediumconst shr (0+16))
 21117  016A96  6EF8               	movwf	tblptru,c
 21118  016A98                     	endif
 21119  016A98  0008               	tblrd		*
 21120  016A9A  50F5               	movf	tablat,w,c
 21121  016A9C  6E0B               	movwf	(btemp+10)^0,c
 21122  016A9E  6A0C               	clrf	(btemp+11)^0,c
 21123                           
 21124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21125                           ; Switch size 1, requested type "simple"
 21126                           ; Number of cases is 1, Range of values is 0 to 0
 21127                           ; switch strategies available:
 21128                           ; Name         Instructions Cycles
 21129                           ; simple_byte            4     3 (average)
 21130                           ;	Chosen strategy is simple_byte
 21131  016AA0  500C               	movf	(btemp+11)^0,w,c
 21132  016AA2  0A00               	xorlw	0	; case 0
 21133  016AA4  A4D8               	btfss	status,2,c
 21134  016AA6  D03C               	goto	l8946
 21135                           
 21136                           ; Switch size 1, requested type "simple"
 21137                           ; Number of cases is 2, Range of values is 43 to 45
 21138                           ; switch strategies available:
 21139                           ; Name         Instructions Cycles
 21140                           ; simple_byte            7     4 (average)
 21141                           ;	Chosen strategy is simple_byte
 21142  016AA8  500B               	movf	(btemp+10)^0,w,c
 21143  016AAA  0A2B               	xorlw	43	; case 43
 21144  016AAC  B4D8               	btfsc	status,2,c
 21145  016AAE  D7D3               	goto	l8938
 21146  016AB0  0A06               	xorlw	6	; case 45
 21147  016AB2  B4D8               	btfsc	status,2,c
 21148  016AB4  D7C4               	goto	l8936
 21149  016AB6  D034               	goto	l8946
 21150  016AB8                     l8942:
 21151                           
 21152                           ;stkvar	_n @ sp[(-9)+5]
 21153  016AB8  0EFC               	movlw	-4
 21154  016ABA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21155  016AC0  0EFD               	movlw	-3
 21156  016AC2  006F FF8C  F00C    	movff	plusw1,btemp+11
 21157  016AC8  0E0A               	movlw	10
 21158  016ACA  020B               	mulwf	(btemp+10)^0,c
 21159  016ACC  006F FFCC  F009    	movff	prodl,btemp+8
 21160  016AD2  006F FFD0  F00A    	movff	prodh,btemp+9
 21161  016AD8  020C               	mulwf	(btemp+11)^0,c
 21162  016ADA  50F3               	movf	prodl,w,c
 21163  016ADC  260A               	addwf	(btemp+9)^0,f,c
 21164                           
 21165                           ;stkvar	_s @ sp[(-9)+-2]
 21166  016ADE  50E1               	movf	fsr1l,w,c
 21167  016AE0  0FF5               	addlw	-11
 21168  016AE2  6ED9               	movwf	fsr2l,c
 21169  016AE4  50E2               	movf	fsr1h,w,c
 21170  016AE6  6EDA               	movwf	fsr2h,c
 21171  016AE8  0EFF               	movlw	255
 21172  016AEA  22DA               	addwfc	fsr2h,f,c
 21173  016AEC  006F FF7B FFF6     	movff	postinc2,tblptrl
 21174  016AF2  006F FF77 FFF7     	movff	postdec2,tblptrh
 21175  016AF8                     	if	0	;tblptru may be non-zero
 21176  016AF8                     	endif
 21177  016AF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21178  016AF8  0E00               	movlw	low (__mediumconst shr (0+16))
 21179  016AFA  6EF8               	movwf	tblptru,c
 21180  016AFC                     	endif
 21181  016AFC  0008               	tblrd		*
 21182  016AFE  50F5               	movf	tablat,w,c
 21183  016B00  5E09               	subwf	(btemp+8)^0,f,c
 21184  016B02  0E00               	movlw	0
 21185  016B04  5A0A               	subwfb	(btemp+9)^0,f,c
 21186  016B06  0E30               	movlw	48
 21187  016B08  2609               	addwf	(btemp+8)^0,f,c
 21188  016B0A  0E00               	movlw	0
 21189  016B0C  220A               	addwfc	(btemp+9)^0,f,c
 21190                           
 21191                           ;stkvar	_n @ sp[(-9)+5]
 21192  016B0E  0EFC               	movlw	-4
 21193  016B10  0060  F027  FFE3   	movff	btemp+8,plusw1
 21194  016B16  0EFD               	movlw	-3
 21195  016B18  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21196  016B1E  D79B               	goto	l8938
 21197  016B20                     l8946:
 21198  016B20  0ED0               	movlw	208
 21199  016B22  6E0B               	movwf	(btemp+10)^0,c
 21200  016B24  0EFF               	movlw	255
 21201  016B26  6E0C               	movwf	(btemp+11)^0,c
 21202                           
 21203                           ;stkvar	_s @ sp[(-9)+-2]
 21204  016B28  50E1               	movf	fsr1l,w,c
 21205  016B2A  0FF5               	addlw	-11
 21206  016B2C  6ED9               	movwf	fsr2l,c
 21207  016B2E  50E2               	movf	fsr1h,w,c
 21208  016B30  6EDA               	movwf	fsr2h,c
 21209  016B32  0EFF               	movlw	255
 21210  016B34  22DA               	addwfc	fsr2h,f,c
 21211  016B36  006F FF7B FFF6     	movff	postinc2,tblptrl
 21212  016B3C  006F FF77 FFF7     	movff	postdec2,tblptrh
 21213  016B42                     	if	0	;tblptru may be non-zero
 21214  016B42                     	endif
 21215  016B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21216  016B42  0E00               	movlw	low (__mediumconst shr (0+16))
 21217  016B44  6EF8               	movwf	tblptru,c
 21218  016B46                     	endif
 21219  016B46  0008               	tblrd		*
 21220  016B48  50F5               	movf	tablat,w,c
 21221  016B4A  6E09               	movwf	(btemp+8)^0,c
 21222  016B4C  6A0A               	clrf	(btemp+9)^0,c
 21223  016B4E  500B               	movf	(btemp+10)^0,w,c
 21224  016B50  2609               	addwf	(btemp+8)^0,f,c
 21225  016B52  500C               	movf	(btemp+11)^0,w,c
 21226  016B54  220A               	addwfc	(btemp+9)^0,f,c
 21227  016B56  500A               	movf	(btemp+9)^0,w,c
 21228  016B58  E106               	bnz	u8220
 21229  016B5A  0E0A               	movlw	10
 21230  016B5C  5C09               	subwf	(btemp+8)^0,w,c
 21231  016B5E  B0D8               	btfsc	status,0,c
 21232  016B60  D002               	goto	u8220
 21233  016B62  0E01               	movlw	1
 21234  016B64  D001               	goto	u8230
 21235  016B66                     u8220:
 21236  016B66  0E00               	movlw	0
 21237  016B68                     u8230:
 21238  016B68  6E0B               	movwf	(btemp+10)^0,c
 21239  016B6A  6A0C               	clrf	(btemp+11)^0,c
 21240                           
 21241                           ;stkvar	_atoi$5860 @ sp[(-9)+0]
 21242  016B6C  0EF7               	movlw	-9
 21243  016B6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21244  016B74  0EF8               	movlw	-8
 21245  016B76  0060  F033  FFE3   	movff	btemp+11,plusw1
 21246                           
 21247                           ;stkvar	_atoi$5860 @ sp[(-9)+0]
 21248  016B7C  0EF7               	movlw	-9
 21249  016B7E  006F FF8C  F001    	movff	plusw1,btemp
 21250  016B84  0EF8               	movlw	-8
 21251  016B86  50E3               	movf	plusw1,w,c
 21252  016B88  1001               	iorwf	btemp^0,w,c
 21253  016B8A  A4D8               	btfss	status,2,c
 21254  016B8C  D795               	goto	l8942
 21255                           
 21256                           ;stkvar	_neg @ sp[(-9)+7]
 21257  016B8E  0EFE               	movlw	-2
 21258  016B90  006F FF8C  F001    	movff	plusw1,btemp
 21259  016B96  0EFF               	movlw	-1
 21260  016B98  50E3               	movf	plusw1,w,c
 21261  016B9A  1001               	iorwf	btemp^0,w,c
 21262  016B9C  A4D8               	btfss	status,2,c
 21263  016B9E  D00E               	goto	l8956
 21264                           
 21265                           ;stkvar	_n @ sp[(-9)+5]
 21266  016BA0  0EFC               	movlw	-4
 21267  016BA2  006F FF8C  F001    	movff	plusw1,btemp
 21268  016BA8  1E01               	comf	btemp^0,f,c
 21269  016BAA  0EFD               	movlw	-3
 21270  016BAC  006F FF8C  F002    	movff	plusw1,btemp+1
 21271  016BB2  1E02               	comf	(btemp+1)^0,f,c
 21272  016BB4  2A01               	incf	btemp^0,f,c
 21273  016BB6  B4D8               	btfsc	status,2,c
 21274  016BB8  2A02               	incf	(btemp+1)^0,f,c
 21275  016BBA  D008               	goto	l3055
 21276  016BBC                     l8956:
 21277                           
 21278                           ;stkvar	_n @ sp[(-9)+5]
 21279  016BBC  0EFC               	movlw	-4
 21280  016BBE  006F FF8C  F001    	movff	plusw1,btemp
 21281  016BC4  0EFD               	movlw	-3
 21282  016BC6  006F FF8C  F002    	movff	plusw1,btemp+1
 21283  016BCC                     l3055:
 21284                           
 21285                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 21286  016BCC  0EF5               	movlw	245
 21287  016BCE  26E1               	addwf	fsr1l,f,c
 21288  016BD0  0EFF               	movlw	255
 21289  016BD2  22E2               	addwfc	fsr1h,f,c
 21290  016BD4  0012               	return		;funcret
 21291  016BD6                     __end_of_atoi:
 21292                           	opt callstack 0
 21293                           
 21294 ;; *************** function _isspace *****************
 21295 ;; Defined at:
 21296 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 21297 ;; Parameters:    Size  Location     Type
 21298 ;;  c               2  [STACK] int 
 21299 ;; Auto vars:     Size  Location     Type
 21300 ;;		None
 21301 ;; Return value:  Size  Location     Type
 21302 ;;                  2  [STACK] int 
 21303 ;; Registers used:
 21304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21305 ;; Tracked objects:
 21306 ;;		On entry : 0/0
 21307 ;;		On exit  : 0/0
 21308 ;;		Unchanged: 0/0
 21309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21314 ;;Total ram usage:        0 bytes
 21315 ;; Hardware stack levels used:    1
 21316 ;; Hardware stack levels required when called:   15
 21317 ;; This function calls:
 21318 ;;		Nothing
 21319 ;; This function is called by:
 21320 ;;		_atoi
 21321 ;; This function uses a reentrant model
 21322 ;;
 21323                           
 21324                           	psect	text78
 21325  01A324                     __ptext78:
 21326                           	opt callstack 0
 21327  01A324                     _isspace:
 21328                           	opt callstack 0
 21329                           
 21330                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21331  01A324  52E6               	movf	postinc1,f,c
 21332                           
 21333                           ;stkvar	_isspace$5909 @ sp[(-1)+0]
 21334                           
 21335                           ;incstack = 0
 21336 ;; hardware stack exceeded
 21337  01A326  0EFF               	movlw	-1
 21338  01A328  6AE3               	clrf	plusw1,c
 21339  01A32A  2AE3               	incf	plusw1,f,c
 21340                           
 21341                           ;stkvar	_c @ sp[(-1)+-2]
 21342  01A32C  0EFD               	movlw	-3
 21343  01A32E  006F FF8C  F001    	movff	plusw1,btemp
 21344  01A334  0E20               	movlw	32
 21345  01A336  1801               	xorwf	btemp^0,w,c
 21346  01A338  E104               	bnz	u7050
 21347  01A33A  0EFE               	movlw	-2
 21348  01A33C  50E3               	movf	plusw1,w,c
 21349  01A33E  B4D8               	btfsc	status,2,c
 21350  01A340  D012               	goto	l8314
 21351  01A342                     u7050:
 21352                           
 21353                           ;stkvar	_c @ sp[(-1)+-2]
 21354  01A342  0EFD               	movlw	-3
 21355  01A344  50E3               	movf	plusw1,w,c
 21356  01A346  0FF7               	addlw	247
 21357  01A348  6E0B               	movwf	(btemp+10)^0,c
 21358  01A34A  0EFE               	movlw	-2
 21359  01A34C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21360  01A352  0EFF               	movlw	255
 21361  01A354  220C               	addwfc	(btemp+11)^0,f,c
 21362  01A356  500C               	movf	(btemp+11)^0,w,c
 21363  01A358  E104               	bnz	u7060
 21364  01A35A  0E05               	movlw	5
 21365  01A35C  5C0B               	subwf	(btemp+10)^0,w,c
 21366  01A35E  A0D8               	btfss	status,0,c
 21367  01A360  D002               	goto	l8314
 21368  01A362                     u7060:
 21369                           
 21370                           ;stkvar	_isspace$5909 @ sp[(-1)+0]
 21371  01A362  0EFF               	movlw	-1
 21372  01A364  6AE3               	clrf	plusw1,c
 21373  01A366                     l8314:
 21374                           
 21375                           ;stkvar	_isspace$5909 @ sp[(-1)+0]
 21376  01A366  0EFF               	movlw	-1
 21377  01A368  50E3               	movf	plusw1,w,c
 21378  01A36A  6E01               	movwf	btemp^0,c
 21379  01A36C  6A02               	clrf	(btemp+1)^0,c
 21380                           
 21381                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21382  01A36E  52E5               	movf	postdec1,f,c
 21383  01A370  52E5               	movf	postdec1,f,c
 21384  01A372  52E5               	movf	postdec1,f,c
 21385  01A374  0012               	return		;funcret
 21386  01A376                     __end_of_isspace:
 21387                           	opt callstack 0
 21388                           
 21389 ;; *************** function _isdigit *****************
 21390 ;; Defined at:
 21391 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 21392 ;; Parameters:    Size  Location     Type
 21393 ;;  c               2  [STACK] int 
 21394 ;; Auto vars:     Size  Location     Type
 21395 ;;		None
 21396 ;; Return value:  Size  Location     Type
 21397 ;;                  2  [STACK] int 
 21398 ;; Registers used:
 21399 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21400 ;; Tracked objects:
 21401 ;;		On entry : 0/0
 21402 ;;		On exit  : 0/0
 21403 ;;		Unchanged: 0/0
 21404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21409 ;;Total ram usage:        0 bytes
 21410 ;; Hardware stack levels used:    1
 21411 ;; Hardware stack levels required when called:   15
 21412 ;; This function calls:
 21413 ;;		Nothing
 21414 ;; This function is called by:
 21415 ;;		_vfpfcnvrt
 21416 ;;		_atoi
 21417 ;; This function uses a reentrant model
 21418 ;;
 21419                           
 21420                           	psect	text79
 21421  01AA0A                     __ptext79:
 21422                           	opt callstack 0
 21423  01AA0A                     _isdigit:
 21424                           	opt callstack 0
 21425                           
 21426                           ;stkvar	_c @ sp[(0)+-2]
 21427                           
 21428                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21429                           ;incstack = 0
 21430 ;; hardware stack exceeded
 21431  01AA0A  0EFE               	movlw	-2
 21432  01AA0C  50E3               	movf	plusw1,w,c
 21433  01AA0E  0FD0               	addlw	208
 21434  01AA10  6E0B               	movwf	(btemp+10)^0,c
 21435  01AA12  0EFF               	movlw	-1
 21436  01AA14  006F FF8C  F00C    	movff	plusw1,btemp+11
 21437  01AA1A  0EFF               	movlw	255
 21438  01AA1C  220C               	addwfc	(btemp+11)^0,f,c
 21439  01AA1E  500C               	movf	(btemp+11)^0,w,c
 21440  01AA20  E106               	bnz	u5900
 21441  01AA22  0E0A               	movlw	10
 21442  01AA24  5C0B               	subwf	(btemp+10)^0,w,c
 21443  01AA26  B0D8               	btfsc	status,0,c
 21444  01AA28  D002               	goto	u5900
 21445  01AA2A  0E01               	movlw	1
 21446  01AA2C  D001               	goto	u5910
 21447  01AA2E                     u5900:
 21448  01AA2E  0E00               	movlw	0
 21449  01AA30                     u5910:
 21450  01AA30  6E01               	movwf	btemp^0,c
 21451  01AA32  6A02               	clrf	(btemp+1)^0,c
 21452                           
 21453                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21454  01AA34  52E5               	movf	postdec1,f,c
 21455  01AA36  52E5               	movf	postdec1,f,c
 21456  01AA38  0012               	return		;funcret
 21457  01AA3A                     __end_of_isdigit:
 21458                           	opt callstack 0
 21459                           
 21460 ;; *************** function _set_vterm *****************
 21461 ;; Defined at:
 21462 ;;		line 107 in file "mconfig.c"
 21463 ;; Parameters:    Size  Location     Type
 21464 ;;  vterm           1  [STACK] const unsigned char 
 21465 ;; Auto vars:     Size  Location     Type
 21466 ;;		None
 21467 ;; Return value:  Size  Location     Type
 21468 ;;                  1  [STACK] unsigned char 
 21469 ;; Registers used:
 21470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 21471 ;; Tracked objects:
 21472 ;;		On entry : 0/1
 21473 ;;		On exit  : 0/0
 21474 ;;		Unchanged: 0/0
 21475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21480 ;;Total ram usage:        0 bytes
 21481 ;; Hardware stack levels used:    1
 21482 ;; Hardware stack levels required when called:   15
 21483 ;; This function calls:
 21484 ;;		Nothing
 21485 ;; This function is called by:
 21486 ;;		_main
 21487 ;;		_check_help
 21488 ;; This function uses a reentrant model
 21489 ;;
 21490                           
 21491                           	psect	text80
 21492  01AF1C                     __ptext80:
 21493                           	opt callstack 0
 21494  01AF1C                     _set_vterm:
 21495                           	opt callstack 15
 21496                           
 21497                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 21498                           ;stkvar	_vterm @ sp[(0)+-1]
 21499                           
 21500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21501                           ;incstack = 0
 21502  01AF1C  0EFF               	movlw	-1
 21503  01AF1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21504  01AF24  0E03               	movlw	3
 21505  01AF26  160C               	andwf	(btemp+11)^0,f,c
 21506  01AF28  EE22  F11F         	lfsr	2,_D+288
 21507  01AF2C  50DF               	movf	223,w,c
 21508  01AF2E  180C               	xorwf	(btemp+11)^0,w,c
 21509  01AF30  0BFE               	andlw	-2
 21510  01AF32  180C               	xorwf	(btemp+11)^0,w,c
 21511  01AF34  6EDF               	movwf	223,c
 21512                           
 21513                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21514  01AF36  52E5               	movf	postdec1,f,c
 21515  01AF38  0012               	return		;funcret
 21516  01AF3A                     __end_of_set_vterm:
 21517                           	opt callstack 0
 21518                           
 21519 ;; *************** function _set_temp_display_help *****************
 21520 ;; Defined at:
 21521 ;;		line 211 in file "mconfig.c"
 21522 ;; Parameters:    Size  Location     Type
 21523 ;;  new_response    1  [STACK] const enum E16509
 21524 ;; Auto vars:     Size  Location     Type
 21525 ;;		None
 21526 ;; Return value:  Size  Location     Type
 21527 ;;                  1  [STACK] enum E16509
 21528 ;; Registers used:
 21529 ;;		wreg, fsr1l, fsr1h
 21530 ;; Tracked objects:
 21531 ;;		On entry : 0/2
 21532 ;;		On exit  : 3F/2
 21533 ;;		Unchanged: 0/0
 21534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21539 ;;Total ram usage:        0 bytes
 21540 ;; Hardware stack levels used:    1
 21541 ;; Hardware stack levels required when called:   15
 21542 ;; This function calls:
 21543 ;;		Nothing
 21544 ;; This function is called by:
 21545 ;;		_check_help
 21546 ;; This function uses a reentrant model
 21547 ;;
 21548                           
 21549                           	psect	text81
 21550  01B0BA                     __ptext81:
 21551                           	opt callstack 0
 21552  01B0BA                     _set_temp_display_help:
 21553                           	opt callstack 14
 21554                           
 21555                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 21556                           
 21557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21558                           ;incstack = 0
 21559  01B0BA  0102               	movlb	2	; () banked
 21560  01B0BC  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 21561                           
 21562                           ; BSR set to: 2
 21563                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 21564                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21565  01B0BE  0EFF               	movlw	-1
 21566  01B0C0  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 21567                           
 21568                           ; BSR set to: 2
 21569                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 21570  01B0C6  52E5               	movf	postdec1,f,c
 21571  01B0C8  0012               	return		;funcret
 21572  01B0CA                     __end_of_set_temp_display_help:
 21573                           	opt callstack 0
 21574                           
 21575 ;; *************** function _set_display_info *****************
 21576 ;; Defined at:
 21577 ;;		line 200 in file "mconfig.c"
 21578 ;; Parameters:    Size  Location     Type
 21579 ;;  new_response    1  [STACK] const enum E16509
 21580 ;; Auto vars:     Size  Location     Type
 21581 ;;		None
 21582 ;; Return value:  Size  Location     Type
 21583 ;;                  1  [STACK] enum E16994
 21584 ;; Registers used:
 21585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21586 ;; Tracked objects:
 21587 ;;		On entry : 0/0
 21588 ;;		On exit  : 0/0
 21589 ;;		Unchanged: 0/0
 21590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21595 ;;Total ram usage:        0 bytes
 21596 ;; Hardware stack levels used:    1
 21597 ;; Hardware stack levels required when called:   16
 21598 ;; This function calls:
 21599 ;;		_TimerDone
 21600 ;; This function is called by:
 21601 ;;		_main
 21602 ;;		_check_help
 21603 ;; This function uses a reentrant model
 21604 ;;
 21605                           
 21606                           	psect	text82
 21607  01AF3A                     __ptext82:
 21608                           	opt callstack 0
 21609  01AF3A                     _set_display_info:
 21610                           	opt callstack 14
 21611                           
 21612                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 21613                           
 21614                           ; BSR set to: 2
 21615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21616                           ;incstack = 0
 21617  01AF3A  0E07               	movlw	7
 21618  01AF3C  6EE6               	movwf	postinc1,c
 21619  01AF3E  ECC7  F0D5         	call	_TimerDone	;wreg free
 21620  01AF42  5001               	movf	btemp^0,w,c
 21621  01AF44  B4D8               	btfsc	status,2,c
 21622  01AF46  D006               	goto	l1705
 21623                           
 21624                           ;mconfig.c: 205:   old_info = V.response.info;
 21625  01AF48  0102               	movlb	2	; () banked
 21626  01AF4A  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 21627                           
 21628                           ; BSR set to: 2
 21629                           ;mconfig.c: 206:   V.response.info = new_response_info;
 21630                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21631  01AF4C  0EFF               	movlw	-1
 21632  01AF4E  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 21633  01AF54                     l1705:
 21634                           
 21635                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 21636  01AF54  52E5               	movf	postdec1,f,c
 21637  01AF56  0012               	return		;funcret
 21638  01AF58                     __end_of_set_display_info:
 21639                           	opt callstack 0
 21640                           
 21641 ;; *************** function _mode_lamp_dim *****************
 21642 ;; Defined at:
 21643 ;;		line 13 in file "mconfig.c"
 21644 ;; Parameters:    Size  Location     Type
 21645 ;;  level           2  [STACK] const unsigned short 
 21646 ;; Auto vars:     Size  Location     Type
 21647 ;;		None
 21648 ;; Return value:  Size  Location     Type
 21649 ;;                  1  [STACK] void 
 21650 ;; Registers used:
 21651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21652 ;; Tracked objects:
 21653 ;;		On entry : 0/2
 21654 ;;		On exit  : 0/0
 21655 ;;		Unchanged: 0/0
 21656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21661 ;;Total ram usage:        0 bytes
 21662 ;; Hardware stack levels used:    1
 21663 ;; Hardware stack levels required when called:   16
 21664 ;; This function calls:
 21665 ;;		_PWM8_LoadDutyValue
 21666 ;; This function is called by:
 21667 ;;		_main
 21668 ;;		_check_help
 21669 ;; This function uses a reentrant model
 21670 ;;
 21671                           
 21672                           	psect	text83
 21673  01B002                     __ptext83:
 21674                           	opt callstack 0
 21675  01B002                     _mode_lamp_dim:
 21676                           	opt callstack 14
 21677                           
 21678                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 21679                           ;stkvar	_level @ sp[(0)+-2]
 21680                           
 21681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21682                           ;incstack = 0
 21683  01B002  0EFE               	movlw	-2
 21684  01B004  006F FF8F FFE6     	movff	plusw1,postinc1
 21685  01B00A  006F FF8F FFE6     	movff	plusw1,postinc1
 21686  01B010  EC25  F0D3         	call	_PWM8_LoadDutyValue	;wreg free
 21687                           
 21688                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 21689  01B014  52E5               	movf	postdec1,f,c
 21690  01B016  52E5               	movf	postdec1,f,c
 21691  01B018  0012               	return		;funcret
 21692  01B01A                     __end_of_mode_lamp_dim:
 21693                           	opt callstack 0
 21694                           
 21695 ;; *************** function _mode_lamp_bright *****************
 21696 ;; Defined at:
 21697 ;;		line 18 in file "mconfig.c"
 21698 ;; Parameters:    Size  Location     Type
 21699 ;;		None
 21700 ;; Auto vars:     Size  Location     Type
 21701 ;;		None
 21702 ;; Return value:  Size  Location     Type
 21703 ;;                  1  [STACK] void 
 21704 ;; Registers used:
 21705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21706 ;; Tracked objects:
 21707 ;;		On entry : 0/0
 21708 ;;		On exit  : 0/0
 21709 ;;		Unchanged: 0/0
 21710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21715 ;;Total ram usage:        0 bytes
 21716 ;; Hardware stack levels used:    1
 21717 ;; Hardware stack levels required when called:   16
 21718 ;; This function calls:
 21719 ;;		_PWM8_LoadDutyValue
 21720 ;; This function is called by:
 21721 ;;		_check_help
 21722 ;; This function uses a reentrant model
 21723 ;;
 21724                           
 21725                           	psect	text84
 21726  01B0D8                     __ptext84:
 21727                           	opt callstack 0
 21728  01B0D8                     _mode_lamp_bright:
 21729                           	opt callstack 13
 21730                           
 21731                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 21732                           
 21733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21734                           ;incstack = 0
 21735  01B0D8  0E2C               	movlw	44
 21736  01B0DA  6EE6               	movwf	postinc1,c
 21737  01B0DC  0E01               	movlw	1
 21738  01B0DE  6EE6               	movwf	postinc1,c
 21739  01B0E0  EC25  F0D3         	call	_PWM8_LoadDutyValue	;wreg free
 21740                           
 21741                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21742  01B0E4  0012               	return		;funcret
 21743  01B0E6                     __end_of_mode_lamp_bright:
 21744                           	opt callstack 0
 21745                           
 21746 ;; *************** function _PWM8_LoadDutyValue *****************
 21747 ;; Defined at:
 21748 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 21749 ;; Parameters:    Size  Location     Type
 21750 ;;  dutyValue       2  [STACK] unsigned short 
 21751 ;; Auto vars:     Size  Location     Type
 21752 ;;		None
 21753 ;; Return value:  Size  Location     Type
 21754 ;;                  1  [STACK] void 
 21755 ;; Registers used:
 21756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21757 ;; Tracked objects:
 21758 ;;		On entry : 0/2
 21759 ;;		On exit  : 0/0
 21760 ;;		Unchanged: 0/0
 21761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21766 ;;Total ram usage:        0 bytes
 21767 ;; Hardware stack levels used:    1
 21768 ;; Hardware stack levels required when called:   15
 21769 ;; This function calls:
 21770 ;;		Nothing
 21771 ;; This function is called by:
 21772 ;;		_mode_lamp_dim
 21773 ;;		_mode_lamp_bright
 21774 ;; This function uses a reentrant model
 21775 ;;
 21776                           
 21777                           	psect	text85
 21778  01A64A                     __ptext85:
 21779                           	opt callstack 0
 21780  01A64A                     _PWM8_LoadDutyValue:
 21781                           	opt callstack 14
 21782                           
 21783                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21784                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21785                           
 21786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21787                           ;incstack = 0
 21788  01A64A  0EFE               	movlw	-2
 21789  01A64C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21790  01A652  0EFF               	movlw	-1
 21791  01A654  006F FF8C  F00C    	movff	plusw1,btemp+11
 21792  01A65A  90D8               	bcf	status,0,c
 21793  01A65C  320C               	rrcf	(btemp+11)^0,f,c
 21794  01A65E  320B               	rrcf	(btemp+10)^0,f,c
 21795  01A660  90D8               	bcf	status,0,c
 21796  01A662  320C               	rrcf	(btemp+11)^0,f,c
 21797  01A664  320B               	rrcf	(btemp+10)^0,f,c
 21798  01A666  500B               	movf	(btemp+10)^0,w,c
 21799  01A668  6E61               	movwf	97,c	;volatile
 21800                           
 21801                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 21802                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21803  01A66A  0EFE               	movlw	-2
 21804  01A66C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21805  01A672  0E03               	movlw	3
 21806  01A674  160C               	andwf	(btemp+11)^0,f,c
 21807  01A676  0E06               	movlw	6
 21808  01A678  6E01               	movwf	btemp^0,c
 21809  01A67A                     u8705:
 21810  01A67A  90D8               	bcf	status,0,c
 21811  01A67C  360C               	rlcf	(btemp+11)^0,f,c
 21812  01A67E  2E01               	decfsz	btemp^0,f,c
 21813  01A680  D7FC               	goto	u8705
 21814  01A682  500C               	movf	(btemp+11)^0,w,c
 21815  01A684  6E60               	movwf	96,c	;volatile
 21816                           
 21817                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 21818  01A686  52E5               	movf	postdec1,f,c
 21819  01A688  52E5               	movf	postdec1,f,c
 21820  01A68A  0012               	return		;funcret
 21821  01A68C                     __end_of_PWM8_LoadDutyValue:
 21822                           	opt callstack 0
 21823                           
 21824 ;; *************** function _help_button *****************
 21825 ;; Defined at:
 21826 ;;		line 26 in file "mconfig.c"
 21827 ;; Parameters:    Size  Location     Type
 21828 ;;		None
 21829 ;; Auto vars:     Size  Location     Type
 21830 ;;		None
 21831 ;; Return value:  Size  Location     Type
 21832 ;;                  1  [STACK] _Bool 
 21833 ;; Registers used:
 21834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21835 ;; Tracked objects:
 21836 ;;		On entry : 0/2
 21837 ;;		On exit  : 0/0
 21838 ;;		Unchanged: 0/0
 21839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21844 ;;Total ram usage:        0 bytes
 21845 ;; Hardware stack levels used:    1
 21846 ;; Hardware stack levels required when called:   16
 21847 ;; This function calls:
 21848 ;;		_StartTimer
 21849 ;;		_TimerDone
 21850 ;; This function is called by:
 21851 ;;		_check_help
 21852 ;; This function uses a reentrant model
 21853 ;;
 21854                           
 21855                           	psect	text86
 21856  01A804                     __ptext86:
 21857                           	opt callstack 0
 21858  01A804                     _help_button:
 21859                           	opt callstack 13
 21860                           
 21861                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 21862                           
 21863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21864                           ;incstack = 0
 21865  01A804  B0CB               	btfsc	203,0,c	;volatile
 21866  01A806  D00C               	goto	l1648
 21867                           
 21868                           ;mconfig.c: 29:   V.help = 1;
 21869  01A808  0102               	movlb	2	; () banked
 21870  01A80A  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 21871                           
 21872                           ; BSR set to: 2
 21873                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 21874  01A80C  0E08               	movlw	8
 21875  01A80E  6EE6               	movwf	postinc1,c
 21876  01A810  ECC7  F0D5         	call	_TimerDone	;wreg free
 21877  01A814  5001               	movf	btemp^0,w,c
 21878  01A816  B4D8               	btfsc	status,2,c
 21879  01A818  D003               	goto	l1648
 21880                           
 21881                           ;mconfig.c: 31:    return 1;
 21882  01A81A  0E01               	movlw	1
 21883  01A81C  6E01               	movwf	btemp^0,c
 21884  01A81E  0012               	return	
 21885  01A820                     l1648:
 21886                           
 21887                           ;mconfig.c: 34:  if (!V.help)
 21888  01A820  0102               	movlb	2	; () banked
 21889  01A822  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 21890  01A824  D008               	goto	l9992
 21891                           
 21892                           ; BSR set to: 2
 21893                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 21894  01A826  0E2C               	movlw	44
 21895  01A828  6EE6               	movwf	postinc1,c
 21896  01A82A  0E01               	movlw	1
 21897  01A82C  6EE6               	movwf	postinc1,c
 21898  01A82E  0E08               	movlw	8
 21899  01A830  6EE6               	movwf	postinc1,c
 21900  01A832  EC46  F0D3         	call	_StartTimer	;wreg free
 21901  01A836                     l9992:
 21902                           
 21903                           ;mconfig.c: 37:  return 0;
 21904  01A836  0E00               	movlw	0
 21905  01A838  6E01               	movwf	btemp^0,c
 21906                           
 21907                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 21908  01A83A  0012               	return		;funcret
 21909  01A83C                     __end_of_help_button:
 21910                           	opt callstack 0
 21911                           
 21912 ;; *************** function _TimerDone *****************
 21913 ;; Defined at:
 21914 ;;		line 20 in file "timers.c"
 21915 ;; Parameters:    Size  Location     Type
 21916 ;;  timer           1  [STACK] const unsigned char 
 21917 ;; Auto vars:     Size  Location     Type
 21918 ;;		None
 21919 ;; Return value:  Size  Location     Type
 21920 ;;                  1  [STACK] _Bool 
 21921 ;; Registers used:
 21922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21923 ;; Tracked objects:
 21924 ;;		On entry : 0/0
 21925 ;;		On exit  : 0/0
 21926 ;;		Unchanged: 0/0
 21927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21932 ;;Total ram usage:        0 bytes
 21933 ;; Hardware stack levels used:    1
 21934 ;; Hardware stack levels required when called:   15
 21935 ;; This function calls:
 21936 ;;		Nothing
 21937 ;; This function is called by:
 21938 ;;		_main
 21939 ;;		_WaitMs
 21940 ;;		_help_button
 21941 ;;		_check_help
 21942 ;;		_set_display_info
 21943 ;;		_update_adc_result
 21944 ;; This function uses a reentrant model
 21945 ;;
 21946                           
 21947                           	psect	text87
 21948  01AB8E                     __ptext87:
 21949                           	opt callstack 0
 21950  01AB8E                     _TimerDone:
 21951                           	opt callstack 14
 21952                           
 21953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21954                           ;incstack = 0
 21955  01AB8E  0004               	clrwdt		;# 
 21956                           
 21957                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 21958                           ;stkvar	_timer @ sp[(0)+-1]
 21959  01AB90  0EFF               	movlw	-1
 21960  01AB92  50E3               	movf	plusw1,w,c
 21961  01AB94  0D02               	mullw	2
 21962  01AB96  0EE5               	movlw	low _tickCount
 21963  01AB98  24F3               	addwf	243,w,c
 21964  01AB9A  6ED9               	movwf	fsr2l,c
 21965  01AB9C  0E02               	movlw	high _tickCount
 21966  01AB9E  20F4               	addwfc	prodh,w,c
 21967  01ABA0  6EDA               	movwf	fsr2h,c
 21968  01ABA2  50DE               	movf	postinc2,w,c
 21969  01ABA4  10DE               	iorwf	postinc2,w,c
 21970  01ABA6  A4D8               	btfss	status,2,c
 21971  01ABA8  D002               	goto	l9226
 21972                           
 21973                           ;timers.c: 24:   return 1;
 21974  01ABAA  0E01               	movlw	1
 21975  01ABAC  D001               	goto	L22
 21976  01ABAE                     l9226:
 21977                           
 21978                           ;timers.c: 26:  return 0;
 21979  01ABAE  0E00               	movlw	0
 21980  01ABB0                     L22:
 21981  01ABB0  6E01               	movwf	btemp^0,c
 21982                           
 21983                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21984  01ABB2  52E5               	movf	postdec1,f,c
 21985  01ABB4  0012               	return		;funcret
 21986  01ABB6                     __end_of_TimerDone:
 21987                           	opt callstack 0
 21988                           
 21989 ;; *************** function _StartTimer *****************
 21990 ;; Defined at:
 21991 ;;		line 12 in file "timers.c"
 21992 ;; Parameters:    Size  Location     Type
 21993 ;;  timer           1  [STACK] const unsigned char 
 21994 ;;  count           2  [STACK] const unsigned short 
 21995 ;; Auto vars:     Size  Location     Type
 21996 ;;		None
 21997 ;; Return value:  Size  Location     Type
 21998 ;;                  1  [STACK] void 
 21999 ;; Registers used:
 22000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22001 ;; Tracked objects:
 22002 ;;		On entry : 0/0
 22003 ;;		On exit  : 0/0
 22004 ;;		Unchanged: 0/0
 22005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22010 ;;Total ram usage:        0 bytes
 22011 ;; Hardware stack levels used:    1
 22012 ;; Hardware stack levels required when called:   15
 22013 ;; This function calls:
 22014 ;;		Nothing
 22015 ;; This function is called by:
 22016 ;;		_main
 22017 ;;		_WaitMs
 22018 ;;		_help_button
 22019 ;;		_check_help
 22020 ;;		_update_adc_result
 22021 ;;		_calc_bsoc
 22022 ;; This function uses a reentrant model
 22023 ;;
 22024                           
 22025                           	psect	text88
 22026  01A68C                     __ptext88:
 22027                           	opt callstack 0
 22028  01A68C                     _StartTimer:
 22029                           	opt callstack 0
 22030                           
 22031                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22032                           ;stkvar	_count @ sp[(0)+-3]
 22033                           
 22034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22035                           ;incstack = 0
 22036 ;; hardware stack exceeded
 22037  01A68C  0EFD               	movlw	-3
 22038  01A68E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22039  01A694  0EFE               	movlw	-2
 22040  01A696  006F FF8C  F00C    	movff	plusw1,btemp+11
 22041  01A69C  90D8               	bcf	status,0,c
 22042  01A69E  340B               	rlcf	(btemp+10)^0,w,c
 22043  01A6A0  6E09               	movwf	(btemp+8)^0,c
 22044  01A6A2  340C               	rlcf	(btemp+11)^0,w,c
 22045  01A6A4  6E0A               	movwf	(btemp+9)^0,c
 22046                           
 22047                           ;stkvar	_timer @ sp[(0)+-1]
 22048  01A6A6  0EFF               	movlw	-1
 22049  01A6A8  50E3               	movf	plusw1,w,c
 22050  01A6AA  0D02               	mullw	2
 22051  01A6AC  0EE5               	movlw	low _tickCount
 22052  01A6AE  24F3               	addwf	243,w,c
 22053  01A6B0  6ED9               	movwf	fsr2l,c
 22054  01A6B2  0E02               	movlw	high _tickCount
 22055  01A6B4  20F4               	addwfc	prodh,w,c
 22056  01A6B6  6EDA               	movwf	fsr2h,c
 22057  01A6B8  0060  F027  FFDE   	movff	btemp+8,postinc2
 22058  01A6BE  0060  F02B  FFDD   	movff	btemp+9,postdec2
 22059                           
 22060                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22061  01A6C4  52E5               	movf	postdec1,f,c
 22062  01A6C6  52E5               	movf	postdec1,f,c
 22063  01A6C8  52E5               	movf	postdec1,f,c
 22064  01A6CA  0012               	return		;funcret
 22065  01A6CC                     __end_of_StartTimer:
 22066                           	opt callstack 0
 22067                           
 22068 ;; *************** function _display_info *****************
 22069 ;; Defined at:
 22070 ;;		line 190 in file "mconfig.c"
 22071 ;; Parameters:    Size  Location     Type
 22072 ;;		None
 22073 ;; Auto vars:     Size  Location     Type
 22074 ;;		None
 22075 ;; Return value:  Size  Location     Type
 22076 ;;                  1  [STACK] enum E16509
 22077 ;; Registers used:
 22078 ;;		btemp
 22079 ;; Tracked objects:
 22080 ;;		On entry : 0/2
 22081 ;;		On exit  : 0/0
 22082 ;;		Unchanged: 0/0
 22083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22088 ;;Total ram usage:        0 bytes
 22089 ;; Hardware stack levels used:    1
 22090 ;; Hardware stack levels required when called:   15
 22091 ;; This function calls:
 22092 ;;		Nothing
 22093 ;; This function is called by:
 22094 ;;		_check_help
 22095 ;; This function uses a reentrant model
 22096 ;;
 22097                           
 22098                           	psect	text89
 22099  01B14E                     __ptext89:
 22100                           	opt callstack 0
 22101  01B14E                     _display_info:
 22102                           	opt callstack 14
 22103                           
 22104                           ;mconfig.c: 192:  return V.response.info;
 22105                           
 22106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22107                           ;incstack = 0
 22108  01B14E  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 22109                           
 22110                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22111  01B154  0012               	return		;funcret
 22112  01B156                     __end_of_display_info:
 22113                           	opt callstack 0
 22114                           
 22115 ;; *************** function _display_help *****************
 22116 ;; Defined at:
 22117 ;;		line 195 in file "mconfig.c"
 22118 ;; Parameters:    Size  Location     Type
 22119 ;;		None
 22120 ;; Auto vars:     Size  Location     Type
 22121 ;;		None
 22122 ;; Return value:  Size  Location     Type
 22123 ;;                  1  [STACK] enum E16509
 22124 ;; Registers used:
 22125 ;;		btemp
 22126 ;; Tracked objects:
 22127 ;;		On entry : 3F/2
 22128 ;;		On exit  : 0/0
 22129 ;;		Unchanged: 0/0
 22130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22135 ;;Total ram usage:        0 bytes
 22136 ;; Hardware stack levels used:    1
 22137 ;; Hardware stack levels required when called:   15
 22138 ;; This function calls:
 22139 ;;		Nothing
 22140 ;; This function is called by:
 22141 ;;		_check_help
 22142 ;; This function uses a reentrant model
 22143 ;;
 22144                           
 22145                           	psect	text90
 22146  01B156                     __ptext90:
 22147                           	opt callstack 0
 22148  01B156                     _display_help:
 22149                           	opt callstack 14
 22150                           
 22151                           ;mconfig.c: 197:  return V.response.help_temp;
 22152                           
 22153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22154                           ;incstack = 0
 22155  01B156  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 22156                           
 22157                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22158  01B15C  0012               	return		;funcret
 22159  01B15E                     __end_of_display_help:
 22160                           	opt callstack 0
 22161                           
 22162 ;; *************** function _check_enter_button *****************
 22163 ;; Defined at:
 22164 ;;		line 42 in file "hid.c"
 22165 ;; Parameters:    Size  Location     Type
 22166 ;;  h               1  [STACK] PTR struct H_data
 22167 ;;		 -> H(7), 
 22168 ;; Auto vars:     Size  Location     Type
 22169 ;;		None
 22170 ;; Return value:  Size  Location     Type
 22171 ;;                  1  [STACK] _Bool 
 22172 ;; Registers used:
 22173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22174 ;; Tracked objects:
 22175 ;;		On entry : 0/0
 22176 ;;		On exit  : 0/0
 22177 ;;		Unchanged: 0/0
 22178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22183 ;;Total ram usage:        0 bytes
 22184 ;; Hardware stack levels used:    1
 22185 ;; Hardware stack levels required when called:   15
 22186 ;; This function calls:
 22187 ;;		Nothing
 22188 ;; This function is called by:
 22189 ;;		_main
 22190 ;; This function uses a reentrant model
 22191 ;;
 22192                           
 22193                           	psect	text91
 22194  01A6CC                     __ptext91:
 22195                           	opt callstack 0
 22196  01A6CC                     _check_enter_button:
 22197                           	opt callstack 15
 22198                           
 22199                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 22200                           ;stkvar	_h @ sp[(0)+-1]
 22201                           
 22202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22203                           ;incstack = 0
 22204  01A6CC  0EFF               	movlw	-1
 22205  01A6CE  50E3               	movf	plusw1,w,c
 22206  01A6D0  6ED9               	movwf	fsr2l,c
 22207  01A6D2  6ADA               	clrf	fsr2h,c
 22208  01A6D4  0E04               	movlw	4
 22209  01A6D6  26D9               	addwf	fsr2l,f,c
 22210  01A6D8  50DF               	movf	indf2,w,c
 22211  01A6DA  A4D8               	btfss	status,2,c
 22212  01A6DC  D013               	goto	l10596
 22213                           
 22214                           ;stkvar	_h @ sp[(0)+-1]
 22215  01A6DE  0EFF               	movlw	-1
 22216  01A6E0  50E3               	movf	plusw1,w,c
 22217  01A6E2  6ED9               	movwf	fsr2l,c
 22218  01A6E4  6ADA               	clrf	fsr2h,c
 22219  01A6E6  0E05               	movlw	5
 22220  01A6E8  26D9               	addwf	fsr2l,f,c
 22221  01A6EA  50DF               	movf	indf2,w,c
 22222  01A6EC  A4D8               	btfss	status,2,c
 22223  01A6EE  D00A               	goto	l10596
 22224                           
 22225                           ;hid.c: 45:   h->wait_enter = 1;
 22226                           ;stkvar	_h @ sp[(0)+-1]
 22227  01A6F0  0EFF               	movlw	-1
 22228  01A6F2  50E3               	movf	plusw1,w,c
 22229  01A6F4  6ED9               	movwf	fsr2l,c
 22230  01A6F6  6ADA               	clrf	fsr2h,c
 22231  01A6F8  0E04               	movlw	4
 22232  01A6FA  26D9               	addwf	fsr2l,f,c
 22233  01A6FC  0E01               	movlw	1
 22234  01A6FE  6EDF               	movwf	indf2,c
 22235                           
 22236                           ;hid.c: 46:   return 1;
 22237  01A700  0E01               	movlw	1
 22238  01A702  D001               	goto	L23
 22239  01A704                     l10596:
 22240                           
 22241                           ;hid.c: 48:  return 0;
 22242  01A704  0E00               	movlw	0
 22243  01A706                     L23:
 22244  01A706  6E01               	movwf	btemp^0,c
 22245                           
 22246                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 22247  01A708  52E5               	movf	postdec1,f,c
 22248  01A70A  0012               	return		;funcret
 22249  01A70C                     __end_of_check_enter_button:
 22250                           	opt callstack 0
 22251                           
 22252 ;; *************** function _calc_ror_data *****************
 22253 ;; Defined at:
 22254 ;;		line 101 in file "mbmc.c"
 22255 ;; Parameters:    Size  Location     Type
 22256 ;;		None
 22257 ;; Auto vars:     Size  Location     Type
 22258 ;;		None
 22259 ;; Return value:  Size  Location     Type
 22260 ;;                  1  [STACK] void 
 22261 ;; Registers used:
 22262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22263 ;; Tracked objects:
 22264 ;;		On entry : 0/39
 22265 ;;		On exit  : 0/0
 22266 ;;		Unchanged: 0/0
 22267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22272 ;;Total ram usage:        0 bytes
 22273 ;; Hardware stack levels used:    1
 22274 ;; Hardware stack levels required when called:   18
 22275 ;; This function calls:
 22276 ;;		___flge
 22277 ;;		___flsub
 22278 ;;		_conv_raw_result
 22279 ;;		_fabsf
 22280 ;; This function is called by:
 22281 ;;		_main
 22282 ;; This function uses a reentrant model
 22283 ;;
 22284                           
 22285                           	psect	text92
 22286  017D04                     __ptext92:
 22287                           	opt callstack 0
 22288  017D04                     _calc_ror_data:
 22289                           	opt callstack 12
 22290                           
 22291                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 22292                           
 22293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22294                           ;incstack = 0
 22295  017D04  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 22296  017D0A  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 22297  017D10  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 22298  017D16  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 22299  017D1C  0E00               	movlw	0
 22300  017D1E  6EE6               	movwf	postinc1,c
 22301  017D20  0E00               	movlw	0
 22302  017D22  6EE6               	movwf	postinc1,c
 22303  017D24  EC02  F0A5         	call	_conv_raw_result	;wreg free
 22304  017D28  0060  F007  FFE6   	movff	btemp,postinc1
 22305  017D2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22306  017D34  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22307  017D3A  0060  F013  FFE6   	movff	btemp+3,postinc1
 22308  017D40  EC77  F0D2         	call	___flsub	;wreg free
 22309  017D44  0060  F007  FFE6   	movff	btemp,postinc1
 22310  017D4A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22311  017D50  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22312  017D56  0060  F013  FFE6   	movff	btemp+3,postinc1
 22313  017D5C  EC30  F0CB         	call	_fabsf	;wreg free
 22314  017D60  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 22315  017D66  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 22316  017D6C  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 22317  017D72  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 22318                           
 22319                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 22320  017D78  0E00               	movlw	0
 22321  017D7A  6EE6               	movwf	postinc1,c
 22322  017D7C  0E00               	movlw	0
 22323  017D7E  6EE6               	movwf	postinc1,c
 22324  017D80  EC02  F0A5         	call	_conv_raw_result	;wreg free
 22325  017D84  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 22326  017D8A  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 22327  017D90  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 22328  017D96  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 22329                           
 22330                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 22331  017D9C  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 22332  017DA2  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 22333  017DA8  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 22334  017DAE  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 22335  017DB4  0E00               	movlw	0
 22336  017DB6  6EE6               	movwf	postinc1,c
 22337  017DB8  0E04               	movlw	4
 22338  017DBA  6EE6               	movwf	postinc1,c
 22339  017DBC  EC02  F0A5         	call	_conv_raw_result	;wreg free
 22340  017DC0  0060  F007  FFE6   	movff	btemp,postinc1
 22341  017DC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22342  017DCC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22343  017DD2  0060  F013  FFE6   	movff	btemp+3,postinc1
 22344  017DD8  EC77  F0D2         	call	___flsub	;wreg free
 22345  017DDC  0060  F007  FFE6   	movff	btemp,postinc1
 22346  017DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22347  017DE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22348  017DEE  0060  F013  FFE6   	movff	btemp+3,postinc1
 22349  017DF4  EC30  F0CB         	call	_fabsf	;wreg free
 22350  017DF8  0060  F004  F168   	movff	btemp,_C+104	;volatile
 22351  017DFE  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 22352  017E04  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 22353  017E0A  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 22354                           
 22355                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 22356  017E10  0EE7               	movlw	231
 22357  017E12  6EE6               	movwf	postinc1,c
 22358  017E14  0E1D               	movlw	29
 22359  017E16  6EE6               	movwf	postinc1,c
 22360  017E18  0EA7               	movlw	167
 22361  017E1A  6EE6               	movwf	postinc1,c
 22362  017E1C  0E3B               	movlw	59
 22363  017E1E  6EE6               	movwf	postinc1,c
 22364  017E20  0060  F5A3  FFE6   	movff	_C+104,postinc1
 22365  017E26  0060  F5A7  FFE6   	movff	_C+105,postinc1
 22366  017E2C  0060  F5AB  FFE6   	movff	_C+106,postinc1
 22367  017E32  0060  F5AF  FFE6   	movff	_C+107,postinc1
 22368  017E38  ECAD  F0C0         	call	___flge	;wreg free
 22369  017E3C  B001               	btfsc	btemp& (0+255),0,c
 22370  017E3E  D009               	goto	l10388
 22371                           
 22372                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 22373  017E40  0EB0               	movlw	176
 22374  017E42  0101               	movlb	1	; () banked
 22375  017E44  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 22376  017E46  0E03               	movlw	3
 22377  017E48  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 22378  017E4A  0E67               	movlw	103
 22379  017E4C  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 22380  017E4E  0E3C               	movlw	60
 22381  017E50  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 22382  017E52                     l10388:
 22383                           
 22384                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 22385  017E52  0E00               	movlw	0
 22386  017E54  6EE6               	movwf	postinc1,c
 22387  017E56  0E04               	movlw	4
 22388  017E58  6EE6               	movwf	postinc1,c
 22389  017E5A  EC02  F0A5         	call	_conv_raw_result	;wreg free
 22390  017E5E  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 22391  017E64  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 22392  017E6A  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 22393  017E70  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 22394                           
 22395                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 22396  017E76  0012               	return		;funcret
 22397  017E78                     __end_of_calc_ror_data:
 22398                           	opt callstack 0
 22399                           
 22400 ;; *************** function _fabsf *****************
 22401 ;; Defined at:
 22402 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 22403 ;; Parameters:    Size  Location     Type
 22404 ;;  x               4  [STACK] float 
 22405 ;; Auto vars:     Size  Location     Type
 22406 ;;  u               4  [STACK] struct .
 22407 ;; Return value:  Size  Location     Type
 22408 ;;                  4  [STACK] float 
 22409 ;; Registers used:
 22410 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 22411 ;; Tracked objects:
 22412 ;;		On entry : 0/0
 22413 ;;		On exit  : 0/0
 22414 ;;		Unchanged: 0/0
 22415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22420 ;;Total ram usage:        0 bytes
 22421 ;; Hardware stack levels used:    1
 22422 ;; Hardware stack levels required when called:   15
 22423 ;; This function calls:
 22424 ;;		Nothing
 22425 ;; This function is called by:
 22426 ;;		_calc_ror_data
 22427 ;;		_esr_check
 22428 ;; This function uses a reentrant model
 22429 ;;
 22430                           
 22431                           	psect	text93
 22432  019660                     __ptext93:
 22433                           	opt callstack 0
 22434  019660                     _fabsf:
 22435                           	opt callstack 0
 22436                           
 22437                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22438  019660  52E6               	movf	postinc1,f,c
 22439  019662  52E6               	movf	postinc1,f,c
 22440  019664  52E6               	movf	postinc1,f,c
 22441  019666  52E6               	movf	postinc1,f,c
 22442                           
 22443                           ;incstack = 0
 22444  019668  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 22445  01966E  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 22446  019674  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 22447  01967A  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 22448                           
 22449                           ;stkvar	_u @ sp[(-4)+0]
 22450  019680  0EFC               	movlw	-4
 22451  019682  0060  F027  FFE3   	movff	btemp+8,plusw1
 22452  019688  0EFD               	movlw	-3
 22453  01968A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22454  019690  0EFE               	movlw	-2
 22455  019692  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22456  019698  0EFF               	movlw	-1
 22457  01969A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22458                           
 22459                           ;stkvar	_x @ sp[(-4)+-4]
 22460  0196A0  0EF8               	movlw	-8
 22461  0196A2  006F FF8C  F009    	movff	plusw1,btemp+8
 22462  0196A8  0EF9               	movlw	-7
 22463  0196AA  006F FF8C  F00A    	movff	plusw1,btemp+9
 22464  0196B0  0EFA               	movlw	-6
 22465  0196B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 22466  0196B8  0EFB               	movlw	-5
 22467  0196BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 22468                           
 22469                           ;stkvar	_u @ sp[(-4)+0]
 22470  0196C0  0EFC               	movlw	-4
 22471  0196C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 22472  0196C8  0EFD               	movlw	-3
 22473  0196CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22474  0196D0  0EFE               	movlw	-2
 22475  0196D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22476  0196D8  0EFF               	movlw	-1
 22477  0196DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 22478                           
 22479                           ;stkvar	_u @ sp[(-4)+0]
 22480  0196E0  0EFF               	movlw	-1
 22481  0196E2  9EE3               	bcf	plusw1,7,c
 22482                           
 22483                           ;stkvar	_u @ sp[(-4)+0]
 22484  0196E4  0EFC               	movlw	-4
 22485  0196E6  006F FF8C  F001    	movff	plusw1,btemp
 22486  0196EC  0EFD               	movlw	-3
 22487  0196EE  006F FF8C  F002    	movff	plusw1,btemp+1
 22488  0196F4  0EFE               	movlw	-2
 22489  0196F6  006F FF8C  F003    	movff	plusw1,btemp+2
 22490  0196FC  0EFF               	movlw	-1
 22491  0196FE  006F FF8C  F004    	movff	plusw1,btemp+3
 22492                           
 22493                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22494  019704  0EF8               	movlw	248
 22495  019706  26E1               	addwf	fsr1l,f,c
 22496  019708  0EFF               	movlw	255
 22497  01970A  22E2               	addwfc	fsr1h,f,c
 22498  01970C  0012               	return		;funcret
 22499  01970E                     __end_of_fabsf:
 22500                           	opt callstack 0
 22501                           
 22502 ;; *************** function _conv_raw_result *****************
 22503 ;; Defined at:
 22504 ;;		line 95 in file "daq.c"
 22505 ;; Parameters:    Size  Location     Type
 22506 ;;  chan            1  [STACK] const enum E16581
 22507 ;;  to_what         1  [STACK] const enum E16643
 22508 ;; Auto vars:     Size  Location     Type
 22509 ;;		None
 22510 ;; Return value:  Size  Location     Type
 22511 ;;                  4  [STACK] float 
 22512 ;; Registers used:
 22513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22514 ;; Tracked objects:
 22515 ;;		On entry : 0/39
 22516 ;;		On exit  : 0/0
 22517 ;;		Unchanged: 0/0
 22518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22523 ;;Total ram usage:        0 bytes
 22524 ;; Hardware stack levels used:    1
 22525 ;; Hardware stack levels required when called:   17
 22526 ;; This function calls:
 22527 ;;		___fldiv
 22528 ;;		___flmul
 22529 ;;		___flsub
 22530 ;;		___xxtofl
 22531 ;;		_get_raw_result
 22532 ;;		_nanf
 22533 ;; This function is called by:
 22534 ;;		_main
 22535 ;;		_convert_adc_data
 22536 ;;		_calc_ror_data
 22537 ;;		_init_bsoc
 22538 ;;		_esr_check
 22539 ;; This function uses a reentrant model
 22540 ;;
 22541                           
 22542                           	psect	text94
 22543  014A04                     __ptext94:
 22544                           	opt callstack 0
 22545  014A04                     _conv_raw_result:
 22546                           	opt callstack 12
 22547                           
 22548                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 22549                           
 22550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22551                           ;incstack = 0
 22552  014A04  D242               	goto	l9922
 22553  014A06                     l9868:
 22554                           
 22555                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 22556                           ;stkvar	_chan @ sp[(0)+-1]
 22557  014A06  0EFF               	movlw	-1
 22558  014A08  006F FF8C  F00C    	movff	plusw1,btemp+11
 22559  014A0E  0E77               	movlw	119
 22560  014A10  6E09               	movwf	(btemp+8)^0,c
 22561  014A12  0E3C               	movlw	60
 22562  014A14  6E0A               	movwf	(btemp+9)^0,c
 22563  014A16  2A0C               	incf	(btemp+11)^0,f,c
 22564  014A18  D003               	goto	u8964
 22565  014A1A                     u8965:
 22566  014A1A  340A               	rlcf	(btemp+9)^0,w,c
 22567  014A1C  320A               	rrcf	(btemp+9)^0,f,c
 22568  014A1E  3209               	rrcf	(btemp+8)^0,f,c
 22569  014A20                     u8964:
 22570  014A20  2E0C               	decfsz	(btemp+11)^0,f,c
 22571  014A22  D7FB               	goto	u8965
 22572  014A24  B009               	btfsc	(btemp+8)^0,0,c
 22573  014A26  D007               	goto	l9874
 22574                           
 22575                           ;daq.c: 101:    return nanf("");
 22576  014A28  0E7F               	movlw	low (STR_55+84)
 22577  014A2A  6EE6               	movwf	postinc1,c
 22578  014A2C  0EFD               	movlw	high (STR_55+84)
 22579  014A2E  6EE6               	movwf	postinc1,c
 22580  014A30  EC81  F0D0         	call	_nanf	;wreg free
 22581  014A34  D23A               	goto	l1767
 22582  014A36                     l9874:
 22583                           
 22584                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 22585                           ;stkvar	_chan @ sp[(0)+-1]
 22586  014A36  0EFF               	movlw	-1
 22587  014A38  006F FF8C  F00C    	movff	plusw1,btemp+11
 22588  014A3E  0E03               	movlw	3
 22589  014A40  6E09               	movwf	(btemp+8)^0,c
 22590  014A42  0E00               	movlw	0
 22591  014A44  6E0A               	movwf	(btemp+9)^0,c
 22592  014A46  2A0C               	incf	(btemp+11)^0,f,c
 22593  014A48  D003               	goto	u8984
 22594  014A4A                     u8985:
 22595  014A4A  340A               	rlcf	(btemp+9)^0,w,c
 22596  014A4C  320A               	rrcf	(btemp+9)^0,f,c
 22597  014A4E  3209               	rrcf	(btemp+8)^0,f,c
 22598  014A50                     u8984:
 22599  014A50  2E0C               	decfsz	(btemp+11)^0,f,c
 22600  014A52  D7FB               	goto	u8985
 22601  014A54  A009               	btfss	(btemp+8)^0,0,c
 22602  014A56  D0EB               	goto	l9888
 22603                           
 22604                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 22605                           ;stkvar	_chan @ sp[(0)+-1]
 22606  014A58  0EFF               	movlw	-1
 22607  014A5A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22608  014A60  0E01               	movlw	1
 22609  014A62  6E09               	movwf	(btemp+8)^0,c
 22610  014A64  0E00               	movlw	0
 22611  014A66  6E0A               	movwf	(btemp+9)^0,c
 22612  014A68  2A0C               	incf	(btemp+11)^0,f,c
 22613  014A6A  D003               	goto	u9004
 22614  014A6C                     u9005:
 22615  014A6C  340A               	rlcf	(btemp+9)^0,w,c
 22616  014A6E  320A               	rrcf	(btemp+9)^0,f,c
 22617  014A70  3209               	rrcf	(btemp+8)^0,f,c
 22618  014A72                     u9004:
 22619  014A72  2E0C               	decfsz	(btemp+11)^0,f,c
 22620  014A74  D7FB               	goto	u9005
 22621  014A76  A009               	btfss	(btemp+8)^0,0,c
 22622  014A78  D06D               	goto	l9884
 22623                           
 22624                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 22625  014A7A  0E7B               	movlw	123
 22626  014A7C  6EE6               	movwf	postinc1,c
 22627  014A7E  0E14               	movlw	20
 22628  014A80  6EE6               	movwf	postinc1,c
 22629  014A82  0EAE               	movlw	174
 22630  014A84  6EE6               	movwf	postinc1,c
 22631  014A86  0E3D               	movlw	61
 22632  014A88  6EE6               	movwf	postinc1,c
 22633  014A8A  0060  F390  F009   	movff	_R+32,btemp+8	;volatile
 22634  014A90  0060  F394  F00A   	movff	_R+33,btemp+9	;volatile
 22635  014A96  0E00               	movlw	0
 22636  014A98  BE0A               	btfsc	(btemp+9)^0,7,c
 22637  014A9A  0EFF               	movlw	255
 22638  014A9C  6E0B               	movwf	(btemp+10)^0,c
 22639  014A9E  6E0C               	movwf	(btemp+11)^0,c
 22640  014AA0  0060  F027  FFE6   	movff	btemp+8,postinc1
 22641  014AA6  0060  F02B  FFE6   	movff	btemp+9,postinc1
 22642  014AAC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22643  014AB2  0060  F033  FFE6   	movff	btemp+11,postinc1
 22644  014AB8  0E01               	movlw	1
 22645  014ABA  6EE6               	movwf	postinc1,c
 22646  014ABC  EC24  F0B9         	call	___xxtofl	;wreg free
 22647  014AC0  0060  F007  FFE6   	movff	btemp,postinc1
 22648  014AC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22649  014ACC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22650  014AD2  0060  F013  FFE6   	movff	btemp+3,postinc1
 22651                           
 22652                           ;stkvar	_chan @ sp[(-8)+-1]
 22653  014AD8  0EF7               	movlw	-9
 22654  014ADA  50E3               	movf	plusw1,w,c
 22655  014ADC  6EE6               	movwf	postinc1,c
 22656  014ADE  ECAC  F0D7         	call	_get_raw_result	;wreg free
 22657  014AE2  0060  F004  F00B   	movff	btemp,btemp+10
 22658  014AE8  0060  F008  F00C   	movff	btemp+1,btemp+11
 22659  014AEE  500B               	movf	(btemp+10)^0,w,c
 22660  014AF0  6E05               	movwf	(btemp+4)^0,c
 22661  014AF2  500C               	movf	(btemp+11)^0,w,c
 22662  014AF4  6E06               	movwf	(btemp+5)^0,c
 22663  014AF6  6A07               	clrf	(btemp+6)^0,c
 22664  014AF8  6A08               	clrf	(btemp+7)^0,c
 22665  014AFA  0060  F017  FFE6   	movff	btemp+4,postinc1
 22666  014B00  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22667  014B06  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22668  014B0C  0060  F023  FFE6   	movff	btemp+7,postinc1
 22669  014B12  0E00               	movlw	0
 22670  014B14  6EE6               	movwf	postinc1,c
 22671  014B16  EC24  F0B9         	call	___xxtofl	;wreg free
 22672  014B1A  0060  F007  FFE6   	movff	btemp,postinc1
 22673  014B20  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22674  014B26  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22675  014B2C  0060  F013  FFE6   	movff	btemp+3,postinc1
 22676  014B32  EC77  F0D2         	call	___flsub	;wreg free
 22677  014B36  0060  F007  FFE6   	movff	btemp,postinc1
 22678  014B3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22679  014B42  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22680  014B48  0060  F013  FFE6   	movff	btemp+3,postinc1
 22681  014B4E  EC03  F097         	call	___flmul	;wreg free
 22682  014B52  D1AB               	goto	l1767
 22683  014B54                     l9884:
 22684                           
 22685                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 22686  014B54  0E29               	movlw	41
 22687  014B56  6EE6               	movwf	postinc1,c
 22688  014B58  0E5C               	movlw	92
 22689  014B5A  6EE6               	movwf	postinc1,c
 22690  014B5C  0E0F               	movlw	15
 22691  014B5E  6EE6               	movwf	postinc1,c
 22692  014B60  0E3D               	movlw	61
 22693  014B62  6EE6               	movwf	postinc1,c
 22694  014B64  0060  F398  F009   	movff	_R+34,btemp+8	;volatile
 22695  014B6A  0060  F39C  F00A   	movff	_R+35,btemp+9	;volatile
 22696  014B70  0E00               	movlw	0
 22697  014B72  BE0A               	btfsc	(btemp+9)^0,7,c
 22698  014B74  0EFF               	movlw	255
 22699  014B76  6E0B               	movwf	(btemp+10)^0,c
 22700  014B78  6E0C               	movwf	(btemp+11)^0,c
 22701  014B7A  0060  F027  FFE6   	movff	btemp+8,postinc1
 22702  014B80  0060  F02B  FFE6   	movff	btemp+9,postinc1
 22703  014B86  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22704  014B8C  0060  F033  FFE6   	movff	btemp+11,postinc1
 22705  014B92  0E01               	movlw	1
 22706  014B94  6EE6               	movwf	postinc1,c
 22707  014B96  EC24  F0B9         	call	___xxtofl	;wreg free
 22708  014B9A  0060  F007  FFE6   	movff	btemp,postinc1
 22709  014BA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22710  014BA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22711  014BAC  0060  F013  FFE6   	movff	btemp+3,postinc1
 22712                           
 22713                           ;stkvar	_chan @ sp[(-8)+-1]
 22714  014BB2  0EF7               	movlw	-9
 22715  014BB4  50E3               	movf	plusw1,w,c
 22716  014BB6  6EE6               	movwf	postinc1,c
 22717  014BB8  ECAC  F0D7         	call	_get_raw_result	;wreg free
 22718  014BBC  0060  F004  F00B   	movff	btemp,btemp+10
 22719  014BC2  0060  F008  F00C   	movff	btemp+1,btemp+11
 22720  014BC8  500B               	movf	(btemp+10)^0,w,c
 22721  014BCA  6E05               	movwf	(btemp+4)^0,c
 22722  014BCC  500C               	movf	(btemp+11)^0,w,c
 22723  014BCE  6E06               	movwf	(btemp+5)^0,c
 22724  014BD0  6A07               	clrf	(btemp+6)^0,c
 22725  014BD2  6A08               	clrf	(btemp+7)^0,c
 22726  014BD4  0060  F017  FFE6   	movff	btemp+4,postinc1
 22727  014BDA  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22728  014BE0  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22729  014BE6  0060  F023  FFE6   	movff	btemp+7,postinc1
 22730  014BEC  0E00               	movlw	0
 22731  014BEE  6EE6               	movwf	postinc1,c
 22732  014BF0  EC24  F0B9         	call	___xxtofl	;wreg free
 22733  014BF4  0060  F007  FFE6   	movff	btemp,postinc1
 22734  014BFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22735  014C00  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22736  014C06  0060  F013  FFE6   	movff	btemp+3,postinc1
 22737  014C0C  EC77  F0D2         	call	___flsub	;wreg free
 22738  014C10  0060  F007  FFE6   	movff	btemp,postinc1
 22739  014C16  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22740  014C1C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22741  014C22  0060  F013  FFE6   	movff	btemp+3,postinc1
 22742  014C28  EC03  F097         	call	___flmul	;wreg free
 22743  014C2C  D13E               	goto	l1767
 22744  014C2E                     l9888:
 22745                           
 22746                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 22747                           ;stkvar	_chan @ sp[(0)+-1]
 22748  014C2E  0EFF               	movlw	-1
 22749  014C30  006F FF8C  F00C    	movff	plusw1,btemp+11
 22750  014C36  0E00               	movlw	0
 22751  014C38  6E09               	movwf	(btemp+8)^0,c
 22752  014C3A  0E08               	movlw	8
 22753  014C3C  6E0A               	movwf	(btemp+9)^0,c
 22754  014C3E  2A0C               	incf	(btemp+11)^0,f,c
 22755  014C40  D003               	goto	u9024
 22756  014C42                     u9025:
 22757  014C42  340A               	rlcf	(btemp+9)^0,w,c
 22758  014C44  320A               	rrcf	(btemp+9)^0,f,c
 22759  014C46  3209               	rrcf	(btemp+8)^0,f,c
 22760  014C48                     u9024:
 22761  014C48  2E0C               	decfsz	(btemp+11)^0,f,c
 22762  014C4A  D7FB               	goto	u9025
 22763  014C4C  A009               	btfss	(btemp+8)^0,0,c
 22764  014C4E  D008               	goto	l9896
 22765                           
 22766                           ;daq.c: 111:     return 25.0;
 22767  014C50  0E00               	movlw	0
 22768  014C52  6E01               	movwf	btemp^0,c
 22769  014C54  0E00               	movlw	0
 22770  014C56  6E02               	movwf	(btemp+1)^0,c
 22771  014C58  0EC8               	movlw	200
 22772  014C5A  6E03               	movwf	(btemp+2)^0,c
 22773  014C5C  0E41               	movlw	65
 22774  014C5E  D113               	goto	L24
 22775  014C60                     l9896:
 22776                           
 22777                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 22778  014C60  0E00               	movlw	0
 22779  014C62  6EE6               	movwf	postinc1,c
 22780  014C64  0E00               	movlw	0
 22781  014C66  6EE6               	movwf	postinc1,c
 22782  014C68  0E7A               	movlw	122
 22783  014C6A  6EE6               	movwf	postinc1,c
 22784  014C6C  0E44               	movlw	68
 22785  014C6E  6EE6               	movwf	postinc1,c
 22786  014C70  0E61               	movlw	97
 22787  014C72  6EE6               	movwf	postinc1,c
 22788  014C74  0E03               	movlw	3
 22789  014C76  6EE6               	movwf	postinc1,c
 22790  014C78  0E84               	movlw	132
 22791  014C7A  6EE6               	movwf	postinc1,c
 22792  014C7C  0E40               	movlw	64
 22793  014C7E  6EE6               	movwf	postinc1,c
 22794                           
 22795                           ;stkvar	_chan @ sp[(-8)+-1]
 22796  014C80  0EF7               	movlw	-9
 22797  014C82  50E3               	movf	plusw1,w,c
 22798  014C84  6EE6               	movwf	postinc1,c
 22799  014C86  ECAC  F0D7         	call	_get_raw_result	;wreg free
 22800  014C8A  0060  F004  F00B   	movff	btemp,btemp+10
 22801  014C90  0060  F008  F00C   	movff	btemp+1,btemp+11
 22802  014C96  500B               	movf	(btemp+10)^0,w,c
 22803  014C98  6E05               	movwf	(btemp+4)^0,c
 22804  014C9A  500C               	movf	(btemp+11)^0,w,c
 22805  014C9C  6E06               	movwf	(btemp+5)^0,c
 22806  014C9E  6A07               	clrf	(btemp+6)^0,c
 22807  014CA0  6A08               	clrf	(btemp+7)^0,c
 22808  014CA2  0060  F017  FFE6   	movff	btemp+4,postinc1
 22809  014CA8  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22810  014CAE  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22811  014CB4  0060  F023  FFE6   	movff	btemp+7,postinc1
 22812  014CBA  0E00               	movlw	0
 22813  014CBC  6EE6               	movwf	postinc1,c
 22814  014CBE  EC24  F0B9         	call	___xxtofl	;wreg free
 22815  014CC2  0060  F007  FFE6   	movff	btemp,postinc1
 22816  014CC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22817  014CCE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22818  014CD4  0060  F013  FFE6   	movff	btemp+3,postinc1
 22819  014CDA  EC03  F097         	call	___flmul	;wreg free
 22820  014CDE  0060  F007  FFE6   	movff	btemp,postinc1
 22821  014CE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22822  014CEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22823  014CF0  0060  F013  FFE6   	movff	btemp+3,postinc1
 22824  014CF6  EC45  F0A2         	call	___fldiv	;wreg free
 22825  014CFA  D0D7               	goto	l1767
 22826  014CFC                     l9900:
 22827                           
 22828                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 22829                           ;stkvar	_chan @ sp[(0)+-1]
 22830  014CFC  0EFF               	movlw	-1
 22831  014CFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22832  014D04  0E03               	movlw	3
 22833  014D06  6E09               	movwf	(btemp+8)^0,c
 22834  014D08  0E00               	movlw	0
 22835  014D0A  6E0A               	movwf	(btemp+9)^0,c
 22836  014D0C  2A0C               	incf	(btemp+11)^0,f,c
 22837  014D0E  D003               	goto	u9044
 22838  014D10                     u9045:
 22839  014D10  340A               	rlcf	(btemp+9)^0,w,c
 22840  014D12  320A               	rrcf	(btemp+9)^0,f,c
 22841  014D14  3209               	rrcf	(btemp+8)^0,f,c
 22842  014D16                     u9044:
 22843  014D16  2E0C               	decfsz	(btemp+11)^0,f,c
 22844  014D18  D7FB               	goto	u9045
 22845  014D1A  B009               	btfsc	(btemp+8)^0,0,c
 22846  014D1C  D011               	goto	u9070
 22847                           
 22848                           ;stkvar	_chan @ sp[(0)+-1]
 22849  014D1E  0EFF               	movlw	-1
 22850  014D20  006F FF8C  F00C    	movff	plusw1,btemp+11
 22851  014D26  0E00               	movlw	0
 22852  014D28  6E09               	movwf	(btemp+8)^0,c
 22853  014D2A  0E08               	movlw	8
 22854  014D2C  6E0A               	movwf	(btemp+9)^0,c
 22855  014D2E  2A0C               	incf	(btemp+11)^0,f,c
 22856  014D30  D003               	goto	u9064
 22857  014D32                     u9065:
 22858  014D32  340A               	rlcf	(btemp+9)^0,w,c
 22859  014D34  320A               	rrcf	(btemp+9)^0,f,c
 22860  014D36  3209               	rrcf	(btemp+8)^0,f,c
 22861  014D38                     u9064:
 22862  014D38  2E0C               	decfsz	(btemp+11)^0,f,c
 22863  014D3A  D7FB               	goto	u9065
 22864  014D3C  A009               	btfss	(btemp+8)^0,0,c
 22865  014D3E  D04E               	goto	l9908
 22866  014D40                     u9070:
 22867                           
 22868                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 22869  014D40  0E00               	movlw	0
 22870  014D42  6EE6               	movwf	postinc1,c
 22871  014D44  0E00               	movlw	0
 22872  014D46  6EE6               	movwf	postinc1,c
 22873  014D48  0E7A               	movlw	122
 22874  014D4A  6EE6               	movwf	postinc1,c
 22875  014D4C  0E44               	movlw	68
 22876  014D4E  6EE6               	movwf	postinc1,c
 22877  014D50  0E00               	movlw	0
 22878  014D52  6EE6               	movwf	postinc1,c
 22879  014D54  0E00               	movlw	0
 22880  014D56  6EE6               	movwf	postinc1,c
 22881  014D58  0E20               	movlw	32
 22882  014D5A  6EE6               	movwf	postinc1,c
 22883  014D5C  0E3F               	movlw	63
 22884  014D5E  6EE6               	movwf	postinc1,c
 22885                           
 22886                           ;stkvar	_chan @ sp[(-8)+-1]
 22887  014D60  0EF7               	movlw	-9
 22888  014D62  50E3               	movf	plusw1,w,c
 22889  014D64  6EE6               	movwf	postinc1,c
 22890  014D66  ECAC  F0D7         	call	_get_raw_result	;wreg free
 22891  014D6A  0060  F004  F00B   	movff	btemp,btemp+10
 22892  014D70  0060  F008  F00C   	movff	btemp+1,btemp+11
 22893  014D76  500B               	movf	(btemp+10)^0,w,c
 22894  014D78  6E05               	movwf	(btemp+4)^0,c
 22895  014D7A  500C               	movf	(btemp+11)^0,w,c
 22896  014D7C  6E06               	movwf	(btemp+5)^0,c
 22897  014D7E  6A07               	clrf	(btemp+6)^0,c
 22898  014D80  6A08               	clrf	(btemp+7)^0,c
 22899  014D82  0060  F017  FFE6   	movff	btemp+4,postinc1
 22900  014D88  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22901  014D8E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22902  014D94  0060  F023  FFE6   	movff	btemp+7,postinc1
 22903  014D9A  0E00               	movlw	0
 22904  014D9C  6EE6               	movwf	postinc1,c
 22905  014D9E  EC24  F0B9         	call	___xxtofl	;wreg free
 22906  014DA2  0060  F007  FFE6   	movff	btemp,postinc1
 22907  014DA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22908  014DAE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22909  014DB4  0060  F013  FFE6   	movff	btemp+3,postinc1
 22910  014DBA  EC03  F097         	call	___flmul	;wreg free
 22911  014DBE  0060  F007  FFE6   	movff	btemp,postinc1
 22912  014DC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22913  014DCA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22914  014DD0  0060  F013  FFE6   	movff	btemp+3,postinc1
 22915  014DD6  EC45  F0A2         	call	___fldiv	;wreg free
 22916  014DDA  D067               	goto	l1767
 22917  014DDC                     l9908:
 22918                           
 22919                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 22920  014DDC  0E00               	movlw	0
 22921  014DDE  6EE6               	movwf	postinc1,c
 22922  014DE0  0E00               	movlw	0
 22923  014DE2  6EE6               	movwf	postinc1,c
 22924  014DE4  0E7A               	movlw	122
 22925  014DE6  6EE6               	movwf	postinc1,c
 22926  014DE8  0E44               	movlw	68
 22927  014DEA  6EE6               	movwf	postinc1,c
 22928  014DEC  0E61               	movlw	97
 22929  014DEE  6EE6               	movwf	postinc1,c
 22930  014DF0  0E03               	movlw	3
 22931  014DF2  6EE6               	movwf	postinc1,c
 22932  014DF4  0E84               	movlw	132
 22933  014DF6  6EE6               	movwf	postinc1,c
 22934  014DF8  0E40               	movlw	64
 22935  014DFA  6EE6               	movwf	postinc1,c
 22936                           
 22937                           ;stkvar	_chan @ sp[(-8)+-1]
 22938  014DFC  0EF7               	movlw	-9
 22939  014DFE  50E3               	movf	plusw1,w,c
 22940  014E00  6EE6               	movwf	postinc1,c
 22941  014E02  ECAC  F0D7         	call	_get_raw_result	;wreg free
 22942  014E06  0060  F004  F00B   	movff	btemp,btemp+10
 22943  014E0C  0060  F008  F00C   	movff	btemp+1,btemp+11
 22944  014E12  500B               	movf	(btemp+10)^0,w,c
 22945  014E14  6E05               	movwf	(btemp+4)^0,c
 22946  014E16  500C               	movf	(btemp+11)^0,w,c
 22947  014E18  6E06               	movwf	(btemp+5)^0,c
 22948  014E1A  6A07               	clrf	(btemp+6)^0,c
 22949  014E1C  6A08               	clrf	(btemp+7)^0,c
 22950  014E1E  0060  F017  FFE6   	movff	btemp+4,postinc1
 22951  014E24  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22952  014E2A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22953  014E30  0060  F023  FFE6   	movff	btemp+7,postinc1
 22954  014E36  0E00               	movlw	0
 22955  014E38  6EE6               	movwf	postinc1,c
 22956  014E3A  EC24  F0B9         	call	___xxtofl	;wreg free
 22957  014E3E  0060  F007  FFE6   	movff	btemp,postinc1
 22958  014E44  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22959  014E4A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22960  014E50  0060  F013  FFE6   	movff	btemp+3,postinc1
 22961  014E56  EC03  F097         	call	___flmul	;wreg free
 22962  014E5A  0060  F007  FFE6   	movff	btemp,postinc1
 22963  014E60  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22964  014E66  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22965  014E6C  0060  F013  FFE6   	movff	btemp+3,postinc1
 22966  014E72  EC45  F0A2         	call	___fldiv	;wreg free
 22967  014E76  D019               	goto	l1767
 22968  014E78                     l9914:
 22969                           
 22970                           ;daq.c: 124:   return 0.0;
 22971  014E78  0E00               	movlw	0
 22972  014E7A  6E01               	movwf	btemp^0,c
 22973  014E7C  0E00               	movlw	0
 22974  014E7E  6E02               	movwf	(btemp+1)^0,c
 22975  014E80  0E00               	movlw	0
 22976  014E82  6E03               	movwf	(btemp+2)^0,c
 22977  014E84  0E00               	movlw	0
 22978  014E86                     L24:
 22979  014E86  6E04               	movwf	(btemp+3)^0,c
 22980  014E88  D010               	goto	l1767
 22981  014E8A                     l9922:
 22982                           
 22983                           ;stkvar	_to_what @ sp[(0)+-2]
 22984  014E8A  0EFE               	movlw	-2
 22985  014E8C  50E3               	movf	plusw1,w,c
 22986  014E8E  6E0B               	movwf	(btemp+10)^0,c
 22987  014E90  6A0C               	clrf	(btemp+11)^0,c
 22988                           
 22989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22990                           ; Switch size 1, requested type "simple"
 22991                           ; Number of cases is 1, Range of values is 0 to 0
 22992                           ; switch strategies available:
 22993                           ; Name         Instructions Cycles
 22994                           ; simple_byte            4     3 (average)
 22995                           ;	Chosen strategy is simple_byte
 22996  014E92  500C               	movf	(btemp+11)^0,w,c
 22997  014E94  0A00               	xorlw	0	; case 0
 22998  014E96  A4D8               	btfss	status,2,c
 22999  014E98  D7EF               	goto	l9914
 23000                           
 23001                           ; Switch size 1, requested type "simple"
 23002                           ; Number of cases is 2, Range of values is 0 to 1
 23003                           ; switch strategies available:
 23004                           ; Name         Instructions Cycles
 23005                           ; simple_byte            7     4 (average)
 23006                           ;	Chosen strategy is simple_byte
 23007  014E9A  500B               	movf	(btemp+10)^0,w,c
 23008  014E9C  0A00               	xorlw	0	; case 0
 23009  014E9E  B4D8               	btfsc	status,2,c
 23010  014EA0  D5B2               	goto	l9868
 23011  014EA2  0A01               	xorlw	1	; case 1
 23012  014EA4  B4D8               	btfsc	status,2,c
 23013  014EA6  D72A               	goto	l9900
 23014  014EA8  D7E7               	goto	l9914
 23015  014EAA                     l1767:
 23016                           
 23017                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23018  014EAA  52E5               	movf	postdec1,f,c
 23019  014EAC  52E5               	movf	postdec1,f,c
 23020  014EAE  0012               	return		;funcret
 23021  014EB0                     __end_of_conv_raw_result:
 23022                           	opt callstack 0
 23023                           
 23024 ;; *************** function _nanf *****************
 23025 ;; Defined at:
 23026 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23027 ;; Parameters:    Size  Location     Type
 23028 ;;  s               2  [STACK] PTR const unsigned char 
 23029 ;;		 -> STR_92(1), STR_54(1), 
 23030 ;; Auto vars:     Size  Location     Type
 23031 ;;  u               4  [STACK] struct .
 23032 ;; Return value:  Size  Location     Type
 23033 ;;                  4  [STACK] float 
 23034 ;; Registers used:
 23035 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23036 ;; Tracked objects:
 23037 ;;		On entry : 0/39
 23038 ;;		On exit  : 0/0
 23039 ;;		Unchanged: 0/0
 23040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23045 ;;Total ram usage:        0 bytes
 23046 ;; Hardware stack levels used:    1
 23047 ;; Hardware stack levels required when called:   15
 23048 ;; This function calls:
 23049 ;;		Nothing
 23050 ;; This function is called by:
 23051 ;;		_conv_raw_result
 23052 ;; This function uses a reentrant model
 23053 ;;
 23054                           
 23055                           	psect	text95
 23056  01A102                     __ptext95:
 23057                           	opt callstack 0
 23058  01A102                     _nanf:
 23059                           	opt callstack 0
 23060                           
 23061                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23062  01A102  52E6               	movf	postinc1,f,c
 23063  01A104  52E6               	movf	postinc1,f,c
 23064  01A106  52E6               	movf	postinc1,f,c
 23065  01A108  52E6               	movf	postinc1,f,c
 23066                           
 23067                           ;incstack = 0
 23068  01A10A  0EFF               	movlw	255
 23069  01A10C  6E09               	movwf	(btemp+8)^0,c
 23070  01A10E  0EFF               	movlw	255
 23071  01A110  6E0A               	movwf	(btemp+9)^0,c
 23072  01A112  0EFF               	movlw	255
 23073  01A114  6E0B               	movwf	(btemp+10)^0,c
 23074  01A116  0E7F               	movlw	127
 23075  01A118  6E0C               	movwf	(btemp+11)^0,c
 23076                           
 23077                           ;stkvar	_u @ sp[(-4)+0]
 23078  01A11A  0EFC               	movlw	-4
 23079  01A11C  0060  F027  FFE3   	movff	btemp+8,plusw1
 23080  01A122  0EFD               	movlw	-3
 23081  01A124  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23082  01A12A  0EFE               	movlw	-2
 23083  01A12C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23084  01A132  0EFF               	movlw	-1
 23085  01A134  0060  F033  FFE3   	movff	btemp+11,plusw1
 23086                           
 23087                           ;stkvar	_u @ sp[(-4)+0]
 23088  01A13A  0EFC               	movlw	-4
 23089  01A13C  006F FF8C  F001    	movff	plusw1,btemp
 23090  01A142  0EFD               	movlw	-3
 23091  01A144  006F FF8C  F002    	movff	plusw1,btemp+1
 23092  01A14A  0EFE               	movlw	-2
 23093  01A14C  006F FF8C  F003    	movff	plusw1,btemp+2
 23094  01A152  0EFF               	movlw	-1
 23095  01A154  006F FF8C  F004    	movff	plusw1,btemp+3
 23096                           
 23097                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23098  01A15A  0EFA               	movlw	250
 23099  01A15C  26E1               	addwf	fsr1l,f,c
 23100  01A15E  0EFF               	movlw	255
 23101  01A160  22E2               	addwfc	fsr1h,f,c
 23102  01A162  0012               	return		;funcret
 23103  01A164                     __end_of_nanf:
 23104                           	opt callstack 0
 23105                           
 23106 ;; *************** function _get_raw_result *****************
 23107 ;; Defined at:
 23108 ;;		line 87 in file "daq.c"
 23109 ;; Parameters:    Size  Location     Type
 23110 ;;  index           1  [STACK] const enum E16581
 23111 ;; Auto vars:     Size  Location     Type
 23112 ;;		None
 23113 ;; Return value:  Size  Location     Type
 23114 ;;                  2  [STACK] unsigned short 
 23115 ;; Registers used:
 23116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23117 ;; Tracked objects:
 23118 ;;		On entry : 0/2
 23119 ;;		On exit  : 0/0
 23120 ;;		Unchanged: 0/0
 23121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23126 ;;Total ram usage:        0 bytes
 23127 ;; Hardware stack levels used:    1
 23128 ;; Hardware stack levels required when called:   15
 23129 ;; This function calls:
 23130 ;;		Nothing
 23131 ;; This function is called by:
 23132 ;;		_main
 23133 ;;		_conv_raw_result
 23134 ;; This function uses a reentrant model
 23135 ;;
 23136                           
 23137                           	psect	text96
 23138  01AF58                     __ptext96:
 23139                           	opt callstack 0
 23140  01AF58                     _get_raw_result:
 23141                           	opt callstack 13
 23142                           
 23143                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 23144                           ;stkvar	_index @ sp[(0)+-1]
 23145                           
 23146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23147                           ;incstack = 0
 23148  01AF58  0EFF               	movlw	-1
 23149  01AF5A  50E3               	movf	plusw1,w,c
 23150  01AF5C  0D02               	mullw	2
 23151  01AF5E  50F3               	movf	243,w,c
 23152  01AF60  0FC4               	addlw	low _R
 23153  01AF62  6ED9               	movwf	fsr2l,c
 23154  01AF64  6ADA               	clrf	fsr2h,c
 23155  01AF66  006F FF78  F001    	movff	postinc2,btemp
 23156  01AF6C  006F FF74  F002    	movff	postdec2,btemp+1
 23157                           
 23158                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 23159  01AF72  52E5               	movf	postdec1,f,c
 23160  01AF74  0012               	return		;funcret
 23161  01AF76                     __end_of_get_raw_result:
 23162                           	opt callstack 0
 23163                           
 23164 ;; *************** function ___xxtofl *****************
 23165 ;; Defined at:
 23166 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 23167 ;; Parameters:    Size  Location     Type
 23168 ;;  sign            1  [STACK] unsigned char 
 23169 ;;  val             4  [STACK] long 
 23170 ;; Auto vars:     Size  Location     Type
 23171 ;;  arg             4  [STACK] unsigned long 
 23172 ;;  exp             1  [STACK] unsigned char 
 23173 ;; Return value:  Size  Location     Type
 23174 ;;                  4  [STACK] unsigned char 
 23175 ;; Registers used:
 23176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23177 ;; Tracked objects:
 23178 ;;		On entry : 0/1
 23179 ;;		On exit  : 0/0
 23180 ;;		Unchanged: 0/0
 23181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23186 ;;Total ram usage:        0 bytes
 23187 ;; Hardware stack levels used:    1
 23188 ;; Hardware stack levels required when called:   15
 23189 ;; This function calls:
 23190 ;;		Nothing
 23191 ;; This function is called by:
 23192 ;;		_conv_raw_result
 23193 ;;		_init_bsoc
 23194 ;; This function uses a reentrant model
 23195 ;;
 23196                           
 23197                           	psect	text97
 23198  017248                     __ptext97:
 23199                           	opt callstack 0
 23200  017248                     ___xxtofl:
 23201                           	opt callstack 0
 23202                           
 23203                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23204  017248  0E05               	movlw	5
 23205  01724A  26E1               	addwf	fsr1l,f,c
 23206  01724C  0E00               	movlw	0
 23207  01724E  22E2               	addwfc	fsr1h,f,c
 23208                           
 23209                           ;stkvar	_sign @ sp[(-5)+-1]
 23210                           
 23211                           ;incstack = 0
 23212  017250  0EFA               	movlw	-6
 23213  017252  50E3               	movf	plusw1,w,c
 23214  017254  B4D8               	btfsc	status,2,c
 23215  017256  D01D               	goto	l9404
 23216                           
 23217                           ;stkvar	_val @ sp[(-5)+-5]
 23218  017258  0EF9               	movlw	-7
 23219  01725A  AEE3               	btfss	plusw1,7,c
 23220  01725C  D01A               	goto	l9404
 23221                           
 23222                           ;stkvar	_val @ sp[(-5)+-5]
 23223  01725E  0EF6               	movlw	-10
 23224  017260  006F FF8C  F009    	movff	plusw1,btemp+8
 23225  017266  0EF7               	movlw	-9
 23226  017268  006F FF8C  F00A    	movff	plusw1,btemp+9
 23227  01726E  0EF8               	movlw	-8
 23228  017270  006F FF8C  F00B    	movff	plusw1,btemp+10
 23229  017276  0EF9               	movlw	-7
 23230  017278  006F FF8C  F00C    	movff	plusw1,btemp+11
 23231  01727E  1E09               	comf	(btemp+8)^0,f,c
 23232  017280  1E0A               	comf	(btemp+9)^0,f,c
 23233  017282  1E0B               	comf	(btemp+10)^0,f,c
 23234  017284  1E0C               	comf	(btemp+11)^0,f,c
 23235  017286  2A09               	incf	(btemp+8)^0,f,c
 23236  017288  0E00               	movlw	0
 23237  01728A  220A               	addwfc	(btemp+9)^0,f,c
 23238  01728C  220B               	addwfc	(btemp+10)^0,f,c
 23239  01728E  220C               	addwfc	(btemp+11)^0,f,c
 23240  017290  D010               	goto	L25
 23241  017292                     l9404:
 23242                           
 23243                           ;stkvar	_val @ sp[(-5)+-5]
 23244  017292  0EF6               	movlw	-10
 23245  017294  006F FF8C  F009    	movff	plusw1,btemp+8
 23246  01729A  0EF7               	movlw	-9
 23247  01729C  006F FF8C  F00A    	movff	plusw1,btemp+9
 23248  0172A2  0EF8               	movlw	-8
 23249  0172A4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23250  0172AA  0EF9               	movlw	-7
 23251  0172AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23252  0172B2                     L25:
 23253                           
 23254                           ;stkvar	_arg @ sp[(-5)+0]
 23255  0172B2  0EFB               	movlw	-5
 23256  0172B4  0060  F027  FFE3   	movff	btemp+8,plusw1
 23257  0172BA  0EFC               	movlw	-4
 23258  0172BC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23259  0172C2  0EFD               	movlw	-3
 23260  0172C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23261  0172CA  0EFE               	movlw	-2
 23262  0172CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23263                           
 23264                           ;stkvar	_val @ sp[(-5)+-5]
 23265  0172D2  0EF6               	movlw	-10
 23266  0172D4  50E3               	movf	plusw1,w,c
 23267  0172D6  E113               	bnz	l9412
 23268  0172D8  0EF7               	movlw	-9
 23269  0172DA  50E3               	movf	plusw1,w,c
 23270  0172DC  E110               	bnz	l9412
 23271  0172DE  0EF8               	movlw	-8
 23272  0172E0  50E3               	movf	plusw1,w,c
 23273  0172E2  E10D               	bnz	l9412
 23274  0172E4  0EF9               	movlw	-7
 23275  0172E6  50E3               	movf	plusw1,w,c
 23276  0172E8  A4D8               	btfss	status,2,c
 23277  0172EA  D009               	goto	l9412
 23278  0172EC  0E00               	movlw	0
 23279  0172EE  6E01               	movwf	btemp^0,c
 23280  0172F0  0E00               	movlw	0
 23281  0172F2  6E02               	movwf	(btemp+1)^0,c
 23282  0172F4  0E00               	movlw	0
 23283  0172F6  6E03               	movwf	(btemp+2)^0,c
 23284  0172F8  0E00               	movlw	0
 23285  0172FA  6E04               	movwf	(btemp+3)^0,c
 23286  0172FC  D0A2               	goto	l2993
 23287  0172FE                     l9412:
 23288  0172FE  0E96               	movlw	150
 23289  017300  6E0C               	movwf	(btemp+11)^0,c
 23290                           
 23291                           ;stkvar	_exp @ sp[(-5)+4]
 23292  017302  0EFF               	movlw	-1
 23293  017304  0060  F033  FFE3   	movff	btemp+11,plusw1
 23294  01730A  D00B               	goto	l9416
 23295  01730C                     l9414:
 23296                           
 23297                           ;stkvar	_exp @ sp[(-5)+4]
 23298  01730C  0EFF               	movlw	-1
 23299  01730E  2AE3               	incf	plusw1,f,c
 23300                           
 23301                           ;stkvar	_arg @ sp[(-5)+0]
 23302  017310  90D8               	bcf	status,0,c
 23303  017312  0EFE               	movlw	-2
 23304  017314  32E3               	rrcf	plusw1,f,c
 23305  017316  0EFD               	movlw	-3
 23306  017318  32E3               	rrcf	plusw1,f,c
 23307  01731A  0EFC               	movlw	-4
 23308  01731C  32E3               	rrcf	plusw1,f,c
 23309  01731E  0EFB               	movlw	-5
 23310  017320  32E3               	rrcf	plusw1,f,c
 23311  017322                     l9416:
 23312                           
 23313                           ;stkvar	_arg @ sp[(-5)+0]
 23314  017322  50E1               	movf	fsr1l,w,c
 23315  017324  0FFB               	addlw	-5
 23316  017326  6ED9               	movwf	fsr2l,c
 23317  017328  50E2               	movf	fsr1h,w,c
 23318  01732A  6EDA               	movwf	fsr2h,c
 23319  01732C  0EFF               	movlw	255
 23320  01732E  22DA               	addwfc	fsr2h,f,c
 23321  017330  52DE               	movf	postinc2,f,c
 23322  017332  52DE               	movf	postinc2,f,c
 23323  017334  52DE               	movf	postinc2,f,c
 23324  017336  0EFE               	movlw	254
 23325  017338  14DD               	andwf	postdec2,w,c
 23326  01733A  B4D8               	btfsc	status,2,c
 23327  01733C  D018               	goto	l9424
 23328  01733E  D7E6               	goto	l9414
 23329  017340                     l9418:
 23330                           
 23331                           ;stkvar	_exp @ sp[(-5)+4]
 23332  017340  0EFF               	movlw	-1
 23333  017342  2AE3               	incf	plusw1,f,c
 23334                           
 23335                           ;stkvar	_arg @ sp[(-5)+0]
 23336  017344  50E1               	movf	fsr1l,w,c
 23337  017346  0FFB               	addlw	-5
 23338  017348  6ED9               	movwf	fsr2l,c
 23339  01734A  50E2               	movf	fsr1h,w,c
 23340  01734C  6EDA               	movwf	fsr2h,c
 23341  01734E  0EFF               	movlw	255
 23342  017350  22DA               	addwfc	fsr2h,f,c
 23343  017352  2ADE               	incf	postinc2,f,c
 23344  017354  0E00               	movlw	0
 23345  017356  22DE               	addwfc	postinc2,f,c
 23346  017358  22DE               	addwfc	postinc2,f,c
 23347  01735A  22DE               	addwfc	postinc2,f,c
 23348                           
 23349                           ;stkvar	_arg @ sp[(-5)+0]
 23350  01735C  90D8               	bcf	status,0,c
 23351  01735E  0EFE               	movlw	-2
 23352  017360  32E3               	rrcf	plusw1,f,c
 23353  017362  0EFD               	movlw	-3
 23354  017364  32E3               	rrcf	plusw1,f,c
 23355  017366  0EFC               	movlw	-4
 23356  017368  32E3               	rrcf	plusw1,f,c
 23357  01736A  0EFB               	movlw	-5
 23358  01736C  32E3               	rrcf	plusw1,f,c
 23359  01736E                     l9424:
 23360                           
 23361                           ;stkvar	_arg @ sp[(-5)+0]
 23362  01736E  50E1               	movf	fsr1l,w,c
 23363  017370  0FFB               	addlw	-5
 23364  017372  6ED9               	movwf	fsr2l,c
 23365  017374  50E2               	movf	fsr1h,w,c
 23366  017376  6EDA               	movwf	fsr2h,c
 23367  017378  0EFF               	movlw	255
 23368  01737A  22DA               	addwfc	fsr2h,f,c
 23369  01737C  52DE               	movf	postinc2,f,c
 23370  01737E  52DE               	movf	postinc2,f,c
 23371  017380  52DE               	movf	postinc2,f,c
 23372  017382  0EFF               	movlw	255
 23373  017384  14DD               	andwf	postdec2,w,c
 23374  017386  B4D8               	btfsc	status,2,c
 23375  017388  D00C               	goto	l9428
 23376  01738A  D7DA               	goto	l9418
 23377  01738C                     l9426:
 23378                           
 23379                           ;stkvar	_exp @ sp[(-5)+4]
 23380  01738C  0EFF               	movlw	-1
 23381  01738E  06E3               	decf	plusw1,f,c
 23382                           
 23383                           ;stkvar	_arg @ sp[(-5)+0]
 23384  017390  90D8               	bcf	status,0,c
 23385  017392  0EFB               	movlw	-5
 23386  017394  36E3               	rlcf	plusw1,f,c
 23387  017396  0EFC               	movlw	-4
 23388  017398  36E3               	rlcf	plusw1,f,c
 23389  01739A  0EFD               	movlw	-3
 23390  01739C  36E3               	rlcf	plusw1,f,c
 23391  01739E  0EFE               	movlw	-2
 23392  0173A0  36E3               	rlcf	plusw1,f,c
 23393  0173A2                     l9428:
 23394                           
 23395                           ;stkvar	_arg @ sp[(-5)+0]
 23396  0173A2  0EFD               	movlw	-3
 23397  0173A4  BEE3               	btfsc	plusw1,7,c
 23398  0173A6  D007               	goto	u8810
 23399                           
 23400                           ;stkvar	_exp @ sp[(-5)+4]
 23401  0173A8  0EFF               	movlw	-1
 23402  0173AA  006F FF8C  F001    	movff	plusw1,btemp
 23403  0173B0  0E02               	movlw	2
 23404  0173B2  6001               	cpfslt	btemp^0,c
 23405  0173B4  D7EB               	goto	l9426
 23406  0173B6                     u8810:
 23407                           
 23408                           ;stkvar	_exp @ sp[(-5)+4]
 23409  0173B6  0EFF               	movlw	-1
 23410  0173B8  B0E3               	btfsc	plusw1,0,c
 23411  0173BA  D002               	goto	l9436
 23412                           
 23413                           ;stkvar	_arg @ sp[(-5)+0]
 23414  0173BC  0EFD               	movlw	-3
 23415  0173BE  9EE3               	bcf	plusw1,7,c
 23416  0173C0                     l9436:
 23417                           
 23418                           ;stkvar	_exp @ sp[(-5)+4]
 23419  0173C0  50E1               	movf	fsr1l,w,c
 23420  0173C2  0FFF               	addlw	-1
 23421  0173C4  6ED9               	movwf	fsr2l,c
 23422  0173C6  50E2               	movf	fsr1h,w,c
 23423  0173C8  6EDA               	movwf	fsr2h,c
 23424  0173CA  0EFF               	movlw	255
 23425  0173CC  22DA               	addwfc	fsr2h,f,c
 23426  0173CE  90D8               	bcf	status,0,c
 23427  0173D0  32DF               	rrcf	indf2,f,c
 23428                           
 23429                           ;stkvar	_exp @ sp[(-5)+4]
 23430  0173D2  0EFF               	movlw	-1
 23431  0173D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23432  0173DA  0060  F030  F005   	movff	btemp+11,btemp+4
 23433  0173E0  6A06               	clrf	(btemp+5)^0,c
 23434  0173E2  6A07               	clrf	(btemp+6)^0,c
 23435  0173E4  6A08               	clrf	(btemp+7)^0,c
 23436  0173E6  0060  F014  F008   	movff	btemp+4,btemp+7
 23437  0173EC  6A07               	clrf	(btemp+6)^0,c
 23438  0173EE  6A06               	clrf	(btemp+5)^0,c
 23439  0173F0  6A05               	clrf	(btemp+4)^0,c
 23440                           
 23441                           ;stkvar	_arg @ sp[(-5)+0]
 23442  0173F2  50E1               	movf	fsr1l,w,c
 23443  0173F4  0FFB               	addlw	-5
 23444  0173F6  6ED9               	movwf	fsr2l,c
 23445  0173F8  50E2               	movf	fsr1h,w,c
 23446  0173FA  6EDA               	movwf	fsr2h,c
 23447  0173FC  0EFF               	movlw	255
 23448  0173FE  22DA               	addwfc	fsr2h,f,c
 23449  017400  5005               	movf	(btemp+4)^0,w,c
 23450  017402  12DE               	iorwf	postinc2,f,c
 23451  017404  5006               	movf	(btemp+5)^0,w,c
 23452  017406  12DE               	iorwf	postinc2,f,c
 23453  017408  5007               	movf	(btemp+6)^0,w,c
 23454  01740A  12DE               	iorwf	postinc2,f,c
 23455  01740C  5008               	movf	(btemp+7)^0,w,c
 23456  01740E  12DE               	iorwf	postinc2,f,c
 23457                           
 23458                           ;stkvar	_sign @ sp[(-5)+-1]
 23459  017410  0EFA               	movlw	-6
 23460  017412  50E3               	movf	plusw1,w,c
 23461  017414  B4D8               	btfsc	status,2,c
 23462  017416  D005               	goto	l9446
 23463                           
 23464                           ;stkvar	_val @ sp[(-5)+-5]
 23465  017418  0EF9               	movlw	-7
 23466  01741A  AEE3               	btfss	plusw1,7,c
 23467  01741C  D002               	goto	l9446
 23468                           
 23469                           ;stkvar	_arg @ sp[(-5)+0]
 23470  01741E  0EFE               	movlw	-2
 23471  017420  8EE3               	bsf	plusw1,7,c
 23472  017422                     l9446:
 23473                           
 23474                           ;stkvar	_arg @ sp[(-5)+0]
 23475  017422  0EFB               	movlw	-5
 23476  017424  006F FF8C  F001    	movff	plusw1,btemp
 23477  01742A  0EFC               	movlw	-4
 23478  01742C  006F FF8C  F002    	movff	plusw1,btemp+1
 23479  017432  0EFD               	movlw	-3
 23480  017434  006F FF8C  F003    	movff	plusw1,btemp+2
 23481  01743A  0EFE               	movlw	-2
 23482  01743C  006F FF8C  F004    	movff	plusw1,btemp+3
 23483  017442                     l2993:
 23484                           
 23485                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 23486  017442  0EF6               	movlw	246
 23487  017444  26E1               	addwf	fsr1l,f,c
 23488  017446  0EFF               	movlw	255
 23489  017448  22E2               	addwfc	fsr1h,f,c
 23490  01744A  0012               	return		;funcret
 23491  01744C                     __end_of___xxtofl:
 23492                           	opt callstack 0
 23493                           
 23494 ;; *************** function ___fldiv *****************
 23495 ;; Defined at:
 23496 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 23497 ;; Parameters:    Size  Location     Type
 23498 ;;  b               4  [STACK] unsigned char 
 23499 ;;  a               4  [STACK] unsigned char 
 23500 ;; Auto vars:     Size  Location     Type
 23501 ;;  grs             4  [STACK] unsigned long 
 23502 ;;  rem             4  [STACK] unsigned long 
 23503 ;;  new_exp         2  [STACK] short 
 23504 ;;  aexp            1  [STACK] unsigned char 
 23505 ;;  bexp            1  [STACK] unsigned char 
 23506 ;;  sign            1  [STACK] unsigned char 
 23507 ;; Return value:  Size  Location     Type
 23508 ;;                  4  [STACK] unsigned char 
 23509 ;; Registers used:
 23510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 23511 ;; Tracked objects:
 23512 ;;		On entry : 0/1
 23513 ;;		On exit  : 0/0
 23514 ;;		Unchanged: 0/0
 23515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23520 ;;Total ram usage:        0 bytes
 23521 ;; Hardware stack levels used:    1
 23522 ;; Hardware stack levels required when called:   15
 23523 ;; This function calls:
 23524 ;;		Nothing
 23525 ;; This function is called by:
 23526 ;;		_conv_raw_result
 23527 ;;		_calc_bsoc
 23528 ;;		_init_bsoc
 23529 ;;		_esr_check
 23530 ;;		_efgtoa
 23531 ;; This function uses a reentrant model
 23532 ;;
 23533                           
 23534                           	psect	text98
 23535  01448A                     __ptext98:
 23536                           	opt callstack 0
 23537  01448A                     ___fldiv:
 23538                           	opt callstack 0
 23539                           
 23540                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23541  01448A  0E0D               	movlw	13
 23542  01448C  26E1               	addwf	fsr1l,f,c
 23543  01448E  0E00               	movlw	0
 23544  014490  22E2               	addwfc	fsr1h,f,c
 23545                           
 23546                           ;stkvar	_b @ sp[(-13)+-4]
 23547                           
 23548                           ;incstack = 0
 23549 ;; hardware stack exceeded
 23550  014492  0EF2               	movlw	242
 23551  014494  24E1               	addwf	fsr1l,w,c
 23552  014496  6ED9               	movwf	fsr2l,c
 23553  014498  0EFF               	movlw	255
 23554  01449A  20E2               	addwfc	fsr1h,w,c
 23555  01449C  6EDA               	movwf	fsr2h,c
 23556  01449E  50DF               	movf	indf2,w,c
 23557  0144A0  6E0C               	movwf	(btemp+11)^0,c
 23558  0144A2  0E80               	movlw	128
 23559  0144A4  160C               	andwf	(btemp+11)^0,f,c
 23560                           
 23561                           ;stkvar	_sign @ sp[(-13)+12]
 23562  0144A6  0EFF               	movlw	-1
 23563  0144A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 23564                           
 23565                           ;stkvar	_b @ sp[(-13)+-4]
 23566  0144AE  0EF2               	movlw	242
 23567  0144B0  24E1               	addwf	fsr1l,w,c
 23568  0144B2  6ED9               	movwf	fsr2l,c
 23569  0144B4  0EFF               	movlw	255
 23570  0144B6  20E2               	addwfc	fsr1h,w,c
 23571  0144B8  6EDA               	movwf	fsr2h,c
 23572  0144BA  50DF               	movf	indf2,w,c
 23573  0144BC  6E0C               	movwf	(btemp+11)^0,c
 23574  0144BE  90D8               	bcf	status,0,c
 23575  0144C0  340C               	rlcf	(btemp+11)^0,w,c
 23576  0144C2  6E0B               	movwf	(btemp+10)^0,c
 23577                           
 23578                           ;stkvar	_bexp @ sp[(-13)+11]
 23579  0144C4  0EFE               	movlw	-2
 23580  0144C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23581                           
 23582                           ;stkvar	_b @ sp[(-13)+-4]
 23583  0144CC  0EF1               	movlw	241
 23584  0144CE  24E1               	addwf	fsr1l,w,c
 23585  0144D0  6ED9               	movwf	fsr2l,c
 23586  0144D2  0EFF               	movlw	255
 23587  0144D4  20E2               	addwfc	fsr1h,w,c
 23588  0144D6  6EDA               	movwf	fsr2h,c
 23589  0144D8  AEDF               	btfss	indf2,7,c
 23590  0144DA  D002               	goto	l7776
 23591                           
 23592                           ;stkvar	_bexp @ sp[(-13)+11]
 23593  0144DC  0EFE               	movlw	-2
 23594  0144DE  80E3               	bsf	plusw1,0,c
 23595  0144E0                     l7776:
 23596                           
 23597                           ;stkvar	_bexp @ sp[(-13)+11]
 23598  0144E0  0EFE               	movlw	-2
 23599  0144E2  50E3               	movf	plusw1,w,c
 23600  0144E4  B4D8               	btfsc	status,2,c
 23601  0144E6  D027               	goto	l7786
 23602                           
 23603                           ;stkvar	_bexp @ sp[(-13)+11]
 23604  0144E8  0EFE               	movlw	-2
 23605  0144EA  28E3               	incf	plusw1,w,c
 23606  0144EC  A4D8               	btfss	status,2,c
 23607  0144EE  D018               	goto	l7782
 23608  0144F0  0E00               	movlw	0
 23609  0144F2  6E09               	movwf	(btemp+8)^0,c
 23610  0144F4  0E00               	movlw	0
 23611  0144F6  6E0A               	movwf	(btemp+9)^0,c
 23612  0144F8  0E00               	movlw	0
 23613  0144FA  6E0B               	movwf	(btemp+10)^0,c
 23614  0144FC  0E00               	movlw	0
 23615  0144FE  6E0C               	movwf	(btemp+11)^0,c
 23616                           
 23617                           ;stkvar	_b @ sp[(-13)+-4]
 23618  014500  0EEF               	movlw	-17
 23619  014502  0060  F027  FFE3   	movff	btemp+8,plusw1
 23620  014508  0EF0               	movlw	-16
 23621  01450A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23622  014510  0EF1               	movlw	-15
 23623  014512  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23624  014518  0EF2               	movlw	-14
 23625  01451A  0060  F033  FFE3   	movff	btemp+11,plusw1
 23626  014520                     l7782:
 23627                           
 23628                           ;stkvar	_b @ sp[(-13)+-4]
 23629  014520  0EF1               	movlw	-15
 23630  014522  8EE3               	bsf	plusw1,7,c
 23631                           
 23632                           ;stkvar	_b @ sp[(-13)+-4]
 23633  014524  0EF2               	movlw	242
 23634  014526  24E1               	addwf	fsr1l,w,c
 23635  014528  6ED9               	movwf	fsr2l,c
 23636  01452A  0EFF               	movlw	255
 23637  01452C  20E2               	addwfc	fsr1h,w,c
 23638  01452E  6EDA               	movwf	fsr2h,c
 23639  014530  0E00               	movlw	0
 23640  014532  6EDF               	movwf	indf2,c
 23641  014534  D018               	goto	l7788
 23642  014536                     l7786:
 23643  014536  0E00               	movlw	0
 23644  014538  6E09               	movwf	(btemp+8)^0,c
 23645  01453A  0E00               	movlw	0
 23646  01453C  6E0A               	movwf	(btemp+9)^0,c
 23647  01453E  0E00               	movlw	0
 23648  014540  6E0B               	movwf	(btemp+10)^0,c
 23649  014542  0E00               	movlw	0
 23650  014544  6E0C               	movwf	(btemp+11)^0,c
 23651                           
 23652                           ;stkvar	_b @ sp[(-13)+-4]
 23653  014546  0EEF               	movlw	-17
 23654  014548  0060  F027  FFE3   	movff	btemp+8,plusw1
 23655  01454E  0EF0               	movlw	-16
 23656  014550  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23657  014556  0EF1               	movlw	-15
 23658  014558  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23659  01455E  0EF2               	movlw	-14
 23660  014560  0060  F033  FFE3   	movff	btemp+11,plusw1
 23661  014566                     l7788:
 23662                           
 23663                           ;stkvar	_a @ sp[(-13)+-8]
 23664  014566  0EEE               	movlw	238
 23665  014568  24E1               	addwf	fsr1l,w,c
 23666  01456A  6ED9               	movwf	fsr2l,c
 23667  01456C  0EFF               	movlw	255
 23668  01456E  20E2               	addwfc	fsr1h,w,c
 23669  014570  6EDA               	movwf	fsr2h,c
 23670  014572  50DF               	movf	indf2,w,c
 23671  014574  6E0C               	movwf	(btemp+11)^0,c
 23672  014576  0E80               	movlw	128
 23673  014578  160C               	andwf	(btemp+11)^0,f,c
 23674                           
 23675                           ;stkvar	_sign @ sp[(-13)+12]
 23676  01457A  50E1               	movf	fsr1l,w,c
 23677  01457C  0FFF               	addlw	-1
 23678  01457E  6ED9               	movwf	fsr2l,c
 23679  014580  50E2               	movf	fsr1h,w,c
 23680  014582  6EDA               	movwf	fsr2h,c
 23681  014584  0EFF               	movlw	255
 23682  014586  22DA               	addwfc	fsr2h,f,c
 23683  014588  500C               	movf	(btemp+11)^0,w,c
 23684  01458A  1ADF               	xorwf	indf2,f,c
 23685                           
 23686                           ;stkvar	_a @ sp[(-13)+-8]
 23687  01458C  0EEE               	movlw	238
 23688  01458E  24E1               	addwf	fsr1l,w,c
 23689  014590  6ED9               	movwf	fsr2l,c
 23690  014592  0EFF               	movlw	255
 23691  014594  20E2               	addwfc	fsr1h,w,c
 23692  014596  6EDA               	movwf	fsr2h,c
 23693  014598  50DF               	movf	indf2,w,c
 23694  01459A  6E0C               	movwf	(btemp+11)^0,c
 23695  01459C  90D8               	bcf	status,0,c
 23696  01459E  340C               	rlcf	(btemp+11)^0,w,c
 23697  0145A0  6E0B               	movwf	(btemp+10)^0,c
 23698                           
 23699                           ;stkvar	_aexp @ sp[(-13)+10]
 23700  0145A2  0EFD               	movlw	-3
 23701  0145A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23702                           
 23703                           ;stkvar	_a @ sp[(-13)+-8]
 23704  0145AA  0EED               	movlw	237
 23705  0145AC  24E1               	addwf	fsr1l,w,c
 23706  0145AE  6ED9               	movwf	fsr2l,c
 23707  0145B0  0EFF               	movlw	255
 23708  0145B2  20E2               	addwfc	fsr1h,w,c
 23709  0145B4  6EDA               	movwf	fsr2h,c
 23710  0145B6  AEDF               	btfss	indf2,7,c
 23711  0145B8  D002               	goto	l7796
 23712                           
 23713                           ;stkvar	_aexp @ sp[(-13)+10]
 23714  0145BA  0EFD               	movlw	-3
 23715  0145BC  80E3               	bsf	plusw1,0,c
 23716  0145BE                     l7796:
 23717                           
 23718                           ;stkvar	_aexp @ sp[(-13)+10]
 23719  0145BE  0EFD               	movlw	-3
 23720  0145C0  50E3               	movf	plusw1,w,c
 23721  0145C2  B4D8               	btfsc	status,2,c
 23722  0145C4  D027               	goto	l7806
 23723                           
 23724                           ;stkvar	_aexp @ sp[(-13)+10]
 23725  0145C6  0EFD               	movlw	-3
 23726  0145C8  28E3               	incf	plusw1,w,c
 23727  0145CA  A4D8               	btfss	status,2,c
 23728  0145CC  D018               	goto	l7802
 23729  0145CE  0E00               	movlw	0
 23730  0145D0  6E09               	movwf	(btemp+8)^0,c
 23731  0145D2  0E00               	movlw	0
 23732  0145D4  6E0A               	movwf	(btemp+9)^0,c
 23733  0145D6  0E00               	movlw	0
 23734  0145D8  6E0B               	movwf	(btemp+10)^0,c
 23735  0145DA  0E00               	movlw	0
 23736  0145DC  6E0C               	movwf	(btemp+11)^0,c
 23737                           
 23738                           ;stkvar	_a @ sp[(-13)+-8]
 23739  0145DE  0EEB               	movlw	-21
 23740  0145E0  0060  F027  FFE3   	movff	btemp+8,plusw1
 23741  0145E6  0EEC               	movlw	-20
 23742  0145E8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23743  0145EE  0EED               	movlw	-19
 23744  0145F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23745  0145F6  0EEE               	movlw	-18
 23746  0145F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 23747  0145FE                     l7802:
 23748                           
 23749                           ;stkvar	_a @ sp[(-13)+-8]
 23750  0145FE  0EED               	movlw	-19
 23751  014600  8EE3               	bsf	plusw1,7,c
 23752                           
 23753                           ;stkvar	_a @ sp[(-13)+-8]
 23754  014602  0EEE               	movlw	238
 23755  014604  24E1               	addwf	fsr1l,w,c
 23756  014606  6ED9               	movwf	fsr2l,c
 23757  014608  0EFF               	movlw	255
 23758  01460A  20E2               	addwfc	fsr1h,w,c
 23759  01460C  6EDA               	movwf	fsr2h,c
 23760  01460E  0E00               	movlw	0
 23761  014610  6EDF               	movwf	indf2,c
 23762  014612  D018               	goto	l7808
 23763  014614                     l7806:
 23764  014614  0E00               	movlw	0
 23765  014616  6E09               	movwf	(btemp+8)^0,c
 23766  014618  0E00               	movlw	0
 23767  01461A  6E0A               	movwf	(btemp+9)^0,c
 23768  01461C  0E00               	movlw	0
 23769  01461E  6E0B               	movwf	(btemp+10)^0,c
 23770  014620  0E00               	movlw	0
 23771  014622  6E0C               	movwf	(btemp+11)^0,c
 23772                           
 23773                           ;stkvar	_a @ sp[(-13)+-8]
 23774  014624  0EEB               	movlw	-21
 23775  014626  0060  F027  FFE3   	movff	btemp+8,plusw1
 23776  01462C  0EEC               	movlw	-20
 23777  01462E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23778  014634  0EED               	movlw	-19
 23779  014636  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23780  01463C  0EEE               	movlw	-18
 23781  01463E  0060  F033  FFE3   	movff	btemp+11,plusw1
 23782  014644                     l7808:
 23783                           
 23784                           ;stkvar	_a @ sp[(-13)+-8]
 23785  014644  0EEB               	movlw	-21
 23786  014646  50E3               	movf	plusw1,w,c
 23787  014648  E139               	bnz	l7820
 23788  01464A  0EEC               	movlw	-20
 23789  01464C  50E3               	movf	plusw1,w,c
 23790  01464E  E136               	bnz	l7820
 23791  014650  0EED               	movlw	-19
 23792  014652  50E3               	movf	plusw1,w,c
 23793  014654  E133               	bnz	l7820
 23794  014656  0EEE               	movlw	-18
 23795  014658  50E3               	movf	plusw1,w,c
 23796  01465A  A4D8               	btfss	status,2,c
 23797  01465C  D02F               	goto	l7820
 23798                           
 23799                           ;stkvar	_b @ sp[(-13)+-4]
 23800  01465E  0EEF               	movlw	-17
 23801  014660  6AE3               	clrf	plusw1,c
 23802  014662  0EF0               	movlw	-16
 23803  014664  6AE3               	clrf	plusw1,c
 23804  014666  0EF1               	movlw	-15
 23805  014668  6AE3               	clrf	plusw1,c
 23806  01466A  0EF2               	movlw	-14
 23807  01466C  6AE3               	clrf	plusw1,c
 23808                           
 23809                           ;stkvar	_b @ sp[(-13)+-4]
 23810  01466E  0EF1               	movlw	241
 23811  014670  24E1               	addwf	fsr1l,w,c
 23812  014672  6ED9               	movwf	fsr2l,c
 23813  014674  0EFF               	movlw	255
 23814  014676  20E2               	addwfc	fsr1h,w,c
 23815  014678  6EDA               	movwf	fsr2h,c
 23816  01467A  0E80               	movlw	128
 23817  01467C  12DE               	iorwf	postinc2,f,c
 23818  01467E  0E7F               	movlw	127
 23819  014680  12DD               	iorwf	postdec2,f,c
 23820  014682                     l7814:
 23821                           
 23822                           ;stkvar	_sign @ sp[(-13)+12]
 23823  014682  0EFF               	movlw	-1
 23824  014684  006F FF8C  F00C    	movff	plusw1,btemp+11
 23825                           
 23826                           ;stkvar	_b @ sp[(-13)+-4]
 23827  01468A  0EF2               	movlw	242
 23828  01468C  24E1               	addwf	fsr1l,w,c
 23829  01468E  6ED9               	movwf	fsr2l,c
 23830  014690  0EFF               	movlw	255
 23831  014692  20E2               	addwfc	fsr1h,w,c
 23832  014694  6EDA               	movwf	fsr2h,c
 23833  014696  500C               	movf	(btemp+11)^0,w,c
 23834  014698  12DF               	iorwf	indf2,f,c
 23835                           
 23836                           ;stkvar	_b @ sp[(-13)+-4]
 23837  01469A  0EEF               	movlw	-17
 23838  01469C  006F FF8C  F001    	movff	plusw1,btemp
 23839  0146A2  0EF0               	movlw	-16
 23840  0146A4  006F FF8C  F002    	movff	plusw1,btemp+1
 23841  0146AA  0EF1               	movlw	-15
 23842  0146AC  006F FF8C  F003    	movff	plusw1,btemp+2
 23843  0146B2  0EF2               	movlw	-14
 23844  0146B4  006F FF8C  F004    	movff	plusw1,btemp+3
 23845  0146BA  D19F               	goto	l2917
 23846  0146BC                     l7820:
 23847                           
 23848                           ;stkvar	_bexp @ sp[(-13)+11]
 23849  0146BC  0EFE               	movlw	-2
 23850  0146BE  50E3               	movf	plusw1,w,c
 23851  0146C0  A4D8               	btfss	status,2,c
 23852  0146C2  D009               	goto	l7828
 23853  0146C4  0E00               	movlw	0
 23854  0146C6  6E01               	movwf	btemp^0,c
 23855  0146C8  0E00               	movlw	0
 23856  0146CA  6E02               	movwf	(btemp+1)^0,c
 23857  0146CC  0E00               	movlw	0
 23858  0146CE  6E03               	movwf	(btemp+2)^0,c
 23859  0146D0  0E00               	movlw	0
 23860  0146D2  6E04               	movwf	(btemp+3)^0,c
 23861  0146D4  D192               	goto	l2917
 23862  0146D6                     l7828:
 23863                           
 23864                           ;stkvar	_bexp @ sp[(-13)+11]
 23865  0146D6  0EFE               	movlw	-2
 23866  0146D8  50E3               	movf	plusw1,w,c
 23867  0146DA  6E0B               	movwf	(btemp+10)^0,c
 23868  0146DC  6A0C               	clrf	(btemp+11)^0,c
 23869                           
 23870                           ;stkvar	_aexp @ sp[(-13)+10]
 23871  0146DE  0EFD               	movlw	-3
 23872  0146E0  50E3               	movf	plusw1,w,c
 23873  0146E2  5E0B               	subwf	(btemp+10)^0,f,c
 23874  0146E4  0E00               	movlw	0
 23875  0146E6  5A0C               	subwfb	(btemp+11)^0,f,c
 23876  0146E8  0E7F               	movlw	127
 23877  0146EA  260B               	addwf	(btemp+10)^0,f,c
 23878  0146EC  0E00               	movlw	0
 23879  0146EE  220C               	addwfc	(btemp+11)^0,f,c
 23880                           
 23881                           ;stkvar	_new_exp @ sp[(-13)+8]
 23882  0146F0  0EFB               	movlw	-5
 23883  0146F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23884  0146F8  0EFC               	movlw	-4
 23885  0146FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 23886                           
 23887                           ;stkvar	_b @ sp[(-13)+-4]
 23888  014700  0EEF               	movlw	-17
 23889  014702  006F FF8C  F009    	movff	plusw1,btemp+8
 23890  014708  0EF0               	movlw	-16
 23891  01470A  006F FF8C  F00A    	movff	plusw1,btemp+9
 23892  014710  0EF1               	movlw	-15
 23893  014712  006F FF8C  F00B    	movff	plusw1,btemp+10
 23894  014718  0EF2               	movlw	-14
 23895  01471A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23896                           
 23897                           ;stkvar	_rem @ sp[(-13)+4]
 23898  014720  0EF7               	movlw	-9
 23899  014722  0060  F027  FFE3   	movff	btemp+8,plusw1
 23900  014728  0EF8               	movlw	-8
 23901  01472A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23902  014730  0EF9               	movlw	-7
 23903  014732  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23904  014738  0EFA               	movlw	-6
 23905  01473A  0060  F033  FFE3   	movff	btemp+11,plusw1
 23906                           
 23907                           ;stkvar	_b @ sp[(-13)+-4]
 23908  014740  0EEF               	movlw	-17
 23909  014742  6AE3               	clrf	plusw1,c
 23910  014744  0EF0               	movlw	-16
 23911  014746  6AE3               	clrf	plusw1,c
 23912  014748  0EF1               	movlw	-15
 23913  01474A  6AE3               	clrf	plusw1,c
 23914  01474C  0EF2               	movlw	-14
 23915  01474E  6AE3               	clrf	plusw1,c
 23916                           
 23917                           ;stkvar	_grs @ sp[(-13)+0]
 23918  014750  0EF3               	movlw	-13
 23919  014752  6AE3               	clrf	plusw1,c
 23920  014754  0EF4               	movlw	-12
 23921  014756  6AE3               	clrf	plusw1,c
 23922  014758  0EF5               	movlw	-11
 23923  01475A  6AE3               	clrf	plusw1,c
 23924  01475C  0EF6               	movlw	-10
 23925  01475E  6AE3               	clrf	plusw1,c
 23926                           
 23927                           ;stkvar	_aexp @ sp[(-13)+10]
 23928  014760  0EFD               	movlw	-3
 23929  014762  6AE3               	clrf	plusw1,c
 23930  014764  D050               	goto	l7856
 23931  014766                     l7838:
 23932                           
 23933                           ;stkvar	_aexp @ sp[(-13)+10]
 23934  014766  0EFD               	movlw	-3
 23935  014768  50E3               	movf	plusw1,w,c
 23936  01476A  B4D8               	btfsc	status,2,c
 23937  01476C  D020               	goto	l7848
 23938                           
 23939                           ;stkvar	_rem @ sp[(-13)+4]
 23940  01476E  90D8               	bcf	status,0,c
 23941  014770  0EF7               	movlw	-9
 23942  014772  36E3               	rlcf	plusw1,f,c
 23943  014774  0EF8               	movlw	-8
 23944  014776  36E3               	rlcf	plusw1,f,c
 23945  014778  0EF9               	movlw	-7
 23946  01477A  36E3               	rlcf	plusw1,f,c
 23947  01477C  0EFA               	movlw	-6
 23948  01477E  36E3               	rlcf	plusw1,f,c
 23949                           
 23950                           ;stkvar	_b @ sp[(-13)+-4]
 23951  014780  90D8               	bcf	status,0,c
 23952  014782  0EEF               	movlw	-17
 23953  014784  36E3               	rlcf	plusw1,f,c
 23954  014786  0EF0               	movlw	-16
 23955  014788  36E3               	rlcf	plusw1,f,c
 23956  01478A  0EF1               	movlw	-15
 23957  01478C  36E3               	rlcf	plusw1,f,c
 23958  01478E  0EF2               	movlw	-14
 23959  014790  36E3               	rlcf	plusw1,f,c
 23960                           
 23961                           ;stkvar	_grs @ sp[(-13)+0]
 23962  014792  0EF6               	movlw	-10
 23963  014794  AEE3               	btfss	plusw1,7,c
 23964  014796  D002               	goto	l7846
 23965                           
 23966                           ;stkvar	_b @ sp[(-13)+-4]
 23967  014798  0EEF               	movlw	-17
 23968  01479A  80E3               	bsf	plusw1,0,c
 23969  01479C                     l7846:
 23970                           
 23971                           ;stkvar	_grs @ sp[(-13)+0]
 23972  01479C  90D8               	bcf	status,0,c
 23973  01479E  0EF3               	movlw	-13
 23974  0147A0  36E3               	rlcf	plusw1,f,c
 23975  0147A2  0EF4               	movlw	-12
 23976  0147A4  36E3               	rlcf	plusw1,f,c
 23977  0147A6  0EF5               	movlw	-11
 23978  0147A8  36E3               	rlcf	plusw1,f,c
 23979  0147AA  0EF6               	movlw	-10
 23980  0147AC  36E3               	rlcf	plusw1,f,c
 23981  0147AE                     l7848:
 23982                           
 23983                           ;stkvar	_a @ sp[(-13)+-8]
 23984                           ;stkvar	_rem @ sp[(-13)+4]
 23985  0147AE  50E1               	movf	fsr1l,w,c
 23986  0147B0  0FF7               	addlw	-9
 23987  0147B2  6ED9               	movwf	fsr2l,c
 23988  0147B4  50E2               	movf	fsr1h,w,c
 23989  0147B6  6EDA               	movwf	fsr2h,c
 23990  0147B8  0EFF               	movlw	255
 23991  0147BA  22DA               	addwfc	fsr2h,f,c
 23992  0147BC  0EEB               	movlw	-21
 23993  0147BE  50E3               	movf	plusw1,w,c
 23994  0147C0  5CDE               	subwf	postinc2,w,c
 23995  0147C2  0EEC               	movlw	-20
 23996  0147C4  50E3               	movf	plusw1,w,c
 23997  0147C6  58DE               	subwfb	postinc2,w,c
 23998  0147C8  0EED               	movlw	-19
 23999  0147CA  50E3               	movf	plusw1,w,c
 24000  0147CC  58DE               	subwfb	postinc2,w,c
 24001  0147CE  0EEE               	movlw	-18
 24002  0147D0  50E3               	movf	plusw1,w,c
 24003  0147D2  58DE               	subwfb	postinc2,w,c
 24004  0147D4  A0D8               	btfss	status,0,c
 24005  0147D6  D015               	goto	l7854
 24006                           
 24007                           ;stkvar	_grs @ sp[(-13)+0]
 24008  0147D8  0EF6               	movlw	-10
 24009  0147DA  8CE3               	bsf	plusw1,6,c
 24010                           
 24011                           ;stkvar	_a @ sp[(-13)+-8]
 24012                           ;stkvar	_rem @ sp[(-13)+4]
 24013  0147DC  50E1               	movf	fsr1l,w,c
 24014  0147DE  0FF7               	addlw	-9
 24015  0147E0  6ED9               	movwf	fsr2l,c
 24016  0147E2  50E2               	movf	fsr1h,w,c
 24017  0147E4  6EDA               	movwf	fsr2h,c
 24018  0147E6  0EFF               	movlw	255
 24019  0147E8  22DA               	addwfc	fsr2h,f,c
 24020  0147EA  0EEB               	movlw	-21
 24021  0147EC  50E3               	movf	plusw1,w,c
 24022  0147EE  5EDE               	subwf	postinc2,f,c
 24023  0147F0  0EEC               	movlw	-20
 24024  0147F2  50E3               	movf	plusw1,w,c
 24025  0147F4  5ADE               	subwfb	postinc2,f,c
 24026  0147F6  0EED               	movlw	-19
 24027  0147F8  50E3               	movf	plusw1,w,c
 24028  0147FA  5ADE               	subwfb	postinc2,f,c
 24029  0147FC  0EEE               	movlw	-18
 24030  0147FE  50E3               	movf	plusw1,w,c
 24031  014800  5ADE               	subwfb	postinc2,f,c
 24032  014802                     l7854:
 24033                           
 24034                           ;stkvar	_aexp @ sp[(-13)+10]
 24035  014802  0EFD               	movlw	-3
 24036  014804  2AE3               	incf	plusw1,f,c
 24037  014806                     l7856:
 24038                           
 24039                           ;stkvar	_aexp @ sp[(-13)+10]
 24040  014806  0EFD               	movlw	-3
 24041  014808  006F FF8C  F001    	movff	plusw1,btemp
 24042  01480E  0E19               	movlw	25
 24043  014810  6401               	cpfsgt	btemp^0,c
 24044  014812  D7A9               	goto	l7838
 24045                           
 24046                           ;stkvar	_rem @ sp[(-13)+4]
 24047  014814  0EF7               	movlw	-9
 24048  014816  50E3               	movf	plusw1,w,c
 24049  014818  E10A               	bnz	u6270
 24050  01481A  0EF8               	movlw	-8
 24051  01481C  50E3               	movf	plusw1,w,c
 24052  01481E  E107               	bnz	u6270
 24053  014820  0EF9               	movlw	-7
 24054  014822  50E3               	movf	plusw1,w,c
 24055  014824  E104               	bnz	u6270
 24056  014826  0EFA               	movlw	-6
 24057  014828  50E3               	movf	plusw1,w,c
 24058  01482A  B4D8               	btfsc	status,2,c
 24059  01482C  D024               	goto	l7872
 24060  01482E                     u6270:
 24061                           
 24062                           ;stkvar	_grs @ sp[(-13)+0]
 24063  01482E  0EF3               	movlw	-13
 24064  014830  80E3               	bsf	plusw1,0,c
 24065  014832  D021               	goto	l7872
 24066  014834                     l7862:
 24067                           
 24068                           ;stkvar	_b @ sp[(-13)+-4]
 24069  014834  90D8               	bcf	status,0,c
 24070  014836  0EEF               	movlw	-17
 24071  014838  36E3               	rlcf	plusw1,f,c
 24072  01483A  0EF0               	movlw	-16
 24073  01483C  36E3               	rlcf	plusw1,f,c
 24074  01483E  0EF1               	movlw	-15
 24075  014840  36E3               	rlcf	plusw1,f,c
 24076  014842  0EF2               	movlw	-14
 24077  014844  36E3               	rlcf	plusw1,f,c
 24078                           
 24079                           ;stkvar	_grs @ sp[(-13)+0]
 24080  014846  0EF6               	movlw	-10
 24081  014848  AEE3               	btfss	plusw1,7,c
 24082  01484A  D002               	goto	l7868
 24083                           
 24084                           ;stkvar	_b @ sp[(-13)+-4]
 24085  01484C  0EEF               	movlw	-17
 24086  01484E  80E3               	bsf	plusw1,0,c
 24087  014850                     l7868:
 24088                           
 24089                           ;stkvar	_grs @ sp[(-13)+0]
 24090  014850  90D8               	bcf	status,0,c
 24091  014852  0EF3               	movlw	-13
 24092  014854  36E3               	rlcf	plusw1,f,c
 24093  014856  0EF4               	movlw	-12
 24094  014858  36E3               	rlcf	plusw1,f,c
 24095  01485A  0EF5               	movlw	-11
 24096  01485C  36E3               	rlcf	plusw1,f,c
 24097  01485E  0EF6               	movlw	-10
 24098  014860  36E3               	rlcf	plusw1,f,c
 24099                           
 24100                           ;stkvar	_new_exp @ sp[(-13)+8]
 24101  014862  50E1               	movf	fsr1l,w,c
 24102  014864  0FFB               	addlw	-5
 24103  014866  6ED9               	movwf	fsr2l,c
 24104  014868  50E2               	movf	fsr1h,w,c
 24105  01486A  6EDA               	movwf	fsr2h,c
 24106  01486C  0EFF               	movlw	255
 24107  01486E  22DA               	addwfc	fsr2h,f,c
 24108  014870  06DE               	decf	postinc2,f,c
 24109  014872  0E00               	movlw	0
 24110  014874  5ADD               	subwfb	postdec2,f,c
 24111  014876                     l7872:
 24112                           
 24113                           ;stkvar	_b @ sp[(-13)+-4]
 24114  014876  0EF1               	movlw	-15
 24115  014878  AEE3               	btfss	plusw1,7,c
 24116  01487A  D7DC               	goto	l7862
 24117                           
 24118                           ;stkvar	_aexp @ sp[(-13)+10]
 24119  01487C  0EFD               	movlw	-3
 24120  01487E  6AE3               	clrf	plusw1,c
 24121                           
 24122                           ;stkvar	_grs @ sp[(-13)+0]
 24123  014880  0EF6               	movlw	-10
 24124  014882  AEE3               	btfss	plusw1,7,c
 24125  014884  D020               	goto	l7886
 24126                           
 24127                           ;stkvar	_grs @ sp[(-13)+0]
 24128  014886  50E1               	movf	fsr1l,w,c
 24129  014888  0FF3               	addlw	-13
 24130  01488A  6ED9               	movwf	fsr2l,c
 24131  01488C  50E2               	movf	fsr1h,w,c
 24132  01488E  6EDA               	movwf	fsr2h,c
 24133  014890  0EFF               	movlw	255
 24134  014892  22DA               	addwfc	fsr2h,f,c
 24135  014894  0EFF               	movlw	255
 24136  014896  14DE               	andwf	postinc2,w,c
 24137  014898  6E09               	movwf	(btemp+8)^0,c
 24138  01489A  0EFF               	movlw	255
 24139  01489C  14DE               	andwf	postinc2,w,c
 24140  01489E  6E0A               	movwf	(btemp+9)^0,c
 24141  0148A0  0EFF               	movlw	255
 24142  0148A2  14DE               	andwf	postinc2,w,c
 24143  0148A4  6E0B               	movwf	(btemp+10)^0,c
 24144  0148A6  0E7F               	movlw	127
 24145  0148A8  14DE               	andwf	postinc2,w,c
 24146  0148AA  6E0C               	movwf	(btemp+11)^0,c
 24147  0148AC  5009               	movf	(btemp+8)^0,w,c
 24148  0148AE  100A               	iorwf	(btemp+9)^0,w,c
 24149  0148B0  100B               	iorwf	(btemp+10)^0,w,c
 24150  0148B2  100C               	iorwf	(btemp+11)^0,w,c
 24151  0148B4  B4D8               	btfsc	status,2,c
 24152  0148B6  D004               	goto	l7882
 24153  0148B8                     u6310:
 24154                           
 24155                           ;stkvar	_aexp @ sp[(-13)+10]
 24156  0148B8  0EFD               	movlw	-3
 24157  0148BA  6AE3               	clrf	plusw1,c
 24158  0148BC  2AE3               	incf	plusw1,f,c
 24159  0148BE  D003               	goto	l7886
 24160  0148C0                     l7882:
 24161                           
 24162                           ;stkvar	_b @ sp[(-13)+-4]
 24163  0148C0  0EEF               	movlw	-17
 24164  0148C2  B0E3               	btfsc	plusw1,0,c
 24165  0148C4  D7F9               	goto	u6310
 24166  0148C6                     l7886:
 24167                           
 24168                           ;stkvar	_aexp @ sp[(-13)+10]
 24169  0148C6  0EFD               	movlw	-3
 24170  0148C8  50E3               	movf	plusw1,w,c
 24171  0148CA  B4D8               	btfsc	status,2,c
 24172  0148CC  D036               	goto	l7896
 24173                           
 24174                           ;stkvar	_b @ sp[(-13)+-4]
 24175  0148CE  50E1               	movf	fsr1l,w,c
 24176  0148D0  0FEF               	addlw	-17
 24177  0148D2  6ED9               	movwf	fsr2l,c
 24178  0148D4  50E2               	movf	fsr1h,w,c
 24179  0148D6  6EDA               	movwf	fsr2h,c
 24180  0148D8  0EFF               	movlw	255
 24181  0148DA  22DA               	addwfc	fsr2h,f,c
 24182  0148DC  2ADE               	incf	postinc2,f,c
 24183  0148DE  0E00               	movlw	0
 24184  0148E0  22DE               	addwfc	postinc2,f,c
 24185  0148E2  22DE               	addwfc	postinc2,f,c
 24186  0148E4  22DE               	addwfc	postinc2,f,c
 24187                           
 24188                           ;stkvar	_b @ sp[(-13)+-4]
 24189  0148E6  0EF2               	movlw	-14
 24190  0148E8  A0E3               	btfss	plusw1,0,c
 24191  0148EA  D027               	goto	l7896
 24192  0148EC  0E01               	movlw	1
 24193  0148EE  6E0C               	movwf	(btemp+11)^0,c
 24194                           
 24195                           ;stkvar	_b @ sp[(-13)+-4]
 24196  0148F0  50E1               	movf	fsr1l,w,c
 24197  0148F2  0FEF               	addlw	-17
 24198  0148F4  6ED9               	movwf	fsr2l,c
 24199  0148F6  50E2               	movf	fsr1h,w,c
 24200  0148F8  6EDA               	movwf	fsr2h,c
 24201  0148FA  0EFF               	movlw	255
 24202  0148FC  22DA               	addwfc	fsr2h,f,c
 24203  0148FE  280C               	incf	(btemp+11)^0,w,c
 24204  014900  52DE               	movf	postinc2,f,c
 24205  014902  D008               	goto	u6350
 24206  014904                     u6355:
 24207  014904  52DE               	movf	postinc2,f,c
 24208  014906  90D8               	bcf	status,0,c
 24209  014908  BEDC               	btfsc	preinc2,7,c
 24210  01490A  80D8               	bsf	status,0,c
 24211  01490C  32DD               	rrcf	postdec2,f,c
 24212  01490E  32DD               	rrcf	postdec2,f,c
 24213  014910  32DD               	rrcf	postdec2,f,c
 24214  014912  32DE               	rrcf	postinc2,f,c
 24215  014914                     u6350:
 24216  014914  2EE8               	decfsz	wreg,f,c
 24217  014916  D7F6               	goto	u6355
 24218                           
 24219                           ;stkvar	_new_exp @ sp[(-13)+8]
 24220  014918  0EFB               	movlw	-5
 24221  01491A  50E3               	movf	plusw1,w,c
 24222  01491C  0F01               	addlw	1
 24223  01491E  6E01               	movwf	btemp^0,c
 24224  014920  0EFB               	movlw	-5
 24225  014922  0060  F007  FFE3   	movff	btemp,plusw1
 24226  014928  6A01               	clrf	btemp^0,c
 24227  01492A  0EFC               	movlw	-4
 24228  01492C  50E3               	movf	plusw1,w,c
 24229  01492E  2001               	addwfc	btemp^0,w,c
 24230  014930  6E01               	movwf	btemp^0,c
 24231  014932  0EFC               	movlw	-4
 24232  014934  0060  F007  FFE3   	movff	btemp,plusw1
 24233  01493A                     l7896:
 24234                           
 24235                           ;stkvar	_new_exp @ sp[(-13)+8]
 24236  01493A  0EFC               	movlw	-4
 24237  01493C  BEE3               	btfsc	plusw1,7,c
 24238  01493E  D01B               	goto	l7902
 24239  014940  0EFC               	movlw	-4
 24240  014942  50E3               	movf	plusw1,w,c
 24241  014944  E104               	bnz	u6360
 24242  014946  0EFB               	movlw	-5
 24243  014948  28E3               	incf	plusw1,w,c
 24244  01494A  A0D8               	btfss	status,0,c
 24245  01494C  D014               	goto	l7902
 24246  01494E                     u6360:
 24247  01494E  0EFF               	movlw	255
 24248  014950  6E0B               	movwf	(btemp+10)^0,c
 24249  014952  0E00               	movlw	0
 24250  014954  6E0C               	movwf	(btemp+11)^0,c
 24251                           
 24252                           ;stkvar	_new_exp @ sp[(-13)+8]
 24253  014956  0EFB               	movlw	-5
 24254  014958  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24255  01495E  0EFC               	movlw	-4
 24256  014960  0060  F033  FFE3   	movff	btemp+11,plusw1
 24257                           
 24258                           ;stkvar	_b @ sp[(-13)+-4]
 24259  014966  0EEF               	movlw	-17
 24260  014968  6AE3               	clrf	plusw1,c
 24261  01496A  0EF0               	movlw	-16
 24262  01496C  6AE3               	clrf	plusw1,c
 24263  01496E  0EF1               	movlw	-15
 24264  014970  6AE3               	clrf	plusw1,c
 24265  014972  0EF2               	movlw	-14
 24266  014974  6AE3               	clrf	plusw1,c
 24267  014976                     l7902:
 24268                           
 24269                           ;stkvar	_new_exp @ sp[(-13)+8]
 24270  014976  0EFC               	movlw	-4
 24271  014978  BEE3               	btfsc	plusw1,7,c
 24272  01497A  D007               	goto	u6370
 24273  01497C  0EFC               	movlw	-4
 24274  01497E  50E3               	movf	plusw1,w,c
 24275  014980  E112               	bnz	l7908
 24276  014982  0EFB               	movlw	-5
 24277  014984  04E3               	decf	plusw1,w,c
 24278  014986  B0D8               	btfsc	status,0,c
 24279  014988  D00E               	goto	l7908
 24280  01498A                     u6370:
 24281                           
 24282                           ;stkvar	_new_exp @ sp[(-13)+8]
 24283  01498A  0EFB               	movlw	-5
 24284  01498C  6AE3               	clrf	plusw1,c
 24285  01498E  0EFC               	movlw	-4
 24286  014990  6AE3               	clrf	plusw1,c
 24287                           
 24288                           ;stkvar	_b @ sp[(-13)+-4]
 24289  014992  0EEF               	movlw	-17
 24290  014994  6AE3               	clrf	plusw1,c
 24291  014996  0EF0               	movlw	-16
 24292  014998  6AE3               	clrf	plusw1,c
 24293  01499A  0EF1               	movlw	-15
 24294  01499C  6AE3               	clrf	plusw1,c
 24295  01499E  0EF2               	movlw	-14
 24296  0149A0  6AE3               	clrf	plusw1,c
 24297                           
 24298                           ;stkvar	_sign @ sp[(-13)+12]
 24299  0149A2  0EFF               	movlw	-1
 24300  0149A4  6AE3               	clrf	plusw1,c
 24301  0149A6                     l7908:
 24302                           
 24303                           ;stkvar	_new_exp @ sp[(-13)+8]
 24304                           ;stkvar	_bexp @ sp[(-13)+11]
 24305  0149A6  0EFB               	movlw	-5
 24306  0149A8  006F FF8C  F001    	movff	plusw1,btemp
 24307  0149AE  0EFE               	movlw	-2
 24308  0149B0  0060  F007  FFE3   	movff	btemp,plusw1
 24309                           
 24310                           ;stkvar	_bexp @ sp[(-13)+11]
 24311  0149B6  0EFE               	movlw	-2
 24312  0149B8  A0E3               	btfss	plusw1,0,c
 24313  0149BA  D009               	goto	l7914
 24314                           
 24315                           ;stkvar	_b @ sp[(-13)+-4]
 24316  0149BC  0EF1               	movlw	241
 24317  0149BE  24E1               	addwf	fsr1l,w,c
 24318  0149C0  6ED9               	movwf	fsr2l,c
 24319  0149C2  0EFF               	movlw	255
 24320  0149C4  20E2               	addwfc	fsr1h,w,c
 24321  0149C6  6EDA               	movwf	fsr2h,c
 24322  0149C8  0E00               	movlw	0
 24323  0149CA  8EDB               	bsf	plusw2,7,c
 24324  0149CC  D008               	goto	l7916
 24325  0149CE                     l7914:
 24326                           
 24327                           ;stkvar	_b @ sp[(-13)+-4]
 24328  0149CE  0EF1               	movlw	241
 24329  0149D0  24E1               	addwf	fsr1l,w,c
 24330  0149D2  6ED9               	movwf	fsr2l,c
 24331  0149D4  0EFF               	movlw	255
 24332  0149D6  20E2               	addwfc	fsr1h,w,c
 24333  0149D8  6EDA               	movwf	fsr2h,c
 24334  0149DA  0E7F               	movlw	127
 24335  0149DC  16DF               	andwf	indf2,f,c
 24336  0149DE                     l7916:
 24337                           
 24338                           ;stkvar	_b @ sp[(-13)+-4]
 24339  0149DE  0EF2               	movlw	242
 24340  0149E0  24E1               	addwf	fsr1l,w,c
 24341  0149E2  6ED9               	movwf	fsr2l,c
 24342  0149E4  0EFF               	movlw	255
 24343  0149E6  20E2               	addwfc	fsr1h,w,c
 24344  0149E8  6EDA               	movwf	fsr2h,c
 24345                           
 24346                           ;stkvar	_bexp @ sp[(-13)+11]
 24347  0149EA  0EFE               	movlw	-2
 24348  0149EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24349  0149F2  90D8               	bcf	status,0,c
 24350  0149F4  300C               	rrcf	(btemp+11)^0,w,c
 24351  0149F6  6EDF               	movwf	indf2,c
 24352  0149F8  D644               	goto	l7814
 24353  0149FA                     l2917:
 24354                           
 24355                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 24356  0149FA  0EEB               	movlw	235
 24357  0149FC  26E1               	addwf	fsr1l,f,c
 24358  0149FE  0EFF               	movlw	255
 24359  014A00  22E2               	addwfc	fsr1h,f,c
 24360  014A02  0012               	return		;funcret
 24361  014A04                     __end_of___fldiv:
 24362                           	opt callstack 0
 24363                           
 24364 ;; *************** function ___flge *****************
 24365 ;; Defined at:
 24366 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 24367 ;; Parameters:    Size  Location     Type
 24368 ;;  ff1             4  [STACK] unsigned char 
 24369 ;;  ff2             4  [STACK] unsigned char 
 24370 ;; Auto vars:     Size  Location     Type
 24371 ;;		None
 24372 ;; Return value:  Size  Location     Type
 24373 ;;		None               void
 24374 ;; Registers used:
 24375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24376 ;; Tracked objects:
 24377 ;;		On entry : 0/0
 24378 ;;		On exit  : 0/0
 24379 ;;		Unchanged: 0/0
 24380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24385 ;;Total ram usage:        0 bytes
 24386 ;; Hardware stack levels used:    1
 24387 ;; Hardware stack levels required when called:   15
 24388 ;; This function calls:
 24389 ;;		Nothing
 24390 ;; This function is called by:
 24391 ;;		_main
 24392 ;;		_calc_ror_data
 24393 ;;		_calc_bsoc
 24394 ;;		_efgtoa
 24395 ;; This function uses a reentrant model
 24396 ;;
 24397                           
 24398                           	psect	text99
 24399  01815A                     __ptext99:
 24400                           	opt callstack 0
 24401  01815A                     ___flge:
 24402                           	opt callstack 0
 24403                           
 24404                           ;stkvar	_ff1 @ sp[(0)+-4]
 24405                           
 24406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24407                           ;incstack = 0
 24408 ;; hardware stack exceeded
 24409  01815A  50E1               	movf	fsr1l,w,c
 24410  01815C  0FFC               	addlw	-4
 24411  01815E  6ED9               	movwf	fsr2l,c
 24412  018160  50E2               	movf	fsr1h,w,c
 24413  018162  6EDA               	movwf	fsr2h,c
 24414  018164  0EFF               	movlw	255
 24415  018166  22DA               	addwfc	fsr2h,f,c
 24416  018168  0E00               	movlw	0
 24417  01816A  14DE               	andwf	postinc2,w,c
 24418  01816C  6E09               	movwf	(btemp+8)^0,c
 24419  01816E  0E00               	movlw	0
 24420  018170  14DE               	andwf	postinc2,w,c
 24421  018172  6E0A               	movwf	(btemp+9)^0,c
 24422  018174  0E80               	movlw	128
 24423  018176  14DE               	andwf	postinc2,w,c
 24424  018178  6E0B               	movwf	(btemp+10)^0,c
 24425  01817A  0E7F               	movlw	127
 24426  01817C  14DE               	andwf	postinc2,w,c
 24427  01817E  6E0C               	movwf	(btemp+11)^0,c
 24428  018180  5009               	movf	(btemp+8)^0,w,c
 24429  018182  100A               	iorwf	(btemp+9)^0,w,c
 24430  018184  100B               	iorwf	(btemp+10)^0,w,c
 24431  018186  100C               	iorwf	(btemp+11)^0,w,c
 24432  018188  A4D8               	btfss	status,2,c
 24433  01818A  D008               	goto	l8190
 24434                           
 24435                           ;stkvar	_ff1 @ sp[(0)+-4]
 24436  01818C  0EFC               	movlw	-4
 24437  01818E  6AE3               	clrf	plusw1,c
 24438  018190  0EFD               	movlw	-3
 24439  018192  6AE3               	clrf	plusw1,c
 24440  018194  0EFE               	movlw	-2
 24441  018196  6AE3               	clrf	plusw1,c
 24442  018198  0EFF               	movlw	-1
 24443  01819A  6AE3               	clrf	plusw1,c
 24444  01819C                     l8190:
 24445                           
 24446                           ;stkvar	_ff2 @ sp[(0)+-8]
 24447  01819C  50E1               	movf	fsr1l,w,c
 24448  01819E  0FF8               	addlw	-8
 24449  0181A0  6ED9               	movwf	fsr2l,c
 24450  0181A2  50E2               	movf	fsr1h,w,c
 24451  0181A4  6EDA               	movwf	fsr2h,c
 24452  0181A6  0EFF               	movlw	255
 24453  0181A8  22DA               	addwfc	fsr2h,f,c
 24454  0181AA  0E00               	movlw	0
 24455  0181AC  14DE               	andwf	postinc2,w,c
 24456  0181AE  6E09               	movwf	(btemp+8)^0,c
 24457  0181B0  0E00               	movlw	0
 24458  0181B2  14DE               	andwf	postinc2,w,c
 24459  0181B4  6E0A               	movwf	(btemp+9)^0,c
 24460  0181B6  0E80               	movlw	128
 24461  0181B8  14DE               	andwf	postinc2,w,c
 24462  0181BA  6E0B               	movwf	(btemp+10)^0,c
 24463  0181BC  0E7F               	movlw	127
 24464  0181BE  14DE               	andwf	postinc2,w,c
 24465  0181C0  6E0C               	movwf	(btemp+11)^0,c
 24466  0181C2  5009               	movf	(btemp+8)^0,w,c
 24467  0181C4  100A               	iorwf	(btemp+9)^0,w,c
 24468  0181C6  100B               	iorwf	(btemp+10)^0,w,c
 24469  0181C8  100C               	iorwf	(btemp+11)^0,w,c
 24470  0181CA  A4D8               	btfss	status,2,c
 24471  0181CC  D008               	goto	l2598
 24472                           
 24473                           ;stkvar	_ff2 @ sp[(0)+-8]
 24474  0181CE  0EF8               	movlw	-8
 24475  0181D0  6AE3               	clrf	plusw1,c
 24476  0181D2  0EF9               	movlw	-7
 24477  0181D4  6AE3               	clrf	plusw1,c
 24478  0181D6  0EFA               	movlw	-6
 24479  0181D8  6AE3               	clrf	plusw1,c
 24480  0181DA  0EFB               	movlw	-5
 24481  0181DC  6AE3               	clrf	plusw1,c
 24482  0181DE                     l2598:
 24483                           
 24484                           ;stkvar	_ff1 @ sp[(0)+-4]
 24485  0181DE  0EFF               	movlw	-1
 24486  0181E0  AEE3               	btfss	plusw1,7,c
 24487  0181E2  D024               	goto	l8196
 24488                           
 24489                           ;stkvar	_ff1 @ sp[(0)+-4]
 24490  0181E4  0E00               	movlw	0
 24491  0181E6  6E09               	movwf	(btemp+8)^0,c
 24492  0181E8  0E00               	movlw	0
 24493  0181EA  6E0A               	movwf	(btemp+9)^0,c
 24494  0181EC  0E00               	movlw	0
 24495  0181EE  6E0B               	movwf	(btemp+10)^0,c
 24496  0181F0  0E80               	movlw	128
 24497  0181F2  6E0C               	movwf	(btemp+11)^0,c
 24498  0181F4  0EFC               	movlw	-4
 24499  0181F6  50E3               	movf	plusw1,w,c
 24500  0181F8  5E09               	subwf	(btemp+8)^0,f,c
 24501  0181FA  0EFD               	movlw	-3
 24502  0181FC  50E3               	movf	plusw1,w,c
 24503  0181FE  5A0A               	subwfb	(btemp+9)^0,f,c
 24504  018200  0EFE               	movlw	-2
 24505  018202  50E3               	movf	plusw1,w,c
 24506  018204  5A0B               	subwfb	(btemp+10)^0,f,c
 24507  018206  0EFF               	movlw	-1
 24508  018208  50E3               	movf	plusw1,w,c
 24509  01820A  5A0C               	subwfb	(btemp+11)^0,f,c
 24510                           
 24511                           ;stkvar	_ff1 @ sp[(0)+-4]
 24512  01820C  0EFC               	movlw	-4
 24513  01820E  0060  F027  FFE3   	movff	btemp+8,plusw1
 24514  018214  0EFD               	movlw	-3
 24515  018216  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24516  01821C  0EFE               	movlw	-2
 24517  01821E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24518  018224  0EFF               	movlw	-1
 24519  018226  0060  F033  FFE3   	movff	btemp+11,plusw1
 24520  01822C                     l8196:
 24521                           
 24522                           ;stkvar	_ff2 @ sp[(0)+-8]
 24523  01822C  0EFB               	movlw	-5
 24524  01822E  AEE3               	btfss	plusw1,7,c
 24525  018230  D024               	goto	l8200
 24526                           
 24527                           ;stkvar	_ff2 @ sp[(0)+-8]
 24528  018232  0E00               	movlw	0
 24529  018234  6E09               	movwf	(btemp+8)^0,c
 24530  018236  0E00               	movlw	0
 24531  018238  6E0A               	movwf	(btemp+9)^0,c
 24532  01823A  0E00               	movlw	0
 24533  01823C  6E0B               	movwf	(btemp+10)^0,c
 24534  01823E  0E80               	movlw	128
 24535  018240  6E0C               	movwf	(btemp+11)^0,c
 24536  018242  0EF8               	movlw	-8
 24537  018244  50E3               	movf	plusw1,w,c
 24538  018246  5E09               	subwf	(btemp+8)^0,f,c
 24539  018248  0EF9               	movlw	-7
 24540  01824A  50E3               	movf	plusw1,w,c
 24541  01824C  5A0A               	subwfb	(btemp+9)^0,f,c
 24542  01824E  0EFA               	movlw	-6
 24543  018250  50E3               	movf	plusw1,w,c
 24544  018252  5A0B               	subwfb	(btemp+10)^0,f,c
 24545  018254  0EFB               	movlw	-5
 24546  018256  50E3               	movf	plusw1,w,c
 24547  018258  5A0C               	subwfb	(btemp+11)^0,f,c
 24548                           
 24549                           ;stkvar	_ff2 @ sp[(0)+-8]
 24550  01825A  0EF8               	movlw	-8
 24551  01825C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24552  018262  0EF9               	movlw	-7
 24553  018264  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24554  01826A  0EFA               	movlw	-6
 24555  01826C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24556  018272  0EFB               	movlw	-5
 24557  018274  0060  F033  FFE3   	movff	btemp+11,plusw1
 24558  01827A                     l8200:
 24559                           
 24560                           ;stkvar	_ff1 @ sp[(0)+-4]
 24561  01827A  0EFF               	movlw	-1
 24562  01827C  7EE3               	btg	plusw1,7,c
 24563                           
 24564                           ;stkvar	_ff2 @ sp[(0)+-8]
 24565  01827E  0EFB               	movlw	-5
 24566  018280  7EE3               	btg	plusw1,7,c
 24567                           
 24568                           ;stkvar	_ff2 @ sp[(0)+-8]
 24569                           ;stkvar	_ff1 @ sp[(0)+-4]
 24570  018282  50E1               	movf	fsr1l,w,c
 24571  018284  0FFC               	addlw	-4
 24572  018286  6ED9               	movwf	fsr2l,c
 24573  018288  50E2               	movf	fsr1h,w,c
 24574  01828A  6EDA               	movwf	fsr2h,c
 24575  01828C  0EFF               	movlw	255
 24576  01828E  22DA               	addwfc	fsr2h,f,c
 24577  018290  0EF8               	movlw	-8
 24578  018292  50E3               	movf	plusw1,w,c
 24579  018294  5CDE               	subwf	postinc2,w,c
 24580  018296  0EF9               	movlw	-7
 24581  018298  50E3               	movf	plusw1,w,c
 24582  01829A  58DE               	subwfb	postinc2,w,c
 24583  01829C  0EFA               	movlw	-6
 24584  01829E  50E3               	movf	plusw1,w,c
 24585  0182A0  58DE               	subwfb	postinc2,w,c
 24586  0182A2  0EFB               	movlw	-5
 24587  0182A4  50E3               	movf	plusw1,w,c
 24588  0182A6  58DE               	subwfb	postinc2,w,c
 24589  0182A8  B0D8               	btfsc	status,0,c
 24590  0182AA  D002               	goto	l8208
 24591  0182AC  9001               	bcf	btemp& (0+255),0,c
 24592  0182AE  D001               	goto	l2605
 24593  0182B0                     l8208:
 24594  0182B0  8001               	bsf	btemp& (0+255),0,c
 24595  0182B2                     l2605:
 24596                           
 24597                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 24598  0182B2  0EF8               	movlw	248
 24599  0182B4  26E1               	addwf	fsr1l,f,c
 24600  0182B6  0EFF               	movlw	255
 24601  0182B8  22E2               	addwfc	fsr1h,f,c
 24602  0182BA  0012               	return		;funcret
 24603  0182BC                     __end_of___flge:
 24604                           	opt callstack 0
 24605                           
 24606 ;; *************** function _calc_model_data *****************
 24607 ;; Defined at:
 24608 ;;		line 67 in file "mbmc.c"
 24609 ;; Parameters:    Size  Location     Type
 24610 ;;		None
 24611 ;; Auto vars:     Size  Location     Type
 24612 ;;		None
 24613 ;; Return value:  Size  Location     Type
 24614 ;;                  1  [STACK] void 
 24615 ;; Registers used:
 24616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24617 ;; Tracked objects:
 24618 ;;		On entry : 0/0
 24619 ;;		On exit  : 3F/1
 24620 ;;		Unchanged: 0/0
 24621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24626 ;;Total ram usage:        0 bytes
 24627 ;; Hardware stack levels used:    1
 24628 ;; Hardware stack levels required when called:   18
 24629 ;; This function calls:
 24630 ;;		___fladd
 24631 ;;		___flmul
 24632 ;;		___flsub
 24633 ;;		_lp_filter
 24634 ;;		_start_bsoc
 24635 ;;		_stop_bsoc
 24636 ;; This function is called by:
 24637 ;;		_main
 24638 ;; This function uses a reentrant model
 24639 ;;
 24640                           
 24641                           	psect	text100
 24642  0156EA                     __ptext100:
 24643                           	opt callstack 0
 24644  0156EA                     _calc_model_data:
 24645                           	opt callstack 12
 24646                           
 24647                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 24648                           
 24649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24650                           ;incstack = 0
 24651  0156EA  ECBC  F0D8         	call	_stop_bsoc	;wreg free
 24652                           
 24653                           ; BSR set to: 57
 24654                           ;mbmc.c: 72:  if (!V.calib) {
 24655  0156EE  0102               	movlb	2	; () banked
 24656  0156F0  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 24657  0156F2  A4D8               	btfss	status,2,c
 24658  0156F4  D1C5               	goto	l10496
 24659                           
 24660                           ; BSR set to: 2
 24661                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 24662  0156F6  C100  F144         	movff	_C,_C+68	;volatile
 24663  0156FA  C101  F145         	movff	_C+1,_C+69	;volatile
 24664  0156FE  C102  F146         	movff	_C+2,_C+70	;volatile
 24665  015702  C103  F147         	movff	_C+3,_C+71	;volatile
 24666                           
 24667                           ; BSR set to: 2
 24668                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 24669  015706  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 24670  01570C  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 24671  015712  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 24672  015718  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 24673  01571E  0060  F513  FFE6   	movff	_C+68,postinc1
 24674  015724  0060  F517  FFE6   	movff	_C+69,postinc1
 24675  01572A  0060  F51B  FFE6   	movff	_C+70,postinc1
 24676  015730  0060  F51F  FFE6   	movff	_C+71,postinc1
 24677  015736  EC77  F0D2         	call	___flsub	;wreg free
 24678  01573A  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 24679  015740  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 24680  015746  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 24681  01574C  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 24682                           
 24683                           ;mbmc.c: 75:   bcror = C.c_bat;
 24684  015752  C144  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 24685  015756  C145  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 24686  01575A  C146  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 24687  01575E  C147  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 24688                           
 24689                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 24690  015762  C104  F148         	movff	_C+4,_C+72	;volatile
 24691  015766  C105  F149         	movff	_C+5,_C+73	;volatile
 24692  01576A  C106  F14A         	movff	_C+6,_C+74	;volatile
 24693  01576E  C107  F14B         	movff	_C+7,_C+75	;volatile
 24694                           
 24695                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 24696  015772  C110  F154         	movff	_C+16,_C+84	;volatile
 24697  015776  C111  F155         	movff	_C+17,_C+85	;volatile
 24698  01577A  C112  F156         	movff	_C+18,_C+86	;volatile
 24699  01577E  C113  F157         	movff	_C+19,_C+87	;volatile
 24700                           
 24701                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 24702  015782  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 24703  015788  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 24704  01578E  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 24705  015794  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 24706  01579A  0060  F553  FFE6   	movff	_C+84,postinc1
 24707  0157A0  0060  F557  FFE6   	movff	_C+85,postinc1
 24708  0157A6  0060  F55B  FFE6   	movff	_C+86,postinc1
 24709  0157AC  0060  F55F  FFE6   	movff	_C+87,postinc1
 24710  0157B2  EC77  F0D2         	call	___flsub	;wreg free
 24711  0157B6  0060  F004  F168   	movff	btemp,_C+104	;volatile
 24712  0157BC  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 24713  0157C2  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 24714  0157C8  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 24715                           
 24716                           ;mbmc.c: 79:   bvror = C.v_bat;
 24717  0157CE  C154  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 24718  0157D2  C155  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 24719  0157D6  C156  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 24720  0157DA  C157  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 24721                           
 24722                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 24723  0157DE  C114  F150         	movff	_C+20,_C+80	;volatile
 24724  0157E2  C115  F151         	movff	_C+21,_C+81	;volatile
 24725  0157E6  C116  F152         	movff	_C+22,_C+82	;volatile
 24726  0157EA  C117  F153         	movff	_C+23,_C+83	;volatile
 24727                           
 24728                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 24729  0157EE  C108  F14C         	movff	_C+8,_C+76	;volatile
 24730  0157F2  C109  F14D         	movff	_C+9,_C+77	;volatile
 24731  0157F6  C10A  F14E         	movff	_C+10,_C+78	;volatile
 24732  0157FA  C10B  F14F         	movff	_C+11,_C+79	;volatile
 24733                           
 24734                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 24735  0157FE  C130  F164         	movff	_C+48,_C+100	;volatile
 24736  015802  C131  F165         	movff	_C+49,_C+101	;volatile
 24737  015806  C132  F166         	movff	_C+50,_C+102	;volatile
 24738  01580A  C133  F167         	movff	_C+51,_C+103	;volatile
 24739                           
 24740                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 24741  01580E  0E01               	movlw	1
 24742  015810  6EE6               	movwf	postinc1,c
 24743  015812  0E10               	movlw	16
 24744  015814  6EE6               	movwf	postinc1,c
 24745  015816  0060  F403  FFE6   	movff	_C,postinc1
 24746  01581C  0060  F407  FFE6   	movff	_C+1,postinc1
 24747  015822  0060  F40B  FFE6   	movff	_C+2,postinc1
 24748  015828  0060  F40F  FFE6   	movff	_C+3,postinc1
 24749  01582E  0060  F413  FFE6   	movff	_C+4,postinc1
 24750  015834  0060  F417  FFE6   	movff	_C+5,postinc1
 24751  01583A  0060  F41B  FFE6   	movff	_C+6,postinc1
 24752  015840  0060  F41F  FFE6   	movff	_C+7,postinc1
 24753  015846  EC77  F0D2         	call	___flsub	;wreg free
 24754  01584A  0060  F007  FFE6   	movff	btemp,postinc1
 24755  015850  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24756  015856  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24757  01585C  0060  F013  FFE6   	movff	btemp+3,postinc1
 24758  015862  EC19  F0BC         	call	_lp_filter	;wreg free
 24759  015866  0060  F004  F140   	movff	btemp,_C+64	;volatile
 24760  01586C  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 24761  015872  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 24762  015878  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 24763                           
 24764                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 24765  01587E  0E01               	movlw	1
 24766  015880  6EE6               	movwf	postinc1,c
 24767  015882  0E11               	movlw	17
 24768  015884  6EE6               	movwf	postinc1,c
 24769  015886  0060  F553  FFE6   	movff	_C+84,postinc1
 24770  01588C  0060  F557  FFE6   	movff	_C+85,postinc1
 24771  015892  0060  F55B  FFE6   	movff	_C+86,postinc1
 24772  015898  0060  F55F  FFE6   	movff	_C+87,postinc1
 24773  01589E  0060  F503  FFE6   	movff	_C+64,postinc1
 24774  0158A4  0060  F507  FFE6   	movff	_C+65,postinc1
 24775  0158AA  0060  F50B  FFE6   	movff	_C+66,postinc1
 24776  0158B0  0060  F50F  FFE6   	movff	_C+67,postinc1
 24777  0158B6  EC03  F097         	call	___flmul	;wreg free
 24778  0158BA  0060  F007  FFE6   	movff	btemp,postinc1
 24779  0158C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24780  0158C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24781  0158CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 24782  0158D2  EC19  F0BC         	call	_lp_filter	;wreg free
 24783  0158D6  0060  F004  F170   	movff	btemp,_C+112	;volatile
 24784  0158DC  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 24785  0158E2  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 24786  0158E8  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 24787                           
 24788                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 24789  0158EE  0E01               	movlw	1
 24790  0158F0  6EE6               	movwf	postinc1,c
 24791  0158F2  0E12               	movlw	18
 24792  0158F4  6EE6               	movwf	postinc1,c
 24793  0158F6  0060  F543  FFE6   	movff	_C+80,postinc1
 24794  0158FC  0060  F547  FFE6   	movff	_C+81,postinc1
 24795  015902  0060  F54B  FFE6   	movff	_C+82,postinc1
 24796  015908  0060  F54F  FFE6   	movff	_C+83,postinc1
 24797  01590E  0060  F523  FFE6   	movff	_C+72,postinc1
 24798  015914  0060  F527  FFE6   	movff	_C+73,postinc1
 24799  01591A  0060  F52B  FFE6   	movff	_C+74,postinc1
 24800  015920  0060  F52F  FFE6   	movff	_C+75,postinc1
 24801  015926  EC03  F097         	call	___flmul	;wreg free
 24802  01592A  0060  F007  FFE6   	movff	btemp,postinc1
 24803  015930  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24804  015936  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24805  01593C  0060  F013  FFE6   	movff	btemp+3,postinc1
 24806  015942  EC19  F0BC         	call	_lp_filter	;wreg free
 24807  015946  0060  F004  F178   	movff	btemp,_C+120	;volatile
 24808  01594C  0060  F008  F179   	movff	btemp+1,_C+121	;volatile
 24809  015952  0060  F00C  F17A   	movff	btemp+2,_C+122	;volatile
 24810  015958  0060  F010  F17B   	movff	btemp+3,_C+123	;volatile
 24811                           
 24812                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 24813  01595E  0E01               	movlw	1
 24814  015960  6EE6               	movwf	postinc1,c
 24815  015962  0E13               	movlw	19
 24816  015964  6EE6               	movwf	postinc1,c
 24817  015966  0E00               	movlw	0
 24818  015968  6EE6               	movwf	postinc1,c
 24819  01596A  0E00               	movlw	0
 24820  01596C  6EE6               	movwf	postinc1,c
 24821  01596E  0E60               	movlw	96
 24822  015970  6EE6               	movwf	postinc1,c
 24823  015972  0EC1               	movlw	193
 24824  015974  6EE6               	movwf	postinc1,c
 24825  015976  0060  F593  FFE6   	movff	_C+100,postinc1
 24826  01597C  0060  F597  FFE6   	movff	_C+101,postinc1
 24827  015982  0060  F59B  FFE6   	movff	_C+102,postinc1
 24828  015988  0060  F59F  FFE6   	movff	_C+103,postinc1
 24829  01598E  0060  F503  FFE6   	movff	_C+64,postinc1
 24830  015994  0060  F507  FFE6   	movff	_C+65,postinc1
 24831  01599A  0060  F50B  FFE6   	movff	_C+66,postinc1
 24832  0159A0  0060  F50F  FFE6   	movff	_C+67,postinc1
 24833  0159A6  EC03  F097         	call	___flmul	;wreg free
 24834  0159AA  0060  F007  FFE6   	movff	btemp,postinc1
 24835  0159B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24836  0159B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24837  0159BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 24838  0159C2  EC18  F09B         	call	___fladd	;wreg free
 24839  0159C6  0060  F007  FFE6   	movff	btemp,postinc1
 24840  0159CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24841  0159D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24842  0159D8  0060  F013  FFE6   	movff	btemp+3,postinc1
 24843  0159DE  EC19  F0BC         	call	_lp_filter	;wreg free
 24844  0159E2  0060  F004  F174   	movff	btemp,_C+116	;volatile
 24845  0159E8  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 24846  0159EE  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 24847  0159F4  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 24848                           
 24849                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 24850  0159FA  0E01               	movlw	1
 24851  0159FC  6EE6               	movwf	postinc1,c
 24852  0159FE  0E14               	movlw	20
 24853  015A00  6EE6               	movwf	postinc1,c
 24854  015A02  0060  F553  FFE6   	movff	_C+84,postinc1
 24855  015A08  0060  F557  FFE6   	movff	_C+85,postinc1
 24856  015A0E  0060  F55B  FFE6   	movff	_C+86,postinc1
 24857  015A14  0060  F55F  FFE6   	movff	_C+87,postinc1
 24858  015A1A  0060  F513  FFE6   	movff	_C+68,postinc1
 24859  015A20  0060  F517  FFE6   	movff	_C+69,postinc1
 24860  015A26  0060  F51B  FFE6   	movff	_C+70,postinc1
 24861  015A2C  0060  F51F  FFE6   	movff	_C+71,postinc1
 24862  015A32  EC03  F097         	call	___flmul	;wreg free
 24863  015A36  0060  F007  FFE6   	movff	btemp,postinc1
 24864  015A3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24865  015A42  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24866  015A48  0060  F013  FFE6   	movff	btemp+3,postinc1
 24867  015A4E  EC19  F0BC         	call	_lp_filter	;wreg free
 24868  015A52  0060  F004  F17C   	movff	btemp,_C+124	;volatile
 24869  015A58  0060  F008  F17D   	movff	btemp+1,_C+125	;volatile
 24870  015A5E  0060  F00C  F17E   	movff	btemp+2,_C+126	;volatile
 24871  015A64  0060  F010  F17F   	movff	btemp+3,_C+127	;volatile
 24872                           
 24873                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 24874  015A6A  0101               	movlb	1	; () banked
 24875  015A6C  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 24876  015A6E  D008               	goto	l10496
 24877                           
 24878                           ; BSR set to: 1
 24879                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 24880  015A70  0E17               	movlw	23
 24881  015A72  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 24882  015A74  0EB7               	movlw	183
 24883  015A76  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 24884  015A78  0ED1               	movlw	209
 24885  015A7A  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 24886  015A7C  0E38               	movlw	56
 24887  015A7E  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 24888  015A80                     l10496:
 24889                           
 24890                           ;mbmc.c: 94:  start_bsoc();
 24891  015A80  EC5E  F0D7         	call	_start_bsoc	;wreg free
 24892                           
 24893                           ; BSR set to: 57
 24894                           ;mbmc.c: 95:  C.update = 1;
 24895  015A84  0E01               	movlw	1
 24896  015A86  0101               	movlb	1	; () banked
 24897  015A88  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 24898                           
 24899                           ; BSR set to: 1
 24900                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24901  015A8A  0012               	return		;funcret
 24902  015A8C                     __end_of_calc_model_data:
 24903                           	opt callstack 0
 24904                           
 24905 ;; *************** function _stop_bsoc *****************
 24906 ;; Defined at:
 24907 ;;		line 107 in file "bsoc.c"
 24908 ;; Parameters:    Size  Location     Type
 24909 ;;		None
 24910 ;; Auto vars:     Size  Location     Type
 24911 ;;		None
 24912 ;; Return value:  Size  Location     Type
 24913 ;;                  1  [STACK] void 
 24914 ;; Registers used:
 24915 ;;		None
 24916 ;; Tracked objects:
 24917 ;;		On entry : 0/0
 24918 ;;		On exit  : 3F/39
 24919 ;;		Unchanged: 0/0
 24920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24925 ;;Total ram usage:        0 bytes
 24926 ;; Hardware stack levels used:    1
 24927 ;; Hardware stack levels required when called:   15
 24928 ;; This function calls:
 24929 ;;		Nothing
 24930 ;; This function is called by:
 24931 ;;		_calc_model_data
 24932 ;; This function uses a reentrant model
 24933 ;;
 24934                           
 24935                           	psect	text101
 24936  01B178                     __ptext101:
 24937                           	opt callstack 0
 24938  01B178                     _stop_bsoc:
 24939                           	opt callstack 14
 24940                           
 24941                           ;bsoc.c: 110:  PIE6bits.TMR3IE = 0;
 24942                           
 24943                           ; BSR set to: 1
 24944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24945                           ;incstack = 0
 24946  01B178  0139               	movlb	57	; () banked
 24947  01B17A  9D96               	bcf	150,6,b	;volatile
 24948                           
 24949                           ; BSR set to: 57
 24950                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 24951  01B17C  0012               	return		;funcret
 24952  01B17E                     __end_of_stop_bsoc:
 24953                           	opt callstack 0
 24954                           
 24955 ;; *************** function _start_bsoc *****************
 24956 ;; Defined at:
 24957 ;;		line 98 in file "bsoc.c"
 24958 ;; Parameters:    Size  Location     Type
 24959 ;;		None
 24960 ;; Auto vars:     Size  Location     Type
 24961 ;;		None
 24962 ;; Return value:  Size  Location     Type
 24963 ;;                  1  [STACK] void 
 24964 ;; Registers used:
 24965 ;;		wreg, status,2, status,0, btemp+11
 24966 ;; Tracked objects:
 24967 ;;		On entry : 3C/2
 24968 ;;		On exit  : 3F/39
 24969 ;;		Unchanged: 0/0
 24970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24975 ;;Total ram usage:        0 bytes
 24976 ;; Hardware stack levels used:    1
 24977 ;; Hardware stack levels required when called:   15
 24978 ;; This function calls:
 24979 ;;		Nothing
 24980 ;; This function is called by:
 24981 ;;		_calc_model_data
 24982 ;; This function uses a reentrant model
 24983 ;;
 24984                           
 24985                           	psect	text102
 24986  01AEBC                     __ptext102:
 24987                           	opt callstack 0
 24988  01AEBC                     _start_bsoc:
 24989                           	opt callstack 14
 24990                           
 24991                           ;bsoc.c: 101:  PIE6bits.TMR3IE = 1;
 24992                           
 24993                           ; BSR set to: 57
 24994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24995                           ;incstack = 0
 24996  01AEBC  0139               	movlb	57	; () banked
 24997  01AEBE  8D96               	bsf	150,6,b	;volatile
 24998                           
 24999                           ; BSR set to: 57
 25000  01AEC0  A4BE               	btfss	190,2,c	;volatile
 25001  01AEC2  D002               	goto	u9180
 25002  01AEC4  0E01               	movlw	1
 25003  01AEC6  D001               	goto	u9186
 25004  01AEC8                     u9180:
 25005  01AEC8  0E00               	movlw	0
 25006  01AECA                     u9186:
 25007  01AECA  0AFF               	xorlw	255
 25008  01AECC  6E0C               	movwf	(btemp+11)^0,c
 25009  01AECE  460C               	rlncf	(btemp+11)^0,f,c
 25010  01AED0  460C               	rlncf	(btemp+11)^0,f,c
 25011  01AED2  50BE               	movf	190,w,c	;volatile
 25012  01AED4  180C               	xorwf	(btemp+11)^0,w,c
 25013  01AED6  0BFB               	andlw	-5
 25014  01AED8  180C               	xorwf	(btemp+11)^0,w,c
 25015  01AEDA  6EBE               	movwf	190,c	;volatile
 25016                           
 25017                           ; BSR set to: 57
 25018                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25019  01AEDC  0012               	return		;funcret
 25020  01AEDE                     __end_of_start_bsoc:
 25021                           	opt callstack 0
 25022                           
 25023 ;; *************** function _lp_filter *****************
 25024 ;; Defined at:
 25025 ;;		line 29 in file "mbmc.c"
 25026 ;; Parameters:    Size  Location     Type
 25027 ;;  new             4  [STACK] const float 
 25028 ;;  bn              1  [STACK] const unsigned char 
 25029 ;;  slow            1  [STACK] const char 
 25030 ;; Auto vars:     Size  Location     Type
 25031 ;;  lp_speed        4  [STACK] float 
 25032 ;; Return value:  Size  Location     Type
 25033 ;;                  4  [STACK] float 
 25034 ;; Registers used:
 25035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25036 ;; Tracked objects:
 25037 ;;		On entry : 0/2
 25038 ;;		On exit  : 0/0
 25039 ;;		Unchanged: 0/0
 25040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25045 ;;Total ram usage:        0 bytes
 25046 ;; Hardware stack levels used:    1
 25047 ;; Hardware stack levels required when called:   17
 25048 ;; This function calls:
 25049 ;;		___fladd
 25050 ;;		___flmul
 25051 ;;		___flsub
 25052 ;; This function is called by:
 25053 ;;		_main
 25054 ;;		_convert_adc_data
 25055 ;;		_calc_model_data
 25056 ;; This function uses a reentrant model
 25057 ;;
 25058                           
 25059                           	psect	text103
 25060  017832                     __ptext103:
 25061                           	opt callstack 0
 25062  017832                     _lp_filter:
 25063                           	opt callstack 0
 25064                           
 25065                           ; BSR set to: 57
 25066                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25067  017832  52E6               	movf	postinc1,f,c
 25068  017834  52E6               	movf	postinc1,f,c
 25069  017836  52E6               	movf	postinc1,f,c
 25070  017838  52E6               	movf	postinc1,f,c
 25071                           
 25072                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25073                           ;stkvar	_bn @ sp[(-4)+-5]
 25074                           
 25075                           ;incstack = 0
 25076  01783A  0EF7               	movlw	-9
 25077  01783C  006F FF8C  F001    	movff	plusw1,btemp
 25078  017842  0E14               	movlw	20
 25079  017844  6401               	cpfsgt	btemp^0,c
 25080  017846  D011               	goto	l9946
 25081  017848                     u9090:
 25082                           
 25083                           ;mbmc.c: 35:   return new;
 25084                           ;stkvar	_new @ sp[(-4)+-4]
 25085  017848  0EF8               	movlw	-8
 25086  01784A  006F FF8C  F001    	movff	plusw1,btemp
 25087  017850  0EF9               	movlw	-7
 25088  017852  006F FF8C  F002    	movff	plusw1,btemp+1
 25089  017858  0EFA               	movlw	-6
 25090  01785A  006F FF8C  F003    	movff	plusw1,btemp+2
 25091  017860  0EFB               	movlw	-5
 25092  017862  006F FF8C  F004    	movff	plusw1,btemp+3
 25093  017868  D0BD               	goto	l1818
 25094  01786A                     l9946:
 25095                           
 25096                           ;mbmc.c: 37:  if (slow == (-1)) {
 25097                           ;stkvar	_slow @ sp[(-4)+-6]
 25098  01786A  0EF6               	movlw	-10
 25099  01786C  28E3               	incf	plusw1,w,c
 25100  01786E  A4D8               	btfss	status,2,c
 25101  017870  D012               	goto	l9954
 25102                           
 25103                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25104                           ;stkvar	_bn @ sp[(-4)+-5]
 25105  017872  0EF7               	movlw	-9
 25106  017874  50E3               	movf	plusw1,w,c
 25107  017876  0D04               	mullw	4
 25108  017878  0E00               	movlw	low lp_filter@smooth
 25109  01787A  24F3               	addwf	243,w,c
 25110  01787C  6ED9               	movwf	fsr2l,c
 25111  01787E  0E03               	movlw	high lp_filter@smooth
 25112  017880  20F4               	addwfc	prodh,w,c
 25113  017882  6EDA               	movwf	fsr2h,c
 25114  017884  0E00               	movlw	0
 25115  017886  6EDE               	movwf	postinc2,c
 25116  017888  0E00               	movlw	0
 25117  01788A  6EDE               	movwf	postinc2,c
 25118  01788C  0E00               	movlw	0
 25119  01788E  6EDE               	movwf	postinc2,c
 25120  017890  0E00               	movlw	0
 25121  017892  6EDD               	movwf	postdec2,c
 25122  017894  D7D9               	goto	u9090
 25123  017896                     l9954:
 25124                           
 25125                           ;mbmc.c: 42:  if (slow) {
 25126                           ;stkvar	_slow @ sp[(-4)+-6]
 25127  017896  0EF6               	movlw	-10
 25128  017898  50E3               	movf	plusw1,w,c
 25129  01789A  B4D8               	btfsc	status,2,c
 25130  01789C  D006               	goto	l9958
 25131                           
 25132                           ;mbmc.c: 43:   lp_speed = 0.033;
 25133  01789E  0E02               	movlw	2
 25134  0178A0  6E09               	movwf	(btemp+8)^0,c
 25135  0178A2  0E2B               	movlw	43
 25136  0178A4  6E0A               	movwf	(btemp+9)^0,c
 25137  0178A6  0E07               	movlw	7
 25138  0178A8  D005               	goto	L26
 25139  0178AA                     l9958:
 25140                           
 25141                           ;mbmc.c: 45:   lp_speed = 0.066;
 25142  0178AA  0E02               	movlw	2
 25143  0178AC  6E09               	movwf	(btemp+8)^0,c
 25144  0178AE  0E2B               	movlw	43
 25145  0178B0  6E0A               	movwf	(btemp+9)^0,c
 25146  0178B2  0E87               	movlw	135
 25147  0178B4                     L26:
 25148  0178B4  6E0B               	movwf	(btemp+10)^0,c
 25149  0178B6  0E3D               	movlw	61
 25150  0178B8  6E0C               	movwf	(btemp+11)^0,c
 25151                           
 25152                           ;stkvar	_lp_speed @ sp[(-4)+0]
 25153  0178BA  0EFC               	movlw	-4
 25154  0178BC  0060  F027  FFE3   	movff	btemp+8,plusw1
 25155  0178C2  0EFD               	movlw	-3
 25156  0178C4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25157  0178CA  0EFE               	movlw	-2
 25158  0178CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25159  0178D2  0EFF               	movlw	-1
 25160  0178D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25161                           
 25162                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 25163                           ;stkvar	_bn @ sp[(-4)+-5]
 25164  0178DA  0EF7               	movlw	-9
 25165  0178DC  50E3               	movf	plusw1,w,c
 25166  0178DE  0D04               	mullw	4
 25167  0178E0  0E00               	movlw	low lp_filter@smooth
 25168  0178E2  24F3               	addwf	243,w,c
 25169  0178E4  6ED9               	movwf	fsr2l,c
 25170  0178E6  0E03               	movlw	high lp_filter@smooth
 25171  0178E8  20F4               	addwfc	prodh,w,c
 25172  0178EA  6EDA               	movwf	fsr2h,c
 25173  0178EC  006F FF7B FFE6     	movff	postinc2,postinc1
 25174  0178F2  006F FF7B FFE6     	movff	postinc2,postinc1
 25175  0178F8  006F FF7B FFE6     	movff	postinc2,postinc1
 25176  0178FE  006F FF7B FFE6     	movff	postinc2,postinc1
 25177                           
 25178                           ;stkvar	_lp_speed @ sp[(-8)+0]
 25179  017904  0EF8               	movlw	-8
 25180  017906  006F FF8F FFE6     	movff	plusw1,postinc1
 25181  01790C  006F FF8F FFE6     	movff	plusw1,postinc1
 25182  017912  006F FF8F FFE6     	movff	plusw1,postinc1
 25183  017918  006F FF8F FFE6     	movff	plusw1,postinc1
 25184                           
 25185                           ;stkvar	_bn @ sp[(-12)+-5]
 25186  01791E  0EEF               	movlw	-17
 25187  017920  50E3               	movf	plusw1,w,c
 25188  017922  0D04               	mullw	4
 25189  017924  0E00               	movlw	low lp_filter@smooth
 25190  017926  24F3               	addwf	243,w,c
 25191  017928  6ED9               	movwf	fsr2l,c
 25192  01792A  0E03               	movlw	high lp_filter@smooth
 25193  01792C  20F4               	addwfc	prodh,w,c
 25194  01792E  6EDA               	movwf	fsr2h,c
 25195  017930  006F FF7B FFE6     	movff	postinc2,postinc1
 25196  017936  006F FF7B FFE6     	movff	postinc2,postinc1
 25197  01793C  006F FF7B FFE6     	movff	postinc2,postinc1
 25198  017942  006F FF7B FFE6     	movff	postinc2,postinc1
 25199                           
 25200                           ;stkvar	_new @ sp[(-16)+-4]
 25201  017948  0EEC               	movlw	-20
 25202  01794A  006F FF8F FFE6     	movff	plusw1,postinc1
 25203  017950  006F FF8F FFE6     	movff	plusw1,postinc1
 25204  017956  006F FF8F FFE6     	movff	plusw1,postinc1
 25205  01795C  006F FF8F FFE6     	movff	plusw1,postinc1
 25206  017962  EC77  F0D2         	call	___flsub	;wreg free
 25207  017966  0060  F007  FFE6   	movff	btemp,postinc1
 25208  01796C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25209  017972  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25210  017978  0060  F013  FFE6   	movff	btemp+3,postinc1
 25211  01797E  EC03  F097         	call	___flmul	;wreg free
 25212  017982  0060  F007  FFE6   	movff	btemp,postinc1
 25213  017988  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25214  01798E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25215  017994  0060  F013  FFE6   	movff	btemp+3,postinc1
 25216  01799A  EC18  F09B         	call	___fladd	;wreg free
 25217                           
 25218                           ;stkvar	_bn @ sp[(-4)+-5]
 25219  01799E  0EF7               	movlw	-9
 25220  0179A0  50E3               	movf	plusw1,w,c
 25221  0179A2  0D04               	mullw	4
 25222  0179A4  0E00               	movlw	low lp_filter@smooth
 25223  0179A6  24F3               	addwf	243,w,c
 25224  0179A8  6ED9               	movwf	fsr2l,c
 25225  0179AA  0E03               	movlw	high lp_filter@smooth
 25226  0179AC  20F4               	addwfc	prodh,w,c
 25227  0179AE  6EDA               	movwf	fsr2h,c
 25228  0179B0  0060  F007  FFDE   	movff	btemp,postinc2
 25229  0179B6  0060  F00B  FFDE   	movff	btemp+1,postinc2
 25230  0179BC  0060  F00F  FFDE   	movff	btemp+2,postinc2
 25231  0179C2  0060  F013  FFDD   	movff	btemp+3,postdec2
 25232  0179C8  52DD               	movf	postdec2,f,c
 25233  0179CA  52DD               	movf	postdec2,f,c
 25234  0179CC  006F FF78  F001    	movff	postinc2,btemp
 25235  0179D2  006F FF78  F002    	movff	postinc2,btemp+1
 25236  0179D8  006F FF78  F003    	movff	postinc2,btemp+2
 25237  0179DE  006F FF78  F004    	movff	postinc2,btemp+3
 25238  0179E4                     l1818:
 25239                           
 25240                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 25241  0179E4  0EF6               	movlw	246
 25242  0179E6  26E1               	addwf	fsr1l,f,c
 25243  0179E8  0EFF               	movlw	255
 25244  0179EA  22E2               	addwfc	fsr1h,f,c
 25245  0179EC  0012               	return		;funcret
 25246  0179EE                     __end_of_lp_filter:
 25247                           	opt callstack 0
 25248                           
 25249 ;; *************** function ___flsub *****************
 25250 ;; Defined at:
 25251 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 25252 ;; Parameters:    Size  Location     Type
 25253 ;;  b               4  [STACK] float 
 25254 ;;  a               4  [STACK] float 
 25255 ;; Auto vars:     Size  Location     Type
 25256 ;;		None
 25257 ;; Return value:  Size  Location     Type
 25258 ;;                  4  [STACK] float 
 25259 ;; Registers used:
 25260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25261 ;; Tracked objects:
 25262 ;;		On entry : 0/0
 25263 ;;		On exit  : 0/0
 25264 ;;		Unchanged: 0/0
 25265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25270 ;;Total ram usage:        0 bytes
 25271 ;; Hardware stack levels used:    1
 25272 ;; Hardware stack levels required when called:   16
 25273 ;; This function calls:
 25274 ;;		___fladd
 25275 ;; This function is called by:
 25276 ;;		_conv_raw_result
 25277 ;;		_lp_filter
 25278 ;;		_calc_model_data
 25279 ;;		_calc_ror_data
 25280 ;;		_esr_check
 25281 ;;		_efgtoa
 25282 ;; This function uses a reentrant model
 25283 ;;
 25284                           
 25285                           	psect	text104
 25286  01A4EE                     __ptext104:
 25287                           	opt callstack 0
 25288  01A4EE                     ___flsub:
 25289                           	opt callstack 0
 25290                           
 25291                           ;stkvar	_a @ sp[(0)+-8]
 25292                           
 25293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25294                           ;incstack = 0
 25295 ;; hardware stack exceeded
 25296  01A4EE  0EFB               	movlw	-5
 25297  01A4F0  7EE3               	btg	plusw1,7,c
 25298                           
 25299                           ;stkvar	_a @ sp[(0)+-8]
 25300  01A4F2  0EF8               	movlw	-8
 25301  01A4F4  006F FF8F FFE6     	movff	plusw1,postinc1
 25302  01A4FA  006F FF8F FFE6     	movff	plusw1,postinc1
 25303  01A500  006F FF8F FFE6     	movff	plusw1,postinc1
 25304  01A506  006F FF8F FFE6     	movff	plusw1,postinc1
 25305                           
 25306                           ;stkvar	_b @ sp[(-4)+-4]
 25307  01A50C  0EF8               	movlw	-8
 25308  01A50E  006F FF8F FFE6     	movff	plusw1,postinc1
 25309  01A514  006F FF8F FFE6     	movff	plusw1,postinc1
 25310  01A51A  006F FF8F FFE6     	movff	plusw1,postinc1
 25311  01A520  006F FF8F FFE6     	movff	plusw1,postinc1
 25312  01A526  EC18  F09B         	call	___fladd	;wreg free
 25313                           
 25314                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 25315  01A52A  0EF8               	movlw	248
 25316  01A52C  26E1               	addwf	fsr1l,f,c
 25317  01A52E  0EFF               	movlw	255
 25318  01A530  22E2               	addwfc	fsr1h,f,c
 25319  01A532  0012               	return		;funcret
 25320  01A534                     __end_of___flsub:
 25321                           	opt callstack 0
 25322                           
 25323 ;; *************** function ___fladd *****************
 25324 ;; Defined at:
 25325 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 25326 ;; Parameters:    Size  Location     Type
 25327 ;;  b               4  [STACK] float 
 25328 ;;  a               4  [STACK] float 
 25329 ;; Auto vars:     Size  Location     Type
 25330 ;;  grs             1  [STACK] unsigned char 
 25331 ;;  bexp            1  [STACK] unsigned char 
 25332 ;;  aexp            1  [STACK] unsigned char 
 25333 ;;  signs           1  [STACK] unsigned char 
 25334 ;; Return value:  Size  Location     Type
 25335 ;;                  4  [STACK] unsigned char 
 25336 ;; Registers used:
 25337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25338 ;; Tracked objects:
 25339 ;;		On entry : 0/0
 25340 ;;		On exit  : 0/0
 25341 ;;		Unchanged: 0/0
 25342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25347 ;;Total ram usage:        0 bytes
 25348 ;; Hardware stack levels used:    1
 25349 ;; Hardware stack levels required when called:   15
 25350 ;; This function calls:
 25351 ;;		Nothing
 25352 ;; This function is called by:
 25353 ;;		_lp_filter
 25354 ;;		_calc_model_data
 25355 ;;		_calc_bsoc
 25356 ;;		_efgtoa
 25357 ;;		___flsub
 25358 ;; This function uses a reentrant model
 25359 ;;
 25360                           
 25361                           	psect	text105
 25362  013630                     __ptext105:
 25363                           	opt callstack 0
 25364  013630                     ___fladd:
 25365                           	opt callstack 0
 25366                           
 25367                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25368  013630  52E6               	movf	postinc1,f,c
 25369  013632  52E6               	movf	postinc1,f,c
 25370  013634  52E6               	movf	postinc1,f,c
 25371  013636  52E6               	movf	postinc1,f,c
 25372                           
 25373                           ;stkvar	_b @ sp[(-4)+-4]
 25374                           
 25375                           ;incstack = 0
 25376 ;; hardware stack exceeded
 25377  013638  0EFB               	movlw	251
 25378  01363A  24E1               	addwf	fsr1l,w,c
 25379  01363C  6ED9               	movwf	fsr2l,c
 25380  01363E  0EFF               	movlw	255
 25381  013640  20E2               	addwfc	fsr1h,w,c
 25382  013642  6EDA               	movwf	fsr2h,c
 25383  013644  50DF               	movf	indf2,w,c
 25384  013646  6E0C               	movwf	(btemp+11)^0,c
 25385  013648  0E80               	movlw	128
 25386  01364A  160C               	andwf	(btemp+11)^0,f,c
 25387                           
 25388                           ;stkvar	_signs @ sp[(-4)+3]
 25389  01364C  0EFF               	movlw	-1
 25390  01364E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25391                           
 25392                           ;stkvar	_b @ sp[(-4)+-4]
 25393  013654  0EFB               	movlw	251
 25394  013656  24E1               	addwf	fsr1l,w,c
 25395  013658  6ED9               	movwf	fsr2l,c
 25396  01365A  0EFF               	movlw	255
 25397  01365C  20E2               	addwfc	fsr1h,w,c
 25398  01365E  6EDA               	movwf	fsr2h,c
 25399  013660  50DF               	movf	indf2,w,c
 25400  013662  6E0C               	movwf	(btemp+11)^0,c
 25401  013664  90D8               	bcf	status,0,c
 25402  013666  340C               	rlcf	(btemp+11)^0,w,c
 25403  013668  6E0B               	movwf	(btemp+10)^0,c
 25404                           
 25405                           ;stkvar	_bexp @ sp[(-4)+1]
 25406  01366A  0EFD               	movlw	-3
 25407  01366C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25408                           
 25409                           ;stkvar	_b @ sp[(-4)+-4]
 25410  013672  0EFA               	movlw	250
 25411  013674  24E1               	addwf	fsr1l,w,c
 25412  013676  6ED9               	movwf	fsr2l,c
 25413  013678  0EFF               	movlw	255
 25414  01367A  20E2               	addwfc	fsr1h,w,c
 25415  01367C  6EDA               	movwf	fsr2h,c
 25416  01367E  AEDF               	btfss	indf2,7,c
 25417  013680  D002               	goto	l7340
 25418                           
 25419                           ;stkvar	_bexp @ sp[(-4)+1]
 25420  013682  0EFD               	movlw	-3
 25421  013684  80E3               	bsf	plusw1,0,c
 25422  013686                     l7340:
 25423                           
 25424                           ;stkvar	_bexp @ sp[(-4)+1]
 25425  013686  0EFD               	movlw	-3
 25426  013688  50E3               	movf	plusw1,w,c
 25427  01368A  B4D8               	btfsc	status,2,c
 25428  01368C  D027               	goto	l7350
 25429                           
 25430                           ;stkvar	_bexp @ sp[(-4)+1]
 25431  01368E  0EFD               	movlw	-3
 25432  013690  28E3               	incf	plusw1,w,c
 25433  013692  A4D8               	btfss	status,2,c
 25434  013694  D018               	goto	l7346
 25435  013696  0E00               	movlw	0
 25436  013698  6E09               	movwf	(btemp+8)^0,c
 25437  01369A  0E00               	movlw	0
 25438  01369C  6E0A               	movwf	(btemp+9)^0,c
 25439  01369E  0E00               	movlw	0
 25440  0136A0  6E0B               	movwf	(btemp+10)^0,c
 25441  0136A2  0E00               	movlw	0
 25442  0136A4  6E0C               	movwf	(btemp+11)^0,c
 25443                           
 25444                           ;stkvar	_b @ sp[(-4)+-4]
 25445  0136A6  0EF8               	movlw	-8
 25446  0136A8  0060  F027  FFE3   	movff	btemp+8,plusw1
 25447  0136AE  0EF9               	movlw	-7
 25448  0136B0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25449  0136B6  0EFA               	movlw	-6
 25450  0136B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25451  0136BE  0EFB               	movlw	-5
 25452  0136C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25453  0136C6                     l7346:
 25454                           
 25455                           ;stkvar	_b @ sp[(-4)+-4]
 25456  0136C6  0EFA               	movlw	-6
 25457  0136C8  8EE3               	bsf	plusw1,7,c
 25458                           
 25459                           ;stkvar	_b @ sp[(-4)+-4]
 25460  0136CA  0EFB               	movlw	251
 25461  0136CC  24E1               	addwf	fsr1l,w,c
 25462  0136CE  6ED9               	movwf	fsr2l,c
 25463  0136D0  0EFF               	movlw	255
 25464  0136D2  20E2               	addwfc	fsr1h,w,c
 25465  0136D4  6EDA               	movwf	fsr2h,c
 25466  0136D6  0E00               	movlw	0
 25467  0136D8  6EDF               	movwf	indf2,c
 25468  0136DA  D018               	goto	l7352
 25469  0136DC                     l7350:
 25470  0136DC  0E00               	movlw	0
 25471  0136DE  6E09               	movwf	(btemp+8)^0,c
 25472  0136E0  0E00               	movlw	0
 25473  0136E2  6E0A               	movwf	(btemp+9)^0,c
 25474  0136E4  0E00               	movlw	0
 25475  0136E6  6E0B               	movwf	(btemp+10)^0,c
 25476  0136E8  0E00               	movlw	0
 25477  0136EA  6E0C               	movwf	(btemp+11)^0,c
 25478                           
 25479                           ;stkvar	_b @ sp[(-4)+-4]
 25480  0136EC  0EF8               	movlw	-8
 25481  0136EE  0060  F027  FFE3   	movff	btemp+8,plusw1
 25482  0136F4  0EF9               	movlw	-7
 25483  0136F6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25484  0136FC  0EFA               	movlw	-6
 25485  0136FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25486  013704  0EFB               	movlw	-5
 25487  013706  0060  F033  FFE3   	movff	btemp+11,plusw1
 25488  01370C                     l7352:
 25489                           
 25490                           ;stkvar	_a @ sp[(-4)+-8]
 25491  01370C  0EF7               	movlw	247
 25492  01370E  24E1               	addwf	fsr1l,w,c
 25493  013710  6ED9               	movwf	fsr2l,c
 25494  013712  0EFF               	movlw	255
 25495  013714  20E2               	addwfc	fsr1h,w,c
 25496  013716  6EDA               	movwf	fsr2h,c
 25497  013718  50DF               	movf	indf2,w,c
 25498  01371A  6E0C               	movwf	(btemp+11)^0,c
 25499  01371C  0E80               	movlw	128
 25500  01371E  160C               	andwf	(btemp+11)^0,f,c
 25501                           
 25502                           ;stkvar	_aexp @ sp[(-4)+2]
 25503  013720  0EFE               	movlw	-2
 25504  013722  0060  F033  FFE3   	movff	btemp+11,plusw1
 25505                           
 25506                           ;stkvar	_signs @ sp[(-4)+3]
 25507                           ;stkvar	_aexp @ sp[(-4)+2]
 25508  013728  50E1               	movf	fsr1l,w,c
 25509  01372A  0FFE               	addlw	-2
 25510  01372C  6ED9               	movwf	fsr2l,c
 25511  01372E  50E2               	movf	fsr1h,w,c
 25512  013730  6EDA               	movwf	fsr2h,c
 25513  013732  0EFF               	movlw	255
 25514  013734  22DA               	addwfc	fsr2h,f,c
 25515  013736  0EFF               	movlw	-1
 25516  013738  50E3               	movf	plusw1,w,c
 25517  01373A  18DE               	xorwf	postinc2,w,c
 25518  01373C  B4D8               	btfsc	status,2,c
 25519  01373E  D002               	goto	l7358
 25520                           
 25521                           ;stkvar	_signs @ sp[(-4)+3]
 25522  013740  0EFF               	movlw	-1
 25523  013742  8CE3               	bsf	plusw1,6,c
 25524  013744                     l7358:
 25525                           
 25526                           ;stkvar	_a @ sp[(-4)+-8]
 25527  013744  0EF7               	movlw	247
 25528  013746  24E1               	addwf	fsr1l,w,c
 25529  013748  6ED9               	movwf	fsr2l,c
 25530  01374A  0EFF               	movlw	255
 25531  01374C  20E2               	addwfc	fsr1h,w,c
 25532  01374E  6EDA               	movwf	fsr2h,c
 25533  013750  50DF               	movf	indf2,w,c
 25534  013752  6E0C               	movwf	(btemp+11)^0,c
 25535  013754  90D8               	bcf	status,0,c
 25536  013756  340C               	rlcf	(btemp+11)^0,w,c
 25537  013758  6E0B               	movwf	(btemp+10)^0,c
 25538                           
 25539                           ;stkvar	_aexp @ sp[(-4)+2]
 25540  01375A  0EFE               	movlw	-2
 25541  01375C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25542                           
 25543                           ;stkvar	_a @ sp[(-4)+-8]
 25544  013762  0EF6               	movlw	246
 25545  013764  24E1               	addwf	fsr1l,w,c
 25546  013766  6ED9               	movwf	fsr2l,c
 25547  013768  0EFF               	movlw	255
 25548  01376A  20E2               	addwfc	fsr1h,w,c
 25549  01376C  6EDA               	movwf	fsr2h,c
 25550  01376E  AEDF               	btfss	indf2,7,c
 25551  013770  D002               	goto	l7364
 25552                           
 25553                           ;stkvar	_aexp @ sp[(-4)+2]
 25554  013772  0EFE               	movlw	-2
 25555  013774  80E3               	bsf	plusw1,0,c
 25556  013776                     l7364:
 25557                           
 25558                           ;stkvar	_aexp @ sp[(-4)+2]
 25559  013776  0EFE               	movlw	-2
 25560  013778  50E3               	movf	plusw1,w,c
 25561  01377A  B4D8               	btfsc	status,2,c
 25562  01377C  D027               	goto	l7374
 25563                           
 25564                           ;stkvar	_aexp @ sp[(-4)+2]
 25565  01377E  0EFE               	movlw	-2
 25566  013780  28E3               	incf	plusw1,w,c
 25567  013782  A4D8               	btfss	status,2,c
 25568  013784  D018               	goto	l7370
 25569  013786  0E00               	movlw	0
 25570  013788  6E09               	movwf	(btemp+8)^0,c
 25571  01378A  0E00               	movlw	0
 25572  01378C  6E0A               	movwf	(btemp+9)^0,c
 25573  01378E  0E00               	movlw	0
 25574  013790  6E0B               	movwf	(btemp+10)^0,c
 25575  013792  0E00               	movlw	0
 25576  013794  6E0C               	movwf	(btemp+11)^0,c
 25577                           
 25578                           ;stkvar	_a @ sp[(-4)+-8]
 25579  013796  0EF4               	movlw	-12
 25580  013798  0060  F027  FFE3   	movff	btemp+8,plusw1
 25581  01379E  0EF5               	movlw	-11
 25582  0137A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25583  0137A6  0EF6               	movlw	-10
 25584  0137A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25585  0137AE  0EF7               	movlw	-9
 25586  0137B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25587  0137B6                     l7370:
 25588                           
 25589                           ;stkvar	_a @ sp[(-4)+-8]
 25590  0137B6  0EF6               	movlw	-10
 25591  0137B8  8EE3               	bsf	plusw1,7,c
 25592                           
 25593                           ;stkvar	_a @ sp[(-4)+-8]
 25594  0137BA  0EF7               	movlw	247
 25595  0137BC  24E1               	addwf	fsr1l,w,c
 25596  0137BE  6ED9               	movwf	fsr2l,c
 25597  0137C0  0EFF               	movlw	255
 25598  0137C2  20E2               	addwfc	fsr1h,w,c
 25599  0137C4  6EDA               	movwf	fsr2h,c
 25600  0137C6  0E00               	movlw	0
 25601  0137C8  6EDF               	movwf	indf2,c
 25602  0137CA  D018               	goto	l7376
 25603  0137CC                     l7374:
 25604  0137CC  0E00               	movlw	0
 25605  0137CE  6E09               	movwf	(btemp+8)^0,c
 25606  0137D0  0E00               	movlw	0
 25607  0137D2  6E0A               	movwf	(btemp+9)^0,c
 25608  0137D4  0E00               	movlw	0
 25609  0137D6  6E0B               	movwf	(btemp+10)^0,c
 25610  0137D8  0E00               	movlw	0
 25611  0137DA  6E0C               	movwf	(btemp+11)^0,c
 25612                           
 25613                           ;stkvar	_a @ sp[(-4)+-8]
 25614  0137DC  0EF4               	movlw	-12
 25615  0137DE  0060  F027  FFE3   	movff	btemp+8,plusw1
 25616  0137E4  0EF5               	movlw	-11
 25617  0137E6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25618  0137EC  0EF6               	movlw	-10
 25619  0137EE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25620  0137F4  0EF7               	movlw	-9
 25621  0137F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 25622  0137FC                     l7376:
 25623                           
 25624                           ;stkvar	_bexp @ sp[(-4)+1]
 25625                           ;stkvar	_aexp @ sp[(-4)+2]
 25626  0137FC  50E1               	movf	fsr1l,w,c
 25627  0137FE  0FFE               	addlw	-2
 25628  013800  6ED9               	movwf	fsr2l,c
 25629  013802  50E2               	movf	fsr1h,w,c
 25630  013804  6EDA               	movwf	fsr2h,c
 25631  013806  0EFF               	movlw	255
 25632  013808  22DA               	addwfc	fsr2h,f,c
 25633  01380A  0EFD               	movlw	-3
 25634  01380C  50E3               	movf	plusw1,w,c
 25635  01380E  5CDE               	subwf	postinc2,w,c
 25636  013810  B0D8               	btfsc	status,0,c
 25637  013812  D0A4               	goto	l7412
 25638                           
 25639                           ;stkvar	_signs @ sp[(-4)+3]
 25640  013814  0EFF               	movlw	-1
 25641  013816  ACE3               	btfss	plusw1,6,c
 25642  013818  D002               	goto	l7382
 25643                           
 25644                           ;stkvar	_signs @ sp[(-4)+3]
 25645  01381A  0EFF               	movlw	-1
 25646  01381C  7EE3               	btg	plusw1,7,c
 25647  01381E                     l7382:
 25648                           
 25649                           ;stkvar	_bexp @ sp[(-4)+1]
 25650                           ;stkvar	_grs @ sp[(-4)+0]
 25651  01381E  0EFD               	movlw	-3
 25652  013820  006F FF8C  F001    	movff	plusw1,btemp
 25653  013826  0EFC               	movlw	-4
 25654  013828  0060  F007  FFE3   	movff	btemp,plusw1
 25655                           
 25656                           ;stkvar	_aexp @ sp[(-4)+2]
 25657                           ;stkvar	_bexp @ sp[(-4)+1]
 25658  01382E  0EFE               	movlw	-2
 25659  013830  006F FF8C  F001    	movff	plusw1,btemp
 25660  013836  0EFD               	movlw	-3
 25661  013838  0060  F007  FFE3   	movff	btemp,plusw1
 25662                           
 25663                           ;stkvar	_grs @ sp[(-4)+0]
 25664                           ;stkvar	_aexp @ sp[(-4)+2]
 25665  01383E  0EFC               	movlw	-4
 25666  013840  006F FF8C  F001    	movff	plusw1,btemp
 25667  013846  0EFE               	movlw	-2
 25668  013848  0060  F007  FFE3   	movff	btemp,plusw1
 25669                           
 25670                           ;stkvar	_b @ sp[(-4)+-4]
 25671                           ;stkvar	_grs @ sp[(-4)+0]
 25672  01384E  0EF8               	movlw	-8
 25673  013850  006F FF8C  F001    	movff	plusw1,btemp
 25674  013856  0EFC               	movlw	-4
 25675  013858  0060  F007  FFE3   	movff	btemp,plusw1
 25676                           
 25677                           ;stkvar	_a @ sp[(-4)+-8]
 25678                           ;stkvar	_b @ sp[(-4)+-4]
 25679  01385E  0EF4               	movlw	-12
 25680  013860  006F FF8C  F001    	movff	plusw1,btemp
 25681  013866  0EF8               	movlw	-8
 25682  013868  0060  F007  FFE3   	movff	btemp,plusw1
 25683                           
 25684                           ;stkvar	_grs @ sp[(-4)+0]
 25685                           ;stkvar	_a @ sp[(-4)+-8]
 25686  01386E  0EFC               	movlw	-4
 25687  013870  006F FF8C  F001    	movff	plusw1,btemp
 25688  013876  0EF4               	movlw	-12
 25689  013878  0060  F007  FFE3   	movff	btemp,plusw1
 25690                           
 25691                           ;stkvar	_b @ sp[(-4)+-4]
 25692  01387E  0EF9               	movlw	249
 25693  013880  24E1               	addwf	fsr1l,w,c
 25694  013882  6ED9               	movwf	fsr2l,c
 25695  013884  0EFF               	movlw	255
 25696  013886  20E2               	addwfc	fsr1h,w,c
 25697  013888  6EDA               	movwf	fsr2h,c
 25698  01388A  50DF               	movf	indf2,w,c
 25699  01388C  6E0C               	movwf	(btemp+11)^0,c
 25700                           
 25701                           ;stkvar	_grs @ sp[(-4)+0]
 25702  01388E  0EFC               	movlw	-4
 25703  013890  0060  F033  FFE3   	movff	btemp+11,plusw1
 25704                           
 25705                           ;stkvar	_a @ sp[(-4)+-8]
 25706  013896  0EF5               	movlw	245
 25707  013898  24E1               	addwf	fsr1l,w,c
 25708  01389A  6ED9               	movwf	fsr2l,c
 25709  01389C  0EFF               	movlw	255
 25710  01389E  20E2               	addwfc	fsr1h,w,c
 25711  0138A0  6EDA               	movwf	fsr2h,c
 25712                           
 25713                           ;stkvar	_b @ sp[(-4)+-4]
 25714  0138A2  0EF9               	movlw	249
 25715  0138A4  24E1               	addwf	fsr1l,w,c
 25716  0138A6  6EE9               	movwf	fsr0l,c
 25717  0138A8  0EFF               	movlw	255
 25718  0138AA  20E2               	addwfc	fsr1h,w,c
 25719  0138AC  6EEA               	movwf	fsr0h,c
 25720  0138AE  006F FF7F FFEF     	movff	indf2,indf0
 25721                           
 25722                           ;stkvar	_grs @ sp[(-4)+0]
 25723                           ;stkvar	_a @ sp[(-4)+-8]
 25724  0138B4  0EF5               	movlw	245
 25725  0138B6  24E1               	addwf	fsr1l,w,c
 25726  0138B8  6ED9               	movwf	fsr2l,c
 25727  0138BA  0EFF               	movlw	255
 25728  0138BC  20E2               	addwfc	fsr1h,w,c
 25729  0138BE  6EDA               	movwf	fsr2h,c
 25730  0138C0  0EFC               	movlw	-4
 25731  0138C2  006F FF8F FFDF     	movff	plusw1,indf2
 25732                           
 25733                           ;stkvar	_b @ sp[(-4)+-4]
 25734  0138C8  0EFA               	movlw	250
 25735  0138CA  24E1               	addwf	fsr1l,w,c
 25736  0138CC  6ED9               	movwf	fsr2l,c
 25737  0138CE  0EFF               	movlw	255
 25738  0138D0  20E2               	addwfc	fsr1h,w,c
 25739  0138D2  6EDA               	movwf	fsr2h,c
 25740  0138D4  50DF               	movf	indf2,w,c
 25741  0138D6  6E0C               	movwf	(btemp+11)^0,c
 25742                           
 25743                           ;stkvar	_grs @ sp[(-4)+0]
 25744  0138D8  0EFC               	movlw	-4
 25745  0138DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25746                           
 25747                           ;stkvar	_a @ sp[(-4)+-8]
 25748  0138E0  0EF6               	movlw	246
 25749  0138E2  24E1               	addwf	fsr1l,w,c
 25750  0138E4  6ED9               	movwf	fsr2l,c
 25751  0138E6  0EFF               	movlw	255
 25752  0138E8  20E2               	addwfc	fsr1h,w,c
 25753  0138EA  6EDA               	movwf	fsr2h,c
 25754                           
 25755                           ;stkvar	_b @ sp[(-4)+-4]
 25756  0138EC  0EFA               	movlw	250
 25757  0138EE  24E1               	addwf	fsr1l,w,c
 25758  0138F0  6EE9               	movwf	fsr0l,c
 25759  0138F2  0EFF               	movlw	255
 25760  0138F4  20E2               	addwfc	fsr1h,w,c
 25761  0138F6  6EEA               	movwf	fsr0h,c
 25762  0138F8  006F FF7F FFEF     	movff	indf2,indf0
 25763                           
 25764                           ;stkvar	_grs @ sp[(-4)+0]
 25765                           ;stkvar	_a @ sp[(-4)+-8]
 25766  0138FE  0EF6               	movlw	246
 25767  013900  24E1               	addwf	fsr1l,w,c
 25768  013902  6ED9               	movwf	fsr2l,c
 25769  013904  0EFF               	movlw	255
 25770  013906  20E2               	addwfc	fsr1h,w,c
 25771  013908  6EDA               	movwf	fsr2h,c
 25772  01390A  0EFC               	movlw	-4
 25773  01390C  006F FF8F FFDF     	movff	plusw1,indf2
 25774                           
 25775                           ;stkvar	_b @ sp[(-4)+-4]
 25776  013912  0EFB               	movlw	251
 25777  013914  24E1               	addwf	fsr1l,w,c
 25778  013916  6ED9               	movwf	fsr2l,c
 25779  013918  0EFF               	movlw	255
 25780  01391A  20E2               	addwfc	fsr1h,w,c
 25781  01391C  6EDA               	movwf	fsr2h,c
 25782  01391E  50DF               	movf	indf2,w,c
 25783  013920  6E0C               	movwf	(btemp+11)^0,c
 25784                           
 25785                           ;stkvar	_grs @ sp[(-4)+0]
 25786  013922  0EFC               	movlw	-4
 25787  013924  0060  F033  FFE3   	movff	btemp+11,plusw1
 25788                           
 25789                           ;stkvar	_a @ sp[(-4)+-8]
 25790  01392A  0EF7               	movlw	247
 25791  01392C  24E1               	addwf	fsr1l,w,c
 25792  01392E  6ED9               	movwf	fsr2l,c
 25793  013930  0EFF               	movlw	255
 25794  013932  20E2               	addwfc	fsr1h,w,c
 25795  013934  6EDA               	movwf	fsr2h,c
 25796                           
 25797                           ;stkvar	_b @ sp[(-4)+-4]
 25798  013936  0EFB               	movlw	251
 25799  013938  24E1               	addwf	fsr1l,w,c
 25800  01393A  6EE9               	movwf	fsr0l,c
 25801  01393C  0EFF               	movlw	255
 25802  01393E  20E2               	addwfc	fsr1h,w,c
 25803  013940  6EEA               	movwf	fsr0h,c
 25804  013942  006F FF7F FFEF     	movff	indf2,indf0
 25805                           
 25806                           ;stkvar	_grs @ sp[(-4)+0]
 25807                           ;stkvar	_a @ sp[(-4)+-8]
 25808  013948  0EF7               	movlw	247
 25809  01394A  24E1               	addwf	fsr1l,w,c
 25810  01394C  6ED9               	movwf	fsr2l,c
 25811  01394E  0EFF               	movlw	255
 25812  013950  20E2               	addwfc	fsr1h,w,c
 25813  013952  6EDA               	movwf	fsr2h,c
 25814  013954  0EFC               	movlw	-4
 25815  013956  006F FF8F FFDF     	movff	plusw1,indf2
 25816  01395C                     l7412:
 25817                           
 25818                           ;stkvar	_grs @ sp[(-4)+0]
 25819  01395C  0EFC               	movlw	-4
 25820  01395E  6AE3               	clrf	plusw1,c
 25821                           
 25822                           ;stkvar	_aexp @ sp[(-4)+2]
 25823  013960  0EFE               	movlw	-2
 25824  013962  50E3               	movf	plusw1,w,c
 25825  013964  6E0B               	movwf	(btemp+10)^0,c
 25826  013966  6A0C               	clrf	(btemp+11)^0,c
 25827                           
 25828                           ;stkvar	_bexp @ sp[(-4)+1]
 25829  013968  0EFD               	movlw	-3
 25830  01396A  50E3               	movf	plusw1,w,c
 25831  01396C  5E0B               	subwf	(btemp+10)^0,f,c
 25832  01396E  0E00               	movlw	0
 25833  013970  5A0C               	subwfb	(btemp+11)^0,f,c
 25834  013972  BE0C               	btfsc	(btemp+11)^0,7,c
 25835  013974  D062               	goto	l7436
 25836  013976  500C               	movf	(btemp+11)^0,w,c
 25837  013978  E104               	bnz	u5230
 25838  01397A  0E1A               	movlw	26
 25839  01397C  5C0B               	subwf	(btemp+10)^0,w,c
 25840  01397E  A0D8               	btfss	status,0,c
 25841  013980  D05C               	goto	l7436
 25842  013982                     u5230:
 25843                           
 25844                           ;stkvar	_b @ sp[(-4)+-4]
 25845  013982  0EF8               	movlw	-8
 25846  013984  50E3               	movf	plusw1,w,c
 25847  013986  E10A               	bnz	u5241
 25848  013988  0EF9               	movlw	-7
 25849  01398A  50E3               	movf	plusw1,w,c
 25850  01398C  E107               	bnz	u5241
 25851  01398E  0EFA               	movlw	-6
 25852  013990  50E3               	movf	plusw1,w,c
 25853  013992  E104               	bnz	u5241
 25854  013994  0EFB               	movlw	-5
 25855  013996  50E3               	movf	plusw1,w,c
 25856  013998  B4D8               	btfsc	status,2,c
 25857  01399A  D003               	goto	u5240
 25858  01399C                     u5241:
 25859  01399C  6A0C               	clrf	(btemp+11)^0,c
 25860  01399E  2A0C               	incf	(btemp+11)^0,f,c
 25861  0139A0  D001               	goto	u5258
 25862  0139A2                     u5240:
 25863  0139A2  6A0C               	clrf	(btemp+11)^0,c
 25864  0139A4                     u5258:
 25865                           
 25866                           ;stkvar	_grs @ sp[(-4)+0]
 25867  0139A4  0EFC               	movlw	-4
 25868  0139A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 25869                           
 25870                           ;stkvar	_b @ sp[(-4)+-4]
 25871  0139AC  0EF8               	movlw	-8
 25872  0139AE  6AE3               	clrf	plusw1,c
 25873  0139B0  0EF9               	movlw	-7
 25874  0139B2  6AE3               	clrf	plusw1,c
 25875  0139B4  0EFA               	movlw	-6
 25876  0139B6  6AE3               	clrf	plusw1,c
 25877  0139B8  0EFB               	movlw	-5
 25878  0139BA  6AE3               	clrf	plusw1,c
 25879                           
 25880                           ;stkvar	_aexp @ sp[(-4)+2]
 25881                           ;stkvar	_bexp @ sp[(-4)+1]
 25882  0139BC  0EFE               	movlw	-2
 25883  0139BE  006F FF8C  F001    	movff	plusw1,btemp
 25884  0139C4  0EFD               	movlw	-3
 25885  0139C6  0060  F007  FFE3   	movff	btemp,plusw1
 25886  0139CC  D042               	goto	u5290
 25887  0139CE                     l7422:
 25888                           
 25889                           ;stkvar	_grs @ sp[(-4)+0]
 25890  0139CE  0EFC               	movlw	-4
 25891  0139D0  A0E3               	btfss	plusw1,0,c
 25892  0139D2  D00D               	goto	l7426
 25893                           
 25894                           ;stkvar	_grs @ sp[(-4)+0]
 25895  0139D4  0EFC               	movlw	-4
 25896  0139D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25897  0139DC  90D8               	bcf	status,0,c
 25898  0139DE  320C               	rrcf	(btemp+11)^0,f,c
 25899  0139E0  0E01               	movlw	1
 25900  0139E2  120C               	iorwf	(btemp+11)^0,f,c
 25901                           
 25902                           ;stkvar	_grs @ sp[(-4)+0]
 25903  0139E4  0EFC               	movlw	-4
 25904  0139E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 25905  0139EC  D009               	goto	l7428
 25906  0139EE                     l7426:
 25907                           
 25908                           ;stkvar	_grs @ sp[(-4)+0]
 25909  0139EE  50E1               	movf	fsr1l,w,c
 25910  0139F0  0FFC               	addlw	-4
 25911  0139F2  6ED9               	movwf	fsr2l,c
 25912  0139F4  50E2               	movf	fsr1h,w,c
 25913  0139F6  6EDA               	movwf	fsr2h,c
 25914  0139F8  0EFF               	movlw	255
 25915  0139FA  22DA               	addwfc	fsr2h,f,c
 25916  0139FC  90D8               	bcf	status,0,c
 25917  0139FE  32DF               	rrcf	indf2,f,c
 25918  013A00                     l7428:
 25919                           
 25920                           ;stkvar	_b @ sp[(-4)+-4]
 25921  013A00  0EF8               	movlw	-8
 25922  013A02  A0E3               	btfss	plusw1,0,c
 25923  013A04  D002               	goto	l7432
 25924                           
 25925                           ;stkvar	_grs @ sp[(-4)+0]
 25926  013A06  0EFC               	movlw	-4
 25927  013A08  8EE3               	bsf	plusw1,7,c
 25928  013A0A                     l7432:
 25929  013A0A  0E01               	movlw	1
 25930  013A0C  6E0C               	movwf	(btemp+11)^0,c
 25931                           
 25932                           ;stkvar	_b @ sp[(-4)+-4]
 25933  013A0E  50E1               	movf	fsr1l,w,c
 25934  013A10  0FF8               	addlw	-8
 25935  013A12  6ED9               	movwf	fsr2l,c
 25936  013A14  50E2               	movf	fsr1h,w,c
 25937  013A16  6EDA               	movwf	fsr2h,c
 25938  013A18  0EFF               	movlw	255
 25939  013A1A  22DA               	addwfc	fsr2h,f,c
 25940  013A1C  280C               	incf	(btemp+11)^0,w,c
 25941  013A1E  52DE               	movf	postinc2,f,c
 25942  013A20  D008               	goto	u5280
 25943  013A22                     u5285:
 25944  013A22  52DE               	movf	postinc2,f,c
 25945  013A24  90D8               	bcf	status,0,c
 25946  013A26  BEDC               	btfsc	preinc2,7,c
 25947  013A28  80D8               	bsf	status,0,c
 25948  013A2A  32DD               	rrcf	postdec2,f,c
 25949  013A2C  32DD               	rrcf	postdec2,f,c
 25950  013A2E  32DD               	rrcf	postdec2,f,c
 25951  013A30  32DE               	rrcf	postinc2,f,c
 25952  013A32                     u5280:
 25953  013A32  2EE8               	decfsz	wreg,f,c
 25954  013A34  D7F6               	goto	u5285
 25955                           
 25956                           ;stkvar	_bexp @ sp[(-4)+1]
 25957  013A36  0EFD               	movlw	-3
 25958  013A38  2AE3               	incf	plusw1,f,c
 25959  013A3A                     l7436:
 25960                           
 25961                           ;stkvar	_aexp @ sp[(-4)+2]
 25962                           ;stkvar	_bexp @ sp[(-4)+1]
 25963  013A3A  50E1               	movf	fsr1l,w,c
 25964  013A3C  0FFD               	addlw	-3
 25965  013A3E  6ED9               	movwf	fsr2l,c
 25966  013A40  50E2               	movf	fsr1h,w,c
 25967  013A42  6EDA               	movwf	fsr2h,c
 25968  013A44  0EFF               	movlw	255
 25969  013A46  22DA               	addwfc	fsr2h,f,c
 25970  013A48  0EFE               	movlw	-2
 25971  013A4A  50E3               	movf	plusw1,w,c
 25972  013A4C  5CDE               	subwf	postinc2,w,c
 25973  013A4E  A0D8               	btfss	status,0,c
 25974  013A50  D7BE               	goto	l7422
 25975  013A52                     u5290:
 25976                           
 25977                           ;stkvar	_signs @ sp[(-4)+3]
 25978  013A52  0EFF               	movlw	-1
 25979  013A54  BCE3               	btfsc	plusw1,6,c
 25980  013A56  D066               	goto	l7464
 25981                           
 25982                           ;stkvar	_bexp @ sp[(-4)+1]
 25983  013A58  0EFD               	movlw	-3
 25984  013A5A  50E3               	movf	plusw1,w,c
 25985  013A5C  B4D8               	btfsc	status,2,c
 25986  013A5E  D0F2               	goto	u5390
 25987                           
 25988                           ;stkvar	_a @ sp[(-4)+-8]
 25989                           ;stkvar	_b @ sp[(-4)+-4]
 25990  013A60  0EF8               	movlw	-8
 25991  013A62  50E3               	movf	plusw1,w,c
 25992  013A64  6E01               	movwf	btemp^0,c
 25993  013A66  0EF4               	movlw	-12
 25994  013A68  50E3               	movf	plusw1,w,c
 25995  013A6A  2601               	addwf	btemp^0,f,c
 25996  013A6C  0EF8               	movlw	-8
 25997  013A6E  0060  F007  FFE3   	movff	btemp,plusw1
 25998  013A74  0EF9               	movlw	-7
 25999  013A76  50E3               	movf	plusw1,w,c
 26000  013A78  6E01               	movwf	btemp^0,c
 26001  013A7A  0EF5               	movlw	-11
 26002  013A7C  50E3               	movf	plusw1,w,c
 26003  013A7E  2201               	addwfc	btemp^0,f,c
 26004  013A80  0EF9               	movlw	-7
 26005  013A82  0060  F007  FFE3   	movff	btemp,plusw1
 26006  013A88  0EFA               	movlw	-6
 26007  013A8A  50E3               	movf	plusw1,w,c
 26008  013A8C  6E01               	movwf	btemp^0,c
 26009  013A8E  0EF6               	movlw	-10
 26010  013A90  50E3               	movf	plusw1,w,c
 26011  013A92  2201               	addwfc	btemp^0,f,c
 26012  013A94  0EFA               	movlw	-6
 26013  013A96  0060  F007  FFE3   	movff	btemp,plusw1
 26014  013A9C  0EFB               	movlw	-5
 26015  013A9E  50E3               	movf	plusw1,w,c
 26016  013AA0  6E01               	movwf	btemp^0,c
 26017  013AA2  0EF7               	movlw	-9
 26018  013AA4  50E3               	movf	plusw1,w,c
 26019  013AA6  2201               	addwfc	btemp^0,f,c
 26020  013AA8  0EFB               	movlw	-5
 26021  013AAA  0060  F007  FFE3   	movff	btemp,plusw1
 26022                           
 26023                           ;stkvar	_b @ sp[(-4)+-4]
 26024  013AB0  0EFB               	movlw	-5
 26025  013AB2  A0E3               	btfss	plusw1,0,c
 26026  013AB4  D101               	goto	u5430
 26027                           
 26028                           ;stkvar	_grs @ sp[(-4)+0]
 26029  013AB6  0EFC               	movlw	-4
 26030  013AB8  A0E3               	btfss	plusw1,0,c
 26031  013ABA  D00D               	goto	l7454
 26032                           
 26033                           ;stkvar	_grs @ sp[(-4)+0]
 26034  013ABC  0EFC               	movlw	-4
 26035  013ABE  006F FF8C  F00C    	movff	plusw1,btemp+11
 26036  013AC4  90D8               	bcf	status,0,c
 26037  013AC6  320C               	rrcf	(btemp+11)^0,f,c
 26038  013AC8  0E01               	movlw	1
 26039  013ACA  120C               	iorwf	(btemp+11)^0,f,c
 26040                           
 26041                           ;stkvar	_grs @ sp[(-4)+0]
 26042  013ACC  0EFC               	movlw	-4
 26043  013ACE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26044  013AD4  D009               	goto	l7456
 26045  013AD6                     l7454:
 26046                           
 26047                           ;stkvar	_grs @ sp[(-4)+0]
 26048  013AD6  50E1               	movf	fsr1l,w,c
 26049  013AD8  0FFC               	addlw	-4
 26050  013ADA  6ED9               	movwf	fsr2l,c
 26051  013ADC  50E2               	movf	fsr1h,w,c
 26052  013ADE  6EDA               	movwf	fsr2h,c
 26053  013AE0  0EFF               	movlw	255
 26054  013AE2  22DA               	addwfc	fsr2h,f,c
 26055  013AE4  90D8               	bcf	status,0,c
 26056  013AE6  32DF               	rrcf	indf2,f,c
 26057  013AE8                     l7456:
 26058                           
 26059                           ;stkvar	_b @ sp[(-4)+-4]
 26060  013AE8  0EF8               	movlw	-8
 26061  013AEA  A0E3               	btfss	plusw1,0,c
 26062  013AEC  D002               	goto	l7460
 26063                           
 26064                           ;stkvar	_grs @ sp[(-4)+0]
 26065  013AEE  0EFC               	movlw	-4
 26066  013AF0  8EE3               	bsf	plusw1,7,c
 26067  013AF2                     l7460:
 26068  013AF2  0E01               	movlw	1
 26069  013AF4  6E0C               	movwf	(btemp+11)^0,c
 26070                           
 26071                           ;stkvar	_b @ sp[(-4)+-4]
 26072  013AF6  50E1               	movf	fsr1l,w,c
 26073  013AF8  0FF8               	addlw	-8
 26074  013AFA  6ED9               	movwf	fsr2l,c
 26075  013AFC  50E2               	movf	fsr1h,w,c
 26076  013AFE  6EDA               	movwf	fsr2h,c
 26077  013B00  0EFF               	movlw	255
 26078  013B02  22DA               	addwfc	fsr2h,f,c
 26079  013B04  280C               	incf	(btemp+11)^0,w,c
 26080  013B06  52DE               	movf	postinc2,f,c
 26081  013B08  D008               	goto	u5350
 26082  013B0A                     u5355:
 26083  013B0A  52DE               	movf	postinc2,f,c
 26084  013B0C  90D8               	bcf	status,0,c
 26085  013B0E  BEDC               	btfsc	preinc2,7,c
 26086  013B10  80D8               	bsf	status,0,c
 26087  013B12  32DD               	rrcf	postdec2,f,c
 26088  013B14  32DD               	rrcf	postdec2,f,c
 26089  013B16  32DD               	rrcf	postdec2,f,c
 26090  013B18  32DE               	rrcf	postinc2,f,c
 26091  013B1A                     u5350:
 26092  013B1A  2EE8               	decfsz	wreg,f,c
 26093  013B1C  D7F6               	goto	u5355
 26094                           
 26095                           ;stkvar	_bexp @ sp[(-4)+1]
 26096  013B1E  0EFD               	movlw	-3
 26097  013B20  2AE3               	incf	plusw1,f,c
 26098  013B22  D0CA               	goto	u5430
 26099  013B24                     l7464:
 26100                           
 26101                           ;stkvar	_a @ sp[(-4)+-8]
 26102                           ;stkvar	_b @ sp[(-4)+-4]
 26103  013B24  50E1               	movf	fsr1l,w,c
 26104  013B26  0FF8               	addlw	-8
 26105  013B28  6ED9               	movwf	fsr2l,c
 26106  013B2A  50E2               	movf	fsr1h,w,c
 26107  013B2C  6EDA               	movwf	fsr2h,c
 26108  013B2E  0EFF               	movlw	255
 26109  013B30  22DA               	addwfc	fsr2h,f,c
 26110  013B32  0EF4               	movlw	-12
 26111  013B34  50E3               	movf	plusw1,w,c
 26112  013B36  5CDE               	subwf	postinc2,w,c
 26113  013B38  0EF5               	movlw	-11
 26114  013B3A  50E3               	movf	plusw1,w,c
 26115  013B3C  58DE               	subwfb	postinc2,w,c
 26116  013B3E  0EF6               	movlw	-10
 26117  013B40  50E3               	movf	plusw1,w,c
 26118  013B42  58DE               	subwfb	postinc2,w,c
 26119  013B44  50DE               	movf	postinc2,w,c
 26120  013B46  0A80               	xorlw	128
 26121  013B48  6E01               	movwf	btemp^0,c
 26122  013B4A  0EF7               	movlw	-9
 26123  013B4C  50E3               	movf	plusw1,w,c
 26124  013B4E  0A80               	xorlw	128
 26125  013B50  5801               	subwfb	btemp^0,w,c
 26126  013B52  B0D8               	btfsc	status,0,c
 26127  013B54  D053               	goto	l7476
 26128                           
 26129                           ;stkvar	_b @ sp[(-4)+-4]
 26130                           ;stkvar	_a @ sp[(-4)+-8]
 26131  013B56  0EF4               	movlw	-12
 26132  013B58  006F FF8C  F009    	movff	plusw1,btemp+8
 26133  013B5E  0EF5               	movlw	-11
 26134  013B60  006F FF8C  F00A    	movff	plusw1,btemp+9
 26135  013B66  0EF6               	movlw	-10
 26136  013B68  006F FF8C  F00B    	movff	plusw1,btemp+10
 26137  013B6E  0EF7               	movlw	-9
 26138  013B70  006F FF8C  F00C    	movff	plusw1,btemp+11
 26139  013B76  0EF8               	movlw	-8
 26140  013B78  50E3               	movf	plusw1,w,c
 26141  013B7A  5E09               	subwf	(btemp+8)^0,f,c
 26142  013B7C  0EF9               	movlw	-7
 26143  013B7E  50E3               	movf	plusw1,w,c
 26144  013B80  5A0A               	subwfb	(btemp+9)^0,f,c
 26145  013B82  0EFA               	movlw	-6
 26146  013B84  50E3               	movf	plusw1,w,c
 26147  013B86  5A0B               	subwfb	(btemp+10)^0,f,c
 26148  013B88  0EFB               	movlw	-5
 26149  013B8A  50E3               	movf	plusw1,w,c
 26150  013B8C  5A0C               	subwfb	(btemp+11)^0,f,c
 26151  013B8E  0EFF               	movlw	255
 26152  013B90  2409               	addwf	(btemp+8)^0,w,c
 26153  013B92  6E05               	movwf	(btemp+4)^0,c
 26154  013B94  0EFF               	movlw	255
 26155  013B96  200A               	addwfc	(btemp+9)^0,w,c
 26156  013B98  6E06               	movwf	(btemp+5)^0,c
 26157  013B9A  0EFF               	movlw	255
 26158  013B9C  200B               	addwfc	(btemp+10)^0,w,c
 26159  013B9E  6E07               	movwf	(btemp+6)^0,c
 26160  013BA0  0EFF               	movlw	255
 26161  013BA2  200C               	addwfc	(btemp+11)^0,w,c
 26162  013BA4  6E08               	movwf	(btemp+7)^0,c
 26163                           
 26164                           ;stkvar	_b @ sp[(-4)+-4]
 26165  013BA6  0EF8               	movlw	-8
 26166  013BA8  0060  F017  FFE3   	movff	btemp+4,plusw1
 26167  013BAE  0EF9               	movlw	-7
 26168  013BB0  0060  F01B  FFE3   	movff	btemp+5,plusw1
 26169  013BB6  0EFA               	movlw	-6
 26170  013BB8  0060  F01F  FFE3   	movff	btemp+6,plusw1
 26171  013BBE  0EFB               	movlw	-5
 26172  013BC0  0060  F023  FFE3   	movff	btemp+7,plusw1
 26173                           
 26174                           ;stkvar	_signs @ sp[(-4)+3]
 26175  013BC6  0EFF               	movlw	-1
 26176  013BC8  7EE3               	btg	plusw1,7,c
 26177                           
 26178                           ;stkvar	_grs @ sp[(-4)+0]
 26179  013BCA  0EFC               	movlw	-4
 26180  013BCC  50E3               	movf	plusw1,w,c
 26181  013BCE  0800               	sublw	0
 26182  013BD0  6E0C               	movwf	(btemp+11)^0,c
 26183                           
 26184                           ;stkvar	_grs @ sp[(-4)+0]
 26185  013BD2  0EFC               	movlw	-4
 26186  013BD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 26187                           
 26188                           ;stkvar	_grs @ sp[(-4)+0]
 26189  013BDA  0EFC               	movlw	-4
 26190  013BDC  50E3               	movf	plusw1,w,c
 26191  013BDE  A4D8               	btfss	status,2,c
 26192  013BE0  D020               	goto	l7478
 26193                           
 26194                           ;stkvar	_b @ sp[(-4)+-4]
 26195  013BE2  50E1               	movf	fsr1l,w,c
 26196  013BE4  0FF8               	addlw	-8
 26197  013BE6  6ED9               	movwf	fsr2l,c
 26198  013BE8  50E2               	movf	fsr1h,w,c
 26199  013BEA  6EDA               	movwf	fsr2h,c
 26200  013BEC  0EFF               	movlw	255
 26201  013BEE  22DA               	addwfc	fsr2h,f,c
 26202  013BF0  2ADE               	incf	postinc2,f,c
 26203  013BF2  0E00               	movlw	0
 26204  013BF4  22DE               	addwfc	postinc2,f,c
 26205  013BF6  22DE               	addwfc	postinc2,f,c
 26206  013BF8  22DE               	addwfc	postinc2,f,c
 26207  013BFA  D013               	goto	l7478
 26208  013BFC                     l7476:
 26209                           
 26210                           ;stkvar	_a @ sp[(-4)+-8]
 26211                           ;stkvar	_b @ sp[(-4)+-4]
 26212  013BFC  50E1               	movf	fsr1l,w,c
 26213  013BFE  0FF8               	addlw	-8
 26214  013C00  6ED9               	movwf	fsr2l,c
 26215  013C02  50E2               	movf	fsr1h,w,c
 26216  013C04  6EDA               	movwf	fsr2h,c
 26217  013C06  0EFF               	movlw	255
 26218  013C08  22DA               	addwfc	fsr2h,f,c
 26219  013C0A  0EF4               	movlw	-12
 26220  013C0C  50E3               	movf	plusw1,w,c
 26221  013C0E  5EDE               	subwf	postinc2,f,c
 26222  013C10  0EF5               	movlw	-11
 26223  013C12  50E3               	movf	plusw1,w,c
 26224  013C14  5ADE               	subwfb	postinc2,f,c
 26225  013C16  0EF6               	movlw	-10
 26226  013C18  50E3               	movf	plusw1,w,c
 26227  013C1A  5ADE               	subwfb	postinc2,f,c
 26228  013C1C  0EF7               	movlw	-9
 26229  013C1E  50E3               	movf	plusw1,w,c
 26230  013C20  5ADE               	subwfb	postinc2,f,c
 26231  013C22                     l7478:
 26232                           
 26233                           ;stkvar	_b @ sp[(-4)+-4]
 26234  013C22  0EF8               	movlw	-8
 26235  013C24  50E3               	movf	plusw1,w,c
 26236  013C26  E145               	bnz	l7500
 26237  013C28  0EF9               	movlw	-7
 26238  013C2A  50E3               	movf	plusw1,w,c
 26239  013C2C  E142               	bnz	l7500
 26240  013C2E  0EFA               	movlw	-6
 26241  013C30  50E3               	movf	plusw1,w,c
 26242  013C32  E13F               	bnz	l7500
 26243  013C34  0EFB               	movlw	-5
 26244  013C36  50E3               	movf	plusw1,w,c
 26245  013C38  A4D8               	btfss	status,2,c
 26246  013C3A  D03B               	goto	l7500
 26247                           
 26248                           ;stkvar	_grs @ sp[(-4)+0]
 26249  013C3C  0EFC               	movlw	-4
 26250  013C3E  50E3               	movf	plusw1,w,c
 26251  013C40  A4D8               	btfss	status,2,c
 26252  013C42  D037               	goto	l7500
 26253  013C44                     u5390:
 26254  013C44  0E00               	movlw	0
 26255  013C46  6E01               	movwf	btemp^0,c
 26256  013C48  0E00               	movlw	0
 26257  013C4A  6E02               	movwf	(btemp+1)^0,c
 26258  013C4C  0E00               	movlw	0
 26259  013C4E  6E03               	movwf	(btemp+2)^0,c
 26260  013C50  0E00               	movlw	0
 26261  013C52  6E04               	movwf	(btemp+3)^0,c
 26262  013C54  D0C6               	goto	l2872
 26263  013C56                     l7486:
 26264                           
 26265                           ;stkvar	_b @ sp[(-4)+-4]
 26266  013C56  90D8               	bcf	status,0,c
 26267  013C58  0EF8               	movlw	-8
 26268  013C5A  36E3               	rlcf	plusw1,f,c
 26269  013C5C  0EF9               	movlw	-7
 26270  013C5E  36E3               	rlcf	plusw1,f,c
 26271  013C60  0EFA               	movlw	-6
 26272  013C62  36E3               	rlcf	plusw1,f,c
 26273  013C64  0EFB               	movlw	-5
 26274  013C66  36E3               	rlcf	plusw1,f,c
 26275                           
 26276                           ;stkvar	_grs @ sp[(-4)+0]
 26277  013C68  0EFC               	movlw	-4
 26278  013C6A  AEE3               	btfss	plusw1,7,c
 26279  013C6C  D002               	goto	l2884
 26280                           
 26281                           ;stkvar	_b @ sp[(-4)+-4]
 26282  013C6E  0EF8               	movlw	-8
 26283  013C70  80E3               	bsf	plusw1,0,c
 26284  013C72                     l2884:
 26285                           
 26286                           ;stkvar	_grs @ sp[(-4)+0]
 26287  013C72  0EFC               	movlw	-4
 26288  013C74  A0E3               	btfss	plusw1,0,c
 26289  013C76  D00E               	goto	l7494
 26290                           
 26291                           ;stkvar	_grs @ sp[(-4)+0]
 26292  013C78  0EFC               	movlw	-4
 26293  013C7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26294  013C80  90D8               	bcf	status,0,c
 26295  013C82  340C               	rlcf	(btemp+11)^0,w,c
 26296  013C84  6E0B               	movwf	(btemp+10)^0,c
 26297  013C86  0E01               	movlw	1
 26298  013C88  120B               	iorwf	(btemp+10)^0,f,c
 26299                           
 26300                           ;stkvar	_grs @ sp[(-4)+0]
 26301  013C8A  0EFC               	movlw	-4
 26302  013C8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26303  013C92  D009               	goto	l7496
 26304  013C94                     l7494:
 26305                           
 26306                           ;stkvar	_grs @ sp[(-4)+0]
 26307  013C94  50E1               	movf	fsr1l,w,c
 26308  013C96  0FFC               	addlw	-4
 26309  013C98  6ED9               	movwf	fsr2l,c
 26310  013C9A  50E2               	movf	fsr1h,w,c
 26311  013C9C  6EDA               	movwf	fsr2h,c
 26312  013C9E  0EFF               	movlw	255
 26313  013CA0  22DA               	addwfc	fsr2h,f,c
 26314  013CA2  90D8               	bcf	status,0,c
 26315  013CA4  36DF               	rlcf	indf2,f,c
 26316  013CA6                     l7496:
 26317                           
 26318                           ;stkvar	_bexp @ sp[(-4)+1]
 26319  013CA6  0EFD               	movlw	-3
 26320  013CA8  50E3               	movf	plusw1,w,c
 26321  013CAA  B4D8               	btfsc	status,2,c
 26322  013CAC  D002               	goto	l7500
 26323                           
 26324                           ;stkvar	_bexp @ sp[(-4)+1]
 26325  013CAE  0EFD               	movlw	-3
 26326  013CB0  06E3               	decf	plusw1,f,c
 26327  013CB2                     l7500:
 26328                           
 26329                           ;stkvar	_b @ sp[(-4)+-4]
 26330  013CB2  0EFA               	movlw	-6
 26331  013CB4  AEE3               	btfss	plusw1,7,c
 26332  013CB6  D7CF               	goto	l7486
 26333  013CB8                     u5430:
 26334                           
 26335                           ;stkvar	_aexp @ sp[(-4)+2]
 26336  013CB8  0EFE               	movlw	-2
 26337  013CBA  6AE3               	clrf	plusw1,c
 26338                           
 26339                           ;stkvar	_grs @ sp[(-4)+0]
 26340  013CBC  0EFC               	movlw	-4
 26341  013CBE  AEE3               	btfss	plusw1,7,c
 26342  013CC0  D00F               	goto	l7514
 26343                           
 26344                           ;stkvar	_grs @ sp[(-4)+0]
 26345  013CC2  0EFC               	movlw	-4
 26346  013CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26347  013CCA  0E7F               	movlw	127
 26348  013CCC  160C               	andwf	(btemp+11)^0,f,c
 26349  013CCE  B4D8               	btfsc	status,2,c
 26350  013CD0  D004               	goto	l7510
 26351  013CD2                     u5450:
 26352                           
 26353                           ;stkvar	_aexp @ sp[(-4)+2]
 26354  013CD2  0EFE               	movlw	-2
 26355  013CD4  6AE3               	clrf	plusw1,c
 26356  013CD6  2AE3               	incf	plusw1,f,c
 26357  013CD8  D003               	goto	l7514
 26358  013CDA                     l7510:
 26359                           
 26360                           ;stkvar	_b @ sp[(-4)+-4]
 26361  013CDA  0EF8               	movlw	-8
 26362  013CDC  B0E3               	btfsc	plusw1,0,c
 26363  013CDE  D7F9               	goto	u5450
 26364  013CE0                     l7514:
 26365                           
 26366                           ;stkvar	_aexp @ sp[(-4)+2]
 26367  013CE0  0EFE               	movlw	-2
 26368  013CE2  50E3               	movf	plusw1,w,c
 26369  013CE4  B4D8               	btfsc	status,2,c
 26370  013CE6  D02B               	goto	l7526
 26371                           
 26372                           ;stkvar	_b @ sp[(-4)+-4]
 26373  013CE8  50E1               	movf	fsr1l,w,c
 26374  013CEA  0FF8               	addlw	-8
 26375  013CEC  6ED9               	movwf	fsr2l,c
 26376  013CEE  50E2               	movf	fsr1h,w,c
 26377  013CF0  6EDA               	movwf	fsr2h,c
 26378  013CF2  0EFF               	movlw	255
 26379  013CF4  22DA               	addwfc	fsr2h,f,c
 26380  013CF6  2ADE               	incf	postinc2,f,c
 26381  013CF8  0E00               	movlw	0
 26382  013CFA  22DE               	addwfc	postinc2,f,c
 26383  013CFC  22DE               	addwfc	postinc2,f,c
 26384  013CFE  22DE               	addwfc	postinc2,f,c
 26385                           
 26386                           ;stkvar	_b @ sp[(-4)+-4]
 26387  013D00  0EFB               	movlw	-5
 26388  013D02  A0E3               	btfss	plusw1,0,c
 26389  013D04  D01C               	goto	l7526
 26390  013D06  0E01               	movlw	1
 26391  013D08  6E0C               	movwf	(btemp+11)^0,c
 26392                           
 26393                           ;stkvar	_b @ sp[(-4)+-4]
 26394  013D0A  50E1               	movf	fsr1l,w,c
 26395  013D0C  0FF8               	addlw	-8
 26396  013D0E  6ED9               	movwf	fsr2l,c
 26397  013D10  50E2               	movf	fsr1h,w,c
 26398  013D12  6EDA               	movwf	fsr2h,c
 26399  013D14  0EFF               	movlw	255
 26400  013D16  22DA               	addwfc	fsr2h,f,c
 26401  013D18  280C               	incf	(btemp+11)^0,w,c
 26402  013D1A  52DE               	movf	postinc2,f,c
 26403  013D1C  D008               	goto	u5490
 26404  013D1E                     u5495:
 26405  013D1E  52DE               	movf	postinc2,f,c
 26406  013D20  90D8               	bcf	status,0,c
 26407  013D22  BEDC               	btfsc	preinc2,7,c
 26408  013D24  80D8               	bsf	status,0,c
 26409  013D26  32DD               	rrcf	postdec2,f,c
 26410  013D28  32DD               	rrcf	postdec2,f,c
 26411  013D2A  32DD               	rrcf	postdec2,f,c
 26412  013D2C  32DE               	rrcf	postinc2,f,c
 26413  013D2E                     u5490:
 26414  013D2E  2EE8               	decfsz	wreg,f,c
 26415  013D30  D7F6               	goto	u5495
 26416                           
 26417                           ;stkvar	_bexp @ sp[(-4)+1]
 26418  013D32  0EFD               	movlw	-3
 26419  013D34  28E3               	incf	plusw1,w,c
 26420  013D36  B4D8               	btfsc	status,2,c
 26421  013D38  D002               	goto	l7526
 26422                           
 26423                           ;stkvar	_bexp @ sp[(-4)+1]
 26424  013D3A  0EFD               	movlw	-3
 26425  013D3C  2AE3               	incf	plusw1,f,c
 26426  013D3E                     l7526:
 26427                           
 26428                           ;stkvar	_bexp @ sp[(-4)+1]
 26429  013D3E  0EFD               	movlw	-3
 26430  013D40  28E3               	incf	plusw1,w,c
 26431  013D42  B4D8               	btfsc	status,2,c
 26432  013D44  D004               	goto	u5520
 26433                           
 26434                           ;stkvar	_bexp @ sp[(-4)+1]
 26435  013D46  0EFD               	movlw	-3
 26436  013D48  50E3               	movf	plusw1,w,c
 26437  013D4A  A4D8               	btfss	status,2,c
 26438  013D4C  D00E               	goto	l7536
 26439  013D4E                     u5520:
 26440                           
 26441                           ;stkvar	_b @ sp[(-4)+-4]
 26442  013D4E  0EF8               	movlw	-8
 26443  013D50  6AE3               	clrf	plusw1,c
 26444  013D52  0EF9               	movlw	-7
 26445  013D54  6AE3               	clrf	plusw1,c
 26446  013D56  0EFA               	movlw	-6
 26447  013D58  6AE3               	clrf	plusw1,c
 26448  013D5A  0EFB               	movlw	-5
 26449  013D5C  6AE3               	clrf	plusw1,c
 26450                           
 26451                           ;stkvar	_bexp @ sp[(-4)+1]
 26452  013D5E  0EFD               	movlw	-3
 26453  013D60  50E3               	movf	plusw1,w,c
 26454  013D62  A4D8               	btfss	status,2,c
 26455  013D64  D002               	goto	l7536
 26456                           
 26457                           ;stkvar	_signs @ sp[(-4)+3]
 26458  013D66  0EFF               	movlw	-1
 26459  013D68  6AE3               	clrf	plusw1,c
 26460  013D6A                     l7536:
 26461                           
 26462                           ;stkvar	_bexp @ sp[(-4)+1]
 26463  013D6A  0EFD               	movlw	-3
 26464  013D6C  A0E3               	btfss	plusw1,0,c
 26465  013D6E  D009               	goto	l7540
 26466                           
 26467                           ;stkvar	_b @ sp[(-4)+-4]
 26468  013D70  0EFA               	movlw	250
 26469  013D72  24E1               	addwf	fsr1l,w,c
 26470  013D74  6ED9               	movwf	fsr2l,c
 26471  013D76  0EFF               	movlw	255
 26472  013D78  20E2               	addwfc	fsr1h,w,c
 26473  013D7A  6EDA               	movwf	fsr2h,c
 26474  013D7C  0E00               	movlw	0
 26475  013D7E  8EDB               	bsf	plusw2,7,c
 26476  013D80  D008               	goto	l7542
 26477  013D82                     l7540:
 26478                           
 26479                           ;stkvar	_b @ sp[(-4)+-4]
 26480  013D82  0EFA               	movlw	250
 26481  013D84  24E1               	addwf	fsr1l,w,c
 26482  013D86  6ED9               	movwf	fsr2l,c
 26483  013D88  0EFF               	movlw	255
 26484  013D8A  20E2               	addwfc	fsr1h,w,c
 26485  013D8C  6EDA               	movwf	fsr2h,c
 26486  013D8E  0E7F               	movlw	127
 26487  013D90  16DF               	andwf	indf2,f,c
 26488  013D92                     l7542:
 26489                           
 26490                           ;stkvar	_b @ sp[(-4)+-4]
 26491  013D92  0EFB               	movlw	251
 26492  013D94  24E1               	addwf	fsr1l,w,c
 26493  013D96  6ED9               	movwf	fsr2l,c
 26494  013D98  0EFF               	movlw	255
 26495  013D9A  20E2               	addwfc	fsr1h,w,c
 26496  013D9C  6EDA               	movwf	fsr2h,c
 26497                           
 26498                           ;stkvar	_bexp @ sp[(-4)+1]
 26499  013D9E  0EFD               	movlw	-3
 26500  013DA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 26501  013DA6  90D8               	bcf	status,0,c
 26502  013DA8  300C               	rrcf	(btemp+11)^0,w,c
 26503  013DAA  6EDF               	movwf	indf2,c
 26504                           
 26505                           ;stkvar	_signs @ sp[(-4)+3]
 26506  013DAC  0EFF               	movlw	-1
 26507  013DAE  AEE3               	btfss	plusw1,7,c
 26508  013DB0  D008               	goto	l7548
 26509                           
 26510                           ;stkvar	_b @ sp[(-4)+-4]
 26511  013DB2  0EFB               	movlw	251
 26512  013DB4  24E1               	addwf	fsr1l,w,c
 26513  013DB6  6ED9               	movwf	fsr2l,c
 26514  013DB8  0EFF               	movlw	255
 26515  013DBA  20E2               	addwfc	fsr1h,w,c
 26516  013DBC  6EDA               	movwf	fsr2h,c
 26517  013DBE  0E00               	movlw	0
 26518  013DC0  8EDB               	bsf	plusw2,7,c
 26519  013DC2                     l7548:
 26520                           
 26521                           ;stkvar	_b @ sp[(-4)+-4]
 26522  013DC2  0EF8               	movlw	-8
 26523  013DC4  006F FF8C  F001    	movff	plusw1,btemp
 26524  013DCA  0EF9               	movlw	-7
 26525  013DCC  006F FF8C  F002    	movff	plusw1,btemp+1
 26526  013DD2  0EFA               	movlw	-6
 26527  013DD4  006F FF8C  F003    	movff	plusw1,btemp+2
 26528  013DDA  0EFB               	movlw	-5
 26529  013DDC  006F FF8C  F004    	movff	plusw1,btemp+3
 26530  013DE2                     l2872:
 26531                           
 26532                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26533  013DE2  0EF4               	movlw	244
 26534  013DE4  26E1               	addwf	fsr1l,f,c
 26535  013DE6  0EFF               	movlw	255
 26536  013DE8  22E2               	addwfc	fsr1h,f,c
 26537  013DEA  0012               	return		;funcret
 26538  013DEC                     __end_of___fladd:
 26539                           	opt callstack 0
 26540                           
 26541 ;; *************** function ___flmul *****************
 26542 ;; Defined at:
 26543 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 26544 ;; Parameters:    Size  Location     Type
 26545 ;;  b               4  [STACK] unsigned char 
 26546 ;;  a               4  [STACK] unsigned char 
 26547 ;; Auto vars:     Size  Location     Type
 26548 ;;  prod            4  [STACK] struct .
 26549 ;;  grs             4  [STACK] unsigned long 
 26550 ;;  temp            2  [STACK] struct .
 26551 ;;  bexp            1  [STACK] unsigned char 
 26552 ;;  aexp            1  [STACK] unsigned char 
 26553 ;;  sign            1  [STACK] unsigned char 
 26554 ;; Return value:  Size  Location     Type
 26555 ;;                  4  [STACK] unsigned char 
 26556 ;; Registers used:
 26557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26558 ;; Tracked objects:
 26559 ;;		On entry : 0/1
 26560 ;;		On exit  : 0/0
 26561 ;;		Unchanged: 0/0
 26562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26567 ;;Total ram usage:        0 bytes
 26568 ;; Hardware stack levels used:    1
 26569 ;; Hardware stack levels required when called:   15
 26570 ;; This function calls:
 26571 ;;		Nothing
 26572 ;; This function is called by:
 26573 ;;		_conv_raw_result
 26574 ;;		_lp_filter
 26575 ;;		_calc_model_data
 26576 ;;		_calc_bsoc
 26577 ;;		_init_bsoc
 26578 ;;		_efgtoa
 26579 ;; This function uses a reentrant model
 26580 ;;
 26581                           
 26582                           	psect	text106
 26583  012E06                     __ptext106:
 26584                           	opt callstack 0
 26585  012E06                     ___flmul:
 26586                           	opt callstack 0
 26587                           
 26588                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26589  012E06  0E0D               	movlw	13
 26590  012E08  26E1               	addwf	fsr1l,f,c
 26591  012E0A  0E00               	movlw	0
 26592  012E0C  22E2               	addwfc	fsr1h,f,c
 26593                           
 26594                           ;stkvar	_b @ sp[(-13)+-4]
 26595                           
 26596                           ;incstack = 0
 26597 ;; hardware stack exceeded
 26598  012E0E  0EF2               	movlw	242
 26599  012E10  24E1               	addwf	fsr1l,w,c
 26600  012E12  6ED9               	movwf	fsr2l,c
 26601  012E14  0EFF               	movlw	255
 26602  012E16  20E2               	addwfc	fsr1h,w,c
 26603  012E18  6EDA               	movwf	fsr2h,c
 26604  012E1A  50DF               	movf	indf2,w,c
 26605  012E1C  6E0C               	movwf	(btemp+11)^0,c
 26606  012E1E  0E80               	movlw	128
 26607  012E20  160C               	andwf	(btemp+11)^0,f,c
 26608                           
 26609                           ;stkvar	_sign @ sp[(-13)+12]
 26610  012E22  0EFF               	movlw	-1
 26611  012E24  0060  F033  FFE3   	movff	btemp+11,plusw1
 26612                           
 26613                           ;stkvar	_b @ sp[(-13)+-4]
 26614  012E2A  0EF2               	movlw	242
 26615  012E2C  24E1               	addwf	fsr1l,w,c
 26616  012E2E  6ED9               	movwf	fsr2l,c
 26617  012E30  0EFF               	movlw	255
 26618  012E32  20E2               	addwfc	fsr1h,w,c
 26619  012E34  6EDA               	movwf	fsr2h,c
 26620  012E36  50DF               	movf	indf2,w,c
 26621  012E38  6E0C               	movwf	(btemp+11)^0,c
 26622  012E3A  90D8               	bcf	status,0,c
 26623  012E3C  340C               	rlcf	(btemp+11)^0,w,c
 26624  012E3E  6E0B               	movwf	(btemp+10)^0,c
 26625                           
 26626                           ;stkvar	_bexp @ sp[(-13)+10]
 26627  012E40  0EFD               	movlw	-3
 26628  012E42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26629                           
 26630                           ;stkvar	_b @ sp[(-13)+-4]
 26631  012E48  0EF1               	movlw	241
 26632  012E4A  24E1               	addwf	fsr1l,w,c
 26633  012E4C  6ED9               	movwf	fsr2l,c
 26634  012E4E  0EFF               	movlw	255
 26635  012E50  20E2               	addwfc	fsr1h,w,c
 26636  012E52  6EDA               	movwf	fsr2h,c
 26637  012E54  AEDF               	btfss	indf2,7,c
 26638  012E56  D002               	goto	l7932
 26639                           
 26640                           ;stkvar	_bexp @ sp[(-13)+10]
 26641  012E58  0EFD               	movlw	-3
 26642  012E5A  80E3               	bsf	plusw1,0,c
 26643  012E5C                     l7932:
 26644                           
 26645                           ;stkvar	_bexp @ sp[(-13)+10]
 26646  012E5C  0EFD               	movlw	-3
 26647  012E5E  50E3               	movf	plusw1,w,c
 26648  012E60  B4D8               	btfsc	status,2,c
 26649  012E62  D01F               	goto	l7940
 26650                           
 26651                           ;stkvar	_bexp @ sp[(-13)+10]
 26652  012E64  0EFD               	movlw	-3
 26653  012E66  28E3               	incf	plusw1,w,c
 26654  012E68  A4D8               	btfss	status,2,c
 26655  012E6A  D018               	goto	l7938
 26656  012E6C  0E00               	movlw	0
 26657  012E6E  6E09               	movwf	(btemp+8)^0,c
 26658  012E70  0E00               	movlw	0
 26659  012E72  6E0A               	movwf	(btemp+9)^0,c
 26660  012E74  0E00               	movlw	0
 26661  012E76  6E0B               	movwf	(btemp+10)^0,c
 26662  012E78  0E00               	movlw	0
 26663  012E7A  6E0C               	movwf	(btemp+11)^0,c
 26664                           
 26665                           ;stkvar	_b @ sp[(-13)+-4]
 26666  012E7C  0EEF               	movlw	-17
 26667  012E7E  0060  F027  FFE3   	movff	btemp+8,plusw1
 26668  012E84  0EF0               	movlw	-16
 26669  012E86  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26670  012E8C  0EF1               	movlw	-15
 26671  012E8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26672  012E94  0EF2               	movlw	-14
 26673  012E96  0060  F033  FFE3   	movff	btemp+11,plusw1
 26674  012E9C                     l7938:
 26675                           
 26676                           ;stkvar	_b @ sp[(-13)+-4]
 26677  012E9C  0EF1               	movlw	-15
 26678  012E9E  8EE3               	bsf	plusw1,7,c
 26679  012EA0  D018               	goto	l7942
 26680  012EA2                     l7940:
 26681  012EA2  0E00               	movlw	0
 26682  012EA4  6E09               	movwf	(btemp+8)^0,c
 26683  012EA6  0E00               	movlw	0
 26684  012EA8  6E0A               	movwf	(btemp+9)^0,c
 26685  012EAA  0E00               	movlw	0
 26686  012EAC  6E0B               	movwf	(btemp+10)^0,c
 26687  012EAE  0E00               	movlw	0
 26688  012EB0  6E0C               	movwf	(btemp+11)^0,c
 26689                           
 26690                           ;stkvar	_b @ sp[(-13)+-4]
 26691  012EB2  0EEF               	movlw	-17
 26692  012EB4  0060  F027  FFE3   	movff	btemp+8,plusw1
 26693  012EBA  0EF0               	movlw	-16
 26694  012EBC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26695  012EC2  0EF1               	movlw	-15
 26696  012EC4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26697  012ECA  0EF2               	movlw	-14
 26698  012ECC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26699  012ED2                     l7942:
 26700                           
 26701                           ;stkvar	_a @ sp[(-13)+-8]
 26702  012ED2  0EEE               	movlw	238
 26703  012ED4  24E1               	addwf	fsr1l,w,c
 26704  012ED6  6ED9               	movwf	fsr2l,c
 26705  012ED8  0EFF               	movlw	255
 26706  012EDA  20E2               	addwfc	fsr1h,w,c
 26707  012EDC  6EDA               	movwf	fsr2h,c
 26708  012EDE  50DF               	movf	indf2,w,c
 26709  012EE0  6E0C               	movwf	(btemp+11)^0,c
 26710  012EE2  0E80               	movlw	128
 26711  012EE4  160C               	andwf	(btemp+11)^0,f,c
 26712                           
 26713                           ;stkvar	_sign @ sp[(-13)+12]
 26714  012EE6  50E1               	movf	fsr1l,w,c
 26715  012EE8  0FFF               	addlw	-1
 26716  012EEA  6ED9               	movwf	fsr2l,c
 26717  012EEC  50E2               	movf	fsr1h,w,c
 26718  012EEE  6EDA               	movwf	fsr2h,c
 26719  012EF0  0EFF               	movlw	255
 26720  012EF2  22DA               	addwfc	fsr2h,f,c
 26721  012EF4  500C               	movf	(btemp+11)^0,w,c
 26722  012EF6  1ADF               	xorwf	indf2,f,c
 26723                           
 26724                           ;stkvar	_a @ sp[(-13)+-8]
 26725  012EF8  0EEE               	movlw	238
 26726  012EFA  24E1               	addwf	fsr1l,w,c
 26727  012EFC  6ED9               	movwf	fsr2l,c
 26728  012EFE  0EFF               	movlw	255
 26729  012F00  20E2               	addwfc	fsr1h,w,c
 26730  012F02  6EDA               	movwf	fsr2h,c
 26731  012F04  50DF               	movf	indf2,w,c
 26732  012F06  6E0C               	movwf	(btemp+11)^0,c
 26733  012F08  90D8               	bcf	status,0,c
 26734  012F0A  340C               	rlcf	(btemp+11)^0,w,c
 26735  012F0C  6E0B               	movwf	(btemp+10)^0,c
 26736                           
 26737                           ;stkvar	_aexp @ sp[(-13)+11]
 26738  012F0E  0EFE               	movlw	-2
 26739  012F10  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26740                           
 26741                           ;stkvar	_a @ sp[(-13)+-8]
 26742  012F16  0EED               	movlw	237
 26743  012F18  24E1               	addwf	fsr1l,w,c
 26744  012F1A  6ED9               	movwf	fsr2l,c
 26745  012F1C  0EFF               	movlw	255
 26746  012F1E  20E2               	addwfc	fsr1h,w,c
 26747  012F20  6EDA               	movwf	fsr2h,c
 26748  012F22  AEDF               	btfss	indf2,7,c
 26749  012F24  D002               	goto	l7950
 26750                           
 26751                           ;stkvar	_aexp @ sp[(-13)+11]
 26752  012F26  0EFE               	movlw	-2
 26753  012F28  80E3               	bsf	plusw1,0,c
 26754  012F2A                     l7950:
 26755                           
 26756                           ;stkvar	_aexp @ sp[(-13)+11]
 26757  012F2A  0EFE               	movlw	-2
 26758  012F2C  50E3               	movf	plusw1,w,c
 26759  012F2E  B4D8               	btfsc	status,2,c
 26760  012F30  D01F               	goto	l7958
 26761                           
 26762                           ;stkvar	_aexp @ sp[(-13)+11]
 26763  012F32  0EFE               	movlw	-2
 26764  012F34  28E3               	incf	plusw1,w,c
 26765  012F36  A4D8               	btfss	status,2,c
 26766  012F38  D018               	goto	l7956
 26767  012F3A  0E00               	movlw	0
 26768  012F3C  6E09               	movwf	(btemp+8)^0,c
 26769  012F3E  0E00               	movlw	0
 26770  012F40  6E0A               	movwf	(btemp+9)^0,c
 26771  012F42  0E00               	movlw	0
 26772  012F44  6E0B               	movwf	(btemp+10)^0,c
 26773  012F46  0E00               	movlw	0
 26774  012F48  6E0C               	movwf	(btemp+11)^0,c
 26775                           
 26776                           ;stkvar	_a @ sp[(-13)+-8]
 26777  012F4A  0EEB               	movlw	-21
 26778  012F4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26779  012F52  0EEC               	movlw	-20
 26780  012F54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26781  012F5A  0EED               	movlw	-19
 26782  012F5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26783  012F62  0EEE               	movlw	-18
 26784  012F64  0060  F033  FFE3   	movff	btemp+11,plusw1
 26785  012F6A                     l7956:
 26786                           
 26787                           ;stkvar	_a @ sp[(-13)+-8]
 26788  012F6A  0EED               	movlw	-19
 26789  012F6C  8EE3               	bsf	plusw1,7,c
 26790  012F6E  D018               	goto	l7960
 26791  012F70                     l7958:
 26792  012F70  0E00               	movlw	0
 26793  012F72  6E09               	movwf	(btemp+8)^0,c
 26794  012F74  0E00               	movlw	0
 26795  012F76  6E0A               	movwf	(btemp+9)^0,c
 26796  012F78  0E00               	movlw	0
 26797  012F7A  6E0B               	movwf	(btemp+10)^0,c
 26798  012F7C  0E00               	movlw	0
 26799  012F7E  6E0C               	movwf	(btemp+11)^0,c
 26800                           
 26801                           ;stkvar	_a @ sp[(-13)+-8]
 26802  012F80  0EEB               	movlw	-21
 26803  012F82  0060  F027  FFE3   	movff	btemp+8,plusw1
 26804  012F88  0EEC               	movlw	-20
 26805  012F8A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26806  012F90  0EED               	movlw	-19
 26807  012F92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26808  012F98  0EEE               	movlw	-18
 26809  012F9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26810  012FA0                     l7960:
 26811                           
 26812                           ;stkvar	_aexp @ sp[(-13)+11]
 26813  012FA0  0EFE               	movlw	-2
 26814  012FA2  50E3               	movf	plusw1,w,c
 26815  012FA4  B4D8               	btfsc	status,2,c
 26816  012FA6  D004               	goto	u6460
 26817                           
 26818                           ;stkvar	_bexp @ sp[(-13)+10]
 26819  012FA8  0EFD               	movlw	-3
 26820  012FAA  50E3               	movf	plusw1,w,c
 26821  012FAC  A4D8               	btfss	status,2,c
 26822  012FAE  D009               	goto	l7968
 26823  012FB0                     u6460:
 26824  012FB0  0E00               	movlw	0
 26825  012FB2  6E01               	movwf	btemp^0,c
 26826  012FB4  0E00               	movlw	0
 26827  012FB6  6E02               	movwf	(btemp+1)^0,c
 26828  012FB8  0E00               	movlw	0
 26829  012FBA  6E03               	movwf	(btemp+2)^0,c
 26830  012FBC  0E00               	movlw	0
 26831  012FBE  6E04               	movwf	(btemp+3)^0,c
 26832  012FC0  D332               	goto	l2953
 26833  012FC2                     l7968:
 26834                           
 26835                           ;stkvar	_b @ sp[(-13)+-4]
 26836  012FC2  0EEF               	movlw	-17
 26837  012FC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26838                           
 26839                           ;stkvar	_a @ sp[(-13)+-8]
 26840  012FCA  0EED               	movlw	237
 26841  012FCC  24E1               	addwf	fsr1l,w,c
 26842  012FCE  6ED9               	movwf	fsr2l,c
 26843  012FD0  0EFF               	movlw	255
 26844  012FD2  20E2               	addwfc	fsr1h,w,c
 26845  012FD4  6EDA               	movwf	fsr2h,c
 26846  012FD6  50DF               	movf	indf2,w,c
 26847  012FD8  020C               	mulwf	(btemp+11)^0,c
 26848                           
 26849                           ;stkvar	_temp @ sp[(-13)+8]
 26850  012FDA  0EFB               	movlw	-5
 26851  012FDC  006F FFCF FFE3     	movff	prodl,plusw1
 26852  012FE2  0EFC               	movlw	-4
 26853  012FE4  006F FFD3 FFE3     	movff	prodh,plusw1
 26854                           
 26855                           ;stkvar	_temp @ sp[(-13)+8]
 26856  012FEA  0EFB               	movlw	-5
 26857  012FEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 26858  012FF2  0060  F030  F005   	movff	btemp+11,btemp+4
 26859  012FF8  6A06               	clrf	(btemp+5)^0,c
 26860  012FFA  6A07               	clrf	(btemp+6)^0,c
 26861  012FFC  6A08               	clrf	(btemp+7)^0,c
 26862                           
 26863                           ;stkvar	_grs @ sp[(-13)+4]
 26864  012FFE  0EF7               	movlw	-9
 26865  013000  0060  F017  FFE3   	movff	btemp+4,plusw1
 26866  013006  0EF8               	movlw	-8
 26867  013008  0060  F01B  FFE3   	movff	btemp+5,plusw1
 26868  01300E  0EF9               	movlw	-7
 26869  013010  0060  F01F  FFE3   	movff	btemp+6,plusw1
 26870  013016  0EFA               	movlw	-6
 26871  013018  0060  F023  FFE3   	movff	btemp+7,plusw1
 26872                           
 26873                           ;stkvar	_temp @ sp[(-13)+8]
 26874  01301E  0EFC               	movlw	252
 26875  013020  24E1               	addwf	fsr1l,w,c
 26876  013022  6ED9               	movwf	fsr2l,c
 26877  013024  0EFF               	movlw	255
 26878  013026  20E2               	addwfc	fsr1h,w,c
 26879  013028  6EDA               	movwf	fsr2h,c
 26880  01302A  50DF               	movf	indf2,w,c
 26881  01302C  6E0C               	movwf	(btemp+11)^0,c
 26882  01302E  0060  F030  F005   	movff	btemp+11,btemp+4
 26883  013034  6A06               	clrf	(btemp+5)^0,c
 26884  013036  6A07               	clrf	(btemp+6)^0,c
 26885  013038  6A08               	clrf	(btemp+7)^0,c
 26886                           
 26887                           ;stkvar	_prod @ sp[(-13)+0]
 26888  01303A  0EF3               	movlw	-13
 26889  01303C  0060  F017  FFE3   	movff	btemp+4,plusw1
 26890  013042  0EF4               	movlw	-12
 26891  013044  0060  F01B  FFE3   	movff	btemp+5,plusw1
 26892  01304A  0EF5               	movlw	-11
 26893  01304C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 26894  013052  0EF6               	movlw	-10
 26895  013054  0060  F023  FFE3   	movff	btemp+7,plusw1
 26896                           
 26897                           ;stkvar	_b @ sp[(-13)+-4]
 26898  01305A  0EF0               	movlw	240
 26899  01305C  24E1               	addwf	fsr1l,w,c
 26900  01305E  6ED9               	movwf	fsr2l,c
 26901  013060  0EFF               	movlw	255
 26902  013062  20E2               	addwfc	fsr1h,w,c
 26903  013064  6EDA               	movwf	fsr2h,c
 26904  013066  50DF               	movf	indf2,w,c
 26905  013068  6E0C               	movwf	(btemp+11)^0,c
 26906                           
 26907                           ;stkvar	_a @ sp[(-13)+-8]
 26908  01306A  0EEC               	movlw	236
 26909  01306C  24E1               	addwf	fsr1l,w,c
 26910  01306E  6ED9               	movwf	fsr2l,c
 26911  013070  0EFF               	movlw	255
 26912  013072  20E2               	addwfc	fsr1h,w,c
 26913  013074  6EDA               	movwf	fsr2h,c
 26914  013076  50DF               	movf	indf2,w,c
 26915  013078  020C               	mulwf	(btemp+11)^0,c
 26916                           
 26917                           ;stkvar	_temp @ sp[(-13)+8]
 26918  01307A  0EFB               	movlw	-5
 26919  01307C  006F FFCF FFE3     	movff	prodl,plusw1
 26920  013082  0EFC               	movlw	-4
 26921  013084  006F FFD3 FFE3     	movff	prodh,plusw1
 26922                           
 26923                           ;stkvar	_grs @ sp[(-13)+4]
 26924  01308A  50E1               	movf	fsr1l,w,c
 26925  01308C  0FF7               	addlw	-9
 26926  01308E  6ED9               	movwf	fsr2l,c
 26927  013090  50E2               	movf	fsr1h,w,c
 26928  013092  6EDA               	movwf	fsr2h,c
 26929  013094  0EFF               	movlw	255
 26930  013096  22DA               	addwfc	fsr2h,f,c
 26931                           
 26932                           ;stkvar	_temp @ sp[(-13)+8]
 26933  013098  0EFB               	movlw	-5
 26934  01309A  50E3               	movf	plusw1,w,c
 26935  01309C  26DE               	addwf	postinc2,f,c
 26936  01309E  0E00               	movlw	0
 26937  0130A0  22DE               	addwfc	postinc2,f,c
 26938  0130A2  22DE               	addwfc	postinc2,f,c
 26939  0130A4  22DE               	addwfc	postinc2,f,c
 26940                           
 26941                           ;stkvar	_prod @ sp[(-13)+0]
 26942  0130A6  50E1               	movf	fsr1l,w,c
 26943  0130A8  0FF3               	addlw	-13
 26944  0130AA  6ED9               	movwf	fsr2l,c
 26945  0130AC  50E2               	movf	fsr1h,w,c
 26946  0130AE  6EDA               	movwf	fsr2h,c
 26947  0130B0  0EFF               	movlw	255
 26948  0130B2  22DA               	addwfc	fsr2h,f,c
 26949                           
 26950                           ;stkvar	_temp @ sp[(-13)+8]
 26951  0130B4  0EFC               	movlw	252
 26952  0130B6  24E1               	addwf	fsr1l,w,c
 26953  0130B8  6EE9               	movwf	fsr0l,c
 26954  0130BA  0EFF               	movlw	255
 26955  0130BC  20E2               	addwfc	fsr1h,w,c
 26956  0130BE  6EEA               	movwf	fsr0h,c
 26957  0130C0  50EF               	movf	indf0,w,c
 26958  0130C2  26DE               	addwf	postinc2,f,c
 26959  0130C4  0E00               	movlw	0
 26960  0130C6  22DE               	addwfc	postinc2,f,c
 26961  0130C8  22DE               	addwfc	postinc2,f,c
 26962  0130CA  22DE               	addwfc	postinc2,f,c
 26963                           
 26964                           ;stkvar	_b @ sp[(-13)+-4]
 26965  0130CC  0EF1               	movlw	241
 26966  0130CE  24E1               	addwf	fsr1l,w,c
 26967  0130D0  6ED9               	movwf	fsr2l,c
 26968  0130D2  0EFF               	movlw	255
 26969  0130D4  20E2               	addwfc	fsr1h,w,c
 26970  0130D6  6EDA               	movwf	fsr2h,c
 26971  0130D8  50DF               	movf	indf2,w,c
 26972  0130DA  6E0C               	movwf	(btemp+11)^0,c
 26973                           
 26974                           ;stkvar	_a @ sp[(-13)+-8]
 26975  0130DC  0EEB               	movlw	-21
 26976  0130DE  50E3               	movf	plusw1,w,c
 26977  0130E0  020C               	mulwf	(btemp+11)^0,c
 26978                           
 26979                           ;stkvar	_temp @ sp[(-13)+8]
 26980  0130E2  0EFB               	movlw	-5
 26981  0130E4  006F FFCF FFE3     	movff	prodl,plusw1
 26982  0130EA  0EFC               	movlw	-4
 26983  0130EC  006F FFD3 FFE3     	movff	prodh,plusw1
 26984                           
 26985                           ;stkvar	_grs @ sp[(-13)+4]
 26986  0130F2  50E1               	movf	fsr1l,w,c
 26987  0130F4  0FF7               	addlw	-9
 26988  0130F6  6ED9               	movwf	fsr2l,c
 26989  0130F8  50E2               	movf	fsr1h,w,c
 26990  0130FA  6EDA               	movwf	fsr2h,c
 26991  0130FC  0EFF               	movlw	255
 26992  0130FE  22DA               	addwfc	fsr2h,f,c
 26993                           
 26994                           ;stkvar	_temp @ sp[(-13)+8]
 26995  013100  0EFB               	movlw	-5
 26996  013102  50E3               	movf	plusw1,w,c
 26997  013104  26DE               	addwf	postinc2,f,c
 26998  013106  0E00               	movlw	0
 26999  013108  22DE               	addwfc	postinc2,f,c
 27000  01310A  22DE               	addwfc	postinc2,f,c
 27001  01310C  22DE               	addwfc	postinc2,f,c
 27002                           
 27003                           ;stkvar	_prod @ sp[(-13)+0]
 27004  01310E  50E1               	movf	fsr1l,w,c
 27005  013110  0FF3               	addlw	-13
 27006  013112  6ED9               	movwf	fsr2l,c
 27007  013114  50E2               	movf	fsr1h,w,c
 27008  013116  6EDA               	movwf	fsr2h,c
 27009  013118  0EFF               	movlw	255
 27010  01311A  22DA               	addwfc	fsr2h,f,c
 27011                           
 27012                           ;stkvar	_temp @ sp[(-13)+8]
 27013  01311C  0EFC               	movlw	252
 27014  01311E  24E1               	addwf	fsr1l,w,c
 27015  013120  6EE9               	movwf	fsr0l,c
 27016  013122  0EFF               	movlw	255
 27017  013124  20E2               	addwfc	fsr1h,w,c
 27018  013126  6EEA               	movwf	fsr0h,c
 27019  013128  50EF               	movf	indf0,w,c
 27020  01312A  26DE               	addwf	postinc2,f,c
 27021  01312C  0E00               	movlw	0
 27022  01312E  22DE               	addwfc	postinc2,f,c
 27023  013130  22DE               	addwfc	postinc2,f,c
 27024  013132  22DE               	addwfc	postinc2,f,c
 27025                           
 27026                           ;stkvar	_grs @ sp[(-13)+4]
 27027  013134  50E1               	movf	fsr1l,w,c
 27028  013136  0FF7               	addlw	-9
 27029  013138  6ED9               	movwf	fsr2l,c
 27030  01313A  50E2               	movf	fsr1h,w,c
 27031  01313C  6EDA               	movwf	fsr2h,c
 27032  01313E  0EFF               	movlw	255
 27033  013140  22DA               	addwfc	fsr2h,f,c
 27034  013142  0E08               	movlw	8
 27035  013144                     u6475:
 27036  013144  90D8               	bcf	status,0,c
 27037  013146  36DE               	rlcf	postinc2,f,c
 27038  013148  36DE               	rlcf	postinc2,f,c
 27039  01314A  36DE               	rlcf	postinc2,f,c
 27040  01314C  36DD               	rlcf	postdec2,f,c
 27041  01314E  52DD               	movf	postdec2,f,c
 27042  013150  52DD               	movf	postdec2,f,c
 27043  013152  2EE8               	decfsz	wreg,f,c
 27044  013154  D7F7               	goto	u6475
 27045                           
 27046                           ;stkvar	_b @ sp[(-13)+-4]
 27047  013156  0EF0               	movlw	240
 27048  013158  24E1               	addwf	fsr1l,w,c
 27049  01315A  6ED9               	movwf	fsr2l,c
 27050  01315C  0EFF               	movlw	255
 27051  01315E  20E2               	addwfc	fsr1h,w,c
 27052  013160  6EDA               	movwf	fsr2h,c
 27053  013162  50DF               	movf	indf2,w,c
 27054  013164  6E0C               	movwf	(btemp+11)^0,c
 27055                           
 27056                           ;stkvar	_a @ sp[(-13)+-8]
 27057  013166  0EEB               	movlw	-21
 27058  013168  50E3               	movf	plusw1,w,c
 27059  01316A  020C               	mulwf	(btemp+11)^0,c
 27060                           
 27061                           ;stkvar	_temp @ sp[(-13)+8]
 27062  01316C  0EFB               	movlw	-5
 27063  01316E  006F FFCF FFE3     	movff	prodl,plusw1
 27064  013174  0EFC               	movlw	-4
 27065  013176  006F FFD3 FFE3     	movff	prodh,plusw1
 27066                           
 27067                           ;stkvar	_temp @ sp[(-13)+8]
 27068  01317C  0EFB               	movlw	-5
 27069  01317E  006F FF8C  F00B    	movff	plusw1,btemp+10
 27070  013184  0EFC               	movlw	-4
 27071  013186  006F FF8C  F00C    	movff	plusw1,btemp+11
 27072                           
 27073                           ;stkvar	_grs @ sp[(-13)+4]
 27074  01318C  50E1               	movf	fsr1l,w,c
 27075  01318E  0FF7               	addlw	-9
 27076  013190  6ED9               	movwf	fsr2l,c
 27077  013192  50E2               	movf	fsr1h,w,c
 27078  013194  6EDA               	movwf	fsr2h,c
 27079  013196  0EFF               	movlw	255
 27080  013198  22DA               	addwfc	fsr2h,f,c
 27081  01319A  500B               	movf	(btemp+10)^0,w,c
 27082  01319C  26DE               	addwf	postinc2,f,c
 27083  01319E  500C               	movf	(btemp+11)^0,w,c
 27084  0131A0  22DE               	addwfc	postinc2,f,c
 27085  0131A2  0E00               	movlw	0
 27086  0131A4  22DE               	addwfc	postinc2,f,c
 27087  0131A6  22DE               	addwfc	postinc2,f,c
 27088                           
 27089                           ;stkvar	_b @ sp[(-13)+-4]
 27090  0131A8  0EEF               	movlw	-17
 27091  0131AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 27092                           
 27093                           ;stkvar	_a @ sp[(-13)+-8]
 27094  0131B0  0EEC               	movlw	236
 27095  0131B2  24E1               	addwf	fsr1l,w,c
 27096  0131B4  6ED9               	movwf	fsr2l,c
 27097  0131B6  0EFF               	movlw	255
 27098  0131B8  20E2               	addwfc	fsr1h,w,c
 27099  0131BA  6EDA               	movwf	fsr2h,c
 27100  0131BC  50DF               	movf	indf2,w,c
 27101  0131BE  020C               	mulwf	(btemp+11)^0,c
 27102                           
 27103                           ;stkvar	_temp @ sp[(-13)+8]
 27104  0131C0  0EFB               	movlw	-5
 27105  0131C2  006F FFCF FFE3     	movff	prodl,plusw1
 27106  0131C8  0EFC               	movlw	-4
 27107  0131CA  006F FFD3 FFE3     	movff	prodh,plusw1
 27108                           
 27109                           ;stkvar	_temp @ sp[(-13)+8]
 27110  0131D0  0EFB               	movlw	-5
 27111  0131D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 27112  0131D8  0EFC               	movlw	-4
 27113  0131DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 27114                           
 27115                           ;stkvar	_grs @ sp[(-13)+4]
 27116  0131E0  50E1               	movf	fsr1l,w,c
 27117  0131E2  0FF7               	addlw	-9
 27118  0131E4  6ED9               	movwf	fsr2l,c
 27119  0131E6  50E2               	movf	fsr1h,w,c
 27120  0131E8  6EDA               	movwf	fsr2h,c
 27121  0131EA  0EFF               	movlw	255
 27122  0131EC  22DA               	addwfc	fsr2h,f,c
 27123  0131EE  500B               	movf	(btemp+10)^0,w,c
 27124  0131F0  26DE               	addwf	postinc2,f,c
 27125  0131F2  500C               	movf	(btemp+11)^0,w,c
 27126  0131F4  22DE               	addwfc	postinc2,f,c
 27127  0131F6  0E00               	movlw	0
 27128  0131F8  22DE               	addwfc	postinc2,f,c
 27129  0131FA  22DE               	addwfc	postinc2,f,c
 27130                           
 27131                           ;stkvar	_grs @ sp[(-13)+4]
 27132  0131FC  50E1               	movf	fsr1l,w,c
 27133  0131FE  0FF7               	addlw	-9
 27134  013200  6ED9               	movwf	fsr2l,c
 27135  013202  50E2               	movf	fsr1h,w,c
 27136  013204  6EDA               	movwf	fsr2h,c
 27137  013206  0EFF               	movlw	255
 27138  013208  22DA               	addwfc	fsr2h,f,c
 27139  01320A  0E08               	movlw	8
 27140  01320C                     u6485:
 27141  01320C  90D8               	bcf	status,0,c
 27142  01320E  36DE               	rlcf	postinc2,f,c
 27143  013210  36DE               	rlcf	postinc2,f,c
 27144  013212  36DE               	rlcf	postinc2,f,c
 27145  013214  36DD               	rlcf	postdec2,f,c
 27146  013216  52DD               	movf	postdec2,f,c
 27147  013218  52DD               	movf	postdec2,f,c
 27148  01321A  2EE8               	decfsz	wreg,f,c
 27149  01321C  D7F7               	goto	u6485
 27150                           
 27151                           ;stkvar	_b @ sp[(-13)+-4]
 27152  01321E  0EEF               	movlw	-17
 27153  013220  006F FF8C  F00C    	movff	plusw1,btemp+11
 27154                           
 27155                           ;stkvar	_a @ sp[(-13)+-8]
 27156  013226  0EEB               	movlw	-21
 27157  013228  50E3               	movf	plusw1,w,c
 27158  01322A  020C               	mulwf	(btemp+11)^0,c
 27159                           
 27160                           ;stkvar	_temp @ sp[(-13)+8]
 27161  01322C  0EFB               	movlw	-5
 27162  01322E  006F FFCF FFE3     	movff	prodl,plusw1
 27163  013234  0EFC               	movlw	-4
 27164  013236  006F FFD3 FFE3     	movff	prodh,plusw1
 27165                           
 27166                           ;stkvar	_temp @ sp[(-13)+8]
 27167  01323C  0EFB               	movlw	-5
 27168  01323E  006F FF8C  F00B    	movff	plusw1,btemp+10
 27169  013244  0EFC               	movlw	-4
 27170  013246  006F FF8C  F00C    	movff	plusw1,btemp+11
 27171                           
 27172                           ;stkvar	_grs @ sp[(-13)+4]
 27173  01324C  50E1               	movf	fsr1l,w,c
 27174  01324E  0FF7               	addlw	-9
 27175  013250  6ED9               	movwf	fsr2l,c
 27176  013252  50E2               	movf	fsr1h,w,c
 27177  013254  6EDA               	movwf	fsr2h,c
 27178  013256  0EFF               	movlw	255
 27179  013258  22DA               	addwfc	fsr2h,f,c
 27180  01325A  500B               	movf	(btemp+10)^0,w,c
 27181  01325C  26DE               	addwf	postinc2,f,c
 27182  01325E  500C               	movf	(btemp+11)^0,w,c
 27183  013260  22DE               	addwfc	postinc2,f,c
 27184  013262  0E00               	movlw	0
 27185  013264  22DE               	addwfc	postinc2,f,c
 27186  013266  22DE               	addwfc	postinc2,f,c
 27187                           
 27188                           ;stkvar	_b @ sp[(-13)+-4]
 27189  013268  0EF0               	movlw	240
 27190  01326A  24E1               	addwf	fsr1l,w,c
 27191  01326C  6ED9               	movwf	fsr2l,c
 27192  01326E  0EFF               	movlw	255
 27193  013270  20E2               	addwfc	fsr1h,w,c
 27194  013272  6EDA               	movwf	fsr2h,c
 27195  013274  50DF               	movf	indf2,w,c
 27196  013276  6E0C               	movwf	(btemp+11)^0,c
 27197                           
 27198                           ;stkvar	_a @ sp[(-13)+-8]
 27199  013278  0EED               	movlw	237
 27200  01327A  24E1               	addwf	fsr1l,w,c
 27201  01327C  6ED9               	movwf	fsr2l,c
 27202  01327E  0EFF               	movlw	255
 27203  013280  20E2               	addwfc	fsr1h,w,c
 27204  013282  6EDA               	movwf	fsr2h,c
 27205  013284  50DF               	movf	indf2,w,c
 27206  013286  020C               	mulwf	(btemp+11)^0,c
 27207                           
 27208                           ;stkvar	_temp @ sp[(-13)+8]
 27209  013288  0EFB               	movlw	-5
 27210  01328A  006F FFCF FFE3     	movff	prodl,plusw1
 27211  013290  0EFC               	movlw	-4
 27212  013292  006F FFD3 FFE3     	movff	prodh,plusw1
 27213                           
 27214                           ;stkvar	_temp @ sp[(-13)+8]
 27215  013298  0EFB               	movlw	-5
 27216  01329A  006F FF8C  F00B    	movff	plusw1,btemp+10
 27217  0132A0  0EFC               	movlw	-4
 27218  0132A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 27219                           
 27220                           ;stkvar	_prod @ sp[(-13)+0]
 27221  0132A8  50E1               	movf	fsr1l,w,c
 27222  0132AA  0FF3               	addlw	-13
 27223  0132AC  6ED9               	movwf	fsr2l,c
 27224  0132AE  50E2               	movf	fsr1h,w,c
 27225  0132B0  6EDA               	movwf	fsr2h,c
 27226  0132B2  0EFF               	movlw	255
 27227  0132B4  22DA               	addwfc	fsr2h,f,c
 27228  0132B6  500B               	movf	(btemp+10)^0,w,c
 27229  0132B8  26DE               	addwf	postinc2,f,c
 27230  0132BA  500C               	movf	(btemp+11)^0,w,c
 27231  0132BC  22DE               	addwfc	postinc2,f,c
 27232  0132BE  0E00               	movlw	0
 27233  0132C0  22DE               	addwfc	postinc2,f,c
 27234  0132C2  22DE               	addwfc	postinc2,f,c
 27235                           
 27236                           ;stkvar	_b @ sp[(-13)+-4]
 27237  0132C4  0EF1               	movlw	241
 27238  0132C6  24E1               	addwf	fsr1l,w,c
 27239  0132C8  6ED9               	movwf	fsr2l,c
 27240  0132CA  0EFF               	movlw	255
 27241  0132CC  20E2               	addwfc	fsr1h,w,c
 27242  0132CE  6EDA               	movwf	fsr2h,c
 27243  0132D0  50DF               	movf	indf2,w,c
 27244  0132D2  6E0C               	movwf	(btemp+11)^0,c
 27245                           
 27246                           ;stkvar	_a @ sp[(-13)+-8]
 27247  0132D4  0EEC               	movlw	236
 27248  0132D6  24E1               	addwf	fsr1l,w,c
 27249  0132D8  6ED9               	movwf	fsr2l,c
 27250  0132DA  0EFF               	movlw	255
 27251  0132DC  20E2               	addwfc	fsr1h,w,c
 27252  0132DE  6EDA               	movwf	fsr2h,c
 27253  0132E0  50DF               	movf	indf2,w,c
 27254  0132E2  020C               	mulwf	(btemp+11)^0,c
 27255                           
 27256                           ;stkvar	_temp @ sp[(-13)+8]
 27257  0132E4  0EFB               	movlw	-5
 27258  0132E6  006F FFCF FFE3     	movff	prodl,plusw1
 27259  0132EC  0EFC               	movlw	-4
 27260  0132EE  006F FFD3 FFE3     	movff	prodh,plusw1
 27261                           
 27262                           ;stkvar	_temp @ sp[(-13)+8]
 27263  0132F4  0EFB               	movlw	-5
 27264  0132F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 27265  0132FC  0EFC               	movlw	-4
 27266  0132FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27267                           
 27268                           ;stkvar	_prod @ sp[(-13)+0]
 27269  013304  50E1               	movf	fsr1l,w,c
 27270  013306  0FF3               	addlw	-13
 27271  013308  6ED9               	movwf	fsr2l,c
 27272  01330A  50E2               	movf	fsr1h,w,c
 27273  01330C  6EDA               	movwf	fsr2h,c
 27274  01330E  0EFF               	movlw	255
 27275  013310  22DA               	addwfc	fsr2h,f,c
 27276  013312  500B               	movf	(btemp+10)^0,w,c
 27277  013314  26DE               	addwf	postinc2,f,c
 27278  013316  500C               	movf	(btemp+11)^0,w,c
 27279  013318  22DE               	addwfc	postinc2,f,c
 27280  01331A  0E00               	movlw	0
 27281  01331C  22DE               	addwfc	postinc2,f,c
 27282  01331E  22DE               	addwfc	postinc2,f,c
 27283                           
 27284                           ;stkvar	_b @ sp[(-13)+-4]
 27285  013320  0EF1               	movlw	241
 27286  013322  24E1               	addwf	fsr1l,w,c
 27287  013324  6ED9               	movwf	fsr2l,c
 27288  013326  0EFF               	movlw	255
 27289  013328  20E2               	addwfc	fsr1h,w,c
 27290  01332A  6EDA               	movwf	fsr2h,c
 27291  01332C  50DF               	movf	indf2,w,c
 27292  01332E  6E0C               	movwf	(btemp+11)^0,c
 27293                           
 27294                           ;stkvar	_a @ sp[(-13)+-8]
 27295  013330  0EED               	movlw	237
 27296  013332  24E1               	addwf	fsr1l,w,c
 27297  013334  6ED9               	movwf	fsr2l,c
 27298  013336  0EFF               	movlw	255
 27299  013338  20E2               	addwfc	fsr1h,w,c
 27300  01333A  6EDA               	movwf	fsr2h,c
 27301  01333C  50DF               	movf	indf2,w,c
 27302  01333E  020C               	mulwf	(btemp+11)^0,c
 27303                           
 27304                           ;stkvar	_temp @ sp[(-13)+8]
 27305  013340  0EFB               	movlw	-5
 27306  013342  006F FFCF FFE3     	movff	prodl,plusw1
 27307  013348  0EFC               	movlw	-4
 27308  01334A  006F FFD3 FFE3     	movff	prodh,plusw1
 27309                           
 27310                           ;stkvar	_temp @ sp[(-13)+8]
 27311  013350  0EFB               	movlw	-5
 27312  013352  006F FF8C  F00B    	movff	plusw1,btemp+10
 27313  013358  0EFC               	movlw	-4
 27314  01335A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27315  013360  500B               	movf	(btemp+10)^0,w,c
 27316  013362  6E05               	movwf	(btemp+4)^0,c
 27317  013364  500C               	movf	(btemp+11)^0,w,c
 27318  013366  6E06               	movwf	(btemp+5)^0,c
 27319  013368  6A07               	clrf	(btemp+6)^0,c
 27320  01336A  6A08               	clrf	(btemp+7)^0,c
 27321  01336C  0060  F01C  F008   	movff	btemp+6,btemp+7
 27322  013372  0060  F018  F007   	movff	btemp+5,btemp+6
 27323  013378  0060  F014  F006   	movff	btemp+4,btemp+5
 27324  01337E  6A05               	clrf	(btemp+4)^0,c
 27325                           
 27326                           ;stkvar	_prod @ sp[(-13)+0]
 27327  013380  50E1               	movf	fsr1l,w,c
 27328  013382  0FF3               	addlw	-13
 27329  013384  6ED9               	movwf	fsr2l,c
 27330  013386  50E2               	movf	fsr1h,w,c
 27331  013388  6EDA               	movwf	fsr2h,c
 27332  01338A  0EFF               	movlw	255
 27333  01338C  22DA               	addwfc	fsr2h,f,c
 27334  01338E  5005               	movf	(btemp+4)^0,w,c
 27335  013390  26DE               	addwf	postinc2,f,c
 27336  013392  5006               	movf	(btemp+5)^0,w,c
 27337  013394  22DE               	addwfc	postinc2,f,c
 27338  013396  5007               	movf	(btemp+6)^0,w,c
 27339  013398  22DE               	addwfc	postinc2,f,c
 27340  01339A  5008               	movf	(btemp+7)^0,w,c
 27341  01339C  22DE               	addwfc	postinc2,f,c
 27342                           
 27343                           ;stkvar	_prod @ sp[(-13)+0]
 27344  01339E  50E1               	movf	fsr1l,w,c
 27345  0133A0  0FF3               	addlw	-13
 27346  0133A2  6ED9               	movwf	fsr2l,c
 27347  0133A4  50E2               	movf	fsr1h,w,c
 27348  0133A6  6EDA               	movwf	fsr2h,c
 27349  0133A8  0EFF               	movlw	255
 27350  0133AA  22DA               	addwfc	fsr2h,f,c
 27351                           
 27352                           ;stkvar	_grs @ sp[(-13)+4]
 27353  0133AC  0EFA               	movlw	250
 27354  0133AE  24E1               	addwf	fsr1l,w,c
 27355  0133B0  6EE9               	movwf	fsr0l,c
 27356  0133B2  0EFF               	movlw	255
 27357  0133B4  20E2               	addwfc	fsr1h,w,c
 27358  0133B6  6EEA               	movwf	fsr0h,c
 27359  0133B8  50EF               	movf	indf0,w,c
 27360  0133BA  26DE               	addwf	postinc2,f,c
 27361  0133BC  0E00               	movlw	0
 27362  0133BE  22DE               	addwfc	postinc2,f,c
 27363  0133C0  22DE               	addwfc	postinc2,f,c
 27364  0133C2  22DE               	addwfc	postinc2,f,c
 27365                           
 27366                           ;stkvar	_grs @ sp[(-13)+4]
 27367  0133C4  50E1               	movf	fsr1l,w,c
 27368  0133C6  0FF7               	addlw	-9
 27369  0133C8  6ED9               	movwf	fsr2l,c
 27370  0133CA  50E2               	movf	fsr1h,w,c
 27371  0133CC  6EDA               	movwf	fsr2h,c
 27372  0133CE  0EFF               	movlw	255
 27373  0133D0  22DA               	addwfc	fsr2h,f,c
 27374  0133D2  0E08               	movlw	8
 27375  0133D4                     u6495:
 27376  0133D4  90D8               	bcf	status,0,c
 27377  0133D6  36DE               	rlcf	postinc2,f,c
 27378  0133D8  36DE               	rlcf	postinc2,f,c
 27379  0133DA  36DE               	rlcf	postinc2,f,c
 27380  0133DC  36DD               	rlcf	postdec2,f,c
 27381  0133DE  52DD               	movf	postdec2,f,c
 27382  0133E0  52DD               	movf	postdec2,f,c
 27383  0133E2  2EE8               	decfsz	wreg,f,c
 27384  0133E4  D7F7               	goto	u6495
 27385  0133E6  0E82               	movlw	130
 27386  0133E8  6E0B               	movwf	(btemp+10)^0,c
 27387  0133EA  0EFF               	movlw	255
 27388  0133EC  6E0C               	movwf	(btemp+11)^0,c
 27389                           
 27390                           ;stkvar	_bexp @ sp[(-13)+10]
 27391  0133EE  0EFD               	movlw	-3
 27392  0133F0  50E3               	movf	plusw1,w,c
 27393  0133F2  6E09               	movwf	(btemp+8)^0,c
 27394  0133F4  6A0A               	clrf	(btemp+9)^0,c
 27395                           
 27396                           ;stkvar	_aexp @ sp[(-13)+11]
 27397  0133F6  0EFE               	movlw	-2
 27398  0133F8  50E3               	movf	plusw1,w,c
 27399  0133FA  2609               	addwf	(btemp+8)^0,f,c
 27400  0133FC  0E00               	movlw	0
 27401  0133FE  220A               	addwfc	(btemp+9)^0,f,c
 27402  013400  500B               	movf	(btemp+10)^0,w,c
 27403  013402  2609               	addwf	(btemp+8)^0,f,c
 27404  013404  500C               	movf	(btemp+11)^0,w,c
 27405  013406  220A               	addwfc	(btemp+9)^0,f,c
 27406                           
 27407                           ;stkvar	_temp @ sp[(-13)+8]
 27408  013408  0EFB               	movlw	-5
 27409  01340A  0060  F027  FFE3   	movff	btemp+8,plusw1
 27410  013410  0EFC               	movlw	-4
 27411  013412  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27412  013418  D021               	goto	l8030
 27413  01341A                     l8020:
 27414                           
 27415                           ;stkvar	_prod @ sp[(-13)+0]
 27416  01341A  90D8               	bcf	status,0,c
 27417  01341C  0EF3               	movlw	-13
 27418  01341E  36E3               	rlcf	plusw1,f,c
 27419  013420  0EF4               	movlw	-12
 27420  013422  36E3               	rlcf	plusw1,f,c
 27421  013424  0EF5               	movlw	-11
 27422  013426  36E3               	rlcf	plusw1,f,c
 27423  013428  0EF6               	movlw	-10
 27424  01342A  36E3               	rlcf	plusw1,f,c
 27425                           
 27426                           ;stkvar	_grs @ sp[(-13)+4]
 27427  01342C  0EFA               	movlw	-6
 27428  01342E  AEE3               	btfss	plusw1,7,c
 27429  013430  D002               	goto	l8026
 27430                           
 27431                           ;stkvar	_prod @ sp[(-13)+0]
 27432  013432  0EF3               	movlw	-13
 27433  013434  80E3               	bsf	plusw1,0,c
 27434  013436                     l8026:
 27435                           
 27436                           ;stkvar	_grs @ sp[(-13)+4]
 27437  013436  90D8               	bcf	status,0,c
 27438  013438  0EF7               	movlw	-9
 27439  01343A  36E3               	rlcf	plusw1,f,c
 27440  01343C  0EF8               	movlw	-8
 27441  01343E  36E3               	rlcf	plusw1,f,c
 27442  013440  0EF9               	movlw	-7
 27443  013442  36E3               	rlcf	plusw1,f,c
 27444  013444  0EFA               	movlw	-6
 27445  013446  36E3               	rlcf	plusw1,f,c
 27446                           
 27447                           ;stkvar	_temp @ sp[(-13)+8]
 27448  013448  50E1               	movf	fsr1l,w,c
 27449  01344A  0FFB               	addlw	-5
 27450  01344C  6ED9               	movwf	fsr2l,c
 27451  01344E  50E2               	movf	fsr1h,w,c
 27452  013450  6EDA               	movwf	fsr2h,c
 27453  013452  0EFF               	movlw	255
 27454  013454  22DA               	addwfc	fsr2h,f,c
 27455  013456  06DE               	decf	postinc2,f,c
 27456  013458  0E00               	movlw	0
 27457  01345A  5ADD               	subwfb	postdec2,f,c
 27458  01345C                     l8030:
 27459                           
 27460                           ;stkvar	_prod @ sp[(-13)+0]
 27461  01345C  0EF5               	movlw	-11
 27462  01345E  AEE3               	btfss	plusw1,7,c
 27463  013460  D7DC               	goto	l8020
 27464                           
 27465                           ;stkvar	_aexp @ sp[(-13)+11]
 27466  013462  0EFE               	movlw	-2
 27467  013464  6AE3               	clrf	plusw1,c
 27468                           
 27469                           ;stkvar	_grs @ sp[(-13)+4]
 27470  013466  0EFA               	movlw	-6
 27471  013468  AEE3               	btfss	plusw1,7,c
 27472  01346A  D020               	goto	l8044
 27473                           
 27474                           ;stkvar	_grs @ sp[(-13)+4]
 27475  01346C  50E1               	movf	fsr1l,w,c
 27476  01346E  0FF7               	addlw	-9
 27477  013470  6ED9               	movwf	fsr2l,c
 27478  013472  50E2               	movf	fsr1h,w,c
 27479  013474  6EDA               	movwf	fsr2h,c
 27480  013476  0EFF               	movlw	255
 27481  013478  22DA               	addwfc	fsr2h,f,c
 27482  01347A  0EFF               	movlw	255
 27483  01347C  14DE               	andwf	postinc2,w,c
 27484  01347E  6E09               	movwf	(btemp+8)^0,c
 27485  013480  0EFF               	movlw	255
 27486  013482  14DE               	andwf	postinc2,w,c
 27487  013484  6E0A               	movwf	(btemp+9)^0,c
 27488  013486  0EFF               	movlw	255
 27489  013488  14DE               	andwf	postinc2,w,c
 27490  01348A  6E0B               	movwf	(btemp+10)^0,c
 27491  01348C  0E7F               	movlw	127
 27492  01348E  14DE               	andwf	postinc2,w,c
 27493  013490  6E0C               	movwf	(btemp+11)^0,c
 27494  013492  5009               	movf	(btemp+8)^0,w,c
 27495  013494  100A               	iorwf	(btemp+9)^0,w,c
 27496  013496  100B               	iorwf	(btemp+10)^0,w,c
 27497  013498  100C               	iorwf	(btemp+11)^0,w,c
 27498  01349A  B4D8               	btfsc	status,2,c
 27499  01349C  D004               	goto	l8040
 27500  01349E                     u6530:
 27501                           
 27502                           ;stkvar	_aexp @ sp[(-13)+11]
 27503  01349E  0EFE               	movlw	-2
 27504  0134A0  6AE3               	clrf	plusw1,c
 27505  0134A2  2AE3               	incf	plusw1,f,c
 27506  0134A4  D003               	goto	l8044
 27507  0134A6                     l8040:
 27508                           
 27509                           ;stkvar	_prod @ sp[(-13)+0]
 27510  0134A6  0EF3               	movlw	-13
 27511  0134A8  B0E3               	btfsc	plusw1,0,c
 27512  0134AA  D7F9               	goto	u6530
 27513  0134AC                     l8044:
 27514                           
 27515                           ;stkvar	_aexp @ sp[(-13)+11]
 27516  0134AC  0EFE               	movlw	-2
 27517  0134AE  50E3               	movf	plusw1,w,c
 27518  0134B0  B4D8               	btfsc	status,2,c
 27519  0134B2  D036               	goto	l8054
 27520                           
 27521                           ;stkvar	_prod @ sp[(-13)+0]
 27522  0134B4  50E1               	movf	fsr1l,w,c
 27523  0134B6  0FF3               	addlw	-13
 27524  0134B8  6ED9               	movwf	fsr2l,c
 27525  0134BA  50E2               	movf	fsr1h,w,c
 27526  0134BC  6EDA               	movwf	fsr2h,c
 27527  0134BE  0EFF               	movlw	255
 27528  0134C0  22DA               	addwfc	fsr2h,f,c
 27529  0134C2  2ADE               	incf	postinc2,f,c
 27530  0134C4  0E00               	movlw	0
 27531  0134C6  22DE               	addwfc	postinc2,f,c
 27532  0134C8  22DE               	addwfc	postinc2,f,c
 27533  0134CA  22DE               	addwfc	postinc2,f,c
 27534                           
 27535                           ;stkvar	_prod @ sp[(-13)+0]
 27536  0134CC  0EF6               	movlw	-10
 27537  0134CE  A0E3               	btfss	plusw1,0,c
 27538  0134D0  D027               	goto	l8054
 27539  0134D2  0E01               	movlw	1
 27540  0134D4  6E0C               	movwf	(btemp+11)^0,c
 27541                           
 27542                           ;stkvar	_prod @ sp[(-13)+0]
 27543  0134D6  50E1               	movf	fsr1l,w,c
 27544  0134D8  0FF3               	addlw	-13
 27545  0134DA  6ED9               	movwf	fsr2l,c
 27546  0134DC  50E2               	movf	fsr1h,w,c
 27547  0134DE  6EDA               	movwf	fsr2h,c
 27548  0134E0  0EFF               	movlw	255
 27549  0134E2  22DA               	addwfc	fsr2h,f,c
 27550  0134E4  280C               	incf	(btemp+11)^0,w,c
 27551  0134E6  52DE               	movf	postinc2,f,c
 27552  0134E8  D008               	goto	u6570
 27553  0134EA                     u6575:
 27554  0134EA  52DE               	movf	postinc2,f,c
 27555  0134EC  90D8               	bcf	status,0,c
 27556  0134EE  BEDC               	btfsc	preinc2,7,c
 27557  0134F0  80D8               	bsf	status,0,c
 27558  0134F2  32DD               	rrcf	postdec2,f,c
 27559  0134F4  32DD               	rrcf	postdec2,f,c
 27560  0134F6  32DD               	rrcf	postdec2,f,c
 27561  0134F8  32DE               	rrcf	postinc2,f,c
 27562  0134FA                     u6570:
 27563  0134FA  2EE8               	decfsz	wreg,f,c
 27564  0134FC  D7F6               	goto	u6575
 27565                           
 27566                           ;stkvar	_temp @ sp[(-13)+8]
 27567  0134FE  0EFB               	movlw	-5
 27568  013500  50E3               	movf	plusw1,w,c
 27569  013502  0F01               	addlw	1
 27570  013504  6E01               	movwf	btemp^0,c
 27571  013506  0EFB               	movlw	-5
 27572  013508  0060  F007  FFE3   	movff	btemp,plusw1
 27573  01350E  6A01               	clrf	btemp^0,c
 27574  013510  0EFC               	movlw	-4
 27575  013512  50E3               	movf	plusw1,w,c
 27576  013514  2001               	addwfc	btemp^0,w,c
 27577  013516  6E01               	movwf	btemp^0,c
 27578  013518  0EFC               	movlw	-4
 27579  01351A  0060  F007  FFE3   	movff	btemp,plusw1
 27580  013520                     l8054:
 27581                           
 27582                           ;stkvar	_temp @ sp[(-13)+8]
 27583  013520  0EFC               	movlw	-4
 27584  013522  BEE3               	btfsc	plusw1,7,c
 27585  013524  D020               	goto	l8058
 27586  013526  0EFC               	movlw	-4
 27587  013528  50E3               	movf	plusw1,w,c
 27588  01352A  E104               	bnz	u6580
 27589  01352C  0EFB               	movlw	-5
 27590  01352E  28E3               	incf	plusw1,w,c
 27591  013530  A0D8               	btfss	status,0,c
 27592  013532  D019               	goto	l8058
 27593  013534                     u6580:
 27594  013534  0E00               	movlw	0
 27595  013536  6E09               	movwf	(btemp+8)^0,c
 27596  013538  0E00               	movlw	0
 27597  01353A  6E0A               	movwf	(btemp+9)^0,c
 27598  01353C  0E80               	movlw	128
 27599  01353E  6E0B               	movwf	(btemp+10)^0,c
 27600  013540  0E7F               	movlw	127
 27601  013542  6E0C               	movwf	(btemp+11)^0,c
 27602                           
 27603                           ;stkvar	_prod @ sp[(-13)+0]
 27604  013544  0EF3               	movlw	-13
 27605  013546  0060  F027  FFE3   	movff	btemp+8,plusw1
 27606  01354C  0EF4               	movlw	-12
 27607  01354E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27608  013554  0EF5               	movlw	-11
 27609  013556  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27610  01355C  0EF6               	movlw	-10
 27611  01355E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27612  013564  D044               	goto	l8074
 27613  013566                     l8058:
 27614                           
 27615                           ;stkvar	_temp @ sp[(-13)+8]
 27616  013566  0EFC               	movlw	-4
 27617  013568  BEE3               	btfsc	plusw1,7,c
 27618  01356A  D007               	goto	u6590
 27619  01356C  0EFC               	movlw	-4
 27620  01356E  50E3               	movf	plusw1,w,c
 27621  013570  E10F               	bnz	l8064
 27622  013572  0EFB               	movlw	-5
 27623  013574  04E3               	decf	plusw1,w,c
 27624  013576  B0D8               	btfsc	status,0,c
 27625  013578  D00B               	goto	l8064
 27626  01357A                     u6590:
 27627                           
 27628                           ;stkvar	_prod @ sp[(-13)+0]
 27629  01357A  0EF3               	movlw	-13
 27630  01357C  6AE3               	clrf	plusw1,c
 27631  01357E  0EF4               	movlw	-12
 27632  013580  6AE3               	clrf	plusw1,c
 27633  013582  0EF5               	movlw	-11
 27634  013584  6AE3               	clrf	plusw1,c
 27635  013586  0EF6               	movlw	-10
 27636  013588  6AE3               	clrf	plusw1,c
 27637                           
 27638                           ;stkvar	_sign @ sp[(-13)+12]
 27639  01358A  0EFF               	movlw	-1
 27640  01358C  6AE3               	clrf	plusw1,c
 27641  01358E  D02F               	goto	l8074
 27642  013590                     l8064:
 27643                           
 27644                           ;stkvar	_temp @ sp[(-13)+8]
 27645                           ;stkvar	_bexp @ sp[(-13)+10]
 27646  013590  0EFB               	movlw	-5
 27647  013592  006F FF8C  F001    	movff	plusw1,btemp
 27648  013598  0EFD               	movlw	-3
 27649  01359A  0060  F007  FFE3   	movff	btemp,plusw1
 27650                           
 27651                           ;stkvar	_prod @ sp[(-13)+0]
 27652  0135A0  50E1               	movf	fsr1l,w,c
 27653  0135A2  0FF3               	addlw	-13
 27654  0135A4  6ED9               	movwf	fsr2l,c
 27655  0135A6  50E2               	movf	fsr1h,w,c
 27656  0135A8  6EDA               	movwf	fsr2h,c
 27657  0135AA  0EFF               	movlw	255
 27658  0135AC  22DA               	addwfc	fsr2h,f,c
 27659  0135AE  0EFF               	movlw	255
 27660  0135B0  16DE               	andwf	postinc2,f,c
 27661  0135B2  0EFF               	movlw	255
 27662  0135B4  16DE               	andwf	postinc2,f,c
 27663  0135B6  0E7F               	movlw	127
 27664  0135B8  16DE               	andwf	postinc2,f,c
 27665  0135BA  0E00               	movlw	0
 27666  0135BC  16DE               	andwf	postinc2,f,c
 27667                           
 27668                           ;stkvar	_bexp @ sp[(-13)+10]
 27669  0135BE  0EFD               	movlw	-3
 27670  0135C0  A0E3               	btfss	plusw1,0,c
 27671  0135C2  D008               	goto	l8072
 27672                           
 27673                           ;stkvar	_prod @ sp[(-13)+0]
 27674  0135C4  0EF5               	movlw	245
 27675  0135C6  24E1               	addwf	fsr1l,w,c
 27676  0135C8  6ED9               	movwf	fsr2l,c
 27677  0135CA  0EFF               	movlw	255
 27678  0135CC  20E2               	addwfc	fsr1h,w,c
 27679  0135CE  6EDA               	movwf	fsr2h,c
 27680  0135D0  0E00               	movlw	0
 27681  0135D2  8EDB               	bsf	plusw2,7,c
 27682  0135D4                     l8072:
 27683                           
 27684                           ;stkvar	_prod @ sp[(-13)+0]
 27685  0135D4  0EF6               	movlw	246
 27686  0135D6  24E1               	addwf	fsr1l,w,c
 27687  0135D8  6ED9               	movwf	fsr2l,c
 27688  0135DA  0EFF               	movlw	255
 27689  0135DC  20E2               	addwfc	fsr1h,w,c
 27690  0135DE  6EDA               	movwf	fsr2h,c
 27691                           
 27692                           ;stkvar	_bexp @ sp[(-13)+10]
 27693  0135E0  0EFD               	movlw	-3
 27694  0135E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 27695  0135E8  90D8               	bcf	status,0,c
 27696  0135EA  300C               	rrcf	(btemp+11)^0,w,c
 27697  0135EC  6EDF               	movwf	indf2,c
 27698  0135EE                     l8074:
 27699                           
 27700                           ;stkvar	_sign @ sp[(-13)+12]
 27701  0135EE  0EFF               	movlw	-1
 27702  0135F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 27703                           
 27704                           ;stkvar	_prod @ sp[(-13)+0]
 27705  0135F6  0EF6               	movlw	246
 27706  0135F8  24E1               	addwf	fsr1l,w,c
 27707  0135FA  6ED9               	movwf	fsr2l,c
 27708  0135FC  0EFF               	movlw	255
 27709  0135FE  20E2               	addwfc	fsr1h,w,c
 27710  013600  6EDA               	movwf	fsr2h,c
 27711  013602  500C               	movf	(btemp+11)^0,w,c
 27712  013604  12DF               	iorwf	indf2,f,c
 27713                           
 27714                           ;stkvar	_prod @ sp[(-13)+0]
 27715  013606  0EF3               	movlw	-13
 27716  013608  006F FF8C  F001    	movff	plusw1,btemp
 27717  01360E  0EF4               	movlw	-12
 27718  013610  006F FF8C  F002    	movff	plusw1,btemp+1
 27719  013616  0EF5               	movlw	-11
 27720  013618  006F FF8C  F003    	movff	plusw1,btemp+2
 27721  01361E  0EF6               	movlw	-10
 27722  013620  006F FF8C  F004    	movff	plusw1,btemp+3
 27723  013626                     l2953:
 27724                           
 27725                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 27726  013626  0EEB               	movlw	235
 27727  013628  26E1               	addwf	fsr1l,f,c
 27728  01362A  0EFF               	movlw	255
 27729  01362C  22E2               	addwfc	fsr1h,f,c
 27730  01362E  0012               	return		;funcret
 27731  013630                     __end_of___flmul:
 27732                           	opt callstack 0
 27733                           
 27734 ;; *************** function _SYSTEM_Initialize *****************
 27735 ;; Defined at:
 27736 ;;		line 50 in file "mcc_generated_files/mcc.c"
 27737 ;; Parameters:    Size  Location     Type
 27738 ;;		None
 27739 ;; Auto vars:     Size  Location     Type
 27740 ;;		None
 27741 ;; Return value:  Size  Location     Type
 27742 ;;                  1  [STACK] void 
 27743 ;; Registers used:
 27744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 27745 ;; Tracked objects:
 27746 ;;		On entry : 0/0
 27747 ;;		On exit  : 3F/3C
 27748 ;;		Unchanged: 0/0
 27749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27754 ;;Total ram usage:        0 bytes
 27755 ;; Hardware stack levels used:    1
 27756 ;; Hardware stack levels required when called:   17
 27757 ;; This function calls:
 27758 ;;		_ADCC_Initialize
 27759 ;;		_CLKREF_Initialize
 27760 ;;		_DMA1_Initialize
 27761 ;;		_DMA2_Initialize
 27762 ;;		_EXT_INT_Initialize
 27763 ;;		_FVR_Initialize
 27764 ;;		_INTERRUPT_Initialize
 27765 ;;		_OSCILLATOR_Initialize
 27766 ;;		_PIN_MANAGER_Initialize
 27767 ;;		_PMD_Initialize
 27768 ;;		_PWM8_Initialize
 27769 ;;		_SPI1_Initialize
 27770 ;;		_TMR2_Initialize
 27771 ;;		_TMR3_Initialize
 27772 ;;		_TMR5_Initialize
 27773 ;;		_TMR6_Initialize
 27774 ;;		_UART1_Initialize
 27775 ;;		_UART2_Initialize
 27776 ;; This function is called by:
 27777 ;;		_main
 27778 ;; This function uses a reentrant model
 27779 ;;
 27780                           
 27781                           	psect	text107
 27782  01A416                     __ptext107:
 27783                           	opt callstack 0
 27784  01A416                     _SYSTEM_Initialize:
 27785                           	opt callstack 13
 27786                           
 27787                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 27788                           
 27789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27790                           ;incstack = 0
 27791  01A416  ECEB  F0CF         	call	_INTERRUPT_Initialize	;wreg free
 27792                           
 27793                           ; BSR set to: 57
 27794                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 27795  01A41A  EC3A  F0D8         	call	_PMD_Initialize	;wreg free
 27796                           
 27797                           ; BSR set to: 57
 27798                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 27799  01A41E  ECB4  F0CD         	call	_PIN_MANAGER_Initialize	;wreg free
 27800                           
 27801                           ; BSR set to: 58
 27802                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 27803  01A422  EC2F  F0D8         	call	_OSCILLATOR_Initialize	;wreg free
 27804                           
 27805                           ; BSR set to: 57
 27806                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 27807  01A426  ECAF  F0D8         	call	_FVR_Initialize	;wreg free
 27808                           
 27809                           ; BSR set to: 62
 27810                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 27811  01A42A  EC81  F0CF         	call	_ADCC_Initialize	;wreg free
 27812                           
 27813                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 27814  01A42E  EC24  F0D8         	call	_PWM8_Initialize	;wreg free
 27815                           
 27816                           ; BSR set to: 63
 27817                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 27818  01A432  EC0D  F0D8         	call	_TMR2_Initialize	;wreg free
 27819                           
 27820                           ; BSR set to: 57
 27821                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 27822  01A436  EC89  F0D4         	call	_EXT_INT_Initialize	;wreg free
 27823                           
 27824                           ; BSR set to: 57
 27825                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 27826  01A43A  EC76  F0D5         	call	_TMR6_Initialize	;wreg free
 27827                           
 27828                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 27829  01A43E  ECE0  F0D2         	call	_TMR3_Initialize	;wreg free
 27830                           
 27831                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 27832  01A442  ECBD  F0D2         	call	_TMR5_Initialize	;wreg free
 27833                           
 27834                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 27835  01A446  EC9A  F0D2         	call	_UART1_Initialize	;wreg free
 27836                           
 27837                           ; BSR set to: 57
 27838                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 27839  01A44A  ECB2  F0D0         	call	_UART2_Initialize	;wreg free
 27840                           
 27841                           ; BSR set to: 57
 27842                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 27843  01A44E  EC19  F0D8         	call	_SPI1_Initialize	;wreg free
 27844                           
 27845                           ; BSR set to: 61
 27846                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 27847  01A452  EC0E  F0D1         	call	_DMA2_Initialize	;wreg free
 27848                           
 27849                           ; BSR set to: 59
 27850                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 27851  01A456  EC4C  F0CF         	call	_DMA1_Initialize	;wreg free
 27852                           
 27853                           ; BSR set to: 59
 27854                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 27855  01A45A  EC83  F0D8         	call	_CLKREF_Initialize	;wreg free
 27856                           
 27857                           ; BSR set to: 60
 27858                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27859  01A45E  0012               	return		;funcret
 27860  01A460                     __end_of_SYSTEM_Initialize:
 27861                           	opt callstack 0
 27862                           
 27863 ;; *************** function _UART2_Initialize *****************
 27864 ;; Defined at:
 27865 ;;		line 78 in file "mcc_generated_files/uart2.c"
 27866 ;; Parameters:    Size  Location     Type
 27867 ;;		None
 27868 ;; Auto vars:     Size  Location     Type
 27869 ;;		None
 27870 ;; Return value:  Size  Location     Type
 27871 ;;                  1  [STACK] void 
 27872 ;; Registers used:
 27873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27874 ;; Tracked objects:
 27875 ;;		On entry : 3F/39
 27876 ;;		On exit  : 3F/39
 27877 ;;		Unchanged: 0/0
 27878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27883 ;;Total ram usage:        0 bytes
 27884 ;; Hardware stack levels used:    1
 27885 ;; Hardware stack levels required when called:   16
 27886 ;; This function calls:
 27887 ;;		_UART2_SetRxInterruptHandler
 27888 ;;		_UART2_SetTxInterruptHandler
 27889 ;; This function is called by:
 27890 ;;		_SYSTEM_Initialize
 27891 ;; This function uses a reentrant model
 27892 ;;
 27893                           
 27894                           	psect	text108
 27895  01A164                     __ptext108:
 27896                           	opt callstack 0
 27897  01A164                     _UART2_Initialize:
 27898                           	opt callstack 13
 27899                           
 27900                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 27901                           
 27902                           ; BSR set to: 60
 27903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27904                           ;incstack = 0
 27905  01A164  0139               	movlb	57	; () banked
 27906  01A166  9596               	bcf	150,2,b	;volatile
 27907                           
 27908                           ; BSR set to: 57
 27909                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 27910  01A168  0E76               	movlw	low _UART2_Receive_ISR
 27911  01A16A  6EE6               	movwf	postinc1,c
 27912  01A16C  0EAF               	movlw	high _UART2_Receive_ISR
 27913  01A16E  6EE6               	movwf	postinc1,c
 27914  01A170  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 27915  01A172  6EE6               	movwf	postinc1,c
 27916  01A174  ECEF  F0D5         	call	_UART2_SetRxInterruptHandler	;wreg free
 27917                           
 27918                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 27919  01A178  0139               	movlb	57	; () banked
 27920  01A17A  9796               	bcf	150,3,b	;volatile
 27921                           
 27922                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 27923  01A17C  0EC0               	movlw	low _UART2_Transmit_ISR
 27924  01A17E  6EE6               	movwf	postinc1,c
 27925  01A180  0EAA               	movlw	high _UART2_Transmit_ISR
 27926  01A182  6EE6               	movwf	postinc1,c
 27927  01A184  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 27928  01A186  6EE6               	movwf	postinc1,c
 27929  01A188  ECDB  F0D5         	call	_UART2_SetTxInterruptHandler	;wreg free
 27930                           
 27931                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 27932  01A18C  013D               	movlb	61	; () banked
 27933  01A18E  6BD4               	clrf	212,b	;volatile
 27934                           
 27935                           ; BSR set to: 61
 27936                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 27937  01A190  6BD6               	clrf	214,b	;volatile
 27938                           
 27939                           ; BSR set to: 61
 27940                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 27941  01A192  6BD8               	clrf	216,b	;volatile
 27942                           
 27943                           ; BSR set to: 61
 27944                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 27945  01A194  0EB0               	movlw	176
 27946  01A196  6FDA               	movwf	218,b	;volatile
 27947                           
 27948                           ; BSR set to: 61
 27949                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 27950  01A198  0E80               	movlw	128
 27951  01A19A  6FDB               	movwf	219,b	;volatile
 27952                           
 27953                           ; BSR set to: 61
 27954                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 27955  01A19C  6BDC               	clrf	220,b	;volatile
 27956                           
 27957                           ; BSR set to: 61
 27958                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 27959  01A19E  0E82               	movlw	130
 27960  01A1A0  6FDD               	movwf	221,b	;volatile
 27961                           
 27962                           ; BSR set to: 61
 27963                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 27964  01A1A2  0E06               	movlw	6
 27965  01A1A4  6FDE               	movwf	222,b	;volatile
 27966                           
 27967                           ; BSR set to: 61
 27968                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 27969  01A1A6  6BDF               	clrf	223,b	;volatile
 27970                           
 27971                           ; BSR set to: 61
 27972                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 27973  01A1A8  6BE0               	clrf	224,b	;volatile
 27974                           
 27975                           ; BSR set to: 61
 27976                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 27977  01A1AA  6BE1               	clrf	225,b	;volatile
 27978                           
 27979                           ; BSR set to: 61
 27980                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 27981  01A1AC  6BE2               	clrf	226,b	;volatile
 27982                           
 27983                           ; BSR set to: 61
 27984                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 27985  01A1AE  6A34               	clrf	_uart2TxHead^0,c	;volatile
 27986                           
 27987                           ; BSR set to: 61
 27988                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 27989  01A1B0  6A33               	clrf	_uart2TxTail^0,c	;volatile
 27990                           
 27991                           ; BSR set to: 61
 27992                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 27993  01A1B2  0E40               	movlw	64
 27994  01A1B4  6E32               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 27995                           
 27996                           ; BSR set to: 61
 27997                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 27998  01A1B6  6A31               	clrf	_uart2RxHead^0,c	;volatile
 27999                           
 28000                           ; BSR set to: 61
 28001                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28002  01A1B8  6A30               	clrf	_uart2RxTail^0,c	;volatile
 28003                           
 28004                           ; BSR set to: 61
 28005                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28006  01A1BA  6A2F               	clrf	_uart2RxCount^0,c	;volatile
 28007                           
 28008                           ; BSR set to: 61
 28009                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28010  01A1BC  0139               	movlb	57	; () banked
 28011  01A1BE  8596               	bsf	150,2,b	;volatile
 28012                           
 28013                           ; BSR set to: 57
 28014                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28015  01A1C0  0012               	return		;funcret
 28016  01A1C2                     __end_of_UART2_Initialize:
 28017                           	opt callstack 0
 28018                           
 28019 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28020 ;; Defined at:
 28021 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28022 ;; Parameters:    Size  Location     Type
 28023 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28024 ;;		 -> UART2_Transmit_ISR(1), 
 28025 ;; Auto vars:     Size  Location     Type
 28026 ;;		None
 28027 ;; Return value:  Size  Location     Type
 28028 ;;                  1  [STACK] void 
 28029 ;; Registers used:
 28030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28031 ;; Tracked objects:
 28032 ;;		On entry : 3F/39
 28033 ;;		On exit  : 0/0
 28034 ;;		Unchanged: 0/0
 28035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28040 ;;Total ram usage:        0 bytes
 28041 ;; Hardware stack levels used:    1
 28042 ;; Hardware stack levels required when called:   15
 28043 ;; This function calls:
 28044 ;;		Nothing
 28045 ;; This function is called by:
 28046 ;;		_UART2_Initialize
 28047 ;; This function uses a reentrant model
 28048 ;;
 28049                           
 28050                           	psect	text109
 28051  01ABB6                     __ptext109:
 28052                           	opt callstack 0
 28053  01ABB6                     _UART2_SetTxInterruptHandler:
 28054                           	opt callstack 13
 28055                           
 28056                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28057                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28058                           
 28059                           ; BSR set to: 57
 28060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28061                           ;incstack = 0
 28062  01ABB6  50E1               	movf	fsr1l,w,c
 28063  01ABB8  0FFD               	addlw	-3
 28064  01ABBA  6ED9               	movwf	fsr2l,c
 28065  01ABBC  50E2               	movf	fsr1h,w,c
 28066  01ABBE  6EDA               	movwf	fsr2h,c
 28067  01ABC0  0EFF               	movlw	255
 28068  01ABC2  22DA               	addwfc	fsr2h,f,c
 28069  01ABC4  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 28070  01ABCA  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 28071  01ABD0  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 28072                           
 28073                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28074  01ABD6  52E5               	movf	postdec1,f,c
 28075  01ABD8  52E5               	movf	postdec1,f,c
 28076  01ABDA  52E5               	movf	postdec1,f,c
 28077  01ABDC  0012               	return		;funcret
 28078  01ABDE                     __end_of_UART2_SetTxInterruptHandler:
 28079                           	opt callstack 0
 28080                           
 28081 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28082 ;; Defined at:
 28083 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28084 ;; Parameters:    Size  Location     Type
 28085 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28086 ;;		 -> UART2_Receive_ISR(1), 
 28087 ;; Auto vars:     Size  Location     Type
 28088 ;;		None
 28089 ;; Return value:  Size  Location     Type
 28090 ;;                  1  [STACK] void 
 28091 ;; Registers used:
 28092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28093 ;; Tracked objects:
 28094 ;;		On entry : 3F/39
 28095 ;;		On exit  : 0/0
 28096 ;;		Unchanged: 0/0
 28097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28102 ;;Total ram usage:        0 bytes
 28103 ;; Hardware stack levels used:    1
 28104 ;; Hardware stack levels required when called:   15
 28105 ;; This function calls:
 28106 ;;		Nothing
 28107 ;; This function is called by:
 28108 ;;		_UART2_Initialize
 28109 ;; This function uses a reentrant model
 28110 ;;
 28111                           
 28112                           	psect	text110
 28113  01ABDE                     __ptext110:
 28114                           	opt callstack 0
 28115  01ABDE                     _UART2_SetRxInterruptHandler:
 28116                           	opt callstack 13
 28117                           
 28118                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28119                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28120                           
 28121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28122                           ;incstack = 0
 28123  01ABDE  50E1               	movf	fsr1l,w,c
 28124  01ABE0  0FFD               	addlw	-3
 28125  01ABE2  6ED9               	movwf	fsr2l,c
 28126  01ABE4  50E2               	movf	fsr1h,w,c
 28127  01ABE6  6EDA               	movwf	fsr2h,c
 28128  01ABE8  0EFF               	movlw	255
 28129  01ABEA  22DA               	addwfc	fsr2h,f,c
 28130  01ABEC  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 28131  01ABF2  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 28132  01ABF8  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 28133                           
 28134                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28135  01ABFE  52E5               	movf	postdec1,f,c
 28136  01AC00  52E5               	movf	postdec1,f,c
 28137  01AC02  52E5               	movf	postdec1,f,c
 28138  01AC04  0012               	return		;funcret
 28139  01AC06                     __end_of_UART2_SetRxInterruptHandler:
 28140                           	opt callstack 0
 28141                           
 28142 ;; *************** function _UART1_Initialize *****************
 28143 ;; Defined at:
 28144 ;;		line 75 in file "mcc_generated_files/uart1.c"
 28145 ;; Parameters:    Size  Location     Type
 28146 ;;		None
 28147 ;; Auto vars:     Size  Location     Type
 28148 ;;		None
 28149 ;; Return value:  Size  Location     Type
 28150 ;;                  1  [STACK] void 
 28151 ;; Registers used:
 28152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28153 ;; Tracked objects:
 28154 ;;		On entry : 0/39
 28155 ;;		On exit  : 3F/39
 28156 ;;		Unchanged: 0/0
 28157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28162 ;;Total ram usage:        0 bytes
 28163 ;; Hardware stack levels used:    1
 28164 ;; Hardware stack levels required when called:   16
 28165 ;; This function calls:
 28166 ;;		_UART1_SetRxInterruptHandler
 28167 ;; This function is called by:
 28168 ;;		_SYSTEM_Initialize
 28169 ;; This function uses a reentrant model
 28170 ;;
 28171                           
 28172                           	psect	text111
 28173  01A534                     __ptext111:
 28174                           	opt callstack 0
 28175  01A534                     _UART1_Initialize:
 28176                           	opt callstack 13
 28177                           
 28178                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 28179                           
 28180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28181                           ;incstack = 0
 28182  01A534  0139               	movlb	57	; () banked
 28183  01A536  9793               	bcf	147,3,b	;volatile
 28184                           
 28185                           ; BSR set to: 57
 28186                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 28187  01A538  0EB0               	movlw	low _UART1_Receive_ISR
 28188  01A53A  6EE6               	movwf	postinc1,c
 28189  01A53C  0EAF               	movlw	high _UART1_Receive_ISR
 28190  01A53E  6EE6               	movwf	postinc1,c
 28191  01A540  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 28192  01A542  6EE6               	movwf	postinc1,c
 28193  01A544  EC03  F0D6         	call	_UART1_SetRxInterruptHandler	;wreg free
 28194                           
 28195                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 28196  01A548  013D               	movlb	61	; () banked
 28197  01A54A  6BEC               	clrf	236,b	;volatile
 28198                           
 28199                           ; BSR set to: 61
 28200                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 28201  01A54C  6BED               	clrf	237,b	;volatile
 28202                           
 28203                           ; BSR set to: 61
 28204                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 28205  01A54E  6BEE               	clrf	238,b	;volatile
 28206                           
 28207                           ; BSR set to: 61
 28208                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 28209  01A550  6BEF               	clrf	239,b	;volatile
 28210                           
 28211                           ; BSR set to: 61
 28212                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 28213  01A552  6BF0               	clrf	240,b	;volatile
 28214                           
 28215                           ; BSR set to: 61
 28216                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 28217  01A554  6BF1               	clrf	241,b	;volatile
 28218                           
 28219                           ; BSR set to: 61
 28220                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 28221  01A556  0EB0               	movlw	176
 28222  01A558  6FF2               	movwf	242,b	;volatile
 28223                           
 28224                           ; BSR set to: 61
 28225                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 28226  01A55A  0E80               	movlw	128
 28227  01A55C  6FF3               	movwf	243,b	;volatile
 28228                           
 28229                           ; BSR set to: 61
 28230                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 28231  01A55E  6BF4               	clrf	244,b	;volatile
 28232                           
 28233                           ; BSR set to: 61
 28234                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 28235  01A560  0E8A               	movlw	138
 28236  01A562  6FF5               	movwf	245,b	;volatile
 28237                           
 28238                           ; BSR set to: 61
 28239                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 28240  01A564  6BF6               	clrf	246,b	;volatile
 28241                           
 28242                           ; BSR set to: 61
 28243                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 28244  01A566  6BF7               	clrf	247,b	;volatile
 28245                           
 28246                           ; BSR set to: 61
 28247                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 28248  01A568  6BF8               	clrf	248,b	;volatile
 28249                           
 28250                           ; BSR set to: 61
 28251                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 28252  01A56A  6BF9               	clrf	249,b	;volatile
 28253                           
 28254                           ; BSR set to: 61
 28255                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 28256  01A56C  6BFA               	clrf	250,b	;volatile
 28257                           
 28258                           ; BSR set to: 61
 28259                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 28260  01A56E  6A37               	clrf	_uart1RxHead^0,c	;volatile
 28261                           
 28262                           ; BSR set to: 61
 28263                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 28264  01A570  6A36               	clrf	_uart1RxTail^0,c	;volatile
 28265                           
 28266                           ; BSR set to: 61
 28267                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 28268  01A572  6A35               	clrf	_uart1RxCount^0,c	;volatile
 28269                           
 28270                           ; BSR set to: 61
 28271                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 28272  01A574  0139               	movlb	57	; () banked
 28273  01A576  8793               	bsf	147,3,b	;volatile
 28274                           
 28275                           ; BSR set to: 57
 28276                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28277  01A578  0012               	return		;funcret
 28278  01A57A                     __end_of_UART1_Initialize:
 28279                           	opt callstack 0
 28280                           
 28281 ;; *************** function _UART1_SetRxInterruptHandler *****************
 28282 ;; Defined at:
 28283 ;;		line 207 in file "mcc_generated_files/uart1.c"
 28284 ;; Parameters:    Size  Location     Type
 28285 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28286 ;;		 -> UART1_Receive_ISR(1), 
 28287 ;; Auto vars:     Size  Location     Type
 28288 ;;		None
 28289 ;; Return value:  Size  Location     Type
 28290 ;;                  1  [STACK] void 
 28291 ;; Registers used:
 28292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28293 ;; Tracked objects:
 28294 ;;		On entry : 3F/39
 28295 ;;		On exit  : 0/0
 28296 ;;		Unchanged: 0/0
 28297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28302 ;;Total ram usage:        0 bytes
 28303 ;; Hardware stack levels used:    1
 28304 ;; Hardware stack levels required when called:   15
 28305 ;; This function calls:
 28306 ;;		Nothing
 28307 ;; This function is called by:
 28308 ;;		_UART1_Initialize
 28309 ;; This function uses a reentrant model
 28310 ;;
 28311                           
 28312                           	psect	text112
 28313  01AC06                     __ptext112:
 28314                           	opt callstack 0
 28315  01AC06                     _UART1_SetRxInterruptHandler:
 28316                           	opt callstack 13
 28317                           
 28318                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 28319                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28320                           
 28321                           ; BSR set to: 57
 28322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28323                           ;incstack = 0
 28324  01AC06  50E1               	movf	fsr1l,w,c
 28325  01AC08  0FFD               	addlw	-3
 28326  01AC0A  6ED9               	movwf	fsr2l,c
 28327  01AC0C  50E2               	movf	fsr1h,w,c
 28328  01AC0E  6EDA               	movwf	fsr2h,c
 28329  01AC10  0EFF               	movlw	255
 28330  01AC12  22DA               	addwfc	fsr2h,f,c
 28331  01AC14  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 28332  01AC1A  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 28333  01AC20  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 28334                           
 28335                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28336  01AC26  52E5               	movf	postdec1,f,c
 28337  01AC28  52E5               	movf	postdec1,f,c
 28338  01AC2A  52E5               	movf	postdec1,f,c
 28339  01AC2C  0012               	return		;funcret
 28340  01AC2E                     __end_of_UART1_SetRxInterruptHandler:
 28341                           	opt callstack 0
 28342                           
 28343 ;; *************** function _TMR6_Initialize *****************
 28344 ;; Defined at:
 28345 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 28346 ;; Parameters:    Size  Location     Type
 28347 ;;		None
 28348 ;; Auto vars:     Size  Location     Type
 28349 ;;		None
 28350 ;; Return value:  Size  Location     Type
 28351 ;;                  1  [STACK] void 
 28352 ;; Registers used:
 28353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28354 ;; Tracked objects:
 28355 ;;		On entry : 3F/39
 28356 ;;		On exit  : 0/0
 28357 ;;		Unchanged: 0/0
 28358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28363 ;;Total ram usage:        0 bytes
 28364 ;; Hardware stack levels used:    1
 28365 ;; Hardware stack levels required when called:   16
 28366 ;; This function calls:
 28367 ;;		_TMR6_SetInterruptHandler
 28368 ;; This function is called by:
 28369 ;;		_SYSTEM_Initialize
 28370 ;; This function uses a reentrant model
 28371 ;;
 28372                           
 28373                           	psect	text113
 28374  01AAEC                     __ptext113:
 28375                           	opt callstack 0
 28376  01AAEC                     _TMR6_Initialize:
 28377                           	opt callstack 13
 28378                           
 28379                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 28380                           
 28381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28382                           ;incstack = 0
 28383  01AAEC  0E01               	movlw	1
 28384  01AAEE  6E96               	movwf	150,c	;volatile
 28385                           
 28386                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 28387  01AAF0  6A95               	clrf	149,c	;volatile
 28388                           
 28389                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 28390  01AAF2  6A97               	clrf	151,c	;volatile
 28391                           
 28392                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 28393  01AAF4  0E7C               	movlw	124
 28394  01AAF6  6E93               	movwf	147,c	;volatile
 28395                           
 28396                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 28397  01AAF8  6A92               	clrf	146,c	;volatile
 28398                           
 28399                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 28400  01AAFA  0139               	movlb	57	; () banked
 28401  01AAFC  91A9               	bcf	169,0,b	;volatile
 28402                           
 28403                           ; BSR set to: 57
 28404                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 28405  01AAFE  8199               	bsf	153,0,b	;volatile
 28406                           
 28407                           ; BSR set to: 57
 28408                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 28409  01AB00  0EC8               	movlw	low _TMR6_DefaultInterruptHandler
 28410  01AB02  6EE6               	movwf	postinc1,c
 28411  01AB04  0EA3               	movlw	high _TMR6_DefaultInterruptHandler
 28412  01AB06  6EE6               	movwf	postinc1,c
 28413  01AB08  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 28414  01AB0A  6EE6               	movwf	postinc1,c
 28415  01AB0C  EC17  F0D6         	call	_TMR6_SetInterruptHandler	;wreg free
 28416                           
 28417                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 28418  01AB10  0EE0               	movlw	224
 28419  01AB12  6E94               	movwf	148,c	;volatile
 28420                           
 28421                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28422  01AB14  0012               	return		;funcret
 28423  01AB16                     __end_of_TMR6_Initialize:
 28424                           	opt callstack 0
 28425                           
 28426 ;; *************** function _TMR6_SetInterruptHandler *****************
 28427 ;; Defined at:
 28428 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 28429 ;; Parameters:    Size  Location     Type
 28430 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28431 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 28432 ;; Auto vars:     Size  Location     Type
 28433 ;;		None
 28434 ;; Return value:  Size  Location     Type
 28435 ;;                  1  [STACK] void 
 28436 ;; Registers used:
 28437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28438 ;; Tracked objects:
 28439 ;;		On entry : 3F/39
 28440 ;;		On exit  : 0/0
 28441 ;;		Unchanged: 0/0
 28442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28447 ;;Total ram usage:        0 bytes
 28448 ;; Hardware stack levels used:    1
 28449 ;; Hardware stack levels required when called:   15
 28450 ;; This function calls:
 28451 ;;		Nothing
 28452 ;; This function is called by:
 28453 ;;		_TMR6_Initialize
 28454 ;; This function uses a reentrant model
 28455 ;;
 28456                           
 28457                           	psect	text114
 28458  01AC2E                     __ptext114:
 28459                           	opt callstack 0
 28460  01AC2E                     _TMR6_SetInterruptHandler:
 28461                           	opt callstack 13
 28462                           
 28463                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 28464                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28465                           
 28466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28467                           ;incstack = 0
 28468  01AC2E  50E1               	movf	fsr1l,w,c
 28469  01AC30  0FFD               	addlw	-3
 28470  01AC32  6ED9               	movwf	fsr2l,c
 28471  01AC34  50E2               	movf	fsr1h,w,c
 28472  01AC36  6EDA               	movwf	fsr2h,c
 28473  01AC38  0EFF               	movlw	255
 28474  01AC3A  22DA               	addwfc	fsr2h,f,c
 28475  01AC3C  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 28476  01AC42  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 28477  01AC48  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 28478                           
 28479                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28480  01AC4E  52E5               	movf	postdec1,f,c
 28481  01AC50  52E5               	movf	postdec1,f,c
 28482  01AC52  52E5               	movf	postdec1,f,c
 28483  01AC54  0012               	return		;funcret
 28484  01AC56                     __end_of_TMR6_SetInterruptHandler:
 28485                           	opt callstack 0
 28486                           
 28487 ;; *************** function _TMR5_Initialize *****************
 28488 ;; Defined at:
 28489 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 28490 ;; Parameters:    Size  Location     Type
 28491 ;;		None
 28492 ;; Auto vars:     Size  Location     Type
 28493 ;;		None
 28494 ;; Return value:  Size  Location     Type
 28495 ;;                  1  [STACK] void 
 28496 ;; Registers used:
 28497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 28498 ;; Tracked objects:
 28499 ;;		On entry : 0/39
 28500 ;;		On exit  : 0/0
 28501 ;;		Unchanged: 0/0
 28502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28507 ;;Total ram usage:        0 bytes
 28508 ;; Hardware stack levels used:    1
 28509 ;; Hardware stack levels required when called:   16
 28510 ;; This function calls:
 28511 ;;		_TMR5_SetInterruptHandler
 28512 ;; This function is called by:
 28513 ;;		_SYSTEM_Initialize
 28514 ;; This function uses a reentrant model
 28515 ;;
 28516                           
 28517                           	psect	text115
 28518  01A57A                     __ptext115:
 28519                           	opt callstack 0
 28520  01A57A                     _TMR5_Initialize:
 28521                           	opt callstack 13
 28522                           
 28523                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 28524                           
 28525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28526                           ;incstack = 0
 28527  01A57A  6A9B               	clrf	155,c	;volatile
 28528                           
 28529                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 28530  01A57C  6A9C               	clrf	156,c	;volatile
 28531                           
 28532                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 28533  01A57E  0E01               	movlw	1
 28534  01A580  6E9D               	movwf	157,c	;volatile
 28535                           
 28536                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 28537  01A582  0E63               	movlw	99
 28538  01A584  6E99               	movwf	153,c	;volatile
 28539                           
 28540                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 28541  01A586  0EC0               	movlw	192
 28542  01A588  6E98               	movwf	152,c	;volatile
 28543                           
 28544                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 28545  01A58A  5098               	movf	152,w,c	;volatile
 28546  01A58C  006F FE64  F001    	movff	16281,btemp	;volatile
 28547  01A592  6A02               	clrf	(btemp+1)^0,c
 28548  01A594  0060  F004  F002   	movff	btemp,btemp+1
 28549  01A59A  6A01               	clrf	btemp^0,c
 28550  01A59C  1001               	iorwf	btemp^0,w,c
 28551  01A59E  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 28552  01A5A0  5002               	movf	(btemp+1)^0,w,c
 28553  01A5A2  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 28554                           
 28555                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 28556  01A5A4  0139               	movlb	57	; () banked
 28557  01A5A6  9DA8               	bcf	168,6,b	;volatile
 28558                           
 28559                           ; BSR set to: 57
 28560                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 28561  01A5A8  8D98               	bsf	152,6,b	;volatile
 28562                           
 28563                           ; BSR set to: 57
 28564                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 28565  01A5AA  0E46               	movlw	low _TMR5_DefaultInterruptHandler
 28566  01A5AC  6EE6               	movwf	postinc1,c
 28567  01A5AE  0EA9               	movlw	high _TMR5_DefaultInterruptHandler
 28568  01A5B0  6EE6               	movwf	postinc1,c
 28569  01A5B2  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 28570  01A5B4  6EE6               	movwf	postinc1,c
 28571  01A5B6  EC2B  F0D6         	call	_TMR5_SetInterruptHandler	;wreg free
 28572                           
 28573                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 28574  01A5BA  0E31               	movlw	49
 28575  01A5BC  6E9A               	movwf	154,c	;volatile
 28576                           
 28577                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28578  01A5BE  0012               	return		;funcret
 28579  01A5C0                     __end_of_TMR5_Initialize:
 28580                           	opt callstack 0
 28581                           
 28582 ;; *************** function _TMR5_SetInterruptHandler *****************
 28583 ;; Defined at:
 28584 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 28585 ;; Parameters:    Size  Location     Type
 28586 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28587 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 28588 ;; Auto vars:     Size  Location     Type
 28589 ;;		None
 28590 ;; Return value:  Size  Location     Type
 28591 ;;                  1  [STACK] void 
 28592 ;; Registers used:
 28593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28594 ;; Tracked objects:
 28595 ;;		On entry : 3F/39
 28596 ;;		On exit  : 0/0
 28597 ;;		Unchanged: 0/0
 28598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28603 ;;Total ram usage:        0 bytes
 28604 ;; Hardware stack levels used:    1
 28605 ;; Hardware stack levels required when called:   15
 28606 ;; This function calls:
 28607 ;;		Nothing
 28608 ;; This function is called by:
 28609 ;;		_TMR5_Initialize
 28610 ;; This function uses a reentrant model
 28611 ;;
 28612                           
 28613                           	psect	text116
 28614  01AC56                     __ptext116:
 28615                           	opt callstack 0
 28616  01AC56                     _TMR5_SetInterruptHandler:
 28617                           	opt callstack 13
 28618                           
 28619                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 28620                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28621                           
 28622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28623                           ;incstack = 0
 28624  01AC56  50E1               	movf	fsr1l,w,c
 28625  01AC58  0FFD               	addlw	-3
 28626  01AC5A  6ED9               	movwf	fsr2l,c
 28627  01AC5C  50E2               	movf	fsr1h,w,c
 28628  01AC5E  6EDA               	movwf	fsr2h,c
 28629  01AC60  0EFF               	movlw	255
 28630  01AC62  22DA               	addwfc	fsr2h,f,c
 28631  01AC64  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 28632  01AC6A  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 28633  01AC70  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 28634                           
 28635                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28636  01AC76  52E5               	movf	postdec1,f,c
 28637  01AC78  52E5               	movf	postdec1,f,c
 28638  01AC7A  52E5               	movf	postdec1,f,c
 28639  01AC7C  0012               	return		;funcret
 28640  01AC7E                     __end_of_TMR5_SetInterruptHandler:
 28641                           	opt callstack 0
 28642                           
 28643 ;; *************** function _TMR3_Initialize *****************
 28644 ;; Defined at:
 28645 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 28646 ;; Parameters:    Size  Location     Type
 28647 ;;		None
 28648 ;; Auto vars:     Size  Location     Type
 28649 ;;		None
 28650 ;; Return value:  Size  Location     Type
 28651 ;;                  1  [STACK] void 
 28652 ;; Registers used:
 28653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 28654 ;; Tracked objects:
 28655 ;;		On entry : 0/39
 28656 ;;		On exit  : 0/0
 28657 ;;		Unchanged: 0/0
 28658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28663 ;;Total ram usage:        0 bytes
 28664 ;; Hardware stack levels used:    1
 28665 ;; Hardware stack levels required when called:   16
 28666 ;; This function calls:
 28667 ;;		_TMR3_SetInterruptHandler
 28668 ;; This function is called by:
 28669 ;;		_SYSTEM_Initialize
 28670 ;; This function uses a reentrant model
 28671 ;;
 28672                           
 28673                           	psect	text117
 28674  01A5C0                     __ptext117:
 28675                           	opt callstack 0
 28676  01A5C0                     _TMR3_Initialize:
 28677                           	opt callstack 13
 28678                           
 28679                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 28680                           
 28681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28682                           ;incstack = 0
 28683  01A5C0  6AA7               	clrf	167,c	;volatile
 28684                           
 28685                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 28686  01A5C2  6AA8               	clrf	168,c	;volatile
 28687                           
 28688                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 28689  01A5C4  0E01               	movlw	1
 28690  01A5C6  6EA9               	movwf	169,c	;volatile
 28691                           
 28692                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 28693  01A5C8  0E3C               	movlw	60
 28694  01A5CA  6EA5               	movwf	165,c	;volatile
 28695                           
 28696                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 28697  01A5CC  0EB0               	movlw	176
 28698  01A5CE  6EA4               	movwf	164,c	;volatile
 28699                           
 28700                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 28701  01A5D0  50A4               	movf	164,w,c	;volatile
 28702  01A5D2  006F FE94  F001    	movff	16293,btemp	;volatile
 28703  01A5D8  6A02               	clrf	(btemp+1)^0,c
 28704  01A5DA  0060  F004  F002   	movff	btemp,btemp+1
 28705  01A5E0  6A01               	clrf	btemp^0,c
 28706  01A5E2  1001               	iorwf	btemp^0,w,c
 28707  01A5E4  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 28708  01A5E6  5002               	movf	(btemp+1)^0,w,c
 28709  01A5E8  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 28710                           
 28711                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 28712  01A5EA  0139               	movlb	57	; () banked
 28713  01A5EC  9DA6               	bcf	166,6,b	;volatile
 28714                           
 28715                           ; BSR set to: 57
 28716                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 28717  01A5EE  8D96               	bsf	150,6,b	;volatile
 28718                           
 28719                           ; BSR set to: 57
 28720                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 28721  01A5F0  0E88               	movlw	low _TMR3_DefaultInterruptHandler
 28722  01A5F2  6EE6               	movwf	postinc1,c
 28723  01A5F4  0EB1               	movlw	high _TMR3_DefaultInterruptHandler
 28724  01A5F6  6EE6               	movwf	postinc1,c
 28725  01A5F8  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 28726  01A5FA  6EE6               	movwf	postinc1,c
 28727  01A5FC  EC3F  F0D6         	call	_TMR3_SetInterruptHandler	;wreg free
 28728                           
 28729                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 28730  01A600  0E31               	movlw	49
 28731  01A602  6EA6               	movwf	166,c	;volatile
 28732                           
 28733                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28734  01A604  0012               	return		;funcret
 28735  01A606                     __end_of_TMR3_Initialize:
 28736                           	opt callstack 0
 28737                           
 28738 ;; *************** function _TMR3_SetInterruptHandler *****************
 28739 ;; Defined at:
 28740 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 28741 ;; Parameters:    Size  Location     Type
 28742 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28743 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 28744 ;; Auto vars:     Size  Location     Type
 28745 ;;		None
 28746 ;; Return value:  Size  Location     Type
 28747 ;;                  1  [STACK] void 
 28748 ;; Registers used:
 28749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28750 ;; Tracked objects:
 28751 ;;		On entry : 0/1
 28752 ;;		On exit  : 0/0
 28753 ;;		Unchanged: 0/0
 28754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28759 ;;Total ram usage:        0 bytes
 28760 ;; Hardware stack levels used:    1
 28761 ;; Hardware stack levels required when called:   15
 28762 ;; This function calls:
 28763 ;;		Nothing
 28764 ;; This function is called by:
 28765 ;;		_TMR3_Initialize
 28766 ;;		_init_bsoc
 28767 ;; This function uses a reentrant model
 28768 ;;
 28769                           
 28770                           	psect	text118
 28771  01AC7E                     __ptext118:
 28772                           	opt callstack 0
 28773  01AC7E                     _TMR3_SetInterruptHandler:
 28774                           	opt callstack 14
 28775                           
 28776                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 28777                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28778                           
 28779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28780                           ;incstack = 0
 28781  01AC7E  50E1               	movf	fsr1l,w,c
 28782  01AC80  0FFD               	addlw	-3
 28783  01AC82  6ED9               	movwf	fsr2l,c
 28784  01AC84  50E2               	movf	fsr1h,w,c
 28785  01AC86  6EDA               	movwf	fsr2h,c
 28786  01AC88  0EFF               	movlw	255
 28787  01AC8A  22DA               	addwfc	fsr2h,f,c
 28788  01AC8C  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 28789  01AC92  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 28790  01AC98  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 28791                           
 28792                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28793  01AC9E  52E5               	movf	postdec1,f,c
 28794  01ACA0  52E5               	movf	postdec1,f,c
 28795  01ACA2  52E5               	movf	postdec1,f,c
 28796  01ACA4  0012               	return		;funcret
 28797  01ACA6                     __end_of_TMR3_SetInterruptHandler:
 28798                           	opt callstack 0
 28799                           
 28800 ;; *************** function _TMR2_Initialize *****************
 28801 ;; Defined at:
 28802 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 28803 ;; Parameters:    Size  Location     Type
 28804 ;;		None
 28805 ;; Auto vars:     Size  Location     Type
 28806 ;;		None
 28807 ;; Return value:  Size  Location     Type
 28808 ;;                  1  [STACK] void 
 28809 ;; Registers used:
 28810 ;;		wreg, status,2
 28811 ;; Tracked objects:
 28812 ;;		On entry : 3F/3F
 28813 ;;		On exit  : 3F/39
 28814 ;;		Unchanged: 0/0
 28815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28820 ;;Total ram usage:        0 bytes
 28821 ;; Hardware stack levels used:    1
 28822 ;; Hardware stack levels required when called:   15
 28823 ;; This function calls:
 28824 ;;		Nothing
 28825 ;; This function is called by:
 28826 ;;		_SYSTEM_Initialize
 28827 ;; This function uses a reentrant model
 28828 ;;
 28829                           
 28830                           	psect	text119
 28831  01B01A                     __ptext119:
 28832                           	opt callstack 0
 28833  01B01A                     _TMR2_Initialize:
 28834                           	opt callstack 14
 28835                           
 28836                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 28837                           
 28838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28839                           ;incstack = 0
 28840  01B01A  0E01               	movlw	1
 28841  01B01C  6EAE               	movwf	174,c	;volatile
 28842                           
 28843                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 28844  01B01E  6AAD               	clrf	173,c	;volatile
 28845                           
 28846                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 28847  01B020  6AAF               	clrf	175,c	;volatile
 28848                           
 28849                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 28850  01B022  0E63               	movlw	99
 28851  01B024  6EAB               	movwf	171,c	;volatile
 28852                           
 28853                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 28854  01B026  6AAA               	clrf	170,c	;volatile
 28855                           
 28856                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 28857  01B028  0139               	movlb	57	; () banked
 28858  01B02A  95A4               	bcf	164,2,b	;volatile
 28859                           
 28860                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 28861  01B02C  0EC0               	movlw	192
 28862  01B02E  6EAC               	movwf	172,c	;volatile
 28863                           
 28864                           ; BSR set to: 57
 28865                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28866  01B030  0012               	return		;funcret
 28867  01B032                     __end_of_TMR2_Initialize:
 28868                           	opt callstack 0
 28869                           
 28870 ;; *************** function _SPI1_Initialize *****************
 28871 ;; Defined at:
 28872 ;;		line 64 in file "mcc_generated_files/spi1.c"
 28873 ;; Parameters:    Size  Location     Type
 28874 ;;		None
 28875 ;; Auto vars:     Size  Location     Type
 28876 ;;		None
 28877 ;; Return value:  Size  Location     Type
 28878 ;;                  1  [STACK] void 
 28879 ;; Registers used:
 28880 ;;		wreg, status,2
 28881 ;; Tracked objects:
 28882 ;;		On entry : 3F/39
 28883 ;;		On exit  : 3F/3D
 28884 ;;		Unchanged: 0/0
 28885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28890 ;;Total ram usage:        0 bytes
 28891 ;; Hardware stack levels used:    1
 28892 ;; Hardware stack levels required when called:   15
 28893 ;; This function calls:
 28894 ;;		Nothing
 28895 ;; This function is called by:
 28896 ;;		_SYSTEM_Initialize
 28897 ;; This function uses a reentrant model
 28898 ;;
 28899                           
 28900                           	psect	text120
 28901  01B032                     __ptext120:
 28902                           	opt callstack 0
 28903  01B032                     _SPI1_Initialize:
 28904                           	opt callstack 14
 28905                           
 28906                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 28907                           
 28908                           ; BSR set to: 57
 28909                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28910                           ;incstack = 0
 28911  01B032  0E40               	movlw	64
 28912  01B034  013D               	movlb	61	; () banked
 28913  01B036  6F15               	movwf	21,b	;volatile
 28914                           
 28915                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 28916  01B038  0E03               	movlw	3
 28917  01B03A  6F16               	movwf	22,b	;volatile
 28918                           
 28919                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 28920  01B03C  0E4F               	movlw	79
 28921  01B03E  6F19               	movwf	25,b	;volatile
 28922                           
 28923                           ; BSR set to: 61
 28924                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 28925  01B040  6B1C               	clrf	28,b	;volatile
 28926                           
 28927                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 28928  01B042  0E83               	movlw	131
 28929  01B044  6F14               	movwf	20,b	;volatile
 28930                           
 28931                           ; BSR set to: 61
 28932                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28933  01B046  0012               	return		;funcret
 28934  01B048                     __end_of_SPI1_Initialize:
 28935                           	opt callstack 0
 28936                           
 28937 ;; *************** function _PWM8_Initialize *****************
 28938 ;; Defined at:
 28939 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 28940 ;; Parameters:    Size  Location     Type
 28941 ;;		None
 28942 ;; Auto vars:     Size  Location     Type
 28943 ;;		None
 28944 ;; Return value:  Size  Location     Type
 28945 ;;                  1  [STACK] void 
 28946 ;; Registers used:
 28947 ;;		wreg, status,2
 28948 ;; Tracked objects:
 28949 ;;		On entry : 0/3E
 28950 ;;		On exit  : 3F/3F
 28951 ;;		Unchanged: 0/0
 28952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28957 ;;Total ram usage:        0 bytes
 28958 ;; Hardware stack levels used:    1
 28959 ;; Hardware stack levels required when called:   15
 28960 ;; This function calls:
 28961 ;;		Nothing
 28962 ;; This function is called by:
 28963 ;;		_SYSTEM_Initialize
 28964 ;; This function uses a reentrant model
 28965 ;;
 28966                           
 28967                           	psect	text121
 28968  01B048                     __ptext121:
 28969                           	opt callstack 0
 28970  01B048                     _PWM8_Initialize:
 28971                           	opt callstack 14
 28972                           
 28973                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 28974                           
 28975                           ; BSR set to: 61
 28976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28977                           ;incstack = 0
 28978  01B048  0E80               	movlw	128
 28979  01B04A  6E62               	movwf	98,c	;volatile
 28980                           
 28981                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 28982  01B04C  6A61               	clrf	97,c	;volatile
 28983                           
 28984                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 28985  01B04E  0E40               	movlw	64
 28986  01B050  6E60               	movwf	96,c	;volatile
 28987                           
 28988                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 28989  01B052  013F               	movlb	63	; () banked
 28990  01B054  515F               	movf	95,w,b	;volatile
 28991  01B056  0B3F               	andlw	-193
 28992  01B058  0940               	iorlw	64
 28993  01B05A  6F5F               	movwf	95,b	;volatile
 28994                           
 28995                           ; BSR set to: 63
 28996                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28997  01B05C  0012               	return		;funcret
 28998  01B05E                     __end_of_PWM8_Initialize:
 28999                           	opt callstack 0
 29000                           
 29001 ;; *************** function _PMD_Initialize *****************
 29002 ;; Defined at:
 29003 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29004 ;; Parameters:    Size  Location     Type
 29005 ;;		None
 29006 ;; Auto vars:     Size  Location     Type
 29007 ;;		None
 29008 ;; Return value:  Size  Location     Type
 29009 ;;                  1  [STACK] void 
 29010 ;; Registers used:
 29011 ;;		None
 29012 ;; Tracked objects:
 29013 ;;		On entry : 3F/39
 29014 ;;		On exit  : 3F/39
 29015 ;;		Unchanged: 0/0
 29016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29021 ;;Total ram usage:        0 bytes
 29022 ;; Hardware stack levels used:    1
 29023 ;; Hardware stack levels required when called:   15
 29024 ;; This function calls:
 29025 ;;		Nothing
 29026 ;; This function is called by:
 29027 ;;		_SYSTEM_Initialize
 29028 ;; This function uses a reentrant model
 29029 ;;
 29030                           
 29031                           	psect	text122
 29032  01B074                     __ptext122:
 29033                           	opt callstack 0
 29034  01B074                     _PMD_Initialize:
 29035                           	opt callstack 14
 29036                           
 29037                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29038                           
 29039                           ; BSR set to: 63
 29040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29041                           ;incstack = 0
 29042  01B074  0139               	movlb	57	; () banked
 29043  01B076  6BC0               	clrf	192,b	;volatile
 29044                           
 29045                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29046  01B078  6BC1               	clrf	193,b	;volatile
 29047                           
 29048                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29049  01B07A  6BC2               	clrf	194,b	;volatile
 29050                           
 29051                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29052  01B07C  6BC3               	clrf	195,b	;volatile
 29053                           
 29054                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29055  01B07E  6BC4               	clrf	196,b	;volatile
 29056                           
 29057                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29058  01B080  6BC5               	clrf	197,b	;volatile
 29059                           
 29060                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29061  01B082  6BC6               	clrf	198,b	;volatile
 29062                           
 29063                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29064  01B084  6BC7               	clrf	199,b	;volatile
 29065                           
 29066                           ; BSR set to: 57
 29067                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29068  01B086  0012               	return		;funcret
 29069  01B088                     __end_of_PMD_Initialize:
 29070                           	opt callstack 0
 29071                           
 29072 ;; *************** function _PIN_MANAGER_Initialize *****************
 29073 ;; Defined at:
 29074 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29075 ;; Parameters:    Size  Location     Type
 29076 ;;		None
 29077 ;; Auto vars:     Size  Location     Type
 29078 ;;		None
 29079 ;; Return value:  Size  Location     Type
 29080 ;;                  1  [STACK] void 
 29081 ;; Registers used:
 29082 ;;		wreg, status,2
 29083 ;; Tracked objects:
 29084 ;;		On entry : 3F/39
 29085 ;;		On exit  : 3F/3A
 29086 ;;		Unchanged: 0/0
 29087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29092 ;;Total ram usage:        0 bytes
 29093 ;; Hardware stack levels used:    1
 29094 ;; Hardware stack levels required when called:   15
 29095 ;; This function calls:
 29096 ;;		Nothing
 29097 ;; This function is called by:
 29098 ;;		_SYSTEM_Initialize
 29099 ;; This function uses a reentrant model
 29100 ;;
 29101                           
 29102                           	psect	text123
 29103  019B68                     __ptext123:
 29104                           	opt callstack 0
 29105  019B68                     _PIN_MANAGER_Initialize:
 29106                           	opt callstack 14
 29107                           
 29108                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29109                           
 29110                           ; BSR set to: 57
 29111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29112                           ;incstack = 0
 29113  019B68  0E07               	movlw	7
 29114  019B6A  6EBE               	movwf	190,c	;volatile
 29115                           
 29116                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29117  019B6C  0E80               	movlw	128
 29118  019B6E  6EBD               	movwf	189,c	;volatile
 29119                           
 29120                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29121  019B70  6ABA               	clrf	186,c	;volatile
 29122                           
 29123                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 29124  019B72  6ABF               	clrf	191,c	;volatile
 29125                           
 29126                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29127  019B74  6ABB               	clrf	187,c	;volatile
 29128                           
 29129                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29130  019B76  0E07               	movlw	7
 29131  019B78  6EBC               	movwf	188,c	;volatile
 29132                           
 29133                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29134  019B7A  6AC6               	clrf	198,c	;volatile
 29135                           
 29136                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29137  019B7C  0E0F               	movlw	15
 29138  019B7E  6EC7               	movwf	199,c	;volatile
 29139                           
 29140                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 29141  019B80  68C2               	setf	194,c	;volatile
 29142                           
 29143                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 29144  019B82  0EBF               	movlw	191
 29145  019B84  6EC3               	movwf	195,c	;volatile
 29146                           
 29147                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 29148  019B86  0E90               	movlw	144
 29149  019B88  6EC4               	movwf	196,c	;volatile
 29150                           
 29151                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 29152  019B8A  0E0C               	movlw	12
 29153  019B8C  6EC5               	movwf	197,c	;volatile
 29154                           
 29155                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 29156  019B8E  013A               	movlb	58	; () banked
 29157  019B90  6B70               	clrf	112,b	;volatile
 29158                           
 29159                           ; BSR set to: 58
 29160                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 29161  019B92  6B60               	clrf	96,b	;volatile
 29162                           
 29163                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 29164  019B94  0E3C               	movlw	60
 29165  019B96  6F50               	movwf	80,b	;volatile
 29166                           
 29167                           ; BSR set to: 58
 29168                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 29169  019B98  6B80               	clrf	128,b	;volatile
 29170                           
 29171                           ; BSR set to: 58
 29172                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 29173  019B9A  6B90               	clrf	144,b	;volatile
 29174                           
 29175                           ; BSR set to: 58
 29176                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 29177  019B9C  6940               	setf	64,b	;volatile
 29178                           
 29179                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 29180  019B9E  0E0C               	movlw	12
 29181  019BA0  6F71               	movwf	113,b	;volatile
 29182                           
 29183                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 29184  019BA2  0E0F               	movlw	15
 29185  019BA4  6F91               	movwf	145,b	;volatile
 29186                           
 29187                           ; BSR set to: 58
 29188                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 29189  019BA6  6B81               	clrf	129,b	;volatile
 29190                           
 29191                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 29192  019BA8  0E83               	movlw	131
 29193  019BAA  6F51               	movwf	81,b	;volatile
 29194                           
 29195                           ; BSR set to: 58
 29196                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 29197  019BAC  6B41               	clrf	65,b	;volatile
 29198                           
 29199                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 29200  019BAE  0E97               	movlw	151
 29201  019BB0  6F61               	movwf	97,b	;volatile
 29202                           
 29203                           ; BSR set to: 58
 29204                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 29205  019BB2  6B82               	clrf	130,b	;volatile
 29206                           
 29207                           ; BSR set to: 58
 29208                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 29209  019BB4  6B92               	clrf	146,b	;volatile
 29210                           
 29211                           ; BSR set to: 58
 29212                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 29213  019BB6  6B42               	clrf	66,b	;volatile
 29214                           
 29215                           ; BSR set to: 58
 29216                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 29217  019BB8  6B52               	clrf	82,b	;volatile
 29218                           
 29219                           ; BSR set to: 58
 29220                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 29221  019BBA  6B62               	clrf	98,b	;volatile
 29222                           
 29223                           ; BSR set to: 58
 29224                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 29225  019BBC  6B72               	clrf	114,b	;volatile
 29226                           
 29227                           ; BSR set to: 58
 29228                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 29229  019BBE  6943               	setf	67,b	;volatile
 29230                           
 29231                           ; BSR set to: 58
 29232                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 29233  019BC0  6953               	setf	83,b	;volatile
 29234                           
 29235                           ; BSR set to: 58
 29236                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 29237  019BC2  6963               	setf	99,b	;volatile
 29238                           
 29239                           ; BSR set to: 58
 29240                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 29241  019BC4  6973               	setf	115,b	;volatile
 29242                           
 29243                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 29244  019BC6  0E07               	movlw	7
 29245  019BC8  6F83               	movwf	131,b	;volatile
 29246                           
 29247                           ; BSR set to: 58
 29248                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 29249  019BCA  6993               	setf	147,b	;volatile
 29250                           
 29251                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 29252  019BCC  0E0F               	movlw	15
 29253  019BCE  6FE8               	movwf	232,b	;volatile
 29254                           
 29255                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 29256  019BD0  0E13               	movlw	19
 29257  019BD2  6FDE               	movwf	222,b	;volatile
 29258                           
 29259                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 29260  019BD4  0E16               	movlw	22
 29261  019BD6  6F0E               	movwf	14,b	;volatile
 29262                           
 29263                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 29264  019BD8  0E1E               	movlw	30
 29265  019BDA  6F13               	movwf	19,b	;volatile
 29266                           
 29267                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 29268  019BDC  0E08               	movlw	8
 29269  019BDE  6FC0               	movwf	192,b	;volatile
 29270                           
 29271                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 29272  019BE0  0E10               	movlw	16
 29273  019BE2  6F19               	movwf	25,b	;volatile
 29274                           
 29275                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 29276  019BE4  0E09               	movlw	9
 29277  019BE6  6FC1               	movwf	193,b	;volatile
 29278                           
 29279                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 29280  019BE8  0E1F               	movlw	31
 29281  019BEA  6F15               	movwf	21,b	;volatile
 29282                           
 29283                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 29284  019BEC  0E13               	movlw	19
 29285  019BEE  6F16               	movwf	22,b	;volatile
 29286                           
 29287                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 29288  019BF0  0E17               	movlw	23
 29289  019BF2  6FE5               	movwf	229,b	;volatile
 29290                           
 29291                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 29292  019BF4  0E14               	movlw	20
 29293  019BF6  6FDF               	movwf	223,b	;volatile
 29294                           
 29295                           ; BSR set to: 58
 29296                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 29297  019BF8  0012               	return		;funcret
 29298  019BFA                     __end_of_PIN_MANAGER_Initialize:
 29299                           	opt callstack 0
 29300                           
 29301 ;; *************** function _OSCILLATOR_Initialize *****************
 29302 ;; Defined at:
 29303 ;;		line 72 in file "mcc_generated_files/mcc.c"
 29304 ;; Parameters:    Size  Location     Type
 29305 ;;		None
 29306 ;; Auto vars:     Size  Location     Type
 29307 ;;		None
 29308 ;; Return value:  Size  Location     Type
 29309 ;;                  1  [STACK] void 
 29310 ;; Registers used:
 29311 ;;		wreg, status,2
 29312 ;; Tracked objects:
 29313 ;;		On entry : 3F/3A
 29314 ;;		On exit  : 3F/39
 29315 ;;		Unchanged: 0/0
 29316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29321 ;;Total ram usage:        0 bytes
 29322 ;; Hardware stack levels used:    1
 29323 ;; Hardware stack levels required when called:   15
 29324 ;; This function calls:
 29325 ;;		Nothing
 29326 ;; This function is called by:
 29327 ;;		_SYSTEM_Initialize
 29328 ;; This function uses a reentrant model
 29329 ;;
 29330                           
 29331                           	psect	text124
 29332  01B05E                     __ptext124:
 29333                           	opt callstack 0
 29334  01B05E                     _OSCILLATOR_Initialize:
 29335                           	opt callstack 14
 29336                           
 29337                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 29338                           
 29339                           ; BSR set to: 58
 29340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29341                           ;incstack = 0
 29342  01B05E  0E20               	movlw	32
 29343  01B060  0139               	movlb	57	; () banked
 29344  01B062  6FD9               	movwf	217,b	;volatile
 29345                           
 29346                           ; BSR set to: 57
 29347                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 29348  01B064  6BDB               	clrf	219,b	;volatile
 29349                           
 29350                           ; BSR set to: 57
 29351                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 29352  01B066  6BDD               	clrf	221,b	;volatile
 29353                           
 29354                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 29355  01B068  0E02               	movlw	2
 29356  01B06A  6FDF               	movwf	223,b	;volatile
 29357                           
 29358                           ; BSR set to: 57
 29359                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 29360  01B06C  6BDE               	clrf	222,b	;volatile
 29361  01B06E                     l169:
 29362                           
 29363                           ; BSR set to: 57
 29364                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 29365  01B06E  B1DC               	btfsc	220,0,b	;volatile
 29366  01B070  0012               	return	
 29367  01B072  D7FD               	goto	l169
 29368  01B074                     __end_of_OSCILLATOR_Initialize:
 29369                           	opt callstack 0
 29370                           
 29371 ;; *************** function _INTERRUPT_Initialize *****************
 29372 ;; Defined at:
 29373 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 29374 ;; Parameters:    Size  Location     Type
 29375 ;;		None
 29376 ;; Auto vars:     Size  Location     Type
 29377 ;;  state           1  [STACK] _Bool 
 29378 ;; Return value:  Size  Location     Type
 29379 ;;                  1  [STACK] void 
 29380 ;; Registers used:
 29381 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 29382 ;; Tracked objects:
 29383 ;;		On entry : 0/0
 29384 ;;		On exit  : 3F/39
 29385 ;;		Unchanged: 0/0
 29386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29391 ;;Total ram usage:        0 bytes
 29392 ;; Hardware stack levels used:    1
 29393 ;; Hardware stack levels required when called:   15
 29394 ;; This function calls:
 29395 ;;		Nothing
 29396 ;; This function is called by:
 29397 ;;		_SYSTEM_Initialize
 29398 ;; This function uses a reentrant model
 29399 ;;
 29400                           
 29401                           	psect	text125
 29402  019FD6                     __ptext125:
 29403                           	opt callstack 0
 29404  019FD6                     _INTERRUPT_Initialize:
 29405                           	opt callstack 0
 29406                           
 29407                           ; BSR set to: 57
 29408                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29409  019FD6  52E6               	movf	postinc1,f,c
 29410                           
 29411                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 29412                           
 29413                           ;incstack = 0
 29414  019FD8  8AD2               	bsf	210,5,c	;volatile
 29415                           
 29416                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 29417  019FDA  AED2               	btfss	16338,7,c	;volatile
 29418  019FDC  D003               	goto	u8850
 29419  019FDE  6A0C               	clrf	(btemp+11)^0,c
 29420  019FE0  2A0C               	incf	(btemp+11)^0,f,c
 29421  019FE2  D001               	goto	u8868
 29422  019FE4                     u8850:
 29423  019FE4  6A0C               	clrf	(btemp+11)^0,c
 29424  019FE6                     u8868:
 29425                           
 29426                           ;stkvar	_state @ sp[(-1)+0]
 29427  019FE6  0EFF               	movlw	-1
 29428  019FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 29429                           
 29430                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 29431  019FEE  9ED2               	bcf	16338,7,c	;volatile
 29432                           
 29433                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 29434  019FF0  0E55               	movlw	85
 29435  019FF2  6ED4               	movwf	212,c	;volatile
 29436                           
 29437                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 29438  019FF4  0EAA               	movlw	170
 29439  019FF6  6ED4               	movwf	212,c	;volatile
 29440                           
 29441                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 29442  019FF8  90D4               	bcf	212,0,c	;volatile
 29443                           
 29444                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 29445  019FFA  0138               	movlb	56	; () banked
 29446  019FFC  6B9F               	clrf	159,b	;volatile
 29447                           
 29448                           ; BSR set to: 56
 29449                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 29450  019FFE  6B9E               	clrf	158,b	;volatile
 29451                           
 29452                           ; BSR set to: 56
 29453                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 29454  01A000  0E08               	movlw	8
 29455  01A002  6F9D               	movwf	157,b	;volatile
 29456                           
 29457                           ; BSR set to: 56
 29458                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 29459  01A004  0E55               	movlw	85
 29460  01A006  6ED4               	movwf	212,c	;volatile
 29461                           
 29462                           ; BSR set to: 56
 29463                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 29464  01A008  0EAA               	movlw	170
 29465  01A00A  6ED4               	movwf	212,c	;volatile
 29466                           
 29467                           ; BSR set to: 56
 29468                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 29469  01A00C  80D4               	bsf	212,0,c	;volatile
 29470                           
 29471                           ; BSR set to: 56
 29472                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 29473                           ;stkvar	_state @ sp[(-1)+0]
 29474  01A00E  0EFF               	movlw	-1
 29475  01A010  B0E3               	btfsc	plusw1,0,c
 29476  01A012  D002               	bra	u8875
 29477  01A014  9ED2               	bcf	16338,7,c	;volatile
 29478  01A016  D001               	bra	u8876
 29479  01A018                     u8875:
 29480  01A018  8ED2               	bsf	16338,7,c	;volatile
 29481  01A01A                     u8876:
 29482                           
 29483                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 29484  01A01A  0139               	movlb	57	; () banked
 29485  01A01C  8782               	bsf	130,3,b	;volatile
 29486                           
 29487                           ; BSR set to: 57
 29488                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 29489  01A01E  8382               	bsf	130,1,b	;volatile
 29490                           
 29491                           ; BSR set to: 57
 29492                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 29493  01A020  8182               	bsf	130,0,b	;volatile
 29494                           
 29495                           ; BSR set to: 57
 29496                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 29497  01A022  8582               	bsf	130,2,b	;volatile
 29498                           
 29499                           ; BSR set to: 57
 29500                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 29501  01A024  8786               	bsf	134,3,b	;volatile
 29502                           
 29503                           ; BSR set to: 57
 29504                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 29505  01A026  8586               	bsf	134,2,b	;volatile
 29506                           
 29507                           ; BSR set to: 57
 29508                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 29509  01A028  8783               	bsf	131,3,b	;volatile
 29510                           
 29511                           ; BSR set to: 57
 29512                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 29513  01A02A  8181               	bsf	129,0,b	;volatile
 29514                           
 29515                           ; BSR set to: 57
 29516                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 29517  01A02C  9185               	bcf	133,0,b	;volatile
 29518                           
 29519                           ; BSR set to: 57
 29520                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 29521  01A02E  8189               	bsf	137,0,b	;volatile
 29522                           
 29523                           ; BSR set to: 57
 29524                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 29525  01A030  9D88               	bcf	136,6,b	;volatile
 29526                           
 29527                           ; BSR set to: 57
 29528                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 29529  01A032  9D86               	bcf	134,6,b	;volatile
 29530                           
 29531                           ; BSR set to: 57
 29532                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 29533  01A034  8581               	bsf	129,2,b	;volatile
 29534                           
 29535                           ; BSR set to: 57
 29536                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 29537  01A036  8781               	bsf	129,3,b	;volatile
 29538                           
 29539                           ; BSR set to: 57
 29540                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 29541  01A038  52E5               	movf	postdec1,f,c
 29542  01A03A  0012               	return		;funcret
 29543  01A03C                     __end_of_INTERRUPT_Initialize:
 29544                           	opt callstack 0
 29545                           
 29546 ;; *************** function _FVR_Initialize *****************
 29547 ;; Defined at:
 29548 ;;		line 58 in file "mcc_generated_files/fvr.c"
 29549 ;; Parameters:    Size  Location     Type
 29550 ;;		None
 29551 ;; Auto vars:     Size  Location     Type
 29552 ;;		None
 29553 ;; Return value:  Size  Location     Type
 29554 ;;                  1  [STACK] void 
 29555 ;; Registers used:
 29556 ;;		wreg, status,2
 29557 ;; Tracked objects:
 29558 ;;		On entry : 3F/39
 29559 ;;		On exit  : 3F/3E
 29560 ;;		Unchanged: 0/0
 29561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29566 ;;Total ram usage:        0 bytes
 29567 ;; Hardware stack levels used:    1
 29568 ;; Hardware stack levels required when called:   15
 29569 ;; This function calls:
 29570 ;;		Nothing
 29571 ;; This function is called by:
 29572 ;;		_SYSTEM_Initialize
 29573 ;; This function uses a reentrant model
 29574 ;;
 29575                           
 29576                           	psect	text126
 29577  01B15E                     __ptext126:
 29578                           	opt callstack 0
 29579  01B15E                     _FVR_Initialize:
 29580                           	opt callstack 14
 29581                           
 29582                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 29583                           
 29584                           ; BSR set to: 57
 29585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29586                           ;incstack = 0
 29587  01B15E  0EAF               	movlw	175
 29588  01B160  013E               	movlb	62	; () banked
 29589  01B162  6FC1               	movwf	193,b	;volatile
 29590                           
 29591                           ; BSR set to: 62
 29592                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29593  01B164  0012               	return		;funcret
 29594  01B166                     __end_of_FVR_Initialize:
 29595                           	opt callstack 0
 29596                           
 29597 ;; *************** function _EXT_INT_Initialize *****************
 29598 ;; Defined at:
 29599 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 29600 ;; Parameters:    Size  Location     Type
 29601 ;;		None
 29602 ;; Auto vars:     Size  Location     Type
 29603 ;;		None
 29604 ;; Return value:  Size  Location     Type
 29605 ;;                  1  [STACK] void 
 29606 ;; Registers used:
 29607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29608 ;; Tracked objects:
 29609 ;;		On entry : 3F/39
 29610 ;;		On exit  : 3F/39
 29611 ;;		Unchanged: 0/0
 29612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29617 ;;Total ram usage:        0 bytes
 29618 ;; Hardware stack levels used:    1
 29619 ;; Hardware stack levels required when called:   16
 29620 ;; This function calls:
 29621 ;;		_INT0_SetInterruptHandler
 29622 ;;		_INT1_SetInterruptHandler
 29623 ;; This function is called by:
 29624 ;;		_SYSTEM_Initialize
 29625 ;; This function uses a reentrant model
 29626 ;;
 29627                           
 29628                           	psect	text127
 29629  01A912                     __ptext127:
 29630                           	opt callstack 0
 29631  01A912                     _EXT_INT_Initialize:
 29632                           	opt callstack 13
 29633                           
 29634                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 29635                           
 29636                           ; BSR set to: 62
 29637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29638                           ;incstack = 0
 29639  01A912  0139               	movlb	57	; () banked
 29640  01A914  91A1               	bcf	161,0,b	;volatile
 29641                           
 29642                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 29643  01A916  90D2               	bcf	210,0,c	;volatile
 29644                           
 29645                           ; BSR set to: 57
 29646                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 29647  01A918  0E8A               	movlw	low _INT0_DefaultInterruptHandler
 29648  01A91A  6EE6               	movwf	postinc1,c
 29649  01A91C  0EB1               	movlw	high _INT0_DefaultInterruptHandler
 29650  01A91E  6EE6               	movwf	postinc1,c
 29651  01A920  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 29652  01A922  6EE6               	movwf	postinc1,c
 29653  01A924  EC67  F0D6         	call	_INT0_SetInterruptHandler	;wreg free
 29654                           
 29655                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 29656  01A928  0139               	movlb	57	; () banked
 29657  01A92A  8191               	bsf	145,0,b	;volatile
 29658                           
 29659                           ; BSR set to: 57
 29660                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 29661  01A92C  91A5               	bcf	165,0,b	;volatile
 29662                           
 29663                           ; BSR set to: 57
 29664                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 29665  01A92E  92D2               	bcf	210,1,c	;volatile
 29666                           
 29667                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 29668  01A930  0E86               	movlw	low _INT1_DefaultInterruptHandler
 29669  01A932  6EE6               	movwf	postinc1,c
 29670  01A934  0EB1               	movlw	high _INT1_DefaultInterruptHandler
 29671  01A936  6EE6               	movwf	postinc1,c
 29672  01A938  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 29673  01A93A  6EE6               	movwf	postinc1,c
 29674  01A93C  EC53  F0D6         	call	_INT1_SetInterruptHandler	;wreg free
 29675                           
 29676                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 29677  01A940  0139               	movlb	57	; () banked
 29678  01A942  8195               	bsf	149,0,b	;volatile
 29679                           
 29680                           ; BSR set to: 57
 29681                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 29682  01A944  0012               	return		;funcret
 29683  01A946                     __end_of_EXT_INT_Initialize:
 29684                           	opt callstack 0
 29685                           
 29686 ;; *************** function _INT1_SetInterruptHandler *****************
 29687 ;; Defined at:
 29688 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 29689 ;; Parameters:    Size  Location     Type
 29690 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29691 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 29692 ;; Auto vars:     Size  Location     Type
 29693 ;;		None
 29694 ;; Return value:  Size  Location     Type
 29695 ;;                  1  [STACK] void 
 29696 ;; Registers used:
 29697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29698 ;; Tracked objects:
 29699 ;;		On entry : 3F/39
 29700 ;;		On exit  : 0/0
 29701 ;;		Unchanged: 0/0
 29702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29707 ;;Total ram usage:        0 bytes
 29708 ;; Hardware stack levels used:    1
 29709 ;; Hardware stack levels required when called:   15
 29710 ;; This function calls:
 29711 ;;		Nothing
 29712 ;; This function is called by:
 29713 ;;		_EXT_INT_Initialize
 29714 ;;		_start_switch_handler
 29715 ;; This function uses a reentrant model
 29716 ;;
 29717                           
 29718                           	psect	text128
 29719  01ACA6                     __ptext128:
 29720                           	opt callstack 0
 29721  01ACA6                     _INT1_SetInterruptHandler:
 29722                           	opt callstack 14
 29723                           
 29724                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 29725                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29726                           
 29727                           ; BSR set to: 57
 29728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29729                           ;incstack = 0
 29730  01ACA6  50E1               	movf	fsr1l,w,c
 29731  01ACA8  0FFD               	addlw	-3
 29732  01ACAA  6ED9               	movwf	fsr2l,c
 29733  01ACAC  50E2               	movf	fsr1h,w,c
 29734  01ACAE  6EDA               	movwf	fsr2h,c
 29735  01ACB0  0EFF               	movlw	255
 29736  01ACB2  22DA               	addwfc	fsr2h,f,c
 29737  01ACB4  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 29738  01ACBA  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 29739  01ACC0  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 29740                           
 29741                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29742  01ACC6  52E5               	movf	postdec1,f,c
 29743  01ACC8  52E5               	movf	postdec1,f,c
 29744  01ACCA  52E5               	movf	postdec1,f,c
 29745  01ACCC  0012               	return		;funcret
 29746  01ACCE                     __end_of_INT1_SetInterruptHandler:
 29747                           	opt callstack 0
 29748                           
 29749 ;; *************** function _INT0_SetInterruptHandler *****************
 29750 ;; Defined at:
 29751 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 29752 ;; Parameters:    Size  Location     Type
 29753 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29754 ;;		 -> INT0_DefaultInterruptHandler(1), 
 29755 ;; Auto vars:     Size  Location     Type
 29756 ;;		None
 29757 ;; Return value:  Size  Location     Type
 29758 ;;                  1  [STACK] void 
 29759 ;; Registers used:
 29760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29761 ;; Tracked objects:
 29762 ;;		On entry : 3F/39
 29763 ;;		On exit  : 0/0
 29764 ;;		Unchanged: 0/0
 29765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29770 ;;Total ram usage:        0 bytes
 29771 ;; Hardware stack levels used:    1
 29772 ;; Hardware stack levels required when called:   15
 29773 ;; This function calls:
 29774 ;;		Nothing
 29775 ;; This function is called by:
 29776 ;;		_EXT_INT_Initialize
 29777 ;; This function uses a reentrant model
 29778 ;;
 29779                           
 29780                           	psect	text129
 29781  01ACCE                     __ptext129:
 29782                           	opt callstack 0
 29783  01ACCE                     _INT0_SetInterruptHandler:
 29784                           	opt callstack 13
 29785                           
 29786                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 29787                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29788                           
 29789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29790                           ;incstack = 0
 29791  01ACCE  50E1               	movf	fsr1l,w,c
 29792  01ACD0  0FFD               	addlw	-3
 29793  01ACD2  6ED9               	movwf	fsr2l,c
 29794  01ACD4  50E2               	movf	fsr1h,w,c
 29795  01ACD6  6EDA               	movwf	fsr2h,c
 29796  01ACD8  0EFF               	movlw	255
 29797  01ACDA  22DA               	addwfc	fsr2h,f,c
 29798  01ACDC  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 29799  01ACE2  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 29800  01ACE8  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 29801                           
 29802                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29803  01ACEE  52E5               	movf	postdec1,f,c
 29804  01ACF0  52E5               	movf	postdec1,f,c
 29805  01ACF2  52E5               	movf	postdec1,f,c
 29806  01ACF4  0012               	return		;funcret
 29807  01ACF6                     __end_of_INT0_SetInterruptHandler:
 29808                           	opt callstack 0
 29809                           
 29810 ;; *************** function _DMA2_Initialize *****************
 29811 ;; Defined at:
 29812 ;;		line 61 in file "mcc_generated_files/dma2.c"
 29813 ;; Parameters:    Size  Location     Type
 29814 ;;		None
 29815 ;; Auto vars:     Size  Location     Type
 29816 ;;		None
 29817 ;; Return value:  Size  Location     Type
 29818 ;;                  1  [STACK] void 
 29819 ;; Registers used:
 29820 ;;		wreg, status,2
 29821 ;; Tracked objects:
 29822 ;;		On entry : 3F/3D
 29823 ;;		On exit  : 3F/3B
 29824 ;;		Unchanged: 0/0
 29825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29830 ;;Total ram usage:        0 bytes
 29831 ;; Hardware stack levels used:    1
 29832 ;; Hardware stack levels required when called:   15
 29833 ;; This function calls:
 29834 ;;		Nothing
 29835 ;; This function is called by:
 29836 ;;		_SYSTEM_Initialize
 29837 ;; This function uses a reentrant model
 29838 ;;
 29839                           
 29840                           	psect	text130
 29841  01A21C                     __ptext130:
 29842                           	opt callstack 0
 29843  01A21C                     _DMA2_Initialize:
 29844                           	opt callstack 14
 29845                           
 29846                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 29847                           
 29848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29849                           ;incstack = 0
 29850  01A21C  0E00               	movlw	0
 29851  01A21E  013B               	movlb	59	; () banked
 29852  01A220  6FD9               	movwf	217,b	;volatile
 29853  01A222  0E10               	movlw	16
 29854  01A224  6FDA               	movwf	218,b	;volatile
 29855  01A226  0E00               	movlw	0
 29856  01A228  6FDB               	movwf	219,b	;volatile
 29857                           
 29858                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 29859  01A22A  0E3F               	movlw	63
 29860  01A22C  6FD1               	movwf	209,b	;volatile
 29861  01A22E  0EBB               	movlw	187
 29862  01A230  6FD0               	movwf	208,b	;volatile
 29863                           
 29864                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 29865  01A232  0E03               	movlw	3
 29866  01A234  6FDD               	movwf	221,b	;volatile
 29867                           
 29868                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 29869  01A236  0E00               	movlw	0
 29870  01A238  6FD8               	movwf	216,b	;volatile
 29871  01A23A  0E01               	movlw	1
 29872  01A23C  6FD7               	movwf	215,b	;volatile
 29873                           
 29874                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 29875  01A23E  0E00               	movlw	0
 29876  01A240  6FCF               	movwf	207,b	;volatile
 29877  01A242  0E01               	movlw	1
 29878  01A244  6FCE               	movwf	206,b	;volatile
 29879                           
 29880                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 29881  01A246  0E1C               	movlw	28
 29882  01A248  6FDF               	movwf	223,b	;volatile
 29883                           
 29884                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 29885  01A24A  0E3D               	movlw	61
 29886  01A24C  6FDE               	movwf	222,b	;volatile
 29887                           
 29888                           ; BSR set to: 59
 29889                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 29890  01A24E  0139               	movlb	57	; () banked
 29891  01A250  97A5               	bcf	165,3,b	;volatile
 29892                           
 29893                           ; BSR set to: 57
 29894                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 29895  01A252  95A5               	bcf	165,2,b	;volatile
 29896                           
 29897                           ; BSR set to: 57
 29898                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 29899  01A254  9BA5               	bcf	165,5,b	;volatile
 29900                           
 29901                           ; BSR set to: 57
 29902                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 29903  01A256  99A5               	bcf	165,4,b	;volatile
 29904                           
 29905                           ; BSR set to: 57
 29906                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 29907  01A258  9795               	bcf	149,3,b	;volatile
 29908                           
 29909                           ; BSR set to: 57
 29910                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 29911  01A25A  9595               	bcf	149,2,b	;volatile
 29912                           
 29913                           ; BSR set to: 57
 29914                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 29915  01A25C  9B95               	bcf	149,5,b	;volatile
 29916                           
 29917                           ; BSR set to: 57
 29918                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 29919  01A25E  9995               	bcf	149,4,b	;volatile
 29920  01A260  9ED2               	bcf	16338,7,c	;# 
 29921  01A262  0139               	banksel	14831	;# 
 29922  01A264  0E55               	movlw	85	;# 
 29923  01A266  6FEF               	movwf	14831,b	;# 
 29924  01A268  0EAA               	movlw	170	;# 
 29925  01A26A  6FEF               	movwf	14831,b	;# 
 29926  01A26C  81EF               	bsf	14831,0,b	;# 
 29927  01A26E  8ED2               	bsf	16338,7,c	;# 
 29928                           
 29929                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 29930  01A270  013B               	movlb	59	; () banked
 29931  01A272  6BDC               	clrf	220,b	;volatile
 29932                           
 29933                           ; BSR set to: 59
 29934                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29935  01A274  0012               	return		;funcret
 29936  01A276                     __end_of_DMA2_Initialize:
 29937                           	opt callstack 0
 29938                           
 29939 ;; *************** function _DMA1_Initialize *****************
 29940 ;; Defined at:
 29941 ;;		line 86 in file "mcc_generated_files/dma1.c"
 29942 ;; Parameters:    Size  Location     Type
 29943 ;;		None
 29944 ;; Auto vars:     Size  Location     Type
 29945 ;;		None
 29946 ;; Return value:  Size  Location     Type
 29947 ;;                  1  [STACK] void 
 29948 ;; Registers used:
 29949 ;;		wreg, status,2
 29950 ;; Tracked objects:
 29951 ;;		On entry : 3F/3B
 29952 ;;		On exit  : 3F/3B
 29953 ;;		Unchanged: 0/0
 29954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29959 ;;Total ram usage:        0 bytes
 29960 ;; Hardware stack levels used:    1
 29961 ;; Hardware stack levels required when called:   15
 29962 ;; This function calls:
 29963 ;;		Nothing
 29964 ;; This function is called by:
 29965 ;;		_SYSTEM_Initialize
 29966 ;; This function uses a reentrant model
 29967 ;;
 29968                           
 29969                           	psect	text131
 29970  019E98                     __ptext131:
 29971                           	opt callstack 0
 29972  019E98                     _DMA1_Initialize:
 29973                           	opt callstack 14
 29974                           
 29975                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 29976                           
 29977                           ; BSR set to: 59
 29978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29979                           ;incstack = 0
 29980  019E98  0E00               	movlw	0
 29981  019E9A  013B               	movlb	59	; () banked
 29982  019E9C  6FF9               	movwf	249,b	;volatile
 29983  019E9E  0E10               	movlw	16
 29984  019EA0  6FFA               	movwf	250,b	;volatile
 29985  019EA2  0E00               	movlw	0
 29986  019EA4  6FFB               	movwf	251,b	;volatile
 29987                           
 29988                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 29989  019EA6  0E3D               	movlw	61
 29990  019EA8  6FF1               	movwf	241,b	;volatile
 29991  019EAA  0E11               	movlw	17
 29992  019EAC  6FF0               	movwf	240,b	;volatile
 29993                           
 29994                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 29995  019EAE  0E03               	movlw	3
 29996  019EB0  6FFD               	movwf	253,b	;volatile
 29997                           
 29998                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 29999  019EB2  0E00               	movlw	0
 30000  019EB4  6FF8               	movwf	248,b	;volatile
 30001  019EB6  0E01               	movlw	1
 30002  019EB8  6FF7               	movwf	247,b	;volatile
 30003                           
 30004                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30005  019EBA  0E00               	movlw	0
 30006  019EBC  6FEF               	movwf	239,b	;volatile
 30007  019EBE  0E01               	movlw	1
 30008  019EC0  6FEE               	movwf	238,b	;volatile
 30009                           
 30010                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30011  019EC2  0E15               	movlw	21
 30012  019EC4  6FFF               	movwf	255,b	;volatile
 30013                           
 30014                           ; BSR set to: 59
 30015                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30016  019EC6  6BFE               	clrf	254,b	;volatile
 30017                           
 30018                           ; BSR set to: 59
 30019                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30020  019EC8  0139               	movlb	57	; () banked
 30021  019ECA  93A2               	bcf	162,1,b	;volatile
 30022                           
 30023                           ; BSR set to: 57
 30024                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30025  019ECC  91A2               	bcf	162,0,b	;volatile
 30026                           
 30027                           ; BSR set to: 57
 30028                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30029  019ECE  97A2               	bcf	162,3,b	;volatile
 30030                           
 30031                           ; BSR set to: 57
 30032                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30033  019ED0  95A2               	bcf	162,2,b	;volatile
 30034                           
 30035                           ; BSR set to: 57
 30036                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30037  019ED2  8392               	bsf	146,1,b	;volatile
 30038                           
 30039                           ; BSR set to: 57
 30040                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30041  019ED4  8192               	bsf	146,0,b	;volatile
 30042                           
 30043                           ; BSR set to: 57
 30044                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30045  019ED6  8792               	bsf	146,3,b	;volatile
 30046                           
 30047                           ; BSR set to: 57
 30048                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30049  019ED8  8592               	bsf	146,2,b	;volatile
 30050                           
 30051                           ; BSR set to: 57
 30052                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30053  019EDA  6BF1               	clrf	241,b	;volatile
 30054                           
 30055                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30056  019EDC  0E01               	movlw	1
 30057  019EDE  6FF2               	movwf	242,b	;volatile
 30058                           
 30059                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30060  019EE0  0E04               	movlw	4
 30061  019EE2  6FF3               	movwf	243,b	;volatile
 30062                           
 30063                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30064  019EE4  0E02               	movlw	2
 30065  019EE6  6FF4               	movwf	244,b	;volatile
 30066                           
 30067                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30068  019EE8  0E03               	movlw	3
 30069  019EEA  6FF7               	movwf	247,b	;volatile
 30070  019EEC  9ED2               	bcf	16338,7,c	;# 
 30071  019EEE  0139               	banksel	14831	;# 
 30072  019EF0  0E55               	movlw	85	;# 
 30073  019EF2  6FEF               	movwf	14831,b	;# 
 30074  019EF4  0EAA               	movlw	170	;# 
 30075  019EF6  6FEF               	movwf	14831,b	;# 
 30076  019EF8  81EF               	bsf	14831,0,b	;# 
 30077  019EFA  8ED2               	bsf	16338,7,c	;# 
 30078                           
 30079                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30080  019EFC  013B               	movlb	59	; () banked
 30081  019EFE  6BFC               	clrf	252,b	;volatile
 30082                           
 30083                           ; BSR set to: 59
 30084                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30085  019F00  0012               	return		;funcret
 30086  019F02                     __end_of_DMA1_Initialize:
 30087                           	opt callstack 0
 30088                           
 30089 ;; *************** function _CLKREF_Initialize *****************
 30090 ;; Defined at:
 30091 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30092 ;; Parameters:    Size  Location     Type
 30093 ;;		None
 30094 ;; Auto vars:     Size  Location     Type
 30095 ;;		None
 30096 ;; Return value:  Size  Location     Type
 30097 ;;                  1  [STACK] void 
 30098 ;; Registers used:
 30099 ;;		wreg, status,2
 30100 ;; Tracked objects:
 30101 ;;		On entry : 3F/3B
 30102 ;;		On exit  : 3F/3C
 30103 ;;		Unchanged: 0/0
 30104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30109 ;;Total ram usage:        0 bytes
 30110 ;; Hardware stack levels used:    1
 30111 ;; Hardware stack levels required when called:   15
 30112 ;; This function calls:
 30113 ;;		Nothing
 30114 ;; This function is called by:
 30115 ;;		_SYSTEM_Initialize
 30116 ;; This function uses a reentrant model
 30117 ;;
 30118                           
 30119                           	psect	text132
 30120  01B106                     __ptext132:
 30121                           	opt callstack 0
 30122  01B106                     _CLKREF_Initialize:
 30123                           	opt callstack 14
 30124                           
 30125                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30126                           
 30127                           ; BSR set to: 59
 30128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30129                           ;incstack = 0
 30130  01B106  013C               	movlb	60	; () banked
 30131  01B108  6BE6               	clrf	230,b	;volatile
 30132                           
 30133                           ; BSR set to: 60
 30134                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30135  01B10A  0E94               	movlw	148
 30136  01B10C  6FE5               	movwf	229,b	;volatile
 30137                           
 30138                           ; BSR set to: 60
 30139                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30140  01B10E  0012               	return		;funcret
 30141  01B110                     __end_of_CLKREF_Initialize:
 30142                           	opt callstack 0
 30143                           
 30144 ;; *************** function _ADCC_Initialize *****************
 30145 ;; Defined at:
 30146 ;;		line 65 in file "mcc_generated_files/adcc.c"
 30147 ;; Parameters:    Size  Location     Type
 30148 ;;		None
 30149 ;; Auto vars:     Size  Location     Type
 30150 ;;		None
 30151 ;; Return value:  Size  Location     Type
 30152 ;;                  1  [STACK] void 
 30153 ;; Registers used:
 30154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30155 ;; Tracked objects:
 30156 ;;		On entry : 3F/3E
 30157 ;;		On exit  : 0/0
 30158 ;;		Unchanged: 0/0
 30159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30164 ;;Total ram usage:        0 bytes
 30165 ;; Hardware stack levels used:    1
 30166 ;; Hardware stack levels required when called:   16
 30167 ;; This function calls:
 30168 ;;		_ADCC_SetADIInterruptHandler
 30169 ;;		_ADCC_SetADTIInterruptHandler
 30170 ;; This function is called by:
 30171 ;;		_SYSTEM_Initialize
 30172 ;; This function uses a reentrant model
 30173 ;;
 30174                           
 30175                           	psect	text133
 30176  019F02                     __ptext133:
 30177                           	opt callstack 0
 30178  019F02                     _ADCC_Initialize:
 30179                           	opt callstack 13
 30180                           
 30181                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 30182                           
 30183                           ; BSR set to: 60
 30184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30185                           ;incstack = 0
 30186  019F02  013E               	movlb	62	; () banked
 30187  019F04  6BDE               	clrf	222,b	;volatile
 30188                           
 30189                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 30190  019F06  6BDF               	clrf	223,b	;volatile
 30191                           
 30192                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 30193  019F08  6BE0               	clrf	224,b	;volatile
 30194                           
 30195                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 30196  019F0A  6BE1               	clrf	225,b	;volatile
 30197                           
 30198                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 30199  019F0C  6BE4               	clrf	228,b	;volatile
 30200                           
 30201                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 30202  019F0E  6BE5               	clrf	229,b	;volatile
 30203                           
 30204                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 30205  019F10  6BEA               	clrf	234,b	;volatile
 30206                           
 30207                           ; BSR set to: 62
 30208                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 30209  019F12  0E40               	movlw	64
 30210  019F14  6FEC               	movwf	236,b	;volatile
 30211                           
 30212                           ; BSR set to: 62
 30213                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 30214  019F16  6BF1               	clrf	241,b	;volatile
 30215                           
 30216                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 30217  019F18  0E20               	movlw	32
 30218  019F1A  6FF3               	movwf	243,b	;volatile
 30219                           
 30220                           ; BSR set to: 62
 30221                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 30222  019F1C  6BF4               	clrf	244,b	;volatile
 30223                           
 30224                           ; BSR set to: 62
 30225                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 30226  019F1E  6BF5               	clrf	245,b	;volatile
 30227                           
 30228                           ; BSR set to: 62
 30229                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 30230  019F20  6BF6               	clrf	246,b	;volatile
 30231                           
 30232                           ; BSR set to: 62
 30233                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 30234  019F22  6BF7               	clrf	247,b	;volatile
 30235                           
 30236                           ; BSR set to: 62
 30237                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 30238  019F24  6BF9               	clrf	249,b	;volatile
 30239                           
 30240                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 30241  019F26  0E5B               	movlw	91
 30242  019F28  6FFA               	movwf	250,b	;volatile
 30243                           
 30244                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 30245  019F2A  0E27               	movlw	39
 30246  019F2C  6FFB               	movwf	251,b	;volatile
 30247                           
 30248                           ; BSR set to: 62
 30249                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 30250  019F2E  6BFC               	clrf	252,b	;volatile
 30251                           
 30252                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 30253  019F30  0E02               	movlw	2
 30254  019F32  6FFD               	movwf	253,b	;volatile
 30255                           
 30256                           ; BSR set to: 62
 30257                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 30258  019F34  6BFE               	clrf	254,b	;volatile
 30259                           
 30260                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 30261  019F36  0E07               	movlw	7
 30262  019F38  6FFF               	movwf	255,b	;volatile
 30263                           
 30264                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 30265  019F3A  0E84               	movlw	132
 30266  019F3C  6FF8               	movwf	248,b	;volatile
 30267                           
 30268                           ; BSR set to: 62
 30269                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 30270  019F3E  0139               	movlb	57	; () banked
 30271  019F40  95A1               	bcf	161,2,b	;volatile
 30272                           
 30273                           ; BSR set to: 57
 30274                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 30275  019F42  8591               	bsf	145,2,b	;volatile
 30276                           
 30277                           ; BSR set to: 57
 30278                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 30279  019F44  0E8C               	movlw	low _ADCC_DefaultInterruptHandler
 30280  019F46  6EE6               	movwf	postinc1,c
 30281  019F48  0EB1               	movlw	high _ADCC_DefaultInterruptHandler
 30282  019F4A  6EE6               	movwf	postinc1,c
 30283  019F4C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 30284  019F4E  6EE6               	movwf	postinc1,c
 30285  019F50  EC8F  F0D6         	call	_ADCC_SetADIInterruptHandler	;wreg free
 30286                           
 30287                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 30288  019F54  0139               	movlb	57	; () banked
 30289  019F56  97A1               	bcf	161,3,b	;volatile
 30290                           
 30291                           ; BSR set to: 57
 30292                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 30293  019F58  8791               	bsf	145,3,b	;volatile
 30294                           
 30295                           ; BSR set to: 57
 30296                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 30297  019F5A  0E8C               	movlw	low _ADCC_DefaultInterruptHandler
 30298  019F5C  6EE6               	movwf	postinc1,c
 30299  019F5E  0EB1               	movlw	high _ADCC_DefaultInterruptHandler
 30300  019F60  6EE6               	movwf	postinc1,c
 30301  019F62  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 30302  019F64  6EE6               	movwf	postinc1,c
 30303  019F66  EC7B  F0D6         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 30304                           
 30305                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30306  019F6A  0012               	return		;funcret
 30307  019F6C                     __end_of_ADCC_Initialize:
 30308                           	opt callstack 0
 30309                           
 30310 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 30311 ;; Defined at:
 30312 ;;		line 336 in file "mcc_generated_files/adcc.c"
 30313 ;; Parameters:    Size  Location     Type
 30314 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30315 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 30316 ;; Auto vars:     Size  Location     Type
 30317 ;;		None
 30318 ;; Return value:  Size  Location     Type
 30319 ;;                  1  [STACK] void 
 30320 ;; Registers used:
 30321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30322 ;; Tracked objects:
 30323 ;;		On entry : 0/0
 30324 ;;		On exit  : 0/0
 30325 ;;		Unchanged: 0/0
 30326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30331 ;;Total ram usage:        0 bytes
 30332 ;; Hardware stack levels used:    1
 30333 ;; Hardware stack levels required when called:   15
 30334 ;; This function calls:
 30335 ;;		Nothing
 30336 ;; This function is called by:
 30337 ;;		_ADCC_Initialize
 30338 ;;		_start_adc_scan
 30339 ;; This function uses a reentrant model
 30340 ;;
 30341                           
 30342                           	psect	text134
 30343  01ACF6                     __ptext134:
 30344                           	opt callstack 0
 30345  01ACF6                     _ADCC_SetADTIInterruptHandler:
 30346                           	opt callstack 14
 30347                           
 30348                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 30349                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30350                           
 30351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30352                           ;incstack = 0
 30353  01ACF6  50E1               	movf	fsr1l,w,c
 30354  01ACF8  0FFD               	addlw	-3
 30355  01ACFA  6ED9               	movwf	fsr2l,c
 30356  01ACFC  50E2               	movf	fsr1h,w,c
 30357  01ACFE  6EDA               	movwf	fsr2h,c
 30358  01AD00  0EFF               	movlw	255
 30359  01AD02  22DA               	addwfc	fsr2h,f,c
 30360  01AD04  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 30361  01AD0A  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 30362  01AD10  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 30363                           
 30364                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 30365  01AD16  52E5               	movf	postdec1,f,c
 30366  01AD18  52E5               	movf	postdec1,f,c
 30367  01AD1A  52E5               	movf	postdec1,f,c
 30368  01AD1C  0012               	return		;funcret
 30369  01AD1E                     __end_of_ADCC_SetADTIInterruptHandler:
 30370                           	opt callstack 0
 30371                           
 30372 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 30373 ;; Defined at:
 30374 ;;		line 323 in file "mcc_generated_files/adcc.c"
 30375 ;; Parameters:    Size  Location     Type
 30376 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30377 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 30378 ;; Auto vars:     Size  Location     Type
 30379 ;;		None
 30380 ;; Return value:  Size  Location     Type
 30381 ;;                  1  [STACK] void 
 30382 ;; Registers used:
 30383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30384 ;; Tracked objects:
 30385 ;;		On entry : 6/0
 30386 ;;		On exit  : 0/0
 30387 ;;		Unchanged: 0/0
 30388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30393 ;;Total ram usage:        0 bytes
 30394 ;; Hardware stack levels used:    1
 30395 ;; Hardware stack levels required when called:   15
 30396 ;; This function calls:
 30397 ;;		Nothing
 30398 ;; This function is called by:
 30399 ;;		_ADCC_Initialize
 30400 ;;		_start_adc_scan
 30401 ;; This function uses a reentrant model
 30402 ;;
 30403                           
 30404                           	psect	text135
 30405  01AD1E                     __ptext135:
 30406                           	opt callstack 0
 30407  01AD1E                     _ADCC_SetADIInterruptHandler:
 30408                           	opt callstack 14
 30409                           
 30410                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 30411                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30412                           
 30413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30414                           ;incstack = 0
 30415  01AD1E  50E1               	movf	fsr1l,w,c
 30416  01AD20  0FFD               	addlw	-3
 30417  01AD22  6ED9               	movwf	fsr2l,c
 30418  01AD24  50E2               	movf	fsr1h,w,c
 30419  01AD26  6EDA               	movwf	fsr2h,c
 30420  01AD28  0EFF               	movlw	255
 30421  01AD2A  22DA               	addwfc	fsr2h,f,c
 30422  01AD2C  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 30423  01AD32  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 30424  01AD38  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 30425                           
 30426                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30427  01AD3E  52E5               	movf	postdec1,f,c
 30428  01AD40  52E5               	movf	postdec1,f,c
 30429  01AD42  52E5               	movf	postdec1,f,c
 30430  01AD44  0012               	return		;funcret
 30431  01AD46                     __end_of_ADCC_SetADIInterruptHandler:
 30432                           	opt callstack 0
 30433                           
 30434 ;; *************** function _INT1_ISR *****************
 30435 ;; Defined at:
 30436 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 30437 ;; Parameters:    Size  Location     Type
 30438 ;;		None
 30439 ;; Auto vars:     Size  Location     Type
 30440 ;;		None
 30441 ;; Return value:  Size  Location     Type
 30442 ;;                  1    wreg      void 
 30443 ;; Registers used:
 30444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 30445 ;; Tracked objects:
 30446 ;;		On entry : 0/0
 30447 ;;		On exit  : 0/0
 30448 ;;		Unchanged: 0/0
 30449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30452 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30454 ;;Total ram usage:        4 bytes
 30455 ;; Hardware stack levels used:    1
 30456 ;; Hardware stack levels required when called:    5
 30457 ;; This function calls:
 30458 ;;		_INT1_CallBack
 30459 ;; This function is called by:
 30460 ;;		Interrupt level 1
 30461 ;; This function uses a non-reentrant model
 30462 ;;
 30463                           
 30464                           	psect	text136
 30465  01A78C                     __ptext136:
 30466                           	opt callstack 0
 30467  01A78C                     _INT1_ISR:
 30468                           	opt callstack 12
 30469                           
 30470                           ;incstack = 0
 30471  01A78C  006F FF60  F03E    	movff	status,??_INT1_ISR
 30472  01A792  0060  F004  F03F   	movff	btemp,??_INT1_ISR+1
 30473  01A798  0060  F02C  F040   	movff	btemp+10,??_INT1_ISR+2
 30474  01A79E  0060  F030  F041   	movff	btemp+11,??_INT1_ISR+3
 30475  01A7A4  EE16  F061         	lfsr	1,___intlo_sp
 30476                           
 30477                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 30478  01A7A8  0139               	movlb	57	; () banked
 30479  01A7AA  91A5               	bcf	165,0,b	;volatile
 30480                           
 30481                           ; BSR set to: 57
 30482                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 30483  01A7AC  EC04  F0D7         	call	_INT1_CallBack	;wreg free
 30484  01A7B0  0060  F104  F00C   	movff	??_INT1_ISR+3,btemp+11
 30485  01A7B6  0060  F100  F00B   	movff	??_INT1_ISR+2,btemp+10
 30486  01A7BC  0060  F0FC  F001   	movff	??_INT1_ISR+1,btemp
 30487  01A7C2  0060  F0FB  FFD8   	movff	??_INT1_ISR,status
 30488  01A7C8  0011               	retfie		f
 30489  01A7CA                     __end_of_INT1_ISR:
 30490                           	opt callstack 0
 30491                           
 30492 ;; *************** function _INT1_CallBack *****************
 30493 ;; Defined at:
 30494 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 30495 ;; Parameters:    Size  Location     Type
 30496 ;;		None
 30497 ;; Auto vars:     Size  Location     Type
 30498 ;;		None
 30499 ;; Return value:  Size  Location     Type
 30500 ;;                  1  [STACK] void 
 30501 ;; Registers used:
 30502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 30503 ;; Tracked objects:
 30504 ;;		On entry : 3F/39
 30505 ;;		On exit  : 0/0
 30506 ;;		Unchanged: 0/0
 30507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30512 ;;Total ram usage:        0 bytes
 30513 ;; Hardware stack levels used:    1
 30514 ;; Hardware stack levels required when called:    4
 30515 ;; This function calls:
 30516 ;;		Absolute function
 30517 ;;		_INT1_DefaultInterruptHandler
 30518 ;;		_switch_handler
 30519 ;; This function is called by:
 30520 ;;		_INT1_ISR
 30521 ;; This function uses a reentrant model
 30522 ;;
 30523                           
 30524                           	psect	text137
 30525  01AE08                     __ptext137:
 30526                           	opt callstack 0
 30527  01AE08                     _INT1_CallBack:
 30528                           	opt callstack 12
 30529                           
 30530                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 30531                           
 30532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30533                           ;incstack = 0
 30534  01AE08  0100               	movlb	0	; () banked
 30535  01AE0A  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 30536  01AE0C  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 30537  01AE0E  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 30538  01AE10  B4D8               	btfsc	status,2,c
 30539  01AE12  0012               	return	
 30540                           
 30541                           ; BSR set to: 0
 30542                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 30543  01AE14  D801               	call	u946_28
 30544  01AE16  0012               	return	
 30545  01AE18                     u946_28:
 30546  01AE18  0005               	push	
 30547  01AE1A  6EFA               	movwf	pclath,c
 30548  01AE1C  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 30549  01AE1E  6EFD               	movwf	tosl,c
 30550  01AE20  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 30551  01AE22  6EFE               	movwf	tosh,c
 30552  01AE24  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 30553  01AE26  6EFF               	movwf	tosu,c
 30554  01AE28  50FA               	movf	pclath,w,c
 30555  01AE2A  0012               	return		;indir
 30556  01AE2C                     __end_of_INT1_CallBack:
 30557                           	opt callstack 0
 30558                           
 30559 ;; *************** function _INT1_DefaultInterruptHandler *****************
 30560 ;; Defined at:
 30561 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 30562 ;; Parameters:    Size  Location     Type
 30563 ;;		None
 30564 ;; Auto vars:     Size  Location     Type
 30565 ;;		None
 30566 ;; Return value:  Size  Location     Type
 30567 ;;                  1  [STACK] void 
 30568 ;; Registers used:
 30569 ;;		None
 30570 ;; Tracked objects:
 30571 ;;		On entry : 3F/0
 30572 ;;		On exit  : 0/0
 30573 ;;		Unchanged: 0/0
 30574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30579 ;;Total ram usage:        0 bytes
 30580 ;; Hardware stack levels used:    1
 30581 ;; Hardware stack levels required when called:    3
 30582 ;; This function calls:
 30583 ;;		Nothing
 30584 ;; This function is called by:
 30585 ;;		_EXT_INT_Initialize
 30586 ;;		_INT1_CallBack
 30587 ;; This function uses a reentrant model
 30588 ;;
 30589                           
 30590                           	psect	text138
 30591  01B186                     __ptext138:
 30592                           	opt callstack 0
 30593  01B186                     _INT1_DefaultInterruptHandler:
 30594                           	opt callstack 12
 30595                           
 30596                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30597                           
 30598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30599                           ;incstack = 0
 30600  01B186  0012               	return		;funcret
 30601  01B188                     __end_of_INT1_DefaultInterruptHandler:
 30602                           	opt callstack 0
 30603                           
 30604 ;; *************** function _switch_handler *****************
 30605 ;; Defined at:
 30606 ;;		line 58 in file "dio.c"
 30607 ;; Parameters:    Size  Location     Type
 30608 ;;		None
 30609 ;; Auto vars:     Size  Location     Type
 30610 ;;  i               1  [STACK] unsigned char 
 30611 ;;  sw_value        1  [STACK] unsigned char 
 30612 ;; Return value:  Size  Location     Type
 30613 ;;                  1  [STACK] void 
 30614 ;; Registers used:
 30615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 30616 ;; Tracked objects:
 30617 ;;		On entry : 3F/0
 30618 ;;		On exit  : 0/0
 30619 ;;		Unchanged: 0/0
 30620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30625 ;;Total ram usage:        0 bytes
 30626 ;; Hardware stack levels used:    1
 30627 ;; Hardware stack levels required when called:    3
 30628 ;; This function calls:
 30629 ;;		Nothing
 30630 ;; This function is called by:
 30631 ;;		_start_switch_handler
 30632 ;;		_INT1_CallBack
 30633 ;; This function uses a reentrant model
 30634 ;;
 30635                           
 30636                           	psect	text139
 30637  0186AC                     __ptext139:
 30638                           	opt callstack 0
 30639  0186AC                     _switch_handler:
 30640                           	opt callstack 0
 30641                           
 30642                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30643  0186AC  52E6               	movf	postinc1,f,c
 30644  0186AE  52E6               	movf	postinc1,f,c
 30645                           
 30646                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 30647                           ;stkvar	_i @ sp[(-2)+0]
 30648                           
 30649                           ;incstack = 0
 30650  0186B0  0EFE               	movlw	-2
 30651  0186B2  6AE3               	clrf	plusw1,c
 30652  0186B4  9EBD               	bcf	189,7,c	;volatile
 30653                           
 30654                           ;dio.c: 72:  __nop();
 30655  0186B6  F000               	nop	
 30656                           
 30657                           ;dio.c: 73:  __nop();
 30658  0186B8  F000               	nop	
 30659                           
 30660                           ;dio.c: 74:  __nop();
 30661  0186BA  F000               	nop	
 30662  0186BC  D019               	goto	l10076
 30663  0186BE                     l10064:
 30664                           
 30665                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 30666  0186BE  A6CF               	btfss	207,3,c	;volatile
 30667  0186C0  D011               	goto	u922_20
 30668  0186C2  D00D               	goto	u922_21
 30669  0186C4                     u919_28:
 30670                           
 30671                           ;stkvar	_sw_value @ sp[(-2)+1]
 30672  0186C4  0EFF               	movlw	-1
 30673  0186C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 30674                           
 30675                           ;dio.c: 80:    break;
 30676  0186CC  D027               	goto	l10078
 30677  0186CE                     l10066:
 30678                           
 30679                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 30680  0186CE  A4CF               	btfss	207,2,c	;volatile
 30681  0186D0  D009               	goto	u922_20
 30682  0186D2  D005               	goto	u922_21
 30683  0186D4                     l10068:
 30684                           
 30685                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 30686  0186D4  A2CF               	btfss	207,1,c	;volatile
 30687  0186D6  D006               	goto	u922_20
 30688  0186D8  D002               	goto	u922_21
 30689  0186DA                     l10070:
 30690                           
 30691                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 30692  0186DA  A0CF               	btfss	207,0,c	;volatile
 30693  0186DC  D003               	goto	u922_20
 30694  0186DE                     u922_21:
 30695  0186DE  6A0C               	clrf	(btemp+11)^0,c
 30696  0186E0  2A0C               	incf	(btemp+11)^0,f,c
 30697  0186E2  D7F0               	goto	u919_28
 30698  0186E4                     u922_20:
 30699  0186E4  6A0C               	clrf	(btemp+11)^0,c
 30700  0186E6  D7EE               	goto	u919_28
 30701  0186E8                     l10072:
 30702                           
 30703                           ;dio.c: 91:    sw_value = 1;
 30704                           ;stkvar	_sw_value @ sp[(-2)+1]
 30705  0186E8  0EFF               	movlw	-1
 30706  0186EA  6AE3               	clrf	plusw1,c
 30707  0186EC  2AE3               	incf	plusw1,f,c
 30708                           
 30709                           ;dio.c: 92:    break;
 30710  0186EE  D016               	goto	l10078
 30711  0186F0                     l10076:
 30712                           
 30713                           ;stkvar	_i @ sp[(-2)+0]
 30714  0186F0  0EFE               	movlw	-2
 30715  0186F2  50E3               	movf	plusw1,w,c
 30716  0186F4  6E0B               	movwf	(btemp+10)^0,c
 30717  0186F6  6A0C               	clrf	(btemp+11)^0,c
 30718                           
 30719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30720                           ; Switch size 1, requested type "simple"
 30721                           ; Number of cases is 1, Range of values is 0 to 0
 30722                           ; switch strategies available:
 30723                           ; Name         Instructions Cycles
 30724                           ; simple_byte            4     3 (average)
 30725                           ;	Chosen strategy is simple_byte
 30726  0186F8  500C               	movf	(btemp+11)^0,w,c
 30727  0186FA  0A00               	xorlw	0	; case 0
 30728  0186FC  A4D8               	btfss	status,2,c
 30729  0186FE  D7F4               	goto	l10072
 30730                           
 30731                           ; Switch size 1, requested type "simple"
 30732                           ; Number of cases is 4, Range of values is 0 to 3
 30733                           ; switch strategies available:
 30734                           ; Name         Instructions Cycles
 30735                           ; simple_byte           13     7 (average)
 30736                           ;	Chosen strategy is simple_byte
 30737  018700  500B               	movf	(btemp+10)^0,w,c
 30738  018702  0A00               	xorlw	0	; case 0
 30739  018704  B4D8               	btfsc	status,2,c
 30740  018706  D7E9               	goto	l10070
 30741  018708  0A01               	xorlw	1	; case 1
 30742  01870A  B4D8               	btfsc	status,2,c
 30743  01870C  D7E3               	goto	l10068
 30744  01870E  0A03               	xorlw	3	; case 2
 30745  018710  B4D8               	btfsc	status,2,c
 30746  018712  D7DD               	goto	l10066
 30747  018714  0A01               	xorlw	1	; case 3
 30748  018716  B4D8               	btfsc	status,2,c
 30749  018718  D7D2               	goto	l10064
 30750  01871A  D7E6               	goto	l10072
 30751  01871C                     l10078:
 30752                           
 30753                           ;dio.c: 96:   if (sw_value) {
 30754                           ;stkvar	_sw_value @ sp[(-2)+1]
 30755  01871C  0EFF               	movlw	-1
 30756  01871E  50E3               	movf	plusw1,w,c
 30757  018720  B4D8               	btfsc	status,2,c
 30758  018722  D018               	goto	l10084
 30759                           
 30760                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 30761                           ;stkvar	_i @ sp[(-2)+0]
 30762  018724  0EFE               	movlw	-2
 30763  018726  50E3               	movf	plusw1,w,c
 30764  018728  0D05               	mullw	5
 30765  01872A  0EBC               	movlw	low _S
 30766  01872C  24F3               	addwf	243,w,c
 30767  01872E  6ED9               	movwf	fsr2l,c
 30768  018730  0E02               	movlw	high _S
 30769  018732  20F4               	addwfc	prodh,w,c
 30770  018734  6EDA               	movwf	fsr2h,c
 30771  018736  04DE               	decf	postinc2,w,c
 30772  018738  A4D8               	btfss	status,2,c
 30773  01873A  D049               	goto	l10092
 30774                           
 30775                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 30776                           ;stkvar	_i @ sp[(-2)+0]
 30777  01873C  0EFE               	movlw	-2
 30778  01873E  50E3               	movf	plusw1,w,c
 30779  018740  0D05               	mullw	5
 30780  018742  0EBC               	movlw	low _S
 30781  018744  24F3               	addwf	243,w,c
 30782  018746  6ED9               	movwf	fsr2l,c
 30783  018748  0E02               	movlw	high _S
 30784  01874A  20F4               	addwfc	prodh,w,c
 30785  01874C  6EDA               	movwf	fsr2h,c
 30786  01874E  0E00               	movlw	0
 30787  018750  6EDF               	movwf	indf2,c
 30788  018752  D03D               	goto	l10092
 30789  018754                     l10084:
 30790                           
 30791                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 30792                           ;stkvar	_i @ sp[(-2)+0]
 30793  018754  0EFE               	movlw	-2
 30794  018756  50E3               	movf	plusw1,w,c
 30795  018758  0D05               	mullw	5
 30796  01875A  0EBC               	movlw	low _S
 30797  01875C  24F3               	addwf	243,w,c
 30798  01875E  6ED9               	movwf	fsr2l,c
 30799  018760  0E02               	movlw	high _S
 30800  018762  20F4               	addwfc	prodh,w,c
 30801  018764  6EDA               	movwf	fsr2h,c
 30802  018766  50DF               	movf	indf2,w,c
 30803  018768  A4D8               	btfss	status,2,c
 30804  01876A  D031               	goto	l10092
 30805                           
 30806                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 30807                           ;stkvar	_i @ sp[(-2)+0]
 30808  01876C  0EFE               	movlw	-2
 30809  01876E  50E3               	movf	plusw1,w,c
 30810  018770  0D05               	mullw	5
 30811  018772  0EBC               	movlw	low _S
 30812  018774  24F3               	addwf	243,w,c
 30813  018776  6ED9               	movwf	fsr2l,c
 30814  018778  0E02               	movlw	high _S
 30815  01877A  20F4               	addwfc	prodh,w,c
 30816  01877C  6EDA               	movwf	fsr2h,c
 30817  01877E  0E01               	movlw	1
 30818  018780  6EDF               	movwf	indf2,c
 30819                           
 30820                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 30821  018782  EE20  F2B8         	lfsr	2,_V+184	;volatile
 30822                           
 30823                           ;stkvar	_i @ sp[(-2)+0]
 30824  018786  0EFE               	movlw	-2
 30825  018788  50E3               	movf	plusw1,w,c
 30826  01878A  0D05               	mullw	5
 30827  01878C  0EBD               	movlw	low (_S+1)
 30828  01878E  24F3               	addwf	243,w,c
 30829  018790  6EE9               	movwf	fsr0l,c
 30830  018792  0E02               	movlw	high (_S+1)
 30831  018794  20F4               	addwfc	prodh,w,c
 30832  018796  6EEA               	movwf	fsr0h,c
 30833  018798  006F FF7B FFEE     	movff	postinc2,postinc0
 30834  01879E  006F FF7B FFEE     	movff	postinc2,postinc0
 30835  0187A4  006F FF7B FFEE     	movff	postinc2,postinc0
 30836  0187AA  006F FF7B FFEE     	movff	postinc2,postinc0
 30837                           
 30838                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 30839                           ;stkvar	_i @ sp[(-2)+0]
 30840  0187B0  0EFE               	movlw	-2
 30841  0187B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 30842  0187B8  0E01               	movlw	1
 30843  0187BA  6E0B               	movwf	(btemp+10)^0,c
 30844  0187BC  2A0C               	incf	(btemp+11)^0,f,c
 30845  0187BE  D002               	goto	u926_24
 30846  0187C0                     u926_25:
 30847  0187C0  90D8               	bcf	status,0,c
 30848  0187C2  360B               	rlcf	(btemp+10)^0,f,c
 30849  0187C4                     u926_24:
 30850  0187C4  2E0C               	decfsz	(btemp+11)^0,f,c
 30851  0187C6  D7FC               	goto	u926_25
 30852  0187C8  500B               	movf	(btemp+10)^0,w,c
 30853  0187CA  0102               	movlb	2	; () banked
 30854  0187CC  13E4               	iorwf	(_S+40)& (0+255),f,b	;volatile
 30855  0187CE                     l10092:
 30856                           
 30857                           ;dio.c: 107:  } while (++i < 4);
 30858                           ;stkvar	_i @ sp[(-2)+0]
 30859  0187CE  0EFE               	movlw	-2
 30860  0187D0  2AE3               	incf	plusw1,f,c
 30861  0187D2  0EFE               	movlw	-2
 30862  0187D4  006F FF8C  F001    	movff	plusw1,btemp
 30863  0187DA  0E03               	movlw	3
 30864  0187DC  6401               	cpfsgt	btemp^0,c
 30865  0187DE  D788               	goto	l10076
 30866                           
 30867                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 30868  0187E0  8EBD               	bsf	189,7,c	;volatile
 30869                           
 30870                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30871  0187E2  52E5               	movf	postdec1,f,c
 30872  0187E4  52E5               	movf	postdec1,f,c
 30873  0187E6  0012               	return		;funcret
 30874  0187E8                     __end_of_switch_handler:
 30875                           	opt callstack 0
 30876                           
 30877 ;; *************** function _TMR5_ISR *****************
 30878 ;; Defined at:
 30879 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 30880 ;; Parameters:    Size  Location     Type
 30881 ;;		None
 30882 ;; Auto vars:     Size  Location     Type
 30883 ;;		None
 30884 ;; Return value:  Size  Location     Type
 30885 ;;                  1    wreg      void 
 30886 ;; Registers used:
 30887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 30888 ;; Tracked objects:
 30889 ;;		On entry : 0/0
 30890 ;;		On exit  : 0/0
 30891 ;;		Unchanged: 0/0
 30892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30895 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30896 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30897 ;;Total ram usage:        4 bytes
 30898 ;; Hardware stack levels used:    1
 30899 ;; Hardware stack levels required when called:    5
 30900 ;; This function calls:
 30901 ;;		_TMR5_CallBack
 30902 ;;		_TMR5_WriteTimer
 30903 ;; This function is called by:
 30904 ;;		Interrupt level 1
 30905 ;; This function uses a non-reentrant model
 30906 ;;
 30907                           
 30908                           	psect	text140
 30909  01A278                     __ptext140:
 30910                           	opt callstack 0
 30911  01A278                     _TMR5_ISR:
 30912                           	opt callstack 12
 30913                           
 30914                           ;incstack = 0
 30915  01A278  006F FF60  F044    	movff	status,??_TMR5_ISR+2
 30916  01A27E  0060  F030  F045   	movff	btemp+11,??_TMR5_ISR+3
 30917  01A284  EE16  F061         	lfsr	1,___intlo_sp
 30918                           
 30919                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 30920  01A288  0139               	movlb	57	; () banked
 30921  01A28A  9DA8               	bcf	168,6,b	;volatile
 30922                           
 30923                           ; BSR set to: 57
 30924                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 30925  01A28C  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 30926  01A292  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 30927  01A298  EC86  F0D3         	call	_TMR5_WriteTimer	;wreg free
 30928                           
 30929                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 30930  01A29C  0102               	movlb	2	; () banked
 30931  01A29E  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 30932  01A2A0  6E42               	movwf	??_TMR5_ISR^0,c
 30933  01A2A2  6A43               	clrf	(??_TMR5_ISR+1)^0,c
 30934  01A2A4  0E05               	movlw	5
 30935  01A2A6  2642               	addwf	??_TMR5_ISR^0,f,c
 30936  01A2A8  0E00               	movlw	0
 30937  01A2AA  2243               	addwfc	(??_TMR5_ISR+1)^0,f,c
 30938  01A2AC  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 30939  01A2AE  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 30940  01A2B0  5042               	movf	??_TMR5_ISR^0,w,c
 30941  01A2B2  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 30942  01A2B4  5043               	movf	(??_TMR5_ISR+1)^0,w,c
 30943  01A2B6  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 30944  01A2B8  A0D8               	btfss	status,0,c
 30945  01A2BA  D004               	goto	i1l1017
 30946                           
 30947                           ; BSR set to: 2
 30948                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 30949  01A2BC  EC16  F0D7         	call	_TMR5_CallBack	;wreg free
 30950                           
 30951                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 30952  01A2C0  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 30953  01A2C2  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 30954  01A2C4                     i1l1017:
 30955  01A2C4  0060  F114  F00C   	movff	??_TMR5_ISR+3,btemp+11
 30956  01A2CA  0060  F113  FFD8   	movff	??_TMR5_ISR+2,status
 30957  01A2D0  0011               	retfie		f
 30958  01A2D2                     __end_of_TMR5_ISR:
 30959                           	opt callstack 0
 30960                           
 30961 ;; *************** function _TMR5_WriteTimer *****************
 30962 ;; Defined at:
 30963 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 30964 ;; Parameters:    Size  Location     Type
 30965 ;;  timerVal        2  [STACK] unsigned short 
 30966 ;; Auto vars:     Size  Location     Type
 30967 ;;		None
 30968 ;; Return value:  Size  Location     Type
 30969 ;;                  1  [STACK] void 
 30970 ;; Registers used:
 30971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30972 ;; Tracked objects:
 30973 ;;		On entry : 3F/39
 30974 ;;		On exit  : 0/0
 30975 ;;		Unchanged: 0/0
 30976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30981 ;;Total ram usage:        0 bytes
 30982 ;; Hardware stack levels used:    1
 30983 ;; Hardware stack levels required when called:    3
 30984 ;; This function calls:
 30985 ;;		Nothing
 30986 ;; This function is called by:
 30987 ;;		_TMR5_ISR
 30988 ;; This function uses a reentrant model
 30989 ;;
 30990                           
 30991                           	psect	text141
 30992  01A70C                     __ptext141:
 30993                           	opt callstack 0
 30994  01A70C                     _TMR5_WriteTimer:
 30995                           	opt callstack 13
 30996                           
 30997                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 30998                           
 30999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31000                           ;incstack = 0
 31001  01A70C  A49A               	btfss	154,2,c	;volatile
 31002  01A70E  D00F               	goto	l10274
 31003                           
 31004                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 31005  01A710  909A               	bcf	154,0,c	;volatile
 31006                           
 31007                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 31008                           ;stkvar	_timerVal @ sp[(0)+-2]
 31009  01A712  0EFF               	movlw	255
 31010  01A714  24E1               	addwf	fsr1l,w,c
 31011  01A716  6ED9               	movwf	fsr2l,c
 31012  01A718  0EFF               	movlw	255
 31013  01A71A  20E2               	addwfc	fsr1h,w,c
 31014  01A71C  6EDA               	movwf	fsr2h,c
 31015  01A71E  50DF               	movf	indf2,w,c
 31016  01A720  6E99               	movwf	153,c	;volatile
 31017                           
 31018                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 31019                           ;stkvar	_timerVal @ sp[(0)+-2]
 31020  01A722  0EFE               	movlw	-2
 31021  01A724  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31022                           
 31023                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 31024  01A72A  809A               	bsf	154,0,c	;volatile
 31025                           
 31026                           ;mcc_generated_files/tmr5.c: 142:  } else {
 31027  01A72C  D00C               	goto	l1000
 31028  01A72E                     l10274:
 31029                           
 31030                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 31031                           ;stkvar	_timerVal @ sp[(0)+-2]
 31032  01A72E  0EFF               	movlw	255
 31033  01A730  24E1               	addwf	fsr1l,w,c
 31034  01A732  6ED9               	movwf	fsr2l,c
 31035  01A734  0EFF               	movlw	255
 31036  01A736  20E2               	addwfc	fsr1h,w,c
 31037  01A738  6EDA               	movwf	fsr2h,c
 31038  01A73A  50DF               	movf	indf2,w,c
 31039  01A73C  6E99               	movwf	153,c	;volatile
 31040                           
 31041                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 31042                           ;stkvar	_timerVal @ sp[(0)+-2]
 31043  01A73E  0EFE               	movlw	-2
 31044  01A740  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31045  01A746                     l1000:
 31046                           
 31047                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31048  01A746  52E5               	movf	postdec1,f,c
 31049  01A748  52E5               	movf	postdec1,f,c
 31050  01A74A  0012               	return		;funcret
 31051  01A74C                     __end_of_TMR5_WriteTimer:
 31052                           	opt callstack 0
 31053                           
 31054 ;; *************** function _TMR5_CallBack *****************
 31055 ;; Defined at:
 31056 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 31057 ;; Parameters:    Size  Location     Type
 31058 ;;		None
 31059 ;; Auto vars:     Size  Location     Type
 31060 ;;		None
 31061 ;; Return value:  Size  Location     Type
 31062 ;;                  1  [STACK] void 
 31063 ;; Registers used:
 31064 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 31065 ;; Tracked objects:
 31066 ;;		On entry : 3F/2
 31067 ;;		On exit  : 0/0
 31068 ;;		Unchanged: 0/0
 31069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31074 ;;Total ram usage:        0 bytes
 31075 ;; Hardware stack levels used:    1
 31076 ;; Hardware stack levels required when called:    4
 31077 ;; This function calls:
 31078 ;;		Absolute function
 31079 ;;		_TMR5_DefaultInterruptHandler
 31080 ;; This function is called by:
 31081 ;;		_TMR5_ISR
 31082 ;; This function uses a reentrant model
 31083 ;;
 31084                           
 31085                           	psect	text142
 31086  01AE2C                     __ptext142:
 31087                           	opt callstack 0
 31088  01AE2C                     _TMR5_CallBack:
 31089                           	opt callstack 12
 31090                           
 31091                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 31092                           
 31093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31094                           ;incstack = 0
 31095  01AE2C  0100               	movlb	0	; () banked
 31096  01AE2E  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31097  01AE30  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31098  01AE32  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31099  01AE34  B4D8               	btfsc	status,2,c
 31100  01AE36  0012               	return	
 31101                           
 31102                           ; BSR set to: 0
 31103                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 31104  01AE38  D801               	call	u955_28
 31105  01AE3A  0012               	return	
 31106  01AE3C                     u955_28:
 31107  01AE3C  0005               	push	
 31108  01AE3E  6EFA               	movwf	pclath,c
 31109  01AE40  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31110  01AE42  6EFD               	movwf	tosl,c
 31111  01AE44  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31112  01AE46  6EFE               	movwf	tosh,c
 31113  01AE48  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31114  01AE4A  6EFF               	movwf	tosu,c
 31115  01AE4C  50FA               	movf	pclath,w,c
 31116  01AE4E  0012               	return		;indir
 31117  01AE50                     __end_of_TMR5_CallBack:
 31118                           	opt callstack 0
 31119                           
 31120 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31121 ;; Defined at:
 31122 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 31123 ;; Parameters:    Size  Location     Type
 31124 ;;		None
 31125 ;; Auto vars:     Size  Location     Type
 31126 ;;		None
 31127 ;; Return value:  Size  Location     Type
 31128 ;;                  1  [STACK] void 
 31129 ;; Registers used:
 31130 ;;		wreg, status,2, status,0, btemp+11
 31131 ;; Tracked objects:
 31132 ;;		On entry : 3F/0
 31133 ;;		On exit  : 3F/2
 31134 ;;		Unchanged: 0/0
 31135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31140 ;;Total ram usage:        0 bytes
 31141 ;; Hardware stack levels used:    1
 31142 ;; Hardware stack levels required when called:    3
 31143 ;; This function calls:
 31144 ;;		Nothing
 31145 ;; This function is called by:
 31146 ;;		_TMR5_Initialize
 31147 ;;		_TMR5_CallBack
 31148 ;; This function uses a reentrant model
 31149 ;;
 31150                           
 31151                           	psect	text143
 31152  01A946                     __ptext143:
 31153                           	opt callstack 0
 31154  01A946                     _TMR5_DefaultInterruptHandler:
 31155                           	opt callstack 12
 31156                           
 31157                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 31158                           
 31159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31160                           ;incstack = 0
 31161  01A946  A0BE               	btfss	190,0,c	;volatile
 31162  01A948  D002               	goto	u891_20
 31163  01A94A  0E01               	movlw	1
 31164  01A94C  D001               	goto	u891_26
 31165  01A94E                     u891_20:
 31166  01A94E  0E00               	movlw	0
 31167  01A950                     u891_26:
 31168  01A950  0AFF               	xorlw	255
 31169  01A952  6E0C               	movwf	(btemp+11)^0,c
 31170  01A954  50BE               	movf	190,w,c	;volatile
 31171  01A956  180C               	xorwf	(btemp+11)^0,w,c
 31172  01A958  0BFE               	andlw	-2
 31173  01A95A  180C               	xorwf	(btemp+11)^0,w,c
 31174  01A95C  6EBE               	movwf	190,c	;volatile
 31175                           
 31176                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 31177  01A95E  0E01               	movlw	1
 31178  01A960  0102               	movlb	2	; () banked
 31179  01A962  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 31180  01A964  0E00               	movlw	0
 31181  01A966  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 31182  01A968  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 31183  01A96A  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 31184                           
 31185                           ; BSR set to: 2
 31186                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 31187  01A96C  0E01               	movlw	1
 31188  01A96E  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 31189  01A970  0E00               	movlw	0
 31190  01A972  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 31191  01A974  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 31192  01A976  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 31193                           
 31194                           ; BSR set to: 2
 31195                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31196  01A978  0012               	return		;funcret
 31197  01A97A                     __end_of_TMR5_DefaultInterruptHandler:
 31198                           	opt callstack 0
 31199                           
 31200 ;; *************** function _TMR3_ISR *****************
 31201 ;; Defined at:
 31202 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 31203 ;; Parameters:    Size  Location     Type
 31204 ;;		None
 31205 ;; Auto vars:     Size  Location     Type
 31206 ;;		None
 31207 ;; Return value:  Size  Location     Type
 31208 ;;                  1    wreg      void 
 31209 ;; Registers used:
 31210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 31211 ;; Tracked objects:
 31212 ;;		On entry : 0/0
 31213 ;;		On exit  : 3F/0
 31214 ;;		Unchanged: 0/0
 31215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31218 ;;      Temps:          0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31219 ;;      Totals:         0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31220 ;;Total ram usage:       25 bytes
 31221 ;; Hardware stack levels used:    1
 31222 ;; Hardware stack levels required when called:   14
 31223 ;; This function calls:
 31224 ;;		_TMR3_CallBack
 31225 ;;		_TMR3_WriteTimer
 31226 ;; This function is called by:
 31227 ;;		Interrupt level 1
 31228 ;; This function uses a non-reentrant model
 31229 ;;
 31230                           
 31231                           	psect	text144
 31232  0182BC                     __ptext144:
 31233                           	opt callstack 0
 31234  0182BC                     _TMR3_ISR:
 31235                           	opt callstack 3
 31236                           
 31237                           ; BSR set to: 2
 31238                           ;incstack = 0
 31239  0182BC  006F FF60  F3E4    	movff	status,??_TMR3_ISR
 31240  0182C2  006F FFD8  F3E5    	movff	tblptrl,??_TMR3_ISR+1
 31241  0182C8  006F FFDC  F3E6    	movff	tblptrh,??_TMR3_ISR+2
 31242  0182CE  006F FFE0  F3E7    	movff	tblptru,??_TMR3_ISR+3
 31243  0182D4  006F FFD4  F3E8    	movff	tablat,??_TMR3_ISR+4
 31244  0182DA  0060  F004  F3E9   	movff	btemp,??_TMR3_ISR+5
 31245  0182E0  0060  F008  F3EA   	movff	btemp+1,??_TMR3_ISR+6
 31246  0182E6  0060  F00C  F3EB   	movff	btemp+2,??_TMR3_ISR+7
 31247  0182EC  0060  F010  F3EC   	movff	btemp+3,??_TMR3_ISR+8
 31248  0182F2  0060  F014  F3ED   	movff	btemp+4,??_TMR3_ISR+9
 31249  0182F8  0060  F018  F3EE   	movff	btemp+5,??_TMR3_ISR+10
 31250  0182FE  0060  F01C  F3EF   	movff	btemp+6,??_TMR3_ISR+11
 31251  018304  0060  F020  F3F0   	movff	btemp+7,??_TMR3_ISR+12
 31252  01830A  0060  F024  F3F1   	movff	btemp+8,??_TMR3_ISR+13
 31253  018310  0060  F028  F3F2   	movff	btemp+9,??_TMR3_ISR+14
 31254  018316  0060  F02C  F3F3   	movff	btemp+10,??_TMR3_ISR+15
 31255  01831C  0060  F030  F3F4   	movff	btemp+11,??_TMR3_ISR+16
 31256  018322  0060  F044  F3F5   	movff	btemp+16,??_TMR3_ISR+17
 31257  018328  0060  F048  F3F6   	movff	btemp+17,??_TMR3_ISR+18
 31258  01832E  0060  F04C  F3F7   	movff	btemp+18,??_TMR3_ISR+19
 31259  018334  0060  F050  F3F8   	movff	btemp+19,??_TMR3_ISR+20
 31260  01833A  0060  F054  F3F9   	movff	btemp+20,??_TMR3_ISR+21
 31261  018340  0060  F058  F3FA   	movff	btemp+21,??_TMR3_ISR+22
 31262  018346  0060  F05C  F3FB   	movff	btemp+22,??_TMR3_ISR+23
 31263  01834C  0060  F060  F3FC   	movff	btemp+23,??_TMR3_ISR+24
 31264  018352  EE16  F061         	lfsr	1,___intlo_sp
 31265                           
 31266                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 31267  018356  0139               	movlb	57	; () banked
 31268  018358  9DA6               	bcf	166,6,b	;volatile
 31269                           
 31270                           ; BSR set to: 57
 31271                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 31272  01835A  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 31273  018360  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 31274  018366  ECA6  F0D3         	call	_TMR3_WriteTimer	;wreg free
 31275                           
 31276                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 31277  01836A  0100               	movlb	0	; () banked
 31278  01836C  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 31279  01836E  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 31280  018370  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 31281  018372  E104               	bnz	i1u1183_20
 31282  018374  0E28               	movlw	40
 31283  018376  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 31284  018378  A0D8               	btfss	status,0,c
 31285  01837A  D005               	goto	i1l1205
 31286  01837C                     i1u1183_20:
 31287                           
 31288                           ; BSR set to: 0
 31289                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 31290  01837C  EC28  F0D7         	call	_TMR3_CallBack	;wreg free
 31291                           
 31292                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 31293  018380  0100               	movlb	0	; () banked
 31294  018382  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 31295  018384  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 31296  018386                     i1l1205:
 31297                           
 31298                           ; BSR set to: 0
 31299  018386  0060  FFF0  F018   	movff	??_TMR3_ISR+24,btemp+23
 31300  01838C  0060  FFEC  F017   	movff	??_TMR3_ISR+23,btemp+22
 31301  018392  0060  FFE8  F016   	movff	??_TMR3_ISR+22,btemp+21
 31302  018398  0060  FFE4  F015   	movff	??_TMR3_ISR+21,btemp+20
 31303  01839E  0060  FFE0  F014   	movff	??_TMR3_ISR+20,btemp+19
 31304  0183A4  0060  FFDC  F013   	movff	??_TMR3_ISR+19,btemp+18
 31305  0183AA  0060  FFD8  F012   	movff	??_TMR3_ISR+18,btemp+17
 31306  0183B0  0060  FFD4  F011   	movff	??_TMR3_ISR+17,btemp+16
 31307  0183B6  0060  FFD0  F00C   	movff	??_TMR3_ISR+16,btemp+11
 31308  0183BC  0060  FFCC  F00B   	movff	??_TMR3_ISR+15,btemp+10
 31309  0183C2  0060  FFC8  F00A   	movff	??_TMR3_ISR+14,btemp+9
 31310  0183C8  0060  FFC4  F009   	movff	??_TMR3_ISR+13,btemp+8
 31311  0183CE  0060  FFC0  F008   	movff	??_TMR3_ISR+12,btemp+7
 31312  0183D4  0060  FFBC  F007   	movff	??_TMR3_ISR+11,btemp+6
 31313  0183DA  0060  FFB8  F006   	movff	??_TMR3_ISR+10,btemp+5
 31314  0183E0  0060  FFB4  F005   	movff	??_TMR3_ISR+9,btemp+4
 31315  0183E6  0060  FFB0  F004   	movff	??_TMR3_ISR+8,btemp+3
 31316  0183EC  0060  FFAC  F003   	movff	??_TMR3_ISR+7,btemp+2
 31317  0183F2  0060  FFA8  F002   	movff	??_TMR3_ISR+6,btemp+1
 31318  0183F8  0060  FFA4  F001   	movff	??_TMR3_ISR+5,btemp
 31319  0183FE  0060  FFA3  FFF5   	movff	??_TMR3_ISR+4,tablat
 31320  018404  0060  FF9F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 31321  01840A  0060  FF9B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 31322  018410  0060  FF97  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 31323  018416  0060  FF93  FFD8   	movff	??_TMR3_ISR,status
 31324  01841C  0011               	retfie		f
 31325  01841E                     __end_of_TMR3_ISR:
 31326                           	opt callstack 0
 31327                           
 31328 ;; *************** function _TMR3_WriteTimer *****************
 31329 ;; Defined at:
 31330 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 31331 ;; Parameters:    Size  Location     Type
 31332 ;;  timerVal        2  [STACK] unsigned short 
 31333 ;; Auto vars:     Size  Location     Type
 31334 ;;		None
 31335 ;; Return value:  Size  Location     Type
 31336 ;;                  1  [STACK] void 
 31337 ;; Registers used:
 31338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31339 ;; Tracked objects:
 31340 ;;		On entry : 3F/39
 31341 ;;		On exit  : 0/0
 31342 ;;		Unchanged: 0/0
 31343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31348 ;;Total ram usage:        0 bytes
 31349 ;; Hardware stack levels used:    1
 31350 ;; Hardware stack levels required when called:    3
 31351 ;; This function calls:
 31352 ;;		Nothing
 31353 ;; This function is called by:
 31354 ;;		_TMR3_ISR
 31355 ;; This function uses a reentrant model
 31356 ;;
 31357                           
 31358                           	psect	text145
 31359  01A74C                     __ptext145:
 31360                           	opt callstack 0
 31361  01A74C                     _TMR3_WriteTimer:
 31362                           	opt callstack 13
 31363                           
 31364                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 31365                           
 31366                           ; BSR set to: 0
 31367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31368                           ;incstack = 0
 31369  01A74C  A4A6               	btfss	166,2,c	;volatile
 31370  01A74E  D00F               	goto	l10292
 31371                           
 31372                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 31373  01A750  90A6               	bcf	166,0,c	;volatile
 31374                           
 31375                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 31376                           ;stkvar	_timerVal @ sp[(0)+-2]
 31377  01A752  0EFF               	movlw	255
 31378  01A754  24E1               	addwf	fsr1l,w,c
 31379  01A756  6ED9               	movwf	fsr2l,c
 31380  01A758  0EFF               	movlw	255
 31381  01A75A  20E2               	addwfc	fsr1h,w,c
 31382  01A75C  6EDA               	movwf	fsr2h,c
 31383  01A75E  50DF               	movf	indf2,w,c
 31384  01A760  6EA5               	movwf	165,c	;volatile
 31385                           
 31386                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 31387                           ;stkvar	_timerVal @ sp[(0)+-2]
 31388  01A762  0EFE               	movlw	-2
 31389  01A764  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 31390                           
 31391                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 31392  01A76A  80A6               	bsf	166,0,c	;volatile
 31393                           
 31394                           ;mcc_generated_files/tmr3.c: 141:     }
 31395  01A76C  D00C               	goto	l1188
 31396  01A76E                     l10292:
 31397                           
 31398                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 31399                           ;stkvar	_timerVal @ sp[(0)+-2]
 31400  01A76E  0EFF               	movlw	255
 31401  01A770  24E1               	addwf	fsr1l,w,c
 31402  01A772  6ED9               	movwf	fsr2l,c
 31403  01A774  0EFF               	movlw	255
 31404  01A776  20E2               	addwfc	fsr1h,w,c
 31405  01A778  6EDA               	movwf	fsr2h,c
 31406  01A77A  50DF               	movf	indf2,w,c
 31407  01A77C  6EA5               	movwf	165,c	;volatile
 31408                           
 31409                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 31410                           ;stkvar	_timerVal @ sp[(0)+-2]
 31411  01A77E  0EFE               	movlw	-2
 31412  01A780  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 31413  01A786                     l1188:
 31414                           
 31415                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31416  01A786  52E5               	movf	postdec1,f,c
 31417  01A788  52E5               	movf	postdec1,f,c
 31418  01A78A  0012               	return		;funcret
 31419  01A78C                     __end_of_TMR3_WriteTimer:
 31420                           	opt callstack 0
 31421                           
 31422 ;; *************** function _TMR3_CallBack *****************
 31423 ;; Defined at:
 31424 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 31425 ;; Parameters:    Size  Location     Type
 31426 ;;		None
 31427 ;; Auto vars:     Size  Location     Type
 31428 ;;		None
 31429 ;; Return value:  Size  Location     Type
 31430 ;;                  1  [STACK] void 
 31431 ;; Registers used:
 31432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 31433 ;; Tracked objects:
 31434 ;;		On entry : 3F/0
 31435 ;;		On exit  : 0/0
 31436 ;;		Unchanged: 0/0
 31437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31442 ;;Total ram usage:        0 bytes
 31443 ;; Hardware stack levels used:    1
 31444 ;; Hardware stack levels required when called:   13
 31445 ;; This function calls:
 31446 ;;		Absolute function
 31447 ;;		_TMR3_DefaultInterruptHandler
 31448 ;;		_calc_bsoc
 31449 ;; This function is called by:
 31450 ;;		_TMR3_ISR
 31451 ;; This function uses a reentrant model
 31452 ;;
 31453                           
 31454                           	psect	text146
 31455  01AE50                     __ptext146:
 31456                           	opt callstack 0
 31457  01AE50                     _TMR3_CallBack:
 31458                           	opt callstack 3
 31459                           
 31460                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 31461                           
 31462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31463                           ;incstack = 0
 31464  01AE50  0100               	movlb	0	; () banked
 31465  01AE52  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 31466  01AE54  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 31467  01AE56  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 31468  01AE58  B4D8               	btfsc	status,2,c
 31469  01AE5A  0012               	return	
 31470                           
 31471                           ; BSR set to: 0
 31472                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 31473  01AE5C  D801               	call	u1174_28
 31474  01AE5E  0012               	return	
 31475  01AE60                     u1174_28:
 31476  01AE60  0005               	push	
 31477  01AE62  6EFA               	movwf	pclath,c
 31478  01AE64  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 31479  01AE66  6EFD               	movwf	tosl,c
 31480  01AE68  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 31481  01AE6A  6EFE               	movwf	tosh,c
 31482  01AE6C  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 31483  01AE6E  6EFF               	movwf	tosu,c
 31484  01AE70  50FA               	movf	pclath,w,c
 31485  01AE72  0012               	return		;indir
 31486  01AE74                     __end_of_TMR3_CallBack:
 31487                           	opt callstack 0
 31488                           
 31489 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 31490 ;; Defined at:
 31491 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 31492 ;; Parameters:    Size  Location     Type
 31493 ;;		None
 31494 ;; Auto vars:     Size  Location     Type
 31495 ;;		None
 31496 ;; Return value:  Size  Location     Type
 31497 ;;                  1  [STACK] void 
 31498 ;; Registers used:
 31499 ;;		None
 31500 ;; Tracked objects:
 31501 ;;		On entry : 3F/0
 31502 ;;		On exit  : 0/0
 31503 ;;		Unchanged: 0/0
 31504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31509 ;;Total ram usage:        0 bytes
 31510 ;; Hardware stack levels used:    1
 31511 ;; Hardware stack levels required when called:    3
 31512 ;; This function calls:
 31513 ;;		Nothing
 31514 ;; This function is called by:
 31515 ;;		_TMR3_Initialize
 31516 ;;		_TMR3_CallBack
 31517 ;; This function uses a reentrant model
 31518 ;;
 31519                           
 31520                           	psect	text147
 31521  01B188                     __ptext147:
 31522                           	opt callstack 0
 31523  01B188                     _TMR3_DefaultInterruptHandler:
 31524                           	opt callstack 12
 31525                           
 31526                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31527                           
 31528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31529                           ;incstack = 0
 31530  01B188  0012               	return		;funcret
 31531  01B18A                     __end_of_TMR3_DefaultInterruptHandler:
 31532                           	opt callstack 0
 31533                           
 31534 ;; *************** function _calc_bsoc *****************
 31535 ;; Defined at:
 31536 ;;		line 39 in file "bsoc.c"
 31537 ;; Parameters:    Size  Location     Type
 31538 ;;		None
 31539 ;; Auto vars:     Size  Location     Type
 31540 ;;  log_ptr         2  [STACK] PTR unsigned char 
 31541 ;;		 -> port_data(512), 
 31542 ;; Return value:  Size  Location     Type
 31543 ;;                  1  [STACK] void 
 31544 ;; Registers used:
 31545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 31546 ;; Tracked objects:
 31547 ;;		On entry : 3F/0
 31548 ;;		On exit  : 3F/1
 31549 ;;		Unchanged: 0/0
 31550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31555 ;;Total ram usage:        0 bytes
 31556 ;; Hardware stack levels used:    1
 31557 ;; Hardware stack levels required when called:   12
 31558 ;; This function calls:
 31559 ;;		_StartTimer
 31560 ;;		___fladd
 31561 ;;		___fldiv
 31562 ;;		___flge
 31563 ;;		___flmul
 31564 ;;		___flneg
 31565 ;;		___fltol
 31566 ;;		_port_data_dma_ptr
 31567 ;;		_send_port_data_dma
 31568 ;;		_sprintf
 31569 ;;		_strlen
 31570 ;; This function is called by:
 31571 ;;		_init_bsoc
 31572 ;;		_TMR3_CallBack
 31573 ;; This function uses a reentrant model
 31574 ;;
 31575                           
 31576                           	psect	text148
 31577  013DEC                     __ptext148:
 31578                           	opt callstack 0
 31579  013DEC                     _calc_bsoc:
 31580                           	opt callstack 0
 31581                           
 31582                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31583  013DEC  52E6               	movf	postinc1,f,c
 31584  013DEE  52E6               	movf	postinc1,f,c
 31585                           
 31586                           ;incstack = 0
 31587                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 31588  013DF0  82BE               	bsf	190,1,c	;volatile
 31589                           
 31590                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 31591  013DF2  0E00               	movlw	0
 31592  013DF4  6EE6               	movwf	postinc1,c
 31593  013DF6  0E00               	movlw	0
 31594  013DF8  6EE6               	movwf	postinc1,c
 31595  013DFA  0E61               	movlw	97
 31596  013DFC  6EE6               	movwf	postinc1,c
 31597  013DFE  0E45               	movlw	69
 31598  013E00  6EE6               	movwf	postinc1,c
 31599  013E02  0060  F513  FFE6   	movff	_C+68,postinc1
 31600  013E08  0060  F517  FFE6   	movff	_C+69,postinc1
 31601  013E0E  0060  F51B  FFE6   	movff	_C+70,postinc1
 31602  013E14  0060  F51F  FFE6   	movff	_C+71,postinc1
 31603  013E1A  EC45  F0A2         	call	___fldiv	;wreg free
 31604  013E1E  0060  F007  FFE6   	movff	btemp,postinc1
 31605  013E24  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31606  013E2A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31607  013E30  0060  F013  FFE6   	movff	btemp+3,postinc1
 31608  013E36  0060  F633  FFE6   	movff	_C+140,postinc1
 31609  013E3C  0060  F637  FFE6   	movff	_C+141,postinc1
 31610  013E42  0060  F63B  FFE6   	movff	_C+142,postinc1
 31611  013E48  0060  F63F  FFE6   	movff	_C+143,postinc1
 31612  013E4E  EC18  F09B         	call	___fladd	;wreg free
 31613  013E52  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 31614  013E58  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 31615  013E5E  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 31616  013E64  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 31617                           
 31618                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 31619  013E6A  0060  F633  FFE6   	movff	_C+140,postinc1
 31620  013E70  0060  F637  FFE6   	movff	_C+141,postinc1
 31621  013E76  0060  F63B  FFE6   	movff	_C+142,postinc1
 31622  013E7C  0060  F63F  FFE6   	movff	_C+143,postinc1
 31623  013E82  0060  F623  FFE6   	movff	_C+136,postinc1
 31624  013E88  0060  F627  FFE6   	movff	_C+137,postinc1
 31625  013E8E  0060  F62B  FFE6   	movff	_C+138,postinc1
 31626  013E94  0060  F62F  FFE6   	movff	_C+139,postinc1
 31627  013E9A  ECAD  F0C0         	call	___flge	;wreg free
 31628  013E9E  B001               	btfsc	btemp& (0+255),0,c
 31629  013EA0  D008               	goto	l12112
 31630                           
 31631                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 31632  013EA2  C188  F18C         	movff	_C+136,_C+140	;volatile
 31633  013EA6  C189  F18D         	movff	_C+137,_C+141	;volatile
 31634  013EAA  C18A  F18E         	movff	_C+138,_C+142	;volatile
 31635  013EAE  C18B  F18F         	movff	_C+139,_C+143	;volatile
 31636  013EB2                     l12112:
 31637                           
 31638                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 31639  013EB2  0ECD               	movlw	205
 31640  013EB4  6EE6               	movwf	postinc1,c
 31641  013EB6  0ECC               	movlw	204
 31642  013EB8  6EE6               	movwf	postinc1,c
 31643  013EBA  0ECC               	movlw	204
 31644  013EBC  6EE6               	movwf	postinc1,c
 31645  013EBE  0E3D               	movlw	61
 31646  013EC0  6EE6               	movwf	postinc1,c
 31647  013EC2  0060  F633  FFE6   	movff	_C+140,postinc1
 31648  013EC8  0060  F637  FFE6   	movff	_C+141,postinc1
 31649  013ECE  0060  F63B  FFE6   	movff	_C+142,postinc1
 31650  013ED4  0060  F63F  FFE6   	movff	_C+143,postinc1
 31651  013EDA  ECAD  F0C0         	call	___flge	;wreg free
 31652  013EDE  B001               	btfsc	btemp& (0+255),0,c
 31653  013EE0  D009               	goto	l12116
 31654                           
 31655                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 31656  013EE2  0ECD               	movlw	205
 31657  013EE4  0101               	movlb	1	; () banked
 31658  013EE6  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 31659  013EE8  0ECC               	movlw	204
 31660  013EEA  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 31661  013EEC  0ECC               	movlw	204
 31662  013EEE  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 31663  013EF0  0E3D               	movlw	61
 31664  013EF2  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 31665  013EF4                     l12116:
 31666                           
 31667                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 31668  013EF4  0E00               	movlw	0
 31669  013EF6  6EE6               	movwf	postinc1,c
 31670  013EF8  0E00               	movlw	0
 31671  013EFA  6EE6               	movwf	postinc1,c
 31672  013EFC  0E61               	movlw	97
 31673  013EFE  6EE6               	movwf	postinc1,c
 31674  013F00  0E45               	movlw	69
 31675  013F02  6EE6               	movwf	postinc1,c
 31676  013F04  0060  F523  FFE6   	movff	_C+72,postinc1
 31677  013F0A  0060  F527  FFE6   	movff	_C+73,postinc1
 31678  013F10  0060  F52B  FFE6   	movff	_C+74,postinc1
 31679  013F16  0060  F52F  FFE6   	movff	_C+75,postinc1
 31680  013F1C  EC45  F0A2         	call	___fldiv	;wreg free
 31681  013F20  0060  F007  FFE6   	movff	btemp,postinc1
 31682  013F26  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31683  013F2C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31684  013F32  0060  F013  FFE6   	movff	btemp+3,postinc1
 31685  013F38  0060  F643  FFE6   	movff	_C+144,postinc1
 31686  013F3E  0060  F647  FFE6   	movff	_C+145,postinc1
 31687  013F44  0060  F64B  FFE6   	movff	_C+146,postinc1
 31688  013F4A  0060  F64F  FFE6   	movff	_C+147,postinc1
 31689  013F50  EC18  F09B         	call	___fladd	;wreg free
 31690  013F54  0060  F004  F190   	movff	btemp,_C+144	;volatile
 31691  013F5A  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 31692  013F60  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 31693  013F66  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 31694                           
 31695                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 31696  013F6C  0E00               	movlw	0
 31697  013F6E  6EE6               	movwf	postinc1,c
 31698  013F70  0E00               	movlw	0
 31699  013F72  6EE6               	movwf	postinc1,c
 31700  013F74  0E61               	movlw	97
 31701  013F76  6EE6               	movwf	postinc1,c
 31702  013F78  0E45               	movlw	69
 31703  013F7A  6EE6               	movwf	postinc1,c
 31704  013F7C  0060  F5E3  FFE6   	movff	_C+120,postinc1
 31705  013F82  0060  F5E7  FFE6   	movff	_C+121,postinc1
 31706  013F88  0060  F5EB  FFE6   	movff	_C+122,postinc1
 31707  013F8E  0060  F5EF  FFE6   	movff	_C+123,postinc1
 31708  013F94  EC45  F0A2         	call	___fldiv	;wreg free
 31709  013F98  0060  F007  FFE6   	movff	btemp,postinc1
 31710  013F9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31711  013FA4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31712  013FAA  0060  F013  FFE6   	movff	btemp+3,postinc1
 31713  013FB0  0060  F683  FFE6   	movff	_C+160,postinc1
 31714  013FB6  0060  F687  FFE6   	movff	_C+161,postinc1
 31715  013FBC  0060  F68B  FFE6   	movff	_C+162,postinc1
 31716  013FC2  0060  F68F  FFE6   	movff	_C+163,postinc1
 31717  013FC8  EC18  F09B         	call	___fladd	;wreg free
 31718  013FCC  0060  F004  F1A0   	movff	btemp,_C+160	;volatile
 31719  013FD2  0060  F008  F1A1   	movff	btemp+1,_C+161	;volatile
 31720  013FD8  0060  F00C  F1A2   	movff	btemp+2,_C+162	;volatile
 31721  013FDE  0060  F010  F1A3   	movff	btemp+3,_C+163	;volatile
 31722                           
 31723                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 31724  013FE4  0E00               	movlw	0
 31725  013FE6  6EE6               	movwf	postinc1,c
 31726  013FE8  0E00               	movlw	0
 31727  013FEA  6EE6               	movwf	postinc1,c
 31728  013FEC  0E61               	movlw	97
 31729  013FEE  6EE6               	movwf	postinc1,c
 31730  013FF0  0E45               	movlw	69
 31731  013FF2  6EE6               	movwf	postinc1,c
 31732  013FF4  0060  F5D3  FFE6   	movff	_C+116,postinc1
 31733  013FFA  0060  F5D7  FFE6   	movff	_C+117,postinc1
 31734  014000  0060  F5DB  FFE6   	movff	_C+118,postinc1
 31735  014006  0060  F5DF  FFE6   	movff	_C+119,postinc1
 31736  01400C  EC45  F0A2         	call	___fldiv	;wreg free
 31737  014010  0060  F007  FFE6   	movff	btemp,postinc1
 31738  014016  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31739  01401C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31740  014022  0060  F013  FFE6   	movff	btemp+3,postinc1
 31741  014028  0060  F693  FFE6   	movff	_C+164,postinc1
 31742  01402E  0060  F697  FFE6   	movff	_C+165,postinc1
 31743  014034  0060  F69B  FFE6   	movff	_C+166,postinc1
 31744  01403A  0060  F69F  FFE6   	movff	_C+167,postinc1
 31745  014040  EC18  F09B         	call	___fladd	;wreg free
 31746  014044  0060  F004  F1A4   	movff	btemp,_C+164	;volatile
 31747  01404A  0060  F008  F1A5   	movff	btemp+1,_C+165	;volatile
 31748  014050  0060  F00C  F1A6   	movff	btemp+2,_C+166	;volatile
 31749  014056  0060  F010  F1A7   	movff	btemp+3,_C+167	;volatile
 31750                           
 31751                           ;bsoc.c: 54:  if (C.p_bat > 0.0)
 31752  01405C  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31753  014062  0060  F5F7  FFE6   	movff	_C+125,postinc1
 31754  014068  0060  F5FB  FFE6   	movff	_C+126,postinc1
 31755  01406E  0060  F5FF  FFE6   	movff	_C+127,postinc1
 31756  014074  0E00               	movlw	0
 31757  014076  6EE6               	movwf	postinc1,c
 31758  014078  0E00               	movlw	0
 31759  01407A  6EE6               	movwf	postinc1,c
 31760  01407C  0E00               	movlw	0
 31761  01407E  6EE6               	movwf	postinc1,c
 31762  014080  0E00               	movlw	0
 31763  014082  6EE6               	movwf	postinc1,c
 31764  014084  ECAD  F0C0         	call	___flge	;wreg free
 31765  014088  B001               	btfsc	btemp& (0+255),0,c
 31766  01408A  D03C               	goto	l12126
 31767                           
 31768                           ;bsoc.c: 55:   C.bkwi += (C.p_bat / 3600.0);
 31769  01408C  0E00               	movlw	0
 31770  01408E  6EE6               	movwf	postinc1,c
 31771  014090  0E00               	movlw	0
 31772  014092  6EE6               	movwf	postinc1,c
 31773  014094  0E61               	movlw	97
 31774  014096  6EE6               	movwf	postinc1,c
 31775  014098  0E45               	movlw	69
 31776  01409A  6EE6               	movwf	postinc1,c
 31777  01409C  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31778  0140A2  0060  F5F7  FFE6   	movff	_C+125,postinc1
 31779  0140A8  0060  F5FB  FFE6   	movff	_C+126,postinc1
 31780  0140AE  0060  F5FF  FFE6   	movff	_C+127,postinc1
 31781  0140B4  EC45  F0A2         	call	___fldiv	;wreg free
 31782  0140B8  0060  F007  FFE6   	movff	btemp,postinc1
 31783  0140BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31784  0140C4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31785  0140CA  0060  F013  FFE6   	movff	btemp+3,postinc1
 31786  0140D0  0060  F663  FFE6   	movff	_C+152,postinc1
 31787  0140D6  0060  F667  FFE6   	movff	_C+153,postinc1
 31788  0140DC  0060  F66B  FFE6   	movff	_C+154,postinc1
 31789  0140E2  0060  F66F  FFE6   	movff	_C+155,postinc1
 31790  0140E8  EC18  F09B         	call	___fladd	;wreg free
 31791  0140EC  0060  F004  F198   	movff	btemp,_C+152	;volatile
 31792  0140F2  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 31793  0140F8  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 31794  0140FE  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 31795  014104                     l12126:
 31796                           
 31797                           ;bsoc.c: 56:  if (C.p_bat < 0.0)
 31798  014104  0101               	movlb	1	; () banked
 31799  014106  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 31800  014108  D03C               	goto	l12130
 31801                           
 31802                           ; BSR set to: 1
 31803                           ;bsoc.c: 57:   C.bkwo += (C.p_bat / 3600.0);
 31804  01410A  0E00               	movlw	0
 31805  01410C  6EE6               	movwf	postinc1,c
 31806  01410E  0E00               	movlw	0
 31807  014110  6EE6               	movwf	postinc1,c
 31808  014112  0E61               	movlw	97
 31809  014114  6EE6               	movwf	postinc1,c
 31810  014116  0E45               	movlw	69
 31811  014118  6EE6               	movwf	postinc1,c
 31812  01411A  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31813  014120  0060  F5F7  FFE6   	movff	_C+125,postinc1
 31814  014126  0060  F5FB  FFE6   	movff	_C+126,postinc1
 31815  01412C  0060  F5FF  FFE6   	movff	_C+127,postinc1
 31816  014132  EC45  F0A2         	call	___fldiv	;wreg free
 31817  014136  0060  F007  FFE6   	movff	btemp,postinc1
 31818  01413C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31819  014142  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31820  014148  0060  F013  FFE6   	movff	btemp+3,postinc1
 31821  01414E  0060  F673  FFE6   	movff	_C+156,postinc1
 31822  014154  0060  F677  FFE6   	movff	_C+157,postinc1
 31823  01415A  0060  F67B  FFE6   	movff	_C+158,postinc1
 31824  014160  0060  F67F  FFE6   	movff	_C+159,postinc1
 31825  014166  EC18  F09B         	call	___fladd	;wreg free
 31826  01416A  0060  F004  F19C   	movff	btemp,_C+156	;volatile
 31827  014170  0060  F008  F19D   	movff	btemp+1,_C+157	;volatile
 31828  014176  0060  F00C  F19E   	movff	btemp+2,_C+158	;volatile
 31829  01417C  0060  F010  F19F   	movff	btemp+3,_C+159	;volatile
 31830  014182                     l12130:
 31831                           
 31832                           ;bsoc.c: 59:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 31833  014182  0E00               	movlw	0
 31834  014184  6EE6               	movwf	postinc1,c
 31835  014186  0E00               	movlw	0
 31836  014188  6EE6               	movwf	postinc1,c
 31837  01418A  0EC8               	movlw	200
 31838  01418C  6EE6               	movwf	postinc1,c
 31839  01418E  0E42               	movlw	66
 31840  014190  6EE6               	movwf	postinc1,c
 31841  014192  0060  F623  FFE6   	movff	_C+136,postinc1
 31842  014198  0060  F627  FFE6   	movff	_C+137,postinc1
 31843  01419E  0060  F62B  FFE6   	movff	_C+138,postinc1
 31844  0141A4  0060  F62F  FFE6   	movff	_C+139,postinc1
 31845  0141AA  0060  F633  FFE6   	movff	_C+140,postinc1
 31846  0141B0  0060  F637  FFE6   	movff	_C+141,postinc1
 31847  0141B6  0060  F63B  FFE6   	movff	_C+142,postinc1
 31848  0141BC  0060  F63F  FFE6   	movff	_C+143,postinc1
 31849  0141C2  EC45  F0A2         	call	___fldiv	;wreg free
 31850  0141C6  0060  F007  FFE6   	movff	btemp,postinc1
 31851  0141CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31852  0141D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31853  0141D8  0060  F013  FFE6   	movff	btemp+3,postinc1
 31854  0141DE  EC03  F097         	call	___flmul	;wreg free
 31855  0141E2  0060  F007  FFE6   	movff	btemp,postinc1
 31856  0141E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31857  0141EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31858  0141F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 31859  0141FA  EC3C  F0BF         	call	___fltol	;wreg free
 31860  0141FE  0060  F004  F00B   	movff	btemp,btemp+10
 31861  014204  0060  F008  F00C   	movff	btemp+1,btemp+11
 31862  01420A  0E01               	movlw	1
 31863  01420C  240B               	addwf	(btemp+10)^0,w,c
 31864  01420E  0101               	movlb	1	; () banked
 31865  014210  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 31866  014212  0E00               	movlw	0
 31867  014214  200C               	addwfc	(btemp+11)^0,w,c
 31868  014216  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 31869                           
 31870                           ; BSR set to: 1
 31871                           ;bsoc.c: 60:  if (C.soc > 100)
 31872  014218  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
 31873  01421A  E104               	bnz	u1170_20
 31874  01421C  0E65               	movlw	101
 31875  01421E  5DAA               	subwf	(_C+170)& (0+255),w,b	;volatile
 31876  014220  A0D8               	btfss	status,0,c
 31877  014222  D004               	goto	l12136
 31878  014224                     u1170_20:
 31879                           
 31880                           ; BSR set to: 1
 31881                           ;bsoc.c: 61:   C.soc = 100;
 31882  014224  0E00               	movlw	0
 31883  014226  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 31884  014228  0E64               	movlw	100
 31885  01422A  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 31886  01422C                     l12136:
 31887                           
 31888                           ; BSR set to: 1
 31889                           ;bsoc.c: 63:  if (C.c_bat < 0.0) {
 31890  01422C  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 31891  01422E  D043               	goto	l12140
 31892                           
 31893                           ; BSR set to: 1
 31894                           ;bsoc.c: 64:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 31895  014230  0060  F513  FFE6   	movff	_C+68,postinc1
 31896  014236  0060  F517  FFE6   	movff	_C+69,postinc1
 31897  01423C  0060  F51B  FFE6   	movff	_C+70,postinc1
 31898  014242  0060  F51F  FFE6   	movff	_C+71,postinc1
 31899  014248  0060  F633  FFE6   	movff	_C+140,postinc1
 31900  01424E  0060  F637  FFE6   	movff	_C+141,postinc1
 31901  014254  0060  F63B  FFE6   	movff	_C+142,postinc1
 31902  01425A  0060  F63F  FFE6   	movff	_C+143,postinc1
 31903  014260  EC45  F0A2         	call	___fldiv	;wreg free
 31904  014264  0060  F007  FFE6   	movff	btemp,postinc1
 31905  01426A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31906  014270  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31907  014276  0060  F013  FFE6   	movff	btemp+3,postinc1
 31908  01427C  EC30  F0D2         	call	___flneg	;wreg free
 31909  014280  0060  F007  FFE6   	movff	btemp,postinc1
 31910  014286  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31911  01428C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31912  014292  0060  F013  FFE6   	movff	btemp+3,postinc1
 31913  014298  EC3C  F0BF         	call	___fltol	;wreg free
 31914  01429C  0060  F004  F00B   	movff	btemp,btemp+10
 31915  0142A2  0060  F008  F00C   	movff	btemp+1,btemp+11
 31916  0142A8  0060  F02C  F1A8   	movff	btemp+10,_C+168	;volatile
 31917  0142AE  0060  F030  F1A9   	movff	btemp+11,_C+169	;volatile
 31918                           
 31919                           ;bsoc.c: 65:  } else {
 31920  0142B4  D004               	goto	l12142
 31921  0142B6                     l12140:
 31922                           
 31923                           ; BSR set to: 1
 31924                           ;bsoc.c: 66:   C.runtime = 120;
 31925  0142B6  0E00               	movlw	0
 31926  0142B8  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 31927  0142BA  0E78               	movlw	120
 31928  0142BC  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 31929  0142BE                     l12142:
 31930                           
 31931                           ;bsoc.c: 68:  if (C.runtime > 120)
 31932  0142BE  0101               	movlb	1	; () banked
 31933  0142C0  51A9               	movf	(_C+169)& (0+255),w,b	;volatile
 31934  0142C2  E104               	bnz	u1172_20
 31935  0142C4  0E79               	movlw	121
 31936  0142C6  5DA8               	subwf	(_C+168)& (0+255),w,b	;volatile
 31937  0142C8  A0D8               	btfss	status,0,c
 31938  0142CA  D004               	goto	l12146
 31939  0142CC                     u1172_20:
 31940                           
 31941                           ; BSR set to: 1
 31942                           ;bsoc.c: 69:   C.runtime = 120;
 31943  0142CC  0E00               	movlw	0
 31944  0142CE  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 31945  0142D0  0E78               	movlw	120
 31946  0142D2  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 31947  0142D4                     l12146:
 31948                           
 31949                           ; BSR set to: 1
 31950                           ;bsoc.c: 71:  V.lowint_count++;
 31951  0142D4  0E01               	movlw	1
 31952  0142D6  0102               	movlb	2	; () banked
 31953  0142D8  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 31954  0142DA  0E00               	movlw	0
 31955  0142DC  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 31956  0142DE  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 31957  0142E0  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 31958                           
 31959                           ; BSR set to: 2
 31960                           ;bsoc.c: 73:  log_ptr = port_data_dma_ptr();
 31961  0142E2  EC88  F0D8         	call	_port_data_dma_ptr	;wreg free
 31962                           
 31963                           ;stkvar	_log_ptr @ sp[(-2)+0]
 31964  0142E6  0EFF               	movlw	-1
 31965  0142E8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 31966  0142EE  0EFE               	movlw	-2
 31967  0142F0  0060  F007  FFE3   	movff	btemp,plusw1
 31968                           
 31969                           ;bsoc.c: 74:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 31970  0142F6  0060  F613  FFE6   	movff	_C+132,postinc1
 31971  0142FC  0060  F617  FFE6   	movff	_C+133,postinc1
 31972  014302  0060  F61B  FFE6   	movff	_C+134,postinc1
 31973  014308  0060  F61F  FFE6   	movff	_C+135,postinc1
 31974  01430E  0060  F6A3  FFE6   	movff	_C+168,postinc1
 31975  014314  0060  F6A7  FFE6   	movff	_C+169,postinc1
 31976  01431A  0060  F6AB  FFE6   	movff	_C+170,postinc1
 31977  014320  0060  F6AF  FFE6   	movff	_C+171,postinc1
 31978  014326  0060  F643  FFE6   	movff	_C+144,postinc1
 31979  01432C  0060  F647  FFE6   	movff	_C+145,postinc1
 31980  014332  0060  F64B  FFE6   	movff	_C+146,postinc1
 31981  014338  0060  F64F  FFE6   	movff	_C+147,postinc1
 31982  01433E  0060  F633  FFE6   	movff	_C+140,postinc1
 31983  014344  0060  F637  FFE6   	movff	_C+141,postinc1
 31984  01434A  0060  F63B  FFE6   	movff	_C+142,postinc1
 31985  014350  0060  F63F  FFE6   	movff	_C+143,postinc1
 31986  014356  0060  F5D3  FFE6   	movff	_C+116,postinc1
 31987  01435C  0060  F5D7  FFE6   	movff	_C+117,postinc1
 31988  014362  0060  F5DB  FFE6   	movff	_C+118,postinc1
 31989  014368  0060  F5DF  FFE6   	movff	_C+119,postinc1
 31990  01436E  0060  F5C3  FFE6   	movff	_C+112,postinc1
 31991  014374  0060  F5C7  FFE6   	movff	_C+113,postinc1
 31992  01437A  0060  F5CB  FFE6   	movff	_C+114,postinc1
 31993  014380  0060  F5CF  FFE6   	movff	_C+115,postinc1
 31994  014386  0060  F5E3  FFE6   	movff	_C+120,postinc1
 31995  01438C  0060  F5E7  FFE6   	movff	_C+121,postinc1
 31996  014392  0060  F5EB  FFE6   	movff	_C+122,postinc1
 31997  014398  0060  F5EF  FFE6   	movff	_C+123,postinc1
 31998  01439E  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31999  0143A4  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32000  0143AA  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32001  0143B0  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32002  0143B6  0060  F593  FFE6   	movff	_C+100,postinc1
 32003  0143BC  0060  F597  FFE6   	movff	_C+101,postinc1
 32004  0143C2  0060  F59B  FFE6   	movff	_C+102,postinc1
 32005  0143C8  0060  F59F  FFE6   	movff	_C+103,postinc1
 32006  0143CE  0060  F533  FFE6   	movff	_C+76,postinc1
 32007  0143D4  0060  F537  FFE6   	movff	_C+77,postinc1
 32008  0143DA  0060  F53B  FFE6   	movff	_C+78,postinc1
 32009  0143E0  0060  F53F  FFE6   	movff	_C+79,postinc1
 32010  0143E6  0060  F543  FFE6   	movff	_C+80,postinc1
 32011  0143EC  0060  F547  FFE6   	movff	_C+81,postinc1
 32012  0143F2  0060  F54B  FFE6   	movff	_C+82,postinc1
 32013  0143F8  0060  F54F  FFE6   	movff	_C+83,postinc1
 32014  0143FE  0060  F553  FFE6   	movff	_C+84,postinc1
 32015  014404  0060  F557  FFE6   	movff	_C+85,postinc1
 32016  01440A  0060  F55B  FFE6   	movff	_C+86,postinc1
 32017  014410  0060  F55F  FFE6   	movff	_C+87,postinc1
 32018  014416  0060  FA07  FFE6   	movff	_V+129,postinc1
 32019  01441C  0060  FA0B  FFE6   	movff	_V+130,postinc1
 32020  014422  0060  FA0F  FFE6   	movff	_V+131,postinc1
 32021  014428  0060  FA13  FFE6   	movff	_V+132,postinc1
 32022  01442E  0E2B               	movlw	low STR_55
 32023  014430  6EE6               	movwf	postinc1,c
 32024  014432  0EFD               	movlw	high STR_55
 32025  014434  6EE6               	movwf	postinc1,c
 32026                           
 32027                           ;stkvar	_log_ptr @ sp[(-56)+0]
 32028  014436  0EC8               	movlw	-56
 32029  014438  006F FF8F FFE6     	movff	plusw1,postinc1
 32030  01443E  006F FF8F FFE6     	movff	plusw1,postinc1
 32031  014444  0E38               	movlw	56
 32032  014446  6EE6               	movwf	postinc1,c
 32033  014448  EC42  F0C7         	call	_sprintf	;wreg free
 32034                           
 32035                           ; BSR set to: 0
 32036                           ;bsoc.c: 80:  StartTimer(TMR_DISPLAY, 125);
 32037  01444C  0E7D               	movlw	125
 32038  01444E  6EE6               	movwf	postinc1,c
 32039  014450  0E00               	movlw	0
 32040  014452  6EE6               	movwf	postinc1,c
 32041  014454  0E0A               	movlw	10
 32042  014456  6EE6               	movwf	postinc1,c
 32043  014458  EC46  F0D3         	call	_StartTimer	;wreg free
 32044                           
 32045                           ;bsoc.c: 81:  send_port_data_dma(strlen((char*) log_ptr));
 32046                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32047  01445C  0EFE               	movlw	-2
 32048  01445E  006F FF8F FFE6     	movff	plusw1,postinc1
 32049  014464  006F FF8F FFE6     	movff	plusw1,postinc1
 32050  01446A  EC85  F0CC         	call	_strlen	;wreg free
 32051  01446E  0060  F007  FFE6   	movff	btemp,postinc1
 32052  014474  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32053  01447A  ECBB  F0D1         	call	_send_port_data_dma	;wreg free
 32054                           
 32055                           ; BSR set to: 59
 32056                           ;bsoc.c: 82:  C.update = 0;
 32057  01447E  0101               	movlb	1	; () banked
 32058  014480  6BAC               	clrf	(_C+172)& (0+255),b	;volatile
 32059                           
 32060                           ; BSR set to: 1
 32061  014482  92BE               	bcf	190,1,c	;volatile
 32062                           
 32063                           ; BSR set to: 1
 32064                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 32065  014484  52E5               	movf	postdec1,f,c
 32066  014486  52E5               	movf	postdec1,f,c
 32067  014488  0012               	return		;funcret
 32068  01448A                     __end_of_calc_bsoc:
 32069                           	opt callstack 0
 32070                           
 32071 ;; *************** function _send_port_data_dma *****************
 32072 ;; Defined at:
 32073 ;;		line 258 in file "eadog.c"
 32074 ;; Parameters:    Size  Location     Type
 32075 ;;  dsize           2  [STACK] unsigned short 
 32076 ;; Auto vars:     Size  Location     Type
 32077 ;;		None
 32078 ;; Return value:  Size  Location     Type
 32079 ;;                  1  [STACK] void 
 32080 ;; Registers used:
 32081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 32082 ;; Tracked objects:
 32083 ;;		On entry : 0/0
 32084 ;;		On exit  : 3F/3B
 32085 ;;		Unchanged: 0/0
 32086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32091 ;;Total ram usage:        0 bytes
 32092 ;; Hardware stack levels used:    1
 32093 ;; Hardware stack levels required when called:    3
 32094 ;; This function calls:
 32095 ;;		Nothing
 32096 ;; This function is called by:
 32097 ;;		_calc_bsoc
 32098 ;; This function uses a reentrant model
 32099 ;;
 32100                           
 32101                           	psect	text149
 32102  01A376                     __ptext149:
 32103                           	opt callstack 0
 32104  01A376                     _send_port_data_dma:
 32105                           	opt callstack 11
 32106                           
 32107                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 32108                           ;stkvar	_dsize @ sp[(0)+-2]
 32109                           
 32110                           ; BSR set to: 1
 32111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32112                           ;incstack = 0
 32113  01A376  0EFE               	movlw	-2
 32114  01A378  04E3               	decf	plusw1,w,c
 32115  01A37A  0EFF               	movlw	-1
 32116  01A37C  006F FF8C  F001    	movff	plusw1,btemp
 32117  01A382  0E02               	movlw	2
 32118  01A384  5A01               	subwfb	btemp^0,f,c
 32119  01A386  A0D8               	btfss	status,0,c
 32120  01A388  D00C               	goto	l9376
 32121                           
 32122                           ;eadog.c: 261:   dsize = 512;
 32123  01A38A  0E00               	movlw	0
 32124  01A38C  6E0B               	movwf	(btemp+10)^0,c
 32125  01A38E  0E02               	movlw	2
 32126  01A390  6E0C               	movwf	(btemp+11)^0,c
 32127                           
 32128                           ;stkvar	_dsize @ sp[(0)+-2]
 32129  01A392  0EFE               	movlw	-2
 32130  01A394  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32131  01A39A  0EFF               	movlw	-1
 32132  01A39C  0060  F033  FFE3   	movff	btemp+11,plusw1
 32133  01A3A2                     l9376:
 32134                           
 32135                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 32136  01A3A2  013B               	movlb	59	; () banked
 32137  01A3A4  9FDC               	bcf	220,7,b	;volatile
 32138                           
 32139                           ; BSR set to: 59
 32140                           ;eadog.c: 264:  DMA2SSZ = dsize;
 32141                           ;stkvar	_dsize @ sp[(0)+-2]
 32142  01A3A6  0EFE               	movlw	-2
 32143  01A3A8  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 32144  01A3AE  0EFF               	movlw	-1
 32145  01A3B0  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 32146                           
 32147                           ; BSR set to: 59
 32148                           ;eadog.c: 265:  DMA2DSZ = 1;
 32149  01A3B6  0E00               	movlw	0
 32150  01A3B8  6FCF               	movwf	207,b	;volatile
 32151  01A3BA  0E01               	movlw	1
 32152  01A3BC  6FCE               	movwf	206,b	;volatile
 32153                           
 32154                           ; BSR set to: 59
 32155                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 32156  01A3BE  8FDC               	bsf	220,7,b	;volatile
 32157                           
 32158                           ; BSR set to: 59
 32159                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 32160  01A3C0  8DDC               	bsf	220,6,b	;volatile
 32161                           
 32162                           ; BSR set to: 59
 32163                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 32164  01A3C2  52E5               	movf	postdec1,f,c
 32165  01A3C4  52E5               	movf	postdec1,f,c
 32166  01A3C6  0012               	return		;funcret
 32167  01A3C8                     __end_of_send_port_data_dma:
 32168                           	opt callstack 0
 32169                           
 32170 ;; *************** function _port_data_dma_ptr *****************
 32171 ;; Defined at:
 32172 ;;		line 273 in file "eadog.c"
 32173 ;; Parameters:    Size  Location     Type
 32174 ;;		None
 32175 ;; Auto vars:     Size  Location     Type
 32176 ;;		None
 32177 ;; Return value:  Size  Location     Type
 32178 ;;                  2  [STACK] PTR unsigned char 
 32179 ;; Registers used:
 32180 ;;		wreg, status,2, status,0, btemp, btemp+1
 32181 ;; Tracked objects:
 32182 ;;		On entry : 3F/2
 32183 ;;		On exit  : 0/0
 32184 ;;		Unchanged: 0/0
 32185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32190 ;;Total ram usage:        0 bytes
 32191 ;; Hardware stack levels used:    1
 32192 ;; Hardware stack levels required when called:    3
 32193 ;; This function calls:
 32194 ;;		Nothing
 32195 ;; This function is called by:
 32196 ;;		_calc_bsoc
 32197 ;; This function uses a reentrant model
 32198 ;;
 32199                           
 32200                           	psect	text150
 32201  01B110                     __ptext150:
 32202                           	opt callstack 0
 32203  01B110                     _port_data_dma_ptr:
 32204                           	opt callstack 11
 32205                           
 32206                           ;eadog.c: 275:  return port_data;
 32207                           
 32208                           ; BSR set to: 59
 32209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32210                           ;incstack = 0
 32211  01B110  0EFF               	movlw	low _port_data
 32212  01B112  6E01               	movwf	btemp^0,c
 32213  01B114  0E05               	movlw	high _port_data
 32214  01B116  6E02               	movwf	(btemp+1)^0,c
 32215                           
 32216                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32217  01B118  0012               	return		;funcret
 32218  01B11A                     __end_of_port_data_dma_ptr:
 32219                           	opt callstack 0
 32220                           
 32221 ;; *************** function _INT0_ISR *****************
 32222 ;; Defined at:
 32223 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 32224 ;; Parameters:    Size  Location     Type
 32225 ;;		None
 32226 ;; Auto vars:     Size  Location     Type
 32227 ;;		None
 32228 ;; Return value:  Size  Location     Type
 32229 ;;                  1    wreg      void 
 32230 ;; Registers used:
 32231 ;;		wreg, status,2, status,0, pclath, tosl
 32232 ;; Tracked objects:
 32233 ;;		On entry : 0/0
 32234 ;;		On exit  : 0/0
 32235 ;;		Unchanged: 0/0
 32236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32241 ;;Total ram usage:        0 bytes
 32242 ;; Hardware stack levels used:    1
 32243 ;; Hardware stack levels required when called:    2
 32244 ;; This function calls:
 32245 ;;		_INT0_CallBack
 32246 ;; This function is called by:
 32247 ;;		Interrupt level 2
 32248 ;; This function uses a non-reentrant model
 32249 ;;
 32250                           
 32251                           	psect	text151
 32252  01B0E8                     __ptext151:
 32253                           	opt callstack 0
 32254  01B0E8                     _INT0_ISR:
 32255                           	opt callstack 3
 32256                           
 32257                           ;incstack = 0
 32258  01B0E8  EE14  F0C2         	lfsr	1,___inthi_sp
 32259                           
 32260                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 32261  01B0EC  0139               	movlb	57	; () banked
 32262  01B0EE  91A1               	bcf	161,0,b	;volatile
 32263                           
 32264                           ; BSR set to: 57
 32265                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 32266  01B0F0  EC3A  F0D7         	call	_INT0_CallBack	;wreg free
 32267  01B0F4  0011               	retfie		f
 32268  01B0F6                     __end_of_INT0_ISR:
 32269                           	opt callstack 0
 32270                           
 32271 ;; *************** function _INT0_CallBack *****************
 32272 ;; Defined at:
 32273 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 32274 ;; Parameters:    Size  Location     Type
 32275 ;;		None
 32276 ;; Auto vars:     Size  Location     Type
 32277 ;;		None
 32278 ;; Return value:  Size  Location     Type
 32279 ;;                  1  [STACK] void 
 32280 ;; Registers used:
 32281 ;;		wreg, status,2, status,0, pclath, tosl
 32282 ;; Tracked objects:
 32283 ;;		On entry : 3F/39
 32284 ;;		On exit  : 0/0
 32285 ;;		Unchanged: 0/0
 32286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32291 ;;Total ram usage:        0 bytes
 32292 ;; Hardware stack levels used:    1
 32293 ;; Hardware stack levels required when called:    1
 32294 ;; This function calls:
 32295 ;;		Absolute function
 32296 ;;		_INT0_DefaultInterruptHandler
 32297 ;; This function is called by:
 32298 ;;		_INT0_ISR
 32299 ;; This function uses a reentrant model
 32300 ;;
 32301                           
 32302                           	psect	text152
 32303  01AE74                     __ptext152:
 32304                           	opt callstack 0
 32305  01AE74                     _INT0_CallBack:
 32306                           	opt callstack 3
 32307                           
 32308                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 32309                           
 32310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32311                           ;incstack = 0
 32312  01AE74  0100               	movlb	0	; () banked
 32313  01AE76  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 32314  01AE78  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 32315  01AE7A  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 32316  01AE7C  B4D8               	btfsc	status,2,c
 32317  01AE7E  0012               	return	
 32318                           
 32319                           ; BSR set to: 0
 32320                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 32321  01AE80  D801               	call	u944_48
 32322  01AE82  0012               	return	
 32323  01AE84                     u944_48:
 32324  01AE84  0005               	push	
 32325  01AE86  6EFA               	movwf	pclath,c
 32326  01AE88  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 32327  01AE8A  6EFD               	movwf	tosl,c
 32328  01AE8C  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 32329  01AE8E  6EFE               	movwf	tosh,c
 32330  01AE90  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 32331  01AE92  6EFF               	movwf	tosu,c
 32332  01AE94  50FA               	movf	pclath,w,c
 32333  01AE96  0012               	return		;indir
 32334  01AE98                     __end_of_INT0_CallBack:
 32335                           	opt callstack 0
 32336                           
 32337 ;; *************** function _INT0_DefaultInterruptHandler *****************
 32338 ;; Defined at:
 32339 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 32340 ;; Parameters:    Size  Location     Type
 32341 ;;		None
 32342 ;; Auto vars:     Size  Location     Type
 32343 ;;		None
 32344 ;; Return value:  Size  Location     Type
 32345 ;;                  1  [STACK] void 
 32346 ;; Registers used:
 32347 ;;		None
 32348 ;; Tracked objects:
 32349 ;;		On entry : 3F/0
 32350 ;;		On exit  : 0/0
 32351 ;;		Unchanged: 0/0
 32352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32357 ;;Total ram usage:        0 bytes
 32358 ;; Hardware stack levels used:    1
 32359 ;; This function calls:
 32360 ;;		Nothing
 32361 ;; This function is called by:
 32362 ;;		_EXT_INT_Initialize
 32363 ;;		_INT0_CallBack
 32364 ;; This function uses a reentrant model
 32365 ;;
 32366                           
 32367                           	psect	text153
 32368  01B18A                     __ptext153:
 32369                           	opt callstack 0
 32370  01B18A                     _INT0_DefaultInterruptHandler:
 32371                           	opt callstack 3
 32372                           
 32373                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32374                           
 32375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32376                           ;incstack = 0
 32377  01B18A  0012               	return		;funcret
 32378  01B18C                     __end_of_INT0_DefaultInterruptHandler:
 32379                           	opt callstack 0
 32380                           
 32381 ;; *************** function _Default_ISR *****************
 32382 ;; Defined at:
 32383 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 32384 ;; Parameters:    Size  Location     Type
 32385 ;;		None
 32386 ;; Auto vars:     Size  Location     Type
 32387 ;;		None
 32388 ;; Return value:  Size  Location     Type
 32389 ;;                  1    wreg      void 
 32390 ;; Registers used:
 32391 ;;		None
 32392 ;; Tracked objects:
 32393 ;;		On entry : 0/0
 32394 ;;		On exit  : 0/0
 32395 ;;		Unchanged: 0/0
 32396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32401 ;;Total ram usage:        0 bytes
 32402 ;; Hardware stack levels used:    1
 32403 ;; This function calls:
 32404 ;;		Nothing
 32405 ;; This function is called by:
 32406 ;;		Interrupt level 2
 32407 ;; This function uses a non-reentrant model
 32408 ;;
 32409                           
 32410                           	psect	text154
 32411  01B180                     __ptext154:
 32412                           	opt callstack 0
 32413  01B180                     _Default_ISR:
 32414                           	opt callstack 5
 32415                           
 32416                           ;incstack = 0
 32417  01B180  EE14  F0C2         	lfsr	1,___inthi_sp
 32418  01B184  0011               	retfie		f
 32419  01B186                     __end_of_Default_ISR:
 32420                           	opt callstack 0
 32421                           
 32422 ;; *************** function _ADCC_ISR *****************
 32423 ;; Defined at:
 32424 ;;		line 314 in file "mcc_generated_files/adcc.c"
 32425 ;; Parameters:    Size  Location     Type
 32426 ;;		None
 32427 ;; Auto vars:     Size  Location     Type
 32428 ;;		None
 32429 ;; Return value:  Size  Location     Type
 32430 ;;                  1    wreg      void 
 32431 ;; Registers used:
 32432 ;;		wreg, status,2, status,0, pclath, tosl
 32433 ;; Tracked objects:
 32434 ;;		On entry : 0/0
 32435 ;;		On exit  : 0/0
 32436 ;;		Unchanged: 0/0
 32437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32442 ;;Total ram usage:        0 bytes
 32443 ;; Hardware stack levels used:    1
 32444 ;; Hardware stack levels required when called:    1
 32445 ;; This function calls:
 32446 ;;		Absolute function
 32447 ;;		_ADCC_DefaultInterruptHandler
 32448 ;;		_adc_int_handler
 32449 ;; This function is called by:
 32450 ;;		Interrupt level 2
 32451 ;; This function uses a non-reentrant model
 32452 ;;
 32453                           
 32454                           	psect	text155
 32455  01AA94                     __ptext155:
 32456                           	opt callstack 0
 32457  01AA94                     _ADCC_ISR:
 32458                           	opt callstack 4
 32459                           
 32460                           ;incstack = 0
 32461  01AA94  EE14  F0C2         	lfsr	1,___inthi_sp
 32462                           
 32463                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 32464  01AA98  0139               	movlb	57	; () banked
 32465  01AA9A  95A1               	bcf	161,2,b	;volatile
 32466                           
 32467                           ; BSR set to: 57
 32468                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 32469  01AA9C  0100               	movlb	0	; () banked
 32470  01AA9E  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 32471  01AAA0  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 32472  01AAA2  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 32473  01AAA4  B4D8               	btfsc	status,2,c
 32474  01AAA6  0011               	retfie		f
 32475                           
 32476                           ; BSR set to: 0
 32477                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 32478  01AAA8  D801               	call	i2u983_48
 32479  01AAAA  0011               	retfie		f
 32480  01AAAC                     i2u983_48:
 32481  01AAAC  0005               	push	
 32482  01AAAE  6EFA               	movwf	pclath,c
 32483  01AAB0  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 32484  01AAB2  6EFD               	movwf	tosl,c
 32485  01AAB4  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 32486  01AAB6  6EFE               	movwf	tosh,c
 32487  01AAB8  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 32488  01AABA  6EFF               	movwf	tosu,c
 32489  01AABC  50FA               	movf	pclath,w,c
 32490  01AABE  0012               	return		;indir
 32491  01AAC0                     __end_of_ADCC_ISR:
 32492                           	opt callstack 0
 32493                           
 32494 ;; *************** function _adc_int_t_handler *****************
 32495 ;; Defined at:
 32496 ;;		line 143 in file "daq.c"
 32497 ;; Parameters:    Size  Location     Type
 32498 ;;		None
 32499 ;; Auto vars:     Size  Location     Type
 32500 ;;		None
 32501 ;; Return value:  Size  Location     Type
 32502 ;;                  1  [STACK] void 
 32503 ;; Registers used:
 32504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 32505 ;; Tracked objects:
 32506 ;;		On entry : 3F/0
 32507 ;;		On exit  : 1/0
 32508 ;;		Unchanged: 0/0
 32509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32514 ;;Total ram usage:        0 bytes
 32515 ;; Hardware stack levels used:    1
 32516 ;; Hardware stack levels required when called:    1
 32517 ;; This function calls:
 32518 ;;		_ADCC_DischargeSampleCapacitor
 32519 ;;		_ADCC_StartConversion
 32520 ;; This function is called by:
 32521 ;;		_start_adc_scan
 32522 ;;		_ADCC_ThresholdISR
 32523 ;; This function uses a reentrant model
 32524 ;;
 32525                           
 32526                           	psect	text156
 32527  019E1A                     __ptext156:
 32528                           	opt callstack 0
 32529  019E1A                     _adc_int_t_handler:
 32530                           	opt callstack 3
 32531                           
 32532                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 32533                           
 32534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32535                           ;incstack = 0
 32536  019E1A  013E               	movlb	62	; () banked
 32537  019E1C  51E6               	movf	230,w,b	;volatile
 32538  019E1E  006F FB9C  F001    	movff	16103,btemp	;volatile
 32539  019E24  6A02               	clrf	(btemp+1)^0,c
 32540  019E26  0060  F004  F002   	movff	btemp,btemp+1
 32541  019E2C  6A01               	clrf	btemp^0,c
 32542  019E2E  2601               	addwf	btemp^0,f,c
 32543  019E30  0E00               	movlw	0
 32544  019E32  2202               	addwfc	(btemp+1)^0,f,c
 32545  019E34  0100               	movlb	0	; () banked
 32546  019E36  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 32547  019E38  0D02               	mullw	2
 32548  019E3A  50F3               	movf	243,w,c
 32549  019E3C  0FC4               	addlw	low _R
 32550  019E3E  6ED9               	movwf	fsr2l,c
 32551  019E40  6ADA               	clrf	fsr2h,c
 32552  019E42  0060  F007  FFDE   	movff	btemp,postinc2
 32553  019E48  0060  F00B  FFDD   	movff	btemp+1,postdec2
 32554  019E4E                     l10602:
 32555                           
 32556                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 32557  019E4E  0100               	movlb	0	; () banked
 32558  019E50  2BE8               	incf	(_R+36)& (0+255),f,b	;volatile
 32559  019E52  0E0D               	movlw	13
 32560  019E54  65E8               	cpfsgt	(_R+36)& (0+255),b	;volatile
 32561  019E56  D003               	goto	l10608
 32562                           
 32563                           ; BSR set to: 0
 32564                           ;daq.c: 151:    R.done = 1;
 32565  019E58  0E01               	movlw	1
 32566  019E5A  6FEB               	movwf	(_R+39)& (0+255),b	;volatile
 32567  019E5C  0012               	return	
 32568  019E5E                     l10608:
 32569                           
 32570                           ; BSR set to: 0
 32571                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 32572  019E5E  0060  F3A0  F00C   	movff	_R+36,btemp+11	;volatile
 32573  019E64  EE20  F0E9         	lfsr	2,_R+37	;volatile
 32574  019E68  006F FF78  F009    	movff	postinc2,btemp+8
 32575  019E6E  006F FF74  F00A    	movff	postdec2,btemp+9
 32576  019E74  2A0C               	incf	(btemp+11)^0,f,c
 32577  019E76  D003               	goto	u980_44
 32578  019E78                     u980_45:
 32579  019E78  90D8               	bcf	status,0,c
 32580  019E7A  320A               	rrcf	(btemp+9)^0,f,c
 32581  019E7C  3209               	rrcf	(btemp+8)^0,f,c
 32582  019E7E                     u980_44:
 32583  019E7E  2E0C               	decfsz	(btemp+11)^0,f,c
 32584  019E80  D7FB               	goto	u980_45
 32585  019E82  A009               	btfss	(btemp+8)^0,0,c
 32586  019E84  D7E4               	goto	l10602
 32587                           
 32588                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 32589  019E86  EC9F  F0D8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 32590                           
 32591                           ; BSR set to: 62
 32592                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 32593  019E8A  0100               	movlb	0	; () banked
 32594  019E8C  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 32595  019E8E  0B0F               	andlw	15
 32596  019E90  6EE6               	movwf	postinc1,c
 32597  019E92  EC44  F0D8         	call	_ADCC_StartConversion	;wreg free
 32598                           
 32599                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32600  019E96  0012               	return		;funcret
 32601  019E98                     __end_of_adc_int_t_handler:
 32602                           	opt callstack 0
 32603                           
 32604 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 32605 ;; Defined at:
 32606 ;;		line 339 in file "mcc_generated_files/adcc.c"
 32607 ;; Parameters:    Size  Location     Type
 32608 ;;		None
 32609 ;; Auto vars:     Size  Location     Type
 32610 ;;		None
 32611 ;; Return value:  Size  Location     Type
 32612 ;;                  1  [STACK] void 
 32613 ;; Registers used:
 32614 ;;		None
 32615 ;; Tracked objects:
 32616 ;;		On entry : 3F/0
 32617 ;;		On exit  : 0/0
 32618 ;;		Unchanged: 0/0
 32619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32624 ;;Total ram usage:        0 bytes
 32625 ;; Hardware stack levels used:    1
 32626 ;; This function calls:
 32627 ;;		Nothing
 32628 ;; This function is called by:
 32629 ;;		_ADCC_Initialize
 32630 ;;		_ADCC_ISR
 32631 ;;		_ADCC_ThresholdISR
 32632 ;; This function uses a reentrant model
 32633 ;;
 32634                           
 32635                           	psect	text157
 32636  01B18C                     __ptext157:
 32637                           	opt callstack 0
 32638  01B18C                     _ADCC_DefaultInterruptHandler:
 32639                           	opt callstack 4
 32640                           
 32641                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32642                           
 32643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32644                           ;incstack = 0
 32645  01B18C  0012               	return		;funcret
 32646  01B18E                     __end_of_ADCC_DefaultInterruptHandler:
 32647                           	opt callstack 0
 32648                           
 32649 ;; *************** function _adc_int_handler *****************
 32650 ;; Defined at:
 32651 ;;		line 133 in file "daq.c"
 32652 ;; Parameters:    Size  Location     Type
 32653 ;;		None
 32654 ;; Auto vars:     Size  Location     Type
 32655 ;;		None
 32656 ;; Return value:  Size  Location     Type
 32657 ;;                  1  [STACK] void 
 32658 ;; Registers used:
 32659 ;;		None
 32660 ;; Tracked objects:
 32661 ;;		On entry : 3F/0
 32662 ;;		On exit  : 0/0
 32663 ;;		Unchanged: 0/0
 32664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32669 ;;Total ram usage:        0 bytes
 32670 ;; Hardware stack levels used:    1
 32671 ;; This function calls:
 32672 ;;		Nothing
 32673 ;; This function is called by:
 32674 ;;		_start_adc_scan
 32675 ;;		_ADCC_ISR
 32676 ;; This function uses a reentrant model
 32677 ;;
 32678                           
 32679                           	psect	text158
 32680  01B18E                     __ptext158:
 32681                           	opt callstack 0
 32682  01B18E                     _adc_int_handler:
 32683                           	opt callstack 4
 32684                           
 32685                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32686                           
 32687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32688                           ;incstack = 0
 32689  01B18E  0012               	return		;funcret
 32690  01B190                     __end_of_adc_int_handler:
 32691                           	opt callstack 0
 32692                           
 32693 ;; *************** function _ADCC_ThresholdISR *****************
 32694 ;; Defined at:
 32695 ;;		line 327 in file "mcc_generated_files/adcc.c"
 32696 ;; Parameters:    Size  Location     Type
 32697 ;;		None
 32698 ;; Auto vars:     Size  Location     Type
 32699 ;;		None
 32700 ;; Return value:  Size  Location     Type
 32701 ;;                  1    wreg      void 
 32702 ;; Registers used:
 32703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 32704 ;; Tracked objects:
 32705 ;;		On entry : 0/0
 32706 ;;		On exit  : 0/0
 32707 ;;		Unchanged: 0/0
 32708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32711 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32712 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32713 ;;Total ram usage:        5 bytes
 32714 ;; Hardware stack levels used:    1
 32715 ;; Hardware stack levels required when called:    2
 32716 ;; This function calls:
 32717 ;;		Absolute function
 32718 ;;		_ADCC_DefaultInterruptHandler
 32719 ;;		_adc_int_t_handler
 32720 ;; This function is called by:
 32721 ;;		Interrupt level 2
 32722 ;; This function uses a non-reentrant model
 32723 ;;
 32724                           
 32725                           	psect	text159
 32726  019F6C                     __ptext159:
 32727                           	opt callstack 0
 32728  019F6C                     _ADCC_ThresholdISR:
 32729                           	opt callstack 3
 32730                           
 32731                           ;incstack = 0
 32732  019F6C  0060  F004  F038   	movff	btemp,??_ADCC_ThresholdISR
 32733  019F72  0060  F008  F039   	movff	btemp+1,??_ADCC_ThresholdISR+1
 32734  019F78  0060  F024  F03A   	movff	btemp+8,??_ADCC_ThresholdISR+2
 32735  019F7E  0060  F028  F03B   	movff	btemp+9,??_ADCC_ThresholdISR+3
 32736  019F84  0060  F030  F03C   	movff	btemp+11,??_ADCC_ThresholdISR+4
 32737  019F8A  EE14  F0C2         	lfsr	1,___inthi_sp
 32738                           
 32739                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 32740  019F8E  0139               	movlb	57	; () banked
 32741  019F90  97A1               	bcf	161,3,b	;volatile
 32742                           
 32743                           ; BSR set to: 57
 32744                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 32745  019F92  0100               	movlb	0	; () banked
 32746  019F94  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 32747  019F96  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 32748  019F98  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 32749  019F9A  B4D8               	btfsc	status,2,c
 32750  019F9C  D00C               	goto	i2u985_49
 32751                           
 32752                           ; BSR set to: 0
 32753                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 32754  019F9E  D801               	call	i2u985_48
 32755  019FA0  D00A               	goto	i2u985_49
 32756  019FA2                     i2u985_48:
 32757  019FA2  0005               	push	
 32758  019FA4  6EFA               	movwf	pclath,c
 32759  019FA6  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 32760  019FA8  6EFD               	movwf	tosl,c
 32761  019FAA  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 32762  019FAC  6EFE               	movwf	tosh,c
 32763  019FAE  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 32764  019FB0  6EFF               	movwf	tosu,c
 32765  019FB2  50FA               	movf	pclath,w,c
 32766  019FB4  0012               	return		;indir
 32767  019FB6                     i2u985_49:
 32768  019FB6  0060  F0F0  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 32769  019FBC  0060  F0EC  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 32770  019FC2  0060  F0E8  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 32771  019FC8  0060  F0E4  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 32772  019FCE  0060  F0E0  F001   	movff	??_ADCC_ThresholdISR,btemp
 32773  019FD4  0011               	retfie		f
 32774  019FD6                     __end_of_ADCC_ThresholdISR:
 32775                           	opt callstack 0
 32776                           
 32777 ;; *************** function _UART1_rx_vect_isr *****************
 32778 ;; Defined at:
 32779 ;;		line 181 in file "mcc_generated_files/uart1.c"
 32780 ;; Parameters:    Size  Location     Type
 32781 ;;		None
 32782 ;; Auto vars:     Size  Location     Type
 32783 ;;		None
 32784 ;; Return value:  Size  Location     Type
 32785 ;;                  1    wreg      void 
 32786 ;; Registers used:
 32787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 32788 ;; Tracked objects:
 32789 ;;		On entry : 0/0
 32790 ;;		On exit  : 0/0
 32791 ;;		Unchanged: 0/0
 32792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32797 ;;Total ram usage:        0 bytes
 32798 ;; Hardware stack levels used:    1
 32799 ;; Hardware stack levels required when called:    1
 32800 ;; This function calls:
 32801 ;;		Absolute function
 32802 ;;		_UART1_Receive_ISR
 32803 ;; This function is called by:
 32804 ;;		Interrupt level 2
 32805 ;; This function uses a non-reentrant model
 32806 ;;
 32807                           
 32808                           	psect	text160
 32809  01AD48                     __ptext160:
 32810                           	opt callstack 0
 32811  01AD48                     _UART1_rx_vect_isr:
 32812                           	opt callstack 4
 32813                           
 32814                           ;incstack = 0
 32815  01AD48  EE14  F0C2         	lfsr	1,___inthi_sp
 32816                           
 32817                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 32818  01AD4C  0100               	movlb	0	; () banked
 32819  01AD4E  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32820  01AD50  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32821  01AD52  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 32822  01AD54  B4D8               	btfsc	status,2,c
 32823  01AD56  0011               	retfie		f
 32824                           
 32825                           ; BSR set to: 0
 32826                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 32827  01AD58  D801               	call	i2u987_48
 32828  01AD5A  0011               	retfie		f
 32829  01AD5C                     i2u987_48:
 32830  01AD5C  0005               	push	
 32831  01AD5E  6EFA               	movwf	pclath,c
 32832  01AD60  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32833  01AD62  6EFD               	movwf	tosl,c
 32834  01AD64  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32835  01AD66  6EFE               	movwf	tosh,c
 32836  01AD68  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 32837  01AD6A  6EFF               	movwf	tosu,c
 32838  01AD6C  50FA               	movf	pclath,w,c
 32839  01AD6E  0012               	return		;indir
 32840  01AD70                     __end_of_UART1_rx_vect_isr:
 32841                           	opt callstack 0
 32842                           
 32843 ;; *************** function _UART1_Receive_ISR *****************
 32844 ;; Defined at:
 32845 ;;		line 192 in file "mcc_generated_files/uart1.c"
 32846 ;; Parameters:    Size  Location     Type
 32847 ;;		None
 32848 ;; Auto vars:     Size  Location     Type
 32849 ;;		None
 32850 ;; Return value:  Size  Location     Type
 32851 ;;                  1  [STACK] void 
 32852 ;; Registers used:
 32853 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32854 ;; Tracked objects:
 32855 ;;		On entry : 3F/0
 32856 ;;		On exit  : 0/0
 32857 ;;		Unchanged: 0/0
 32858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32863 ;;Total ram usage:        0 bytes
 32864 ;; Hardware stack levels used:    1
 32865 ;; This function calls:
 32866 ;;		Nothing
 32867 ;; This function is called by:
 32868 ;;		_UART1_Initialize
 32869 ;;		_UART1_rx_vect_isr
 32870 ;; This function uses a reentrant model
 32871 ;;
 32872                           
 32873                           	psect	text161
 32874  01AFB0                     __ptext161:
 32875                           	opt callstack 0
 32876  01AFB0                     _UART1_Receive_ISR:
 32877                           	opt callstack 4
 32878                           
 32879                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 32880                           
 32881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32882                           ;incstack = 0
 32883  01AFB0  5037               	movf	_uart1RxHead^0,w,c
 32884  01AFB2  0F6C               	addlw	low _uart1RxBuffer
 32885  01AFB4  6ED9               	movwf	fsr2l,c
 32886  01AFB6  6ADA               	clrf	fsr2h,c
 32887  01AFB8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 32888  01AFBE  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 32889                           
 32890                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 32891  01AFC0  0E07               	movlw	7
 32892  01AFC2  6437               	cpfsgt	_uart1RxHead^0,c
 32893  01AFC4  D001               	goto	l10236
 32894                           
 32895                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 32896  01AFC6  6A37               	clrf	_uart1RxHead^0,c	;volatile
 32897  01AFC8                     l10236:
 32898                           
 32899                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 32900  01AFC8  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 32901                           
 32902                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32903  01AFCA  0012               	return		;funcret
 32904  01AFCC                     __end_of_UART1_Receive_ISR:
 32905                           	opt callstack 0
 32906                           
 32907 ;; *************** function _UART2_tx_vect_isr *****************
 32908 ;; Defined at:
 32909 ;;		line 195 in file "mcc_generated_files/uart2.c"
 32910 ;; Parameters:    Size  Location     Type
 32911 ;;		None
 32912 ;; Auto vars:     Size  Location     Type
 32913 ;;		None
 32914 ;; Return value:  Size  Location     Type
 32915 ;;                  1    wreg      void 
 32916 ;; Registers used:
 32917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 32918 ;; Tracked objects:
 32919 ;;		On entry : 0/0
 32920 ;;		On exit  : 0/0
 32921 ;;		Unchanged: 0/0
 32922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32927 ;;Total ram usage:        0 bytes
 32928 ;; Hardware stack levels used:    1
 32929 ;; Hardware stack levels required when called:    1
 32930 ;; This function calls:
 32931 ;;		Absolute function
 32932 ;;		_UART2_Transmit_ISR
 32933 ;; This function is called by:
 32934 ;;		Interrupt level 2
 32935 ;; This function uses a non-reentrant model
 32936 ;;
 32937                           
 32938                           	psect	text162
 32939  01AD70                     __ptext162:
 32940                           	opt callstack 0
 32941  01AD70                     _UART2_tx_vect_isr:
 32942                           	opt callstack 4
 32943                           
 32944                           ;incstack = 0
 32945  01AD70  EE14  F0C2         	lfsr	1,___inthi_sp
 32946                           
 32947                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 32948  01AD74  0100               	movlb	0	; () banked
 32949  01AD76  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 32950  01AD78  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 32951  01AD7A  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 32952  01AD7C  B4D8               	btfsc	status,2,c
 32953  01AD7E  0011               	retfie		f
 32954                           
 32955                           ; BSR set to: 0
 32956                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 32957  01AD80  D801               	call	i2u989_48
 32958  01AD82  0011               	retfie		f
 32959  01AD84                     i2u989_48:
 32960  01AD84  0005               	push	
 32961  01AD86  6EFA               	movwf	pclath,c
 32962  01AD88  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 32963  01AD8A  6EFD               	movwf	tosl,c
 32964  01AD8C  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 32965  01AD8E  6EFE               	movwf	tosh,c
 32966  01AD90  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 32967  01AD92  6EFF               	movwf	tosu,c
 32968  01AD94  50FA               	movf	pclath,w,c
 32969  01AD96  0012               	return		;indir
 32970  01AD98                     __end_of_UART2_tx_vect_isr:
 32971                           	opt callstack 0
 32972                           
 32973 ;; *************** function _UART2_Transmit_ISR *****************
 32974 ;; Defined at:
 32975 ;;		line 213 in file "mcc_generated_files/uart2.c"
 32976 ;; Parameters:    Size  Location     Type
 32977 ;;		None
 32978 ;; Auto vars:     Size  Location     Type
 32979 ;;		None
 32980 ;; Return value:  Size  Location     Type
 32981 ;;                  1  [STACK] void 
 32982 ;; Registers used:
 32983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32984 ;; Tracked objects:
 32985 ;;		On entry : 3F/0
 32986 ;;		On exit  : 3B/39
 32987 ;;		Unchanged: 0/0
 32988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32993 ;;Total ram usage:        0 bytes
 32994 ;; Hardware stack levels used:    1
 32995 ;; This function calls:
 32996 ;;		Nothing
 32997 ;; This function is called by:
 32998 ;;		_UART2_Initialize
 32999 ;;		_UART2_tx_vect_isr
 33000 ;; This function uses a reentrant model
 33001 ;;
 33002                           
 33003                           	psect	text163
 33004  01AAC0                     __ptext163:
 33005                           	opt callstack 0
 33006  01AAC0                     _UART2_Transmit_ISR:
 33007                           	opt callstack 4
 33008                           
 33009                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 33010                           
 33011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33012                           ;incstack = 0
 33013  01AAC0  0E40               	movlw	64
 33014  01AAC2  6032               	cpfslt	_uart2TxBufferRemaining^0,c
 33015  01AAC4  D010               	goto	l673
 33016                           
 33017                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 33018  01AAC6  0E54               	movlw	low _uart2TxBuffer
 33019  01AAC8  2433               	addwf	_uart2TxTail^0,w,c	;volatile
 33020  01AACA  6ED9               	movwf	fsr2l,c
 33021  01AACC  6ADA               	clrf	fsr2h,c
 33022  01AACE  0E03               	movlw	high _uart2TxBuffer
 33023  01AAD0  22DA               	addwfc	fsr2h,f,c
 33024  01AAD2  50DF               	movf	indf2,w,c
 33025  01AAD4  013D               	movlb	61	; () banked
 33026  01AAD6  6FD2               	movwf	210,b	;volatile
 33027                           
 33028                           ; BSR set to: 61
 33029  01AAD8  2A33               	incf	_uart2TxTail^0,f,c	;volatile
 33030                           
 33031                           ; BSR set to: 61
 33032                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 33033  01AADA  0E3F               	movlw	63
 33034  01AADC  6433               	cpfsgt	_uart2TxTail^0,c
 33035  01AADE  D001               	goto	l10248
 33036                           
 33037                           ; BSR set to: 61
 33038                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 33039  01AAE0  6A33               	clrf	_uart2TxTail^0,c	;volatile
 33040  01AAE2                     l10248:
 33041                           
 33042                           ; BSR set to: 61
 33043                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 33044  01AAE2  2A32               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 33045                           
 33046                           ;mcc_generated_files/uart2.c: 224:     }
 33047  01AAE4  0012               	return	
 33048  01AAE6                     l673:
 33049                           
 33050                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 33051  01AAE6  0139               	movlb	57	; () banked
 33052  01AAE8  9796               	bcf	150,3,b	;volatile
 33053                           
 33054                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33055  01AAEA  0012               	return		;funcret
 33056  01AAEC                     __end_of_UART2_Transmit_ISR:
 33057                           	opt callstack 0
 33058                           
 33059 ;; *************** function _UART2_rx_vect_isr *****************
 33060 ;; Defined at:
 33061 ;;		line 203 in file "mcc_generated_files/uart2.c"
 33062 ;; Parameters:    Size  Location     Type
 33063 ;;		None
 33064 ;; Auto vars:     Size  Location     Type
 33065 ;;		None
 33066 ;; Return value:  Size  Location     Type
 33067 ;;                  1    wreg      void 
 33068 ;; Registers used:
 33069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33070 ;; Tracked objects:
 33071 ;;		On entry : 0/0
 33072 ;;		On exit  : 0/0
 33073 ;;		Unchanged: 0/0
 33074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33079 ;;Total ram usage:        0 bytes
 33080 ;; Hardware stack levels used:    1
 33081 ;; Hardware stack levels required when called:    1
 33082 ;; This function calls:
 33083 ;;		Absolute function
 33084 ;;		_UART2_Receive_ISR
 33085 ;; This function is called by:
 33086 ;;		Interrupt level 2
 33087 ;; This function uses a non-reentrant model
 33088 ;;
 33089                           
 33090                           	psect	text164
 33091  01AD98                     __ptext164:
 33092                           	opt callstack 0
 33093  01AD98                     _UART2_rx_vect_isr:
 33094                           	opt callstack 4
 33095                           
 33096                           ;incstack = 0
 33097  01AD98  EE14  F0C2         	lfsr	1,___inthi_sp
 33098                           
 33099                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 33100  01AD9C  0100               	movlb	0	; () banked
 33101  01AD9E  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33102  01ADA0  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33103  01ADA2  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33104  01ADA4  B4D8               	btfsc	status,2,c
 33105  01ADA6  0011               	retfie		f
 33106                           
 33107                           ; BSR set to: 0
 33108                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 33109  01ADA8  D801               	call	i2u991_48
 33110  01ADAA  0011               	retfie		f
 33111  01ADAC                     i2u991_48:
 33112  01ADAC  0005               	push	
 33113  01ADAE  6EFA               	movwf	pclath,c
 33114  01ADB0  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33115  01ADB2  6EFD               	movwf	tosl,c
 33116  01ADB4  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33117  01ADB6  6EFE               	movwf	tosh,c
 33118  01ADB8  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33119  01ADBA  6EFF               	movwf	tosu,c
 33120  01ADBC  50FA               	movf	pclath,w,c
 33121  01ADBE  0012               	return		;indir
 33122  01ADC0                     __end_of_UART2_rx_vect_isr:
 33123                           	opt callstack 0
 33124                           
 33125 ;; *************** function _UART2_Receive_ISR *****************
 33126 ;; Defined at:
 33127 ;;		line 233 in file "mcc_generated_files/uart2.c"
 33128 ;; Parameters:    Size  Location     Type
 33129 ;;		None
 33130 ;; Auto vars:     Size  Location     Type
 33131 ;;		None
 33132 ;; Return value:  Size  Location     Type
 33133 ;;                  1  [STACK] void 
 33134 ;; Registers used:
 33135 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33136 ;; Tracked objects:
 33137 ;;		On entry : 3F/0
 33138 ;;		On exit  : 0/0
 33139 ;;		Unchanged: 0/0
 33140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33145 ;;Total ram usage:        0 bytes
 33146 ;; Hardware stack levels used:    1
 33147 ;; This function calls:
 33148 ;;		Nothing
 33149 ;; This function is called by:
 33150 ;;		_UART2_Initialize
 33151 ;;		_UART2_rx_vect_isr
 33152 ;; This function uses a reentrant model
 33153 ;;
 33154                           
 33155                           	psect	text165
 33156  01AF76                     __ptext165:
 33157                           	opt callstack 0
 33158  01AF76                     _UART2_Receive_ISR:
 33159                           	opt callstack 4
 33160                           
 33161                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 33162                           
 33163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33164                           ;incstack = 0
 33165  01AF76  0E00               	movlw	low _uart2RxBuffer
 33166  01AF78  2431               	addwf	_uart2RxHead^0,w,c	;volatile
 33167  01AF7A  6ED9               	movwf	fsr2l,c
 33168  01AF7C  6ADA               	clrf	fsr2h,c
 33169  01AF7E  0E05               	movlw	high _uart2RxBuffer
 33170  01AF80  22DA               	addwfc	fsr2h,f,c
 33171  01AF82  006F F743 FFDF     	movff	15824,indf2	;volatile
 33172  01AF88  2A31               	incf	_uart2RxHead^0,f,c	;volatile
 33173                           
 33174                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 33175  01AF8A  2831               	incf	_uart2RxHead^0,w,c
 33176  01AF8C  B4D8               	btfsc	status,2,c
 33177                           
 33178                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 33179  01AF8E  6A31               	clrf	_uart2RxHead^0,c	;volatile
 33180                           
 33181                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 33182  01AF90  2A2F               	incf	_uart2RxCount^0,f,c	;volatile
 33183                           
 33184                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33185  01AF92  0012               	return		;funcret
 33186  01AF94                     __end_of_UART2_Receive_ISR:
 33187                           	opt callstack 0
 33188                           
 33189 ;; *************** function _TMR6_ISR *****************
 33190 ;; Defined at:
 33191 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 33192 ;; Parameters:    Size  Location     Type
 33193 ;;		None
 33194 ;; Auto vars:     Size  Location     Type
 33195 ;;		None
 33196 ;; Return value:  Size  Location     Type
 33197 ;;                  1    wreg      void 
 33198 ;; Registers used:
 33199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 33200 ;; Tracked objects:
 33201 ;;		On entry : 0/0
 33202 ;;		On exit  : 0/0
 33203 ;;		Unchanged: 0/0
 33204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33207 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33209 ;;Total ram usage:        1 bytes
 33210 ;; Hardware stack levels used:    1
 33211 ;; Hardware stack levels required when called:    2
 33212 ;; This function calls:
 33213 ;;		_TMR6_CallBack
 33214 ;; This function is called by:
 33215 ;;		Interrupt level 2
 33216 ;; This function uses a non-reentrant model
 33217 ;;
 33218                           
 33219                           	psect	text166
 33220  01AFE8                     __ptext166:
 33221                           	opt callstack 0
 33222  01AFE8                     _TMR6_ISR:
 33223                           	opt callstack 3
 33224                           
 33225                           ;incstack = 0
 33226  01AFE8  0060  F004  F03D   	movff	btemp,??_TMR6_ISR
 33227  01AFEE  EE14  F0C2         	lfsr	1,___inthi_sp
 33228                           
 33229                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 33230  01AFF2  0139               	movlb	57	; () banked
 33231  01AFF4  91A9               	bcf	169,0,b	;volatile
 33232                           
 33233                           ; BSR set to: 57
 33234                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 33235  01AFF6  EC4C  F0D7         	call	_TMR6_CallBack	;wreg free
 33236  01AFFA  0060  F0F4  F001   	movff	??_TMR6_ISR,btemp
 33237  01B000  0011               	retfie		f
 33238  01B002                     __end_of_TMR6_ISR:
 33239                           	opt callstack 0
 33240                           
 33241 ;; *************** function _TMR6_CallBack *****************
 33242 ;; Defined at:
 33243 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 33244 ;; Parameters:    Size  Location     Type
 33245 ;;		None
 33246 ;; Auto vars:     Size  Location     Type
 33247 ;;		None
 33248 ;; Return value:  Size  Location     Type
 33249 ;;                  1  [STACK] void 
 33250 ;; Registers used:
 33251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 33252 ;; Tracked objects:
 33253 ;;		On entry : 3F/39
 33254 ;;		On exit  : 0/0
 33255 ;;		Unchanged: 0/0
 33256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33261 ;;Total ram usage:        0 bytes
 33262 ;; Hardware stack levels used:    1
 33263 ;; Hardware stack levels required when called:    1
 33264 ;; This function calls:
 33265 ;;		Absolute function
 33266 ;;		_TMR6_DefaultInterruptHandler
 33267 ;; This function is called by:
 33268 ;;		_TMR6_ISR
 33269 ;; This function uses a reentrant model
 33270 ;;
 33271                           
 33272                           	psect	text167
 33273  01AE98                     __ptext167:
 33274                           	opt callstack 0
 33275  01AE98                     _TMR6_CallBack:
 33276                           	opt callstack 3
 33277                           
 33278                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 33279                           
 33280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33281                           ;incstack = 0
 33282  01AE98  0100               	movlb	0	; () banked
 33283  01AE9A  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 33284  01AE9C  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 33285  01AE9E  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 33286  01AEA0  B4D8               	btfsc	status,2,c
 33287  01AEA2  0012               	return	
 33288                           
 33289                           ; BSR set to: 0
 33290                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 33291  01AEA4  D801               	call	u952_48
 33292  01AEA6  0012               	return	
 33293  01AEA8                     u952_48:
 33294  01AEA8  0005               	push	
 33295  01AEAA  6EFA               	movwf	pclath,c
 33296  01AEAC  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 33297  01AEAE  6EFD               	movwf	tosl,c
 33298  01AEB0  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 33299  01AEB2  6EFE               	movwf	tosh,c
 33300  01AEB4  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 33301  01AEB6  6EFF               	movwf	tosu,c
 33302  01AEB8  50FA               	movf	pclath,w,c
 33303  01AEBA  0012               	return		;indir
 33304  01AEBC                     __end_of_TMR6_CallBack:
 33305                           	opt callstack 0
 33306                           
 33307 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 33308 ;; Defined at:
 33309 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 33310 ;; Parameters:    Size  Location     Type
 33311 ;;		None
 33312 ;; Auto vars:     Size  Location     Type
 33313 ;;  i               1  [STACK] unsigned char 
 33314 ;; Return value:  Size  Location     Type
 33315 ;;                  1  [STACK] void 
 33316 ;; Registers used:
 33317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 33318 ;; Tracked objects:
 33319 ;;		On entry : 3F/0
 33320 ;;		On exit  : 0/0
 33321 ;;		Unchanged: 0/0
 33322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33327 ;;Total ram usage:        0 bytes
 33328 ;; Hardware stack levels used:    1
 33329 ;; This function calls:
 33330 ;;		Nothing
 33331 ;; This function is called by:
 33332 ;;		_TMR6_Initialize
 33333 ;;		_TMR6_CallBack
 33334 ;; This function uses a reentrant model
 33335 ;;
 33336                           
 33337                           	psect	text168
 33338  01A3C8                     __ptext168:
 33339                           	opt callstack 0
 33340  01A3C8                     _TMR6_DefaultInterruptHandler:
 33341                           	opt callstack 0
 33342                           
 33343                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33344  01A3C8  52E6               	movf	postinc1,f,c
 33345                           
 33346                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 33347                           ;stkvar	_i @ sp[(-1)+0]
 33348                           
 33349                           ;incstack = 0
 33350  01A3CA  0EFF               	movlw	-1
 33351  01A3CC  6AE3               	clrf	plusw1,c
 33352  01A3CE                     l9818:
 33353                           
 33354                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 33355                           ;stkvar	_i @ sp[(-1)+0]
 33356  01A3CE  0EFF               	movlw	-1
 33357  01A3D0  50E3               	movf	plusw1,w,c
 33358  01A3D2  0D02               	mullw	2
 33359  01A3D4  0EE5               	movlw	low _tickCount
 33360  01A3D6  24F3               	addwf	243,w,c
 33361  01A3D8  6ED9               	movwf	fsr2l,c
 33362  01A3DA  0E02               	movlw	high _tickCount
 33363  01A3DC  20F4               	addwfc	prodh,w,c
 33364  01A3DE  6EDA               	movwf	fsr2h,c
 33365  01A3E0  50DE               	movf	postinc2,w,c
 33366  01A3E2  10DE               	iorwf	postinc2,w,c
 33367  01A3E4  B4D8               	btfsc	status,2,c
 33368  01A3E6  D00C               	goto	l9822
 33369                           
 33370                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 33371                           ;stkvar	_i @ sp[(-1)+0]
 33372  01A3E8  0EFF               	movlw	-1
 33373  01A3EA  50E3               	movf	plusw1,w,c
 33374  01A3EC  0D02               	mullw	2
 33375  01A3EE  0EE5               	movlw	low _tickCount
 33376  01A3F0  24F3               	addwf	243,w,c
 33377  01A3F2  6ED9               	movwf	fsr2l,c
 33378  01A3F4  0E02               	movlw	high _tickCount
 33379  01A3F6  20F4               	addwfc	prodh,w,c
 33380  01A3F8  6EDA               	movwf	fsr2h,c
 33381  01A3FA  06DE               	decf	postinc2,f,c
 33382  01A3FC  0E00               	movlw	0
 33383  01A3FE  5ADD               	subwfb	postdec2,f,c
 33384  01A400                     l9822:
 33385                           
 33386                           ;mcc_generated_files/tmr6.c: 207:  }
 33387                           ;stkvar	_i @ sp[(-1)+0]
 33388  01A400  0EFF               	movlw	-1
 33389  01A402  2AE3               	incf	plusw1,f,c
 33390                           
 33391                           ;stkvar	_i @ sp[(-1)+0]
 33392  01A404  0EFF               	movlw	-1
 33393  01A406  006F FF8C  F001    	movff	plusw1,btemp
 33394  01A40C  0E0B               	movlw	11
 33395  01A40E  6401               	cpfsgt	btemp^0,c
 33396  01A410  D7DE               	goto	l9818
 33397                           
 33398                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33399  01A412  52E5               	movf	postdec1,f,c
 33400  01A414  0012               	return		;funcret
 33401  01A416                     __end_of_TMR6_DefaultInterruptHandler:
 33402                           	opt callstack 0
 33403                           
 33404 ;; *************** function _DMA1_DMASCNT_ISR *****************
 33405 ;; Defined at:
 33406 ;;		line 126 in file "mcc_generated_files/dma1.c"
 33407 ;; Parameters:    Size  Location     Type
 33408 ;;		None
 33409 ;; Auto vars:     Size  Location     Type
 33410 ;;		None
 33411 ;; Return value:  Size  Location     Type
 33412 ;;                  1    wreg      void 
 33413 ;; Registers used:
 33414 ;;		None
 33415 ;; Tracked objects:
 33416 ;;		On entry : 0/0
 33417 ;;		On exit  : 3F/0
 33418 ;;		Unchanged: 0/0
 33419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33424 ;;Total ram usage:        0 bytes
 33425 ;; Hardware stack levels used:    1
 33426 ;; This function calls:
 33427 ;;		Nothing
 33428 ;; This function is called by:
 33429 ;;		Interrupt level 2
 33430 ;; This function uses a non-reentrant model
 33431 ;;
 33432                           
 33433                           	psect	text169
 33434  01B0F8                     __ptext169:
 33435                           	opt callstack 0
 33436  01B0F8                     _DMA1_DMASCNT_ISR:
 33437                           	opt callstack 5
 33438                           
 33439                           ;incstack = 0
 33440  01B0F8  EE14  F0C2         	lfsr	1,___inthi_sp
 33441                           
 33442                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 33443  01B0FC  0139               	movlb	57	; () banked
 33444  01B0FE  91A2               	bcf	162,0,b	;volatile
 33445                           
 33446                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 33447  01B100  0100               	movlb	0	; () banked
 33448  01B102  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 33449                           
 33450                           ; BSR set to: 0
 33451  01B104  0011               	retfie		f
 33452  01B106                     __end_of_DMA1_DMASCNT_ISR:
 33453                           	opt callstack 0
 33454                           
 33455 ;; *************** function _DMA1_DMADCNT_ISR *****************
 33456 ;; Defined at:
 33457 ;;		line 134 in file "mcc_generated_files/dma1.c"
 33458 ;; Parameters:    Size  Location     Type
 33459 ;;		None
 33460 ;; Auto vars:     Size  Location     Type
 33461 ;;		None
 33462 ;; Return value:  Size  Location     Type
 33463 ;;                  1    wreg      void 
 33464 ;; Registers used:
 33465 ;;		None
 33466 ;; Tracked objects:
 33467 ;;		On entry : 0/0
 33468 ;;		On exit  : 3F/39
 33469 ;;		Unchanged: 0/0
 33470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33475 ;;Total ram usage:        0 bytes
 33476 ;; Hardware stack levels used:    1
 33477 ;; This function calls:
 33478 ;;		Nothing
 33479 ;; This function is called by:
 33480 ;;		Interrupt level 2
 33481 ;; This function uses a non-reentrant model
 33482 ;;
 33483                           
 33484                           	psect	text170
 33485  01B11C                     __ptext170:
 33486                           	opt callstack 0
 33487  01B11C                     _DMA1_DMADCNT_ISR:
 33488                           	opt callstack 5
 33489                           
 33490                           ; BSR set to: 0
 33491                           ;incstack = 0
 33492  01B11C  EE14  F0C2         	lfsr	1,___inthi_sp
 33493                           
 33494                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 33495  01B120  0139               	movlb	57	; () banked
 33496  01B122  93A2               	bcf	162,1,b	;volatile
 33497                           
 33498                           ; BSR set to: 57
 33499  01B124  0011               	retfie		f
 33500  01B126                     __end_of_DMA1_DMADCNT_ISR:
 33501                           	opt callstack 0
 33502                           
 33503 ;; *************** function _DMA1_DMAA_ISR *****************
 33504 ;; Defined at:
 33505 ;;		line 144 in file "mcc_generated_files/dma1.c"
 33506 ;; Parameters:    Size  Location     Type
 33507 ;;		None
 33508 ;; Auto vars:     Size  Location     Type
 33509 ;;		None
 33510 ;; Return value:  Size  Location     Type
 33511 ;;                  1    wreg      void 
 33512 ;; Registers used:
 33513 ;;		None
 33514 ;; Tracked objects:
 33515 ;;		On entry : 0/0
 33516 ;;		On exit  : 3F/39
 33517 ;;		Unchanged: 0/0
 33518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33523 ;;Total ram usage:        0 bytes
 33524 ;; Hardware stack levels used:    1
 33525 ;; This function calls:
 33526 ;;		Nothing
 33527 ;; This function is called by:
 33528 ;;		Interrupt level 2
 33529 ;; This function uses a non-reentrant model
 33530 ;;
 33531                           
 33532                           	psect	text171
 33533  01B128                     __ptext171:
 33534                           	opt callstack 0
 33535  01B128                     _DMA1_DMAA_ISR:
 33536                           	opt callstack 5
 33537                           
 33538                           ; BSR set to: 57
 33539                           ;incstack = 0
 33540  01B128  EE14  F0C2         	lfsr	1,___inthi_sp
 33541                           
 33542                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 33543  01B12C  0139               	movlb	57	; () banked
 33544  01B12E  97A2               	bcf	162,3,b	;volatile
 33545                           
 33546                           ; BSR set to: 57
 33547  01B130  0011               	retfie		f
 33548  01B132                     __end_of_DMA1_DMAA_ISR:
 33549                           	opt callstack 0
 33550                           
 33551 ;; *************** function _DMA1_DMAOR_ISR *****************
 33552 ;; Defined at:
 33553 ;;		line 155 in file "mcc_generated_files/dma1.c"
 33554 ;; Parameters:    Size  Location     Type
 33555 ;;		None
 33556 ;; Auto vars:     Size  Location     Type
 33557 ;;		None
 33558 ;; Return value:  Size  Location     Type
 33559 ;;                  1    wreg      void 
 33560 ;; Registers used:
 33561 ;;		None
 33562 ;; Tracked objects:
 33563 ;;		On entry : 0/0
 33564 ;;		On exit  : 3F/39
 33565 ;;		Unchanged: 0/0
 33566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33571 ;;Total ram usage:        0 bytes
 33572 ;; Hardware stack levels used:    1
 33573 ;; This function calls:
 33574 ;;		Nothing
 33575 ;; This function is called by:
 33576 ;;		Interrupt level 2
 33577 ;; This function uses a non-reentrant model
 33578 ;;
 33579                           
 33580                           	psect	text172
 33581  01B134                     __ptext172:
 33582                           	opt callstack 0
 33583  01B134                     _DMA1_DMAOR_ISR:
 33584                           	opt callstack 5
 33585                           
 33586                           ; BSR set to: 57
 33587                           ;incstack = 0
 33588  01B134  EE14  F0C2         	lfsr	1,___inthi_sp
 33589                           
 33590                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 33591  01B138  0139               	movlb	57	; () banked
 33592  01B13A  95A2               	bcf	162,2,b	;volatile
 33593                           
 33594                           ; BSR set to: 57
 33595  01B13C  0011               	retfie		f
 33596  01B13E                     __end_of_DMA1_DMAOR_ISR:
 33597                           	opt callstack 0
 33598                           
 33599                           ;
 33600                           ; Interrupt Vector Table @ 0x8
 33601                           ;
 33602                           
 33603                           	psect	ivt0x8
 33604  000008                     __pivt0x8:
 33605                           	opt callstack 0
 33606  000008                     ivt0x8_base:
 33607                           	opt callstack 0
 33608                           
 33609                           ; Vector 0 : SWINT
 33610  000008  6C60               	dw	_Default_ISR shr (0+2)
 33611                           
 33612                           ; Vector 1 : HLVD
 33613  00000A  6C60               	dw	_Default_ISR shr (0+2)
 33614                           
 33615                           ; Vector 2 : OSF
 33616  00000C  6C60               	dw	_Default_ISR shr (0+2)
 33617                           
 33618                           ; Vector 3 : CSW
 33619  00000E  6C60               	dw	_Default_ISR shr (0+2)
 33620                           
 33621                           ; Vector 4 : NVM
 33622  000010  6C60               	dw	_Default_ISR shr (0+2)
 33623                           
 33624                           ; Vector 5 : SCAN
 33625  000012  6C60               	dw	_Default_ISR shr (0+2)
 33626                           
 33627                           ; Vector 6 : CRC
 33628  000014  6C60               	dw	_Default_ISR shr (0+2)
 33629                           
 33630                           ; Vector 7 : IOC
 33631  000016  6C60               	dw	_Default_ISR shr (0+2)
 33632                           
 33633                           ; Vector 8 : INT0
 33634  000018  6C3A               	dw	_INT0_ISR shr (0+2)
 33635                           
 33636                           ; Vector 9 : ZCD
 33637  00001A  6C60               	dw	_Default_ISR shr (0+2)
 33638                           
 33639                           ; Vector 10 : AD
 33640  00001C  6AA5               	dw	_ADCC_ISR shr (0+2)
 33641                           
 33642                           ; Vector 11 : ADT
 33643  00001E  67DB               	dw	_ADCC_ThresholdISR shr (0+2)
 33644                           
 33645                           ; Vector 12 : CMP1
 33646  000020  6C60               	dw	_Default_ISR shr (0+2)
 33647                           
 33648                           ; Vector 13 : SMT1
 33649  000022  6C60               	dw	_Default_ISR shr (0+2)
 33650                           
 33651                           ; Vector 14 : SMT1PRA
 33652  000024  6C60               	dw	_Default_ISR shr (0+2)
 33653                           
 33654                           ; Vector 15 : SMT1PRW
 33655  000026  6C60               	dw	_Default_ISR shr (0+2)
 33656                           
 33657                           ; Vector 16 : DMA1SCNT
 33658  000028  6C3E               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 33659                           
 33660                           ; Vector 17 : DMA1DCNT
 33661  00002A  6C47               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 33662                           
 33663                           ; Vector 18 : DMA1OR
 33664  00002C  6C4D               	dw	_DMA1_DMAOR_ISR shr (0+2)
 33665                           
 33666                           ; Vector 19 : DMA1A
 33667  00002E  6C4A               	dw	_DMA1_DMAA_ISR shr (0+2)
 33668                           
 33669                           ; Vector 20 : SPI1RX
 33670  000030  6C60               	dw	_Default_ISR shr (0+2)
 33671                           
 33672                           ; Vector 21 : SPI1TX
 33673  000032  6C60               	dw	_Default_ISR shr (0+2)
 33674                           
 33675                           ; Vector 22 : SPI1
 33676  000034  6C60               	dw	_Default_ISR shr (0+2)
 33677                           
 33678                           ; Vector 23 : I2C1RX
 33679  000036  6C60               	dw	_Default_ISR shr (0+2)
 33680                           
 33681                           ; Vector 24 : I2C1TX
 33682  000038  6C60               	dw	_Default_ISR shr (0+2)
 33683                           
 33684                           ; Vector 25 : I2C1
 33685  00003A  6C60               	dw	_Default_ISR shr (0+2)
 33686                           
 33687                           ; Vector 26 : I2C1E
 33688  00003C  6C60               	dw	_Default_ISR shr (0+2)
 33689                           
 33690                           ; Vector 27 : U1RX
 33691  00003E  6B52               	dw	_UART1_rx_vect_isr shr (0+2)
 33692                           
 33693                           ; Vector 28 : U1TX
 33694  000040  6C60               	dw	_Default_ISR shr (0+2)
 33695                           
 33696                           ; Vector 29 : U1E
 33697  000042  6C60               	dw	_Default_ISR shr (0+2)
 33698                           
 33699                           ; Vector 30 : U1
 33700  000044  6C60               	dw	_Default_ISR shr (0+2)
 33701                           
 33702                           ; Vector 31 : TMR0
 33703  000046  6C60               	dw	_Default_ISR shr (0+2)
 33704                           
 33705                           ; Vector 32 : TMR1
 33706  000048  6C60               	dw	_Default_ISR shr (0+2)
 33707                           
 33708                           ; Vector 33 : TMR1G
 33709  00004A  6C60               	dw	_Default_ISR shr (0+2)
 33710                           
 33711                           ; Vector 34 : TMR2
 33712  00004C  6C60               	dw	_Default_ISR shr (0+2)
 33713                           
 33714                           ; Vector 35 : CCP1
 33715  00004E  6C60               	dw	_Default_ISR shr (0+2)
 33716                           
 33717                           ; Vector 36 : Undefined
 33718  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 33719                           
 33720                           ; Vector 37 : NCO1
 33721  000052  6C60               	dw	_Default_ISR shr (0+2)
 33722                           
 33723                           ; Vector 38 : CWG1
 33724  000054  6C60               	dw	_Default_ISR shr (0+2)
 33725                           
 33726                           ; Vector 39 : CLC1
 33727  000056  6C60               	dw	_Default_ISR shr (0+2)
 33728                           
 33729                           ; Vector 40 : INT1
 33730  000058  69E3               	dw	_INT1_ISR shr (0+2)
 33731                           
 33732                           ; Vector 41 : CMP2
 33733  00005A  6C60               	dw	_Default_ISR shr (0+2)
 33734                           
 33735                           ; Vector 42 : DMA2SCNT
 33736  00005C  6C60               	dw	_Default_ISR shr (0+2)
 33737                           
 33738                           ; Vector 43 : DMA2DCNT
 33739  00005E  6C60               	dw	_Default_ISR shr (0+2)
 33740                           
 33741                           ; Vector 44 : DMA2OR
 33742  000060  6C60               	dw	_Default_ISR shr (0+2)
 33743                           
 33744                           ; Vector 45 : DMA2A
 33745  000062  6C60               	dw	_Default_ISR shr (0+2)
 33746                           
 33747                           ; Vector 46 : I2C2RX
 33748  000064  6C60               	dw	_Default_ISR shr (0+2)
 33749                           
 33750                           ; Vector 47 : I2C2TX
 33751  000066  6C60               	dw	_Default_ISR shr (0+2)
 33752                           
 33753                           ; Vector 48 : I2C2
 33754  000068  6C60               	dw	_Default_ISR shr (0+2)
 33755                           
 33756                           ; Vector 49 : I2C2E
 33757  00006A  6C60               	dw	_Default_ISR shr (0+2)
 33758                           
 33759                           ; Vector 50 : U2RX
 33760  00006C  6B66               	dw	_UART2_rx_vect_isr shr (0+2)
 33761                           
 33762                           ; Vector 51 : U2TX
 33763  00006E  6B5C               	dw	_UART2_tx_vect_isr shr (0+2)
 33764                           
 33765                           ; Vector 52 : U2E
 33766  000070  6C60               	dw	_Default_ISR shr (0+2)
 33767                           
 33768                           ; Vector 53 : U2
 33769  000072  6C60               	dw	_Default_ISR shr (0+2)
 33770                           
 33771                           ; Vector 54 : TMR3
 33772  000074  60AF               	dw	_TMR3_ISR shr (0+2)
 33773                           
 33774                           ; Vector 55 : TMR3G
 33775  000076  6C60               	dw	_Default_ISR shr (0+2)
 33776                           
 33777                           ; Vector 56 : TMR4
 33778  000078  6C60               	dw	_Default_ISR shr (0+2)
 33779                           
 33780                           ; Vector 57 : CCP2
 33781  00007A  6C60               	dw	_Default_ISR shr (0+2)
 33782                           
 33783                           ; Vector 58 : Undefined
 33784  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 33785                           
 33786                           ; Vector 59 : CWG2
 33787  00007E  6C60               	dw	_Default_ISR shr (0+2)
 33788                           
 33789                           ; Vector 60 : CLC2
 33790  000080  6C60               	dw	_Default_ISR shr (0+2)
 33791                           
 33792                           ; Vector 61 : INT2
 33793  000082  6C60               	dw	_Default_ISR shr (0+2)
 33794                           
 33795                           ; Vector 62 : Undefined
 33796  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 33797                           
 33798                           ; Vector 63 : Undefined
 33799  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 33800                           
 33801                           ; Vector 64 : Undefined
 33802  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 33803                           
 33804                           ; Vector 65 : Undefined
 33805  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 33806                           
 33807                           ; Vector 66 : Undefined
 33808  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 33809                           
 33810                           ; Vector 67 : Undefined
 33811  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 33812                           
 33813                           ; Vector 68 : Undefined
 33814  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 33815                           
 33816                           ; Vector 69 : Undefined
 33817  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 33818                           
 33819                           ; Vector 70 : TMR5
 33820  000094  689E               	dw	_TMR5_ISR shr (0+2)
 33821                           
 33822                           ; Vector 71 : TMR5G
 33823  000096  6C60               	dw	_Default_ISR shr (0+2)
 33824                           
 33825                           ; Vector 72 : TMR6
 33826  000098  6BFA               	dw	_TMR6_ISR shr (0+2)
 33827                           
 33828                           ; Vector 73 : CCP3
 33829  00009A  6C60               	dw	_Default_ISR shr (0+2)
 33830                           
 33831                           ; Vector 74 : CWG3
 33832  00009C  6C60               	dw	_Default_ISR shr (0+2)
 33833                           
 33834                           ; Vector 75 : CLC3
 33835  00009E  6C60               	dw	_Default_ISR shr (0+2)
 33836                           
 33837                           ; Vector 76 : Undefined
 33838  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 33839                           
 33840                           ; Vector 77 : Undefined
 33841  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 33842                           
 33843                           ; Vector 78 : Undefined
 33844  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 33845                           
 33846                           ; Vector 79 : Undefined
 33847  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 33848                           
 33849                           ; Vector 80 : CCP4
 33850  0000A8  6C60               	dw	_Default_ISR shr (0+2)
 33851                           
 33852                           ; Vector 81 : CLC4
 33853  0000AA  6C60               	dw	_Default_ISR shr (0+2)
 33854  0000AC                     ivt0x8_undefint:
 33855                           	opt callstack 0
 33856  0000AC  00FF               	reset	
 33857                           
 33858                           	psect	text173
 33859  000000                     __ptext173:
 33860                           	opt callstack 0
 33861                           
 33862                           	psect	rparam
 33863  0000                     
 33864                           	psect	temp
 33865  000001                     btemp:
 33866                           	opt callstack 0
 33867  000001                     	ds	32
 33868  0000                     wtemp0	set	btemp
 33869  0000                     wtemp1	set	btemp+2
 33870  0000                     wtemp2	set	btemp+4
 33871  0000                     wtemp3	set	btemp+6
 33872  0000                     wtemp4	set	btemp+8
 33873  0000                     wtemp5	set	btemp+10
 33874  0000                     wtemp8	set	btemp+1
 33875  0000                     ttemp0	set	btemp
 33876  0000                     ttemp1	set	btemp+3
 33877  0000                     ttemp2	set	btemp+6
 33878  0000                     ttemp3	set	btemp+9
 33879  0000                     ttemp5	set	btemp+1
 33880  0000                     ttemp6	set	btemp+4
 33881  0000                     ttemp7	set	btemp+8
 33882  0000                     ltemp0	set	btemp
 33883  0000                     ltemp1	set	btemp+4
 33884  0000                     ltemp2	set	btemp+8
 33885  0000                     lltemp0	set	btemp
 33886  0000                     lltemp1	set	btemp+8
 33887  0000                     lltemp2	set	btemp+16
 33888  0000                     lltemp3	set	btemp+24
 33889                           tosu	equ	0x3FFF
 33890                           tosh	equ	0x3FFE
 33891                           tosl	equ	0x3FFD
 33892                           stkptr	equ	0x3FFC
 33893                           pclatu	equ	0x3FFB
 33894                           pclath	equ	0x3FFA
 33895                           pcl	equ	0x3FF9
 33896                           tblptru	equ	0x3FF8
 33897                           tblptrh	equ	0x3FF7
 33898                           tblptrl	equ	0x3FF6
 33899                           tablat	equ	0x3FF5
 33900                           prodh	equ	0x3FF4
 33901                           prodl	equ	0x3FF3
 33902                           indf0	equ	0x3FEF
 33903                           postinc0	equ	0x3FEE
 33904                           postdec0	equ	0x3FED
 33905                           preinc0	equ	0x3FEC
 33906                           plusw0	equ	0x3FEB
 33907                           fsr0h	equ	0x3FEA
 33908                           fsr0l	equ	0x3FE9
 33909                           wreg	equ	0x3FE8
 33910                           indf1	equ	0x3FE7
 33911                           postinc1	equ	0x3FE6
 33912                           postdec1	equ	0x3FE5
 33913                           preinc1	equ	0x3FE4
 33914                           plusw1	equ	0x3FE3
 33915                           fsr1h	equ	0x3FE2
 33916                           fsr1l	equ	0x3FE1
 33917                           bsr	equ	0x3FE0
 33918                           indf2	equ	0x3FDF
 33919                           postinc2	equ	0x3FDE
 33920                           postdec2	equ	0x3FDD
 33921                           preinc2	equ	0x3FDC
 33922                           plusw2	equ	0x3FDB
 33923                           fsr2h	equ	0x3FDA
 33924                           fsr2l	equ	0x3FD9
 33925                           status	equ	0x3FD8


Data Sizes:
    Strings     723
    Constant    492
    Data        997
    BSS         1103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      37
    BANK0           160      0     154
    BANK1           256      0     251
    BANK2           256      0     253
    BANK3           256     25     253
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_92(CODE[1]), STR_54(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_89(CODE[3]), STR_85(CODE[3]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[3]), STR_66(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_89(CODE[3]), STR_85(CODE[3]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[3]), STR_66(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), 
		 -> STR_39(CODE[19]), STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[3]), STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), 
		 -> STR_29(CODE[20]), STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[19]), STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), 
		 -> STR_39(CODE[19]), STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[3]), STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), 
		 -> STR_29(CODE[20]), STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[19]), STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_37(CODE[9]), STR_36(CODE[12]), D.lcd(BIGRAM[288]), 
		 -> D(BIGRAM[290]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_37(CODE[9]), STR_36(CODE[12]), D.lcd(BIGRAM[288]), 
		 -> D(BIGRAM[290]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_61(CODE[4]), STR_60(CODE[4]), STR_57(CODE[4]), STR_56(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_61(CODE[4]), STR_60(CODE[4]), STR_57(CODE[4]), STR_56(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), STR_43(CODE[15]), 
		 -> STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), 
		 -> STR_29(CODE[20]), STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[19]), STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5937_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), STR_43(CODE[15]), 
		 -> STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), STR_29(CODE[20]), 
		 -> STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[19]), 
		 -> STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[26]), 
		 -> STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), 
		 -> STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), STR_43(CODE[15]), 
		 -> STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), STR_29(CODE[20]), 
		 -> STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[19]), 
		 -> STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[26]), 
		 -> STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), 
		 -> STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), STR_43(CODE[15]), 
		 -> STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), STR_29(CODE[20]), 
		 -> STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[19]), 
		 -> STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[26]), 
		 -> STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), 
		 -> STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_37(CODE[9]), STR_36(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_37(CODE[9]), STR_36(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_37(CODE[9]), 
		 -> STR_36(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4457tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_37(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_36(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1994spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1994spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  371520
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                             ___flge
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            0     0      0    8599
                             _WaitMs
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (2) _fabsf                                                8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35433
                                              0 BANK3     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35343
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35343
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___flge
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _WaitMs
       _StartTimer
       _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100     19      FD      11       98.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      25       1       58.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     539      58        0.0%
DATA                 0      0     85B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 13 01:02:46 2019

                     _SPI1_Exchange8bit AEFE                __end_of_set_display_info AF58  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 009E  
                                     _R 00C4                                       _S 02BC  
                                     _T FC0F                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler AC7E            __end_of_start_switch_handler AEFE  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FD17                  __end_of_FVR_Initialize B166  
                           __CFG_LVP$ON 000000                                     l169 B06E  
                                   l807 AF0C                                     l673 AAE6  
                                   _GIE 01FE97                                     _abs A4A8  
                                   _pad 8B52                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize B01A                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack AE74                       _update_adc_result A7CA  
                         __CFG_BBEN$OFF 000000                   __size_of_Volts_to_SOC 0092  
                         _INT1_CallBack AE08                            __CFG_ZCD$OFF 000000  
                                  l1000 A746                                    l1320 224E  
                                  l1332 2762                                    l2134 123A  
                                  l2302 21E6                                    l1430 A1CC  
                                  l1342 2800                                    l1334 2768  
                                  l3024 A4E8                                    l3016 7B7A  
                                  l2216 650E                                    l1344 28C6  
                                  l1345 29D4                                    l2163 066A  
                       _timer3ReloadVal 0027                                    l1188 A786  
                                  l3124 8A30                                    l2252 5374  
                                  l2237 5E3C                                    l1349 2DCA  
                                  l2078 8BAE                                    l3055 6BCC  
                                  l1705 AF54                                    l1570 985C  
                                  l2098 4F8E                                    l2178 0B1A  
                                  l2605 82B2                                    l3406 9E10  
                                  l1574 9B60                                    l1648 A820  
                                  l2632 7FE0                                    l1665 8D72  
                                  l1657 70E8                                    l1921 9C86  
                                  l1818 79E4                                    l1658 7244  
                                  l1930 908C                                    l3419 9D8C  
                                  l1589 A88A                    _ADCC_StartConversion B088  
                                  l1767 4EAA                                    l3391 702C  
                                  l2594 94E2                                    l1859 9282  
                                  l2917 49FA                                    l2598 81DE  
                                  l2872 3DE2                                    l2953 3626  
                                  l8020 341A                                    l2884 3C72  
                                  l8100 8458                                    l8030 345C  
                                  l8040 34A6                                    l8200 827A  
                                  l7312 9930                                    l8120 851E  
                                  l2993 7442                                    l8026 3436  
                                  l7314 9952                                    l8106 8478  
                                  l8044 34AC                                    l7500 3CB2  
                                  l7412 395C                                    l7340 3686  
                                  l8140 8A5A                                    l8054 3520  
                                  l7510 3CDA                                    l7422 39CE  
                                  l7350 36DC                                    l8072 35D4  
                                  l8064 3590                                    l7432 3A0A  
                                  l7352 370C                                    l8208 82B0  
                                  l8128 8552                                    l8144 8A6C  
                                  l8216 A47E                                    l7600 7B1C  
                                  l8074 35EE                                    l8058 3566  
                                  l7514 3CE0                                    l7426 39EE  
                                  l7370 37B6                                    l7346 36C6  
                                  l8314 A366                                    l8250 7F78  
                                  l8242 7F4C                                    l8226 7ECA  
                                  l7540 3D82                                    l7460 3AF2  
                                  l7428 3A00                                    l7436 3A3A  
                                  l7364 3776                                    l8148 8A84  
                                  l8252 7F8E                                    l8244 7F68  
                                  l7542 3D92                                    l7526 3D3E  
                                  l7454 3AD6                                    l7382 381E  
                                  l7374 37CC                                    l7358 3744  
                                  l8190 819C                                    l7702 6798  
                                  l8094 8442                                    l8166 8B38  
                                  l8158 8B04                                    l8182 94E0  
                                  l8174 946A                                    l7606 7B72  
                                  l7536 3D6A                                    l7456 3AE8  
                                  l7464 3B24                                    l7376 37FC  
                                  l7720 68B0                                    l7624 9E00  
                                  l7802 45FE                                    l9226 ABAE  
                                  l8178 94AC                                    l8266 7BD2  
                                  l8290 85A6                                    l9314 A894  
                                  l7548 3DC2                                    l7476 3BFC  
                                  l8196 822C                                    l7820 46BC  
                                  l9412 72FE                                    l9404 7292  
                                  l7708 67DE                                    l7740 6C34  
                                  l7652 5CC8                                    l7494 3C94  
                                  l7486 3C56                                    l7478 3C22  
                                  l7902 4976                                    l7814 4682  
                                  l7806 4614                                    l9414 730C  
                                  l7582 A4D8                                    l7662 5DCE  
                                  l7654 5D18                                    l7638 5BAA  
                                  l8278 7CA4                                    l7496 3CA6  
                                  l7808 4644                                    l9424 736E  
                                  l9416 7322                                    l7680 9D7C  
                                  l7914 49CE                                    l9426 738C  
                                  l9418 7340                                    l7658 5D60  
                                  l8298 8652                                    l7940 2EA2  
                                  l7932 2E5C                                    l7916 49DE  
                                  l7908 49A6                                    l7828 46D6  
                                  l9436 73C0                                    l9428 73A2  
                                  l7756 6D68                                    l7748 6CBC  
                                  l7596 7B18                                    l7950 2F2A  
                                  l7942 2ED2                                    l7862 4834  
                                  l7854 4802                                    l7846 479C  
                                  l7838 4766                                    l7782 4520  
                                  l9446 7422                                    l9376 A3A2  
                                  l7960 2FA0                                    l7872 4876  
                                  l7848 47AE                                    l7856 4806  
                                  l7776 44E0                                    l8920 697C  
                                  l7696 6744                                    l9368 AA7A  
                                  l7938 2E9C                                    l7882 48C0  
                                  l7786 4536                                    l8930 6A12  
                                  l8922 699E                                    l7956 2F6A  
                                  l7868 4850                                    l7796 45BE  
                                  l7788 4566                                    l9900 4CFC  
                                  l8940 6A7A                                    l9822 A400  
                                  l7958 2F70                                    l7886 48C6  
                                  l8942 6AB8                                    l7968 2FC2  
                                  l7896 493A                                    l8936 6A3E  
                                  l9818 A3CE                                    l9914 4E78  
                                  l9922 4E8A                                    l8946 6B20  
                                  l8938 6A56                                    l9908 4DDC  
                                  l8956 6BBC                                    l8972 6E9E  
                                  l8974 6F0A                                    STR_1 FF50  
                                  STR_2 FFA2                                    STR_3 FFD0  
                                  l9954 7896                                    l9946 786A  
                                  l9874 4A36                                    STR_4 FF1D  
                                  STR_5 FE4F                                    l9884 4B54  
                                  l9868 4A06                                    STR_6 FE4F  
                                  STR_7 FE4F                                    l9958 78AA  
                                  STR_8 FF0B                                    STR_9 FDCC  
                                  l9896 4C60                                    l9888 4C2E  
                                  l9992 A836                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6000 68E8                                    u5120 A9FE  
                                  u5130 AA00                                    u6020 693A  
                                  u5230 3982                                    u6110 6DA0  
                                  u5240 39A2                                    u7000 85A0  
                                  u5241 399C                                    u5090 9980  
                                  u6130 6DF2                                    u6050 6C2E  
                                  u7010 85D2                                    _T6PR 003F93  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u5430 3CB8                                    u5350 3B1A  
                                  u6310 48B8                                    u6070 6C84  
                                  u7030 868A                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u5520 3D4E  
                                  u5280 3A32                                    u6080 6CB6  
                                  _PMD4 0039C4                                    u5097 9972  
                                  _PMD5 0039C5                                    u5450 3CD2  
                                  u5290 3A52                                    u5258 39A4  
                                  u7050 A342                                    u6090 6CE8  
                                  _PMD6 0039C6                                    u5355 3B0A  
                                  _PMD7 0039C7                                    u7060 A362  
                                  u5620 A4BC                                    u5285 3A22  
                                  u5390 3C44                                    u6350 4914  
                                  u6270 482E                                    u5630 7A9C  
                                  u6360 494E                                    u8200 6A0E  
                                  u5800 5C6E                                    u5720 9DBE  
                                  u5560 A9CE                                    u6530 349E  
                                  u5490 3D2E                                    u6370 498A  
                                  u5730 9DC0                                    u5570 A9D0  
                                  u6355 4904                                    u5635 7A92  
                                  u6460 2FB0                                    u9004 4A72  
                                  u5900 AA2E                                    u8220 6B66  
                                  u5820 5D46                                    u9005 4A6C  
                                  u5805 5C64                                    u5910 AA30  
                                  u8230 6B68                                    u6710 8AB0  
                                  u5750 5B42                                    u8310 6FD2  
                                  u5495 3D1E                                    u9024 4C48  
                                  u6640 84A4                                    u5680 7B6A  
                                  u5760 5B8E                                    u8320 7000  
                                  u9025 4C42                                    u5825 5D3C  
                                  u6570 34FA                                    u5930 673E  
                                  u6730 8B24                                    u5690 7B6C  
                                  u5850 A63E                                    u6475 3144  
                                  u5675 7B4C                                    u5755 5B38  
                                  u8315 6FCC                                    u6580 3534  
                                  u9044 4D16                                    u6660 853E  
                                  u5860 A640                                    u6485 320C  
                                  u9045 4D10                                    u8317 6FBE  
                                  u6590 357A                                    u9070 4D40  
                                  u5950 6794                                    u6830 A47A  
                                  u6910 7F96                                    u8270 6F38  
                                  u5870 9D3A                                    u6575 34EA  
                                  u6495 33D4                                    u8327 6FF2  
                                  u9064 4D38                                    u6840 7EAA  
                                  u5880 9D3C                                    u9320 9C72  
                                  u9065 4D32                                    u5961 679E  
                                  u5785 5BC8                                    u9090 7848  
                                  u5970 67D8                                    u6770 94DC  
                                  u6930 7FC0                                    u6850 7EBE  
                                  u5786 5BCE                                    u5787 5BDC  
                                  u9180 AEC8                                    u5980 680A  
                                  u6860 7EF8                                    u9308 9C2E  
                                  u6845 7EA0                                    u8277 6F2A  
                                  u6941 7B92                                    u6950 7BCC  
                                  u6960 7BFE                                    u8705 A67A  
                                  u6865 7EEE                                    u9186 AECA  
                                  u8810 73B6                                    u9338 9C74  
                                  u9290 9C2C                                    u6980 7CDC  
                                  u8850 9FE4                                    _PLLR 01CEE0  
                                  u8925 B0B4                                    u8926 B0B6  
                                  u8935 B0A4                                    u8936 B0A6  
                                  u8875 A018                                    u8876 A01A  
                                  u8868 9FE6                                    u8964 4A20  
                                  u8965 4A1A                                    u8984 4A50  
                                  u8985 4A4A                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR AAC0  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FD27                                    _cp_l FD23  
                                  _atoi 6962                                    _ctoa 9C8A  
                                  _main 21F0                                    _dtoa 4EB0  
                                  _nanf A102                                    _seed 01F3  
                                  _prec 0023                                    _nout 00C0  
                                  _spin FC9F                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 6424                                    btemp 0001  
                                  _utoa 5DF8                                    _xtoa 5330  
                __end_of_check_adc_scan B14E                           ___fpclassifyf 79EE  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit AF1C               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize A5C0             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr AD48                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0038                        __end_of_INT0_ISR B0F6  
                      __end_of_INT1_ISR A7CA          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 9864           __end_of_OSCILLATOR_Initialize B074  
                                 l10104 9C40                                   l10034 A7EA  
                                 l10070 86DA                                   l10072 86E8  
                                 l10064 86BE                                   l10066 86CE  
                                 l11210 62F8                                   l10402 9344  
                                 l10236 AFC8                                   l10092 87CE  
                                 l10084 8754                                   l10068 86D4  
                                 l10076 86F0                                   l11140 8946  
                                 l11204 628E                                   l10172 9A4C  
                                 l10078 871C                                   l11230 9CA8  
                                 l11302 52E6                                   l10502 8F9A  
                                 l10248 AAE2                                   l12112 3EB2  
                                 l11152 99BC                                   l11232 9CD4  
                                 l12040 973A                                   l10176 9AB4  
                                 l10602 9E4E                                   l12130 4182  
                                 l10274 A72E                                   l11162 8B7E  
                                 l11402 0554                                   l12042 977C  
                                 l11218 63A6                                   l12026 98BC  
                                 l10514 8FF6                                   l12140 42B6  
                                 l12116 3EF4                                   l10292 A76E  
                                 l11156 99FA                                   l11172 8BF4  
                                 l11316 00AC                                   l10452 95AE  
                                 l10524 9066                                   l12142 42BE  
                                 l12126 4104                                   l11166 8BA6  
                                 l11182 939C                                   l11510 0CBA  
                                 l11422 05F6                                   l11414 0594  
                                 l11406 057C                                   l11350 022C  
                                 l10608 9E5E                                   l12136 422C  
                                 l11176 8C3E                                   l11168 8BB8  
                                 l11264 4FC8                                   l11256 4F7E  
                                 l11440 06B8                                   l11424 0602  
                                 l11408 058E                                   l11328 00F0  
                                 l11336 0146                                   l12072 8C8A  
                                 l10456 95EC                                   l12320 2238  
                                 l12146 42D4                                   l11450 077A  
                                 l11346 01EA                                   l11354 0258  
                                 l10388 7E52                                   l11268 4FE6  
                                 l11460 0926                                   l11444 06F0  
                                 l11380 0396                                   l11364 02FC  
                                 l11372 032A                                   l11348 0216  
                                 l10396 929E                                   l12500 2D32  
                                 l12324 2256                                   l11278 51F8  
                                 l11518 0D24                                   l11526 0D90  
                                 l11534 0EA2                                   l11390 04D2  
                                 l11710 5364                                   l11198 61D0  
                                 l12270 71E0                                   l12326 2268  
                                 l12318 2230                                   l10496 5A80  
                                 l11560 0FD6                                   l11384 0406  
                                 l12256 70B8                                   l11298 52AA  
                                 l11562 0FF0                                   l11546 0F3A  
                                 l11482 0B12                                   l11474 0A48  
                                 l11386 0470                                   l11642 65B0  
                                 l11634 6544                                   l11618 6490  
                                 l11730 543A                                   l11722 53DA  
                                 l12514 2D7A                                   l12506 2D44  
                                 l12434 276C                                   l10596 A704  
                                 l11572 1092                                   l11484 0B34  
                                 l11652 6666                                   l11716 539E  
                                 l11804 1326                                   l12508 2D5C  
                                 l12436 279A                                   PRLOCK 0039EF  
                                 l11582 10E2                                   l11638 6580  
                                 l11670 5E2C                                   l11830 14F8  
                                 l11806 1360                                   l12518 2DA0  
                                 l11656 66A2                                   l11648 663A  
                                 l11912 1BDA                                   l11808 1376  
                                 l12528 2DF4                                   l12472 2B28  
                                 l12456 27F2                                   l12448 27CE  
                                 l12376 241A                                   l11498 0C32  
                                 l11770 56A0                                   l11746 5530  
                                 l11754 55B6                                   l11922 1C88  
                                 l11826 14A8                                   l12482 2CA4  
                                 l12490 2CEE                                   l11932 1DAA  
                                 l11828 14E2                                   l12468 2AC6  
                                 l12484 2CCE                                   l11598 119A  
                                 l11678 5E88                                   l11942 1E60  
                                 l11846 165C                                   l11688 607E  
                                 l11880 198E                                   l11864 17E0  
                                 l11856 16F4                                   l11970 2114  
                                 l11980 2172                                   l11956 1FDC  
                                 l11892 1A7A                                   l11868 1834  
                                 l11976 216E                                   l11888 1A46  
                                 l11986 2192                         __end_of___aodiv 6962  
                          _Volts_to_SOC 9A44                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 3DEC  
                                 _ADCLK 003EFF                         __end_of___aomod 6E16  
                                 _ADPCH 003EF1                         __end_of___fldiv 4A04  
                                 _ADREF 003EFD                         __end_of___awdiv 856C  
                       __end_of___flneg A4A8                                   STR_10 FDF9  
                                 STR_11 FE0F                                   STR_20 FF61  
                                 STR_12 FF2E                                   STR_13 FF3F  
                                 STR_21 FE86                                   STR_30 FF83  
                                 STR_14 FF72                                   STR_22 FEAC  
                                 STR_31 FF83                                   STR_23 FE99  
                                 STR_15 FDE3                                   STR_32 FF61  
                                 STR_40 FFBD                                   STR_24 FEF8  
                                 STR_16 FD80                                   STR_41 FFBD  
                                 STR_33 FFFB                                   STR_25 FED2  
                                 STR_17 FD9A                           __CFG_WDTE$OFF 000000  
                                 STR_34 FFF8                                   STR_42 FF93  
                                 STR_18 FF83                                   STR_26 FEE5  
                                 STR_43 FF93                                   STR_27 FEBF  
                                 STR_44 FF93                                   STR_60 FFDA  
                                 STR_36 FFB1                                   STR_28 FE39  
                       __end_of___awmod 8B52                                   STR_61 FFE2  
                                 STR_37 FFC7                                   STR_29 FE25  
                                 STR_45 FDB4                                   STR_54 FD7F  
                                 STR_70 FFEF                                   STR_38 FE60  
                                 STR_39 FE60                                   STR_47 FE73  
                                 STR_55 FD2B                                   STR_80 FFF2  
                                 STR_64 FFE9                                   STR_56 FFD6  
                                 STR_48 FE4D                                   _ADRPT 003EEC  
                                 STR_73 FFEC                                   STR_57 FFDE  
                                 STR_66 FFE9                                   STR_75 FFEC  
                                 STR_83 FFF5                                   STR_68 FFEF  
                                 STR_85 FFF5                                   STR_78 FFF2  
                                 STR_87 FFE6                         __end_of___flmul 3630  
                                 STR_89 FFE6                         __end_of___flsub A534  
                       __end_of___fltol 7FEA                                   u10110 89B6  
                                 u11000 65EC                                   u11100 60EA  
                                 u10310 4F64                                   u11030 66C8  
                                 u11110 60EE                                   u10230 641A  
                                 u11007 65DE                                   u10400 5280  
                                 u11200 54E6                                   u10090 893A  
                                 u10330 4FB4                                   u10170 9416  
                                 u11050 5E12                                   u11210 54E8  
                                 u11130 534A                                   u10340 520C  
                                 u10260 4EE0                                   u10270 4EE2  
                                 u10510 02A6                                   u11230 55B2  
                                 u10351 523C                                   u10360 5252  
                                 u10520 02A8                                   u10440 00DA  
                                 u11240 55D2                                   u11160 5432  
                                 u11400 1542                                   u10361 5250  
                                 u10177 9408                                   u11081 60C0  
                                 u10370 5266                                   u10290 4F52  
                                 u11090 60D6                                   u11170 5486  
                                 u11410 1568                         __end_of___lodiv 7D04  
                                 u11091 60D4                                   u11251 5602  
                                 u11235 5594                                   u10380 526A  
                                 u10620 05C6                                   u11260 5618  
                                 u11180 5488                                   u11340 13BE  
                                 u11261 5616                                   u10470 0194  
                                 u11270 562C                                   u11510 1B34  
                                 u11350 13C0                                   u10560 050E  
                                 u10480 0196                                   u11280 5630  
                                 u11600 2064                                   u11520 1B36  
                                 u11360 13E6                                   u10730 0A18  
                                 _U1P1H 003DED                                   u10660 0648  
                                 u11460 1748                                   u11620 989C  
                                 _U1P2H 003DEF                                   u10910 116E  
                                 u10830 0EE4                                   u10590 0562  
                                 u11390 1540                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u10920 1170                                   u11480 18BC  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u11810 7230                                   _U1P3L 003DF0  
                                 u11580 1EB4                                   u11820 7232  
                                 _U2P1L 003DD4                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u10890 10B8  
                                 _U2P3L 003DD8                                   u10990 65A6  
                                 u11870 2538                                   _T5CLK 003F9D  
                       __end_of___lomod 86AC                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00AB                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 003D                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result A804  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR B180                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 841E  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A2D2                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR B002                            _DMA1CON1bits 003BFD  
                                 _fabsf 9660                                   _flags 0025  
              __size_of_calc_model_data 03A2                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD                                   _fputc 8916  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha A64A  
                                 _fputs 99AC                         __end_of_isdigit AA3A  
                       __end_of_ivln2_h FD23                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand A8DE                                   _width 0021  
                                 _putch AFCC                         __end_of_islower A9DA  
                       __end_of_isspace A376                _INT1_SetInterruptHandler ACA6  
                       __end_of_isupper AA0A                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler AC2E  
           _UART1_SetRxInterruptHandler AC06                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 8F8E                         __end_of_tolower 9E1A  
                       __end_of_strncmp 7036                         __end_of_toupper 9D96  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr AD70  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize A57A  
                 __end_of_ringBufS_init AB8E                         __initialization 8D76  
                     _UART2_rx_vect_isr AD98                            __end_of_cp_h FD2B  
                          __end_of_cp_l FD27                            __end_of_atoi 6BD6  
                          __end_of_ctoa 9D12                            __end_of_main 2E06  
                          __end_of_dtoa 5330                            __end_of_nanf A164  
                          __end_of_spin FD17                            __end_of_stoa 66E2  
                          __end_of_utoa 6138                            __end_of_xtoa 56EA  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0038  
               __end_of_TMR2_Initialize B032                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button A70C                _TMR5_SetInterruptHandler AC56  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A2                       _port_data_dma_ptr B110  
                   ??_UART2_rx_vect_isr 003D                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize AAEC                         _PWM8_Initialize B048  
                      _UART1_Initialize A534                       _UART2_tx_vect_isr AD70  
                    _UART2_Transmit_ISR AAC0                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan A03C                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue A64A                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0038  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1017 A2C4  
                                _RB6PPS 003A0E                                  i1l1205 8386  
                  _start_switch_handler AEDE                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize A606  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright B0D8                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u922_20 86E4  
                                u922_21 86DE                                  u926_24 87C4  
                                u926_25 87C0                                  u919_28 86C4  
                                u952_48 AEA8                                  u944_48 AE84  
                                u891_20 A94E                                  u946_28 AE18  
                                u891_26 A950                                  u955_28 AE3C  
                  __size_of_hid_display 0102                                  u980_44 9E7E  
                                u980_45 9E78                        __end_of___xxtofl 744C  
 __end_of_ADCC_DischargeSampleCapacitor B146  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor B13E                __end_of_send_lcd_cmd_dma A324  
                       _TMR3_WriteTimer A74C                     ??_UART2_tx_vect_isr 003D  
             __end_of_UART2_rx_vect_isr ADC0              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize B106                        _UART2_Initialize A164  
                                _WaitMs A872                         _conv_raw_result 4A04  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 815A                                  ___fleq 9428  
                     _ADCC_ThresholdISR 9F6C                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 9AD6                                  _efgtoa 0000  
                                _floorf 5A8C                      ?_ADCC_ThresholdISR 0038  
                                _memset 6138                    __size_of_help_button 0038  
                                clear_0 8E0A                                  clear_1 8E1E  
                                clear_2 8E30                                  clear_3 8E3C  
                                clear_4 8E48                                  clear_5 8E54  
                                clear_6 8E60                                  clear_7 8E6C  
             __end_of_port_data_dma_ptr B11A                                  _printf A0A0  
                    _eaDogM_WriteString 9864                                  _strcpy 9354  
                             ?_ADCC_ISR 0038                                  _strlen 990A  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize 9F02                          _PMD_Initialize B074  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr AD98  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0038                  __end_of_start_adc_scan A0A0  
                          __mediumconst FB3E                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay A21C                        __end_of_spinners 9354  
                      __end_of_vfprintf 97BA                              _StartTimer A68C  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize A5C0  
                     _SYSTEM_Initialize A416                              __accesstop 0060  
               __end_of__initialization 8E7E                               ?_INT0_ISR 0038  
                             ?_INT1_ISR 0038                    __end_of_display_help B15E  
                  __end_of_display_info B156               __end_of_CLKREF_Initialize B110  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer A70C                   _set_temp_display_help B0BA  
                      _clear_hid_pflags ADE4                   __end_of_TMR3_CallBack AE74  
             __end_of_ADCC_ThresholdISR 9FD6                      __size_of_calc_bsoc 069E  
                __end_of_ringBufS_flush 9B68                          __pcstackCOMRAM 0038  
                            ___inthi_sp 10C2                              ___intlo_sp 1861  
                          __pidataBANK0 A83C                            __pidataBANK1 9090  
                          __pidataBANK2 94EC             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf 970E                               ?_TMR3_ISR 0038  
                             ?_TMR5_ISR 0038                               ?_TMR6_ISR 0038  
                        ivt0x8_undefint 00AC                           __end_of_fputc 8A3A  
                         __end_of_fputs 9A44                           __end_of_srand A912  
                 __end_of_TMR5_CallBack AE50                           __end_of_putch AFE6  
               __end_of_PWM8_Initialize B05E                 __end_of_TMR6_Initialize AB16  
                     _adc_int_t_handler 9E1A                  __end_of_PMD_Initialize B088  
                            __end_of_bp FD1F                              ??_ADCC_ISR 0038  
                 __end_of_TMR6_CallBack AEBC             __size_of_EXT_INT_Initialize 0034  
                __size_of_calc_ror_data 0174                           _DMA1_DMAA_ISR B128  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan B166  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize A460  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer A78C                              __pbssBANK0 0060  
                            __pbssBANK1 01F3                              __pbssBANK2 02BC  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              _check_help 7036  
               __end_of_conv_raw_result 4EB0                      __size_of_esr_check 01E6  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0038  
                            ??_INT1_ISR 003E                       __end_of_TimerDone ABB6  
                      _DMA1_DMADCNT_ISR B11C                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma A97A  
                 __end_of_wait_lcd_done AFB0        __end_of_TMR3_SetInterruptHandler ACA6  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler AC56  
                            ??_TMR3_ISR 03E4                 __end_of_ADCC_Initialize 9F6C  
                            ??_TMR5_ISR 0042               __end_of_adc_int_t_handler 9E98  
                            ??_TMR6_ISR 003D                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler AD1E  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler ACF6  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR AFB0  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan B16C                          ?_DMA1_DMAA_ISR 0038  
                      _DMA1_DMASCNT_ISR B0F8                                 _U1ERRIE 003DFA  
                               u1170_20 4224                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 u1172_20 42CC  
                               _U2ERRIE 003DE2                                 u1174_28 AE60  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0038              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 448A                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch AA68                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer A74C                 __size_of_switch_handler 013C  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one B0BA  
            __end_of_set_load_relay_two B0AA       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 7D04  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim B002  
                               __Lparam 0000                __end_of_UART1_Initialize A57A  
                     __end_of_hid_input 9C8A                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 66E2                                 ___fladd 3630  
                               ___aomod 6BD6                                 ___fldiv 448A  
                               ___awdiv 841E                                 ___flneg A460  
                               ___awmod 8A3A                                 ___flmul 2E06  
                               ___flsub A4EE                                 ___fltol 7E78  
                               ___lodiv 7B84                                 ___lomod 856C  
             __end_of_UART1_Receive_ISR AFCC                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 926E  
                               __pcinit 8D76                __end_of_mode_lamp_bright B0E6  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand B0CA                                 __ramtop 2000  
                               __ptext0 21F0                                 __ptext1 ADC0  
                               __ptext2 AEDE                                 __ptext3 A8DE  
                               __ptext4 926E                                 __ptext5 A97A  
                               __ptext6 9184                                 __ptext7 AB16  
                               __ptext8 AB3E                                 __ptext9 AEFE  
                     __end_of_esr_check 7832                       _UART2_Receive_ISR AF76  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                               us603999 694C                   _OSCILLATOR_Initialize B05E  
                               us614999 6E04                            __size_of_abs 0046  
                               us704999 869C                            __size_of_pad 0114  
                     __end_of_init_bsoc 815A                                 _isalpha A606  
                               _isdigit AA0A                                 _ivln2_h FD1F  
                             _T3CONbits 003FA6                                 _mode_sw 002E  
                               us699999 7CEE                       __end_of_lp_filter 79EE  
                               _islower A9AA                                 _isspace A324  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize A1C2                                 _isupper A9DA  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 8E84  
                               _tolower 9D96                   __size_of_display_help 0008  
                               _utctime 0096                   __size_of_display_info 0008  
                               _strncmp 6E16                                 _toupper 9D12  
                  end_of_initialization 8E7E               __size_of_convert_adc_data 00B8  
                    _check_enter_button A6CC                               i1u1183_20 837C  
   __end_of_UART2_SetRxInterruptHandler AC06             _UART2_SetRxInterruptHandler ABDE  
                     __end_of_set_vterm AF3A                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd B178  
             __end_of_UART2_Receive_ISR AF94                          wdtdelay@dcount 009A  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 003E  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc B17E                _TMR3_SetInterruptHandler AC7E  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler AC2E  
                          _display_help B156                   _TMR5_InterruptHandler 00A5  
                          _display_info B14E    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags AE08                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler AD46             _ADCC_SetADIInterruptHandler AD1E  
                            _update_lcd 8C66                         _calc_model_data 56EA  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc ADC0                         _DMA1_Initialize 9E98  
                            _start_bsoc AEBC                         _SPI1_Initialize B032  
                 __end_of_get_vterm_ptr AA68                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs A8A8  
          __end_of_INTERRUPT_Initialize A03C                              _vterm_dump 87E8  
                        __end_of___flge 82BC                          __end_of___fleq 94EC  
  __end_of_INT0_DefaultInterruptHandler B18C   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler B18A              __size_of_UART1_Receive_ISR 001C  
                       _DMA2_Initialize A21C                           __pidataBIGRAM 744C  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 5DF8  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 007A  
                        __end_of_memset 6424                          __end_of_printf A102  
              __end_of_DMA1_DMADCNT_ISR B126             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack AE98                          __end_of_strcpy 9428  
                        __end_of_strlen 99AC                     start_initialization 8D76  
  __end_of_TMR5_DefaultInterruptHandler A97A   __size_of_TMR5_DefaultInterruptHandler 0034  
          _TMR5_DefaultInterruptHandler A946         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs A4EE                   __end_of_INT1_CallBack AE2C  
             __size_of_set_display_info 001E                             __end_of_pad 8C66  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd AB66  
                        _switch_handler 86AC           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 006C  
                 __end_of___fpclassifyf 7B84                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR B106                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR B134                     __end_of_hid_display 9090  
            __end_of_send_port_data_dma A3C8                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone AB8E                           _ringBufS_init AB66  
                           __pdataBANK0 00C4                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize A946  
               __end_of_calc_model_data 5A8C                     __end_of_help_button A83C  
       __end_of_eaDogM_WriteStringAtPos A8DE                     __end_of_BVSOC_TABLE FC0F  
                  calc_model_data@bcror 008E                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize 9F02                    calc_model_data@bvror 0092  
                           __pbssCOMRAM 0021        __end_of_INT0_SetInterruptHandler ACF6  
                         __pcstackBANK3 03E4                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 87E8  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize B048  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FC9F                        _convert_adc_data 95A8  
                             _calc_bsoc 3DEC               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9184                  __end_of_DMA1_DMAOR_ISR B13E  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize A276                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize 9B68                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set B172                           __pmediumconst FB3E  
                             __ptext100 56EA                               __ptext101 B178  
                             __ptext110 ABDE                               __ptext102 AEBC  
                             __ptext111 A534                               __ptext103 7832  
                             __ptext120 B032                               __ptext112 AC06  
                             __ptext104 A4EE                               __ptext121 B048  
                             __ptext113 AAEC                               __ptext105 3630  
                             __ptext130 A21C                               __ptext122 B074  
                             __ptext114 AC2E                               __ptext106 2E06  
                             __ptext131 9E98                               __ptext123 9B68  
                             __ptext115 A57A                               __ptext107 A416  
                             __ptext140 A278                               __ptext132 B106  
                             __ptext124 B05E                               __ptext116 AC56  
                             __ptext108 A164                               __ptext141 A70C  
                             __ptext133 9F02                               __ptext125 9FD6  
                             __ptext117 A5C0                               __ptext109 ABB6  
                             __ptext150 B110                               __ptext142 AE2C  
                             __ptext134 ACF6                               __ptext126 B15E  
                             __ptext118 AC7E                               __ptext151 B0E8  
                             __ptext143 A946                               __ptext135 AD1E  
                             __ptext127 A912                               __ptext119 B01A  
                             __ptext160 AD48                               __ptext152 AE74  
                             __ptext144 82BC                               __ptext136 A78C  
                             __ptext128 ACA6                               __ptext161 AFB0  
                             __ptext153 B18A                               __ptext145 A74C  
                             __ptext137 AE08                               __ptext129 ACCE  
                             __ptext170 B11C                               __ptext162 AD70  
                             __ptext154 B180                               __ptext146 AE50  
                             __ptext138 B186                               __ptext171 B128  
                             __ptext163 AAC0                               __ptext155 AA94  
                             __ptext147 B188                               __ptext139 86AC  
                             __ptext172 B134                               __ptext164 AD98  
                             __ptext156 9E1A                               __ptext148 3DEC  
                             __ptext173 0000                               __ptext165 AF76  
                             __ptext157 B18C                               __ptext149 A376  
                             __ptext166 AFE8                               __ptext158 B18E  
                             __ptext167 AE98                               __ptext159 9F6C  
                             __ptext168 A3C8                               __ptext169 B0F8  
                             _hid_input 9BFA                      __end_of_StartTimer A6CC  
                    _set_load_relay_one B0AA                      _set_load_relay_two B09A  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR AA94  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 764C                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 7FEA  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 7832                             _hid_display 8F8E  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 9FD6                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0038  
                              _INT0_ISR B0E8                                _INT1_ISR A78C  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 02E5  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack AE50  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0046                                i2u991_48 ADAC  
                              i2u983_48 AAAC                                i2u985_48 9FA2  
                              i2u985_49 9FB6                                i2u987_48 AD5C  
                              i2u989_48 AD84                               _set_vterm AF1C  
                   __size_of_update_lcd 0110                             _help_button A804  
                              _TMR3_ISR 82BC                             _BVSOC_TABLE FB3F  
                              _TMR5_ISR A278                                _TMR6_ISR AFE8  
                             _port_data 05FF                     __size_of_static_soc 0024  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack AE2C  
                            _ADCON0bits 003EF8                      __end_of_check_help 7248  
                             _start_lcd B172                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack AE98  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc B178                        _set_display_info AF3A  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 8D8A  
                             copy_data1 8DB0                               copy_data2 8DD2  
                             copy_data3 8DF4                _INT0_SetInterruptHandler ACCE  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler ABDE  
           _UART2_SetTxInterruptHandler ABB6                            _uart1RxCount 0035  
                          _uart2RxCount 002F                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done AF94  
                          _send_lcd_cmd AB3E                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler B18E                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                    __end_of_get_switch AA94                   __end_of_DMA1_DMAA_ISR B132  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 7248  
                     ?_DMA1_DMADCNT_ISR 0038             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand B0D8  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 003E  
                              __ptext10 AB66                                __ptext11 7FEA  
                              __ptext20 B13E                                __ptext12 9A44  
                              __ptext21 B166                                __ptext13 8F8E  
                              __ptext30 8E84                                __ptext22 B146  
                              __ptext14 9BFA                                __ptext31 AA3A  
                              __ptext23 B09A                                __ptext15 AA68  
                              __ptext40 B172                                __ptext32 A872  
                              __ptext24 B0AA                                __ptext16 764C  
                              __ptext41 9AD6                                __ptext33 8C66  
                              __ptext25 B0CA                                __ptext17 A7CA  
                              __ptext50 5DF8                                __ptext42 6138  
                              __ptext34 A8A8                                __ptext26 95A8  
                              __ptext18 A03C                                __ptext51 856C  
                              __ptext43 A0A0                                __ptext35 A2D2  
                              __ptext27 ADE4                                __ptext19 B088  
                              __ptext60 79EE                                __ptext52 7B84  
                              __ptext44 970E                                __ptext36 AF94  
                              __ptext28 7036                                __ptext61 7E78  
                              __ptext53 6E16                                __ptext45 1244  
                              __ptext37 A1C2                                __ptext29 87E8  
                              __ptext70 9C8A                                __ptext62 A460  
                              __ptext54 6424                                __ptext46 5330  
                              __ptext38 9864                                __ptext71 8B52  
                              __ptext63 9428                                __ptext55 0000  
                              __ptext47 9D12                                __ptext39 B16C  
                              __ptext80 AF1C                                __ptext72 990A  
                              __ptext64 8A3A                                __ptext56 9D96  
                              __ptext48 A9AA                                __ptext81 B0BA  
                              __ptext73 99AC                                __ptext65 841E  
                              __ptext57 A9DA                                __ptext49 A606  
                              __ptext90 B156                                __ptext82 AF3A  
                              __ptext74 8916                                __ptext66 4EB0  
                              __ptext58 9354                                __ptext91 A6CC  
                              __ptext83 B002                                __ptext75 AFCC  
                              __ptext67 A4A8                                __ptext59 5A8C  
                              __ptext92 7D04                                __ptext84 B0D8  
                              __ptext76 97BA                                __ptext68 6BD6  
                              __ptext93 9660                                __ptext85 A64A  
                              __ptext77 6962                                __ptext69 66E2  
                              __ptext94 4A04                                __ptext86 A804  
                              __ptext78 A324                                __ptext95 A102  
                              __ptext87 AB8E                                __ptext79 AA0A  
                              __ptext96 AF58                                __ptext88 A68C  
                              __ptext97 7248                                __ptext89 B14E  
                              __ptext98 448A                                __ptext99 815A  
                      __size_of_isupper 0030                                us1025999 4ECA  
                              us1106999 5E5E                                us1115999 53B0  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1094999 6436                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma 97BA  
                  __end_of_Volts_to_SOC 9AD6                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 0C16  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0038  
                 __end_of_init_port_dma A9AA                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00EC                      ??_DMA1_DMASCNT_ISR 003E  
          __end_of_ADCC_StartConversion B09A                                _spi_link 0060  
                              _wdtdelay A1C2              __end_of_UART2_Transmit_ISR AAEC  
                              _spinners 926E                                _vfprintf 970E  
              __end_of_convert_adc_data 9660              __end_of_PWM8_LoadDutyValue A68C  
  __end_of_TMR3_DefaultInterruptHandler B18A   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler B188    __end_of_INT1_DefaultInterruptHandler B188  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler B186  
                    _send_port_data_dma A376                           ??_Default_ISR 0038  
                           _uart1RxHead 0037                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0031                             _uart1RxTail 0036  
                        _get_raw_result AF58                             _uart2TxHead 0034  
                           _uart2RxTail 0030                               spinners@s 0074  
                           _uart2TxTail 0033                            _wait_lcd_set B16C  
                      Volts_to_SOC@slot 002D                      _EXT_INT_Initialize A912  
  __end_of_TMR6_DefaultInterruptHandler A416   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler A3C8    __end_of_ADCC_DefaultInterruptHandler B18E  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler B18C  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long AB16          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help B0CA                   __end_of_calc_ror_data 7E78  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 990A  
                 __end_of_mode_lamp_dim B01A                 __end_of_adc_int_handler B190  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 8D76                  _uart2TxBufferRemaining 0032  
                    __end_of_static_soc ADE4                      __end_of_start_bsoc AEDE  
                        _FVR_Initialize B15E                  __end_of_get_raw_result AF76  
                      _send_lcd_cmd_dma A2D2                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0029        __end_of_INT1_SetInterruptHandler ACCE  
             __size_of_UART1_Initialize 0046                        ??_DMA1_DMAOR_ISR 003E  
             __end_of_send_lcd_cmd_long AB3E                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR B186          __end_of_PIN_MANAGER_Initialize 9BFA  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 8916  
               _eaDogM_WriteStringAtPos A8A8                           _get_vterm_ptr AA3A  
                        _check_adc_scan B146               __size_of_UART2_Initialize 005E  
