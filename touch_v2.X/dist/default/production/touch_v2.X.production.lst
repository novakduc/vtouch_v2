

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 21 00:48:06 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=4,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=4,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=4,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=4,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=4,class=CODE,delta=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=4,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=4,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=4,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=4,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=4,class=CODE,delta=1
   194                           	psect	text170,global,reloc=4,class=CODE,delta=1
   195                           	psect	text171,global,reloc=4,class=CODE,delta=1
   196                           	psect	text172,global,reloc=4,class=CODE,delta=1
   197                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   198                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   199                           	psect	text173,global,reloc=4,class=CODE,delta=1
   200                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   201                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   202  0000                     
   203                           ; Version 2.10
   204                           ; Generated 31/07/2019 GMT
   205                           ; 
   206                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   207                           ; All rights reserved.
   208                           ; 
   209                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   210                           ; 
   211                           ; Redistribution and use in source and binary forms, with or without modification, are
   212                           ; permitted provided that the following conditions are met:
   213                           ; 
   214                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   215                           ;        conditions and the following disclaimer.
   216                           ; 
   217                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   218                           ;        of conditions and the following disclaimer in the documentation and/or other
   219                           ;        materials provided with the distribution.
   220                           ; 
   221                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   222                           ;        software without specific prior written permission.
   223                           ; 
   224                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   225                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   226                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   227                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   228                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   229                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   230                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   231                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   232                           ; 
   233                           ; 
   234                           ; Code-generator required, PIC18F57K42 Definitions
   235                           ; 
   236                           ; SFR Addresses
   237  0000                     
   238 ;;_esr_temp	offset	0
   239 ;;_i_esr	offset	4
   240 ;;_shape	offset	6
   241 ;;_k	offset	7
   242 ;;_j	offset	8
   243 ;;_i	offset	9
   244 ;;_inp_index	offset	10
   245 ;;_mode	offset	11
   246 ;;_i_ror	offset	12
   247 ;;_s	offset=-2 (param)
   248 ;;_c	offset	0
   249 ;;_shape	offset=-1 (param)
   250 ;;_reset	offset=-2 (param)
   251 ;;_cmd	offset=-1 (param)
   252 ;;_cmd	offset=-1 (param)
   253 ;;_data	offset=-1 (param)
   254 ;;__this	offset=-2 (param)
   255 ;;_cvoltage	offset=-4 (param)
   256 ;;_h	offset=-1 (param)
   257 ;;_h	offset=-1 (param)
   258 ;;_i	offset=-1 (param)
   259 ;;_fsm	offset=-1 (param)
   260 ;;_channel	offset=-1 (param)
   261 ;;_mode	offset=-1 (param)
   262 ;;_mode	offset=-1 (param)
   263 ;;_cmd	offset=-1 (param)
   264 ;;_i	offset	0
   265 ;;_h	offset=-1 (param)
   266 ;;_flipper	offset=-1 (param)
   267 ;;_f	offset	0
   268 ;;_ap	offset	6
   269 ;;_s	offset=-3 (param)
   270 ;;_fmt	offset=-5 (param)
   271 ;;_line	offset=-1 (param)
   272 ;;_vterm	offset=-2 (param)
   273 ;;_numMilliseconds	offset=-2 (param)
   274 ;;_vterm	offset=-1 (param)
   275 ;;_r	offset=-1 (param)
   276 ;;_c	offset=-2 (param)
   277 ;;_strPtr	offset=-4 (param)
   278 ;;_strPtr	offset=-1 (param)
   279 ;;_delay	offset=-4 (param)
   280 ;;_strPtr	offset=-2 (param)
   281 ;;__this	offset=-2 (param)
   282 ;;_clearBuffer	offset=-3 (param)
   283 ;;_s	offset	0
   284 ;;_k	offset	2
   285 ;;_dest	offset=-2 (param)
   286 ;;_c	offset=-4 (param)
   287 ;;_n	offset=-6 (param)
   288 ;;_ap	offset	0
   289 ;;_fmt	offset=-3 (param)
   290 ;;_cfmt	offset	0
   291 ;;_fp	offset=-2 (param)
   292 ;;_fmt	offset=-4 (param)
   293 ;;_ap	offset=-6 (param)
   294 ;;_vfpfcnvrt$5443	offset	0
   295 ;;_vfpfcnvrt$5454	offset	2
   296 ;;_vfpfcnvrt$5442	offset	4
   297 ;;_llu	offset	6
   298 ;;_ll	offset	14
   299 ;;_f	offset	22
   300 ;;_ct	offset	26
   301 ;;_cp	offset	29
   302 ;;_c	offset	31
   303 ;;_fp	offset=-2 (param)
   304 ;;_fmt	offset=-4 (param)
   305 ;;_ap	offset=-6 (param)
   306 ;;_xtoa$5428	offset	0
   307 ;;_xtoa$5427	offset	2
   308 ;;_n	offset	4
   309 ;;_c	offset	12
   310 ;;_i	offset	14
   311 ;;_w	offset	16
   312 ;;_p	offset	18
   313 ;;_fp	offset=-2 (param)
   314 ;;_d	offset=-10 (param)
   315 ;;_x	offset=-11 (param)
   316 ;;_toupper$6234	offset	0
   317 ;;_c	offset=-2 (param)
   318 ;;_c	offset=-2 (param)
   319 ;;_c	offset=-2 (param)
   320 ;;_n	offset	0
   321 ;;_i	offset	8
   322 ;;_w	offset	10
   323 ;;_p	offset	12
   324 ;;_fp	offset=-2 (param)
   325 ;;_d	offset=-10 (param)
   326 ;;_counter	offset	0
   327 ;;_dividend	offset=-8 (param)
   328 ;;_divisor	offset=-16 (param)
   329 ;;_quotient	offset	0
   330 ;;_counter	offset	8
   331 ;;_dividend	offset=-8 (param)
   332 ;;_divisor	offset=-16 (param)
   333 ;;_r	offset	0
   334 ;;_l	offset	2
   335 ;;__l	offset=-2 (param)
   336 ;;__r	offset=-4 (param)
   337 ;;_n	offset=-6 (param)
   338 ;;_nuls	offset	0
   339 ;;_l	offset	7
   340 ;;_p	offset	9
   341 ;;_cp	offset	11
   342 ;;_w	offset	13
   343 ;;_i	offset	15
   344 ;;_fp	offset=-2 (param)
   345 ;;_s	offset=-4 (param)
   346 ;;_efgtoa$5400	offset	0
   347 ;;_efgtoa$5399	offset	2
   348 ;;_efgtoa$5398	offset	4
   349 ;;_efgtoa$5394	offset	6
   350 ;;_efgtoa$5390	offset	8
   351 ;;_efgtoa$5389	offset	10
   352 ;;_u	offset	12
   353 ;;_g	offset	16
   354 ;;_l	offset	20
   355 ;;_h	offset	24
   356 ;;_ou	offset	28
   357 ;;_n	offset	32
   358 ;;_e	offset	34
   359 ;;_i	offset	36
   360 ;;_w	offset	38
   361 ;;_p	offset	40
   362 ;;_sign	offset	42
   363 ;;_d	offset	44
   364 ;;_ne	offset	46
   365 ;;_m	offset	48
   366 ;;_pp	offset	50
   367 ;;_t	offset	52
   368 ;;_mode	offset	54
   369 ;;_nmode	offset	55
   370 ;;_fp	offset=-2 (param)
   371 ;;_f	offset=-6 (param)
   372 ;;_c	offset=-7 (param)
   373 ;;_tolower$6219	offset	0
   374 ;;_c	offset=-2 (param)
   375 ;;_c	offset=-2 (param)
   376 ;;_d	offset	0
   377 ;;_s	offset	2
   378 ;;_dest	offset=-2 (param)
   379 ;;_src	offset=-4 (param)
   380 ;;_u	offset	0
   381 ;;_m	offset	4
   382 ;;_e	offset	8
   383 ;;_x	offset=-4 (param)
   384 ;;_u	offset	0
   385 ;;_e	offset	4
   386 ;;_x	offset=-4 (param)
   387 ;;_exp1	offset	0
   388 ;;_sign1	offset	1
   389 ;;_f1	offset=-4 (param)
   390 ;;_f1	offset=-4 (param)
   391 ;;_ff1	offset=-4 (param)
   392 ;;_ff2	offset=-8 (param)
   393 ;;_sign	offset	0
   394 ;;_counter	offset	1
   395 ;;_dividend	offset=-2 (param)
   396 ;;_divisor	offset=-4 (param)
   397 ;;_quotient	offset	0
   398 ;;_sign	offset	2
   399 ;;_counter	offset	3
   400 ;;_dividend	offset=-2 (param)
   401 ;;_divisor	offset=-4 (param)
   402 ;;_dtoa$5366	offset	0
   403 ;;_n	offset	2
   404 ;;_i	offset	10
   405 ;;_s	offset	12
   406 ;;_w	offset	14
   407 ;;_p	offset	16
   408 ;;_fp	offset=-2 (param)
   409 ;;_d	offset=-10 (param)
   410 ;;_a	offset=-2 (param)
   411 ;;_sign	offset	0
   412 ;;_counter	offset	1
   413 ;;_dividend	offset=-8 (param)
   414 ;;_divisor	offset=-16 (param)
   415 ;;_quotient	offset	0
   416 ;;_sign	offset	8
   417 ;;_counter	offset	9
   418 ;;_dividend	offset=-8 (param)
   419 ;;_divisor	offset=-16 (param)
   420 ;;_w	offset	0
   421 ;;_fp	offset=-2 (param)
   422 ;;_c	offset=-3 (param)
   423 ;;_w	offset	0
   424 ;;_i	offset	2
   425 ;;_fp	offset=-2 (param)
   426 ;;_buf	offset=-4 (param)
   427 ;;_p	offset=-6 (param)
   428 ;;_a	offset	0
   429 ;;_s	offset=-2 (param)
   430 ;;_i	offset	0
   431 ;;_c	offset	2
   432 ;;_s	offset=-2 (param)
   433 ;;_fp	offset=-4 (param)
   434 ;;_c	offset=-2 (param)
   435 ;;_fp	offset=-4 (param)
   436 ;;_c	offset=-1 (param)
   437 ;;__this	offset=-2 (param)
   438 ;;_c	offset=-3 (param)
   439 ;;_atoi$5950	offset	0
   440 ;;_atoi$5948	offset	2
   441 ;;_atoi$5949	offset	4
   442 ;;_n	offset	5
   443 ;;_neg	offset	7
   444 ;;_s	offset=-2 (param)
   445 ;;_isspace$5999	offset	0
   446 ;;_c	offset=-2 (param)
   447 ;;_c	offset=-2 (param)
   448 ;;_vterm	offset=-1 (param)
   449 ;;_new_response_info	offset=-1 (param)
   450 ;;_new_response_info	offset=-1 (param)
   451 ;;_level	offset=-2 (param)
   452 ;;_dutyValue	offset=-2 (param)
   453 ;;_timer	offset=-1 (param)
   454 ;;_timer	offset=-1 (param)
   455 ;;_count	offset=-3 (param)
   456 ;;_h	offset=-1 (param)
   457 ;;_u	offset	0
   458 ;;_x	offset=-4 (param)
   459 ;;_chan	offset=-1 (param)
   460 ;;_to_what	offset=-2 (param)
   461 ;;_u	offset	0
   462 ;;_s	offset=-2 (param)
   463 ;;_index	offset=-1 (param)
   464 ;;_arg	offset	0
   465 ;;_exp	offset	4
   466 ;;_sign	offset=-1 (param)
   467 ;;_val	offset=-5 (param)
   468 ;;_grs	offset	0
   469 ;;_rem	offset	4
   470 ;;_new_exp	offset	8
   471 ;;_aexp	offset	10
   472 ;;_bexp	offset	11
   473 ;;_sign	offset	12
   474 ;;_b	offset=-4 (param)
   475 ;;_a	offset=-8 (param)
   476 ;;_ff1	offset=-4 (param)
   477 ;;_ff2	offset=-8 (param)
   478 ;;_lp_speed	offset	0
   479 ;;_new	offset=-4 (param)
   480 ;;_bn	offset=-5 (param)
   481 ;;_slow	offset=-6 (param)
   482 ;;_b	offset=-4 (param)
   483 ;;_a	offset=-8 (param)
   484 ;;_grs	offset	0
   485 ;;_bexp	offset	1
   486 ;;_aexp	offset	2
   487 ;;_signs	offset	3
   488 ;;_b	offset=-4 (param)
   489 ;;_a	offset=-8 (param)
   490 ;;_prod	offset	0
   491 ;;_grs	offset	4
   492 ;;_temp	offset	8
   493 ;;_bexp	offset	10
   494 ;;_aexp	offset	11
   495 ;;_sign	offset	12
   496 ;;_b	offset=-4 (param)
   497 ;;_a	offset=-8 (param)
   498 ;;_InterruptHandler	offset=-3 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_InterruptHandler	offset=-3 (param)
   501 ;;_InterruptHandler	offset=-3 (param)
   502 ;;_InterruptHandler	offset=-3 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_state	offset	0
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_i	offset	0
   510 ;;_sw_value	offset	1
   511 ;;_timerVal	offset=-2 (param)
   512 ;;_timerVal	offset=-2 (param)
   513 ;;_log_ptr	offset	0
   514 ;;_f	offset	0
   515 ;;_ap	offset	6
   516 ;;_s	offset=-3 (param)
   517 ;;_fmt	offset=-5 (param)
   518 ;;_cfmt	offset	0
   519 ;;_fp	offset=-2 (param)
   520 ;;_fmt	offset=-4 (param)
   521 ;;_ap	offset=-6 (param)
   522 ;;_vfpfcnvrt$5443	offset	0
   523 ;;_vfpfcnvrt$5454	offset	2
   524 ;;_vfpfcnvrt$5442	offset	4
   525 ;;_llu	offset	6
   526 ;;_ll	offset	14
   527 ;;_f	offset	22
   528 ;;_ct	offset	26
   529 ;;_cp	offset	29
   530 ;;_c	offset	31
   531 ;;_fp	offset=-2 (param)
   532 ;;_fmt	offset=-4 (param)
   533 ;;_ap	offset=-6 (param)
   534 ;;_xtoa$5428	offset	0
   535 ;;_xtoa$5427	offset	2
   536 ;;_n	offset	4
   537 ;;_c	offset	12
   538 ;;_i	offset	14
   539 ;;_w	offset	16
   540 ;;_p	offset	18
   541 ;;_fp	offset=-2 (param)
   542 ;;_d	offset=-10 (param)
   543 ;;_x	offset=-11 (param)
   544 ;;_toupper$6234	offset	0
   545 ;;_c	offset=-2 (param)
   546 ;;_c	offset=-2 (param)
   547 ;;_c	offset=-2 (param)
   548 ;;_n	offset	0
   549 ;;_i	offset	8
   550 ;;_w	offset	10
   551 ;;_p	offset	12
   552 ;;_fp	offset=-2 (param)
   553 ;;_d	offset=-10 (param)
   554 ;;_counter	offset	0
   555 ;;_dividend	offset=-8 (param)
   556 ;;_divisor	offset=-16 (param)
   557 ;;_quotient	offset	0
   558 ;;_counter	offset	8
   559 ;;_dividend	offset=-8 (param)
   560 ;;_divisor	offset=-16 (param)
   561 ;;_r	offset	0
   562 ;;_l	offset	2
   563 ;;__l	offset=-2 (param)
   564 ;;__r	offset=-4 (param)
   565 ;;_n	offset=-6 (param)
   566 ;;_nuls	offset	0
   567 ;;_l	offset	7
   568 ;;_p	offset	9
   569 ;;_cp	offset	11
   570 ;;_w	offset	13
   571 ;;_i	offset	15
   572 ;;_fp	offset=-2 (param)
   573 ;;_s	offset=-4 (param)
   574 ;;_efgtoa$5400	offset	0
   575 ;;_efgtoa$5399	offset	2
   576 ;;_efgtoa$5398	offset	4
   577 ;;_efgtoa$5394	offset	6
   578 ;;_efgtoa$5390	offset	8
   579 ;;_efgtoa$5389	offset	10
   580 ;;_u	offset	12
   581 ;;_g	offset	16
   582 ;;_l	offset	20
   583 ;;_h	offset	24
   584 ;;_ou	offset	28
   585 ;;_n	offset	32
   586 ;;_e	offset	34
   587 ;;_i	offset	36
   588 ;;_w	offset	38
   589 ;;_p	offset	40
   590 ;;_sign	offset	42
   591 ;;_d	offset	44
   592 ;;_ne	offset	46
   593 ;;_m	offset	48
   594 ;;_pp	offset	50
   595 ;;_t	offset	52
   596 ;;_mode	offset	54
   597 ;;_nmode	offset	55
   598 ;;_fp	offset=-2 (param)
   599 ;;_f	offset=-6 (param)
   600 ;;_c	offset=-7 (param)
   601 ;;_tolower$6219	offset	0
   602 ;;_c	offset=-2 (param)
   603 ;;_c	offset=-2 (param)
   604 ;;_d	offset	0
   605 ;;_s	offset	2
   606 ;;_dest	offset=-2 (param)
   607 ;;_src	offset=-4 (param)
   608 ;;_u	offset	0
   609 ;;_m	offset	4
   610 ;;_e	offset	8
   611 ;;_x	offset=-4 (param)
   612 ;;_u	offset	0
   613 ;;_e	offset	4
   614 ;;_x	offset=-4 (param)
   615 ;;_exp1	offset	0
   616 ;;_sign1	offset	1
   617 ;;_f1	offset=-4 (param)
   618 ;;_b	offset=-4 (param)
   619 ;;_a	offset=-8 (param)
   620 ;;_grs	offset	0
   621 ;;_bexp	offset	1
   622 ;;_aexp	offset	2
   623 ;;_signs	offset	3
   624 ;;_b	offset=-4 (param)
   625 ;;_a	offset=-8 (param)
   626 ;;_f1	offset=-4 (param)
   627 ;;_prod	offset	0
   628 ;;_grs	offset	4
   629 ;;_temp	offset	8
   630 ;;_bexp	offset	10
   631 ;;_aexp	offset	11
   632 ;;_sign	offset	12
   633 ;;_b	offset=-4 (param)
   634 ;;_a	offset=-8 (param)
   635 ;;_ff1	offset=-4 (param)
   636 ;;_ff2	offset=-8 (param)
   637 ;;_ff1	offset=-4 (param)
   638 ;;_ff2	offset=-8 (param)
   639 ;;_grs	offset	0
   640 ;;_rem	offset	4
   641 ;;_new_exp	offset	8
   642 ;;_aexp	offset	10
   643 ;;_bexp	offset	11
   644 ;;_sign	offset	12
   645 ;;_b	offset=-4 (param)
   646 ;;_a	offset=-8 (param)
   647 ;;_sign	offset	0
   648 ;;_counter	offset	1
   649 ;;_dividend	offset=-2 (param)
   650 ;;_divisor	offset=-4 (param)
   651 ;;_quotient	offset	0
   652 ;;_sign	offset	2
   653 ;;_counter	offset	3
   654 ;;_dividend	offset=-2 (param)
   655 ;;_divisor	offset=-4 (param)
   656 ;;_dtoa$5366	offset	0
   657 ;;_n	offset	2
   658 ;;_i	offset	10
   659 ;;_s	offset	12
   660 ;;_w	offset	14
   661 ;;_p	offset	16
   662 ;;_fp	offset=-2 (param)
   663 ;;_d	offset=-10 (param)
   664 ;;_a	offset=-2 (param)
   665 ;;_sign	offset	0
   666 ;;_counter	offset	1
   667 ;;_dividend	offset=-8 (param)
   668 ;;_divisor	offset=-16 (param)
   669 ;;_quotient	offset	0
   670 ;;_sign	offset	8
   671 ;;_counter	offset	9
   672 ;;_dividend	offset=-8 (param)
   673 ;;_divisor	offset=-16 (param)
   674 ;;_w	offset	0
   675 ;;_fp	offset=-2 (param)
   676 ;;_c	offset=-3 (param)
   677 ;;_w	offset	0
   678 ;;_i	offset	2
   679 ;;_fp	offset=-2 (param)
   680 ;;_buf	offset=-4 (param)
   681 ;;_p	offset=-6 (param)
   682 ;;_a	offset	0
   683 ;;_s	offset=-2 (param)
   684 ;;_i	offset	0
   685 ;;_c	offset	2
   686 ;;_s	offset=-2 (param)
   687 ;;_fp	offset=-4 (param)
   688 ;;_c	offset=-2 (param)
   689 ;;_fp	offset=-4 (param)
   690 ;;_c	offset=-1 (param)
   691 ;;__this	offset=-2 (param)
   692 ;;_c	offset=-3 (param)
   693 ;;_atoi$5950	offset	0
   694 ;;_atoi$5948	offset	2
   695 ;;_atoi$5949	offset	4
   696 ;;_n	offset	5
   697 ;;_neg	offset	7
   698 ;;_s	offset=-2 (param)
   699 ;;_isspace$5999	offset	0
   700 ;;_c	offset=-2 (param)
   701 ;;_c	offset=-2 (param)
   702 ;;_dsize	offset=-2 (param)
   703 ;;_u	offset	0
   704 ;;_x	offset=-4 (param)
   705 ;;_timer	offset=-1 (param)
   706 ;;_count	offset=-3 (param)
   707 ;;_channel	offset=-1 (param)
   708 ;;_i	offset	0
   709                           
   710                           	psect	idataBIGRAM
   711  017BC8                     __pidataBIGRAM:
   712                           	opt callstack 0
   713                           
   714                           ;initializer for _port_data
   715  017BC8  FF                 	db	255
   716  017BC9  00                 	db	0
   717  017BCA  FF                 	db	255
   718  017BCB  00                 	db	0
   719  017BCC  FF                 	db	255
   720  017BCD  00                 	db	0
   721  017BCE  FF                 	db	255
   722  017BCF  00                 	db	0
   723  017BD0  FF                 	db	255
   724  017BD1  00                 	db	0
   725  017BD2  FF                 	db	255
   726  017BD3  00                 	db	0
   727  017BD4  FF                 	db	255
   728  017BD5  00                 	db	0
   729  017BD6  FF                 	db	255
   730  017BD7  00                 	db	0
   731  017BD8  00                 	db	0
   732  017BD9  00                 	db	0
   733  017BDA  00                 	db	0
   734  017BDB  00                 	db	0
   735  017BDC  00                 	db	0
   736  017BDD  00                 	db	0
   737  017BDE  00                 	db	0
   738  017BDF  00                 	db	0
   739  017BE0  00                 	db	0
   740  017BE1  00                 	db	0
   741  017BE2  00                 	db	0
   742  017BE3  00                 	db	0
   743  017BE4  00                 	db	0
   744  017BE5  00                 	db	0
   745  017BE6  00                 	db	0
   746  017BE7  00                 	db	0
   747  017BE8  00                 	db	0
   748  017BE9  00                 	db	0
   749  017BEA  00                 	db	0
   750  017BEB  00                 	db	0
   751  017BEC  00                 	db	0
   752  017BED  00                 	db	0
   753  017BEE  00                 	db	0
   754  017BEF  00                 	db	0
   755  017BF0  00                 	db	0
   756  017BF1  00                 	db	0
   757  017BF2  00                 	db	0
   758  017BF3  00                 	db	0
   759  017BF4  00                 	db	0
   760  017BF5  00                 	db	0
   761  017BF6  00                 	db	0
   762  017BF7  00                 	db	0
   763  017BF8  00                 	db	0
   764  017BF9  00                 	db	0
   765  017BFA  00                 	db	0
   766  017BFB  00                 	db	0
   767  017BFC  00                 	db	0
   768  017BFD  00                 	db	0
   769  017BFE  00                 	db	0
   770  017BFF  00                 	db	0
   771  017C00  00                 	db	0
   772  017C01  00                 	db	0
   773  017C02  00                 	db	0
   774  017C03  00                 	db	0
   775  017C04  00                 	db	0
   776  017C05  00                 	db	0
   777  017C06  00                 	db	0
   778  017C07  00                 	db	0
   779  017C08  00                 	db	0
   780  017C09  00                 	db	0
   781  017C0A  00                 	db	0
   782  017C0B  00                 	db	0
   783  017C0C  00                 	db	0
   784  017C0D  00                 	db	0
   785  017C0E  00                 	db	0
   786  017C0F  00                 	db	0
   787  017C10  00                 	db	0
   788  017C11  00                 	db	0
   789  017C12  00                 	db	0
   790  017C13  00                 	db	0
   791  017C14  00                 	db	0
   792  017C15  00                 	db	0
   793  017C16  00                 	db	0
   794  017C17  00                 	db	0
   795  017C18  00                 	db	0
   796  017C19  00                 	db	0
   797  017C1A  00                 	db	0
   798  017C1B  00                 	db	0
   799  017C1C  00                 	db	0
   800  017C1D  00                 	db	0
   801  017C1E  00                 	db	0
   802  017C1F  00                 	db	0
   803  017C20  00                 	db	0
   804  017C21  00                 	db	0
   805  017C22  00                 	db	0
   806  017C23  00                 	db	0
   807  017C24  00                 	db	0
   808  017C25  00                 	db	0
   809  017C26  00                 	db	0
   810  017C27  00                 	db	0
   811  017C28  00                 	db	0
   812  017C29  00                 	db	0
   813  017C2A  00                 	db	0
   814  017C2B  00                 	db	0
   815  017C2C  00                 	db	0
   816  017C2D  00                 	db	0
   817  017C2E  00                 	db	0
   818  017C2F  00                 	db	0
   819  017C30  00                 	db	0
   820  017C31  00                 	db	0
   821  017C32  00                 	db	0
   822  017C33  00                 	db	0
   823  017C34  00                 	db	0
   824  017C35  00                 	db	0
   825  017C36  00                 	db	0
   826  017C37  00                 	db	0
   827  017C38  00                 	db	0
   828  017C39  00                 	db	0
   829  017C3A  00                 	db	0
   830  017C3B  00                 	db	0
   831  017C3C  00                 	db	0
   832  017C3D  00                 	db	0
   833  017C3E  00                 	db	0
   834  017C3F  00                 	db	0
   835  017C40  00                 	db	0
   836  017C41  00                 	db	0
   837  017C42  00                 	db	0
   838  017C43  00                 	db	0
   839  017C44  00                 	db	0
   840  017C45  00                 	db	0
   841  017C46  00                 	db	0
   842  017C47  00                 	db	0
   843  017C48  00                 	db	0
   844  017C49  00                 	db	0
   845  017C4A  00                 	db	0
   846  017C4B  00                 	db	0
   847  017C4C  00                 	db	0
   848  017C4D  00                 	db	0
   849  017C4E  00                 	db	0
   850  017C4F  00                 	db	0
   851  017C50  00                 	db	0
   852  017C51  00                 	db	0
   853  017C52  00                 	db	0
   854  017C53  00                 	db	0
   855  017C54  00                 	db	0
   856  017C55  00                 	db	0
   857  017C56  00                 	db	0
   858  017C57  00                 	db	0
   859  017C58  00                 	db	0
   860  017C59  00                 	db	0
   861  017C5A  00                 	db	0
   862  017C5B  00                 	db	0
   863  017C5C  00                 	db	0
   864  017C5D  00                 	db	0
   865  017C5E  00                 	db	0
   866  017C5F  00                 	db	0
   867  017C60  00                 	db	0
   868  017C61  00                 	db	0
   869  017C62  00                 	db	0
   870  017C63  00                 	db	0
   871  017C64  00                 	db	0
   872  017C65  00                 	db	0
   873  017C66  00                 	db	0
   874  017C67  00                 	db	0
   875  017C68  00                 	db	0
   876  017C69  00                 	db	0
   877  017C6A  00                 	db	0
   878  017C6B  00                 	db	0
   879  017C6C  00                 	db	0
   880  017C6D  00                 	db	0
   881  017C6E  00                 	db	0
   882  017C6F  00                 	db	0
   883  017C70  00                 	db	0
   884  017C71  00                 	db	0
   885  017C72  00                 	db	0
   886  017C73  00                 	db	0
   887  017C74  00                 	db	0
   888  017C75  00                 	db	0
   889  017C76  00                 	db	0
   890  017C77  00                 	db	0
   891  017C78  00                 	db	0
   892  017C79  00                 	db	0
   893  017C7A  00                 	db	0
   894  017C7B  00                 	db	0
   895  017C7C  00                 	db	0
   896  017C7D  00                 	db	0
   897  017C7E  00                 	db	0
   898  017C7F  00                 	db	0
   899  017C80  00                 	db	0
   900  017C81  00                 	db	0
   901  017C82  00                 	db	0
   902  017C83  00                 	db	0
   903  017C84  00                 	db	0
   904  017C85  00                 	db	0
   905  017C86  00                 	db	0
   906  017C87  00                 	db	0
   907  017C88  00                 	db	0
   908  017C89  00                 	db	0
   909  017C8A  00                 	db	0
   910  017C8B  00                 	db	0
   911  017C8C  00                 	db	0
   912  017C8D  00                 	db	0
   913  017C8E  00                 	db	0
   914  017C8F  00                 	db	0
   915  017C90  00                 	db	0
   916  017C91  00                 	db	0
   917  017C92  00                 	db	0
   918  017C93  00                 	db	0
   919  017C94  00                 	db	0
   920  017C95  00                 	db	0
   921  017C96  00                 	db	0
   922  017C97  00                 	db	0
   923  017C98  00                 	db	0
   924  017C99  00                 	db	0
   925  017C9A  00                 	db	0
   926  017C9B  00                 	db	0
   927  017C9C  00                 	db	0
   928  017C9D  00                 	db	0
   929  017C9E  00                 	db	0
   930  017C9F  00                 	db	0
   931  017CA0  00                 	db	0
   932  017CA1  00                 	db	0
   933  017CA2  00                 	db	0
   934  017CA3  00                 	db	0
   935  017CA4  00                 	db	0
   936  017CA5  00                 	db	0
   937  017CA6  00                 	db	0
   938  017CA7  00                 	db	0
   939  017CA8  00                 	db	0
   940  017CA9  00                 	db	0
   941  017CAA  00                 	db	0
   942  017CAB  00                 	db	0
   943  017CAC  00                 	db	0
   944  017CAD  00                 	db	0
   945  017CAE  00                 	db	0
   946  017CAF  00                 	db	0
   947  017CB0  00                 	db	0
   948  017CB1  00                 	db	0
   949  017CB2  00                 	db	0
   950  017CB3  00                 	db	0
   951  017CB4  00                 	db	0
   952  017CB5  00                 	db	0
   953  017CB6  00                 	db	0
   954  017CB7  00                 	db	0
   955  017CB8  00                 	db	0
   956  017CB9  00                 	db	0
   957  017CBA  00                 	db	0
   958  017CBB  00                 	db	0
   959  017CBC  00                 	db	0
   960  017CBD  00                 	db	0
   961  017CBE  00                 	db	0
   962  017CBF  00                 	db	0
   963  017CC0  00                 	db	0
   964  017CC1  00                 	db	0
   965  017CC2  00                 	db	0
   966  017CC3  00                 	db	0
   967  017CC4  00                 	db	0
   968  017CC5  00                 	db	0
   969  017CC6  00                 	db	0
   970  017CC7  00                 	db	0
   971  017CC8  00                 	db	0
   972  017CC9  00                 	db	0
   973  017CCA  00                 	db	0
   974  017CCB  00                 	db	0
   975  017CCC  00                 	db	0
   976  017CCD  00                 	db	0
   977  017CCE  00                 	db	0
   978  017CCF  00                 	db	0
   979  017CD0  00                 	db	0
   980  017CD1  00                 	db	0
   981  017CD2  00                 	db	0
   982  017CD3  00                 	db	0
   983  017CD4  00                 	db	0
   984  017CD5  00                 	db	0
   985  017CD6  00                 	db	0
   986  017CD7  00                 	db	0
   987  017CD8  00                 	db	0
   988  017CD9  00                 	db	0
   989  017CDA  00                 	db	0
   990  017CDB  00                 	db	0
   991  017CDC  00                 	db	0
   992  017CDD  00                 	db	0
   993  017CDE  00                 	db	0
   994  017CDF  00                 	db	0
   995  017CE0  00                 	db	0
   996  017CE1  00                 	db	0
   997  017CE2  00                 	db	0
   998  017CE3  00                 	db	0
   999  017CE4  00                 	db	0
  1000  017CE5  00                 	db	0
  1001  017CE6  00                 	db	0
  1002  017CE7  00                 	db	0
  1003  017CE8  00                 	db	0
  1004  017CE9  00                 	db	0
  1005  017CEA  00                 	db	0
  1006  017CEB  00                 	db	0
  1007  017CEC  00                 	db	0
  1008  017CED  00                 	db	0
  1009  017CEE  00                 	db	0
  1010  017CEF  00                 	db	0
  1011  017CF0  00                 	db	0
  1012  017CF1  00                 	db	0
  1013  017CF2  00                 	db	0
  1014  017CF3  00                 	db	0
  1015  017CF4  00                 	db	0
  1016  017CF5  00                 	db	0
  1017  017CF6  00                 	db	0
  1018  017CF7  00                 	db	0
  1019  017CF8  00                 	db	0
  1020  017CF9  00                 	db	0
  1021  017CFA  00                 	db	0
  1022  017CFB  00                 	db	0
  1023  017CFC  00                 	db	0
  1024  017CFD  00                 	db	0
  1025  017CFE  00                 	db	0
  1026  017CFF  00                 	db	0
  1027  017D00  00                 	db	0
  1028  017D01  00                 	db	0
  1029  017D02  00                 	db	0
  1030  017D03  00                 	db	0
  1031  017D04  00                 	db	0
  1032  017D05  00                 	db	0
  1033  017D06  00                 	db	0
  1034  017D07  00                 	db	0
  1035  017D08  00                 	db	0
  1036  017D09  00                 	db	0
  1037  017D0A  00                 	db	0
  1038  017D0B  00                 	db	0
  1039  017D0C  00                 	db	0
  1040  017D0D  00                 	db	0
  1041  017D0E  00                 	db	0
  1042  017D0F  00                 	db	0
  1043  017D10  00                 	db	0
  1044  017D11  00                 	db	0
  1045  017D12  00                 	db	0
  1046  017D13  00                 	db	0
  1047  017D14  00                 	db	0
  1048  017D15  00                 	db	0
  1049  017D16  00                 	db	0
  1050  017D17  00                 	db	0
  1051  017D18  00                 	db	0
  1052  017D19  00                 	db	0
  1053  017D1A  00                 	db	0
  1054  017D1B  00                 	db	0
  1055  017D1C  00                 	db	0
  1056  017D1D  00                 	db	0
  1057  017D1E  00                 	db	0
  1058  017D1F  00                 	db	0
  1059  017D20  00                 	db	0
  1060  017D21  00                 	db	0
  1061  017D22  00                 	db	0
  1062  017D23  00                 	db	0
  1063  017D24  00                 	db	0
  1064  017D25  00                 	db	0
  1065  017D26  00                 	db	0
  1066  017D27  00                 	db	0
  1067  017D28  00                 	db	0
  1068  017D29  00                 	db	0
  1069  017D2A  00                 	db	0
  1070  017D2B  00                 	db	0
  1071  017D2C  00                 	db	0
  1072  017D2D  00                 	db	0
  1073  017D2E  00                 	db	0
  1074  017D2F  00                 	db	0
  1075  017D30  00                 	db	0
  1076  017D31  00                 	db	0
  1077  017D32  00                 	db	0
  1078  017D33  00                 	db	0
  1079  017D34  00                 	db	0
  1080  017D35  00                 	db	0
  1081  017D36  00                 	db	0
  1082  017D37  00                 	db	0
  1083  017D38  00                 	db	0
  1084  017D39  00                 	db	0
  1085  017D3A  00                 	db	0
  1086  017D3B  00                 	db	0
  1087  017D3C  00                 	db	0
  1088  017D3D  00                 	db	0
  1089  017D3E  00                 	db	0
  1090  017D3F  00                 	db	0
  1091  017D40  00                 	db	0
  1092  017D41  00                 	db	0
  1093  017D42  00                 	db	0
  1094  017D43  00                 	db	0
  1095  017D44  00                 	db	0
  1096  017D45  00                 	db	0
  1097  017D46  00                 	db	0
  1098  017D47  00                 	db	0
  1099  017D48  00                 	db	0
  1100  017D49  00                 	db	0
  1101  017D4A  00                 	db	0
  1102  017D4B  00                 	db	0
  1103  017D4C  00                 	db	0
  1104  017D4D  00                 	db	0
  1105  017D4E  00                 	db	0
  1106  017D4F  00                 	db	0
  1107  017D50  00                 	db	0
  1108  017D51  00                 	db	0
  1109  017D52  00                 	db	0
  1110  017D53  00                 	db	0
  1111  017D54  00                 	db	0
  1112  017D55  00                 	db	0
  1113  017D56  00                 	db	0
  1114  017D57  00                 	db	0
  1115  017D58  00                 	db	0
  1116  017D59  00                 	db	0
  1117  017D5A  00                 	db	0
  1118  017D5B  00                 	db	0
  1119  017D5C  00                 	db	0
  1120  017D5D  00                 	db	0
  1121  017D5E  00                 	db	0
  1122  017D5F  00                 	db	0
  1123  017D60  00                 	db	0
  1124  017D61  00                 	db	0
  1125  017D62  00                 	db	0
  1126  017D63  00                 	db	0
  1127  017D64  00                 	db	0
  1128  017D65  00                 	db	0
  1129  017D66  00                 	db	0
  1130  017D67  00                 	db	0
  1131  017D68  00                 	db	0
  1132  017D69  00                 	db	0
  1133  017D6A  00                 	db	0
  1134  017D6B  00                 	db	0
  1135  017D6C  00                 	db	0
  1136  017D6D  00                 	db	0
  1137  017D6E  00                 	db	0
  1138  017D6F  00                 	db	0
  1139  017D70  00                 	db	0
  1140  017D71  00                 	db	0
  1141  017D72  00                 	db	0
  1142  017D73  00                 	db	0
  1143  017D74  00                 	db	0
  1144  017D75  00                 	db	0
  1145  017D76  00                 	db	0
  1146  017D77  00                 	db	0
  1147  017D78  00                 	db	0
  1148  017D79  00                 	db	0
  1149  017D7A  00                 	db	0
  1150  017D7B  00                 	db	0
  1151  017D7C  00                 	db	0
  1152  017D7D  00                 	db	0
  1153  017D7E  00                 	db	0
  1154  017D7F  00                 	db	0
  1155  017D80  00                 	db	0
  1156  017D81  00                 	db	0
  1157  017D82  00                 	db	0
  1158  017D83  00                 	db	0
  1159  017D84  00                 	db	0
  1160  017D85  00                 	db	0
  1161  017D86  00                 	db	0
  1162  017D87  00                 	db	0
  1163  017D88  00                 	db	0
  1164  017D89  00                 	db	0
  1165  017D8A  00                 	db	0
  1166  017D8B  00                 	db	0
  1167  017D8C  00                 	db	0
  1168  017D8D  00                 	db	0
  1169  017D8E  00                 	db	0
  1170  017D8F  00                 	db	0
  1171  017D90  00                 	db	0
  1172  017D91  00                 	db	0
  1173  017D92  00                 	db	0
  1174  017D93  00                 	db	0
  1175  017D94  00                 	db	0
  1176  017D95  00                 	db	0
  1177  017D96  00                 	db	0
  1178  017D97  00                 	db	0
  1179  017D98  00                 	db	0
  1180  017D99  00                 	db	0
  1181  017D9A  00                 	db	0
  1182  017D9B  00                 	db	0
  1183  017D9C  00                 	db	0
  1184  017D9D  00                 	db	0
  1185  017D9E  00                 	db	0
  1186  017D9F  00                 	db	0
  1187  017DA0  00                 	db	0
  1188  017DA1  00                 	db	0
  1189  017DA2  00                 	db	0
  1190  017DA3  00                 	db	0
  1191  017DA4  00                 	db	0
  1192  017DA5  00                 	db	0
  1193  017DA6  00                 	db	0
  1194  017DA7  00                 	db	0
  1195  017DA8  00                 	db	0
  1196  017DA9  00                 	db	0
  1197  017DAA  00                 	db	0
  1198  017DAB  00                 	db	0
  1199  017DAC  00                 	db	0
  1200  017DAD  00                 	db	0
  1201  017DAE  00                 	db	0
  1202  017DAF  00                 	db	0
  1203  017DB0  00                 	db	0
  1204  017DB1  00                 	db	0
  1205  017DB2  00                 	db	0
  1206  017DB3  00                 	db	0
  1207  017DB4  00                 	db	0
  1208  017DB5  00                 	db	0
  1209  017DB6  00                 	db	0
  1210  017DB7  00                 	db	0
  1211  017DB8  00                 	db	0
  1212  017DB9  00                 	db	0
  1213  017DBA  00                 	db	0
  1214  017DBB  00                 	db	0
  1215  017DBC  00                 	db	0
  1216  017DBD  00                 	db	0
  1217  017DBE  00                 	db	0
  1218  017DBF  00                 	db	0
  1219  017DC0  00                 	db	0
  1220  017DC1  00                 	db	0
  1221  017DC2  00                 	db	0
  1222  017DC3  00                 	db	0
  1223  017DC4  00                 	db	0
  1224  017DC5  00                 	db	0
  1225  017DC6  00                 	db	0
  1226  017DC7  00                 	db	0
  1227                           
  1228                           	psect	idataBANK0
  1229  01ADE4                     __pidataBANK0:
  1230                           	opt callstack 0
  1231                           
  1232                           ;initializer for _R
  1233  01ADE4  0000               	dw	0
  1234  01ADE6  0000               	dw	0
  1235  01ADE8  0000               	dw	0
  1236  01ADEA  0000               	dw	0
  1237  01ADEC  0000               	dw	0
  1238  01ADEE  0000               	dw	0
  1239  01ADF0  0000               	dw	0
  1240  01ADF2  0000               	dw	0
  1241  01ADF4  0000               	dw	0
  1242  01ADF6  0000               	dw	0
  1243  01ADF8  0000               	dw	0
  1244  01ADFA  0000               	dw	0
  1245  01ADFC  0000               	dw	0
  1246  01ADFE  0000               	dw	0
  1247  01AE00  0000               	dw	0
  1248  01AE02  0000               	dw	0
  1249  01AE04  0F67               	dw	3943
  1250  01AE06  0F8F               	dw	3983
  1251  01AE08  00                 	db	0
  1252  01AE09  0000               	dw	0
  1253  01AE0B  00                 	db	0
  1254                           
  1255                           ;initializer for stoa@F1166
  1256  01AE0C  28                 	db	40
  1257  01AE0D  6E                 	db	110
  1258  01AE0E  75                 	db	117
  1259  01AE0F  6C                 	db	108
  1260  01AE10  6C                 	db	108
  1261  01AE11  29                 	db	41
  1262  01AE12  00                 	db	0
  1263                           
  1264                           ;initializer for _H
  1265  01AE13  00                 	db	0
  1266  01AE14  00                 	db	0
  1267  01AE15  01                 	db	1
  1268  01AE16  00                 	db	0
  1269  01AE17  01                 	db	1
  1270  01AE18  00                 	db	0
  1271  01AE19  00                 	db	0
  1272                           
  1273                           	psect	idataBANK1
  1274  01962C                     __pidataBANK1:
  1275                           	opt callstack 0
  1276                           
  1277                           ;initializer for _C
  1278  01962C  0000               	dw	0
  1279  01962E  0000               	dw	0
  1280  019630  0000               	dw	0
  1281  019632  0000               	dw	0
  1282  019634  0000               	dw	0
  1283  019636  0000               	dw	0
  1284  019638  0000               	dw	0
  1285  01963A  0000               	dw	0
  1286  01963C  0000               	dw	0
  1287  01963E  0000               	dw	0
  1288  019640  0000               	dw	0
  1289  019642  0000               	dw	0
  1290  019644  0000               	dw	0
  1291  019646  0000               	dw	0
  1292  019648  0000               	dw	0
  1293  01964A  0000               	dw	0
  1294  01964C  0000               	dw	0
  1295  01964E  0000               	dw	0
  1296  019650  0000               	dw	0
  1297  019652  0000               	dw	0
  1298  019654  0000               	dw	0
  1299  019656  0000               	dw	0
  1300  019658  0000               	dw	0
  1301  01965A  0000               	dw	0
  1302  01965C  0000               	dw	0
  1303  01965E  0000               	dw	0
  1304  019660  0000               	dw	0
  1305  019662  0000               	dw	0
  1306  019664  0000               	dw	0
  1307  019666  0000               	dw	0
  1308  019668  0000               	dw	0
  1309  01966A  0000               	dw	0
  1310  01966C  0000               	dw	0
  1311  01966E  0000               	dw	0
  1312  019670  0000               	dw	0
  1313  019672  0000               	dw	0
  1314  019674  0000               	dw	0
  1315  019676  0000               	dw	0
  1316  019678  0000               	dw	0
  1317  01967A  0000               	dw	0
  1318  01967C  0000               	dw	0
  1319  01967E  0000               	dw	0
  1320  019680  0000               	dw	0
  1321  019682  0000               	dw	0
  1322  019684  0000               	dw	0
  1323  019686  0000               	dw	0
  1324  019688  0000               	dw	0
  1325  01968A  0000               	dw	0
  1326  01968C  0000               	dw	0
  1327  01968E  0000               	dw	0
  1328  019690  0000               	dw	0
  1329  019692  0000               	dw	0
  1330  019694  0000               	dw	0
  1331  019696  0000               	dw	0
  1332  019698  0000               	dw	0
  1333  01969A  0000               	dw	0
  1334  01969C  0000               	dw	0
  1335  01969E  0000               	dw	0
  1336  0196A0  0000               	dw	0
  1337  0196A2  0000               	dw	0
  1338  0196A4  0000               	dw	0
  1339  0196A6  0000               	dw	0
  1340  0196A8  0000               	dw	0
  1341  0196AA  0000               	dw	0
  1342  0196AC  0000               	dw	0
  1343  0196AE  0000               	dw	0
  1344  0196B0  0000               	dw	0
  1345  0196B2  0000               	dw	0
  1346  0196B4  0000               	dw	0
  1347  0196B6  42FA               	dw	17146
  1348  0196B8  00                 	db	0
  1349  0196B9  00                 	db	0
  1350  0196BA  00                 	db	0
  1351  0196BB  00                 	db	0
  1352  0196BC  00                 	db	0
  1353  0196BD  00                 	db	0
  1354  0196BE  00                 	db	0
  1355  0196BF  00                 	db	0
  1356  0196C0  00                 	db	0
  1357  0196C1  00                 	db	0
  1358  0196C2  00                 	db	0
  1359  0196C3  00                 	db	0
  1360  0196C4  00                 	db	0
  1361  0196C5  00                 	db	0
  1362  0196C6  00                 	db	0
  1363  0196C7  00                 	db	0
  1364  0196C8  00                 	db	0
  1365  0196C9  00                 	db	0
  1366  0196CA  00                 	db	0
  1367  0196CB  00                 	db	0
  1368  0196CC  00                 	db	0
  1369  0196CD  00                 	db	0
  1370  0196CE  00                 	db	0
  1371  0196CF  00                 	db	0
  1372  0196D0  00                 	db	0
  1373  0196D1  00                 	db	0
  1374  0196D2  00                 	db	0
  1375  0196D3  00                 	db	0
  1376  0196D4  00                 	db	0
  1377  0196D5  00                 	db	0
  1378  0196D6  00                 	db	0
  1379  0196D7  00                 	db	0
  1380  0196D8  00                 	db	0
  1381  0196D9  00                 	db	0
  1382  0196DA  00                 	db	0
  1383  0196DB  00                 	db	0
  1384  0196DC  00                 	db	0
  1385  0196DD  00                 	db	0
  1386  0196DE  00                 	db	0
  1387  0196DF  00                 	db	0
  1388  0196E0  00                 	db	0
  1389  0196E1  00                 	db	0
  1390  0196E2  00                 	db	0
  1391  0196E3  00                 	db	0
  1392  0196E4  00                 	db	0
  1393  0196E5  00                 	db	0
  1394  0196E6  00                 	db	0
  1395  0196E7  00                 	db	0
  1396  0196E8  00                 	db	0
  1397  0196E9  00                 	db	0
  1398  0196EA  00                 	db	0
  1399  0196EB  00                 	db	0
  1400  0196EC  00                 	db	0
  1401  0196ED  00                 	db	0
  1402  0196EE  00                 	db	0
  1403  0196EF  00                 	db	0
  1404  0196F0  00                 	db	0
  1405  0196F1  00                 	db	0
  1406  0196F2  00                 	db	0
  1407  0196F3  00                 	db	0
  1408  0196F4  00                 	db	0
  1409  0196F5  00                 	db	0
  1410  0196F6  00                 	db	0
  1411  0196F7  00                 	db	0
  1412  0196F8  00                 	db	0
  1413  0196F9  00                 	db	0
  1414  0196FA  00                 	db	0
  1415  0196FB  00                 	db	0
  1416  0196FC  00                 	db	0
  1417  0196FD  00                 	db	0
  1418  0196FE  00                 	db	0
  1419  0196FF  00                 	db	0
  1420  019700  00                 	db	0
  1421  019701  00                 	db	0
  1422  019702  00                 	db	0
  1423  019703  00                 	db	0
  1424  019704  00                 	db	0
  1425  019705  00                 	db	0
  1426  019706  00                 	db	0
  1427  019707  00                 	db	0
  1428  019708  00                 	db	0
  1429  019709  00                 	db	0
  1430  01970A  00                 	db	0
  1431  01970B  00                 	db	0
  1432  01970C  00                 	db	0
  1433  01970D  00                 	db	0
  1434  01970E  00                 	db	0
  1435  01970F  00                 	db	0
  1436  019710  00                 	db	0
  1437  019711  00                 	db	0
  1438  019712  00                 	db	0
  1439  019713  00                 	db	0
  1440  019714  00                 	db	0
  1441  019715  00                 	db	0
  1442  019716  00                 	db	0
  1443  019717  00                 	db	0
  1444  019718  00                 	db	0
  1445  019719  00                 	db	0
  1446  01971A  00                 	db	0
  1447  01971B  00                 	db	0
  1448  01971C  00                 	db	0
  1449  01971D  00                 	db	0
  1450  01971E  00                 	db	0
  1451  01971F  00                 	db	0
  1452  019720  00                 	db	0
  1453  019721  00                 	db	0
  1454  019722  00                 	db	0
  1455                           
  1456                           	psect	idataBANK2
  1457  019A8C                     __pidataBANK2:
  1458                           	opt callstack 0
  1459                           
  1460                           ;initializer for _V
  1461  019A8C  00                 	db	0
  1462  019A8D  00                 	db	0
  1463  019A8E  00                 	db	0
  1464  019A8F  00                 	db	0
  1465  019A90  00                 	db	0
  1466  019A91  00                 	db	0
  1467  019A92  00                 	db	0
  1468  019A93  00                 	db	0
  1469  019A94  00                 	db	0
  1470  019A95  00                 	db	0
  1471  019A96  00                 	db	0
  1472  019A97  00                 	db	0
  1473  019A98  00                 	db	0
  1474  019A99  00                 	db	0
  1475  019A9A  00                 	db	0
  1476  019A9B  00                 	db	0
  1477  019A9C  00                 	db	0
  1478  019A9D  00                 	db	0
  1479  019A9E  00                 	db	0
  1480  019A9F  00                 	db	0
  1481  019AA0  00                 	db	0
  1482  019AA1  00                 	db	0
  1483  019AA2  00                 	db	0
  1484  019AA3  00                 	db	0
  1485  019AA4  00                 	db	0
  1486  019AA5  00                 	db	0
  1487  019AA6  00                 	db	0
  1488  019AA7  00                 	db	0
  1489  019AA8  00                 	db	0
  1490  019AA9  00                 	db	0
  1491  019AAA  00                 	db	0
  1492  019AAB  00                 	db	0
  1493  019AAC  00                 	db	0
  1494  019AAD  00                 	db	0
  1495  019AAE  00                 	db	0
  1496  019AAF  00                 	db	0
  1497  019AB0  00                 	db	0
  1498  019AB1  00                 	db	0
  1499  019AB2  00                 	db	0
  1500  019AB3  00                 	db	0
  1501  019AB4  00                 	db	0
  1502  019AB5  00                 	db	0
  1503  019AB6  00                 	db	0
  1504  019AB7  00                 	db	0
  1505  019AB8  00                 	db	0
  1506  019AB9  00                 	db	0
  1507  019ABA  00                 	db	0
  1508  019ABB  00                 	db	0
  1509  019ABC  00                 	db	0
  1510  019ABD  00                 	db	0
  1511  019ABE  00                 	db	0
  1512  019ABF  00                 	db	0
  1513  019AC0  00                 	db	0
  1514  019AC1  00                 	db	0
  1515  019AC2  00                 	db	0
  1516  019AC3  00                 	db	0
  1517  019AC4  00                 	db	0
  1518  019AC5  00                 	db	0
  1519  019AC6  00                 	db	0
  1520  019AC7  00                 	db	0
  1521  019AC8  00                 	db	0
  1522  019AC9  00                 	db	0
  1523  019ACA  00                 	db	0
  1524  019ACB  00                 	db	0
  1525  019ACC  00                 	db	0
  1526  019ACD  00                 	db	0
  1527  019ACE  00                 	db	0
  1528  019ACF  00                 	db	0
  1529  019AD0  00                 	db	0
  1530  019AD1  00                 	db	0
  1531  019AD2  00                 	db	0
  1532  019AD3  00                 	db	0
  1533  019AD4  00                 	db	0
  1534  019AD5  00                 	db	0
  1535  019AD6  00                 	db	0
  1536  019AD7  00                 	db	0
  1537  019AD8  00                 	db	0
  1538  019AD9  00                 	db	0
  1539  019ADA  00                 	db	0
  1540  019ADB  00                 	db	0
  1541  019ADC  00                 	db	0
  1542  019ADD  00                 	db	0
  1543  019ADE  00                 	db	0
  1544  019ADF  00                 	db	0
  1545  019AE0  00                 	db	0
  1546  019AE1  00                 	db	0
  1547  019AE2  00                 	db	0
  1548  019AE3  00                 	db	0
  1549  019AE4  00                 	db	0
  1550  019AE5  00                 	db	0
  1551  019AE6  00                 	db	0
  1552  019AE7  00                 	db	0
  1553  019AE8  00                 	db	0
  1554  019AE9  00                 	db	0
  1555  019AEA  00                 	db	0
  1556  019AEB  00                 	db	0
  1557  019AEC  00                 	db	0
  1558  019AED  00                 	db	0
  1559  019AEE  00                 	db	0
  1560  019AEF  00                 	db	0
  1561  019AF0  00                 	db	0
  1562  019AF1  00                 	db	0
  1563  019AF2  00                 	db	0
  1564  019AF3  00                 	db	0
  1565  019AF4  00                 	db	0
  1566  019AF5  00                 	db	0
  1567  019AF6  00                 	db	0
  1568  019AF7  00                 	db	0
  1569  019AF8  00                 	db	0
  1570  019AF9  00                 	db	0
  1571  019AFA  00                 	db	0
  1572  019AFB  00                 	db	0
  1573  019AFC  00                 	db	0
  1574  019AFD  00                 	db	0
  1575  019AFE  00                 	db	0
  1576  019AFF  00                 	db	0
  1577  019B00  00                 	db	0
  1578  019B01  00                 	db	0
  1579  019B02  00                 	db	0
  1580  019B03  00                 	db	0
  1581  019B04  00                 	db	0
  1582  019B05  00                 	db	0
  1583  019B06  00                 	db	0
  1584  019B07  00                 	db	0
  1585  019B08  00                 	db	0
  1586  019B09  00                 	db	0
  1587  019B0A  00                 	db	0
  1588  019B0B  00                 	db	0
  1589  019B0C  00                 	db	0
  1590  019B0D  0000               	dw	0
  1591  019B0F  0000               	dw	0
  1592  019B11  0000               	dw	0
  1593  019B13  0000               	dw	0
  1594  019B15  00                 	db	0
  1595  019B16  00                 	db	0
  1596  019B17  00                 	db	0
  1597  019B18  00                 	db	0
  1598  019B19  00                 	db	0
  1599  019B1A  00                 	db	0
  1600  019B1B  0000               	dw	0
  1601  019B1D  0000               	dw	0
  1602  019B1F  0000               	dw	0
  1603  019B21  0000               	dw	0
  1604  019B23  0000               	dw	0
  1605  019B25  0000               	dw	0
  1606  019B27  00                 	db	0
  1607  019B28  00                 	db	0
  1608  019B29  00                 	db	0
  1609  019B2A  00                 	db	0
  1610  019B2B  00                 	db	0
  1611  019B2C  00                 	db	0
  1612  019B2D  00                 	db	0
  1613  019B2E  00                 	db	0
  1614  019B2F  00                 	db	0
  1615  019B30  00                 	db	0
  1616  019B31  00                 	db	0
  1617  019B32  0000               	dw	0
  1618  019B34  0000               	dw	0
  1619  019B36  2D                 	db	45
  1620  019B37  00                 	db	0
  1621  019B38  00                 	db	0
  1622  019B39  00                 	db	0
  1623  019B3A  0000               	dw	0
  1624  019B3C  0000               	dw	0
  1625  019B3E  0000               	dw	0
  1626  019B40  0000               	dw	0
  1627  019B42  0000               	dw	0
  1628  019B44  0000               	dw	0
  1629  019B46  0000               	dw	0
  1630  019B48  0000               	dw	0
  1631                           
  1632                           	psect	mediumconst
  1633  00FA7A                     __pmediumconst:
  1634                           	opt callstack 0
  1635  00FA7A  00                 	db	0
  1636  00FA7B                     _BVSOC_TABLE:
  1637                           	opt callstack 0
  1638  00FA7B  59D8               	dw	23000
  1639  00FA7D  0000               	dw	0
  1640  00FA7F  0005               	dw	5
  1641  00FA81  0000               	dw	0
  1642  00FA83  5B68               	dw	23400
  1643  00FA85  0000               	dw	0
  1644  00FA87  000A               	dw	10
  1645  00FA89  0000               	dw	0
  1646  00FA8B  5C30               	dw	23600
  1647  00FA8D  0000               	dw	0
  1648  00FA8F  0014               	dw	20
  1649  00FA91  0000               	dw	0
  1650  00FA93  5E38               	dw	24120
  1651  00FA95  0000               	dw	0
  1652  00FA97  0019               	dw	25
  1653  00FA99  0000               	dw	0
  1654  00FA9B  5E88               	dw	24200
  1655  00FA9D  0000               	dw	0
  1656  00FA9F  001E               	dw	30
  1657  00FAA1  0000               	dw	0
  1658  00FAA3  5F78               	dw	24440
  1659  00FAA5  0000               	dw	0
  1660  00FAA7  0028               	dw	40
  1661  00FAA9  0000               	dw	0
  1662  00FAAB  5FDC               	dw	24540
  1663  00FAAD  0000               	dw	0
  1664  00FAAF  002D               	dw	45
  1665  00FAB1  0000               	dw	0
  1666  00FAB3  6018               	dw	24600
  1667  00FAB5  0000               	dw	0
  1668  00FAB7  0032               	dw	50
  1669  00FAB9  0000               	dw	0
  1670  00FABB  6046               	dw	24646
  1671  00FABD  0000               	dw	0
  1672  00FABF  0035               	dw	53
  1673  00FAC1  0000               	dw	0
  1674  00FAC3  607C               	dw	24700
  1675  00FAC5  0000               	dw	0
  1676  00FAC7  0037               	dw	55
  1677  00FAC9  0000               	dw	0
  1678  00FACB  60AE               	dw	24750
  1679  00FACD  0000               	dw	0
  1680  00FACF  0039               	dw	57
  1681  00FAD1  0000               	dw	0
  1682  00FAD3  60E0               	dw	24800
  1683  00FAD5  0000               	dw	0
  1684  00FAD7  003C               	dw	60
  1685  00FAD9  0000               	dw	0
  1686  00FADB  6112               	dw	24850
  1687  00FADD  0000               	dw	0
  1688  00FADF  003F               	dw	63
  1689  00FAE1  0000               	dw	0
  1690  00FAE3  615D               	dw	24925
  1691  00FAE5  0000               	dw	0
  1692  00FAE7  0043               	dw	67
  1693  00FAE9  0000               	dw	0
  1694  00FAEB  61A8               	dw	25000
  1695  00FAED  0000               	dw	0
  1696  00FAEF  0046               	dw	70
  1697  00FAF1  0000               	dw	0
  1698  00FAF3  61BC               	dw	25020
  1699  00FAF5  0000               	dw	0
  1700  00FAF7  0048               	dw	72
  1701  00FAF9  0000               	dw	0
  1702  00FAFB  61D0               	dw	25040
  1703  00FAFD  0000               	dw	0
  1704  00FAFF  004B               	dw	75
  1705  00FB01  0000               	dw	0
  1706  00FB03  61DA               	dw	25050
  1707  00FB05  0000               	dw	0
  1708  00FB07  0050               	dw	80
  1709  00FB09  0000               	dw	0
  1710  00FB0B  61E4               	dw	25060
  1711  00FB0D  0000               	dw	0
  1712  00FB0F  0055               	dw	85
  1713  00FB11  0000               	dw	0
  1714  00FB13  61F8               	dw	25080
  1715  00FB15  0000               	dw	0
  1716  00FB17  005A               	dw	90
  1717  00FB19  0000               	dw	0
  1718  00FB1B  6208               	dw	25096
  1719  00FB1D  0000               	dw	0
  1720  00FB1F  005C               	dw	92
  1721  00FB21  0000               	dw	0
  1722  00FB23  6222               	dw	25122
  1723  00FB25  0000               	dw	0
  1724  00FB27  005D               	dw	93
  1725  00FB29  0000               	dw	0
  1726  00FB2B  6234               	dw	25140
  1727  00FB2D  0000               	dw	0
  1728  00FB2F  005F               	dw	95
  1729  00FB31  0000               	dw	0
  1730  00FB33  6248               	dw	25160
  1731  00FB35  0000               	dw	0
  1732  00FB37  0061               	dw	97
  1733  00FB39  0000               	dw	0
  1734  00FB3B  625C               	dw	25180
  1735  00FB3D  0000               	dw	0
  1736  00FB3F  0064               	dw	100
  1737  00FB41  0000               	dw	0
  1738  00FB43  6784               	dw	26500
  1739  00FB45  0000               	dw	0
  1740  00FB47  0062               	dw	98
  1741  00FB49  0000               	dw	0
  1742  00FB4B                     __end_of_BVSOC_TABLE:
  1743                           	opt callstack 0
  1744  00FB4B                     _T:
  1745                           	opt callstack 0
  1746  00FB4B  63                 	db	99
  1747  00FB4C  6F                 	db	111
  1748  00FB4D  6D                 	db	109
  1749  00FB4E  6D                 	db	109
  1750  00FB4F  61                 	db	97
  1751  00FB50  6E                 	db	110
  1752  00FB51  64                 	db	100
  1753  00FB52  73                 	db	115
  1754  00FB53  20                 	db	32
  1755  00FB54  31                 	db	49
  1756  00FB55  00                 	db	0
  1757  00FB56  00                 	db	0
  1758  00FB57  00                 	db	0
  1759  00FB58  00                 	db	0
  1760  00FB59  00                 	db	0
  1761  00FB5A  00                 	db	0
  1762  00FB5B  00                 	db	0
  1763  00FB5C  00                 	db	0
  1764  00FB5D  64                 	db	100
  1765  00FB5E  69                 	db	105
  1766  00FB5F  73                 	db	115
  1767  00FB60  70                 	db	112
  1768  00FB61  6C                 	db	108
  1769  00FB62  61                 	db	97
  1770  00FB63  79                 	db	121
  1771  00FB64  73                 	db	115
  1772  00FB65  20                 	db	32
  1773  00FB66  31                 	db	49
  1774  00FB67  00                 	db	0
  1775  00FB68  00                 	db	0
  1776  00FB69  00                 	db	0
  1777  00FB6A  00                 	db	0
  1778  00FB6B  00                 	db	0
  1779  00FB6C  00                 	db	0
  1780  00FB6D  00                 	db	0
  1781  00FB6E  00                 	db	0
  1782  00FB6F  63                 	db	99
  1783  00FB70  6F                 	db	111
  1784  00FB71  6D                 	db	109
  1785  00FB72  6D                 	db	109
  1786  00FB73  61                 	db	97
  1787  00FB74  6E                 	db	110
  1788  00FB75  64                 	db	100
  1789  00FB76  73                 	db	115
  1790  00FB77  20                 	db	32
  1791  00FB78  32                 	db	50
  1792  00FB79  00                 	db	0
  1793  00FB7A  00                 	db	0
  1794  00FB7B  00                 	db	0
  1795  00FB7C  00                 	db	0
  1796  00FB7D  00                 	db	0
  1797  00FB7E  00                 	db	0
  1798  00FB7F  00                 	db	0
  1799  00FB80  00                 	db	0
  1800  00FB81  64                 	db	100
  1801  00FB82  69                 	db	105
  1802  00FB83  73                 	db	115
  1803  00FB84  70                 	db	112
  1804  00FB85  6C                 	db	108
  1805  00FB86  61                 	db	97
  1806  00FB87  79                 	db	121
  1807  00FB88  73                 	db	115
  1808  00FB89  20                 	db	32
  1809  00FB8A  32                 	db	50
  1810  00FB8B  00                 	db	0
  1811  00FB8C  00                 	db	0
  1812  00FB8D  00                 	db	0
  1813  00FB8E  00                 	db	0
  1814  00FB8F  00                 	db	0
  1815  00FB90  00                 	db	0
  1816  00FB91  00                 	db	0
  1817  00FB92  00                 	db	0
  1818  00FB93  63                 	db	99
  1819  00FB94  6F                 	db	111
  1820  00FB95  6D                 	db	109
  1821  00FB96  6D                 	db	109
  1822  00FB97  61                 	db	97
  1823  00FB98  6E                 	db	110
  1824  00FB99  64                 	db	100
  1825  00FB9A  73                 	db	115
  1826  00FB9B  20                 	db	32
  1827  00FB9C  33                 	db	51
  1828  00FB9D  00                 	db	0
  1829  00FB9E  00                 	db	0
  1830  00FB9F  00                 	db	0
  1831  00FBA0  00                 	db	0
  1832  00FBA1  00                 	db	0
  1833  00FBA2  00                 	db	0
  1834  00FBA3  00                 	db	0
  1835  00FBA4  00                 	db	0
  1836  00FBA5  64                 	db	100
  1837  00FBA6  69                 	db	105
  1838  00FBA7  73                 	db	115
  1839  00FBA8  70                 	db	112
  1840  00FBA9  6C                 	db	108
  1841  00FBAA  61                 	db	97
  1842  00FBAB  79                 	db	121
  1843  00FBAC  73                 	db	115
  1844  00FBAD  20                 	db	32
  1845  00FBAE  33                 	db	51
  1846  00FBAF  00                 	db	0
  1847  00FBB0  00                 	db	0
  1848  00FBB1  00                 	db	0
  1849  00FBB2  00                 	db	0
  1850  00FBB3  00                 	db	0
  1851  00FBB4  00                 	db	0
  1852  00FBB5  00                 	db	0
  1853  00FBB6  00                 	db	0
  1854  00FBB7  63                 	db	99
  1855  00FBB8  6F                 	db	111
  1856  00FBB9  6D                 	db	109
  1857  00FBBA  6D                 	db	109
  1858  00FBBB  61                 	db	97
  1859  00FBBC  6E                 	db	110
  1860  00FBBD  64                 	db	100
  1861  00FBBE  73                 	db	115
  1862  00FBBF  20                 	db	32
  1863  00FBC0  34                 	db	52
  1864  00FBC1  00                 	db	0
  1865  00FBC2  00                 	db	0
  1866  00FBC3  00                 	db	0
  1867  00FBC4  00                 	db	0
  1868  00FBC5  00                 	db	0
  1869  00FBC6  00                 	db	0
  1870  00FBC7  00                 	db	0
  1871  00FBC8  00                 	db	0
  1872  00FBC9  64                 	db	100
  1873  00FBCA  69                 	db	105
  1874  00FBCB  73                 	db	115
  1875  00FBCC  70                 	db	112
  1876  00FBCD  6C                 	db	108
  1877  00FBCE  61                 	db	97
  1878  00FBCF  79                 	db	121
  1879  00FBD0  73                 	db	115
  1880  00FBD1  20                 	db	32
  1881  00FBD2  34                 	db	52
  1882  00FBD3  00                 	db	0
  1883  00FBD4  00                 	db	0
  1884  00FBD5  00                 	db	0
  1885  00FBD6  00                 	db	0
  1886  00FBD7  00                 	db	0
  1887  00FBD8  00                 	db	0
  1888  00FBD9  00                 	db	0
  1889  00FBDA  00                 	db	0
  1890  00FBDB                     __end_of_T:
  1891                           	opt callstack 0
  1892  00FBDB                     _spin:
  1893                           	opt callstack 0
  1894  00FBDB  7C                 	db	124
  1895  00FBDC  7C                 	db	124
  1896  00FBDD  2F                 	db	47
  1897  00FBDE  2F                 	db	47
  1898  00FBDF  2D                 	db	45
  1899  00FBE0  2D                 	db	45
  1900  00FBE1  00                 	db	0
  1901  00FBE2  00                 	db	0
  1902  00FBE3  00                 	db	0
  1903  00FBE4  00                 	db	0
  1904  00FBE5  00                 	db	0
  1905  00FBE6  00                 	db	0
  1906  00FBE7  00                 	db	0
  1907  00FBE8  00                 	db	0
  1908  00FBE9  00                 	db	0
  1909  00FBEA  00                 	db	0
  1910  00FBEB  00                 	db	0
  1911  00FBEC  00                 	db	0
  1912  00FBED  00                 	db	0
  1913  00FBEE  00                 	db	0
  1914  00FBEF  7C                 	db	124
  1915  00FBF0  7C                 	db	124
  1916  00FBF1  2F                 	db	47
  1917  00FBF2  2F                 	db	47
  1918  00FBF3  2D                 	db	45
  1919  00FBF4  2D                 	db	45
  1920  00FBF5  5C                 	db	92
  1921  00FBF6  5C                 	db	92
  1922  00FBF7  00                 	db	0
  1923  00FBF8  00                 	db	0
  1924  00FBF9  00                 	db	0
  1925  00FBFA  00                 	db	0
  1926  00FBFB  00                 	db	0
  1927  00FBFC  00                 	db	0
  1928  00FBFD  00                 	db	0
  1929  00FBFE  00                 	db	0
  1930  00FBFF  00                 	db	0
  1931  00FC00  00                 	db	0
  1932  00FC01  00                 	db	0
  1933  00FC02  00                 	db	0
  1934  00FC03  4F                 	db	79
  1935  00FC04  4F                 	db	79
  1936  00FC05  4F                 	db	79
  1937  00FC06  4F                 	db	79
  1938  00FC07  4F                 	db	79
  1939  00FC08  4F                 	db	79
  1940  00FC09  2D                 	db	45
  1941  00FC0A  2D                 	db	45
  1942  00FC0B  5F                 	db	95
  1943  00FC0C  5F                 	db	95
  1944  00FC0D  2D                 	db	45
  1945  00FC0E  00                 	db	0
  1946  00FC0F  00                 	db	0
  1947  00FC10  00                 	db	0
  1948  00FC11  00                 	db	0
  1949  00FC12  00                 	db	0
  1950  00FC13  00                 	db	0
  1951  00FC14  00                 	db	0
  1952  00FC15  00                 	db	0
  1953  00FC16  00                 	db	0
  1954  00FC17  76                 	db	118
  1955  00FC18  76                 	db	118
  1956  00FC19  3C                 	db	60
  1957  00FC1A  3C                 	db	60
  1958  00FC1B  5E                 	db	94
  1959  00FC1C  5E                 	db	94
  1960  00FC1D  3E                 	db	62
  1961  00FC1E  3E                 	db	62
  1962  00FC1F  00                 	db	0
  1963  00FC20  00                 	db	0
  1964  00FC21  00                 	db	0
  1965  00FC22  00                 	db	0
  1966  00FC23  00                 	db	0
  1967  00FC24  00                 	db	0
  1968  00FC25  00                 	db	0
  1969  00FC26  00                 	db	0
  1970  00FC27  00                 	db	0
  1971  00FC28  00                 	db	0
  1972  00FC29  00                 	db	0
  1973  00FC2A  00                 	db	0
  1974  00FC2B  2E                 	db	46
  1975  00FC2C  2E                 	db	46
  1976  00FC2D  2A                 	db	42
  1977  00FC2E  2A                 	db	42
  1978  00FC2F  78                 	db	120
  1979  00FC30  23                 	db	35
  1980  00FC31  78                 	db	120
  1981  00FC32  23                 	db	35
  1982  00FC33  58                 	db	88
  1983  00FC34  58                 	db	88
  1984  00FC35  7C                 	db	124
  1985  00FC36  7C                 	db	124
  1986  00FC37  2D                 	db	45
  1987  00FC38  2D                 	db	45
  1988  00FC39  00                 	db	0
  1989  00FC3A  00                 	db	0
  1990  00FC3B  00                 	db	0
  1991  00FC3C  00                 	db	0
  1992  00FC3D  00                 	db	0
  1993  00FC3E  00                 	db	0
  1994  00FC3F  2E                 	db	46
  1995  00FC40  2E                 	db	46
  1996  00FC41  6F                 	db	111
  1997  00FC42  6F                 	db	111
  1998  00FC43  4F                 	db	79
  1999  00FC44  4F                 	db	79
  2000  00FC45  6F                 	db	111
  2001  00FC46  6F                 	db	111
  2002  00FC47  00                 	db	0
  2003  00FC48  00                 	db	0
  2004  00FC49  00                 	db	0
  2005  00FC4A  00                 	db	0
  2006  00FC4B  00                 	db	0
  2007  00FC4C  00                 	db	0
  2008  00FC4D  00                 	db	0
  2009  00FC4E  00                 	db	0
  2010  00FC4F  00                 	db	0
  2011  00FC50  00                 	db	0
  2012  00FC51  00                 	db	0
  2013  00FC52  00                 	db	0
  2014  00FC53                     __end_of_spin:
  2015                           	opt callstack 0
  2016  00FC53  0000               	dw	0
  2017  00FC55  3F80               	dw	16256
  2018  00FC57  0000               	dw	0
  2019  00FC59  3FC0               	dw	16320
  2020  00FC5B                     __end_of_bp:
  2021                           	opt callstack 0
  2022  00FC5B  AA00               	dw	43520
  2023  00FC5D  3FB8               	dw	16312
  2024  00FC5F                     __end_of_ivln2_h:
  2025                           	opt callstack 0
  2026  00FC5F  23C6               	dw	9158
  2027  00FC61  B8F6               	dw	47350
  2028  00FC63                     __end_of_cp_l:
  2029                           	opt callstack 0
  2030  00FC63  4000               	dw	16384
  2031  00FC65  3F76               	dw	16246
  2032  00FC67                     __end_of_cp_h:
  2033                           	opt callstack 0
  2034  0000                     _IVTADL	set	14493
  2035  0000                     _IVTADH	set	14494
  2036  0000                     _IVTADU	set	14495
  2037  0000                     _PIR6bits	set	14758
  2038  0000                     _PIR4bits	set	14756
  2039  0000                     _PIE8bits	set	14744
  2040  0000                     _PIR8bits	set	14760
  2041  0000                     _SCANPR	set	14839
  2042  0000                     _DMA2PR	set	14836
  2043  0000                     _DMA1PR	set	14835
  2044  0000                     _MAINPR	set	14834
  2045  0000                     _ISRPR	set	14833
  2046  0000                     _PIE2bits	set	14738
  2047  0000                     _PIR2bits	set	14754
  2048  0000                     _PIE9bits	set	14745
  2049  0000                     _PIR9bits	set	14761
  2050  0000                     _PIE6bits	set	14742
  2051  0000                     _PIE3bits	set	14739
  2052  0000                     _PMD7	set	14791
  2053  0000                     _PMD6	set	14790
  2054  0000                     _PMD5	set	14789
  2055  0000                     _PMD4	set	14788
  2056  0000                     _PMD3	set	14787
  2057  0000                     _PMD2	set	14786
  2058  0000                     _PMD1	set	14785
  2059  0000                     _PMD0	set	14784
  2060  0000                     _OSCTUNE	set	14814
  2061  0000                     _OSCFRQ	set	14815
  2062  0000                     _OSCEN	set	14813
  2063  0000                     _OSCCON3	set	14811
  2064  0000                     _OSCCON1	set	14809
  2065  0000                     _IPR8bits	set	14728
  2066  0000                     _IPR9bits	set	14729
  2067  0000                     _IPR5bits	set	14725
  2068  0000                     _IPR1bits	set	14721
  2069  0000                     _IPR3bits	set	14723
  2070  0000                     _IPR6bits	set	14726
  2071  0000                     _IPR2bits	set	14722
  2072  0000                     _PIE5bits	set	14741
  2073  0000                     _PIE1bits	set	14737
  2074  0000                     _PIR5bits	set	14757
  2075  0000                     _PIR1bits	set	14753
  2076  0000                     _PLLR	set	118496
  2077  0000                     _SPI1SDIPPS	set	15071
  2078  0000                     _U1RXPPS	set	15077
  2079  0000                     _RC6PPS	set	14870
  2080  0000                     _RC5PPS	set	14869
  2081  0000                     _INT1PPS	set	15041
  2082  0000                     _RD1PPS	set	14873
  2083  0000                     _INT0PPS	set	15040
  2084  0000                     _RC3PPS	set	14867
  2085  0000                     _RB6PPS	set	14862
  2086  0000                     _SPI1SCKPPS	set	15070
  2087  0000                     _U2RXPPS	set	15080
  2088  0000                     _SLRCONF	set	14995
  2089  0000                     _SLRCONE	set	14979
  2090  0000                     _SLRCOND	set	14963
  2091  0000                     _SLRCONC	set	14947
  2092  0000                     _SLRCONB	set	14931
  2093  0000                     _SLRCONA	set	14915
  2094  0000                     _ODCOND	set	14962
  2095  0000                     _ODCONC	set	14946
  2096  0000                     _ODCONB	set	14930
  2097  0000                     _ODCONA	set	14914
  2098  0000                     _ODCONF	set	14994
  2099  0000                     _ODCONE	set	14978
  2100  0000                     _WPUC	set	14945
  2101  0000                     _WPUA	set	14913
  2102  0000                     _WPUB	set	14929
  2103  0000                     _WPUE	set	14977
  2104  0000                     _WPUF	set	14993
  2105  0000                     _WPUD	set	14961
  2106  0000                     _ANSELA	set	14912
  2107  0000                     _ANSELF	set	14992
  2108  0000                     _ANSELE	set	14976
  2109  0000                     _ANSELB	set	14928
  2110  0000                     _ANSELC	set	14944
  2111  0000                     _ANSELD	set	14960
  2112  0000                     _DMA2SSA	set	15321
  2113  0000                     _DMA1SSA	set	15353
  2114  0000                     _DMA2DSZ	set	15310
  2115  0000                     _DMA2SSZ	set	15319
  2116  0000                     _DMA2DSA	set	15312
  2117  0000                     _DMA1DSZ	set	15342
  2118  0000                     _DMA1SSZ	set	15351
  2119  0000                     _DMA1DSA	set	15344
  2120  0000                     _DMA2CON0bits	set	15324
  2121  0000                     _DMA2CON1bits	set	15325
  2122  0000                     _DMA1CON0bits	set	15356
  2123  0000                     _DMA1CON1bits	set	15357
  2124  0000                     _DMA2CON0	set	15324
  2125  0000                     _DMA2AIRQ	set	15326
  2126  0000                     _DMA2SIRQ	set	15327
  2127  0000                     _DMA2CON1	set	15325
  2128  0000                     _DMA1CON0	set	15356
  2129  0000                     _DMA1AIRQ	set	15358
  2130  0000                     _DMA1SIRQ	set	15359
  2131  0000                     _DMA1CON1	set	15357
  2132  0000                     _CLKRCON	set	15589
  2133  0000                     _CLKRCLK	set	15590
  2134  0000                     _SPI1INTFbits	set	15642
  2135  0000                     _SPI1RXB	set	15632
  2136  0000                     _SPI1TXB	set	15633
  2137  0000                     _SPI1TCNTL	set	15634
  2138  0000                     _SPI1CON0	set	15636
  2139  0000                     _SPI1CLK	set	15644
  2140  0000                     _SPI1BAUD	set	15641
  2141  0000                     _SPI1CON2	set	15638
  2142  0000                     _SPI1CON1	set	15637
  2143  0000                     _U2RXB	set	15824
  2144  0000                     _U2TXB	set	15826
  2145  0000                     _U2ERRIE	set	15842
  2146  0000                     _U2ERRIR	set	15841
  2147  0000                     _U2UIR	set	15840
  2148  0000                     _U2FIFO	set	15839
  2149  0000                     _U2BRGH	set	15838
  2150  0000                     _U2BRGL	set	15837
  2151  0000                     _U2CON2	set	15836
  2152  0000                     _U2CON1	set	15835
  2153  0000                     _U2CON0	set	15834
  2154  0000                     _U2P3L	set	15832
  2155  0000                     _U2P2L	set	15830
  2156  0000                     _U2P1L	set	15828
  2157  0000                     _U1RXB	set	15848
  2158  0000                     _U1ERRIE	set	15866
  2159  0000                     _U1ERRIR	set	15865
  2160  0000                     _U1UIR	set	15864
  2161  0000                     _U1FIFO	set	15863
  2162  0000                     _U1BRGH	set	15862
  2163  0000                     _U1BRGL	set	15861
  2164  0000                     _U1CON2	set	15860
  2165  0000                     _U1CON1	set	15859
  2166  0000                     _U1CON0	set	15858
  2167  0000                     _U1P3H	set	15857
  2168  0000                     _U1P3L	set	15856
  2169  0000                     _U1P2H	set	15855
  2170  0000                     _U1P2L	set	15854
  2171  0000                     _U1P1H	set	15853
  2172  0000                     _U1P1L	set	15852
  2173  0000                     _FVRCON	set	16065
  2174  0000                     _ADFLTRL	set	16102
  2175  0000                     _ADFLTRH	set	16103
  2176  0000                     _ADCON0bits	set	16120
  2177  0000                     _ADCON0	set	16120
  2178  0000                     _ADCLK	set	16127
  2179  0000                     _ADACT	set	16126
  2180  0000                     _ADREF	set	16125
  2181  0000                     _ADSTAT	set	16124
  2182  0000                     _ADCON3	set	16123
  2183  0000                     _ADCON2	set	16122
  2184  0000                     _ADCON1	set	16121
  2185  0000                     _ADPREH	set	16119
  2186  0000                     _ADPREL	set	16118
  2187  0000                     _ADCAP	set	16117
  2188  0000                     _ADACQH	set	16116
  2189  0000                     _ADACQL	set	16115
  2190  0000                     _ADPCH	set	16113
  2191  0000                     _ADRPT	set	16108
  2192  0000                     _ADACCU	set	16106
  2193  0000                     _ADSTPTH	set	16101
  2194  0000                     _ADSTPTL	set	16100
  2195  0000                     _ADUTHH	set	16097
  2196  0000                     _ADUTHL	set	16096
  2197  0000                     _ADLTHH	set	16095
  2198  0000                     _ADLTHL	set	16094
  2199  0000                     _CCPTMRS1bits	set	16223
  2200  0000                     _PORTFbits	set	16335
  2201  0000                     _LATFbits	set	16319
  2202  0000                     _LATCbits	set	16316
  2203  0000                     _LATDbits	set	16317
  2204  0000                     _PORTBbits	set	16331
  2205  0000                     _T3CONbits	set	16294
  2206  0000                     _T3CON	set	16294
  2207  0000                     _TMR3L	set	16292
  2208  0000                     _TMR3H	set	16293
  2209  0000                     _T3CLK	set	16297
  2210  0000                     _T3GATE	set	16296
  2211  0000                     _T3GCON	set	16295
  2212  0000                     _T2CON	set	16300
  2213  0000                     _T2TMR	set	16298
  2214  0000                     _T2PR	set	16299
  2215  0000                     _T2RST	set	16303
  2216  0000                     _T2HLT	set	16301
  2217  0000                     _T2CLKCON	set	16302
  2218  0000                     _PWM8DCL	set	16224
  2219  0000                     _PWM8DCH	set	16225
  2220  0000                     _PWM8CON	set	16226
  2221  0000                     _LATEbits	set	16318
  2222  0000                     _T5CONbits	set	16282
  2223  0000                     _T5CON	set	16282
  2224  0000                     _TMR5L	set	16280
  2225  0000                     _TMR5H	set	16281
  2226  0000                     _T5CLK	set	16285
  2227  0000                     _T5GATE	set	16284
  2228  0000                     _T5GCON	set	16283
  2229  0000                     _T6CON	set	16276
  2230  0000                     _T6TMR	set	16274
  2231  0000                     _T6PR	set	16275
  2232  0000                     _T6RST	set	16279
  2233  0000                     _T6HLT	set	16277
  2234  0000                     _T6CLKCON	set	16278
  2235  0000                     _TRISD	set	16325
  2236  0000                     _TRISC	set	16324
  2237  0000                     _TRISB	set	16323
  2238  0000                     _TRISA	set	16322
  2239  0000                     _TRISF	set	16327
  2240  0000                     _TRISE	set	16326
  2241  0000                     _LATC	set	16316
  2242  0000                     _LATB	set	16315
  2243  0000                     _LATF	set	16319
  2244  0000                     _LATA	set	16314
  2245  0000                     _LATD	set	16317
  2246  0000                     _LATE	set	16318
  2247  0000                     _IVTLOCKbits	set	16340
  2248  0000                     _IVTLOCK	set	16340
  2249  0000                     _INTCON0bits	set	16338
  2250  0000                     _GIE	set	130711
  2251  00FC67                     STR_65:
  2252                           
  2253                           ; BSR set to: 57
  2254  00FC67  20                 	db	32
  2255  00FC68  25                 	db	37
  2256  00FC69  6C                 	db	108	;'l'
  2257  00FC6A  75                 	db	117	;'u'
  2258  00FC6B  2C                 	db	44
  2259  00FC6C  25                 	db	37
  2260  00FC6D  34                 	db	52	;'4'
  2261  00FC6E  2E                 	db	46
  2262  00FC6F  34                 	db	52	;'4'
  2263  00FC70  66                 	db	102	;'f'
  2264  00FC71  2C                 	db	44
  2265  00FC72  25                 	db	37
  2266  00FC73  34                 	db	52	;'4'
  2267  00FC74  2E                 	db	46
  2268  00FC75  34                 	db	52	;'4'
  2269  00FC76  66                 	db	102	;'f'
  2270  00FC77  2C                 	db	44
  2271  00FC78  25                 	db	37
  2272  00FC79  34                 	db	52	;'4'
  2273  00FC7A  2E                 	db	46
  2274  00FC7B  34                 	db	52	;'4'
  2275  00FC7C  66                 	db	102	;'f'
  2276  00FC7D  2C                 	db	44
  2277  00FC7E  25                 	db	37
  2278  00FC7F  34                 	db	52	;'4'
  2279  00FC80  2E                 	db	46
  2280  00FC81  34                 	db	52	;'4'
  2281  00FC82  66                 	db	102	;'f'
  2282  00FC83  2C                 	db	44
  2283  00FC84  25                 	db	37
  2284  00FC85  34                 	db	52	;'4'
  2285  00FC86  2E                 	db	46
  2286  00FC87  33                 	db	51	;'3'
  2287  00FC88  66                 	db	102	;'f'
  2288  00FC89  2C                 	db	44
  2289  00FC8A  25                 	db	37
  2290  00FC8B  34                 	db	52	;'4'
  2291  00FC8C  2E                 	db	46
  2292  00FC8D  33                 	db	51	;'3'
  2293  00FC8E  66                 	db	102	;'f'
  2294  00FC8F  2C                 	db	44
  2295  00FC90  25                 	db	37
  2296  00FC91  34                 	db	52	;'4'
  2297  00FC92  2E                 	db	46
  2298  00FC93  33                 	db	51	;'3'
  2299  00FC94  66                 	db	102	;'f'
  2300  00FC95  2C                 	db	44
  2301  00FC96  25                 	db	37
  2302  00FC97  34                 	db	52	;'4'
  2303  00FC98  2E                 	db	46
  2304  00FC99  33                 	db	51	;'3'
  2305  00FC9A  66                 	db	102	;'f'
  2306  00FC9B  2C                 	db	44
  2307  00FC9C  25                 	db	37
  2308  00FC9D  34                 	db	52	;'4'
  2309  00FC9E  2E                 	db	46
  2310  00FC9F  33                 	db	51	;'3'
  2311  00FCA0  66                 	db	102	;'f'
  2312  00FCA1  2C                 	db	44
  2313  00FCA2  25                 	db	37
  2314  00FCA3  34                 	db	52	;'4'
  2315  00FCA4  2E                 	db	46
  2316  00FCA5  33                 	db	51	;'3'
  2317  00FCA6  66                 	db	102	;'f'
  2318  00FCA7  2C                 	db	44
  2319  00FCA8  25                 	db	37
  2320  00FCA9  34                 	db	52	;'4'
  2321  00FCAA  2E                 	db	46
  2322  00FCAB  33                 	db	51	;'3'
  2323  00FCAC  64                 	db	100	;'d'
  2324  00FCAD  2C                 	db	44
  2325  00FCAE  25                 	db	37
  2326  00FCAF  34                 	db	52	;'4'
  2327  00FCB0  2E                 	db	46
  2328  00FCB1  33                 	db	51	;'3'
  2329  00FCB2  64                 	db	100	;'d'
  2330  00FCB3  2C                 	db	44
  2331  00FCB4  25                 	db	37
  2332  00FCB5  32                 	db	50	;'2'
  2333  00FCB6  2E                 	db	46
  2334  00FCB7  36                 	db	54	;'6'
  2335  00FCB8  66                 	db	102	;'f'
  2336  00FCB9  0D                 	db	13
  2337  00FCBA  0A                 	db	10
  2338  00FCBB  00                 	db	0
  2339  00FCBC                     STR_17:
  2340                           
  2341                           ; BSR set to: 57
  2342  00FCBC  52                 	db	82	;'R'
  2343  00FCBD  31                 	db	49	;'1'
  2344  00FCBE  20                 	db	32
  2345  00FCBF  25                 	db	37
  2346  00FCC0  32                 	db	50	;'2'
  2347  00FCC1  2E                 	db	46
  2348  00FCC2  33                 	db	51	;'3'
  2349  00FCC3  66                 	db	102	;'f'
  2350  00FCC4  20                 	db	32
  2351  00FCC5  25                 	db	37
  2352  00FCC6  33                 	db	51	;'3'
  2353  00FCC7  2E                 	db	46
  2354  00FCC8  34                 	db	52	;'4'
  2355  00FCC9  66                 	db	102	;'f'
  2356  00FCCA  20                 	db	32
  2357  00FCCB  20                 	db	32
  2358  00FCCC  20                 	db	32
  2359  00FCCD  20                 	db	32
  2360  00FCCE  20                 	db	32
  2361  00FCCF  20                 	db	32
  2362  00FCD0  20                 	db	32
  2363  00FCD1  20                 	db	32
  2364  00FCD2  20                 	db	32
  2365  00FCD3  20                 	db	32
  2366  00FCD4  20                 	db	32
  2367  00FCD5  00                 	db	0
  2368  00FCD6                     STR_18:
  2369                           
  2370                           ; BSR set to: 57
  2371  00FCD6  52                 	db	82	;'R'
  2372  00FCD7  32                 	db	50	;'2'
  2373  00FCD8  20                 	db	32
  2374  00FCD9  25                 	db	37
  2375  00FCDA  32                 	db	50	;'2'
  2376  00FCDB  2E                 	db	46
  2377  00FCDC  33                 	db	51	;'3'
  2378  00FCDD  66                 	db	102	;'f'
  2379  00FCDE  20                 	db	32
  2380  00FCDF  25                 	db	37
  2381  00FCE0  33                 	db	51	;'3'
  2382  00FCE1  2E                 	db	46
  2383  00FCE2  34                 	db	52	;'4'
  2384  00FCE3  66                 	db	102	;'f'
  2385  00FCE4  20                 	db	32
  2386  00FCE5  20                 	db	32
  2387  00FCE6  20                 	db	32
  2388  00FCE7  20                 	db	32
  2389  00FCE8  20                 	db	32
  2390  00FCE9  20                 	db	32
  2391  00FCEA  20                 	db	32
  2392  00FCEB  20                 	db	32
  2393  00FCEC  20                 	db	32
  2394  00FCED  20                 	db	32
  2395  00FCEE  20                 	db	32
  2396  00FCEF  00                 	db	0
  2397  00FCF0                     
  2398                           ; BSR set to: 57
  2399  00FCF0  20                 	db	32
  2400  00FCF1  4D                 	db	77	;'M'
  2401  00FCF2  65                 	db	101	;'e'
  2402  00FCF3  73                 	db	115	;'s'
  2403  00FCF4  67                 	db	103	;'g'
  2404  00FCF5  20                 	db	32
  2405  00FCF6  25                 	db	37
  2406  00FCF7  64                 	db	100	;'d'
  2407  00FCF8  20                 	db	32
  2408  00FCF9  53                 	db	83	;'S'
  2409  00FCFA  74                 	db	116	;'t'
  2410  00FCFB  61                 	db	97	;'a'
  2411  00FCFC  63                 	db	99	;'c'
  2412  00FCFD  6B                 	db	107	;'k'
  2413  00FCFE  20                 	db	32
  2414  00FCFF  25                 	db	37
  2415  00FD00  64                 	db	100	;'d'
  2416  00FD01  20                 	db	32
  2417  00FD02  20                 	db	32
  2418  00FD03  20                 	db	32
  2419  00FD04  20                 	db	32
  2420  00FD05  20                 	db	32
  2421  00FD06  20                 	db	32
  2422  00FD07  00                 	db	0
  2423  00FD08                     STR_9:
  2424                           
  2425                           ; BSR set to: 57
  2426  00FD08  53                 	db	83	;'S'
  2427  00FD09  20                 	db	32
  2428  00FD0A  53                 	db	83	;'S'
  2429  00FD0B  25                 	db	37
  2430  00FD0C  63                 	db	99	;'c'
  2431  00FD0D  43                 	db	67	;'C'
  2432  00FD0E  20                 	db	32
  2433  00FD0F  25                 	db	37
  2434  00FD10  64                 	db	100	;'d'
  2435  00FD11  20                 	db	32
  2436  00FD12  25                 	db	37
  2437  00FD13  32                 	db	50	;'2'
  2438  00FD14  2E                 	db	46
  2439  00FD15  34                 	db	52	;'4'
  2440  00FD16  66                 	db	102	;'f'
  2441  00FD17  20                 	db	32
  2442  00FD18  20                 	db	32
  2443  00FD19  20                 	db	32
  2444  00FD1A  20                 	db	32
  2445  00FD1B  20                 	db	32
  2446  00FD1C  20                 	db	32
  2447  00FD1D  20                 	db	32
  2448  00FD1E  00                 	db	0
  2449  00FD1F                     STR_16:
  2450                           
  2451                           ; BSR set to: 57
  2452  00FD1F  45                 	db	69	;'E'
  2453  00FD20  53                 	db	83	;'S'
  2454  00FD21  52                 	db	82	;'R'
  2455  00FD22  20                 	db	32
  2456  00FD23  20                 	db	32
  2457  00FD24  25                 	db	37
  2458  00FD25  32                 	db	50	;'2'
  2459  00FD26  2E                 	db	46
  2460  00FD27  36                 	db	54	;'6'
  2461  00FD28  66                 	db	102	;'f'
  2462  00FD29  20                 	db	32
  2463  00FD2A  20                 	db	32
  2464  00FD2B  20                 	db	32
  2465  00FD2C  20                 	db	32
  2466  00FD2D  20                 	db	32
  2467  00FD2E  20                 	db	32
  2468  00FD2F  20                 	db	32
  2469  00FD30  20                 	db	32
  2470  00FD31  20                 	db	32
  2471  00FD32  20                 	db	32
  2472  00FD33  20                 	db	32
  2473  00FD34  00                 	db	0
  2474  00FD35                     STR_10:
  2475                           
  2476                           ; BSR set to: 57
  2477  00FD35  53                 	db	83	;'S'
  2478  00FD36  74                 	db	116	;'t'
  2479  00FD37  61                 	db	97	;'a'
  2480  00FD38  74                 	db	116	;'t'
  2481  00FD39  69                 	db	105	;'i'
  2482  00FD3A  63                 	db	99	;'c'
  2483  00FD3B  20                 	db	32
  2484  00FD3C  53                 	db	83	;'S'
  2485  00FD3D  4F                 	db	79	;'O'
  2486  00FD3E  43                 	db	67	;'C'
  2487  00FD3F  20                 	db	32
  2488  00FD40  25                 	db	37
  2489  00FD41  64                 	db	100	;'d'
  2490  00FD42  20                 	db	32
  2491  00FD43  20                 	db	32
  2492  00FD44  20                 	db	32
  2493  00FD45  20                 	db	32
  2494  00FD46  20                 	db	32
  2495  00FD47  20                 	db	32
  2496  00FD48  20                 	db	32
  2497  00FD49  20                 	db	32
  2498  00FD4A  00                 	db	0
  2499  00FD4B                     STR_11:
  2500                           
  2501                           ; BSR set to: 57
  2502  00FD4B  42                 	db	66	;'B'
  2503  00FD4C  61                 	db	97	;'a'
  2504  00FD4D  74                 	db	116	;'t'
  2505  00FD4E  74                 	db	116	;'t'
  2506  00FD4F  65                 	db	101	;'e'
  2507  00FD50  72                 	db	114	;'r'
  2508  00FD51  79                 	db	121	;'y'
  2509  00FD52  20                 	db	32
  2510  00FD53  41                 	db	65	;'A'
  2511  00FD54  68                 	db	104	;'h'
  2512  00FD55  20                 	db	32
  2513  00FD56  25                 	db	37
  2514  00FD57  33                 	db	51	;'3'
  2515  00FD58  2E                 	db	46
  2516  00FD59  32                 	db	50	;'2'
  2517  00FD5A  66                 	db	102	;'f'
  2518  00FD5B  20                 	db	32
  2519  00FD5C  20                 	db	32
  2520  00FD5D  20                 	db	32
  2521  00FD5E  20                 	db	32
  2522  00FD5F  20                 	db	32
  2523  00FD60  00                 	db	0
  2524  00FD61                     STR_15:
  2525                           
  2526                           ; BSR set to: 57
  2527  00FD61  43                 	db	67	;'C'
  2528  00FD62  68                 	db	104	;'h'
  2529  00FD63  65                 	db	101	;'e'
  2530  00FD64  63                 	db	99	;'c'
  2531  00FD65  6B                 	db	107	;'k'
  2532  00FD66  69                 	db	105	;'i'
  2533  00FD67  6E                 	db	110	;'n'
  2534  00FD68  67                 	db	103	;'g'
  2535  00FD69  20                 	db	32
  2536  00FD6A  25                 	db	37
  2537  00FD6B  63                 	db	99	;'c'
  2538  00FD6C  20                 	db	32
  2539  00FD6D  25                 	db	37
  2540  00FD6E  63                 	db	99	;'c'
  2541  00FD6F  20                 	db	32
  2542  00FD70  20                 	db	32
  2543  00FD71  20                 	db	32
  2544  00FD72  20                 	db	32
  2545  00FD73  20                 	db	32
  2546  00FD74  20                 	db	32
  2547  00FD75  00                 	db	0
  2548  00FD76                     STR_37:
  2549                           
  2550                           ; BSR set to: 57
  2551  00FD76  45                 	db	69	;'E'
  2552  00FD77  53                 	db	83	;'S'
  2553  00FD78  52                 	db	82	;'R'
  2554  00FD79  20                 	db	32
  2555  00FD7A  20                 	db	32
  2556  00FD7B  25                 	db	37
  2557  00FD7C  32                 	db	50	;'2'
  2558  00FD7D  2E                 	db	46
  2559  00FD7E  36                 	db	54	;'6'
  2560  00FD7F  66                 	db	102	;'f'
  2561  00FD80  20                 	db	32
  2562  00FD81  20                 	db	32
  2563  00FD82  20                 	db	32
  2564  00FD83  20                 	db	32
  2565  00FD84  20                 	db	32
  2566  00FD85  20                 	db	32
  2567  00FD86  20                 	db	32
  2568  00FD87  20                 	db	32
  2569  00FD88  20                 	db	32
  2570  00FD89  00                 	db	0
  2571  00FD8A                     STR_36:
  2572                           
  2573                           ; BSR set to: 57
  2574  00FD8A  53                 	db	83	;'S'
  2575  00FD8B  25                 	db	37
  2576  00FD8C  63                 	db	99	;'c'
  2577  00FD8D  43                 	db	67	;'C'
  2578  00FD8E  20                 	db	32
  2579  00FD8F  25                 	db	37
  2580  00FD90  64                 	db	100	;'d'
  2581  00FD91  20                 	db	32
  2582  00FD92  52                 	db	82	;'R'
  2583  00FD93  55                 	db	85	;'U'
  2584  00FD94  4E                 	db	78	;'N'
  2585  00FD95  20                 	db	32
  2586  00FD96  25                 	db	37
  2587  00FD97  64                 	db	100	;'d'
  2588  00FD98  20                 	db	32
  2589  00FD99  20                 	db	32
  2590  00FD9A  20                 	db	32
  2591  00FD9B  20                 	db	32
  2592  00FD9C  20                 	db	32
  2593  00FD9D  00                 	db	0
  2594  00FD9E                     STR_34:
  2595                           
  2596                           ; BSR set to: 57
  2597  00FD9E  42                 	db	66	;'B'
  2598  00FD9F  41                 	db	65	;'A'
  2599  00FDA0  54                 	db	84	;'T'
  2600  00FDA1  54                 	db	84	;'T'
  2601  00FDA2  20                 	db	32
  2602  00FDA3  50                 	db	80	;'P'
  2603  00FDA4  57                 	db	87	;'W'
  2604  00FDA5  52                 	db	82	;'R'
  2605  00FDA6  20                 	db	32
  2606  00FDA7  25                 	db	37
  2607  00FDA8  33                 	db	51	;'3'
  2608  00FDA9  2E                 	db	46
  2609  00FDAA  32                 	db	50	;'2'
  2610  00FDAB  66                 	db	102	;'f'
  2611  00FDAC  20                 	db	32
  2612  00FDAD  20                 	db	32
  2613  00FDAE  20                 	db	32
  2614  00FDAF  20                 	db	32
  2615  00FDB0  20                 	db	32
  2616  00FDB1  00                 	db	0
  2617  00FDB2                     STR_38:
  2618                           
  2619                           ; BSR set to: 57
  2620  00FDB2  52                 	db	82	;'R'
  2621  00FDB3  31                 	db	49	;'1'
  2622  00FDB4  20                 	db	32
  2623  00FDB5  25                 	db	37
  2624  00FDB6  32                 	db	50	;'2'
  2625  00FDB7  2E                 	db	46
  2626  00FDB8  33                 	db	51	;'3'
  2627  00FDB9  66                 	db	102	;'f'
  2628  00FDBA  20                 	db	32
  2629  00FDBB  25                 	db	37
  2630  00FDBC  33                 	db	51	;'3'
  2631  00FDBD  2E                 	db	46
  2632  00FDBE  34                 	db	52	;'4'
  2633  00FDBF  66                 	db	102	;'f'
  2634  00FDC0  20                 	db	32
  2635  00FDC1  20                 	db	32
  2636  00FDC2  20                 	db	32
  2637  00FDC3  20                 	db	32
  2638  00FDC4  20                 	db	32
  2639  00FDC5  00                 	db	0
  2640  00FDC6                     STR_39:
  2641                           
  2642                           ; BSR set to: 57
  2643  00FDC6  52                 	db	82	;'R'
  2644  00FDC7  32                 	db	50	;'2'
  2645  00FDC8  20                 	db	32
  2646  00FDC9  25                 	db	37
  2647  00FDCA  32                 	db	50	;'2'
  2648  00FDCB  2E                 	db	46
  2649  00FDCC  33                 	db	51	;'3'
  2650  00FDCD  66                 	db	102	;'f'
  2651  00FDCE  20                 	db	32
  2652  00FDCF  25                 	db	37
  2653  00FDD0  33                 	db	51	;'3'
  2654  00FDD1  2E                 	db	46
  2655  00FDD2  34                 	db	52	;'4'
  2656  00FDD3  66                 	db	102	;'f'
  2657  00FDD4  20                 	db	32
  2658  00FDD5  20                 	db	32
  2659  00FDD6  20                 	db	32
  2660  00FDD7  20                 	db	32
  2661  00FDD8  20                 	db	32
  2662  00FDD9  00                 	db	0
  2663  00FDDA                     STR_35:
  2664                           
  2665                           ; BSR set to: 57
  2666  00FDDA  42                 	db	66	;'B'
  2667  00FDDB  41                 	db	65	;'A'
  2668  00FDDC  48                 	db	72	;'H'
  2669  00FDDD  20                 	db	32
  2670  00FDDE  25                 	db	37
  2671  00FDDF  33                 	db	51	;'3'
  2672  00FDE0  2E                 	db	46
  2673  00FDE1  32                 	db	50	;'2'
  2674  00FDE2  66                 	db	102	;'f'
  2675  00FDE3  20                 	db	32
  2676  00FDE4  50                 	db	80	;'P'
  2677  00FDE5  25                 	db	37
  2678  00FDE6  33                 	db	51	;'3'
  2679  00FDE7  2E                 	db	46
  2680  00FDE8  32                 	db	50	;'2'
  2681  00FDE9  66                 	db	102	;'f'
  2682  00FDEA  20                 	db	32
  2683  00FDEB  20                 	db	32
  2684  00FDEC  20                 	db	32
  2685  00FDED  00                 	db	0
  2686  00FDEE                     STR_58:
  2687                           
  2688                           ; BSR set to: 57
  2689  00FDEE  20                 	db	32
  2690  00FDEF  20                 	db	32
  2691  00FDF0  20                 	db	32
  2692  00FDF1  20                 	db	32
  2693  00FDF2  20                 	db	32
  2694  00FDF3  20                 	db	32
  2695  00FDF4  20                 	db	32
  2696  00FDF5  20                 	db	32
  2697  00FDF6  20                 	db	32
  2698  00FDF7  20                 	db	32
  2699  00FDF8  20                 	db	32
  2700  00FDF9  20                 	db	32
  2701  00FDFA  20                 	db	32
  2702  00FDFB  20                 	db	32
  2703  00FDFC  20                 	db	32
  2704  00FDFD  20                 	db	32
  2705  00FDFE  20                 	db	32
  2706  00FDFF  20                 	db	32
  2707  00FE00  00                 	db	0
  2708  00FE01                     STR_48:
  2709                           
  2710                           ; BSR set to: 57
  2711  00FE01  48                 	db	72	;'H'
  2712  00FE02  45                 	db	69	;'E'
  2713  00FE03  4C                 	db	76	;'L'
  2714  00FE04  50                 	db	80	;'P'
  2715  00FE05  20                 	db	32
  2716  00FE06  25                 	db	37
  2717  00FE07  73                 	db	115	;'s'
  2718  00FE08  20                 	db	32
  2719  00FE09  20                 	db	32
  2720  00FE0A  20                 	db	32
  2721  00FE0B  20                 	db	32
  2722  00FE0C  20                 	db	32
  2723  00FE0D  20                 	db	32
  2724  00FE0E  20                 	db	32
  2725  00FE0F  20                 	db	32
  2726  00FE10  20                 	db	32
  2727  00FE11  20                 	db	32
  2728  00FE12  20                 	db	32
  2729  00FE13  00                 	db	0
  2730  00FE14                     
  2731                           ; BSR set to: 57
  2732  00FE14  44                 	db	68	;'D'
  2733  00FE15  49                 	db	73	;'I'
  2734  00FE16  53                 	db	83	;'S'
  2735  00FE17  50                 	db	80	;'P'
  2736  00FE18  4C                 	db	76	;'L'
  2737  00FE19  41                 	db	65	;'A'
  2738  00FE1A  59                 	db	89	;'Y'
  2739  00FE1B  20                 	db	32
  2740  00FE1C  25                 	db	37
  2741  00FE1D  73                 	db	115	;'s'
  2742  00FE1E  20                 	db	32
  2743  00FE1F  20                 	db	32
  2744  00FE20  20                 	db	32
  2745  00FE21  20                 	db	32
  2746  00FE22  20                 	db	32
  2747  00FE23  20                 	db	32
  2748  00FE24  20                 	db	32
  2749  00FE25  20                 	db	32
  2750  00FE26  00                 	db	0
  2751  00FE27                     STR_31:
  2752                           
  2753                           ; BSR set to: 57
  2754  00FE27  42                 	db	66	;'B'
  2755  00FE28  41                 	db	65	;'A'
  2756  00FE29  54                 	db	84	;'T'
  2757  00FE2A  20                 	db	32
  2758  00FE2B  49                 	db	73	;'I'
  2759  00FE2C  57                 	db	87	;'W'
  2760  00FE2D  48                 	db	72	;'H'
  2761  00FE2E  20                 	db	32
  2762  00FE2F  25                 	db	37
  2763  00FE30  34                 	db	52	;'4'
  2764  00FE31  2E                 	db	46
  2765  00FE32  31                 	db	49	;'1'
  2766  00FE33  66                 	db	102	;'f'
  2767  00FE34  20                 	db	32
  2768  00FE35  20                 	db	32
  2769  00FE36  20                 	db	32
  2770  00FE37  20                 	db	32
  2771  00FE38  20                 	db	32
  2772  00FE39  00                 	db	0
  2773  00FE3A                     STR_32:
  2774                           
  2775                           ; BSR set to: 57
  2776  00FE3A  42                 	db	66	;'B'
  2777  00FE3B  41                 	db	65	;'A'
  2778  00FE3C  54                 	db	84	;'T'
  2779  00FE3D  20                 	db	32
  2780  00FE3E  4F                 	db	79	;'O'
  2781  00FE3F  57                 	db	87	;'W'
  2782  00FE40  48                 	db	72	;'H'
  2783  00FE41  20                 	db	32
  2784  00FE42  25                 	db	37
  2785  00FE43  34                 	db	52	;'4'
  2786  00FE44  2E                 	db	46
  2787  00FE45  31                 	db	49	;'1'
  2788  00FE46  66                 	db	102	;'f'
  2789  00FE47  20                 	db	32
  2790  00FE48  20                 	db	32
  2791  00FE49  20                 	db	32
  2792  00FE4A  20                 	db	32
  2793  00FE4B  20                 	db	32
  2794  00FE4C  00                 	db	0
  2795  00FE4D                     STR_33:
  2796                           
  2797                           ; BSR set to: 57
  2798  00FE4D  42                 	db	66	;'B'
  2799  00FE4E  41                 	db	65	;'A'
  2800  00FE4F  54                 	db	84	;'T'
  2801  00FE50  20                 	db	32
  2802  00FE51  54                 	db	84	;'T'
  2803  00FE52  57                 	db	87	;'W'
  2804  00FE53  48                 	db	72	;'H'
  2805  00FE54  20                 	db	32
  2806  00FE55  25                 	db	37
  2807  00FE56  34                 	db	52	;'4'
  2808  00FE57  2E                 	db	46
  2809  00FE58  31                 	db	49	;'1'
  2810  00FE59  66                 	db	102	;'f'
  2811  00FE5A  20                 	db	32
  2812  00FE5B  20                 	db	32
  2813  00FE5C  20                 	db	32
  2814  00FE5D  20                 	db	32
  2815  00FE5E  20                 	db	32
  2816  00FE5F  00                 	db	0
  2817  00FE60                     STR_25:
  2818                           
  2819                           ; BSR set to: 57
  2820  00FE60  50                 	db	80	;'P'
  2821  00FE61  56                 	db	86	;'V'
  2822  00FE62  20                 	db	32
  2823  00FE63  20                 	db	32
  2824  00FE64  20                 	db	32
  2825  00FE65  57                 	db	87	;'W'
  2826  00FE66  48                 	db	72	;'H'
  2827  00FE67  20                 	db	32
  2828  00FE68  25                 	db	37
  2829  00FE69  33                 	db	51	;'3'
  2830  00FE6A  2E                 	db	46
  2831  00FE6B  32                 	db	50	;'2'
  2832  00FE6C  66                 	db	102	;'f'
  2833  00FE6D  20                 	db	32
  2834  00FE6E  20                 	db	32
  2835  00FE6F  20                 	db	32
  2836  00FE70  20                 	db	32
  2837  00FE71  20                 	db	32
  2838  00FE72  00                 	db	0
  2839  00FE73                     STR_27:
  2840                           
  2841                           ; BSR set to: 57
  2842  00FE73  49                 	db	73	;'I'
  2843  00FE74  4E                 	db	78	;'N'
  2844  00FE75  56                 	db	86	;'V'
  2845  00FE76  20                 	db	32
  2846  00FE77  20                 	db	32
  2847  00FE78  57                 	db	87	;'W'
  2848  00FE79  48                 	db	72	;'H'
  2849  00FE7A  20                 	db	32
  2850  00FE7B  25                 	db	37
  2851  00FE7C  33                 	db	51	;'3'
  2852  00FE7D  2E                 	db	46
  2853  00FE7E  32                 	db	50	;'2'
  2854  00FE7F  66                 	db	102	;'f'
  2855  00FE80  20                 	db	32
  2856  00FE81  20                 	db	32
  2857  00FE82  20                 	db	32
  2858  00FE83  20                 	db	32
  2859  00FE84  20                 	db	32
  2860  00FE85  00                 	db	0
  2861  00FE86                     STR_26:
  2862                           
  2863                           ; BSR set to: 57
  2864  00FE86  4C                 	db	76	;'L'
  2865  00FE87  4F                 	db	79	;'O'
  2866  00FE88  41                 	db	65	;'A'
  2867  00FE89  44                 	db	68	;'D'
  2868  00FE8A  20                 	db	32
  2869  00FE8B  57                 	db	87	;'W'
  2870  00FE8C  48                 	db	72	;'H'
  2871  00FE8D  20                 	db	32
  2872  00FE8E  25                 	db	37
  2873  00FE8F  33                 	db	51	;'3'
  2874  00FE90  2E                 	db	46
  2875  00FE91  32                 	db	50	;'2'
  2876  00FE92  66                 	db	102	;'f'
  2877  00FE93  20                 	db	32
  2878  00FE94  20                 	db	32
  2879  00FE95  20                 	db	32
  2880  00FE96  20                 	db	32
  2881  00FE97  20                 	db	32
  2882  00FE98  00                 	db	0
  2883  00FE99                     STR_22:
  2884                           
  2885                           ; BSR set to: 57
  2886  00FE99  50                 	db	80	;'P'
  2887  00FE9A  56                 	db	86	;'V'
  2888  00FE9B  20                 	db	32
  2889  00FE9C  20                 	db	32
  2890  00FE9D  20                 	db	32
  2891  00FE9E  50                 	db	80	;'P'
  2892  00FE9F  57                 	db	87	;'W'
  2893  00FEA0  52                 	db	82	;'R'
  2894  00FEA1  20                 	db	32
  2895  00FEA2  25                 	db	37
  2896  00FEA3  33                 	db	51	;'3'
  2897  00FEA4  2E                 	db	46
  2898  00FEA5  32                 	db	50	;'2'
  2899  00FEA6  66                 	db	102	;'f'
  2900  00FEA7  20                 	db	32
  2901  00FEA8  20                 	db	32
  2902  00FEA9  20                 	db	32
  2903  00FEAA  20                 	db	32
  2904  00FEAB  00                 	db	0
  2905  00FEAC                     STR_24:
  2906                           
  2907                           ; BSR set to: 57
  2908  00FEAC  49                 	db	73	;'I'
  2909  00FEAD  4E                 	db	78	;'N'
  2910  00FEAE  56                 	db	86	;'V'
  2911  00FEAF  20                 	db	32
  2912  00FEB0  20                 	db	32
  2913  00FEB1  50                 	db	80	;'P'
  2914  00FEB2  57                 	db	87	;'W'
  2915  00FEB3  52                 	db	82	;'R'
  2916  00FEB4  20                 	db	32
  2917  00FEB5  25                 	db	37
  2918  00FEB6  33                 	db	51	;'3'
  2919  00FEB7  2E                 	db	46
  2920  00FEB8  32                 	db	50	;'2'
  2921  00FEB9  66                 	db	102	;'f'
  2922  00FEBA  20                 	db	32
  2923  00FEBB  20                 	db	32
  2924  00FEBC  20                 	db	32
  2925  00FEBD  20                 	db	32
  2926  00FEBE  00                 	db	0
  2927  00FEBF                     STR_23:
  2928                           
  2929                           ; BSR set to: 57
  2930  00FEBF  4C                 	db	76	;'L'
  2931  00FEC0  4F                 	db	79	;'O'
  2932  00FEC1  41                 	db	65	;'A'
  2933  00FEC2  44                 	db	68	;'D'
  2934  00FEC3  20                 	db	32
  2935  00FEC4  50                 	db	80	;'P'
  2936  00FEC5  57                 	db	87	;'W'
  2937  00FEC6  52                 	db	82	;'R'
  2938  00FEC7  20                 	db	32
  2939  00FEC8  25                 	db	37
  2940  00FEC9  33                 	db	51	;'3'
  2941  00FECA  2E                 	db	46
  2942  00FECB  32                 	db	50	;'2'
  2943  00FECC  66                 	db	102	;'f'
  2944  00FECD  20                 	db	32
  2945  00FECE  20                 	db	32
  2946  00FECF  20                 	db	32
  2947  00FED0  20                 	db	32
  2948  00FED1  00                 	db	0
  2949  00FED2                     STR_29:
  2950                           
  2951                           ; BSR set to: 57
  2952  00FED2  42                 	db	66	;'B'
  2953  00FED3  56                 	db	86	;'V'
  2954  00FED4  20                 	db	32
  2955  00FED5  25                 	db	37
  2956  00FED6  32                 	db	50	;'2'
  2957  00FED7  2E                 	db	46
  2958  00FED8  32                 	db	50	;'2'
  2959  00FED9  66                 	db	102	;'f'
  2960  00FEDA  20                 	db	32
  2961  00FEDB  42                 	db	66	;'B'
  2962  00FEDC  41                 	db	65	;'A'
  2963  00FEDD  20                 	db	32
  2964  00FEDE  25                 	db	37
  2965  00FEDF  32                 	db	50	;'2'
  2966  00FEE0  2E                 	db	46
  2967  00FEE1  32                 	db	50	;'2'
  2968  00FEE2  66                 	db	102	;'f'
  2969  00FEE3  20                 	db	32
  2970  00FEE4  00                 	db	0
  2971  00FEE5                     STR_30:
  2972                           
  2973                           ; BSR set to: 57
  2974  00FEE5  43                 	db	67	;'C'
  2975  00FEE6  56                 	db	86	;'V'
  2976  00FEE7  20                 	db	32
  2977  00FEE8  25                 	db	37
  2978  00FEE9  32                 	db	50	;'2'
  2979  00FEEA  2E                 	db	46
  2980  00FEEB  32                 	db	50	;'2'
  2981  00FEEC  66                 	db	102	;'f'
  2982  00FEED  20                 	db	32
  2983  00FEEE  4C                 	db	76	;'L'
  2984  00FEEF  41                 	db	65	;'A'
  2985  00FEF0  20                 	db	32
  2986  00FEF1  25                 	db	37
  2987  00FEF2  32                 	db	50	;'2'
  2988  00FEF3  2E                 	db	46
  2989  00FEF4  32                 	db	50	;'2'
  2990  00FEF5  66                 	db	102	;'f'
  2991  00FEF6  20                 	db	32
  2992  00FEF7  00                 	db	0
  2993  00FEF8                     STR_28:
  2994                           
  2995                           ; BSR set to: 57
  2996  00FEF8  50                 	db	80	;'P'
  2997  00FEF9  56                 	db	86	;'V'
  2998  00FEFA  20                 	db	32
  2999  00FEFB  25                 	db	37
  3000  00FEFC  32                 	db	50	;'2'
  3001  00FEFD  2E                 	db	46
  3002  00FEFE  32                 	db	50	;'2'
  3003  00FEFF  66                 	db	102	;'f'
  3004  00FF00  20                 	db	32
  3005  00FF01  50                 	db	80	;'P'
  3006  00FF02  41                 	db	65	;'A'
  3007  00FF03  20                 	db	32
  3008  00FF04  25                 	db	37
  3009  00FF05  32                 	db	50	;'2'
  3010  00FF06  2E                 	db	46
  3011  00FF07  32                 	db	50	;'2'
  3012  00FF08  66                 	db	102	;'f'
  3013  00FF09  20                 	db	32
  3014  00FF0A  00                 	db	0
  3015  00FF0B                     STR_8:
  3016                           
  3017                           ; BSR set to: 57
  3018  00FF0B  42                 	db	66	;'B'
  3019  00FF0C  56                 	db	86	;'V'
  3020  00FF0D  20                 	db	32
  3021  00FF0E  25                 	db	37
  3022  00FF0F  32                 	db	50	;'2'
  3023  00FF10  2E                 	db	46
  3024  00FF11  34                 	db	52	;'4'
  3025  00FF12  66                 	db	102	;'f'
  3026  00FF13  20                 	db	32
  3027  00FF14  20                 	db	32
  3028  00FF15  20                 	db	32
  3029  00FF16  20                 	db	32
  3030  00FF17  20                 	db	32
  3031  00FF18  20                 	db	32
  3032  00FF19  20                 	db	32
  3033  00FF1A  20                 	db	32
  3034  00FF1B  20                 	db	32
  3035  00FF1C  00                 	db	0
  3036  00FF1D                     STR_4:
  3037                           
  3038                           ; BSR set to: 57
  3039  00FF1D  20                 	db	32
  3040  00FF1E  4E                 	db	78	;'N'
  3041  00FF1F  53                 	db	83	;'S'
  3042  00FF20  41                 	db	65	;'A'
  3043  00FF21  53                 	db	83	;'S'
  3044  00FF22  50                 	db	80	;'P'
  3045  00FF23  4F                 	db	79	;'O'
  3046  00FF24  4F                 	db	79	;'O'
  3047  00FF25  4B                 	db	75	;'K'
  3048  00FF26  20                 	db	32
  3049  00FF27  20                 	db	32
  3050  00FF28  20                 	db	32
  3051  00FF29  20                 	db	32
  3052  00FF2A  20                 	db	32
  3053  00FF2B  20                 	db	32
  3054  00FF2C  20                 	db	32
  3055  00FF2D  00                 	db	0
  3056  00FF2E                     STR_12:
  3057                           
  3058                           ; BSR set to: 57
  3059  00FF2E  42                 	db	66	;'B'
  3060  00FF2F  61                 	db	97	;'a'
  3061  00FF30  74                 	db	116	;'t'
  3062  00FF31  74                 	db	116	;'t'
  3063  00FF32  65                 	db	101	;'e'
  3064  00FF33  72                 	db	114	;'r'
  3065  00FF34  79                 	db	121	;'y'
  3066  00FF35  20                 	db	32
  3067  00FF36  45                 	db	69	;'E'
  3068  00FF37  53                 	db	83	;'S'
  3069  00FF38  52                 	db	82	;'R'
  3070  00FF39  20                 	db	32
  3071  00FF3A  20                 	db	32
  3072  00FF3B  20                 	db	32
  3073  00FF3C  20                 	db	32
  3074  00FF3D  20                 	db	32
  3075  00FF3E  00                 	db	0
  3076  00FF3F                     STR_13:
  3077                           
  3078                           ; BSR set to: 57
  3079  00FF3F  43                 	db	67	;'C'
  3080  00FF40  61                 	db	97	;'a'
  3081  00FF41  6C                 	db	108	;'l'
  3082  00FF42  63                 	db	99	;'c'
  3083  00FF43  75                 	db	117	;'u'
  3084  00FF44  6C                 	db	108	;'l'
  3085  00FF45  61                 	db	97	;'a'
  3086  00FF46  74                 	db	116	;'t'
  3087  00FF47  69                 	db	105	;'i'
  3088  00FF48  6F                 	db	111	;'o'
  3089  00FF49  6E                 	db	110	;'n'
  3090  00FF4A  20                 	db	32
  3091  00FF4B  20                 	db	32
  3092  00FF4C  20                 	db	32
  3093  00FF4D  20                 	db	32
  3094  00FF4E  20                 	db	32
  3095  00FF4F  00                 	db	0
  3096  00FF50                     STR_1:
  3097                           
  3098                           ; BSR set to: 57
  3099  00FF50  20                 	db	32
  3100  00FF51  4D                 	db	77	;'M'
  3101  00FF52  42                 	db	66	;'B'
  3102  00FF53  4D                 	db	77	;'M'
  3103  00FF54  43                 	db	67	;'C'
  3104  00FF55  20                 	db	32
  3105  00FF56  53                 	db	83	;'S'
  3106  00FF57  4F                 	db	79	;'O'
  3107  00FF58  4C                 	db	76	;'L'
  3108  00FF59  41                 	db	65	;'A'
  3109  00FF5A  52                 	db	82	;'R'
  3110  00FF5B  4D                 	db	77	;'M'
  3111  00FF5C  4F                 	db	79	;'O'
  3112  00FF5D  4E                 	db	78	;'N'
  3113  00FF5E  20                 	db	32
  3114  00FF5F  20                 	db	32
  3115  00FF60  00                 	db	0
  3116  00FF61                     STR_21:
  3117                           
  3118                           ; BSR set to: 57
  3119  00FF61  25                 	db	37
  3120  00FF62  64                 	db	100	;'d'
  3121  00FF63  20                 	db	32
  3122  00FF64  25                 	db	37
  3123  00FF65  32                 	db	50	;'2'
  3124  00FF66  2E                 	db	46
  3125  00FF67  34                 	db	52	;'4'
  3126  00FF68  66                 	db	102	;'f'
  3127  00FF69  2C                 	db	44
  3128  00FF6A  20                 	db	32
  3129  00FF6B  25                 	db	37
  3130  00FF6C  64                 	db	100	;'d'
  3131  00FF6D  20                 	db	32
  3132  00FF6E  20                 	db	32
  3133  00FF6F  20                 	db	32
  3134  00FF70  23                 	db	35
  3135  00FF71  00                 	db	0
  3136  00FF72                     STR_14:
  3137                           
  3138                           ; BSR set to: 57
  3139  00FF72  43                 	db	67	;'C'
  3140  00FF73  68                 	db	104	;'h'
  3141  00FF74  65                 	db	101	;'e'
  3142  00FF75  63                 	db	99	;'c'
  3143  00FF76  6B                 	db	107	;'k'
  3144  00FF77  20                 	db	32
  3145  00FF78  33                 	db	51	;'3'
  3146  00FF79  30                 	db	48	;'0'
  3147  00FF7A  20                 	db	32
  3148  00FF7B  73                 	db	115	;'s'
  3149  00FF7C  65                 	db	101	;'e'
  3150  00FF7D  63                 	db	99	;'c'
  3151  00FF7E  6F                 	db	111	;'o'
  3152  00FF7F  6E                 	db	110	;'n'
  3153  00FF80  64                 	db	100	;'d'
  3154  00FF81  73                 	db	115	;'s'
  3155  00FF82  00                 	db	0
  3156  00FF83                     STR_19:
  3157                           
  3158                           ; BSR set to: 57
  3159  00FF83  25                 	db	37
  3160  00FF84  64                 	db	100	;'d'
  3161  00FF85  20                 	db	32
  3162  00FF86  25                 	db	37
  3163  00FF87  32                 	db	50	;'2'
  3164  00FF88  2E                 	db	46
  3165  00FF89  34                 	db	52	;'4'
  3166  00FF8A  66                 	db	102	;'f'
  3167  00FF8B  20                 	db	32
  3168  00FF8C  20                 	db	32
  3169  00FF8D  20                 	db	32
  3170  00FF8E  25                 	db	37
  3171  00FF8F  64                 	db	100	;'d'
  3172  00FF90  20                 	db	32
  3173  00FF91  20                 	db	32
  3174  00FF92  00                 	db	0
  3175  00FF93                     STR_52:
  3176                           
  3177                           ; BSR set to: 57
  3178  00FF93  76                 	db	118	;'v'
  3179  00FF94  74                 	db	116	;'t'
  3180  00FF95  65                 	db	101	;'e'
  3181  00FF96  72                 	db	114	;'r'
  3182  00FF97  6D                 	db	109	;'m'
  3183  00FF98  20                 	db	32
  3184  00FF99  25                 	db	37
  3185  00FF9A  78                 	db	120	;'x'
  3186  00FF9B  3A                 	db	58	;':'
  3187  00FF9C  25                 	db	37
  3188  00FF9D  78                 	db	120	;'x'
  3189  00FF9E  20                 	db	32
  3190  00FF9F  20                 	db	32
  3191  00FFA0  20                 	db	32
  3192  00FFA1  00                 	db	0
  3193  00FFA2                     STR_2:
  3194                           
  3195                           ; BSR set to: 57
  3196  00FFA2  20                 	db	32
  3197  00FFA3  56                 	db	86	;'V'
  3198  00FFA4  65                 	db	101	;'e'
  3199  00FFA5  72                 	db	114	;'r'
  3200  00FFA6  73                 	db	115	;'s'
  3201  00FFA7  69                 	db	105	;'i'
  3202  00FFA8  6F                 	db	111	;'o'
  3203  00FFA9  6E                 	db	110	;'n'
  3204  00FFAA  20                 	db	32
  3205  00FFAB  25                 	db	37
  3206  00FFAC  73                 	db	115	;'s'
  3207  00FFAD  20                 	db	32
  3208  00FFAE  20                 	db	32
  3209  00FFAF  20                 	db	32
  3210  00FFB0  00                 	db	0
  3211  00FFB1                     STR_46:
  3212                           
  3213                           ; BSR set to: 57
  3214  00FFB1  44                 	db	68	;'D'
  3215  00FFB2  65                 	db	101	;'e'
  3216  00FFB3  63                 	db	99	;'c'
  3217  00FFB4  20                 	db	32
  3218  00FFB5  32                 	db	50	;'2'
  3219  00FFB6  30                 	db	48	;'0'
  3220  00FFB7  20                 	db	32
  3221  00FFB8  32                 	db	50	;'2'
  3222  00FFB9  30                 	db	48	;'0'
  3223  00FFBA  31                 	db	49	;'1'
  3224  00FFBB  39                 	db	57	;'9'
  3225  00FFBC  00                 	db	0
  3226  00FFBD                     STR_50:
  3227                           
  3228                           ; BSR set to: 57
  3229  00FFBD  25                 	db	37
  3230  00FFBE  73                 	db	115	;'s'
  3231  00FFBF  20                 	db	32
  3232  00FFC0  20                 	db	32
  3233  00FFC1  20                 	db	32
  3234  00FFC2  20                 	db	32
  3235  00FFC3  20                 	db	32
  3236  00FFC4  20                 	db	32
  3237  00FFC5  20                 	db	32
  3238  00FFC6  00                 	db	0
  3239  00FFC7                     STR_47:
  3240                           
  3241                           ; BSR set to: 57
  3242  00FFC7  31                 	db	49	;'1'
  3243  00FFC8  36                 	db	54	;'6'
  3244  00FFC9  3A                 	db	58	;':'
  3245  00FFCA  34                 	db	52	;'4'
  3246  00FFCB  35                 	db	53	;'5'
  3247  00FFCC  3A                 	db	58	;':'
  3248  00FFCD  32                 	db	50	;'2'
  3249  00FFCE  34                 	db	52	;'4'
  3250  00FFCF  00                 	db	0
  3251  00FFD0                     STR_3:
  3252                           
  3253                           ; BSR set to: 57
  3254  00FFD0  31                 	db	49	;'1'
  3255  00FFD1  2E                 	db	46
  3256  00FFD2  30                 	db	48	;'0'
  3257  00FFD3  30                 	db	48	;'0'
  3258  00FFD4  37                 	db	55	;'7'
  3259  00FFD5  00                 	db	0
  3260  00FFD6                     STR_66:
  3261                           
  3262                           ; BSR set to: 57
  3263  00FFD6  49                 	db	73	;'I'
  3264  00FFD7  4E                 	db	78	;'N'
  3265  00FFD8  46                 	db	70	;'F'
  3266  00FFD9  00                 	db	0
  3267  00FFDA                     STR_70:
  3268                           
  3269                           ; BSR set to: 57
  3270  00FFDA  4E                 	db	78	;'N'
  3271  00FFDB  41                 	db	65	;'A'
  3272  00FFDC  4E                 	db	78	;'N'
  3273  00FFDD  00                 	db	0
  3274  00FFDE                     STR_67:
  3275                           
  3276                           ; BSR set to: 57
  3277  00FFDE  69                 	db	105	;'i'
  3278  00FFDF  6E                 	db	110	;'n'
  3279  00FFE0  66                 	db	102	;'f'
  3280  00FFE1  00                 	db	0
  3281  00FFE2                     STR_71:
  3282                           
  3283                           ; BSR set to: 57
  3284  00FFE2  6E                 	db	110	;'n'
  3285  00FFE3  61                 	db	97	;'a'
  3286  00FFE4  6E                 	db	110	;'n'
  3287  00FFE5  00                 	db	0
  3288  00FFE6                     STR_97:
  3289                           
  3290                           ; BSR set to: 57
  3291  00FFE6  6C                 	db	108	;'l'
  3292  00FFE7  58                 	db	88	;'X'
  3293  00FFE8  00                 	db	0
  3294  00FFE9                     STR_74:
  3295                           
  3296                           ; BSR set to: 57
  3297  00FFE9  6C                 	db	108	;'l'
  3298  00FFEA  64                 	db	100	;'d'
  3299  00FFEB  00                 	db	0
  3300  00FFEC                     STR_83:
  3301                           
  3302                           ; BSR set to: 57
  3303  00FFEC  6C                 	db	108	;'l'
  3304  00FFED  66                 	db	102	;'f'
  3305  00FFEE  00                 	db	0
  3306  00FFEF                     STR_78:
  3307                           
  3308                           ; BSR set to: 57
  3309  00FFEF  6C                 	db	108	;'l'
  3310  00FFF0  69                 	db	105	;'i'
  3311  00FFF1  00                 	db	0
  3312  00FFF2                     STR_88:
  3313                           
  3314                           ; BSR set to: 57
  3315  00FFF2  6C                 	db	108	;'l'
  3316  00FFF3  75                 	db	117	;'u'
  3317  00FFF4  00                 	db	0
  3318  00FFF5                     STR_93:
  3319                           
  3320                           ; BSR set to: 57
  3321  00FFF5  6C                 	db	108	;'l'
  3322  00FFF6  78                 	db	120	;'x'
  3323  00FFF7  00                 	db	0
  3324  00FFF8                     STR_44:
  3325                           
  3326                           ; BSR set to: 57
  3327  00FFF8  25                 	db	37
  3328  00FFF9  63                 	db	99	;'c'
  3329  00FFFA  00                 	db	0
  3330  00FFFB                     STR_43:
  3331                           
  3332                           ; BSR set to: 57
  3333  00FFFB  25                 	db	37
  3334  00FFFC  73                 	db	115	;'s'
  3335  00FFFD  00                 	db	0
  3336  0000                     
  3337                           ; #config settings
  3338  00FFFE  00                 	db	0	; dummy byte at the end
  3339  0000                     
  3340                           	psect	cinit
  3341  019312                     __pcinit:
  3342                           	opt callstack 0
  3343  019312                     start_initialization:
  3344                           	opt callstack 0
  3345  019312                     __initialization:
  3346                           	opt callstack 0
  3347                           
  3348                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3349                           ; load TBLPTR registers with __pidataBIGRAM
  3350  019312  0EC8               	movlw	low __pidataBIGRAM
  3351  019314  6EF6               	movwf	tblptrl,c
  3352  019316  0E7B               	movlw	high __pidataBIGRAM
  3353  019318  6EF7               	movwf	tblptrh,c
  3354  01931A  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3355  01931C  6EF8               	movwf	tblptru,c
  3356  01931E  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3357  019322  EE20 F200          	lfsr	2,512
  3358  019326                     copy_data0:
  3359  019326  0009               	tblrd		*+
  3360  019328  006F FFD7 FFEE     	movff	tablat,postinc0
  3361  01932E  50DD               	movf	postdec2,w,c
  3362  019330  50D9               	movf	fsr2l,w,c
  3363  019332  E1F9               	bnz	copy_data0
  3364  019334  50DA               	movf	fsr2h,w,c
  3365  019336  E1F7               	bnz	copy_data0
  3366                           
  3367                           ; Initialize objects allocated to BANK2 (190 bytes)
  3368                           ; load TBLPTR registers with __pidataBANK2
  3369  019338  0E8C               	movlw	low __pidataBANK2
  3370  01933A  6EF6               	movwf	tblptrl,c
  3371  01933C  0E9A               	movlw	high __pidataBANK2
  3372  01933E  6EF7               	movwf	tblptrh,c
  3373  019340  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3374  019342  6EF8               	movwf	tblptru,c
  3375  019344  EE00  F200         	lfsr	0,__pdataBANK2
  3376  019348  EE20 F0BE          	lfsr	2,190
  3377  01934C                     copy_data1:
  3378  01934C  0009               	tblrd		*+
  3379  01934E  006F FFD7 FFEE     	movff	tablat,postinc0
  3380  019354  50DD               	movf	postdec2,w,c
  3381  019356  50D9               	movf	fsr2l,w,c
  3382  019358  E1F9               	bnz	copy_data1
  3383                           
  3384                           ; Initialize objects allocated to BANK1 (247 bytes)
  3385                           ; load TBLPTR registers with __pidataBANK1
  3386  01935A  0E2C               	movlw	low __pidataBANK1
  3387  01935C  6EF6               	movwf	tblptrl,c
  3388  01935E  0E96               	movlw	high __pidataBANK1
  3389  019360  6EF7               	movwf	tblptrh,c
  3390  019362  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3391  019364  6EF8               	movwf	tblptru,c
  3392  019366  EE00  F100         	lfsr	0,__pdataBANK1
  3393  01936A  EE20 F0F7          	lfsr	2,247
  3394  01936E                     copy_data2:
  3395  01936E  0009               	tblrd		*+
  3396  019370  006F FFD7 FFEE     	movff	tablat,postinc0
  3397  019376  50DD               	movf	postdec2,w,c
  3398  019378  50D9               	movf	fsr2l,w,c
  3399  01937A  E1F9               	bnz	copy_data2
  3400                           
  3401                           ; Initialize objects allocated to BANK0 (54 bytes)
  3402                           ; load TBLPTR registers with __pidataBANK0
  3403  01937C  0EE4               	movlw	low __pidataBANK0
  3404  01937E  6EF6               	movwf	tblptrl,c
  3405  019380  0EAD               	movlw	high __pidataBANK0
  3406  019382  6EF7               	movwf	tblptrh,c
  3407  019384  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3408  019386  6EF8               	movwf	tblptru,c
  3409  019388  EE00  F0C6         	lfsr	0,__pdataBANK0
  3410  01938C  EE20 F036          	lfsr	2,54
  3411  019390                     copy_data3:
  3412  019390  0009               	tblrd		*+
  3413  019392  006F FFD7 FFEE     	movff	tablat,postinc0
  3414  019398  50DD               	movf	postdec2,w,c
  3415  01939A  50D9               	movf	fsr2l,w,c
  3416  01939C  E1F9               	bnz	copy_data3
  3417                           
  3418                           ; Clear objects allocated to BIGRAM (482 bytes)
  3419  01939E  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3420  0193A2  EE20 F1E2          	lfsr	2,482
  3421  0193A6                     clear_0:
  3422  0193A6  6AEE               	clrf	postinc0,c
  3423  0193A8  50DD               	movf	postdec2,w,c
  3424  0193AA  50D9               	movf	fsr2l,w,c
  3425  0193AC  E1FC               	bnz	clear_0
  3426  0193AE  50DA               	movf	fsr2h,w,c
  3427  0193B0  E1FA               	bnz	clear_0
  3428                           
  3429                           ; Clear objects allocated to BANK5 (255 bytes)
  3430  0193B2  EE01  F100         	lfsr	0,__pbssBANK5
  3431  0193B6  EE20 F0FF          	lfsr	2,255
  3432  0193BA                     clear_1:
  3433  0193BA  6AEE               	clrf	postinc0,c
  3434  0193BC  50DD               	movf	postdec2,w,c
  3435  0193BE  50D9               	movf	fsr2l,w,c
  3436  0193C0  E1FC               	bnz	clear_1
  3437  0193C2  50DA               	movf	fsr2h,w,c
  3438  0193C4  E1FA               	bnz	clear_1
  3439                           
  3440                           ; Clear objects allocated to BANK4 (134 bytes)
  3441  0193C6  EE01  F000         	lfsr	0,__pbssBANK4
  3442  0193CA  0E86               	movlw	134
  3443  0193CC                     clear_2:
  3444  0193CC  6AEE               	clrf	postinc0,c
  3445  0193CE  06E8               	decf	wreg,f,c
  3446  0193D0  E1FD               	bnz	clear_2
  3447                           
  3448                           ; Clear objects allocated to BANK3 (254 bytes)
  3449  0193D2  EE00  F300         	lfsr	0,__pbssBANK3
  3450  0193D6  0EFE               	movlw	254
  3451  0193D8                     clear_3:
  3452  0193D8  6AEE               	clrf	postinc0,c
  3453  0193DA  06E8               	decf	wreg,f,c
  3454  0193DC  E1FD               	bnz	clear_3
  3455                           
  3456                           ; Clear objects allocated to BANK2 (41 bytes)
  3457  0193DE  EE00  F2BE         	lfsr	0,__pbssBANK2
  3458  0193E2  0E29               	movlw	41
  3459  0193E4                     clear_4:
  3460  0193E4  6AEE               	clrf	postinc0,c
  3461  0193E6  06E8               	decf	wreg,f,c
  3462  0193E8  E1FD               	bnz	clear_4
  3463                           
  3464                           ; Clear objects allocated to BANK1 (8 bytes)
  3465  0193EA  EE00  F1F7         	lfsr	0,__pbssBANK1
  3466  0193EE  0E08               	movlw	8
  3467  0193F0                     clear_5:
  3468  0193F0  6AEE               	clrf	postinc0,c
  3469  0193F2  06E8               	decf	wreg,f,c
  3470  0193F4  E1FD               	bnz	clear_5
  3471                           
  3472                           ; Clear objects allocated to BANK0 (102 bytes)
  3473  0193F6  EE00  F060         	lfsr	0,__pbssBANK0
  3474  0193FA  0E66               	movlw	102
  3475  0193FC                     clear_6:
  3476  0193FC  6AEE               	clrf	postinc0,c
  3477  0193FE  06E8               	decf	wreg,f,c
  3478  019400  E1FD               	bnz	clear_6
  3479                           
  3480                           ; Clear objects allocated to COMRAM (23 bytes)
  3481  019402  EE00  F048         	lfsr	0,__pbssCOMRAM
  3482  019406  0E17               	movlw	23
  3483  019408                     clear_7:
  3484  019408  6AEE               	clrf	postinc0,c
  3485  01940A  06E8               	decf	wreg,f,c
  3486  01940C  E1FD               	bnz	clear_7
  3487                           
  3488                           ;
  3489                           ; Setup IVTBASE
  3490                           ;
  3491  01940E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3492  019410  6ED5               	movwf	213,c
  3493  019412  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3494  019414  6ED6               	movwf	214,c
  3495  019416  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3496  019418  6ED7               	movwf	215,c
  3497  01941A                     end_of_initialization:
  3498                           	opt callstack 0
  3499  01941A                     __end_of__initialization:
  3500                           	opt callstack 0
  3501  01941A  0100               	movlb	0
  3502  01941C  EF22  F089         	goto	_main	;jump to C main() function
  3503                           
  3504                           	psect	bssCOMRAM
  3505  000048                     __pbssCOMRAM:
  3506                           	opt callstack 0
  3507  000048                     _width:
  3508                           	opt callstack 0
  3509  000048                     	ds	2
  3510  00004A                     _prec:
  3511                           	opt callstack 0
  3512  00004A                     	ds	2
  3513  00004C                     _flags:
  3514                           	opt callstack 0
  3515  00004C                     	ds	2
  3516  00004E                     TMR5_ISR@CountCallBack:
  3517                           	opt callstack 0
  3518  00004E                     	ds	2
  3519  000050                     _timer5ReloadVal:
  3520                           	opt callstack 0
  3521  000050                     	ds	2
  3522  000052                     esr_check@esr_state:
  3523                           	opt callstack 0
  3524  000052                     	ds	1
  3525  000053                     Volts_to_SOC@slot:
  3526                           	opt callstack 0
  3527  000053                     	ds	1
  3528  000054                     calc_bsoc@log_update_wait:
  3529                           	opt callstack 0
  3530  000054                     	ds	1
  3531  000055                     _mode_sw:
  3532                           	opt callstack 0
  3533  000055                     	ds	1
  3534  000056                     _uart2RxCount:
  3535                           	opt callstack 0
  3536  000056                     	ds	1
  3537  000057                     _uart2RxTail:
  3538                           	opt callstack 0
  3539  000057                     	ds	1
  3540  000058                     _uart2RxHead:
  3541                           	opt callstack 0
  3542  000058                     	ds	1
  3543  000059                     _uart2TxBufferRemaining:
  3544                           	opt callstack 0
  3545  000059                     	ds	1
  3546  00005A                     _uart2TxTail:
  3547                           	opt callstack 0
  3548  00005A                     	ds	1
  3549  00005B                     _uart2TxHead:
  3550                           	opt callstack 0
  3551  00005B                     	ds	1
  3552  00005C                     _uart1RxCount:
  3553                           	opt callstack 0
  3554  00005C                     	ds	1
  3555  00005D                     _uart1RxTail:
  3556                           	opt callstack 0
  3557  00005D                     	ds	1
  3558  00005E                     _uart1RxHead:
  3559                           	opt callstack 0
  3560  00005E                     	ds	1
  3561                           
  3562                           	psect	bssBANK0
  3563  000060                     __pbssBANK0:
  3564                           	opt callstack 0
  3565  000060                     _spi_link:
  3566                           	opt callstack 0
  3567  000060                     	ds	12
  3568  00006C                     _uart1RxBuffer:
  3569                           	opt callstack 0
  3570  00006C                     	ds	8
  3571  000074                     spinners@s:
  3572                           	opt callstack 0
  3573  000074                     	ds	6
  3574  00007A                     floorf@F524:
  3575                           	opt callstack 0
  3576  00007A                     	ds	4
  3577  00007E                     fabsf@F463:
  3578                           	opt callstack 0
  3579  00007E                     	ds	4
  3580  000082                     ___fpclassifyf@F463:
  3581                           	opt callstack 0
  3582  000082                     	ds	4
  3583  000086                     calc_ror_data@bcror:
  3584                           	opt callstack 0
  3585  000086                     	ds	4
  3586  00008A                     calc_ror_data@bvror:
  3587                           	opt callstack 0
  3588  00008A                     	ds	4
  3589  00008E                     calc_model_data@bcror:
  3590                           	opt callstack 0
  3591  00008E                     	ds	4
  3592  000092                     calc_model_data@bvror:
  3593                           	opt callstack 0
  3594  000092                     	ds	4
  3595  000096                     _utctime:
  3596                           	opt callstack 0
  3597  000096                     	ds	4
  3598  00009A                     wdtdelay@dcount:
  3599                           	opt callstack 0
  3600  00009A                     	ds	4
  3601  00009E                     _P:
  3602                           	opt callstack 0
  3603  00009E                     	ds	4
  3604  0000A2                     _TMR3_InterruptHandler:
  3605                           	opt callstack 0
  3606  0000A2                     	ds	3
  3607  0000A5                     _TMR5_InterruptHandler:
  3608                           	opt callstack 0
  3609  0000A5                     	ds	3
  3610  0000A8                     _TMR6_InterruptHandler:
  3611                           	opt callstack 0
  3612  0000A8                     	ds	3
  3613  0000AB                     _ADCC_ADTI_InterruptHandler:
  3614                           	opt callstack 0
  3615  0000AB                     	ds	3
  3616  0000AE                     _ADCC_ADI_InterruptHandler:
  3617                           	opt callstack 0
  3618  0000AE                     	ds	3
  3619  0000B1                     _UART1_RxInterruptHandler:
  3620                           	opt callstack 0
  3621  0000B1                     	ds	3
  3622  0000B4                     _UART2_TxInterruptHandler:
  3623                           	opt callstack 0
  3624  0000B4                     	ds	3
  3625  0000B7                     _UART2_RxInterruptHandler:
  3626                           	opt callstack 0
  3627  0000B7                     	ds	3
  3628  0000BA                     _INT1_InterruptHandler:
  3629                           	opt callstack 0
  3630  0000BA                     	ds	3
  3631  0000BD                     _INT0_InterruptHandler:
  3632                           	opt callstack 0
  3633  0000BD                     	ds	3
  3634  0000C0                     _nout:
  3635                           	opt callstack 0
  3636  0000C0                     	ds	2
  3637  0000C2                     TMR3_ISR@CountCallBack:
  3638                           	opt callstack 0
  3639  0000C2                     	ds	2
  3640  0000C4                     _timer3ReloadVal:
  3641                           	opt callstack 0
  3642  0000C4                     	ds	2
  3643                           
  3644                           	psect	dataBANK0
  3645  0000C6                     __pdataBANK0:
  3646                           	opt callstack 0
  3647  0000C6                     _R:
  3648                           	opt callstack 0
  3649  0000C6                     	ds	40
  3650  0000EE                     stoa@F1166:
  3651                           	opt callstack 0
  3652  0000EE                     	ds	7
  3653  0000F5                     _H:
  3654                           	opt callstack 0
  3655  0000F5                     	ds	7
  3656                           
  3657                           	psect	bssBANK1
  3658  0001F7                     __pbssBANK1:
  3659                           	opt callstack 0
  3660  0001F7                     _seed:
  3661                           	opt callstack 0
  3662  0001F7                     	ds	8
  3663                           
  3664                           	psect	dataBANK1
  3665  000100                     __pdataBANK1:
  3666                           	opt callstack 0
  3667  000100                     _C:
  3668                           	opt callstack 0
  3669  000100                     	ds	247
  3670                           
  3671                           	psect	bssBANK2
  3672  0002BE                     __pbssBANK2:
  3673                           	opt callstack 0
  3674  0002BE                     _S:
  3675                           	opt callstack 0
  3676  0002BE                     	ds	41
  3677                           
  3678                           	psect	dataBANK2
  3679  000200                     __pdataBANK2:
  3680                           	opt callstack 0
  3681  000200                     _V:
  3682                           	opt callstack 0
  3683  000200                     	ds	190
  3684                           
  3685                           	psect	bssBANK3
  3686  000300                     __pbssBANK3:
  3687                           	opt callstack 0
  3688  000300                     lp_filter@smooth:
  3689                           	opt callstack 0
  3690  000300                     	ds	84
  3691  000354                     _uart2TxBuffer:
  3692                           	opt callstack 0
  3693  000354                     	ds	64
  3694  000394                     _tickCount:
  3695                           	opt callstack 0
  3696  000394                     	ds	26
  3697  0003AE                     _dbuf:
  3698                           	opt callstack 0
  3699  0003AE                     	ds	80
  3700                           
  3701                           	psect	bssBANK4
  3702  000400                     __pbssBANK4:
  3703                           	opt callstack 0
  3704  000400                     _ring_buf2:
  3705                           	opt callstack 0
  3706  000400                     	ds	67
  3707  000443                     _ring_buf1:
  3708                           	opt callstack 0
  3709  000443                     	ds	67
  3710                           
  3711                           	psect	bssBANK5
  3712  000500                     __pbssBANK5:
  3713                           	opt callstack 0
  3714  000500                     _uart2RxBuffer:
  3715                           	opt callstack 0
  3716  000500                     	ds	255
  3717                           
  3718                           	psect	bssBIGRAM
  3719  0007FF                     __pbssBIGRAM:
  3720                           	opt callstack 0
  3721  0007FF                     _D:
  3722                           	opt callstack 0
  3723  0007FF                     	ds	482
  3724                           
  3725                           	psect	dataBIGRAM
  3726  0005FF                     __pdataBIGRAM:
  3727                           	opt callstack 0
  3728  0005FF                     _port_data:
  3729                           	opt callstack 0
  3730  0005FF                     	ds	512
  3731                           
  3732                           	psect	cstackCOMRAM
  3733  000001                     __pcstackCOMRAM:
  3734                           	opt callstack 0
  3735  000001                     ??_ADCC_ThresholdISR:
  3736  000001                     
  3737                           ; 1 bytes @ 0x0
  3738  000001                     	ds	5
  3739  000006                     ??_TMR6_ISR:
  3740                           
  3741                           ; 1 bytes @ 0x5
  3742  000006                     	ds	1
  3743  000007                     ??_INT1_ISR:
  3744  000007                     
  3745                           ; 1 bytes @ 0x6
  3746  000007                     	ds	4
  3747  00000B                     ??_TMR5_ISR:
  3748                           
  3749                           ; 1 bytes @ 0xA
  3750  00000B                     	ds	4
  3751  00000F                     ??_TMR3_ISR:
  3752                           
  3753                           ; 1 bytes @ 0xE
  3754  00000F                     	ds	25
  3755                           
  3756 ;;
  3757 ;;Main: autosize = 13, tempsize = 0, incstack = 0, save=0
  3758 ;;
  3759 ;; *************** function _main *****************
  3760 ;; Defined at:
  3761 ;;		line 182 in file "main.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  esr_temp        4  [STACK] float 
  3766 ;;  i_esr           2  [STACK] unsigned short 
  3767 ;;  shape           1  [STACK] unsigned char 
  3768 ;;  k               1  [STACK] unsigned char 
  3769 ;;  j               1  [STACK] unsigned char 
  3770 ;;  i               1  [STACK] unsigned char 
  3771 ;;  inp_index       1  [STACK] unsigned char 
  3772 ;;  mode            1  [STACK] enum E17013
  3773 ;;  i_ror           1  [STACK] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1  [STACK] void 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3787 ;;Total ram usage:        0 bytes
  3788 ;; Hardware stack levels required when called:   28
  3789 ;; This function calls:
  3790 ;;		_SYSTEM_Initialize
  3791 ;;		_StartTimer
  3792 ;;		_TimerDone
  3793 ;;		_WaitMs
  3794 ;;		___fladd
  3795 ;;		___flge
  3796 ;;		___fltol
  3797 ;;		_calc_model_data
  3798 ;;		_calc_ror_data
  3799 ;;		_check_adc_scan
  3800 ;;		_check_enter_button
  3801 ;;		_check_help
  3802 ;;		_clear_adc_scan
  3803 ;;		_clear_hid_pflags
  3804 ;;		_conv_raw_result
  3805 ;;		_convert_adc_data
  3806 ;;		_eaDogM_WriteCommand
  3807 ;;		_esr_check
  3808 ;;		_fabsf
  3809 ;;		_get_raw_result
  3810 ;;		_get_switch
  3811 ;;		_get_vterm_ptr
  3812 ;;		_hid_display
  3813 ;;		_init_bsoc
  3814 ;;		_init_display
  3815 ;;		_init_port_dma
  3816 ;;		_lp_filter
  3817 ;;		_mode_lamp_dim
  3818 ;;		_set_display_info
  3819 ;;		_set_load_relay_one
  3820 ;;		_set_load_relay_two
  3821 ;;		_set_vterm
  3822 ;;		_spinners
  3823 ;;		_sprintf
  3824 ;;		_srand
  3825 ;;		_start_adc_scan
  3826 ;;		_start_switch_handler
  3827 ;;		_static_soc
  3828 ;;		_update_lcd
  3829 ;; This function is called by:
  3830 ;;		Startup code after reset
  3831 ;; This function uses a reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text0
  3835  011244                     __ptext0:
  3836                           	opt callstack 0
  3837  011244                     _main:
  3838                           	opt callstack 0
  3839                           
  3840                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3841  011244  0E0D               	movlw	13
  3842  011246  26E1               	addwf	fsr1l,f,c
  3843  011248  0E00               	movlw	0
  3844  01124A  22E2               	addwfc	fsr1h,f,c
  3845                           
  3846                           ;main.c: 184:  UI_STATES mode;;main.c: 185:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3847                           ;stkvar	_inp_index @ sp[(-13)+10]
  3848                           
  3849                           ;incstack = 0
  3850  01124C  0EFD               	movlw	-3
  3851  01124E  6AE3               	clrf	plusw1,c
  3852                           
  3853                           ;stkvar	_i @ sp[(-13)+9]
  3854  011250  0EFC               	movlw	-4
  3855  011252  6AE3               	clrf	plusw1,c
  3856                           
  3857                           ;stkvar	_j @ sp[(-13)+8]
  3858  011254  0EFB               	movlw	-5
  3859  011256  6AE3               	clrf	plusw1,c
  3860  011258  2AE3               	incf	plusw1,f,c
  3861                           
  3862                           ;stkvar	_k @ sp[(-13)+7]
  3863  01125A  0EFA               	movlw	-6
  3864  01125C  6AE3               	clrf	plusw1,c
  3865  01125E  82E3               	bsf	plusw1,1,c
  3866                           
  3867                           ;main.c: 188:  SYSTEM_Initialize();
  3868  011260  ECDD  F0D4         	call	_SYSTEM_Initialize	;wreg free
  3869                           
  3870                           ; BSR set to: 60
  3871                           ;main.c: 191:  (INTCON0bits.GIEH = 1);
  3872  011264  8ED2               	bsf	210,7,c	;volatile
  3873                           
  3874                           ; BSR set to: 60
  3875                           ;main.c: 194:  (INTCON0bits.GIEL = 1);
  3876  011266  8CD2               	bsf	210,6,c	;volatile
  3877                           
  3878                           ; BSR set to: 60
  3879                           ;main.c: 196:  V.ui_state = UI_STATE_INIT;
  3880  011268  0102               	movlb	2	; () banked
  3881  01126A  6B00               	clrf	_V& (0+255),b	;volatile
  3882                           
  3883                           ; BSR set to: 2
  3884                           ;main.c: 201:  WaitMs(300);
  3885  01126C  0E2C               	movlw	44
  3886  01126E  6EE6               	movwf	postinc1,c
  3887  011270  0E01               	movlw	1
  3888  011272  6EE6               	movwf	postinc1,c
  3889  011274  EC0D  F0D7         	call	_WaitMs	;wreg free
  3890                           
  3891                           ;main.c: 202:  if (PORTBbits.RB0) {
  3892  011278  A0CB               	btfss	203,0,c	;volatile
  3893  01127A  D004               	goto	l12586
  3894                           
  3895                           ;main.c: 203:   mode = UI_STATE_HOST;
  3896                           ;stkvar	_mode @ sp[(-13)+11]
  3897  01127C  0EFE               	movlw	-2
  3898  01127E  6AE3               	clrf	plusw1,c
  3899  011280  2AE3               	incf	plusw1,f,c
  3900                           
  3901                           ;main.c: 204:  } else {
  3902  011282  D004               	goto	l12588
  3903  011284                     l12586:
  3904                           
  3905                           ;main.c: 205:   mode = UI_STATE_LOG;
  3906                           ;stkvar	_mode @ sp[(-13)+11]
  3907  011284  0EFE               	movlw	-2
  3908  011286  6AE3               	clrf	plusw1,c
  3909  011288  80E3               	bsf	plusw1,0,c
  3910  01128A  82E3               	bsf	plusw1,1,c	;indir
  3911  01128C                     l12588:
  3912                           
  3913                           ;main.c: 208:  if (mode == UI_STATE_HOST) {
  3914                           ;stkvar	_mode @ sp[(-13)+11]
  3915  01128C  0EFE               	movlw	-2
  3916  01128E  04E3               	decf	plusw1,w,c
  3917  011290  A4D8               	btfss	status,2,c
  3918  011292  D007               	goto	l1322
  3919                           
  3920                           ;main.c: 209:   do { LATDbits.LATD0 = 1; } while(0);
  3921  011294  80BD               	bsf	189,0,c	;volatile
  3922                           
  3923                           ;main.c: 210:   V.mode_pwm = 70;
  3924  011296  0E00               	movlw	0
  3925  011298  0102               	movlb	2	; () banked
  3926  01129A  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3927  01129C  0E46               	movlw	70
  3928  01129E  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3929                           
  3930                           ;main.c: 211:  } else {
  3931  0112A0  D004               	goto	l12592
  3932  0112A2                     l1322:
  3933  0112A2  90BD               	bcf	189,0,c	;volatile
  3934                           
  3935                           ;main.c: 213:   V.mode_pwm = 0;
  3936  0112A4  0102               	movlb	2	; () banked
  3937  0112A6  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3938  0112A8  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3939  0112AA                     l12592:
  3940                           
  3941                           ; BSR set to: 2
  3942                           ;main.c: 215:  mode_lamp_dim(V.mode_pwm);
  3943  0112AA  0060  FA57  FFE6   	movff	_V+149,postinc1
  3944  0112B0  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3945  0112B6  ECD5  F0DA         	call	_mode_lamp_dim	;wreg free
  3946  0112BA  D311               	goto	l12712
  3947  0112BC                     l12594:
  3948                           
  3949                           ; BSR set to: 2
  3950                           ;main.c: 223:    init_port_dma();
  3951  0112BC  EC91  F0D7         	call	_init_port_dma	;wreg free
  3952                           
  3953                           ; BSR set to: 59
  3954                           ;main.c: 225:    init_display();
  3955  0112C0  EC92  F0CB         	call	_init_display	;wreg free
  3956                           
  3957                           ; BSR set to: 61
  3958                           ;main.c: 226:    eaDogM_WriteCommand(0b00001100);
  3959  0112C4  0E0C               	movlw	12
  3960  0112C6  6EE6               	movwf	postinc1,c
  3961  0112C8  EC39  F0DB         	call	_eaDogM_WriteCommand	;wreg free
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;main.c: 230:    set_load_relay_one(1);
  3965  0112CC  0E01               	movlw	1
  3966  0112CE  6EE6               	movwf	postinc1,c
  3967  0112D0  EC29  F0DB         	call	_set_load_relay_one	;wreg free
  3968                           
  3969                           ;main.c: 231:    set_load_relay_two(1);
  3970  0112D4  0E01               	movlw	1
  3971  0112D6  6EE6               	movwf	postinc1,c
  3972  0112D8  EC21  F0DB         	call	_set_load_relay_two	;wreg free
  3973                           
  3974                           ;main.c: 233:    V.ui_state = mode;
  3975                           ;stkvar	_mode @ sp[(-13)+11]
  3976  0112DC  0EFE               	movlw	-2
  3977  0112DE  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3978                           
  3979                           ;main.c: 234:    srand(1957);
  3980  0112E4  0EA5               	movlw	165
  3981  0112E6  6EE6               	movwf	postinc1,c
  3982  0112E8  0E07               	movlw	7
  3983  0112EA  6EE6               	movwf	postinc1,c
  3984  0112EC  EC43  F0D7         	call	_srand	;wreg free
  3985                           
  3986                           ; BSR set to: 1
  3987                           ;main.c: 235:    set_vterm(0);
  3988  0112F0  0E00               	movlw	0
  3989  0112F2  6EE6               	movwf	postinc1,c
  3990  0112F4  EC62  F0DA         	call	_set_vterm	;wreg free
  3991                           
  3992                           ;main.c: 236:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3993  0112F8  0E50               	movlw	low STR_1
  3994  0112FA  6EE6               	movwf	postinc1,c
  3995  0112FC  0EFF               	movlw	high STR_1
  3996  0112FE  6EE6               	movwf	postinc1,c
  3997  011300  0E00               	movlw	0
  3998  011302  6EE6               	movwf	postinc1,c
  3999  011304  0E00               	movlw	0
  4000  011306  6EE6               	movwf	postinc1,c
  4001  011308  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4002  01130C  0060  F0A3  FFE6   	movff	btemp,postinc1
  4003  011312  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4004  011318  0E04               	movlw	4
  4005  01131A  6EE6               	movwf	postinc1,c
  4006  01131C  EC10  F0CA         	call	_sprintf	;wreg free
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;main.c: 237:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.007");
  4010  011320  0ED0               	movlw	low STR_3
  4011  011322  6EE6               	movwf	postinc1,c
  4012  011324  0EFF               	movlw	high STR_3
  4013  011326  6EE6               	movwf	postinc1,c
  4014  011328  0EA2               	movlw	low STR_2
  4015  01132A  6EE6               	movwf	postinc1,c
  4016  01132C  0EFF               	movlw	high STR_2
  4017  01132E  6EE6               	movwf	postinc1,c
  4018  011330  0E00               	movlw	0
  4019  011332  6EE6               	movwf	postinc1,c
  4020  011334  0E01               	movlw	1
  4021  011336  6EE6               	movwf	postinc1,c
  4022  011338  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4023  01133C  0060  F0A3  FFE6   	movff	btemp,postinc1
  4024  011342  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4025  011348  0E06               	movlw	6
  4026  01134A  6EE6               	movwf	postinc1,c
  4027  01134C  EC10  F0CA         	call	_sprintf	;wreg free
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;main.c: 238:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4031  011350  0E1D               	movlw	low STR_4
  4032  011352  6EE6               	movwf	postinc1,c
  4033  011354  0EFF               	movlw	high STR_4
  4034  011356  6EE6               	movwf	postinc1,c
  4035  011358  0E00               	movlw	0
  4036  01135A  6EE6               	movwf	postinc1,c
  4037  01135C  0E02               	movlw	2
  4038  01135E  6EE6               	movwf	postinc1,c
  4039  011360  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4040  011364  0060  F0A3  FFE6   	movff	btemp,postinc1
  4041  01136A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4042  011370  0E04               	movlw	4
  4043  011372  6EE6               	movwf	postinc1,c
  4044  011374  EC10  F0CA         	call	_sprintf	;wreg free
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;main.c: 239:    sprintf(get_vterm_ptr(0, 2), "                ");
  4048  011378  0EF0               	movlw	low (STR_58+2)
  4049  01137A  6EE6               	movwf	postinc1,c
  4050  01137C  0EFD               	movlw	high (STR_58+2)
  4051  01137E  6EE6               	movwf	postinc1,c
  4052  011380  0E02               	movlw	2
  4053  011382  6EE6               	movwf	postinc1,c
  4054  011384  0E00               	movlw	0
  4055  011386  6EE6               	movwf	postinc1,c
  4056  011388  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4057  01138C  0060  F0A3  FFE6   	movff	btemp,postinc1
  4058  011392  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4059  011398  0E04               	movlw	4
  4060  01139A  6EE6               	movwf	postinc1,c
  4061  01139C  EC10  F0CA         	call	_sprintf	;wreg free
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;main.c: 240:    sprintf(get_vterm_ptr(1, 2), "                ");
  4065  0113A0  0EF0               	movlw	low (STR_58+2)
  4066  0113A2  6EE6               	movwf	postinc1,c
  4067  0113A4  0EFD               	movlw	high (STR_58+2)
  4068  0113A6  6EE6               	movwf	postinc1,c
  4069  0113A8  0E02               	movlw	2
  4070  0113AA  6EE6               	movwf	postinc1,c
  4071  0113AC  0E01               	movlw	1
  4072  0113AE  6EE6               	movwf	postinc1,c
  4073  0113B0  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4074  0113B4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4075  0113BA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4076  0113C0  0E04               	movlw	4
  4077  0113C2  6EE6               	movwf	postinc1,c
  4078  0113C4  EC10  F0CA         	call	_sprintf	;wreg free
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 241:    sprintf(get_vterm_ptr(2, 2), "                ");
  4082  0113C8  0EF0               	movlw	low (STR_58+2)
  4083  0113CA  6EE6               	movwf	postinc1,c
  4084  0113CC  0EFD               	movlw	high (STR_58+2)
  4085  0113CE  6EE6               	movwf	postinc1,c
  4086  0113D0  0E02               	movlw	2
  4087  0113D2  6EE6               	movwf	postinc1,c
  4088  0113D4  0E02               	movlw	2
  4089  0113D6  6EE6               	movwf	postinc1,c
  4090  0113D8  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4091  0113DC  0060  F0A3  FFE6   	movff	btemp,postinc1
  4092  0113E2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4093  0113E8  0E04               	movlw	4
  4094  0113EA  6EE6               	movwf	postinc1,c
  4095  0113EC  EC10  F0CA         	call	_sprintf	;wreg free
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;main.c: 242:    update_lcd(0);
  4099  0113F0  0E00               	movlw	0
  4100  0113F2  6EE6               	movwf	postinc1,c
  4101  0113F4  EC01  F0C9         	call	_update_lcd	;wreg free
  4102                           
  4103                           ;main.c: 243:    WaitMs(1000);
  4104  0113F8  0EE8               	movlw	232
  4105  0113FA  6EE6               	movwf	postinc1,c
  4106  0113FC  0E03               	movlw	3
  4107  0113FE  6EE6               	movwf	postinc1,c
  4108  011400  EC0D  F0D7         	call	_WaitMs	;wreg free
  4109                           
  4110                           ;main.c: 244:    StartTimer(TMR_DISPLAY, 250);
  4111  011404  0EFA               	movlw	250
  4112  011406  6EE6               	movwf	postinc1,c
  4113  011408  0E00               	movlw	0
  4114  01140A  6EE6               	movwf	postinc1,c
  4115  01140C  0E0A               	movlw	10
  4116  01140E  6EE6               	movwf	postinc1,c
  4117  011410  EC19  F0D6         	call	_StartTimer	;wreg free
  4118                           
  4119                           ;main.c: 245:    StartTimer(TMR_ADC, 200);
  4120  011414  0EC8               	movlw	200
  4121  011416  6EE6               	movwf	postinc1,c
  4122  011418  0E00               	movlw	0
  4123  01141A  6EE6               	movwf	postinc1,c
  4124  01141C  0E01               	movlw	1
  4125  01141E  6EE6               	movwf	postinc1,c
  4126  011420  EC19  F0D6         	call	_StartTimer	;wreg free
  4127                           
  4128                           ;main.c: 246:    StartTimer(TMR_INFO, 3000);
  4129  011424  0EB8               	movlw	184
  4130  011426  6EE6               	movwf	postinc1,c
  4131  011428  0E0B               	movlw	11
  4132  01142A  6EE6               	movwf	postinc1,c
  4133  01142C  0E07               	movlw	7
  4134  01142E  6EE6               	movwf	postinc1,c
  4135  011430  EC19  F0D6         	call	_StartTimer	;wreg free
  4136                           
  4137                           ;main.c: 247:    StartTimer(TMR_FLIPPER, 1500);
  4138  011434  0EDC               	movlw	220
  4139  011436  6EE6               	movwf	postinc1,c
  4140  011438  0E05               	movlw	5
  4141  01143A  6EE6               	movwf	postinc1,c
  4142  01143C  0E0B               	movlw	11
  4143  01143E  6EE6               	movwf	postinc1,c
  4144  011440  EC19  F0D6         	call	_StartTimer	;wreg free
  4145                           
  4146                           ;main.c: 248:    StartTimer(TMR_HELPDIS, 3000);
  4147  011444  0EB8               	movlw	184
  4148  011446  6EE6               	movwf	postinc1,c
  4149  011448  0E0B               	movlw	11
  4150  01144A  6EE6               	movwf	postinc1,c
  4151  01144C  0E09               	movlw	9
  4152  01144E  6EE6               	movwf	postinc1,c
  4153  011450  EC19  F0D6         	call	_StartTimer	;wreg free
  4154                           
  4155                           ;main.c: 250:    start_adc_scan();
  4156  011454  ECF0  F0D2         	call	_start_adc_scan	;wreg free
  4157                           
  4158                           ;main.c: 251:    start_switch_handler();
  4159  011458  EC43  F0DA         	call	_start_switch_handler	;wreg free
  4160                           
  4161                           ; BSR set to: 57
  4162                           ;main.c: 252:    WaitMs(1000);
  4163  01145C  0EE8               	movlw	232
  4164  01145E  6EE6               	movwf	postinc1,c
  4165  011460  0E03               	movlw	3
  4166  011462  6EE6               	movwf	postinc1,c
  4167  011464  EC0D  F0D7         	call	_WaitMs	;wreg free
  4168                           
  4169                           ;main.c: 257:    i_ror = 1;
  4170                           ;stkvar	_i_ror @ sp[(-13)+12]
  4171  011468  0EFF               	movlw	-1
  4172  01146A  6AE3               	clrf	plusw1,c
  4173  01146C  2AE3               	incf	plusw1,f,c
  4174  01146E                     l12644:
  4175                           
  4176                           ;main.c: 259:     calc_ror_data();
  4177  01146E  EC4D  F0C1         	call	_calc_ror_data	;wreg free
  4178                           
  4179                           ;main.c: 260:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4180  011472  0E00               	movlw	0
  4181  011474  6EE6               	movwf	postinc1,c
  4182  011476  0E04               	movlw	4
  4183  011478  6EE6               	movwf	postinc1,c
  4184  01147A  EC60  F0A7         	call	_conv_raw_result	;wreg free
  4185  01147E  0060  F0A3  FFE6   	movff	btemp,postinc1
  4186  011484  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4187  01148A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  4188  011490  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  4189  011496  0E0B               	movlw	low STR_8
  4190  011498  6EE6               	movwf	postinc1,c
  4191  01149A  0EFF               	movlw	high STR_8
  4192  01149C  6EE6               	movwf	postinc1,c
  4193  01149E  0E00               	movlw	0
  4194  0114A0  6EE6               	movwf	postinc1,c
  4195  0114A2  0E01               	movlw	1
  4196  0114A4  6EE6               	movwf	postinc1,c
  4197  0114A6  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4198  0114AA  0060  F0A3  FFE6   	movff	btemp,postinc1
  4199  0114B0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4200  0114B6  0E08               	movlw	8
  4201  0114B8  6EE6               	movwf	postinc1,c
  4202  0114BA  EC10  F0CA         	call	_sprintf	;wreg free
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;main.c: 261:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4206  0114BE  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4207  0114C4  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4208  0114CA  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4209  0114D0  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4210                           
  4211                           ;stkvar	_i_ror @ sp[(-17)+12]
  4212  0114D6  0EFB               	movlw	-5
  4213  0114D8  50E3               	movf	plusw1,w,c
  4214  0114DA  6EE6               	movwf	postinc1,c
  4215  0114DC  0E00               	movlw	0
  4216  0114DE  6EE6               	movwf	postinc1,c
  4217  0114E0  0E00               	movlw	0
  4218  0114E2  6EE6               	movwf	postinc1,c
  4219  0114E4  0E05               	movlw	5
  4220  0114E6  6EE6               	movwf	postinc1,c
  4221  0114E8  EC07  F0CC         	call	_spinners	;wreg free
  4222  0114EC  5028               	movf	btemp^0,w,c
  4223  0114EE  6EE6               	movwf	postinc1,c
  4224  0114F0  0E00               	movlw	0
  4225  0114F2  6EE6               	movwf	postinc1,c
  4226  0114F4  0E08               	movlw	low STR_9
  4227  0114F6  6EE6               	movwf	postinc1,c
  4228  0114F8  0EFD               	movlw	high STR_9
  4229  0114FA  6EE6               	movwf	postinc1,c
  4230  0114FC  0E00               	movlw	0
  4231  0114FE  6EE6               	movwf	postinc1,c
  4232  011500  0E02               	movlw	2
  4233  011502  6EE6               	movwf	postinc1,c
  4234  011504  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4235  011508  0060  F0A3  FFE6   	movff	btemp,postinc1
  4236  01150E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4237  011514  0E0C               	movlw	12
  4238  011516  6EE6               	movwf	postinc1,c
  4239  011518  EC10  F0CA         	call	_sprintf	;wreg free
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;main.c: 262:     update_lcd(0);
  4243  01151C  0E00               	movlw	0
  4244  01151E  6EE6               	movwf	postinc1,c
  4245  011520  EC01  F0C9         	call	_update_lcd	;wreg free
  4246                           
  4247                           ;main.c: 263:     WaitMs(2000);
  4248  011524  0ED0               	movlw	208
  4249  011526  6EE6               	movwf	postinc1,c
  4250  011528  0E07               	movlw	7
  4251  01152A  6EE6               	movwf	postinc1,c
  4252  01152C  EC0D  F0D7         	call	_WaitMs	;wreg free
  4253                           
  4254                           ;main.c: 264:     clear_adc_scan();
  4255  011530  EC87  F0DB         	call	_clear_adc_scan	;wreg free
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;main.c: 265:     start_adc_scan();
  4259  011534  ECF0  F0D2         	call	_start_adc_scan	;wreg free
  4260                           
  4261                           ;main.c: 266:     WaitMs(500);
  4262  011538  0EF4               	movlw	244
  4263  01153A  6EE6               	movwf	postinc1,c
  4264  01153C  0E01               	movlw	1
  4265  01153E  6EE6               	movwf	postinc1,c
  4266  011540  EC0D  F0D7         	call	_WaitMs	;wreg free
  4267                           
  4268                           ;main.c: 267:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4269                           ;stkvar	_i_ror @ sp[(-13)+12]
  4270  011544  0EFF               	movlw	-1
  4271  011546  006F FF8C  F033    	movff	plusw1,btemp+11
  4272  01154C  2A33               	incf	(btemp+11)^0,f,c
  4273  01154E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  4274  011554  0633               	decf	(btemp+11)^0,f,c
  4275  011556  0E1E               	movlw	30
  4276  011558  6033               	cpfslt	(btemp+11)^0,c
  4277  01155A  D018               	goto	u12150
  4278  01155C  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4279  011562  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4280  011568  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4281  01156E  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4282  011574  0E42               	movlw	66
  4283  011576  6EE6               	movwf	postinc1,c
  4284  011578  0E60               	movlw	96
  4285  01157A  6EE6               	movwf	postinc1,c
  4286  01157C  0E65               	movlw	101
  4287  01157E  6EE6               	movwf	postinc1,c
  4288  011580  0E3C               	movlw	60
  4289  011582  6EE6               	movwf	postinc1,c
  4290  011584  EC78  F0C3         	call	___flge	;wreg free
  4291  011588  A028               	btfss	btemp& (0+255),0,c
  4292  01158A  D771               	goto	l12644
  4293  01158C                     u12150:
  4294                           
  4295                           ;main.c: 269:    static_soc();
  4296  01158C  ECB4  F0D9         	call	_static_soc	;wreg free
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;main.c: 270:    init_bsoc();
  4300  011590  ECC0  F0C2         	call	_init_bsoc	;wreg free
  4301                           
  4302                           ;main.c: 271:    set_load_relay_one(0);
  4303  011594  0E00               	movlw	0
  4304  011596  6EE6               	movwf	postinc1,c
  4305  011598  EC29  F0DB         	call	_set_load_relay_one	;wreg free
  4306                           
  4307                           ;main.c: 272:    set_load_relay_two(0);
  4308  01159C  0E00               	movlw	0
  4309  01159E  6EE6               	movwf	postinc1,c
  4310  0115A0  EC21  F0DB         	call	_set_load_relay_two	;wreg free
  4311                           
  4312                           ;main.c: 273:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4313  0115A4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  4314  0115AA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  4315  0115B0  0E35               	movlw	low STR_10
  4316  0115B2  6EE6               	movwf	postinc1,c
  4317  0115B4  0EFD               	movlw	high STR_10
  4318  0115B6  6EE6               	movwf	postinc1,c
  4319  0115B8  0E00               	movlw	0
  4320  0115BA  6EE6               	movwf	postinc1,c
  4321  0115BC  0E00               	movlw	0
  4322  0115BE  6EE6               	movwf	postinc1,c
  4323  0115C0  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4324  0115C4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4325  0115CA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4326  0115D0  0E06               	movlw	6
  4327  0115D2  6EE6               	movwf	postinc1,c
  4328  0115D4  EC10  F0CA         	call	_sprintf	;wreg free
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;main.c: 274:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4332  0115D8  0060  F633  FFE6   	movff	_C+140,postinc1
  4333  0115DE  0060  F637  FFE6   	movff	_C+141,postinc1
  4334  0115E4  0060  F63B  FFE6   	movff	_C+142,postinc1
  4335  0115EA  0060  F63F  FFE6   	movff	_C+143,postinc1
  4336  0115F0  0E4B               	movlw	low STR_11
  4337  0115F2  6EE6               	movwf	postinc1,c
  4338  0115F4  0EFD               	movlw	high STR_11
  4339  0115F6  6EE6               	movwf	postinc1,c
  4340  0115F8  0E00               	movlw	0
  4341  0115FA  6EE6               	movwf	postinc1,c
  4342  0115FC  0E01               	movlw	1
  4343  0115FE  6EE6               	movwf	postinc1,c
  4344  011600  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4345  011604  0060  F0A3  FFE6   	movff	btemp,postinc1
  4346  01160A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4347  011610  0E08               	movlw	8
  4348  011612  6EE6               	movwf	postinc1,c
  4349  011614  EC10  F0CA         	call	_sprintf	;wreg free
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;main.c: 275:    update_lcd(0);
  4353  011618  0E00               	movlw	0
  4354  01161A  6EE6               	movwf	postinc1,c
  4355  01161C  EC01  F0C9         	call	_update_lcd	;wreg free
  4356                           
  4357                           ;main.c: 276:    WaitMs(2000);
  4358  011620  0ED0               	movlw	208
  4359  011622  6EE6               	movwf	postinc1,c
  4360  011624  0E07               	movlw	7
  4361  011626  6EE6               	movwf	postinc1,c
  4362  011628  EC0D  F0D7         	call	_WaitMs	;wreg free
  4363                           
  4364                           ;main.c: 277:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4365  01162C  0E2E               	movlw	low STR_12
  4366  01162E  6EE6               	movwf	postinc1,c
  4367  011630  0EFF               	movlw	high STR_12
  4368  011632  6EE6               	movwf	postinc1,c
  4369  011634  0E00               	movlw	0
  4370  011636  6EE6               	movwf	postinc1,c
  4371  011638  0E00               	movlw	0
  4372  01163A  6EE6               	movwf	postinc1,c
  4373  01163C  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4374  011640  0060  F0A3  FFE6   	movff	btemp,postinc1
  4375  011646  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4376  01164C  0E04               	movlw	4
  4377  01164E  6EE6               	movwf	postinc1,c
  4378  011650  EC10  F0CA         	call	_sprintf	;wreg free
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;main.c: 278:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4382  011654  0E3F               	movlw	low STR_13
  4383  011656  6EE6               	movwf	postinc1,c
  4384  011658  0EFF               	movlw	high STR_13
  4385  01165A  6EE6               	movwf	postinc1,c
  4386  01165C  0E00               	movlw	0
  4387  01165E  6EE6               	movwf	postinc1,c
  4388  011660  0E01               	movlw	1
  4389  011662  6EE6               	movwf	postinc1,c
  4390  011664  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4391  011668  0060  F0A3  FFE6   	movff	btemp,postinc1
  4392  01166E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4393  011674  0E04               	movlw	4
  4394  011676  6EE6               	movwf	postinc1,c
  4395  011678  EC10  F0CA         	call	_sprintf	;wreg free
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;main.c: 279:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4399  01167C  0E72               	movlw	low STR_14
  4400  01167E  6EE6               	movwf	postinc1,c
  4401  011680  0EFF               	movlw	high STR_14
  4402  011682  6EE6               	movwf	postinc1,c
  4403  011684  0E00               	movlw	0
  4404  011686  6EE6               	movwf	postinc1,c
  4405  011688  0E02               	movlw	2
  4406  01168A  6EE6               	movwf	postinc1,c
  4407  01168C  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4408  011690  0060  F0A3  FFE6   	movff	btemp,postinc1
  4409  011696  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4410  01169C  0E04               	movlw	4
  4411  01169E  6EE6               	movwf	postinc1,c
  4412  0116A0  EC10  F0CA         	call	_sprintf	;wreg free
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;main.c: 280:    update_lcd(0);
  4416  0116A4  0E00               	movlw	0
  4417  0116A6  6EE6               	movwf	postinc1,c
  4418  0116A8  EC01  F0C9         	call	_update_lcd	;wreg free
  4419                           
  4420                           ;main.c: 281:    uint16_t i_esr = 1;
  4421  0116AC  0E01               	movlw	1
  4422  0116AE  6E32               	movwf	(btemp+10)^0,c
  4423  0116B0  0E00               	movlw	0
  4424  0116B2  6E33               	movwf	(btemp+11)^0,c
  4425                           
  4426                           ;stkvar	_i_esr @ sp[(-13)+4]
  4427  0116B4  0EF7               	movlw	-9
  4428  0116B6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
  4429  0116BC  0EF8               	movlw	-8
  4430  0116BE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  4431                           
  4432                           ;main.c: 283:    float esr_temp;;main.c: 284:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4433  0116C4  D06D               	goto	l12704
  4434  0116C6                     l12692:
  4435                           
  4436                           ;main.c: 285:     WaitMs(110);
  4437  0116C6  0E6E               	movlw	110
  4438  0116C8  6EE6               	movwf	postinc1,c
  4439  0116CA  0E00               	movlw	0
  4440  0116CC  6EE6               	movwf	postinc1,c
  4441  0116CE  EC0D  F0D7         	call	_WaitMs	;wreg free
  4442                           
  4443                           ;main.c: 286:     shape = (uint8_t) fabsf(esr_temp);
  4444                           ;stkvar	_esr_temp @ sp[(-13)+0]
  4445  0116D2  0EF3               	movlw	-13
  4446  0116D4  006F FF8F FFE6     	movff	plusw1,postinc1
  4447  0116DA  006F FF8F FFE6     	movff	plusw1,postinc1
  4448  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  4449  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  4450  0116EC  EC01  F0CE         	call	_fabsf	;wreg free
  4451  0116F0  0060  F0A3  FFE6   	movff	btemp,postinc1
  4452  0116F6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4453  0116FC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  4454  011702  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  4455  011708  EC07  F0C2         	call	___fltol	;wreg free
  4456  01170C  0060  F0A0  F033   	movff	btemp,btemp+11
  4457                           
  4458                           ;stkvar	_shape @ sp[(-13)+6]
  4459  011712  0EF9               	movlw	-7
  4460  011714  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  4461                           
  4462                           ;main.c: 287:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4463  01171A  0E00               	movlw	0
  4464  01171C  6EE6               	movwf	postinc1,c
  4465                           
  4466                           ;stkvar	_shape @ sp[(-14)+6]
  4467  01171E  0EF8               	movlw	-8
  4468  011720  50E3               	movf	plusw1,w,c
  4469  011722  6EE6               	movwf	postinc1,c
  4470  011724  EC07  F0CC         	call	_spinners	;wreg free
  4471  011728  5028               	movf	btemp^0,w,c
  4472  01172A  6EE6               	movwf	postinc1,c
  4473  01172C  0E00               	movlw	0
  4474  01172E  6EE6               	movwf	postinc1,c
  4475  011730  0E00               	movlw	0
  4476  011732  6EE6               	movwf	postinc1,c
  4477  011734  0E00               	movlw	0
  4478  011736  6EE6               	movwf	postinc1,c
  4479  011738  EC07  F0CC         	call	_spinners	;wreg free
  4480  01173C  5028               	movf	btemp^0,w,c
  4481  01173E  6EE6               	movwf	postinc1,c
  4482  011740  0E00               	movlw	0
  4483  011742  6EE6               	movwf	postinc1,c
  4484  011744  0E61               	movlw	low STR_15
  4485  011746  6EE6               	movwf	postinc1,c
  4486  011748  0EFD               	movlw	high STR_15
  4487  01174A  6EE6               	movwf	postinc1,c
  4488  01174C  0E00               	movlw	0
  4489  01174E  6EE6               	movwf	postinc1,c
  4490  011750  0E02               	movlw	2
  4491  011752  6EE6               	movwf	postinc1,c
  4492  011754  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4493  011758  0060  F0A3  FFE6   	movff	btemp,postinc1
  4494  01175E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4495  011764  0E08               	movlw	8
  4496  011766  6EE6               	movwf	postinc1,c
  4497  011768  EC10  F0CA         	call	_sprintf	;wreg free
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;main.c: 288:     update_lcd(0);
  4501  01176C  0E00               	movlw	0
  4502  01176E  6EE6               	movwf	postinc1,c
  4503  011770  EC01  F0C9         	call	_update_lcd	;wreg free
  4504                           
  4505                           ;main.c: 290:     if (i_esr++ > 512)
  4506                           ;stkvar	_i_esr @ sp[(-13)+4]
  4507  011774  50E1               	movf	fsr1l,w,c
  4508  011776  0FF7               	addlw	-9
  4509  011778  6ED9               	movwf	fsr2l,c
  4510  01177A  50E2               	movf	fsr1h,w,c
  4511  01177C  6EDA               	movwf	fsr2h,c
  4512  01177E  0EFF               	movlw	255
  4513  011780  22DA               	addwfc	fsr2h,f,c
  4514  011782  006F FF7C  F032    	movff	indf2,btemp+10
  4515  011788  0E01               	movlw	1
  4516  01178A  26DE               	addwf	postinc2,f,c
  4517  01178C  006F FF7C  F033    	movff	indf2,btemp+11
  4518  011792  0E00               	movlw	0
  4519  011794  22DD               	addwfc	postdec2,f,c
  4520  011796  0432               	decf	(btemp+10)^0,w,c
  4521  011798  0E02               	movlw	2
  4522  01179A  5833               	subwfb	(btemp+11)^0,w,c
  4523  01179C  B0D8               	btfsc	status,0,c
  4524  01179E  D017               	goto	u12170
  4525  0117A0                     l12704:
  4526                           
  4527                           ;main.c: 284:    while ((esr_temp = esr_check(0)) < 0.0) {
  4528  0117A0  0E00               	movlw	0
  4529  0117A2  6EE6               	movwf	postinc1,c
  4530  0117A4  EC70  F0B4         	call	_esr_check	;wreg free
  4531                           
  4532                           ;stkvar	_esr_temp @ sp[(-13)+0]
  4533  0117A8  0EF3               	movlw	-13
  4534  0117AA  0060  F0A3  FFE3   	movff	btemp,plusw1
  4535  0117B0  0EF4               	movlw	-12
  4536  0117B2  0060  F0A7  FFE3   	movff	btemp+1,plusw1
  4537  0117B8  0EF5               	movlw	-11
  4538  0117BA  0060  F0AB  FFE3   	movff	btemp+2,plusw1
  4539  0117C0  0EF6               	movlw	-10
  4540  0117C2  0060  F0AF  FFE3   	movff	btemp+3,plusw1
  4541  0117C8  0EF6               	movlw	-10
  4542  0117CA  BEE3               	btfsc	plusw1,7,c
  4543  0117CC  D77C               	goto	l12692
  4544  0117CE                     u12170:
  4545                           
  4546                           ;main.c: 293:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4547  0117CE  0060  F613  FFE6   	movff	_C+132,postinc1
  4548  0117D4  0060  F617  FFE6   	movff	_C+133,postinc1
  4549  0117DA  0060  F61B  FFE6   	movff	_C+134,postinc1
  4550  0117E0  0060  F61F  FFE6   	movff	_C+135,postinc1
  4551  0117E6  0E1F               	movlw	low STR_16
  4552  0117E8  6EE6               	movwf	postinc1,c
  4553  0117EA  0EFD               	movlw	high STR_16
  4554  0117EC  6EE6               	movwf	postinc1,c
  4555  0117EE  0E00               	movlw	0
  4556  0117F0  6EE6               	movwf	postinc1,c
  4557  0117F2  0E00               	movlw	0
  4558  0117F4  6EE6               	movwf	postinc1,c
  4559  0117F6  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4560  0117FA  0060  F0A3  FFE6   	movff	btemp,postinc1
  4561  011800  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4562  011806  0E08               	movlw	8
  4563  011808  6EE6               	movwf	postinc1,c
  4564  01180A  EC10  F0CA         	call	_sprintf	;wreg free
  4565                           
  4566                           ;main.c: 294:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4567  01180E  0060  F78F  FFE6   	movff	_C+227,postinc1
  4568  011814  0060  F793  FFE6   	movff	_C+228,postinc1
  4569  01181A  0060  F797  FFE6   	movff	_C+229,postinc1
  4570  011820  0060  F79B  FFE6   	movff	_C+230,postinc1
  4571  011826  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4572  01182C  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4573  011832  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4574  011838  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4575  01183E  0EBC               	movlw	low STR_17
  4576  011840  6EE6               	movwf	postinc1,c
  4577  011842  0EFC               	movlw	high STR_17
  4578  011844  6EE6               	movwf	postinc1,c
  4579  011846  0E00               	movlw	0
  4580  011848  6EE6               	movwf	postinc1,c
  4581  01184A  0E01               	movlw	1
  4582  01184C  6EE6               	movwf	postinc1,c
  4583  01184E  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4584  011852  0060  F0A3  FFE6   	movff	btemp,postinc1
  4585  011858  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4586  01185E  0E0C               	movlw	12
  4587  011860  6EE6               	movwf	postinc1,c
  4588  011862  EC10  F0CA         	call	_sprintf	;wreg free
  4589                           
  4590                           ;main.c: 295:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4591  011866  0060  F79F  FFE6   	movff	_C+231,postinc1
  4592  01186C  0060  F7A3  FFE6   	movff	_C+232,postinc1
  4593  011872  0060  F7A7  FFE6   	movff	_C+233,postinc1
  4594  011878  0060  F7AB  FFE6   	movff	_C+234,postinc1
  4595  01187E  0060  F7CF  FFE6   	movff	_C+243,postinc1
  4596  011884  0060  F7D3  FFE6   	movff	_C+244,postinc1
  4597  01188A  0060  F7D7  FFE6   	movff	_C+245,postinc1
  4598  011890  0060  F7DB  FFE6   	movff	_C+246,postinc1
  4599  011896  0ED6               	movlw	low STR_18
  4600  011898  6EE6               	movwf	postinc1,c
  4601  01189A  0EFC               	movlw	high STR_18
  4602  01189C  6EE6               	movwf	postinc1,c
  4603  01189E  0E00               	movlw	0
  4604  0118A0  6EE6               	movwf	postinc1,c
  4605  0118A2  0E02               	movlw	2
  4606  0118A4  6EE6               	movwf	postinc1,c
  4607  0118A6  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4608  0118AA  0060  F0A3  FFE6   	movff	btemp,postinc1
  4609  0118B0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4610  0118B6  0E0C               	movlw	12
  4611  0118B8  6EE6               	movwf	postinc1,c
  4612  0118BA  EC10  F0CA         	call	_sprintf	;wreg free
  4613                           
  4614                           ;main.c: 296:    update_lcd(0);
  4615  0118BE  0E00               	movlw	0
  4616  0118C0  6EE6               	movwf	postinc1,c
  4617  0118C2  EC01  F0C9         	call	_update_lcd	;wreg free
  4618                           
  4619                           ;main.c: 297:    WaitMs(5000);
  4620  0118C6  0E88               	movlw	136
  4621  0118C8  6EE6               	movwf	postinc1,c
  4622  0118CA  0E13               	movlw	19
  4623  0118CC  6EE6               	movwf	postinc1,c
  4624  0118CE  EC0D  F0D7         	call	_WaitMs	;wreg free
  4625                           
  4626                           ;main.c: 298:    break;
  4627  0118D2  D01C               	goto	l12714
  4628  0118D4                     l1338:
  4629                           
  4630                           ; BSR set to: 2
  4631                           ;main.c: 304:    P.SYSTEM_STABLE = 1;
  4632  0118D4  0100               	movlb	0	; () banked
  4633  0118D6  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4634                           
  4635                           ;main.c: 305:    break;
  4636  0118D8  D019               	goto	l12714
  4637  0118DA                     l1340:
  4638                           
  4639                           ; BSR set to: 2
  4640                           ;main.c: 308:    V.ui_state = UI_STATE_INIT;
  4641  0118DA  6B00               	clrf	_V& (0+255),b	;volatile
  4642                           
  4643                           ;main.c: 309:    break;
  4644  0118DC  D017               	goto	l12714
  4645  0118DE                     l12712:
  4646  0118DE  0102               	movlb	2	; () banked
  4647  0118E0  5100               	movf	_V& (0+255),w,b	;volatile
  4648  0118E2  6E32               	movwf	(btemp+10)^0,c
  4649  0118E4  6A33               	clrf	(btemp+11)^0,c
  4650                           
  4651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4652                           ; Switch size 1, requested type "simple"
  4653                           ; Number of cases is 1, Range of values is 0 to 0
  4654                           ; switch strategies available:
  4655                           ; Name         Instructions Cycles
  4656                           ; simple_byte            4     3 (average)
  4657                           ;	Chosen strategy is simple_byte
  4658  0118E6  5033               	movf	(btemp+11)^0,w,c
  4659  0118E8  0A00               	xorlw	0	; case 0
  4660  0118EA  A4D8               	btfss	status,2,c
  4661  0118EC  D7F6               	goto	l1340
  4662                           
  4663                           ; BSR set to: 2
  4664                           ; Switch size 1, requested type "simple"
  4665                           ; Number of cases is 5, Range of values is 0 to 5
  4666                           ; switch strategies available:
  4667                           ; Name         Instructions Cycles
  4668                           ; simple_byte           16     9 (average)
  4669                           ;	Chosen strategy is simple_byte
  4670  0118EE  5032               	movf	(btemp+10)^0,w,c
  4671  0118F0  0A00               	xorlw	0	; case 0
  4672  0118F2  B4D8               	btfsc	status,2,c
  4673  0118F4  D4E3               	goto	l12594
  4674  0118F6  0A01               	xorlw	1	; case 1
  4675  0118F8  B4D8               	btfsc	status,2,c
  4676  0118FA  D008               	goto	l12714
  4677  0118FC  0A02               	xorlw	2	; case 3
  4678  0118FE  B4D8               	btfsc	status,2,c
  4679  011900  D005               	goto	l12714
  4680  011902  0A07               	xorlw	7	; case 4
  4681  011904  B4D8               	btfsc	status,2,c
  4682  011906  D7E6               	goto	l1338
  4683  011908  0A01               	xorlw	1	; case 5
  4684  01190A  D7E7               	goto	l1340
  4685  01190C                     l12714:
  4686                           
  4687                           ;main.c: 312:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4688  01190C  0E01               	movlw	1
  4689  01190E  6EE6               	movwf	postinc1,c
  4690  011910  EC9B  F0D8         	call	_TimerDone	;wreg free
  4691  011914  5028               	movf	btemp^0,w,c
  4692  011916  B4D8               	btfsc	status,2,c
  4693  011918  D013               	goto	l12726
  4694  01191A  EC77  F0DB         	call	_check_adc_scan	;wreg free
  4695  01191E  5028               	movf	btemp^0,w,c
  4696  011920  B4D8               	btfsc	status,2,c
  4697  011922  D00E               	goto	l12726
  4698                           
  4699                           ;main.c: 316:    convert_adc_data();
  4700  011924  ECA5  F0CD         	call	_convert_adc_data	;wreg free
  4701                           
  4702                           ;main.c: 320:    clear_adc_scan();
  4703  011928  EC87  F0DB         	call	_clear_adc_scan	;wreg free
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;main.c: 321:    start_adc_scan();
  4707  01192C  ECF0  F0D2         	call	_start_adc_scan	;wreg free
  4708                           
  4709                           ;main.c: 322:    StartTimer(TMR_ADC, 200);
  4710  011930  0EC8               	movlw	200
  4711  011932  6EE6               	movwf	postinc1,c
  4712  011934  0E00               	movlw	0
  4713  011936  6EE6               	movwf	postinc1,c
  4714  011938  0E01               	movlw	1
  4715  01193A  6EE6               	movwf	postinc1,c
  4716  01193C  EC19  F0D6         	call	_StartTimer	;wreg free
  4717  011940                     l12726:
  4718                           
  4719                           ;main.c: 329:   if (TimerDone(TMR_DISPLAY)) {
  4720                           
  4721                           ;main.c: 325:   if (V.ticks) {
  4722  011940  0E0A               	movlw	10
  4723  011942  6EE6               	movwf	postinc1,c
  4724  011944  EC9B  F0D8         	call	_TimerDone	;wreg free
  4725  011948  5028               	movf	btemp^0,w,c
  4726  01194A  B4D8               	btfsc	status,2,c
  4727  01194C  EFAE  F090         	goto	l12780
  4728                           
  4729                           ;main.c: 330:    if (TimerDone(TMR_HELPDIS)) {
  4730  011950  0E09               	movlw	9
  4731  011952  6EE6               	movwf	postinc1,c
  4732  011954  EC9B  F0D8         	call	_TimerDone	;wreg free
  4733  011958  5028               	movf	btemp^0,w,c
  4734  01195A  B4D8               	btfsc	status,2,c
  4735  01195C  D004               	goto	l12734
  4736                           
  4737                           ;main.c: 331:     set_display_info(DIS_STR);
  4738  01195E  0E00               	movlw	0
  4739  011960  6EE6               	movwf	postinc1,c
  4740  011962  EC71  F0DA         	call	_set_display_info	;wreg free
  4741  011966                     l12734:
  4742                           
  4743                           ;main.c: 333:    calc_model_data();
  4744  011966  ECD3  F0AD         	call	_calc_model_data	;wreg free
  4745                           
  4746                           ; BSR set to: 1
  4747                           ;main.c: 340:     hid_display(&H);
  4748                           
  4749                           ;main.c: 335:    if (0) {
  4750  01196A  0EF5               	movlw	_H& (0+255)
  4751  01196C  6EE6               	movwf	postinc1,c
  4752  01196E  EC95  F0CA         	call	_hid_display	;wreg free
  4753                           
  4754                           ;main.c: 341:     switch (H.hid_display) {
  4755  011972  D3A4               	goto	l12760
  4756  011974                     l1348:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;main.c: 343:      V.calib = 0;
  4760  011974  0102               	movlb	2	; () banked
  4761  011976  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4762                           
  4763                           ; BSR set to: 2
  4764                           ;main.c: 344:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  4765  011978  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4766  01197E  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4767  011984  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4768  01198A  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4769  011990  0E99               	movlw	low STR_22
  4770  011992  6EE6               	movwf	postinc1,c
  4771  011994  0EFE               	movlw	high STR_22
  4772  011996  6EE6               	movwf	postinc1,c
  4773  011998  0E00               	movlw	0
  4774  01199A  6EE6               	movwf	postinc1,c
  4775  01199C  0E00               	movlw	0
  4776  01199E  6EE6               	movwf	postinc1,c
  4777  0119A0  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4778  0119A4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4779  0119AA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4780  0119B0  0E08               	movlw	8
  4781  0119B2  6EE6               	movwf	postinc1,c
  4782  0119B4  EC10  F0CA         	call	_sprintf	;wreg free
  4783                           
  4784                           ;main.c: 345:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4785  0119B8  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4786  0119BE  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4787  0119C4  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4788  0119CA  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4789  0119D0  0EBF               	movlw	low STR_23
  4790  0119D2  6EE6               	movwf	postinc1,c
  4791  0119D4  0EFE               	movlw	high STR_23
  4792  0119D6  6EE6               	movwf	postinc1,c
  4793  0119D8  0E00               	movlw	0
  4794  0119DA  6EE6               	movwf	postinc1,c
  4795  0119DC  0E01               	movlw	1
  4796  0119DE  6EE6               	movwf	postinc1,c
  4797  0119E0  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4798  0119E4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4799  0119EA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4800  0119F0  0E08               	movlw	8
  4801  0119F2  6EE6               	movwf	postinc1,c
  4802  0119F4  EC10  F0CA         	call	_sprintf	;wreg free
  4803                           
  4804                           ;main.c: 346:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4805  0119F8  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4806  0119FE  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4807  011A04  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4808  011A0A  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4809  011A10  0EAC               	movlw	low STR_24
  4810  011A12  6EE6               	movwf	postinc1,c
  4811  011A14  0EFE               	movlw	high STR_24
  4812  011A16  6EE6               	movwf	postinc1,c
  4813  011A18  0E00               	movlw	0
  4814  011A1A  6EE6               	movwf	postinc1,c
  4815  011A1C  0E02               	movlw	2
  4816  011A1E  6EE6               	movwf	postinc1,c
  4817  011A20  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4818  011A24  0060  F0A3  FFE6   	movff	btemp,postinc1
  4819  011A2A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4820  011A30  0E08               	movlw	8
  4821  011A32  6EE6               	movwf	postinc1,c
  4822  011A34  EC10  F0CA         	call	_sprintf	;wreg free
  4823                           
  4824                           ;main.c: 348:      sprintf(get_vterm_ptr(0, 1), "PV   WH %3.2f     ", C.pvkw);
  4825  011A38  0060  F683  FFE6   	movff	_C+160,postinc1
  4826  011A3E  0060  F687  FFE6   	movff	_C+161,postinc1
  4827  011A44  0060  F68B  FFE6   	movff	_C+162,postinc1
  4828  011A4A  0060  F68F  FFE6   	movff	_C+163,postinc1
  4829  011A50  0E60               	movlw	low STR_25
  4830  011A52  6EE6               	movwf	postinc1,c
  4831  011A54  0EFE               	movlw	high STR_25
  4832  011A56  6EE6               	movwf	postinc1,c
  4833  011A58  0E01               	movlw	1
  4834  011A5A  6EE6               	movwf	postinc1,c
  4835  011A5C  0E00               	movlw	0
  4836  011A5E  6EE6               	movwf	postinc1,c
  4837  011A60  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4838  011A64  0060  F0A3  FFE6   	movff	btemp,postinc1
  4839  011A6A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4840  011A70  0E08               	movlw	8
  4841  011A72  6EE6               	movwf	postinc1,c
  4842  011A74  EC10  F0CA         	call	_sprintf	;wreg free
  4843                           
  4844                           ;main.c: 349:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4845  011A78  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4846  011A7E  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4847  011A84  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4848  011A8A  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4849  011A90  0E86               	movlw	low STR_26
  4850  011A92  6EE6               	movwf	postinc1,c
  4851  011A94  0EFE               	movlw	high STR_26
  4852  011A96  6EE6               	movwf	postinc1,c
  4853  011A98  0E01               	movlw	1
  4854  011A9A  6EE6               	movwf	postinc1,c
  4855  011A9C  0E01               	movlw	1
  4856  011A9E  6EE6               	movwf	postinc1,c
  4857  011AA0  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4858  011AA4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4859  011AAA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4860  011AB0  0E08               	movlw	8
  4861  011AB2  6EE6               	movwf	postinc1,c
  4862  011AB4  EC10  F0CA         	call	_sprintf	;wreg free
  4863                           
  4864                           ;main.c: 350:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4865  011AB8  0060  F693  FFE6   	movff	_C+164,postinc1
  4866  011ABE  0060  F697  FFE6   	movff	_C+165,postinc1
  4867  011AC4  0060  F69B  FFE6   	movff	_C+166,postinc1
  4868  011ACA  0060  F69F  FFE6   	movff	_C+167,postinc1
  4869  011AD0  0E73               	movlw	low STR_27
  4870  011AD2  6EE6               	movwf	postinc1,c
  4871  011AD4  0EFE               	movlw	high STR_27
  4872  011AD6  6EE6               	movwf	postinc1,c
  4873  011AD8  0E01               	movlw	1
  4874  011ADA  6EE6               	movwf	postinc1,c
  4875  011ADC  0E02               	movlw	2
  4876  011ADE  6EE6               	movwf	postinc1,c
  4877  011AE0  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4878  011AE4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4879  011AEA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4880  011AF0  0E08               	movlw	8
  4881  011AF2  6EE6               	movwf	postinc1,c
  4882  011AF4  EC10  F0CA         	call	_sprintf	;wreg free
  4883                           
  4884                           ;main.c: 351:      break;
  4885  011AF8  D2F6               	goto	l12762
  4886  011AFA                     l1350:
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;main.c: 353:      V.calib = 0;
  4890  011AFA  0102               	movlb	2	; () banked
  4891  011AFC  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4892                           
  4893                           ; BSR set to: 2
  4894                           ;main.c: 354:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4895  011AFE  0060  F413  FFE6   	movff	_C+4,postinc1
  4896  011B04  0060  F417  FFE6   	movff	_C+5,postinc1
  4897  011B0A  0060  F41B  FFE6   	movff	_C+6,postinc1
  4898  011B10  0060  F41F  FFE6   	movff	_C+7,postinc1
  4899  011B16  0060  F453  FFE6   	movff	_C+20,postinc1
  4900  011B1C  0060  F457  FFE6   	movff	_C+21,postinc1
  4901  011B22  0060  F45B  FFE6   	movff	_C+22,postinc1
  4902  011B28  0060  F45F  FFE6   	movff	_C+23,postinc1
  4903  011B2E  0EF8               	movlw	low STR_28
  4904  011B30  6EE6               	movwf	postinc1,c
  4905  011B32  0EFE               	movlw	high STR_28
  4906  011B34  6EE6               	movwf	postinc1,c
  4907  011B36  0E00               	movlw	0
  4908  011B38  6EE6               	movwf	postinc1,c
  4909  011B3A  0E00               	movlw	0
  4910  011B3C  6EE6               	movwf	postinc1,c
  4911  011B3E  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4912  011B42  0060  F0A3  FFE6   	movff	btemp,postinc1
  4913  011B48  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4914  011B4E  0E0C               	movlw	12
  4915  011B50  6EE6               	movwf	postinc1,c
  4916  011B52  EC10  F0CA         	call	_sprintf	;wreg free
  4917                           
  4918                           ;main.c: 355:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4919  011B56  0060  F403  FFE6   	movff	_C,postinc1
  4920  011B5C  0060  F407  FFE6   	movff	_C+1,postinc1
  4921  011B62  0060  F40B  FFE6   	movff	_C+2,postinc1
  4922  011B68  0060  F40F  FFE6   	movff	_C+3,postinc1
  4923  011B6E  0060  F443  FFE6   	movff	_C+16,postinc1
  4924  011B74  0060  F447  FFE6   	movff	_C+17,postinc1
  4925  011B7A  0060  F44B  FFE6   	movff	_C+18,postinc1
  4926  011B80  0060  F44F  FFE6   	movff	_C+19,postinc1
  4927  011B86  0ED2               	movlw	low STR_29
  4928  011B88  6EE6               	movwf	postinc1,c
  4929  011B8A  0EFE               	movlw	high STR_29
  4930  011B8C  6EE6               	movwf	postinc1,c
  4931  011B8E  0E00               	movlw	0
  4932  011B90  6EE6               	movwf	postinc1,c
  4933  011B92  0E01               	movlw	1
  4934  011B94  6EE6               	movwf	postinc1,c
  4935  011B96  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4936  011B9A  0060  F0A3  FFE6   	movff	btemp,postinc1
  4937  011BA0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4938  011BA6  0E0C               	movlw	12
  4939  011BA8  6EE6               	movwf	postinc1,c
  4940  011BAA  EC10  F0CA         	call	_sprintf	;wreg free
  4941                           
  4942                           ;main.c: 356:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4943  011BAE  0060  F503  FFE6   	movff	_C+64,postinc1
  4944  011BB4  0060  F507  FFE6   	movff	_C+65,postinc1
  4945  011BBA  0060  F50B  FFE6   	movff	_C+66,postinc1
  4946  011BC0  0060  F50F  FFE6   	movff	_C+67,postinc1
  4947  011BC6  0060  F423  FFE6   	movff	_C+8,postinc1
  4948  011BCC  0060  F427  FFE6   	movff	_C+9,postinc1
  4949  011BD2  0060  F42B  FFE6   	movff	_C+10,postinc1
  4950  011BD8  0060  F42F  FFE6   	movff	_C+11,postinc1
  4951  011BDE  0EE5               	movlw	low STR_30
  4952  011BE0  6EE6               	movwf	postinc1,c
  4953  011BE2  0EFE               	movlw	high STR_30
  4954  011BE4  6EE6               	movwf	postinc1,c
  4955  011BE6  0E00               	movlw	0
  4956  011BE8  6EE6               	movwf	postinc1,c
  4957  011BEA  0E02               	movlw	2
  4958  011BEC  6EE6               	movwf	postinc1,c
  4959  011BEE  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4960  011BF2  0060  F0A3  FFE6   	movff	btemp,postinc1
  4961  011BF8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4962  011BFE  0E0C               	movlw	12
  4963  011C00  6EE6               	movwf	postinc1,c
  4964  011C02  EC10  F0CA         	call	_sprintf	;wreg free
  4965                           
  4966                           ;main.c: 358:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  4967  011C06  0060  F663  FFE6   	movff	_C+152,postinc1
  4968  011C0C  0060  F667  FFE6   	movff	_C+153,postinc1
  4969  011C12  0060  F66B  FFE6   	movff	_C+154,postinc1
  4970  011C18  0060  F66F  FFE6   	movff	_C+155,postinc1
  4971  011C1E  0E27               	movlw	low STR_31
  4972  011C20  6EE6               	movwf	postinc1,c
  4973  011C22  0EFE               	movlw	high STR_31
  4974  011C24  6EE6               	movwf	postinc1,c
  4975  011C26  0E01               	movlw	1
  4976  011C28  6EE6               	movwf	postinc1,c
  4977  011C2A  0E00               	movlw	0
  4978  011C2C  6EE6               	movwf	postinc1,c
  4979  011C2E  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  4980  011C32  0060  F0A3  FFE6   	movff	btemp,postinc1
  4981  011C38  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4982  011C3E  0E08               	movlw	8
  4983  011C40  6EE6               	movwf	postinc1,c
  4984  011C42  EC10  F0CA         	call	_sprintf	;wreg free
  4985                           
  4986                           ;main.c: 359:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  4987  011C46  0060  F673  FFE6   	movff	_C+156,postinc1
  4988  011C4C  0060  F677  FFE6   	movff	_C+157,postinc1
  4989  011C52  0060  F67B  FFE6   	movff	_C+158,postinc1
  4990  011C58  0060  F67F  FFE6   	movff	_C+159,postinc1
  4991  011C5E  0E3A               	movlw	low STR_32
  4992  011C60  6EE6               	movwf	postinc1,c
  4993  011C62  0EFE               	movlw	high STR_32
  4994  011C64  6EE6               	movwf	postinc1,c
  4995  011C66  0E01               	movlw	1
  4996  011C68  6EE6               	movwf	postinc1,c
  4997  011C6A  0E01               	movlw	1
  4998  011C6C  6EE6               	movwf	postinc1,c
  4999  011C6E  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  5000  011C72  0060  F0A3  FFE6   	movff	btemp,postinc1
  5001  011C78  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5002  011C7E  0E08               	movlw	8
  5003  011C80  6EE6               	movwf	postinc1,c
  5004  011C82  EC10  F0CA         	call	_sprintf	;wreg free
  5005                           
  5006                           ;main.c: 360:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5007  011C86  0060  F673  FFE6   	movff	_C+156,postinc1
  5008  011C8C  0060  F677  FFE6   	movff	_C+157,postinc1
  5009  011C92  0060  F67B  FFE6   	movff	_C+158,postinc1
  5010  011C98  0060  F67F  FFE6   	movff	_C+159,postinc1
  5011  011C9E  0060  F663  FFE6   	movff	_C+152,postinc1
  5012  011CA4  0060  F667  FFE6   	movff	_C+153,postinc1
  5013  011CAA  0060  F66B  FFE6   	movff	_C+154,postinc1
  5014  011CB0  0060  F66F  FFE6   	movff	_C+155,postinc1
  5015  011CB6  EC24  F09D         	call	___fladd	;wreg free
  5016  011CBA  0060  F0A3  FFE6   	movff	btemp,postinc1
  5017  011CC0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5018  011CC6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  5019  011CCC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  5020  011CD2  0E4D               	movlw	low STR_33
  5021  011CD4  6EE6               	movwf	postinc1,c
  5022  011CD6  0EFE               	movlw	high STR_33
  5023  011CD8  6EE6               	movwf	postinc1,c
  5024  011CDA  0E01               	movlw	1
  5025  011CDC  6EE6               	movwf	postinc1,c
  5026  011CDE  0E02               	movlw	2
  5027  011CE0  6EE6               	movwf	postinc1,c
  5028  011CE2  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  5029  011CE6  0060  F0A3  FFE6   	movff	btemp,postinc1
  5030  011CEC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5031  011CF2  0E08               	movlw	8
  5032  011CF4  6EE6               	movwf	postinc1,c
  5033  011CF6  EC10  F0CA         	call	_sprintf	;wreg free
  5034                           
  5035                           ;main.c: 361:      break;
  5036  011CFA  D1F5               	goto	l12762
  5037  011CFC                     l1351:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;main.c: 363:      V.calib = 0;
  5041  011CFC  0102               	movlb	2	; () banked
  5042  011CFE  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5043                           
  5044                           ; BSR set to: 2
  5045                           ;main.c: 364:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5046  011D00  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5047  011D06  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5048  011D0C  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5049  011D12  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5050  011D18  0E9E               	movlw	low STR_34
  5051  011D1A  6EE6               	movwf	postinc1,c
  5052  011D1C  0EFD               	movlw	high STR_34
  5053  011D1E  6EE6               	movwf	postinc1,c
  5054  011D20  0E00               	movlw	0
  5055  011D22  6EE6               	movwf	postinc1,c
  5056  011D24  0E00               	movlw	0
  5057  011D26  6EE6               	movwf	postinc1,c
  5058  011D28  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  5059  011D2C  0060  F0A3  FFE6   	movff	btemp,postinc1
  5060  011D32  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5061  011D38  0E08               	movlw	8
  5062  011D3A  6EE6               	movwf	postinc1,c
  5063  011D3C  EC10  F0CA         	call	_sprintf	;wreg free
  5064                           
  5065                           ;main.c: 365:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5066  011D40  0060  F643  FFE6   	movff	_C+144,postinc1
  5067  011D46  0060  F647  FFE6   	movff	_C+145,postinc1
  5068  011D4C  0060  F64B  FFE6   	movff	_C+146,postinc1
  5069  011D52  0060  F64F  FFE6   	movff	_C+147,postinc1
  5070  011D58  0060  F633  FFE6   	movff	_C+140,postinc1
  5071  011D5E  0060  F637  FFE6   	movff	_C+141,postinc1
  5072  011D64  0060  F63B  FFE6   	movff	_C+142,postinc1
  5073  011D6A  0060  F63F  FFE6   	movff	_C+143,postinc1
  5074  011D70  0EDA               	movlw	low STR_35
  5075  011D72  6EE6               	movwf	postinc1,c
  5076  011D74  0EFD               	movlw	high STR_35
  5077  011D76  6EE6               	movwf	postinc1,c
  5078  011D78  0E00               	movlw	0
  5079  011D7A  6EE6               	movwf	postinc1,c
  5080  011D7C  0E01               	movlw	1
  5081  011D7E  6EE6               	movwf	postinc1,c
  5082  011D80  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  5083  011D84  0060  F0A3  FFE6   	movff	btemp,postinc1
  5084  011D8A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5085  011D90  0E0C               	movlw	12
  5086  011D92  6EE6               	movwf	postinc1,c
  5087  011D94  EC10  F0CA         	call	_sprintf	;wreg free
  5088                           
  5089                           ;main.c: 366:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5090  011D98  0060  F6B3  FFE6   	movff	_C+172,postinc1
  5091  011D9E  0060  F6B7  FFE6   	movff	_C+173,postinc1
  5092  011DA4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  5093  011DAA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  5094  011DB0  0E00               	movlw	0
  5095  011DB2  6EE6               	movwf	postinc1,c
  5096  011DB4  0E05               	movlw	5
  5097  011DB6  6EE6               	movwf	postinc1,c
  5098  011DB8  EC07  F0CC         	call	_spinners	;wreg free
  5099  011DBC  5028               	movf	btemp^0,w,c
  5100  011DBE  6EE6               	movwf	postinc1,c
  5101  011DC0  0E00               	movlw	0
  5102  011DC2  6EE6               	movwf	postinc1,c
  5103  011DC4  0E8A               	movlw	low STR_36
  5104  011DC6  6EE6               	movwf	postinc1,c
  5105  011DC8  0EFD               	movlw	high STR_36
  5106  011DCA  6EE6               	movwf	postinc1,c
  5107  011DCC  0E00               	movlw	0
  5108  011DCE  6EE6               	movwf	postinc1,c
  5109  011DD0  0E02               	movlw	2
  5110  011DD2  6EE6               	movwf	postinc1,c
  5111  011DD4  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  5112  011DD8  0060  F0A3  FFE6   	movff	btemp,postinc1
  5113  011DDE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5114  011DE4  0E0A               	movlw	10
  5115  011DE6  6EE6               	movwf	postinc1,c
  5116  011DE8  EC10  F0CA         	call	_sprintf	;wreg free
  5117                           
  5118                           ;main.c: 368:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5119  011DEC  0060  F613  FFE6   	movff	_C+132,postinc1
  5120  011DF2  0060  F617  FFE6   	movff	_C+133,postinc1
  5121  011DF8  0060  F61B  FFE6   	movff	_C+134,postinc1
  5122  011DFE  0060  F61F  FFE6   	movff	_C+135,postinc1
  5123  011E04  0E76               	movlw	low STR_37
  5124  011E06  6EE6               	movwf	postinc1,c
  5125  011E08  0EFD               	movlw	high STR_37
  5126  011E0A  6EE6               	movwf	postinc1,c
  5127  011E0C  0E01               	movlw	1
  5128  011E0E  6EE6               	movwf	postinc1,c
  5129  011E10  0E00               	movlw	0
  5130  011E12  6EE6               	movwf	postinc1,c
  5131  011E14  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  5132  011E18  0060  F0A3  FFE6   	movff	btemp,postinc1
  5133  011E1E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5134  011E24  0E08               	movlw	8
  5135  011E26  6EE6               	movwf	postinc1,c
  5136  011E28  EC10  F0CA         	call	_sprintf	;wreg free
  5137                           
  5138                           ;main.c: 369:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5139  011E2C  0060  F78F  FFE6   	movff	_C+227,postinc1
  5140  011E32  0060  F793  FFE6   	movff	_C+228,postinc1
  5141  011E38  0060  F797  FFE6   	movff	_C+229,postinc1
  5142  011E3E  0060  F79B  FFE6   	movff	_C+230,postinc1
  5143  011E44  0060  F7BF  FFE6   	movff	_C+239,postinc1
  5144  011E4A  0060  F7C3  FFE6   	movff	_C+240,postinc1
  5145  011E50  0060  F7C7  FFE6   	movff	_C+241,postinc1
  5146  011E56  0060  F7CB  FFE6   	movff	_C+242,postinc1
  5147  011E5C  0EB2               	movlw	low STR_38
  5148  011E5E  6EE6               	movwf	postinc1,c
  5149  011E60  0EFD               	movlw	high STR_38
  5150  011E62  6EE6               	movwf	postinc1,c
  5151  011E64  0E01               	movlw	1
  5152  011E66  6EE6               	movwf	postinc1,c
  5153  011E68  0E01               	movlw	1
  5154  011E6A  6EE6               	movwf	postinc1,c
  5155  011E6C  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  5156  011E70  0060  F0A3  FFE6   	movff	btemp,postinc1
  5157  011E76  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5158  011E7C  0E0C               	movlw	12
  5159  011E7E  6EE6               	movwf	postinc1,c
  5160  011E80  EC10  F0CA         	call	_sprintf	;wreg free
  5161                           
  5162                           ;main.c: 370:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5163  011E84  0060  F79F  FFE6   	movff	_C+231,postinc1
  5164  011E8A  0060  F7A3  FFE6   	movff	_C+232,postinc1
  5165  011E90  0060  F7A7  FFE6   	movff	_C+233,postinc1
  5166  011E96  0060  F7AB  FFE6   	movff	_C+234,postinc1
  5167  011E9C  0060  F7CF  FFE6   	movff	_C+243,postinc1
  5168  011EA2  0060  F7D3  FFE6   	movff	_C+244,postinc1
  5169  011EA8  0060  F7D7  FFE6   	movff	_C+245,postinc1
  5170  011EAE  0060  F7DB  FFE6   	movff	_C+246,postinc1
  5171  011EB4  0EC6               	movlw	low STR_39
  5172  011EB6  6EE6               	movwf	postinc1,c
  5173  011EB8  0EFD               	movlw	high STR_39
  5174  011EBA  6EE6               	movwf	postinc1,c
  5175  011EBC  0E01               	movlw	1
  5176  011EBE  6EE6               	movwf	postinc1,c
  5177  011EC0  0E02               	movlw	2
  5178  011EC2  6EE6               	movwf	postinc1,c
  5179  011EC4  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  5180  011EC8  0060  F0A3  FFE6   	movff	btemp,postinc1
  5181  011ECE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5182  011ED4  0E0C               	movlw	12
  5183  011ED6  6EE6               	movwf	postinc1,c
  5184  011ED8  EC10  F0CA         	call	_sprintf	;wreg free
  5185                           
  5186                           ;main.c: 371:      break;
  5187  011EDC  D104               	goto	l12762
  5188  011EDE                     l12746:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;main.c: 373:      if (!V.calib) {
  5192  011EDE  0102               	movlb	2	; () banked
  5193  011EE0  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  5194  011EE2  A4D8               	btfss	status,2,c
  5195  011EE4  D02D               	goto	l12750
  5196                           
  5197                           ; BSR set to: 2
  5198                           ;main.c: 374:       lp_filter(0.0, i, -1);
  5199  011EE6  0EFF               	movlw	255
  5200  011EE8  6EE6               	movwf	postinc1,c
  5201                           
  5202                           ;stkvar	_i @ sp[(-14)+9]
  5203  011EEA  0EFB               	movlw	-5
  5204  011EEC  50E3               	movf	plusw1,w,c
  5205  011EEE  6EE6               	movwf	postinc1,c
  5206  011EF0  0E00               	movlw	0
  5207  011EF2  6EE6               	movwf	postinc1,c
  5208  011EF4  0E00               	movlw	0
  5209  011EF6  6EE6               	movwf	postinc1,c
  5210  011EF8  0E00               	movlw	0
  5211  011EFA  6EE6               	movwf	postinc1,c
  5212  011EFC  0E00               	movlw	0
  5213  011EFE  6EE6               	movwf	postinc1,c
  5214  011F00  ECE4  F0BE         	call	_lp_filter	;wreg free
  5215                           
  5216                           ;main.c: 375:       lp_filter(0.0, j, -1);
  5217  011F04  0EFF               	movlw	255
  5218  011F06  6EE6               	movwf	postinc1,c
  5219                           
  5220                           ;stkvar	_j @ sp[(-14)+8]
  5221  011F08  0EFA               	movlw	-6
  5222  011F0A  50E3               	movf	plusw1,w,c
  5223  011F0C  6EE6               	movwf	postinc1,c
  5224  011F0E  0E00               	movlw	0
  5225  011F10  6EE6               	movwf	postinc1,c
  5226  011F12  0E00               	movlw	0
  5227  011F14  6EE6               	movwf	postinc1,c
  5228  011F16  0E00               	movlw	0
  5229  011F18  6EE6               	movwf	postinc1,c
  5230  011F1A  0E00               	movlw	0
  5231  011F1C  6EE6               	movwf	postinc1,c
  5232  011F1E  ECE4  F0BE         	call	_lp_filter	;wreg free
  5233                           
  5234                           ;main.c: 376:       lp_filter(0.0, k, -1);
  5235  011F22  0EFF               	movlw	255
  5236  011F24  6EE6               	movwf	postinc1,c
  5237                           
  5238                           ;stkvar	_k @ sp[(-14)+7]
  5239  011F26  0EF9               	movlw	-7
  5240  011F28  50E3               	movf	plusw1,w,c
  5241  011F2A  6EE6               	movwf	postinc1,c
  5242  011F2C  0E00               	movlw	0
  5243  011F2E  6EE6               	movwf	postinc1,c
  5244  011F30  0E00               	movlw	0
  5245  011F32  6EE6               	movwf	postinc1,c
  5246  011F34  0E00               	movlw	0
  5247  011F36  6EE6               	movwf	postinc1,c
  5248  011F38  0E00               	movlw	0
  5249  011F3A  6EE6               	movwf	postinc1,c
  5250  011F3C  ECE4  F0BE         	call	_lp_filter	;wreg free
  5251  011F40                     l12750:
  5252                           
  5253                           ;main.c: 378:      V.calib = 1;
  5254  011F40  0E01               	movlw	1
  5255  011F42  0102               	movlb	2	; () banked
  5256  011F44  6FAC               	movwf	(_V+172)& (0+255),b	;volatile
  5257                           
  5258                           ; BSR set to: 2
  5259                           ;main.c: 379:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5260  011F46  0E02               	movlw	2
  5261  011F48  6EE6               	movwf	postinc1,c
  5262  011F4A  EC08  F0D8         	call	_get_switch	;wreg free
  5263  011F4E  5028               	movf	btemp^0,w,c
  5264  011F50  6EE6               	movwf	postinc1,c
  5265  011F52  0E00               	movlw	0
  5266  011F54  6EE6               	movwf	postinc1,c
  5267                           
  5268                           ;stkvar	_i @ sp[(-15)+9]
  5269  011F56  0EFA               	movlw	-6
  5270  011F58  50E3               	movf	plusw1,w,c
  5271  011F5A  0D04               	mullw	4
  5272  011F5C  0E00               	movlw	low _C
  5273  011F5E  24F3               	addwf	243,w,c
  5274  011F60  6ED9               	movwf	fsr2l,c
  5275  011F62  0E01               	movlw	high _C
  5276  011F64  20F4               	addwfc	prodh,w,c
  5277  011F66  6EDA               	movwf	fsr2h,c
  5278  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5279  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5280  011F74  006F FF7B FFE6     	movff	postinc2,postinc1
  5281  011F7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5282                           
  5283                           ;stkvar	_i @ sp[(-19)+9]
  5284  011F80  0EF6               	movlw	-10
  5285  011F82  50E3               	movf	plusw1,w,c
  5286  011F84  6EE6               	movwf	postinc1,c
  5287  011F86  EC80  F0DA         	call	_get_raw_result	;wreg free
  5288  011F8A  0060  F0A3  FFE6   	movff	btemp,postinc1
  5289  011F90  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5290  011F96  0E83               	movlw	low STR_19
  5291  011F98  6EE6               	movwf	postinc1,c
  5292  011F9A  0EFF               	movlw	high STR_19
  5293  011F9C  6EE6               	movwf	postinc1,c
  5294  011F9E  0E00               	movlw	0
  5295  011FA0  6EE6               	movwf	postinc1,c
  5296  011FA2  0E00               	movlw	0
  5297  011FA4  6EE6               	movwf	postinc1,c
  5298  011FA6  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  5299  011FAA  0060  F0A3  FFE6   	movff	btemp,postinc1
  5300  011FB0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5301  011FB6  0E0C               	movlw	12
  5302  011FB8  6EE6               	movwf	postinc1,c
  5303  011FBA  EC10  F0CA         	call	_sprintf	;wreg free
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;main.c: 380:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5307  011FBE  0E03               	movlw	3
  5308  011FC0  6EE6               	movwf	postinc1,c
  5309  011FC2  EC08  F0D8         	call	_get_switch	;wreg free
  5310  011FC6  5028               	movf	btemp^0,w,c
  5311  011FC8  6EE6               	movwf	postinc1,c
  5312  011FCA  0E00               	movlw	0
  5313  011FCC  6EE6               	movwf	postinc1,c
  5314                           
  5315                           ;stkvar	_j @ sp[(-15)+8]
  5316  011FCE  0EF9               	movlw	-7
  5317  011FD0  50E3               	movf	plusw1,w,c
  5318  011FD2  0D04               	mullw	4
  5319  011FD4  0E00               	movlw	low _C
  5320  011FD6  24F3               	addwf	243,w,c
  5321  011FD8  6ED9               	movwf	fsr2l,c
  5322  011FDA  0E01               	movlw	high _C
  5323  011FDC  20F4               	addwfc	prodh,w,c
  5324  011FDE  6EDA               	movwf	fsr2h,c
  5325  011FE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5326  011FE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5327  011FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5328  011FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  5329                           
  5330                           ;stkvar	_j @ sp[(-19)+8]
  5331  011FF8  0EF5               	movlw	-11
  5332  011FFA  50E3               	movf	plusw1,w,c
  5333  011FFC  6EE6               	movwf	postinc1,c
  5334  011FFE  EC80  F0DA         	call	_get_raw_result	;wreg free
  5335  012002  0060  F0A3  FFE6   	movff	btemp,postinc1
  5336  012008  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5337  01200E  0E83               	movlw	low STR_19
  5338  012010  6EE6               	movwf	postinc1,c
  5339  012012  0EFF               	movlw	high STR_19
  5340  012014  6EE6               	movwf	postinc1,c
  5341  012016  0E00               	movlw	0
  5342  012018  6EE6               	movwf	postinc1,c
  5343  01201A  0E01               	movlw	1
  5344  01201C  6EE6               	movwf	postinc1,c
  5345  01201E  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  5346  012022  0060  F0A3  FFE6   	movff	btemp,postinc1
  5347  012028  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5348  01202E  0E0C               	movlw	12
  5349  012030  6EE6               	movwf	postinc1,c
  5350  012032  EC10  F0CA         	call	_sprintf	;wreg free
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;main.c: 381:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5354                           ;stkvar	_inp_index @ sp[(-13)+10]
  5355  012036  0EFD               	movlw	-3
  5356  012038  50E3               	movf	plusw1,w,c
  5357  01203A  6E32               	movwf	(btemp+10)^0,c
  5358  01203C  6A33               	clrf	(btemp+11)^0,c
  5359  01203E  0E01               	movlw	1
  5360  012040  2632               	addwf	(btemp+10)^0,f,c
  5361  012042  0E00               	movlw	0
  5362  012044  2233               	addwfc	(btemp+11)^0,f,c
  5363  012046  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  5364  01204C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  5365                           
  5366                           ;stkvar	_k @ sp[(-15)+7]
  5367  012052  0EF8               	movlw	-8
  5368  012054  50E3               	movf	plusw1,w,c
  5369  012056  0D04               	mullw	4
  5370  012058  0E00               	movlw	low _C
  5371  01205A  24F3               	addwf	243,w,c
  5372  01205C  6ED9               	movwf	fsr2l,c
  5373  01205E  0E01               	movlw	high _C
  5374  012060  20F4               	addwfc	prodh,w,c
  5375  012062  6EDA               	movwf	fsr2h,c
  5376  012064  006F FF7B FFE6     	movff	postinc2,postinc1
  5377  01206A  006F FF7B FFE6     	movff	postinc2,postinc1
  5378  012070  006F FF7B FFE6     	movff	postinc2,postinc1
  5379  012076  006F FF7B FFE6     	movff	postinc2,postinc1
  5380                           
  5381                           ;stkvar	_k @ sp[(-19)+7]
  5382  01207C  0EF4               	movlw	-12
  5383  01207E  50E3               	movf	plusw1,w,c
  5384  012080  6EE6               	movwf	postinc1,c
  5385  012082  EC80  F0DA         	call	_get_raw_result	;wreg free
  5386  012086  0060  F0A3  FFE6   	movff	btemp,postinc1
  5387  01208C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5388  012092  0E61               	movlw	low STR_21
  5389  012094  6EE6               	movwf	postinc1,c
  5390  012096  0EFF               	movlw	high STR_21
  5391  012098  6EE6               	movwf	postinc1,c
  5392  01209A  0E00               	movlw	0
  5393  01209C  6EE6               	movwf	postinc1,c
  5394  01209E  0E02               	movlw	2
  5395  0120A0  6EE6               	movwf	postinc1,c
  5396  0120A2  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  5397  0120A6  0060  F0A3  FFE6   	movff	btemp,postinc1
  5398  0120AC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5399  0120B2  0E0C               	movlw	12
  5400  0120B4  6EE6               	movwf	postinc1,c
  5401  0120B6  EC10  F0CA         	call	_sprintf	;wreg free
  5402                           
  5403                           ;main.c: 382:      break;
  5404  0120BA  D015               	goto	l12762
  5405  0120BC                     l12760:
  5406  0120BC  0100               	movlb	0	; () banked
  5407  0120BE  51F5               	movf	_H& (0+255),w,b
  5408  0120C0  6E32               	movwf	(btemp+10)^0,c
  5409  0120C2  6A33               	clrf	(btemp+11)^0,c
  5410                           
  5411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5412                           ; Switch size 1, requested type "simple"
  5413                           ; Number of cases is 1, Range of values is 0 to 0
  5414                           ; switch strategies available:
  5415                           ; Name         Instructions Cycles
  5416                           ; simple_byte            4     3 (average)
  5417                           ;	Chosen strategy is simple_byte
  5418  0120C4  5033               	movf	(btemp+11)^0,w,c
  5419  0120C6  0A00               	xorlw	0	; case 0
  5420  0120C8  A4D8               	btfss	status,2,c
  5421  0120CA  D00D               	goto	l12762
  5422                           
  5423                           ; BSR set to: 0
  5424                           ; Switch size 1, requested type "simple"
  5425                           ; Number of cases is 4, Range of values is 0 to 3
  5426                           ; switch strategies available:
  5427                           ; Name         Instructions Cycles
  5428                           ; simple_byte           13     7 (average)
  5429                           ;	Chosen strategy is simple_byte
  5430  0120CC  5032               	movf	(btemp+10)^0,w,c
  5431  0120CE  0A00               	xorlw	0	; case 0
  5432  0120D0  B4D8               	btfsc	status,2,c
  5433  0120D2  D513               	goto	l1350
  5434  0120D4  0A01               	xorlw	1	; case 1
  5435  0120D6  B4D8               	btfsc	status,2,c
  5436  0120D8  D44D               	goto	l1348
  5437  0120DA  0A03               	xorlw	3	; case 2
  5438  0120DC  B4D8               	btfsc	status,2,c
  5439  0120DE  D60E               	goto	l1351
  5440  0120E0  0A01               	xorlw	1	; case 3
  5441  0120E2  B4D8               	btfsc	status,2,c
  5442  0120E4  D6FC               	goto	l12746
  5443  0120E6                     l12762:
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;main.c: 386:     clear_hid_pflags(&H);
  5447  0120E6  0EF5               	movlw	_H& (0+255)
  5448  0120E8  6EE6               	movwf	postinc1,c
  5449  0120EA  ECC6  F0D9         	call	_clear_hid_pflags	;wreg free
  5450                           
  5451                           ;main.c: 388:    StartTimer(TMR_DISPLAY, 250);
  5452  0120EE  0EFA               	movlw	250
  5453  0120F0  6EE6               	movwf	postinc1,c
  5454  0120F2  0E00               	movlw	0
  5455  0120F4  6EE6               	movwf	postinc1,c
  5456  0120F6  0E0A               	movlw	10
  5457  0120F8  6EE6               	movwf	postinc1,c
  5458  0120FA  EC19  F0D6         	call	_StartTimer	;wreg free
  5459                           
  5460                           ;main.c: 389:    V.enter = check_enter_button(&H);
  5461  0120FE  0EF5               	movlw	_H& (0+255)
  5462  012100  6EE6               	movwf	postinc1,c
  5463  012102  EC39  F0D6         	call	_check_enter_button	;wreg free
  5464  012106  5028               	movf	btemp^0,w,c
  5465  012108  0102               	movlb	2	; () banked
  5466  01210A  6FAD               	movwf	(_V+173)& (0+255),b	;volatile
  5467                           
  5468                           ; BSR set to: 2
  5469                           ;main.c: 390:    if (V.enter && (H.hid_display != HID_AUX)) {
  5470  01210C  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  5471  01210E  B4D8               	btfsc	status,2,c
  5472  012110  D013               	goto	l12776
  5473                           
  5474                           ; BSR set to: 2
  5475  012112  0E03               	movlw	3
  5476  012114  0100               	movlb	0	; () banked
  5477  012116  19F5               	xorwf	_H& (0+255),w,b
  5478  012118  B4D8               	btfsc	status,2,c
  5479  01211A  D00E               	goto	l12776
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;main.c: 391:     V.enter = 0;
  5483  01211C  0102               	movlb	2	; () banked
  5484  01211E  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  5485                           
  5486                           ; BSR set to: 2
  5487                           ;main.c: 392:     V.screen = ~V.screen;
  5488  012120  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5489  012122  D002               	goto	u12250
  5490  012124  0E01               	movlw	1
  5491  012126  D001               	goto	u12256
  5492  012128                     u12250:
  5493  012128  0E00               	movlw	0
  5494  01212A                     u12256:
  5495  01212A  0AFF               	xorlw	255
  5496  01212C  6E33               	movwf	(btemp+11)^0,c
  5497  01212E  519C               	movf	(_V+156)& (0+255),w,b	;volatile
  5498  012130  1833               	xorwf	(btemp+11)^0,w,c
  5499  012132  0BFE               	andlw	-2
  5500  012134  1833               	xorwf	(btemp+11)^0,w,c
  5501  012136  6F9C               	movwf	(_V+156)& (0+255),b	;volatile
  5502  012138                     l12776:
  5503                           
  5504                           ;main.c: 394:    set_vterm(V.screen);
  5505  012138  0102               	movlb	2	; () banked
  5506  01213A  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5507  01213C  D002               	goto	u12260
  5508  01213E  0E01               	movlw	1
  5509  012140  D001               	goto	u12266
  5510  012142                     u12260:
  5511  012142  0E00               	movlw	0
  5512  012144                     u12266:
  5513  012144  6EE6               	movwf	postinc1,c
  5514  012146  EC62  F0DA         	call	_set_vterm	;wreg free
  5515                           
  5516                           ;main.c: 395:    update_lcd(V.screen);
  5517  01214A  0102               	movlb	2	; () banked
  5518  01214C  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5519  01214E  D002               	goto	u12270
  5520  012150  0E01               	movlw	1
  5521  012152  D001               	goto	u12276
  5522  012154                     u12270:
  5523  012154  0E00               	movlw	0
  5524  012156                     u12276:
  5525  012156  6EE6               	movwf	postinc1,c
  5526  012158  EC01  F0C9         	call	_update_lcd	;wreg free
  5527  01215C                     l12780:
  5528                           
  5529                           ;main.c: 401:   check_help(V.flipper);
  5530  01215C  0102               	movlb	2	; () banked
  5531  01215E  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  5532  012160  6EE6               	movwf	postinc1,c
  5533  012162  ECD9  F0BB         	call	_check_help	;wreg free
  5534                           
  5535                           ;main.c: 403:   if (V.enter) {
  5536  012166  0102               	movlb	2	; () banked
  5537  012168  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  5538  01216A  B4D8               	btfsc	status,2,c
  5539  01216C  D062               	goto	l1356
  5540                           
  5541                           ; BSR set to: 2
  5542                           ;main.c: 404:    V.enter = 0;
  5543  01216E  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  5544                           
  5545                           ;main.c: 405:    V.calib = 0;
  5546  012170  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5547                           
  5548                           ; BSR set to: 2
  5549                           ;main.c: 406:    inp_index += 3;
  5550                           ;stkvar	_inp_index @ sp[(-13)+10]
  5551  012172  0EFD               	movlw	-3
  5552  012174  006F FF8C  F028    	movff	plusw1,btemp
  5553  01217A  0E03               	movlw	3
  5554  01217C  2628               	addwf	btemp^0,f,c
  5555  01217E  0EFD               	movlw	-3
  5556  012180  0060  F0A3  FFE3   	movff	btemp,plusw1
  5557                           
  5558                           ;main.c: 407:    if (inp_index > 9)
  5559                           ;stkvar	_inp_index @ sp[(-13)+10]
  5560  012186  0EFD               	movlw	-3
  5561  012188  006F FF8C  F028    	movff	plusw1,btemp
  5562  01218E  0E09               	movlw	9
  5563  012190  6428               	cpfsgt	btemp^0,c
  5564  012192  D03A               	goto	l12808
  5565                           
  5566                           ; BSR set to: 2
  5567                           ;main.c: 408:     inp_index = 0;
  5568                           ;stkvar	_inp_index @ sp[(-13)+10]
  5569  012194  0EFD               	movlw	-3
  5570  012196  6AE3               	clrf	plusw1,c
  5571  012198  D037               	goto	l12808
  5572  01219A                     l12790:
  5573                           
  5574                           ; BSR set to: 2
  5575                           ;main.c: 411:     i = C_BATT;
  5576                           ;stkvar	_i @ sp[(-13)+9]
  5577  01219A  0EFC               	movlw	-4
  5578  01219C  6AE3               	clrf	plusw1,c
  5579                           
  5580                           ; BSR set to: 2
  5581                           ;main.c: 412:     j = C_PV;
  5582                           ;stkvar	_j @ sp[(-13)+8]
  5583  01219E  0EFB               	movlw	-5
  5584  0121A0  6AE3               	clrf	plusw1,c
  5585  0121A2  2AE3               	incf	plusw1,f,c
  5586                           
  5587                           ; BSR set to: 2
  5588                           ;main.c: 413:     k = V_CC;
  5589                           ;stkvar	_k @ sp[(-13)+7]
  5590  0121A4  0EFA               	movlw	-6
  5591  0121A6  6AE3               	clrf	plusw1,c
  5592  0121A8  82E3               	bsf	plusw1,1,c
  5593                           
  5594                           ;main.c: 414:     break;
  5595  0121AA  D043               	goto	l1356
  5596  0121AC                     l12796:
  5597                           
  5598                           ; BSR set to: 2
  5599                           ;main.c: 416:     i = V_BAT;
  5600                           ;stkvar	_i @ sp[(-13)+9]
  5601  0121AC  0EFC               	movlw	-4
  5602  0121AE  6AE3               	clrf	plusw1,c
  5603  0121B0  84E3               	bsf	plusw1,2,c
  5604                           
  5605                           ;main.c: 417:     j = V_PV;
  5606                           ;stkvar	_j @ sp[(-13)+8]
  5607  0121B2  0EFB               	movlw	-5
  5608  0121B4  6AE3               	clrf	plusw1,c
  5609  0121B6  80E3               	bsf	plusw1,0,c
  5610  0121B8  84E3               	bsf	plusw1,2,c	;indir
  5611                           
  5612                           ;main.c: 418:     k = V_CBUS;
  5613                           ;stkvar	_k @ sp[(-13)+7]
  5614  0121BA  0EFA               	movlw	-6
  5615  0121BC  6AE3               	clrf	plusw1,c
  5616  0121BE  82E3               	bsf	plusw1,1,c
  5617  0121C0  84E3               	bsf	plusw1,2,c	;indir
  5618                           
  5619                           ;main.c: 419:     break;
  5620  0121C2  D037               	goto	l1356
  5621  0121C4                     l12798:
  5622                           
  5623                           ; BSR set to: 2
  5624                           ;main.c: 421:     i = V_BBAT;
  5625                           ;stkvar	_i @ sp[(-13)+9]
  5626  0121C4  0EFC               	movlw	-4
  5627  0121C6  6AE3               	clrf	plusw1,c
  5628  0121C8  82E3               	bsf	plusw1,1,c
  5629  0121CA  86E3               	bsf	plusw1,3,c	;indir
  5630                           
  5631                           ; BSR set to: 2
  5632                           ;main.c: 422:     j = V_TEMP;
  5633  0121CC  0E0B               	movlw	11
  5634  0121CE  6E33               	movwf	(btemp+11)^0,c
  5635                           
  5636                           ;stkvar	_j @ sp[(-13)+8]
  5637  0121D0  0EFB               	movlw	-5
  5638  0121D2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5639                           
  5640                           ; BSR set to: 2
  5641                           ;main.c: 423:     k = V_INVERTER;
  5642                           ;stkvar	_k @ sp[(-13)+7]
  5643  0121D8  0EFA               	movlw	-6
  5644  0121DA  6AE3               	clrf	plusw1,c
  5645  0121DC  84E3               	bsf	plusw1,2,c
  5646  0121DE  86E3               	bsf	plusw1,3,c	;indir
  5647                           
  5648                           ;main.c: 424:     break;
  5649  0121E0  D028               	goto	l1356
  5650  0121E2                     l12804:
  5651                           
  5652                           ; BSR set to: 2
  5653                           ;main.c: 426:     i = channel_ANB5;
  5654  0121E2  0E0D               	movlw	13
  5655  0121E4  6E33               	movwf	(btemp+11)^0,c
  5656                           
  5657                           ;stkvar	_i @ sp[(-13)+9]
  5658  0121E6  0EFC               	movlw	-4
  5659  0121E8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5660                           
  5661                           ;main.c: 427:     j = channel_ANB5;
  5662  0121EE  0E0D               	movlw	13
  5663  0121F0  6E33               	movwf	(btemp+11)^0,c
  5664                           
  5665                           ;stkvar	_j @ sp[(-13)+8]
  5666  0121F2  0EFB               	movlw	-5
  5667  0121F4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5668                           
  5669                           ;main.c: 428:     k = channel_ANB5;
  5670  0121FA  0E0D               	movlw	13
  5671  0121FC  6E33               	movwf	(btemp+11)^0,c
  5672                           
  5673                           ;stkvar	_k @ sp[(-13)+7]
  5674  0121FE  0EFA               	movlw	-6
  5675  012200  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5676                           
  5677                           ;main.c: 429:     break;
  5678  012206  D015               	goto	l1356
  5679  012208                     l12808:
  5680                           
  5681                           ; BSR set to: 2
  5682                           ;stkvar	_inp_index @ sp[(-13)+10]
  5683  012208  0EFD               	movlw	-3
  5684  01220A  50E3               	movf	plusw1,w,c
  5685  01220C  6E32               	movwf	(btemp+10)^0,c
  5686  01220E  6A33               	clrf	(btemp+11)^0,c
  5687                           
  5688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5689                           ; Switch size 1, requested type "simple"
  5690                           ; Number of cases is 1, Range of values is 0 to 0
  5691                           ; switch strategies available:
  5692                           ; Name         Instructions Cycles
  5693                           ; simple_byte            4     3 (average)
  5694                           ;	Chosen strategy is simple_byte
  5695  012210  5033               	movf	(btemp+11)^0,w,c
  5696  012212  0A00               	xorlw	0	; case 0
  5697  012214  A4D8               	btfss	status,2,c
  5698  012216  D00D               	goto	l1356
  5699                           
  5700                           ; BSR set to: 2
  5701                           ; Switch size 1, requested type "simple"
  5702                           ; Number of cases is 4, Range of values is 0 to 9
  5703                           ; switch strategies available:
  5704                           ; Name         Instructions Cycles
  5705                           ; simple_byte           13     7 (average)
  5706                           ;	Chosen strategy is simple_byte
  5707  012218  5032               	movf	(btemp+10)^0,w,c
  5708  01221A  0A00               	xorlw	0	; case 0
  5709  01221C  B4D8               	btfsc	status,2,c
  5710  01221E  D7BD               	goto	l12790
  5711  012220  0A03               	xorlw	3	; case 3
  5712  012222  B4D8               	btfsc	status,2,c
  5713  012224  D7C3               	goto	l12796
  5714  012226  0A05               	xorlw	5	; case 6
  5715  012228  B4D8               	btfsc	status,2,c
  5716  01222A  D7CC               	goto	l12798
  5717  01222C  0A0F               	xorlw	15	; case 9
  5718  01222E  B4D8               	btfsc	status,2,c
  5719  012230  D7D8               	goto	l12804
  5720  012232                     l1356:
  5721                           
  5722                           ; BSR set to: 2
  5723                           ;main.c: 438:   if (V.set_sequ) {
  5724  012232  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  5725  012234  EF6F  F08C         	goto	l12712
  5726                           
  5727                           ; BSR set to: 2
  5728                           ;main.c: 439:    if (TimerDone(TMR_INFO)) {
  5729  012238  0E07               	movlw	7
  5730  01223A  6EE6               	movwf	postinc1,c
  5731  01223C  EC9B  F0D8         	call	_TimerDone	;wreg free
  5732  012240  5028               	movf	btemp^0,w,c
  5733  012242  B4D8               	btfsc	status,2,c
  5734  012244  D00C               	goto	l12818
  5735                           
  5736                           ;main.c: 440:     V.set_sequ = 0;
  5737  012246  0102               	movlb	2	; () banked
  5738  012248  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  5739                           
  5740                           ; BSR set to: 2
  5741                           ;main.c: 441:     set_vterm(0);
  5742  01224A  0E00               	movlw	0
  5743  01224C  6EE6               	movwf	postinc1,c
  5744  01224E  EC62  F0DA         	call	_set_vterm	;wreg free
  5745                           
  5746                           ;main.c: 442:     update_lcd(0);
  5747  012252  0E00               	movlw	0
  5748  012254  6EE6               	movwf	postinc1,c
  5749  012256  EC01  F0C9         	call	_update_lcd	;wreg free
  5750                           
  5751                           ;main.c: 443:    } else {
  5752  01225A  EF6F  F08C         	goto	l12712
  5753  01225E                     l12818:
  5754                           
  5755                           ;main.c: 444:     set_vterm(2);
  5756  01225E  0E02               	movlw	2
  5757  012260  6EE6               	movwf	postinc1,c
  5758  012262  EC62  F0DA         	call	_set_vterm	;wreg free
  5759                           
  5760                           ;main.c: 445:     update_lcd(2);
  5761  012266  0E02               	movlw	2
  5762  012268  6EE6               	movwf	postinc1,c
  5763  01226A  EC01  F0C9         	call	_update_lcd	;wreg free
  5764  01226E  EF6F  F08C         	goto	l12712
  5765  012272                     __end_of_main:
  5766                           	opt callstack 0
  5767                           
  5768 ;; *************** function _static_soc *****************
  5769 ;; Defined at:
  5770 ;;		line 116 in file "mbmc.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;		None
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;		None
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1  [STACK] void 
  5777 ;; Registers used:
  5778 ;;		wreg, status,2
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 3F/1
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5788 ;;Total ram usage:        0 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:   15
  5791 ;; This function calls:
  5792 ;;		Nothing
  5793 ;; This function is called by:
  5794 ;;		_main
  5795 ;; This function uses a reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text1
  5799  01B368                     __ptext1:
  5800                           	opt callstack 0
  5801  01B368                     _static_soc:
  5802                           	opt callstack 15
  5803                           
  5804                           ;mbmc.c: 118:  C.runtime = 120;
  5805                           
  5806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5807                           ;incstack = 0
  5808  01B368  0E00               	movlw	0
  5809  01B36A  0101               	movlb	1	; () banked
  5810  01B36C  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
  5811  01B36E  0E78               	movlw	120
  5812  01B370  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
  5813                           
  5814                           ;mbmc.c: 119:  C.soc = 100;
  5815  01B372  0E00               	movlw	0
  5816  01B374  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
  5817  01B376  0E64               	movlw	100
  5818  01B378  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
  5819                           
  5820                           ; BSR set to: 1
  5821                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5822  01B37A  C188  F18C         	movff	_C+136,_C+140	;volatile
  5823  01B37E  C189  F18D         	movff	_C+137,_C+141	;volatile
  5824  01B382  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5825  01B386  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5826                           
  5827                           ; BSR set to: 1
  5828                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5829  01B38A  0012               	return		;funcret
  5830  01B38C                     __end_of_static_soc:
  5831                           	opt callstack 0
  5832                           
  5833 ;; *************** function _start_switch_handler *****************
  5834 ;; Defined at:
  5835 ;;		line 121 in file "dio.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;		None
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1  [STACK] void 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5844 ;; Tracked objects:
  5845 ;;		On entry : 1/0
  5846 ;;		On exit  : 3F/39
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5853 ;;Total ram usage:        0 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:   16
  5856 ;; This function calls:
  5857 ;;		_INT1_SetInterruptHandler
  5858 ;; This function is called by:
  5859 ;;		_main
  5860 ;; This function uses a reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text2
  5864  01B486                     __ptext2:
  5865                           	opt callstack 0
  5866  01B486                     _start_switch_handler:
  5867                           	opt callstack 14
  5868                           
  5869                           ;dio.c: 123:  (PIE5bits.INT1IE = 0);
  5870                           
  5871                           ; BSR set to: 1
  5872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5873                           ;incstack = 0
  5874  01B486  0139               	movlb	57	; () banked
  5875  01B488  9195               	bcf	149,0,b	;volatile
  5876                           
  5877                           ; BSR set to: 57
  5878                           ;dio.c: 124:  INT1_SetInterruptHandler(switch_handler);
  5879  01B48A  0E44               	movlw	low _switch_handler
  5880  01B48C  6EE6               	movwf	postinc1,c
  5881  01B48E  0E8C               	movlw	high _switch_handler
  5882  01B490  6EE6               	movwf	postinc1,c
  5883  01B492  0E01               	movlw	low (_switch_handler shr (0+16))
  5884  01B494  6EE6               	movwf	postinc1,c
  5885  01B496  EC27  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
  5886                           
  5887                           ;dio.c: 125:  S.button[SNULL].sw = SW_INVALID;
  5888  01B49A  0E02               	movlw	2
  5889  01B49C  0102               	movlb	2	; () banked
  5890  01B49E  6FE1               	movwf	(_S+35)& (0+255),b	;volatile
  5891                           
  5892                           ; BSR set to: 2
  5893                           ;dio.c: 126:  (PIE5bits.INT1IE = 1);
  5894  01B4A0  0139               	movlb	57	; () banked
  5895  01B4A2  8195               	bsf	149,0,b	;volatile
  5896                           
  5897                           ; BSR set to: 57
  5898                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5899  01B4A4  0012               	return		;funcret
  5900  01B4A6                     __end_of_start_switch_handler:
  5901                           	opt callstack 0
  5902                           
  5903 ;; *************** function _srand *****************
  5904 ;; Defined at:
  5905 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  s               2  [STACK] unsigned int 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1  [STACK] void 
  5912 ;; Registers used:
  5913 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 3F/1
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5923 ;;Total ram usage:        0 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:   15
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		_main
  5930 ;; This function uses a reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text3
  5934  01AE86                     __ptext3:
  5935                           	opt callstack 0
  5936  01AE86                     _srand:
  5937                           	opt callstack 15
  5938                           
  5939                           ;stkvar	_s @ sp[(0)+-2]
  5940                           
  5941                           ; BSR set to: 57
  5942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5943                           ;incstack = 0
  5944  01AE86  0EFE               	movlw	-2
  5945  01AE88  50E3               	movf	plusw1,w,c
  5946  01AE8A  0FFF               	addlw	255
  5947  01AE8C  6E32               	movwf	(btemp+10)^0,c
  5948  01AE8E  0EFF               	movlw	-1
  5949  01AE90  006F FF8C  F033    	movff	plusw1,btemp+11
  5950  01AE96  0EFF               	movlw	255
  5951  01AE98  2233               	addwfc	(btemp+11)^0,f,c
  5952  01AE9A  0060  F0C8  F1F7   	movff	btemp+10,_seed
  5953  01AEA0  0060  F0CC  F1F8   	movff	btemp+11,_seed+1
  5954  01AEA6  0101               	movlb	1	; () banked
  5955  01AEA8  6BF9               	clrf	(_seed+2)& (0+255),b
  5956  01AEAA  6BFA               	clrf	(_seed+3)& (0+255),b
  5957  01AEAC  6BFB               	clrf	(_seed+4)& (0+255),b
  5958  01AEAE  6BFC               	clrf	(_seed+5)& (0+255),b
  5959  01AEB0  6BFD               	clrf	(_seed+6)& (0+255),b
  5960  01AEB2  6BFE               	clrf	(_seed+7)& (0+255),b
  5961                           
  5962                           ; BSR set to: 1
  5963                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5964  01AEB4  52E5               	movf	postdec1,f,c
  5965  01AEB6  52E5               	movf	postdec1,f,c
  5966  01AEB8  0012               	return		;funcret
  5967  01AEBA                     __end_of_srand:
  5968                           	opt callstack 0
  5969                           
  5970 ;; *************** function _spinners *****************
  5971 ;; Defined at:
  5972 ;;		line 134 in file "mbmc.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  shape           1  [STACK] unsigned char 
  5975 ;;  reset           1  [STACK] unsigned char 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  c               1  [STACK] unsigned char 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  1  [STACK] unsigned char 
  5980 ;; Registers used:
  5981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5991 ;;Total ram usage:        0 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:   16
  5994 ;; This function calls:
  5995 ;;		_strlen
  5996 ;; This function is called by:
  5997 ;;		_main
  5998 ;; This function uses a reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text4
  6002  01980E                     __ptext4:
  6003                           	opt callstack 0
  6004  01980E                     _spinners:
  6005                           	opt callstack 0
  6006                           
  6007                           ; BSR set to: 1
  6008                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6009  01980E  52E6               	movf	postinc1,f,c
  6010                           
  6011                           ;mbmc.c: 134: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 135: {;mbmc.c: 136:  s
      +                          tatic uint8_t s[6];;mbmc.c: 137:  char c;;mbmc.c: 139:  if (shape > (6 - 1))
  6012                           ;stkvar	_shape @ sp[(-1)+-1]
  6013                           
  6014                           ;incstack = 0
  6015  019810  0EFE               	movlw	-2
  6016  019812  006F FF8C  F028    	movff	plusw1,btemp
  6017  019818  0E05               	movlw	5
  6018  01981A  6428               	cpfsgt	btemp^0,c
  6019  01981C  D002               	goto	l1866
  6020                           
  6021                           ;mbmc.c: 140:   shape = 0;
  6022                           ;stkvar	_shape @ sp[(-1)+-1]
  6023  01981E  0EFE               	movlw	-2
  6024  019820  6AE3               	clrf	plusw1,c
  6025  019822                     l1866:
  6026                           
  6027                           ;mbmc.c: 141:  if (reset)
  6028                           ;stkvar	_reset @ sp[(-1)+-2]
  6029  019822  0EFD               	movlw	-3
  6030  019824  50E3               	movf	plusw1,w,c
  6031  019826  B4D8               	btfsc	status,2,c
  6032  019828  D00A               	goto	l10568
  6033                           
  6034                           ;mbmc.c: 142:   s[shape] = 0;
  6035                           ;stkvar	_shape @ sp[(-1)+-1]
  6036  01982A  0EFE               	movlw	-2
  6037  01982C  006F FF8C  F033    	movff	plusw1,btemp+11
  6038  019832  5033               	movf	(btemp+11)^0,w,c
  6039  019834  0F74               	addlw	low spinners@s
  6040  019836  6ED9               	movwf	fsr2l,c
  6041  019838  6ADA               	clrf	fsr2h,c
  6042  01983A  0E00               	movlw	0
  6043  01983C  6EDF               	movwf	indf2,c
  6044  01983E                     l10568:
  6045                           
  6046                           ;mbmc.c: 143:  c = spin[shape][s[shape]];
  6047                           ;stkvar	_shape @ sp[(-1)+-1]
  6048  01983E  0EFE               	movlw	-2
  6049  019840  50E3               	movf	plusw1,w,c
  6050  019842  0D14               	mullw	20
  6051  019844  0EDB               	movlw	low _spin
  6052  019846  6E32               	movwf	(btemp+10)^0,c
  6053  019848  0EFB               	movlw	high _spin
  6054  01984A  6E33               	movwf	(btemp+11)^0,c
  6055  01984C  50F3               	movf	243,w,c
  6056  01984E  2632               	addwf	(btemp+10)^0,f,c
  6057  019850  50F4               	movf	244,w,c
  6058  019852  2233               	addwfc	(btemp+11)^0,f,c
  6059                           
  6060                           ;stkvar	_shape @ sp[(-1)+-1]
  6061  019854  0EFE               	movlw	-2
  6062  019856  006F FF8C  F031    	movff	plusw1,btemp+9
  6063  01985C  5031               	movf	(btemp+9)^0,w,c
  6064  01985E  0F74               	addlw	low spinners@s
  6065  019860  6ED9               	movwf	fsr2l,c
  6066  019862  6ADA               	clrf	fsr2h,c
  6067  019864  50DF               	movf	indf2,w,c
  6068  019866  2632               	addwf	(btemp+10)^0,f,c
  6069  019868  0E00               	movlw	0
  6070  01986A  2233               	addwfc	(btemp+11)^0,f,c
  6071  01986C  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
  6072  019872  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
  6073  019878                     	if	0	;tblptru may be non-zero
  6074  019878                     	endif
  6075  019878                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6076  019878  0E00               	movlw	low (__mediumconst shr (0+16))
  6077  01987A  6EF8               	movwf	tblptru,c
  6078  01987C                     	endif
  6079                           
  6080                           ;stkvar	_c @ sp[(-1)+0]
  6081  01987C  0008               	tblrd		*
  6082  01987E  0EFF               	movlw	-1
  6083  019880  006F FFD7 FFE3     	movff	tablat,plusw1
  6084                           
  6085                           ;mbmc.c: 144:  if (++s[shape] >= strlen(spin[shape]))
  6086                           ;stkvar	_shape @ sp[(-1)+-1]
  6087  019886  0EFE               	movlw	-2
  6088  019888  50E3               	movf	plusw1,w,c
  6089  01988A  0D14               	mullw	20
  6090  01988C  0EDB               	movlw	low _spin
  6091  01988E  6E32               	movwf	(btemp+10)^0,c
  6092  019890  0EFB               	movlw	high _spin
  6093  019892  6E33               	movwf	(btemp+11)^0,c
  6094  019894  50F3               	movf	243,w,c
  6095  019896  2632               	addwf	(btemp+10)^0,f,c
  6096  019898  50F4               	movf	244,w,c
  6097  01989A  2233               	addwfc	(btemp+11)^0,f,c
  6098  01989C  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  6099  0198A2  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  6100  0198A8  EC56  F0CF         	call	_strlen	;wreg free
  6101                           
  6102                           ;stkvar	_shape @ sp[(-1)+-1]
  6103  0198AC  0EFE               	movlw	-2
  6104  0198AE  006F FF8C  F033    	movff	plusw1,btemp+11
  6105  0198B4  5033               	movf	(btemp+11)^0,w,c
  6106  0198B6  0F74               	addlw	low spinners@s
  6107  0198B8  6ED9               	movwf	fsr2l,c
  6108  0198BA  6ADA               	clrf	fsr2h,c
  6109  0198BC  2ADF               	incf	indf2,f,c
  6110  0198BE  50DF               	movf	indf2,w,c
  6111  0198C0  6E32               	movwf	(btemp+10)^0,c
  6112  0198C2  6A33               	clrf	(btemp+11)^0,c
  6113  0198C4  5028               	movf	btemp^0,w,c
  6114  0198C6  5C32               	subwf	(btemp+10)^0,w,c
  6115  0198C8  5029               	movf	(btemp+1)^0,w,c
  6116  0198CA  5833               	subwfb	(btemp+11)^0,w,c
  6117  0198CC  A0D8               	btfss	status,0,c
  6118  0198CE  D00A               	goto	l10574
  6119                           
  6120                           ;mbmc.c: 145:   s[shape] = 0;
  6121                           ;stkvar	_shape @ sp[(-1)+-1]
  6122  0198D0  0EFE               	movlw	-2
  6123  0198D2  006F FF8C  F033    	movff	plusw1,btemp+11
  6124  0198D8  5033               	movf	(btemp+11)^0,w,c
  6125  0198DA  0F74               	addlw	low spinners@s
  6126  0198DC  6ED9               	movwf	fsr2l,c
  6127  0198DE  6ADA               	clrf	fsr2h,c
  6128  0198E0  0E00               	movlw	0
  6129  0198E2  6EDF               	movwf	indf2,c
  6130  0198E4                     l10574:
  6131                           
  6132                           ;mbmc.c: 146:  return c;
  6133                           ;stkvar	_c @ sp[(-1)+0]
  6134  0198E4  0EFF               	movlw	-1
  6135  0198E6  006F FF8C  F028    	movff	plusw1,btemp
  6136                           
  6137                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6138  0198EC  52E5               	movf	postdec1,f,c
  6139  0198EE  52E5               	movf	postdec1,f,c
  6140  0198F0  52E5               	movf	postdec1,f,c
  6141  0198F2  0012               	return		;funcret
  6142  0198F4                     __end_of_spinners:
  6143                           	opt callstack 0
  6144                           
  6145 ;; *************** function _init_port_dma *****************
  6146 ;; Defined at:
  6147 ;;		line 90 in file "eadog.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;		None
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;		None
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1  [STACK] void 
  6154 ;; Registers used:
  6155 ;;		wreg, status,2
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/2
  6158 ;;		On exit  : 3F/3B
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6165 ;;Total ram usage:        0 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:   15
  6168 ;; This function calls:
  6169 ;;		Nothing
  6170 ;; This function is called by:
  6171 ;;		_main
  6172 ;; This function uses a reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text5
  6176  01AF22                     __ptext5:
  6177                           	opt callstack 0
  6178  01AF22                     _init_port_dma:
  6179                           	opt callstack 15
  6180                           
  6181                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6182                           
  6183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6184                           ;incstack = 0
  6185  01AF22  0E3F               	movlw	-193
  6186  01AF24  013B               	movlb	59	; () banked
  6187  01AF26  17DD               	andwf	221,f,b	;volatile
  6188                           
  6189                           ; BSR set to: 59
  6190                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6191  01AF28  9BDD               	bcf	221,5,b	;volatile
  6192                           
  6193                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6194  01AF2A  51DD               	movf	221,w,b	;volatile
  6195  01AF2C  0BF9               	andlw	-7
  6196  01AF2E  0902               	iorlw	2
  6197  01AF30  6FDD               	movwf	221,b	;volatile
  6198                           
  6199                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6200  01AF32  0EE7               	movlw	-25
  6201  01AF34  17DD               	andwf	221,f,b	;volatile
  6202                           
  6203                           ; BSR set to: 59
  6204                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6205  01AF36  81DD               	bsf	221,0,b	;volatile
  6206                           
  6207                           ; BSR set to: 59
  6208                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6209  01AF38  9DDC               	bcf	220,6,b	;volatile
  6210                           
  6211                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6212  01AF3A  0E3D               	movlw	61
  6213  01AF3C  6FD1               	movwf	209,b	;volatile
  6214  01AF3E  0EEA               	movlw	234
  6215  01AF40  6FD0               	movwf	208,b	;volatile
  6216                           
  6217                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6218  01AF42  0EFF               	movlw	low _port_data
  6219  01AF44  6FD9               	movwf	217,b	;volatile
  6220  01AF46  0E05               	movlw	high _port_data
  6221  01AF48  6FDA               	movwf	218,b	;volatile
  6222  01AF4A  0E00               	movlw	low (_port_data shr (0+16))
  6223  01AF4C  6FDB               	movwf	219,b	;volatile
  6224                           
  6225                           ; BSR set to: 59
  6226                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6227  01AF4E  9BDC               	bcf	220,5,b	;volatile
  6228                           
  6229                           ; BSR set to: 59
  6230                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6231  01AF50  0012               	return		;funcret
  6232  01AF52                     __end_of_init_port_dma:
  6233                           	opt callstack 0
  6234                           
  6235 ;; *************** function _init_display *****************
  6236 ;; Defined at:
  6237 ;;		line 38 in file "eadog.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;		None
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;		None
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1  [STACK] void 
  6244 ;; Registers used:
  6245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6246 ;; Tracked objects:
  6247 ;;		On entry : 3F/3B
  6248 ;;		On exit  : 3F/3D
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6255 ;;Total ram usage:        0 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:   17
  6258 ;; This function calls:
  6259 ;;		_ringBufS_init
  6260 ;;		_send_lcd_cmd
  6261 ;;		_send_lcd_cmd_long
  6262 ;;		_wdtdelay
  6263 ;; This function is called by:
  6264 ;;		_main
  6265 ;; This function uses a reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text6
  6269  019724                     __ptext6:
  6270                           	opt callstack 0
  6271  019724                     _init_display:
  6272                           	opt callstack 13
  6273                           
  6274                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6275                           
  6276                           ; BSR set to: 59
  6277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6278                           ;incstack = 0
  6279  019724  0E43               	movlw	low _ring_buf1
  6280  019726  0100               	movlb	0	; () banked
  6281  019728  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6282  01972A  0E04               	movlw	high _ring_buf1
  6283  01972C  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6284                           
  6285                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6286  01972E  0E00               	movlw	low _ring_buf2
  6287  019730  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6288  019732  0E04               	movlw	high _ring_buf2
  6289  019734  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6293  019736  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6294  01973C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6295  019742  EC87  F0D8         	call	_ringBufS_init	;wreg free
  6296                           
  6297                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6298  019746  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6299  01974C  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6300  019752  EC87  F0D8         	call	_ringBufS_init	;wreg free
  6301                           
  6302                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6303  019756  84BE               	bsf	190,2,c	;volatile
  6304  019758  84BC               	bsf	188,2,c	;volatile
  6305                           
  6306                           ;eadog.c: 59:  wdtdelay(350000);
  6307  01975A  0E30               	movlw	48
  6308  01975C  6EE6               	movwf	postinc1,c
  6309  01975E  0E57               	movlw	87
  6310  019760  6EE6               	movwf	postinc1,c
  6311  019762  0E05               	movlw	5
  6312  019764  6EE6               	movwf	postinc1,c
  6313  019766  0E00               	movlw	0
  6314  019768  6EE6               	movwf	postinc1,c
  6315  01976A  ECB3  F0D3         	call	_wdtdelay	;wreg free
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6319  01976E  0E39               	movlw	57
  6320  019770  6EE6               	movwf	postinc1,c
  6321  019772  EC73  F0D8         	call	_send_lcd_cmd	;wreg free
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6325  019776  0E1D               	movlw	29
  6326  019778  6EE6               	movwf	postinc1,c
  6327  01977A  EC73  F0D8         	call	_send_lcd_cmd	;wreg free
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6331  01977E  0E50               	movlw	80
  6332  019780  6EE6               	movwf	postinc1,c
  6333  019782  EC73  F0D8         	call	_send_lcd_cmd	;wreg free
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6337  019786  0E6C               	movlw	108
  6338  019788  6EE6               	movwf	postinc1,c
  6339  01978A  EC73  F0D8         	call	_send_lcd_cmd	;wreg free
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6343  01978E  0E76               	movlw	118
  6344  019790  6EE6               	movwf	postinc1,c
  6345  019792  EC73  F0D8         	call	_send_lcd_cmd	;wreg free
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6349  019796  0E38               	movlw	56
  6350  019798  6EE6               	movwf	postinc1,c
  6351  01979A  EC5F  F0D8         	call	_send_lcd_cmd_long	;wreg free
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6355  01979E  0E0F               	movlw	15
  6356  0197A0  6EE6               	movwf	postinc1,c
  6357  0197A2  EC73  F0D8         	call	_send_lcd_cmd	;wreg free
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6361  0197A6  0E01               	movlw	1
  6362  0197A8  6EE6               	movwf	postinc1,c
  6363  0197AA  EC5F  F0D8         	call	_send_lcd_cmd_long	;wreg free
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6367  0197AE  0E02               	movlw	2
  6368  0197B0  6EE6               	movwf	postinc1,c
  6369  0197B2  EC73  F0D8         	call	_send_lcd_cmd	;wreg free
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6373  0197B6  0E06               	movlw	6
  6374  0197B8  6EE6               	movwf	postinc1,c
  6375  0197BA  EC73  F0D8         	call	_send_lcd_cmd	;wreg free
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;eadog.c: 70:  wdtdelay(30);
  6379  0197BE  0E1E               	movlw	30
  6380  0197C0  6EE6               	movwf	postinc1,c
  6381  0197C2  0E00               	movlw	0
  6382  0197C4  6EE6               	movwf	postinc1,c
  6383  0197C6  0E00               	movlw	0
  6384  0197C8  6EE6               	movwf	postinc1,c
  6385  0197CA  0E00               	movlw	0
  6386  0197CC  6EE6               	movwf	postinc1,c
  6387  0197CE  ECB3  F0D3         	call	_wdtdelay	;wreg free
  6388                           
  6389                           ; BSR set to: 0
  6390                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6391  0197D2  0E02               	movlw	2
  6392  0197D4  013D               	movlb	61	; () banked
  6393  0197D6  6F16               	movwf	22,b	;volatile
  6394                           
  6395                           ; BSR set to: 61
  6396                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6397  0197D8  0E40               	movlw	64
  6398  0197DA  6F15               	movwf	21,b	;volatile
  6399                           
  6400                           ; BSR set to: 61
  6401                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6402  0197DC  0E83               	movlw	131
  6403  0197DE  6F14               	movwf	20,b	;volatile
  6404                           
  6405                           ; BSR set to: 61
  6406                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6407  0197E0  931A               	bcf	26,1,b	;volatile
  6408                           
  6409                           ; BSR set to: 61
  6410                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6411  0197E2  0E3F               	movlw	-193
  6412  0197E4  013B               	movlb	59	; () banked
  6413  0197E6  17FD               	andwf	253,f,b	;volatile
  6414                           
  6415                           ; BSR set to: 59
  6416                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6417  0197E8  9BFD               	bcf	253,5,b	;volatile
  6418                           
  6419                           ; BSR set to: 59
  6420                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6421  0197EA  51FD               	movf	253,w,b	;volatile
  6422  0197EC  0BF9               	andlw	-7
  6423  0197EE  0902               	iorlw	2
  6424  0197F0  6FFD               	movwf	253,b	;volatile
  6425                           
  6426                           ; BSR set to: 59
  6427                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6428  0197F2  0EE7               	movlw	-25
  6429  0197F4  17FD               	andwf	253,f,b	;volatile
  6430                           
  6431                           ; BSR set to: 59
  6432                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6433  0197F6  81FD               	bsf	253,0,b	;volatile
  6434                           
  6435                           ; BSR set to: 59
  6436                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6437  0197F8  0E43               	movlw	low _ring_buf1
  6438  0197FA  6FF9               	movwf	249,b	;volatile
  6439  0197FC  0E04               	movlw	high _ring_buf1
  6440  0197FE  6FFA               	movwf	250,b	;volatile
  6441  019800  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6442  019802  6FFB               	movwf	251,b	;volatile
  6443                           
  6444                           ; BSR set to: 59
  6445                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6446  019804  9BFC               	bcf	252,5,b	;volatile
  6447                           
  6448                           ; BSR set to: 59
  6449                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6450  019806  013D               	movlb	61	; () banked
  6451  019808  831A               	bsf	26,1,b	;volatile
  6452                           
  6453                           ; BSR set to: 61
  6454                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6455  01980A  94BE               	bcf	190,2,c	;volatile
  6456                           
  6457                           ; BSR set to: 61
  6458                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6459  01980C  0012               	return		;funcret
  6460  01980E                     __end_of_init_display:
  6461                           	opt callstack 0
  6462                           
  6463 ;; *************** function _send_lcd_cmd_long *****************
  6464 ;; Defined at:
  6465 ;;		line 129 in file "eadog.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  cmd             1  [STACK] const unsigned char 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1  [STACK] void 
  6472 ;; Registers used:
  6473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6474 ;; Tracked objects:
  6475 ;;		On entry : 3F/0
  6476 ;;		On exit  : 3F/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6483 ;;Total ram usage:        0 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:   16
  6486 ;; This function calls:
  6487 ;;		_SPI1_Exchange8bit
  6488 ;;		_wdtdelay
  6489 ;; This function is called by:
  6490 ;;		_init_display
  6491 ;; This function uses a reentrant model
  6492 ;;
  6493                           
  6494                           	psect	text7
  6495  01B0BE                     __ptext7:
  6496                           	opt callstack 0
  6497  01B0BE                     _send_lcd_cmd_long:
  6498                           	opt callstack 13
  6499                           
  6500                           ; BSR set to: 61
  6501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6502                           ;incstack = 0
  6503                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6504  01B0BE  92BC               	bcf	188,1,c	;volatile
  6505                           
  6506                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6507  01B0C0  94BC               	bcf	188,2,c	;volatile
  6508                           
  6509                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6510                           ;stkvar	_cmd @ sp[(0)+-1]
  6511  01B0C2  0EFF               	movlw	-1
  6512  01B0C4  50E3               	movf	plusw1,w,c
  6513  01B0C6  6EE6               	movwf	postinc1,c
  6514  01B0C8  EC53  F0DA         	call	_SPI1_Exchange8bit	;wreg free
  6515                           
  6516                           ; BSR set to: 57
  6517                           ;eadog.c: 134:  wdtdelay(800);
  6518  01B0CC  0E20               	movlw	32
  6519  01B0CE  6EE6               	movwf	postinc1,c
  6520  01B0D0  0E03               	movlw	3
  6521  01B0D2  6EE6               	movwf	postinc1,c
  6522  01B0D4  0E00               	movlw	0
  6523  01B0D6  6EE6               	movwf	postinc1,c
  6524  01B0D8  0E00               	movlw	0
  6525  01B0DA  6EE6               	movwf	postinc1,c
  6526  01B0DC  ECB3  F0D3         	call	_wdtdelay	;wreg free
  6527                           
  6528                           ; BSR set to: 0
  6529  01B0E0  82BC               	bsf	188,1,c	;volatile
  6530                           
  6531                           ; BSR set to: 0
  6532                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6533  01B0E2  52E5               	movf	postdec1,f,c
  6534  01B0E4  0012               	return		;funcret
  6535  01B0E6                     __end_of_send_lcd_cmd_long:
  6536                           	opt callstack 0
  6537                           
  6538 ;; *************** function _send_lcd_cmd *****************
  6539 ;; Defined at:
  6540 ;;		line 117 in file "eadog.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  cmd             1  [STACK] const unsigned char 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;		None
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  1  [STACK] void 
  6547 ;; Registers used:
  6548 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6549 ;; Tracked objects:
  6550 ;;		On entry : 3F/0
  6551 ;;		On exit  : 3F/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6558 ;;Total ram usage:        0 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:   16
  6561 ;; This function calls:
  6562 ;;		_SPI1_Exchange8bit
  6563 ;;		_wdtdelay
  6564 ;; This function is called by:
  6565 ;;		_init_display
  6566 ;; This function uses a reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text8
  6570  01B0E6                     __ptext8:
  6571                           	opt callstack 0
  6572  01B0E6                     _send_lcd_cmd:
  6573                           	opt callstack 13
  6574                           
  6575                           ; BSR set to: 0
  6576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6577                           ;incstack = 0
  6578                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6579  01B0E6  92BC               	bcf	188,1,c	;volatile
  6580                           
  6581                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6582  01B0E8  94BC               	bcf	188,2,c	;volatile
  6583                           
  6584                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6585                           ;stkvar	_cmd @ sp[(0)+-1]
  6586  01B0EA  0EFF               	movlw	-1
  6587  01B0EC  50E3               	movf	plusw1,w,c
  6588  01B0EE  6EE6               	movwf	postinc1,c
  6589  01B0F0  EC53  F0DA         	call	_SPI1_Exchange8bit	;wreg free
  6590                           
  6591                           ; BSR set to: 57
  6592                           ;eadog.c: 122:  wdtdelay(30);
  6593  01B0F4  0E1E               	movlw	30
  6594  01B0F6  6EE6               	movwf	postinc1,c
  6595  01B0F8  0E00               	movlw	0
  6596  01B0FA  6EE6               	movwf	postinc1,c
  6597  01B0FC  0E00               	movlw	0
  6598  01B0FE  6EE6               	movwf	postinc1,c
  6599  01B100  0E00               	movlw	0
  6600  01B102  6EE6               	movwf	postinc1,c
  6601  01B104  ECB3  F0D3         	call	_wdtdelay	;wreg free
  6602                           
  6603                           ; BSR set to: 0
  6604  01B108  82BC               	bsf	188,1,c	;volatile
  6605                           
  6606                           ; BSR set to: 0
  6607                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6608  01B10A  52E5               	movf	postdec1,f,c
  6609  01B10C  0012               	return		;funcret
  6610  01B10E                     __end_of_send_lcd_cmd:
  6611                           	opt callstack 0
  6612                           
  6613 ;; *************** function _SPI1_Exchange8bit *****************
  6614 ;; Defined at:
  6615 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  data            1  [STACK] unsigned char 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;		None
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  1  [STACK] unsigned char 
  6622 ;; Registers used:
  6623 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 3F/39
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6633 ;;Total ram usage:        0 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:   15
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_send_lcd_cmd
  6640 ;;		_send_lcd_cmd_long
  6641 ;; This function uses a reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text9
  6645  01B4A6                     __ptext9:
  6646                           	opt callstack 0
  6647  01B4A6                     _SPI1_Exchange8bit:
  6648                           	opt callstack 13
  6649                           
  6650                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6651                           
  6652                           ; BSR set to: 0
  6653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6654                           ;incstack = 0
  6655  01B4A6  0E01               	movlw	1
  6656  01B4A8  013D               	movlb	61	; () banked
  6657  01B4AA  6F12               	movwf	18,b	;volatile
  6658                           
  6659                           ; BSR set to: 61
  6660                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6661                           ;stkvar	_data @ sp[(0)+-1]
  6662  01B4AC  0EFF               	movlw	-1
  6663  01B4AE  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6664  01B4B4                     l807:
  6665                           
  6666                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6667  01B4B4  0139               	movlb	57	; () banked
  6668  01B4B6  A9A2               	btfss	162,4,b	;volatile
  6669  01B4B8  D7FD               	goto	l807
  6670                           
  6671                           ; BSR set to: 57
  6672                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6673  01B4BA  006F F440  F028    	movff	15632,btemp	;volatile
  6674                           
  6675                           ; BSR set to: 57
  6676                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6677  01B4C0  52E5               	movf	postdec1,f,c
  6678  01B4C2  0012               	return		;funcret
  6679  01B4C4                     __end_of_SPI1_Exchange8bit:
  6680                           	opt callstack 0
  6681                           
  6682 ;; *************** function _ringBufS_init *****************
  6683 ;; Defined at:
  6684 ;;		line 22 in file "ringbufs.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  _this           2  [STACK] PTR volatile struct ring
  6687 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1  [STACK] void 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6703 ;;Total ram usage:        0 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:   16
  6706 ;; This function calls:
  6707 ;;		_memset
  6708 ;; This function is called by:
  6709 ;;		_init_display
  6710 ;; This function uses a reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text10
  6714  01B10E                     __ptext10:
  6715                           	opt callstack 0
  6716  01B10E                     _ringBufS_init:
  6717                           	opt callstack 13
  6718                           
  6719                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6720                           
  6721                           ; BSR set to: 57
  6722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6723                           ;incstack = 0
  6724  01B10E  0E43               	movlw	67
  6725  01B110  6EE6               	movwf	postinc1,c
  6726  01B112  0E00               	movlw	0
  6727  01B114  6EE6               	movwf	postinc1,c
  6728  01B116  0E00               	movlw	0
  6729  01B118  6EE6               	movwf	postinc1,c
  6730  01B11A  0E00               	movlw	0
  6731  01B11C  6EE6               	movwf	postinc1,c
  6732                           
  6733                           ;stkvar	__this @ sp[(-4)+-2]
  6734  01B11E  0EFA               	movlw	-6
  6735  01B120  006F FF8F FFE6     	movff	plusw1,postinc1
  6736  01B126  006F FF8F FFE6     	movff	plusw1,postinc1
  6737  01B12C  ECFA  F0B2         	call	_memset	;wreg free
  6738                           
  6739                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6740  01B130  52E5               	movf	postdec1,f,c
  6741  01B132  52E5               	movf	postdec1,f,c
  6742  01B134  0012               	return		;funcret
  6743  01B136                     __end_of_ringBufS_init:
  6744                           	opt callstack 0
  6745                           
  6746 ;; *************** function _init_bsoc *****************
  6747 ;; Defined at:
  6748 ;;		line 95 in file "bsoc.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;		None
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1  [STACK] void 
  6755 ;; Registers used:
  6756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6757 ;; Tracked objects:
  6758 ;;		On entry : 3F/1
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6766 ;;Total ram usage:        0 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:   18
  6769 ;; This function calls:
  6770 ;;		_TMR3_SetInterruptHandler
  6771 ;;		_Volts_to_SOC
  6772 ;;		___fldiv
  6773 ;;		___flmul
  6774 ;;		___fltol
  6775 ;;		___xxtofl
  6776 ;;		_conv_raw_result
  6777 ;; This function is called by:
  6778 ;;		_main
  6779 ;; This function uses a reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text11
  6783  018580                     __ptext11:
  6784                           	opt callstack 0
  6785  018580                     _init_bsoc:
  6786                           	opt callstack 12
  6787                           
  6788                           ;bsoc.c: 100:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6789                           
  6790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6791                           ;incstack = 0
  6792  018580  0E00               	movlw	0
  6793  018582  6EE6               	movwf	postinc1,c
  6794  018584  0E00               	movlw	0
  6795  018586  6EE6               	movwf	postinc1,c
  6796  018588  0E7A               	movlw	122
  6797  01858A  6EE6               	movwf	postinc1,c
  6798  01858C  0E44               	movlw	68
  6799  01858E  6EE6               	movwf	postinc1,c
  6800  018590  0E00               	movlw	0
  6801  018592  6EE6               	movwf	postinc1,c
  6802  018594  0E04               	movlw	4
  6803  018596  6EE6               	movwf	postinc1,c
  6804  018598  EC60  F0A7         	call	_conv_raw_result	;wreg free
  6805  01859C  0060  F0A3  FFE6   	movff	btemp,postinc1
  6806  0185A2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6807  0185A8  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6808  0185AE  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6809  0185B4  EC07  F0C2         	call	___fltol	;wreg free
  6810  0185B8  0060  F0A3  FFE6   	movff	btemp,postinc1
  6811  0185BE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6812  0185C4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6813  0185CA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6814  0185D0  0E00               	movlw	0
  6815  0185D2  6EE6               	movwf	postinc1,c
  6816  0185D4  ECE2  F0BC         	call	___xxtofl	;wreg free
  6817  0185D8  0060  F0A3  FFE6   	movff	btemp,postinc1
  6818  0185DE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6819  0185E4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6820  0185EA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6821  0185F0  EC0F  F099         	call	___flmul	;wreg free
  6822  0185F4  0060  F0A3  FFE6   	movff	btemp,postinc1
  6823  0185FA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6824  018600  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6825  018606  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6826  01860C  EC07  F0C2         	call	___fltol	;wreg free
  6827  018610  0060  F0A3  FFE6   	movff	btemp,postinc1
  6828  018616  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6829  01861C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6830  018622  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6831  018628  EC3D  F0D0         	call	_Volts_to_SOC	;wreg free
  6832  01862C  0060  F0A0  F1AE   	movff	btemp,_C+174	;volatile
  6833  018632  0060  F0A4  F1AF   	movff	btemp+1,_C+175	;volatile
  6834                           
  6835                           ;bsoc.c: 101:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6836  018638  0060  F623  FFE6   	movff	_C+136,postinc1
  6837  01863E  0060  F627  FFE6   	movff	_C+137,postinc1
  6838  018644  0060  F62B  FFE6   	movff	_C+138,postinc1
  6839  01864A  0060  F62F  FFE6   	movff	_C+139,postinc1
  6840  018650  0E00               	movlw	0
  6841  018652  6EE6               	movwf	postinc1,c
  6842  018654  0E00               	movlw	0
  6843  018656  6EE6               	movwf	postinc1,c
  6844  018658  0EC8               	movlw	200
  6845  01865A  6EE6               	movwf	postinc1,c
  6846  01865C  0E42               	movlw	66
  6847  01865E  6EE6               	movwf	postinc1,c
  6848  018660  0101               	movlb	1	; () banked
  6849  018662  51AE               	movf	(_C+174)& (0+255),w,b	;volatile
  6850  018664  6E30               	movwf	(btemp+8)^0,c
  6851  018666  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
  6852  018668  6E31               	movwf	(btemp+9)^0,c
  6853  01866A  6A32               	clrf	(btemp+10)^0,c
  6854  01866C  6A33               	clrf	(btemp+11)^0,c
  6855  01866E  0060  F0C3  FFE6   	movff	btemp+8,postinc1
  6856  018674  0060  F0C7  FFE6   	movff	btemp+9,postinc1
  6857  01867A  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  6858  018680  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  6859  018686  0E00               	movlw	0
  6860  018688  6EE6               	movwf	postinc1,c
  6861  01868A  ECE2  F0BC         	call	___xxtofl	;wreg free
  6862  01868E  0060  F0A3  FFE6   	movff	btemp,postinc1
  6863  018694  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6864  01869A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6865  0186A0  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6866  0186A6  ECA3  F0A4         	call	___fldiv	;wreg free
  6867  0186AA  0060  F0A3  FFE6   	movff	btemp,postinc1
  6868  0186B0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6869  0186B6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6870  0186BC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6871  0186C2  EC0F  F099         	call	___flmul	;wreg free
  6872  0186C6  0060  F0A0  F18C   	movff	btemp,_C+140	;volatile
  6873  0186CC  0060  F0A4  F18D   	movff	btemp+1,_C+141	;volatile
  6874  0186D2  0060  F0A8  F18E   	movff	btemp+2,_C+142	;volatile
  6875  0186D8  0060  F0AC  F18F   	movff	btemp+3,_C+143	;volatile
  6876                           
  6877                           ;bsoc.c: 102:  TMR3_SetInterruptHandler(calc_bsoc);
  6878  0186DE  0E04               	movlw	low _calc_bsoc
  6879  0186E0  6EE6               	movwf	postinc1,c
  6880  0186E2  0E42               	movlw	high _calc_bsoc
  6881  0186E4  6EE6               	movwf	postinc1,c
  6882  0186E6  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6883  0186E8  6EE6               	movwf	postinc1,c
  6884  0186EA  EC13  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
  6885                           
  6886                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6887  0186EE  0012               	return		;funcret
  6888  0186F0                     __end_of_init_bsoc:
  6889                           	opt callstack 0
  6890                           
  6891 ;; *************** function _Volts_to_SOC *****************
  6892 ;; Defined at:
  6893 ;;		line 159 in file "bsoc.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;  cvoltage        4  [STACK] unsigned long 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;		None
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  2  [STACK] unsigned short 
  6900 ;; Registers used:
  6901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/1
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6911 ;;Total ram usage:        0 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; Hardware stack levels required when called:   15
  6914 ;; This function calls:
  6915 ;;		Nothing
  6916 ;; This function is called by:
  6917 ;;		_init_bsoc
  6918 ;; This function uses a reentrant model
  6919 ;;
  6920                           
  6921                           	psect	text12
  6922  01A07A                     __ptext12:
  6923                           	opt callstack 0
  6924  01A07A                     _Volts_to_SOC:
  6925                           	opt callstack 14
  6926                           
  6927                           ;bsoc.c: 159: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 160: {;bsoc.c: 161:  stat
      +                          ic uint8_t slot;;bsoc.c: 163:  C.soc = 0;
  6928                           
  6929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6930                           ;incstack = 0
  6931  01A07A  0101               	movlb	1	; () banked
  6932  01A07C  6BAE               	clrf	(_C+174)& (0+255),b	;volatile
  6933  01A07E  6BAF               	clrf	(_C+175)& (0+255),b	;volatile
  6934                           
  6935                           ;bsoc.c: 164:  for (slot = 0; slot < 26; slot++) {
  6936  01A080  6A53               	clrf	Volts_to_SOC@slot^0,c
  6937  01A082                     l10344:
  6938                           
  6939                           ;bsoc.c: 165:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6940                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6941  01A082  5053               	movf	Volts_to_SOC@slot^0,w,c
  6942  01A084  0D08               	mullw	8
  6943  01A086  0E7B               	movlw	low _BVSOC_TABLE
  6944  01A088  24F3               	addwf	243,w,c
  6945  01A08A  6EF6               	movwf	tblptrl,c
  6946  01A08C  0EFA               	movlw	high _BVSOC_TABLE
  6947  01A08E  20F4               	addwfc	244,w,c
  6948  01A090  6EF7               	movwf	tblptrh,c
  6949  01A092                     	if	1	;There are 3 active tblptr bytes
  6950  01A092  6AF8               	clrf	tblptru,c
  6951  01A094  0E00               	movlw	low (__mediumconst shr (0+16))
  6952  01A096  22F8               	addwfc	tblptru,f,c
  6953  01A098                     	endif
  6954  01A098  0EFC               	movlw	-4
  6955  01A09A  50E3               	movf	plusw1,w,c
  6956  01A09C  0009               	tblrd		*+
  6957  01A09E  5CF5               	subwf	tablat,w,c
  6958  01A0A0  0EFD               	movlw	-3
  6959  01A0A2  50E3               	movf	plusw1,w,c
  6960  01A0A4  0009               	tblrd		*+
  6961  01A0A6  58F5               	subwfb	tablat,w,c
  6962  01A0A8  0EFE               	movlw	-2
  6963  01A0AA  50E3               	movf	plusw1,w,c
  6964  01A0AC  0009               	tblrd		*+
  6965  01A0AE  58F5               	subwfb	tablat,w,c
  6966  01A0B0  0EFF               	movlw	-1
  6967  01A0B2  50E3               	movf	plusw1,w,c
  6968  01A0B4  0009               	tblrd		*+
  6969  01A0B6  58F5               	subwfb	tablat,w,c
  6970  01A0B8  B0D8               	btfsc	status,0,c
  6971  01A0BA  D017               	goto	l10348
  6972                           
  6973                           ;bsoc.c: 166:    C.soc = BVSOC_TABLE[slot][1];
  6974  01A0BC  5053               	movf	Volts_to_SOC@slot^0,w,c
  6975  01A0BE  0D08               	mullw	8
  6976  01A0C0  0E04               	movlw	4
  6977  01A0C2  26F3               	addwf	243,f,c
  6978  01A0C4  0E00               	movlw	0
  6979  01A0C6  22F4               	addwfc	244,f,c
  6980  01A0C8  0E7B               	movlw	low _BVSOC_TABLE
  6981  01A0CA  24F3               	addwf	243,w,c
  6982  01A0CC  6EF6               	movwf	tblptrl,c
  6983  01A0CE  0EFA               	movlw	high _BVSOC_TABLE
  6984  01A0D0  20F4               	addwfc	244,w,c
  6985  01A0D2  6EF7               	movwf	tblptrh,c
  6986  01A0D4                     	if	1	;There are 3 active tblptr bytes
  6987  01A0D4  6AF8               	clrf	tblptru,c
  6988  01A0D6  0E00               	movlw	low (__mediumconst shr (0+16))
  6989  01A0D8  22F8               	addwfc	tblptru,f,c
  6990  01A0DA                     	endif
  6991  01A0DA  0009               	tblrd		*+
  6992  01A0DC  006F FFD4  F1AE    	movff	tablat,_C+174	;volatile
  6993  01A0E2  000A               	tblrd		*-
  6994  01A0E4  006F FFD4  F1AF    	movff	tablat,_C+175	;volatile
  6995  01A0EA                     l10348:
  6996                           
  6997                           ;bsoc.c: 168:  }
  6998  01A0EA  2A53               	incf	Volts_to_SOC@slot^0,f,c
  6999  01A0EC  0E19               	movlw	25
  7000  01A0EE  6453               	cpfsgt	Volts_to_SOC@slot^0,c
  7001  01A0F0  D7C8               	goto	l10344
  7002                           
  7003                           ;bsoc.c: 170:  return C.soc;
  7004  01A0F2  EE20  F1AE         	lfsr	2,_C+174	;volatile
  7005  01A0F6  006F FF78  F028    	movff	postinc2,btemp
  7006  01A0FC  006F FF74  F029    	movff	postdec2,btemp+1
  7007                           
  7008                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7009  01A102  52E5               	movf	postdec1,f,c
  7010  01A104  52E5               	movf	postdec1,f,c
  7011  01A106  52E5               	movf	postdec1,f,c
  7012  01A108  52E5               	movf	postdec1,f,c
  7013  01A10A  0012               	return		;funcret
  7014  01A10C                     __end_of_Volts_to_SOC:
  7015                           	opt callstack 0
  7016                           
  7017 ;; *************** function _hid_display *****************
  7018 ;; Defined at:
  7019 ;;		line 17 in file "hid.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  h               1  [STACK] PTR struct H_data
  7022 ;;		 -> H(7), 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;		None
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  1  [STACK] PTR struct H_data
  7027 ;; Registers used:
  7028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7029 ;; Tracked objects:
  7030 ;;		On entry : 3F/1
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7038 ;;Total ram usage:        0 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:   17
  7041 ;; This function calls:
  7042 ;;		_hid_input
  7043 ;; This function is called by:
  7044 ;;		_main
  7045 ;; This function uses a reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text13
  7049  01952A                     __ptext13:
  7050                           	opt callstack 0
  7051  01952A                     _hid_display:
  7052                           	opt callstack 13
  7053                           
  7054                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7055                           ;stkvar	_h @ sp[(0)+-1]
  7056                           
  7057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7058                           ;incstack = 0
  7059  01952A  0EFF               	movlw	-1
  7060  01952C  50E3               	movf	plusw1,w,c
  7061  01952E  6EE6               	movwf	postinc1,c
  7062  019530  ECCF  F0D0         	call	_hid_input	;wreg free
  7063                           
  7064                           ;hid.c: 21:  switch (h->h_state) {
  7065  019534  D066               	goto	l10748
  7066  019536                     l10726:
  7067                           
  7068                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7069                           ;stkvar	_h @ sp[(0)+-1]
  7070  019536  0EFF               	movlw	-1
  7071  019538  50E3               	movf	plusw1,w,c
  7072  01953A  6ED9               	movwf	fsr2l,c
  7073  01953C  6ADA               	clrf	fsr2h,c
  7074  01953E  0E01               	movlw	1
  7075  019540  26D9               	addwf	fsr2l,f,c
  7076  019542  0E01               	movlw	1
  7077  019544  6EDF               	movwf	indf2,c
  7078                           
  7079                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7080                           ;stkvar	_h @ sp[(0)+-1]
  7081  019546  0EFF               	movlw	-1
  7082  019548  50E3               	movf	plusw1,w,c
  7083  01954A  6ED9               	movwf	fsr2l,c
  7084  01954C  6ADA               	clrf	fsr2h,c
  7085  01954E  0E00               	movlw	0
  7086  019550  6EDF               	movwf	indf2,c
  7087                           
  7088                           ;hid.c: 25:   h->wait_enter = 1;
  7089                           ;stkvar	_h @ sp[(0)+-1]
  7090  019552  0EFF               	movlw	-1
  7091  019554  50E3               	movf	plusw1,w,c
  7092  019556  6ED9               	movwf	fsr2l,c
  7093  019558  6ADA               	clrf	fsr2h,c
  7094  01955A  0E04               	movlw	4
  7095  01955C  26D9               	addwf	fsr2l,f,c
  7096  01955E  0E01               	movlw	1
  7097  019560  6EDF               	movwf	indf2,c
  7098                           
  7099                           ;hid.c: 26:   h->wait_select = 1;
  7100                           ;stkvar	_h @ sp[(0)+-1]
  7101  019562  0EFF               	movlw	-1
  7102  019564  50E3               	movf	plusw1,w,c
  7103  019566  6ED9               	movwf	fsr2l,c
  7104  019568  6ADA               	clrf	fsr2h,c
  7105  01956A  0E02               	movlw	2
  7106  01956C  26D9               	addwf	fsr2l,f,c
  7107  01956E  0E01               	movlw	1
  7108  019570  6EDF               	movwf	indf2,c
  7109                           
  7110                           ;hid.c: 27:   h->select_p = SW_OFF;
  7111                           ;stkvar	_h @ sp[(0)+-1]
  7112  019572  0EFF               	movlw	-1
  7113  019574  50E3               	movf	plusw1,w,c
  7114  019576  6ED9               	movwf	fsr2l,c
  7115  019578  6ADA               	clrf	fsr2h,c
  7116  01957A  0E03               	movlw	3
  7117  01957C  26D9               	addwf	fsr2l,f,c
  7118  01957E  0E00               	movlw	0
  7119  019580  6EDF               	movwf	indf2,c
  7120                           
  7121                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7122                           ;stkvar	_h @ sp[(0)+-1]
  7123  019582  0EFF               	movlw	-1
  7124  019584  50E3               	movf	plusw1,w,c
  7125  019586  6ED9               	movwf	fsr2l,c
  7126  019588  6ADA               	clrf	fsr2h,c
  7127  01958A  0E05               	movlw	5
  7128  01958C  26D9               	addwf	fsr2l,f,c
  7129  01958E  0E00               	movlw	0
  7130  019590  D036               	goto	L1
  7131  019592                     l10738:
  7132                           
  7133                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7134                           ;stkvar	_h @ sp[(0)+-1]
  7135  019592  0EFF               	movlw	-1
  7136  019594  50E3               	movf	plusw1,w,c
  7137  019596  6ED9               	movwf	fsr2l,c
  7138  019598  6ADA               	clrf	fsr2h,c
  7139  01959A  0E02               	movlw	2
  7140  01959C  26D9               	addwf	fsr2l,f,c
  7141  01959E  50DF               	movf	indf2,w,c
  7142  0195A0  A4D8               	btfss	status,2,c
  7143  0195A2  D042               	goto	l1943
  7144                           
  7145                           ;stkvar	_h @ sp[(0)+-1]
  7146  0195A4  0EFF               	movlw	-1
  7147  0195A6  50E3               	movf	plusw1,w,c
  7148  0195A8  6ED9               	movwf	fsr2l,c
  7149  0195AA  6ADA               	clrf	fsr2h,c
  7150  0195AC  0E03               	movlw	3
  7151  0195AE  26D9               	addwf	fsr2l,f,c
  7152  0195B0  50DF               	movf	indf2,w,c
  7153  0195B2  A4D8               	btfss	status,2,c
  7154  0195B4  D039               	goto	l1943
  7155                           
  7156                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7157                           ;stkvar	_h @ sp[(0)+-1]
  7158  0195B6  0EFF               	movlw	-1
  7159  0195B8  50E3               	movf	plusw1,w,c
  7160  0195BA  6ED9               	movwf	fsr2l,c
  7161  0195BC  6ADA               	clrf	fsr2h,c
  7162  0195BE  0E06               	movlw	6
  7163  0195C0  26D9               	addwf	fsr2l,f,c
  7164                           
  7165                           ;stkvar	_h @ sp[(0)+-1]
  7166  0195C2  0EFF               	movlw	-1
  7167  0195C4  50E3               	movf	plusw1,w,c
  7168  0195C6  6EE9               	movwf	fsr0l,c
  7169  0195C8  6AEA               	clrf	fsr0h,c
  7170  0195CA  0E06               	movlw	6
  7171  0195CC  26E9               	addwf	fsr0l,f,c
  7172  0195CE  2AEF               	incf	indf0,f,c
  7173  0195D0  50EF               	movf	indf0,w,c
  7174  0195D2  0B03               	andlw	3
  7175  0195D4  6EDF               	movwf	indf2,c
  7176                           
  7177                           ;hid.c: 34:    h->hid_display = h->sequence;
  7178                           ;stkvar	_h @ sp[(0)+-1]
  7179  0195D6  0EFF               	movlw	-1
  7180  0195D8  50E3               	movf	plusw1,w,c
  7181  0195DA  6ED9               	movwf	fsr2l,c
  7182  0195DC  6ADA               	clrf	fsr2h,c
  7183  0195DE  0E06               	movlw	6
  7184  0195E0  26D9               	addwf	fsr2l,f,c
  7185                           
  7186                           ;stkvar	_h @ sp[(0)+-1]
  7187  0195E2  0EFF               	movlw	-1
  7188  0195E4  50E3               	movf	plusw1,w,c
  7189  0195E6  6EE9               	movwf	fsr0l,c
  7190  0195E8  6AEA               	clrf	fsr0h,c
  7191  0195EA  006F FF7F FFEF     	movff	indf2,indf0
  7192                           
  7193                           ;hid.c: 35:    h->wait_select = 1;
  7194                           ;stkvar	_h @ sp[(0)+-1]
  7195  0195F0  0EFF               	movlw	-1
  7196  0195F2  50E3               	movf	plusw1,w,c
  7197  0195F4  6ED9               	movwf	fsr2l,c
  7198  0195F6  6ADA               	clrf	fsr2h,c
  7199  0195F8  0E02               	movlw	2
  7200  0195FA  26D9               	addwf	fsr2l,f,c
  7201  0195FC  0E01               	movlw	1
  7202  0195FE                     L1:
  7203  0195FE  6EDF               	movwf	indf2,c
  7204  019600  D013               	goto	l1943
  7205  019602                     l10748:
  7206                           
  7207                           ;stkvar	_h @ sp[(0)+-1]
  7208  019602  0EFF               	movlw	-1
  7209  019604  50E3               	movf	plusw1,w,c
  7210  019606  6ED9               	movwf	fsr2l,c
  7211  019608  6ADA               	clrf	fsr2h,c
  7212  01960A  0E01               	movlw	1
  7213  01960C  26D9               	addwf	fsr2l,f,c
  7214  01960E  50DF               	movf	indf2,w,c
  7215  019610  6E32               	movwf	(btemp+10)^0,c
  7216  019612  6A33               	clrf	(btemp+11)^0,c
  7217                           
  7218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7219                           ; Switch size 1, requested type "simple"
  7220                           ; Number of cases is 1, Range of values is 0 to 0
  7221                           ; switch strategies available:
  7222                           ; Name         Instructions Cycles
  7223                           ; simple_byte            4     3 (average)
  7224                           ;	Chosen strategy is simple_byte
  7225  019614  5033               	movf	(btemp+11)^0,w,c
  7226  019616  0A00               	xorlw	0	; case 0
  7227  019618  A4D8               	btfss	status,2,c
  7228  01961A  D7BB               	goto	l10738
  7229                           
  7230                           ; Switch size 1, requested type "simple"
  7231                           ; Number of cases is 2, Range of values is 0 to 1
  7232                           ; switch strategies available:
  7233                           ; Name         Instructions Cycles
  7234                           ; simple_byte            7     4 (average)
  7235                           ;	Chosen strategy is simple_byte
  7236  01961C  5032               	movf	(btemp+10)^0,w,c
  7237  01961E  0A00               	xorlw	0	; case 0
  7238  019620  B4D8               	btfsc	status,2,c
  7239  019622  D789               	goto	l10726
  7240  019624  0A01               	xorlw	1	; case 1
  7241  019626  D7B5               	goto	l10738
  7242  019628                     l1943:
  7243                           
  7244                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7245  019628  52E5               	movf	postdec1,f,c
  7246  01962A  0012               	return		;funcret
  7247  01962C                     __end_of_hid_display:
  7248                           	opt callstack 0
  7249                           
  7250 ;; *************** function _hid_input *****************
  7251 ;; Defined at:
  7252 ;;		line 3 in file "hid.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  h               1  [STACK] PTR struct H_data
  7255 ;;		 -> H(7), 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1  [STACK] PTR struct H_data
  7260 ;; Registers used:
  7261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/1
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7271 ;;Total ram usage:        0 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:   16
  7274 ;; This function calls:
  7275 ;;		_get_switch
  7276 ;; This function is called by:
  7277 ;;		_hid_display
  7278 ;; This function uses a reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text14
  7282  01A19E                     __ptext14:
  7283                           	opt callstack 0
  7284  01A19E                     _hid_input:
  7285                           	opt callstack 13
  7286                           
  7287                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7288                           
  7289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7290                           ;incstack = 0
  7291  01A19E  0E02               	movlw	2
  7292  01A1A0  6EE6               	movwf	postinc1,c
  7293  01A1A2  EC08  F0D8         	call	_get_switch	;wreg free
  7294  01A1A6  5028               	movf	btemp^0,w,c
  7295  01A1A8  B4D8               	btfsc	status,2,c
  7296  01A1AA  D01C               	goto	l10272
  7297                           
  7298                           ;hid.c: 6:   h->wait_select = 0;
  7299                           ;stkvar	_h @ sp[(0)+-1]
  7300  01A1AC  0EFF               	movlw	-1
  7301  01A1AE  50E3               	movf	plusw1,w,c
  7302  01A1B0  6ED9               	movwf	fsr2l,c
  7303  01A1B2  6ADA               	clrf	fsr2h,c
  7304  01A1B4  0E02               	movlw	2
  7305  01A1B6  26D9               	addwf	fsr2l,f,c
  7306  01A1B8  0E00               	movlw	0
  7307  01A1BA  6EDF               	movwf	indf2,c
  7308                           
  7309                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7310  01A1BC  0E02               	movlw	2
  7311  01A1BE  6EE6               	movwf	postinc1,c
  7312  01A1C0  EC08  F0D8         	call	_get_switch	;wreg free
  7313  01A1C4  5028               	movf	btemp^0,w,c
  7314  01A1C6  B4D8               	btfsc	status,2,c
  7315  01A1C8  D003               	goto	u9420
  7316  01A1CA  6A33               	clrf	(btemp+11)^0,c
  7317  01A1CC  2A33               	incf	(btemp+11)^0,f,c
  7318  01A1CE  D001               	goto	u9438
  7319  01A1D0                     u9420:
  7320  01A1D0  6A33               	clrf	(btemp+11)^0,c
  7321  01A1D2                     u9438:
  7322                           
  7323                           ;stkvar	_h @ sp[(0)+-1]
  7324  01A1D2  0EFF               	movlw	-1
  7325  01A1D4  50E3               	movf	plusw1,w,c
  7326  01A1D6  6ED9               	movwf	fsr2l,c
  7327  01A1D8  6ADA               	clrf	fsr2h,c
  7328  01A1DA  0E03               	movlw	3
  7329  01A1DC  26D9               	addwf	fsr2l,f,c
  7330  01A1DE  0060  F0CF  FFDF   	movff	btemp+11,indf2
  7331  01A1E4                     l10272:
  7332                           
  7333                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7334  01A1E4  0E03               	movlw	3
  7335  01A1E6  6EE6               	movwf	postinc1,c
  7336  01A1E8  EC08  F0D8         	call	_get_switch	;wreg free
  7337  01A1EC  5028               	movf	btemp^0,w,c
  7338  01A1EE  B4D8               	btfsc	status,2,c
  7339  01A1F0  D01C               	goto	l1934
  7340                           
  7341                           ;hid.c: 11:   h->wait_enter = 0;
  7342                           ;stkvar	_h @ sp[(0)+-1]
  7343  01A1F2  0EFF               	movlw	-1
  7344  01A1F4  50E3               	movf	plusw1,w,c
  7345  01A1F6  6ED9               	movwf	fsr2l,c
  7346  01A1F8  6ADA               	clrf	fsr2h,c
  7347  01A1FA  0E04               	movlw	4
  7348  01A1FC  26D9               	addwf	fsr2l,f,c
  7349  01A1FE  0E00               	movlw	0
  7350  01A200  6EDF               	movwf	indf2,c
  7351                           
  7352                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7353  01A202  0E03               	movlw	3
  7354  01A204  6EE6               	movwf	postinc1,c
  7355  01A206  EC08  F0D8         	call	_get_switch	;wreg free
  7356  01A20A  5028               	movf	btemp^0,w,c
  7357  01A20C  B4D8               	btfsc	status,2,c
  7358  01A20E  D003               	goto	u9450
  7359  01A210  6A33               	clrf	(btemp+11)^0,c
  7360  01A212  2A33               	incf	(btemp+11)^0,f,c
  7361  01A214  D001               	goto	u9468
  7362  01A216                     u9450:
  7363  01A216  6A33               	clrf	(btemp+11)^0,c
  7364  01A218                     u9468:
  7365                           
  7366                           ;stkvar	_h @ sp[(0)+-1]
  7367  01A218  0EFF               	movlw	-1
  7368  01A21A  50E3               	movf	plusw1,w,c
  7369  01A21C  6ED9               	movwf	fsr2l,c
  7370  01A21E  6ADA               	clrf	fsr2h,c
  7371  01A220  0E05               	movlw	5
  7372  01A222  26D9               	addwf	fsr2l,f,c
  7373  01A224  0060  F0CF  FFDF   	movff	btemp+11,indf2
  7374  01A22A                     l1934:
  7375                           
  7376                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7377  01A22A  52E5               	movf	postdec1,f,c
  7378  01A22C  0012               	return		;funcret
  7379  01A22E                     __end_of_hid_input:
  7380                           	opt callstack 0
  7381                           
  7382 ;; *************** function _get_switch *****************
  7383 ;; Defined at:
  7384 ;;		line 18 in file "dio.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  i               1  [STACK] unsigned char 
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1  [STACK] enum E17021
  7391 ;; Registers used:
  7392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/2
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7402 ;;Total ram usage:        0 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:   15
  7405 ;; This function calls:
  7406 ;;		Nothing
  7407 ;; This function is called by:
  7408 ;;		_main
  7409 ;;		_hid_input
  7410 ;; This function uses a reentrant model
  7411 ;;
  7412                           
  7413                           	psect	text15
  7414  01B010                     __ptext15:
  7415                           	opt callstack 0
  7416  01B010                     _get_switch:
  7417                           	opt callstack 13
  7418                           
  7419                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7420                           ;stkvar	_i @ sp[(0)+-1]
  7421                           
  7422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7423                           ;incstack = 0
  7424  01B010  0EFF               	movlw	-1
  7425  01B012  006F FF8C  F028    	movff	plusw1,btemp
  7426  01B018  0E03               	movlw	3
  7427  01B01A  6428               	cpfsgt	btemp^0,c
  7428  01B01C  D002               	goto	l9544
  7429                           
  7430                           ;dio.c: 21:   return SW_OFF;
  7431  01B01E  0E00               	movlw	0
  7432  01B020  D00A               	goto	L2
  7433  01B022                     l9544:
  7434                           
  7435                           ;dio.c: 23:  return S.button[i].sw;
  7436                           ;stkvar	_i @ sp[(0)+-1]
  7437  01B022  0EFF               	movlw	-1
  7438  01B024  50E3               	movf	plusw1,w,c
  7439  01B026  0D05               	mullw	5
  7440  01B028  0EBE               	movlw	low _S
  7441  01B02A  24F3               	addwf	243,w,c
  7442  01B02C  6ED9               	movwf	fsr2l,c
  7443  01B02E  0E02               	movlw	high _S
  7444  01B030  20F4               	addwfc	prodh,w,c
  7445  01B032  6EDA               	movwf	fsr2h,c
  7446  01B034  50DF               	movf	indf2,w,c
  7447  01B036                     L2:
  7448  01B036  6E28               	movwf	btemp^0,c
  7449                           
  7450                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7451  01B038  52E5               	movf	postdec1,f,c
  7452  01B03A  0012               	return		;funcret
  7453  01B03C                     __end_of_get_switch:
  7454                           	opt callstack 0
  7455                           
  7456 ;; *************** function _esr_check *****************
  7457 ;; Defined at:
  7458 ;;		line 179 in file "bsoc.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;  fsm             1  [STACK] unsigned char 
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;		None
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  4  [STACK] float 
  7465 ;; Registers used:
  7466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7476 ;;Total ram usage:        0 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; Hardware stack levels required when called:   18
  7479 ;; This function calls:
  7480 ;;		_StartTimer
  7481 ;;		_TimerDone
  7482 ;;		___fldiv
  7483 ;;		___flsub
  7484 ;;		_conv_raw_result
  7485 ;;		_fabsf
  7486 ;;		_set_load_relay_one
  7487 ;;		_set_load_relay_two
  7488 ;;		_update_adc_result
  7489 ;; This function is called by:
  7490 ;;		_main
  7491 ;; This function uses a reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text16
  7495  0168E0                     __ptext16:
  7496                           	opt callstack 0
  7497  0168E0                     _esr_check:
  7498                           	opt callstack 12
  7499                           
  7500                           ;bsoc.c: 179: float esr_check(uint8_t fsm);bsoc.c: 180: {;bsoc.c: 181:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 183:  if (fsm) {
  7501                           ;stkvar	_fsm @ sp[(0)+-1]
  7502                           
  7503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7504                           ;incstack = 0
  7505  0168E0  0EFF               	movlw	-1
  7506  0168E2  50E3               	movf	plusw1,w,c
  7507  0168E4  B4D8               	btfsc	status,2,c
  7508  0168E6  D13E               	goto	l10664
  7509                           
  7510                           ;bsoc.c: 184:   esr_state = 0;
  7511  0168E8  6A52               	clrf	esr_check@esr_state^0,c
  7512                           
  7513                           ;bsoc.c: 185:   return -10.0;
  7514  0168EA  0E00               	movlw	0
  7515  0168EC  6E28               	movwf	btemp^0,c
  7516  0168EE  0E00               	movlw	0
  7517  0168F0  6E29               	movwf	(btemp+1)^0,c
  7518  0168F2  0E20               	movlw	32
  7519  0168F4  6E2A               	movwf	(btemp+2)^0,c
  7520  0168F6  0EC1               	movlw	193
  7521  0168F8  D150               	goto	L3
  7522  0168FA                     l10596:
  7523                           
  7524                           ;bsoc.c: 190:   StartTimer(TMR_ESR, 10000);
  7525  0168FA  0E10               	movlw	16
  7526  0168FC  6EE6               	movwf	postinc1,c
  7527  0168FE  0E27               	movlw	39
  7528  016900  6EE6               	movwf	postinc1,c
  7529  016902  0E0C               	movlw	12
  7530  016904  6EE6               	movwf	postinc1,c
  7531  016906  EC19  F0D6         	call	_StartTimer	;wreg free
  7532  01690A                     l10598:
  7533                           
  7534                           ;bsoc.c: 191:   esr_state++;
  7535  01690A  2A52               	incf	esr_check@esr_state^0,f,c
  7536                           
  7537                           ;bsoc.c: 192:   break;
  7538  01690C  D13F               	goto	l10666
  7539  01690E                     l10600:
  7540                           
  7541                           ;bsoc.c: 197:   set_load_relay_one(0);
  7542  01690E  0E00               	movlw	0
  7543  016910  6EE6               	movwf	postinc1,c
  7544  016912  EC29  F0DB         	call	_set_load_relay_one	;wreg free
  7545                           
  7546                           ;bsoc.c: 198:   set_load_relay_two(0);
  7547  016916  0E00               	movlw	0
  7548  016918  6EE6               	movwf	postinc1,c
  7549  01691A  EC21  F0DB         	call	_set_load_relay_two	;wreg free
  7550                           
  7551                           ;bsoc.c: 199:   if (TimerDone(TMR_ESR)) {
  7552  01691E  0E0C               	movlw	12
  7553  016920  6EE6               	movwf	postinc1,c
  7554  016922  EC9B  F0D8         	call	_TimerDone	;wreg free
  7555  016926  5028               	movf	btemp^0,w,c
  7556  016928  B4D8               	btfsc	status,2,c
  7557  01692A  D009               	goto	l10606
  7558                           
  7559                           ;bsoc.c: 200:    StartTimer(TMR_ESR, 10000);
  7560  01692C  0E10               	movlw	16
  7561  01692E  6EE6               	movwf	postinc1,c
  7562  016930  0E27               	movlw	39
  7563  016932  6EE6               	movwf	postinc1,c
  7564  016934  0E0C               	movlw	12
  7565  016936  6EE6               	movwf	postinc1,c
  7566  016938  EC19  F0D6         	call	_StartTimer	;wreg free
  7567                           
  7568                           ;bsoc.c: 201:   } else {
  7569  01693C  D006               	goto	l10610
  7570  01693E                     l10606:
  7571                           
  7572                           ;bsoc.c: 202:    return -2.0;
  7573  01693E  0E00               	movlw	0
  7574  016940  6E28               	movwf	btemp^0,c
  7575  016942  0E00               	movlw	0
  7576  016944  6E29               	movwf	(btemp+1)^0,c
  7577  016946  0E00               	movlw	0
  7578  016948  D066               	goto	L5
  7579  01694A                     l10610:
  7580                           
  7581                           ;bsoc.c: 207:   update_adc_result();
  7582  01694A  ECB9  F0D6         	call	_update_adc_result	;wreg free
  7583                           
  7584                           ;bsoc.c: 208:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7585  01694E  0E00               	movlw	0
  7586  016950  6EE6               	movwf	postinc1,c
  7587  016952  0E04               	movlw	4
  7588  016954  6EE6               	movwf	postinc1,c
  7589  016956  EC60  F0A7         	call	_conv_raw_result	;wreg free
  7590  01695A  0060  F0A0  F1EB   	movff	btemp,_C+235	;volatile
  7591  016960  0060  F0A4  F1EC   	movff	btemp+1,_C+236	;volatile
  7592  016966  0060  F0A8  F1ED   	movff	btemp+2,_C+237	;volatile
  7593  01696C  0060  F0AC  F1EE   	movff	btemp+3,_C+238	;volatile
  7594  016972  D7CB               	goto	l10598
  7595  016974                     l10616:
  7596                           
  7597                           ;bsoc.c: 212:   set_load_relay_one(1);
  7598  016974  0E01               	movlw	1
  7599  016976  6EE6               	movwf	postinc1,c
  7600  016978  EC29  F0DB         	call	_set_load_relay_one	;wreg free
  7601                           
  7602                           ;bsoc.c: 213:   if (TimerDone(TMR_ESR)) {
  7603  01697C  0E0C               	movlw	12
  7604  01697E  6EE6               	movwf	postinc1,c
  7605  016980  EC9B  F0D8         	call	_TimerDone	;wreg free
  7606  016984  5028               	movf	btemp^0,w,c
  7607  016986  B4D8               	btfsc	status,2,c
  7608  016988  D009               	goto	l10622
  7609                           
  7610                           ;bsoc.c: 214:    StartTimer(TMR_ESR, 10000);
  7611  01698A  0E10               	movlw	16
  7612  01698C  6EE6               	movwf	postinc1,c
  7613  01698E  0E27               	movlw	39
  7614  016990  6EE6               	movwf	postinc1,c
  7615  016992  0E0C               	movlw	12
  7616  016994  6EE6               	movwf	postinc1,c
  7617  016996  EC19  F0D6         	call	_StartTimer	;wreg free
  7618                           
  7619                           ;bsoc.c: 215:   } else {
  7620  01699A  D006               	goto	l10626
  7621  01699C                     l10622:
  7622                           
  7623                           ;bsoc.c: 216:    return -3.0;
  7624  01699C  0E00               	movlw	0
  7625  01699E  6E28               	movwf	btemp^0,c
  7626  0169A0  0E00               	movlw	0
  7627  0169A2  6E29               	movwf	(btemp+1)^0,c
  7628  0169A4  0E40               	movlw	64
  7629  0169A6  D037               	goto	L5
  7630  0169A8                     l10626:
  7631                           
  7632                           ;bsoc.c: 219:   update_adc_result();
  7633  0169A8  ECB9  F0D6         	call	_update_adc_result	;wreg free
  7634                           
  7635                           ;bsoc.c: 220:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7636  0169AC  0E00               	movlw	0
  7637  0169AE  6EE6               	movwf	postinc1,c
  7638  0169B0  0E04               	movlw	4
  7639  0169B2  6EE6               	movwf	postinc1,c
  7640  0169B4  EC60  F0A7         	call	_conv_raw_result	;wreg free
  7641  0169B8  0060  F0A0  F1EF   	movff	btemp,_C+239	;volatile
  7642  0169BE  0060  F0A4  F1F0   	movff	btemp+1,_C+240	;volatile
  7643  0169C4  0060  F0A8  F1F1   	movff	btemp+2,_C+241	;volatile
  7644  0169CA  0060  F0AC  F1F2   	movff	btemp+3,_C+242	;volatile
  7645                           
  7646                           ;bsoc.c: 221:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7647  0169D0  0E00               	movlw	0
  7648  0169D2  6EE6               	movwf	postinc1,c
  7649  0169D4  0E00               	movlw	0
  7650  0169D6  6EE6               	movwf	postinc1,c
  7651  0169D8  EC60  F0A7         	call	_conv_raw_result	;wreg free
  7652  0169DC  0060  F0A0  F1E3   	movff	btemp,_C+227	;volatile
  7653  0169E2  0060  F0A4  F1E4   	movff	btemp+1,_C+228	;volatile
  7654  0169E8  0060  F0A8  F1E5   	movff	btemp+2,_C+229	;volatile
  7655  0169EE  0060  F0AC  F1E6   	movff	btemp+3,_C+230	;volatile
  7656  0169F4  D78A               	goto	l10598
  7657  0169F6                     l10634:
  7658                           
  7659                           ;bsoc.c: 225:   set_load_relay_two(1);
  7660  0169F6  0E01               	movlw	1
  7661  0169F8  6EE6               	movwf	postinc1,c
  7662  0169FA  EC21  F0DB         	call	_set_load_relay_two	;wreg free
  7663                           
  7664                           ;bsoc.c: 226:   if (!TimerDone(TMR_ESR))
  7665  0169FE  0E0C               	movlw	12
  7666  016A00  6EE6               	movwf	postinc1,c
  7667  016A02  EC9B  F0D8         	call	_TimerDone	;wreg free
  7668  016A06  5028               	movf	btemp^0,w,c
  7669  016A08  A4D8               	btfss	status,2,c
  7670  016A0A  D008               	goto	l10642
  7671                           
  7672                           ;bsoc.c: 227:    return -4.0;
  7673  016A0C  0E00               	movlw	0
  7674  016A0E  6E28               	movwf	btemp^0,c
  7675  016A10  0E00               	movlw	0
  7676  016A12  6E29               	movwf	(btemp+1)^0,c
  7677  016A14  0E80               	movlw	128
  7678  016A16                     L5:
  7679  016A16  6E2A               	movwf	(btemp+2)^0,c
  7680  016A18  0EC0               	movlw	192
  7681  016A1A  D0BF               	goto	L3
  7682  016A1C                     l10642:
  7683                           
  7684                           ;bsoc.c: 229:   update_adc_result();
  7685  016A1C  ECB9  F0D6         	call	_update_adc_result	;wreg free
  7686                           
  7687                           ;bsoc.c: 230:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7688  016A20  0E00               	movlw	0
  7689  016A22  6EE6               	movwf	postinc1,c
  7690  016A24  0E04               	movlw	4
  7691  016A26  6EE6               	movwf	postinc1,c
  7692  016A28  EC60  F0A7         	call	_conv_raw_result	;wreg free
  7693  016A2C  0060  F0A0  F1F3   	movff	btemp,_C+243	;volatile
  7694  016A32  0060  F0A4  F1F4   	movff	btemp+1,_C+244	;volatile
  7695  016A38  0060  F0A8  F1F5   	movff	btemp+2,_C+245	;volatile
  7696  016A3E  0060  F0AC  F1F6   	movff	btemp+3,_C+246	;volatile
  7697                           
  7698                           ;bsoc.c: 231:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7699  016A44  0E00               	movlw	0
  7700  016A46  6EE6               	movwf	postinc1,c
  7701  016A48  0E00               	movlw	0
  7702  016A4A  6EE6               	movwf	postinc1,c
  7703  016A4C  EC60  F0A7         	call	_conv_raw_result	;wreg free
  7704  016A50  0060  F0A0  F1E7   	movff	btemp,_C+231	;volatile
  7705  016A56  0060  F0A4  F1E8   	movff	btemp+1,_C+232	;volatile
  7706  016A5C  0060  F0A8  F1E9   	movff	btemp+2,_C+233	;volatile
  7707  016A62  0060  F0AC  F1EA   	movff	btemp+3,_C+234	;volatile
  7708                           
  7709                           ;bsoc.c: 233:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7710  016A68  0060  F79F  FFE6   	movff	_C+231,postinc1
  7711  016A6E  0060  F7A3  FFE6   	movff	_C+232,postinc1
  7712  016A74  0060  F7A7  FFE6   	movff	_C+233,postinc1
  7713  016A7A  0060  F7AB  FFE6   	movff	_C+234,postinc1
  7714  016A80  0060  F78F  FFE6   	movff	_C+227,postinc1
  7715  016A86  0060  F793  FFE6   	movff	_C+228,postinc1
  7716  016A8C  0060  F797  FFE6   	movff	_C+229,postinc1
  7717  016A92  0060  F79B  FFE6   	movff	_C+230,postinc1
  7718  016A98  EC6D  F0D5         	call	___flsub	;wreg free
  7719  016A9C  0060  F0A3  FFE6   	movff	btemp,postinc1
  7720  016AA2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  7721  016AA8  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  7722  016AAE  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  7723  016AB4  0060  F7CF  FFE6   	movff	_C+243,postinc1
  7724  016ABA  0060  F7D3  FFE6   	movff	_C+244,postinc1
  7725  016AC0  0060  F7D7  FFE6   	movff	_C+245,postinc1
  7726  016AC6  0060  F7DB  FFE6   	movff	_C+246,postinc1
  7727  016ACC  0060  F7BF  FFE6   	movff	_C+239,postinc1
  7728  016AD2  0060  F7C3  FFE6   	movff	_C+240,postinc1
  7729  016AD8  0060  F7C7  FFE6   	movff	_C+241,postinc1
  7730  016ADE  0060  F7CB  FFE6   	movff	_C+242,postinc1
  7731  016AE4  EC6D  F0D5         	call	___flsub	;wreg free
  7732  016AE8  0060  F0A3  FFE6   	movff	btemp,postinc1
  7733  016AEE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  7734  016AF4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  7735  016AFA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  7736  016B00  ECA3  F0A4         	call	___fldiv	;wreg free
  7737  016B04  0060  F0A3  FFE6   	movff	btemp,postinc1
  7738  016B0A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  7739  016B10  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  7740  016B16  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  7741  016B1C  EC01  F0CE         	call	_fabsf	;wreg free
  7742  016B20  0060  F0A0  F184   	movff	btemp,_C+132	;volatile
  7743  016B26  0060  F0A4  F185   	movff	btemp+1,_C+133	;volatile
  7744  016B2C  0060  F0A8  F186   	movff	btemp+2,_C+134	;volatile
  7745  016B32  0060  F0AC  F187   	movff	btemp+3,_C+135	;volatile
  7746                           
  7747                           ;bsoc.c: 234:   set_load_relay_one(0);
  7748  016B38  0E00               	movlw	0
  7749  016B3A  6EE6               	movwf	postinc1,c
  7750  016B3C  EC29  F0DB         	call	_set_load_relay_one	;wreg free
  7751                           
  7752                           ;bsoc.c: 235:   set_load_relay_two(0);
  7753  016B40  0E00               	movlw	0
  7754  016B42  6EE6               	movwf	postinc1,c
  7755  016B44  EC21  F0DB         	call	_set_load_relay_two	;wreg free
  7756                           
  7757                           ;bsoc.c: 236:   esr_state = 0;
  7758  016B48  6A52               	clrf	esr_check@esr_state^0,c
  7759                           
  7760                           ;bsoc.c: 237:   return C.esr;
  7761  016B4A  0060  F610  F028   	movff	_C+132,btemp	;volatile
  7762  016B50  0060  F614  F029   	movff	_C+133,btemp+1	;volatile
  7763  016B56  0060  F618  F02A   	movff	_C+134,btemp+2	;volatile
  7764  016B5C  0060  F61C  F02B   	movff	_C+135,btemp+3	;volatile
  7765  016B62  D01C               	goto	l2051
  7766  016B64                     l10664:
  7767  016B64  5052               	movf	esr_check@esr_state^0,w,c
  7768  016B66  6E32               	movwf	(btemp+10)^0,c
  7769  016B68  6A33               	clrf	(btemp+11)^0,c
  7770                           
  7771                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7772                           ; Switch size 1, requested type "simple"
  7773                           ; Number of cases is 1, Range of values is 0 to 0
  7774                           ; switch strategies available:
  7775                           ; Name         Instructions Cycles
  7776                           ; simple_byte            4     3 (average)
  7777                           ;	Chosen strategy is simple_byte
  7778  016B6A  5033               	movf	(btemp+11)^0,w,c
  7779  016B6C  0A00               	xorlw	0	; case 0
  7780  016B6E  A4D8               	btfss	status,2,c
  7781  016B70  D00D               	goto	l10666
  7782                           
  7783                           ; Switch size 1, requested type "simple"
  7784                           ; Number of cases is 4, Range of values is 0 to 3
  7785                           ; switch strategies available:
  7786                           ; Name         Instructions Cycles
  7787                           ; simple_byte           13     7 (average)
  7788                           ;	Chosen strategy is simple_byte
  7789  016B72  5032               	movf	(btemp+10)^0,w,c
  7790  016B74  0A00               	xorlw	0	; case 0
  7791  016B76  B4D8               	btfsc	status,2,c
  7792  016B78  D6C0               	goto	l10596
  7793  016B7A  0A01               	xorlw	1	; case 1
  7794  016B7C  B4D8               	btfsc	status,2,c
  7795  016B7E  D6C7               	goto	l10600
  7796  016B80  0A03               	xorlw	3	; case 2
  7797  016B82  B4D8               	btfsc	status,2,c
  7798  016B84  D6F7               	goto	l10616
  7799  016B86  0A01               	xorlw	1	; case 3
  7800  016B88  B4D8               	btfsc	status,2,c
  7801  016B8A  D735               	goto	l10634
  7802  016B8C                     l10666:
  7803                           
  7804                           ;bsoc.c: 242:  return -1.0;
  7805  016B8C  0E00               	movlw	0
  7806  016B8E  6E28               	movwf	btemp^0,c
  7807  016B90  0E00               	movlw	0
  7808  016B92  6E29               	movwf	(btemp+1)^0,c
  7809  016B94  0E80               	movlw	128
  7810  016B96  6E2A               	movwf	(btemp+2)^0,c
  7811  016B98  0EBF               	movlw	191
  7812  016B9A                     L3:
  7813  016B9A  6E2B               	movwf	(btemp+3)^0,c
  7814  016B9C                     l2051:
  7815                           
  7816                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7817  016B9C  52E5               	movf	postdec1,f,c
  7818  016B9E  0012               	return		;funcret
  7819  016BA0                     __end_of_esr_check:
  7820                           	opt callstack 0
  7821                           
  7822 ;; *************** function _update_adc_result *****************
  7823 ;; Defined at:
  7824 ;;		line 71 in file "daq.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;		None
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;		None
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1  [STACK] _Bool 
  7831 ;; Registers used:
  7832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7842 ;;Total ram usage:        0 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:   17
  7845 ;; This function calls:
  7846 ;;		_StartTimer
  7847 ;;		_TimerDone
  7848 ;;		_check_adc_scan
  7849 ;;		_clear_adc_scan
  7850 ;;		_start_adc_scan
  7851 ;; This function is called by:
  7852 ;;		_esr_check
  7853 ;; This function uses a reentrant model
  7854 ;;
  7855                           
  7856                           	psect	text17
  7857  01AD72                     __ptext17:
  7858                           	opt callstack 0
  7859  01AD72                     _update_adc_result:
  7860                           	opt callstack 12
  7861                           
  7862                           ;daq.c: 73:  if (R.done) {
  7863                           
  7864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7865                           ;incstack = 0
  7866  01AD72  0100               	movlb	0	; () banked
  7867  01AD74  51ED               	movf	(_R+39)& (0+255),w,b	;volatile
  7868  01AD76  B4D8               	btfsc	status,2,c
  7869  01AD78  0012               	return	
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;daq.c: 74:   clear_adc_scan();
  7873  01AD7A  EC87  F0DB         	call	_clear_adc_scan	;wreg free
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;daq.c: 75:   start_adc_scan();
  7877  01AD7E  ECF0  F0D2         	call	_start_adc_scan	;wreg free
  7878                           
  7879                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7880  01AD82  0EC8               	movlw	200
  7881  01AD84  6EE6               	movwf	postinc1,c
  7882  01AD86  0E00               	movlw	0
  7883  01AD88  6EE6               	movwf	postinc1,c
  7884  01AD8A  0E01               	movlw	1
  7885  01AD8C  6EE6               	movwf	postinc1,c
  7886  01AD8E  EC19  F0D6         	call	_StartTimer	;wreg free
  7887  01AD92                     l10208:
  7888  01AD92  0E01               	movlw	1
  7889  01AD94  6EE6               	movwf	postinc1,c
  7890  01AD96  EC9B  F0D8         	call	_TimerDone	;wreg free
  7891  01AD9A  5028               	movf	btemp^0,w,c
  7892  01AD9C  A4D8               	btfss	status,2,c
  7893  01AD9E  0012               	return	
  7894  01ADA0  EC77  F0DB         	call	_check_adc_scan	;wreg free
  7895  01ADA4  5028               	movf	btemp^0,w,c
  7896  01ADA6  A4D8               	btfss	status,2,c
  7897  01ADA8  0012               	return	
  7898  01ADAA  D7F3               	goto	l10208
  7899  01ADAC                     __end_of_update_adc_result:
  7900                           	opt callstack 0
  7901                           
  7902 ;; *************** function _start_adc_scan *****************
  7903 ;; Defined at:
  7904 ;;		line 32 in file "daq.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;		None
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1  [STACK] _Bool 
  7911 ;; Registers used:
  7912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 1/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7922 ;;Total ram usage:        0 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:   16
  7925 ;; This function calls:
  7926 ;;		_ADCC_DischargeSampleCapacitor
  7927 ;;		_ADCC_SetADIInterruptHandler
  7928 ;;		_ADCC_SetADTIInterruptHandler
  7929 ;;		_ADCC_StartConversion
  7930 ;; This function is called by:
  7931 ;;		_main
  7932 ;;		_update_adc_result
  7933 ;; This function uses a reentrant model
  7934 ;;
  7935                           
  7936                           	psect	text18
  7937  01A5E0                     __ptext18:
  7938                           	opt callstack 0
  7939  01A5E0                     _start_adc_scan:
  7940                           	opt callstack 14
  7941                           
  7942                           ;daq.c: 34:  if (R.done)
  7943                           
  7944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7945                           ;incstack = 0
  7946  01A5E0  0100               	movlb	0	; () banked
  7947  01A5E2  51ED               	movf	(_R+39)& (0+255),w,b	;volatile
  7948  01A5E4  A4D8               	btfss	status,2,c
  7949  01A5E6  0012               	return	
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;daq.c: 37:  R.scan_index = 0;
  7953  01A5E8  6BEA               	clrf	(_R+36)& (0+255),b	;volatile
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7957  01A5EA  013A               	movlb	58	; () banked
  7958  01A5EC  5140               	movf	64,w,b	;volatile
  7959  01A5EE  006E F940  F028    	movff	14928,btemp	;volatile
  7960  01A5F4  6A29               	clrf	(btemp+1)^0,c
  7961  01A5F6  0060  F0A0  F029   	movff	btemp,btemp+1
  7962  01A5FC  6A28               	clrf	btemp^0,c
  7963  01A5FE  2628               	addwf	btemp^0,f,c
  7964  01A600  0E00               	movlw	0
  7965  01A602  2229               	addwfc	(btemp+1)^0,f,c
  7966  01A604  0E77               	movlw	119
  7967  01A606  1428               	andwf	btemp^0,w,c
  7968  01A608  0100               	movlb	0	; () banked
  7969  01A60A  6FEB               	movwf	(_R+37)& (0+255),b	;volatile
  7970  01A60C  0E3C               	movlw	60
  7971  01A60E  1429               	andwf	(btemp+1)^0,w,c
  7972  01A610  6FEC               	movwf	(_R+38)& (0+255),b	;volatile
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  7976  01A612  0E36               	movlw	low _adc_int_handler
  7977  01A614  6EE6               	movwf	postinc1,c
  7978  01A616  0EB7               	movlw	high _adc_int_handler
  7979  01A618  6EE6               	movwf	postinc1,c
  7980  01A61A  0E01               	movlw	low (_adc_int_handler shr (0+16))
  7981  01A61C  6EE6               	movwf	postinc1,c
  7982  01A61E  EC63  F0D9         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7983                           
  7984                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  7985  01A622  0EBE               	movlw	low _adc_int_t_handler
  7986  01A624  6EE6               	movwf	postinc1,c
  7987  01A626  0EA3               	movlw	high _adc_int_t_handler
  7988  01A628  6EE6               	movwf	postinc1,c
  7989  01A62A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  7990  01A62C  6EE6               	movwf	postinc1,c
  7991  01A62E  EC4F  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7992                           
  7993                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  7994  01A632  EC73  F0DB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  7995                           
  7996                           ; BSR set to: 62
  7997                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  7998  01A636  0100               	movlb	0	; () banked
  7999  01A638  51EA               	movf	(_R+36)& (0+255),w,b	;volatile
  8000  01A63A  0B0F               	andlw	15
  8001  01A63C  6EE6               	movwf	postinc1,c
  8002  01A63E  EC18  F0DB         	call	_ADCC_StartConversion	;wreg free
  8003                           
  8004                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8005  01A642  0012               	return		;funcret
  8006  01A644                     __end_of_start_adc_scan:
  8007                           	opt callstack 0
  8008                           
  8009 ;; *************** function _ADCC_StartConversion *****************
  8010 ;; Defined at:
  8011 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  channel         1  [STACK] enum E16136
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;		None
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  1  [STACK] void 
  8018 ;; Registers used:
  8019 ;;		fsr1l, fsr1h
  8020 ;; Tracked objects:
  8021 ;;		On entry : 3F/0
  8022 ;;		On exit  : 3F/3E
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8029 ;;Total ram usage:        0 bytes
  8030 ;; Hardware stack levels used:    1
  8031 ;; Hardware stack levels required when called:   15
  8032 ;; This function calls:
  8033 ;;		Nothing
  8034 ;; This function is called by:
  8035 ;;		_start_adc_scan
  8036 ;;		_adc_int_t_handler
  8037 ;; This function uses a reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text19
  8041  01B630                     __ptext19:
  8042                           	opt callstack 0
  8043  01B630                     _ADCC_StartConversion:
  8044                           	opt callstack 0
  8045                           
  8046                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8047                           ;stkvar	_channel @ sp[(0)+-1]
  8048                           
  8049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8050                           ;incstack = 0
  8051 ;; hardware stack exceeded
  8052  01B630  0EFF               	movlw	-1
  8053  01B632  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8054                           
  8055                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8056  01B638  013E               	movlb	62	; () banked
  8057  01B63A  8FF8               	bsf	248,7,b	;volatile
  8058                           
  8059                           ; BSR set to: 62
  8060                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8061  01B63C  81F8               	bsf	248,0,b	;volatile
  8062                           
  8063                           ; BSR set to: 62
  8064                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8065  01B63E  52E5               	movf	postdec1,f,c
  8066  01B640  0012               	return		;funcret
  8067  01B642                     __end_of_ADCC_StartConversion:
  8068                           	opt callstack 0
  8069                           
  8070 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8071 ;; Defined at:
  8072 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8073 ;; Parameters:    Size  Location     Type
  8074 ;;		None
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;		None
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  1  [STACK] void 
  8079 ;; Registers used:
  8080 ;;		wreg, status,2
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 3F/3E
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8090 ;;Total ram usage:        0 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; Hardware stack levels required when called:   15
  8093 ;; This function calls:
  8094 ;;		Nothing
  8095 ;; This function is called by:
  8096 ;;		_start_adc_scan
  8097 ;;		_adc_int_t_handler
  8098 ;; This function uses a reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text20
  8102  01B6E6                     __ptext20:
  8103                           	opt callstack 0
  8104  01B6E6                     _ADCC_DischargeSampleCapacitor:
  8105                           	opt callstack 0
  8106                           
  8107                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8108                           
  8109                           ; BSR set to: 62
  8110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8111                           ;incstack = 0
  8112 ;; hardware stack exceeded
  8113  01B6E6  0E3B               	movlw	59
  8114  01B6E8  013E               	movlb	62	; () banked
  8115  01B6EA  6FF1               	movwf	241,b	;volatile
  8116                           
  8117                           ; BSR set to: 62
  8118                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8119  01B6EC  0012               	return		;funcret
  8120  01B6EE                     __end_of_ADCC_DischargeSampleCapacitor:
  8121                           	opt callstack 0
  8122                           
  8123 ;; *************** function _clear_adc_scan *****************
  8124 ;; Defined at:
  8125 ;;		line 63 in file "daq.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;		None
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;		None
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  1  [STACK] void 
  8132 ;; Registers used:
  8133 ;;		None
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 3F/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8143 ;;Total ram usage:        0 bytes
  8144 ;; Hardware stack levels used:    1
  8145 ;; Hardware stack levels required when called:   15
  8146 ;; This function calls:
  8147 ;;		Nothing
  8148 ;; This function is called by:
  8149 ;;		_main
  8150 ;;		_update_adc_result
  8151 ;; This function uses a reentrant model
  8152 ;;
  8153                           
  8154                           	psect	text21
  8155  01B70E                     __ptext21:
  8156                           	opt callstack 0
  8157  01B70E                     _clear_adc_scan:
  8158                           	opt callstack 13
  8159                           
  8160                           ;daq.c: 65:  R.done = 0;
  8161                           
  8162                           ; BSR set to: 62
  8163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8164                           ;incstack = 0
  8165  01B70E  0100               	movlb	0	; () banked
  8166  01B710  6BED               	clrf	(_R+39)& (0+255),b	;volatile
  8167                           
  8168                           ; BSR set to: 0
  8169                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8170  01B712  0012               	return		;funcret
  8171  01B714                     __end_of_clear_adc_scan:
  8172                           	opt callstack 0
  8173                           
  8174 ;; *************** function _check_adc_scan *****************
  8175 ;; Defined at:
  8176 ;;		line 55 in file "daq.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;		None
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;		None
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1  [STACK] _Bool 
  8183 ;; Registers used:
  8184 ;;		btemp
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8194 ;;Total ram usage:        0 bytes
  8195 ;; Hardware stack levels used:    1
  8196 ;; Hardware stack levels required when called:   15
  8197 ;; This function calls:
  8198 ;;		Nothing
  8199 ;; This function is called by:
  8200 ;;		_main
  8201 ;;		_update_adc_result
  8202 ;; This function uses a reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text22
  8206  01B6EE                     __ptext22:
  8207                           	opt callstack 0
  8208  01B6EE                     _check_adc_scan:
  8209                           	opt callstack 13
  8210                           
  8211                           ;daq.c: 57:  return R.done;
  8212                           
  8213                           ; BSR set to: 0
  8214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8215                           ;incstack = 0
  8216  01B6EE  0060  F3B4  F028   	movff	_R+39,btemp	;volatile
  8217                           
  8218                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8219  01B6F4  0012               	return		;funcret
  8220  01B6F6                     __end_of_check_adc_scan:
  8221                           	opt callstack 0
  8222                           
  8223 ;; *************** function _set_load_relay_two *****************
  8224 ;; Defined at:
  8225 ;;		line 128 in file "mbmc.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  mode            1  [STACK] _Bool 
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;		None
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1  [STACK] void 
  8232 ;; Registers used:
  8233 ;;		wreg, fsr1l, fsr1h
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8243 ;;Total ram usage:        0 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:   15
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_main
  8250 ;;		_esr_check
  8251 ;; This function uses a reentrant model
  8252 ;;
  8253                           
  8254                           	psect	text23
  8255  01B642                     __ptext23:
  8256                           	opt callstack 0
  8257  01B642                     _set_load_relay_two:
  8258                           	opt callstack 15
  8259                           
  8260                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  8261                           ;stkvar	_mode @ sp[(0)+-1]
  8262                           
  8263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8264                           ;incstack = 0
  8265  01B642  0EFF               	movlw	-1
  8266  01B644  B0E3               	btfsc	plusw1,0,c
  8267  01B646  D002               	bra	u9065
  8268  01B648  9ABD               	bcf	189,5,c	;volatile
  8269  01B64A  D001               	bra	u9066
  8270  01B64C                     u9065:
  8271  01B64C  8ABD               	bsf	189,5,c	;volatile
  8272  01B64E                     u9066:
  8273                           
  8274                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8275  01B64E  52E5               	movf	postdec1,f,c
  8276  01B650  0012               	return		;funcret
  8277  01B652                     __end_of_set_load_relay_two:
  8278                           	opt callstack 0
  8279                           
  8280 ;; *************** function _set_load_relay_one *****************
  8281 ;; Defined at:
  8282 ;;		line 123 in file "mbmc.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  mode            1  [STACK] _Bool 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;		None
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  1  [STACK] void 
  8289 ;; Registers used:
  8290 ;;		wreg, fsr1l, fsr1h
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8300 ;;Total ram usage:        0 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; Hardware stack levels required when called:   15
  8303 ;; This function calls:
  8304 ;;		Nothing
  8305 ;; This function is called by:
  8306 ;;		_main
  8307 ;;		_esr_check
  8308 ;; This function uses a reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text24
  8312  01B652                     __ptext24:
  8313                           	opt callstack 0
  8314  01B652                     _set_load_relay_one:
  8315                           	opt callstack 15
  8316                           
  8317                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  8318                           ;stkvar	_mode @ sp[(0)+-1]
  8319                           
  8320                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8321                           ;incstack = 0
  8322  01B652  0EFF               	movlw	-1
  8323  01B654  B0E3               	btfsc	plusw1,0,c
  8324  01B656  D002               	bra	u9055
  8325  01B658  98BD               	bcf	189,4,c	;volatile
  8326  01B65A  D001               	bra	u9056
  8327  01B65C                     u9055:
  8328  01B65C  88BD               	bsf	189,4,c	;volatile
  8329  01B65E                     u9056:
  8330                           
  8331                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8332  01B65E  52E5               	movf	postdec1,f,c
  8333  01B660  0012               	return		;funcret
  8334  01B662                     __end_of_set_load_relay_one:
  8335                           	opt callstack 0
  8336                           
  8337 ;; *************** function _eaDogM_WriteCommand *****************
  8338 ;; Defined at:
  8339 ;;		line 175 in file "eadog.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;  cmd             1  [STACK] const unsigned char 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;		None
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  1  [STACK] void 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8348 ;; Tracked objects:
  8349 ;;		On entry : 3F/3D
  8350 ;;		On exit  : 3F/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8357 ;;Total ram usage:        0 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:   25
  8360 ;; This function calls:
  8361 ;;		_send_lcd_cmd_dma
  8362 ;; This function is called by:
  8363 ;;		_main
  8364 ;; This function uses a reentrant model
  8365 ;;
  8366                           
  8367                           	psect	text25
  8368  01B672                     __ptext25:
  8369                           	opt callstack 0
  8370  01B672                     _eaDogM_WriteCommand:
  8371                           	opt callstack 5
  8372                           
  8373                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8374                           ;stkvar	_cmd @ sp[(0)+-1]
  8375                           
  8376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8377                           ;incstack = 0
  8378  01B672  0EFF               	movlw	-1
  8379  01B674  50E3               	movf	plusw1,w,c
  8380  01B676  6EE6               	movwf	postinc1,c
  8381  01B678  EC3B  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  8382                           
  8383                           ; BSR set to: 0
  8384                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8385  01B67C  52E5               	movf	postdec1,f,c
  8386  01B67E  0012               	return		;funcret
  8387  01B680                     __end_of_eaDogM_WriteCommand:
  8388                           	opt callstack 0
  8389                           
  8390 ;; *************** function _convert_adc_data *****************
  8391 ;; Defined at:
  8392 ;;		line 51 in file "mbmc.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;		None
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  i               1  [STACK] unsigned char 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1  [STACK] void 
  8399 ;; Registers used:
  8400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8410 ;;Total ram usage:        0 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; Hardware stack levels required when called:   18
  8413 ;; This function calls:
  8414 ;;		_conv_raw_result
  8415 ;;		_lp_filter
  8416 ;; This function is called by:
  8417 ;;		_main
  8418 ;; This function uses a reentrant model
  8419 ;;
  8420                           
  8421                           	psect	text26
  8422  019B4A                     __ptext26:
  8423                           	opt callstack 0
  8424  019B4A                     _convert_adc_data:
  8425                           	opt callstack 0
  8426                           
  8427                           ; BSR set to: 0
  8428                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8429  019B4A  52E6               	movf	postinc1,f,c
  8430                           
  8431                           ;mbmc.c: 53:  uint8_t i = 0;
  8432                           ;stkvar	_i @ sp[(-1)+0]
  8433                           
  8434                           ;incstack = 0
  8435  019B4C  0EFF               	movlw	-1
  8436  019B4E  6AE3               	clrf	plusw1,c
  8437  019B50                     l10676:
  8438                           
  8439                           ;mbmc.c: 56:   if (V.calib) {
  8440  019B50  0102               	movlb	2	; () banked
  8441  019B52  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  8442  019B54  B4D8               	btfsc	status,2,c
  8443  019B56  D01B               	goto	l10680
  8444                           
  8445                           ; BSR set to: 2
  8446                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8447  019B58  0E01               	movlw	1
  8448  019B5A  6EE6               	movwf	postinc1,c
  8449                           
  8450                           ;stkvar	_i @ sp[(-2)+0]
  8451  019B5C  0EFE               	movlw	-2
  8452  019B5E  50E3               	movf	plusw1,w,c
  8453  019B60  6EE6               	movwf	postinc1,c
  8454  019B62  0E01               	movlw	1
  8455  019B64  6EE6               	movwf	postinc1,c
  8456                           
  8457                           ;stkvar	_i @ sp[(-4)+0]
  8458  019B66  0EFC               	movlw	-4
  8459  019B68  50E3               	movf	plusw1,w,c
  8460  019B6A  6EE6               	movwf	postinc1,c
  8461  019B6C  EC60  F0A7         	call	_conv_raw_result	;wreg free
  8462  019B70  0060  F0A3  FFE6   	movff	btemp,postinc1
  8463  019B76  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8464  019B7C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  8465  019B82  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  8466  019B88  ECE4  F0BE         	call	_lp_filter	;wreg free
  8467  019B8C  D01A               	goto	L6
  8468  019B8E                     l10680:
  8469                           
  8470                           ; BSR set to: 2
  8471                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8472  019B8E  0E00               	movlw	0
  8473  019B90  6EE6               	movwf	postinc1,c
  8474                           
  8475                           ;stkvar	_i @ sp[(-2)+0]
  8476  019B92  0EFE               	movlw	-2
  8477  019B94  50E3               	movf	plusw1,w,c
  8478  019B96  6EE6               	movwf	postinc1,c
  8479  019B98  0E00               	movlw	0
  8480  019B9A  6EE6               	movwf	postinc1,c
  8481                           
  8482                           ;stkvar	_i @ sp[(-4)+0]
  8483  019B9C  0EFC               	movlw	-4
  8484  019B9E  50E3               	movf	plusw1,w,c
  8485  019BA0  6EE6               	movwf	postinc1,c
  8486  019BA2  EC60  F0A7         	call	_conv_raw_result	;wreg free
  8487  019BA6  0060  F0A3  FFE6   	movff	btemp,postinc1
  8488  019BAC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8489  019BB2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  8490  019BB8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  8491  019BBE  ECE4  F0BE         	call	_lp_filter	;wreg free
  8492  019BC2                     L6:
  8493                           
  8494                           ;stkvar	_i @ sp[(-1)+0]
  8495  019BC2  0EFF               	movlw	-1
  8496  019BC4  50E3               	movf	plusw1,w,c
  8497  019BC6  0D04               	mullw	4
  8498  019BC8  0E00               	movlw	low _C
  8499  019BCA  24F3               	addwf	243,w,c
  8500  019BCC  6ED9               	movwf	fsr2l,c
  8501  019BCE  0E01               	movlw	high _C
  8502  019BD0  20F4               	addwfc	prodh,w,c
  8503  019BD2  6EDA               	movwf	fsr2h,c
  8504  019BD4  0060  F0A3  FFDE   	movff	btemp,postinc2
  8505  019BDA  0060  F0A7  FFDE   	movff	btemp+1,postinc2
  8506  019BE0  0060  F0AB  FFDE   	movff	btemp+2,postinc2
  8507  019BE6  0060  F0AF  FFDE   	movff	btemp+3,postinc2
  8508                           
  8509                           ;mbmc.c: 61:  } while (++i < 16);
  8510                           ;stkvar	_i @ sp[(-1)+0]
  8511  019BEC  0EFF               	movlw	-1
  8512  019BEE  2AE3               	incf	plusw1,f,c
  8513  019BF0  0EFF               	movlw	-1
  8514  019BF2  006F FF8C  F028    	movff	plusw1,btemp
  8515  019BF8  0E0F               	movlw	15
  8516  019BFA  6428               	cpfsgt	btemp^0,c
  8517  019BFC  D7A9               	goto	l10676
  8518                           
  8519                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8520  019BFE  52E5               	movf	postdec1,f,c
  8521  019C00  0012               	return		;funcret
  8522  019C02                     __end_of_convert_adc_data:
  8523                           	opt callstack 0
  8524                           
  8525 ;; *************** function _clear_hid_pflags *****************
  8526 ;; Defined at:
  8527 ;;		line 51 in file "hid.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;  h               1  [STACK] PTR struct H_data
  8530 ;;		 -> H(7), 
  8531 ;; Auto vars:     Size  Location     Type
  8532 ;;		None
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  1  [STACK] void 
  8535 ;; Registers used:
  8536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8537 ;; Tracked objects:
  8538 ;;		On entry : 3F/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8546 ;;Total ram usage:        0 bytes
  8547 ;; Hardware stack levels used:    1
  8548 ;; Hardware stack levels required when called:   15
  8549 ;; This function calls:
  8550 ;;		Nothing
  8551 ;; This function is called by:
  8552 ;;		_main
  8553 ;; This function uses a reentrant model
  8554 ;;
  8555                           
  8556                           	psect	text27
  8557  01B38C                     __ptext27:
  8558                           	opt callstack 0
  8559  01B38C                     _clear_hid_pflags:
  8560                           	opt callstack 15
  8561                           
  8562                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8563                           ;stkvar	_h @ sp[(0)+-1]
  8564                           
  8565                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8566                           ;incstack = 0
  8567  01B38C  0EFF               	movlw	-1
  8568  01B38E  50E3               	movf	plusw1,w,c
  8569  01B390  6ED9               	movwf	fsr2l,c
  8570  01B392  6ADA               	clrf	fsr2h,c
  8571  01B394  0E03               	movlw	3
  8572  01B396  26D9               	addwf	fsr2l,f,c
  8573  01B398  0E00               	movlw	0
  8574  01B39A  6EDF               	movwf	indf2,c
  8575                           
  8576                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8577                           ;stkvar	_h @ sp[(0)+-1]
  8578  01B39C  0EFF               	movlw	-1
  8579  01B39E  50E3               	movf	plusw1,w,c
  8580  01B3A0  6ED9               	movwf	fsr2l,c
  8581  01B3A2  6ADA               	clrf	fsr2h,c
  8582  01B3A4  0E05               	movlw	5
  8583  01B3A6  26D9               	addwf	fsr2l,f,c
  8584  01B3A8  0E00               	movlw	0
  8585  01B3AA  6EDF               	movwf	indf2,c
  8586                           
  8587                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8588  01B3AC  52E5               	movf	postdec1,f,c
  8589  01B3AE  0012               	return		;funcret
  8590  01B3B0                     __end_of_clear_hid_pflags:
  8591                           	opt callstack 0
  8592                           
  8593 ;; *************** function _check_help *****************
  8594 ;; Defined at:
  8595 ;;		line 40 in file "mconfig.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;  flipper         1  [STACK] const _Bool 
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;  estatus         1    0        _Bool 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1  [STACK] _Bool 
  8602 ;; Registers used:
  8603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8604 ;; Tracked objects:
  8605 ;;		On entry : 3F/2
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8613 ;;Total ram usage:        0 bytes
  8614 ;; Hardware stack levels used:    1
  8615 ;; Hardware stack levels required when called:   27
  8616 ;; This function calls:
  8617 ;;		_StartTimer
  8618 ;;		_TimerDone
  8619 ;;		_display_help
  8620 ;;		_display_info
  8621 ;;		_get_vterm_ptr
  8622 ;;		_help_button
  8623 ;;		_mode_lamp_bright
  8624 ;;		_mode_lamp_dim
  8625 ;;		_set_display_info
  8626 ;;		_set_temp_display_help
  8627 ;;		_set_vterm
  8628 ;;		_sprintf
  8629 ;;		_update_lcd
  8630 ;;		_vterm_dump
  8631 ;; This function is called by:
  8632 ;;		_main
  8633 ;; This function uses a reentrant model
  8634 ;;
  8635                           
  8636                           	psect	text28
  8637  0177B2                     __ptext28:
  8638                           	opt callstack 0
  8639  0177B2                     _check_help:
  8640                           	opt callstack 3
  8641                           
  8642                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8643                           
  8644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8645                           ;incstack = 0
  8646  0177B2  ECD6  F0D6         	call	_help_button	;wreg free
  8647  0177B6  5028               	movf	btemp^0,w,c
  8648  0177B8  B4D8               	btfsc	status,2,c
  8649  0177BA  D0D0               	goto	l12538
  8650  0177BC  EC7B  F0DB         	call	_display_info	;wreg free
  8651  0177C0  0428               	decf	btemp^0,w,c
  8652  0177C2  B4D8               	btfsc	status,2,c
  8653  0177C4  D0CB               	goto	l12538
  8654                           
  8655                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8656  0177C6  0EDC               	movlw	220
  8657  0177C8  6EE6               	movwf	postinc1,c
  8658  0177CA  0E05               	movlw	5
  8659  0177CC  6EE6               	movwf	postinc1,c
  8660  0177CE  0E0B               	movlw	11
  8661  0177D0  6EE6               	movwf	postinc1,c
  8662  0177D2  EC19  F0D6         	call	_StartTimer	;wreg free
  8663                           
  8664                           ;mconfig.c: 48:   if (V.debug)
  8665  0177D6  0102               	movlb	2	; () banked
  8666  0177D8  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8667                           
  8668                           ; BSR set to: 2
  8669                           ;mconfig.c: 49:    vterm_dump();
  8670  0177DA  ECC2  F0C6         	call	_vterm_dump	;wreg free
  8671                           
  8672                           ;mconfig.c: 51:   set_vterm(1);
  8673  0177DE  0E01               	movlw	1
  8674  0177E0  6EE6               	movwf	postinc1,c
  8675  0177E2  EC62  F0DA         	call	_set_vterm	;wreg free
  8676                           
  8677                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8678  0177E6  EC7B  F0DB         	call	_display_info	;wreg free
  8679  0177EA  5028               	movf	btemp^0,w,c
  8680  0177EC  6EE6               	movwf	postinc1,c
  8681  0177EE  EC31  F0DB         	call	_set_temp_display_help	;wreg free
  8682                           
  8683                           ; BSR set to: 2
  8684                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8685  0177F2  0E01               	movlw	1
  8686  0177F4  6EE6               	movwf	postinc1,c
  8687  0177F6  EC71  F0DA         	call	_set_display_info	;wreg free
  8688                           
  8689                           ;mconfig.c: 54:   if (flipper) {
  8690                           ;stkvar	_flipper @ sp[(0)+-1]
  8691  0177FA  0EFF               	movlw	-1
  8692  0177FC  50E3               	movf	plusw1,w,c
  8693  0177FE  B4D8               	btfsc	status,2,c
  8694  017800  D019               	goto	l12524
  8695                           
  8696                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8697  017802  0EB1               	movlw	low STR_46
  8698  017804  6EE6               	movwf	postinc1,c
  8699  017806  0EFF               	movlw	high STR_46
  8700  017808  6EE6               	movwf	postinc1,c
  8701  01780A  0E01               	movlw	low STR_48
  8702  01780C  6EE6               	movwf	postinc1,c
  8703  01780E  0EFE               	movlw	high STR_48
  8704  017810  6EE6               	movwf	postinc1,c
  8705  017812  0E01               	movlw	1
  8706  017814  6EE6               	movwf	postinc1,c
  8707  017816  0E00               	movlw	0
  8708  017818  6EE6               	movwf	postinc1,c
  8709  01781A  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  8710  01781E  0060  F0A3  FFE6   	movff	btemp,postinc1
  8711  017824  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8712  01782A  0E06               	movlw	6
  8713  01782C  6EE6               	movwf	postinc1,c
  8714  01782E  EC10  F0CA         	call	_sprintf	;wreg free
  8715                           
  8716                           ;mconfig.c: 56:   } else {
  8717  017832  D018               	goto	l1664
  8718  017834                     l12524:
  8719                           
  8720                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8721  017834  0EC7               	movlw	low STR_47
  8722  017836  6EE6               	movwf	postinc1,c
  8723  017838  0EFF               	movlw	high STR_47
  8724  01783A  6EE6               	movwf	postinc1,c
  8725  01783C  0E01               	movlw	low STR_48
  8726  01783E  6EE6               	movwf	postinc1,c
  8727  017840  0EFE               	movlw	high STR_48
  8728  017842  6EE6               	movwf	postinc1,c
  8729  017844  0E01               	movlw	1
  8730  017846  6EE6               	movwf	postinc1,c
  8731  017848  0E00               	movlw	0
  8732  01784A  6EE6               	movwf	postinc1,c
  8733  01784C  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  8734  017850  0060  F0A3  FFE6   	movff	btemp,postinc1
  8735  017856  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8736  01785C  0E06               	movlw	6
  8737  01785E  6EE6               	movwf	postinc1,c
  8738  017860  EC10  F0CA         	call	_sprintf	;wreg free
  8739  017864                     l1664:
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8743  017864  0102               	movlb	2	; () banked
  8744  017866  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8745  017868  32E8               	rrcf	wreg,f,c
  8746  01786A  32E8               	rrcf	wreg,f,c
  8747  01786C  0B03               	andlw	3
  8748  01786E  0D24               	mullw	36
  8749  017870  0E12               	movlw	18
  8750  017872  26F3               	addwf	243,f,c
  8751  017874  0E00               	movlw	0
  8752  017876  22F4               	addwfc	244,f,c
  8753  017878  0E4B               	movlw	low _T
  8754  01787A  6E32               	movwf	(btemp+10)^0,c
  8755  01787C  0EFB               	movlw	high _T
  8756  01787E  6E33               	movwf	(btemp+11)^0,c
  8757  017880  50F3               	movf	243,w,c
  8758  017882  2632               	addwf	(btemp+10)^0,f,c
  8759  017884  50F4               	movf	244,w,c
  8760  017886  2233               	addwfc	(btemp+11)^0,f,c
  8761  017888  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  8762  01788E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  8763  017894  0EBD               	movlw	low STR_50
  8764  017896  6EE6               	movwf	postinc1,c
  8765  017898  0EFF               	movlw	high STR_50
  8766  01789A  6EE6               	movwf	postinc1,c
  8767  01789C  0E01               	movlw	1
  8768  01789E  6EE6               	movwf	postinc1,c
  8769  0178A0  0E01               	movlw	1
  8770  0178A2  6EE6               	movwf	postinc1,c
  8771  0178A4  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  8772  0178A8  0060  F0A3  FFE6   	movff	btemp,postinc1
  8773  0178AE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8774  0178B4  0E06               	movlw	6
  8775  0178B6  6EE6               	movwf	postinc1,c
  8776  0178B8  EC10  F0CA         	call	_sprintf	;wreg free
  8777                           
  8778                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8779  0178BC  0102               	movlb	2	; () banked
  8780  0178BE  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8781  0178C0  32E8               	rrcf	wreg,f,c
  8782  0178C2  32E8               	rrcf	wreg,f,c
  8783  0178C4  0B03               	andlw	3
  8784  0178C6  0D24               	mullw	36
  8785  0178C8  0E4B               	movlw	low _T
  8786  0178CA  6E32               	movwf	(btemp+10)^0,c
  8787  0178CC  0EFB               	movlw	high _T
  8788  0178CE  6E33               	movwf	(btemp+11)^0,c
  8789  0178D0  50F3               	movf	243,w,c
  8790  0178D2  2632               	addwf	(btemp+10)^0,f,c
  8791  0178D4  50F4               	movf	244,w,c
  8792  0178D6  2233               	addwfc	(btemp+11)^0,f,c
  8793  0178D8  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  8794  0178DE  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  8795  0178E4  0EBD               	movlw	low STR_50
  8796  0178E6  6EE6               	movwf	postinc1,c
  8797  0178E8  0EFF               	movlw	high STR_50
  8798  0178EA  6EE6               	movwf	postinc1,c
  8799  0178EC  0E01               	movlw	1
  8800  0178EE  6EE6               	movwf	postinc1,c
  8801  0178F0  0E02               	movlw	2
  8802  0178F2  6EE6               	movwf	postinc1,c
  8803  0178F4  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  8804  0178F8  0060  F0A3  FFE6   	movff	btemp,postinc1
  8805  0178FE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8806  017904  0E06               	movlw	6
  8807  017906  6EE6               	movwf	postinc1,c
  8808  017908  EC10  F0CA         	call	_sprintf	;wreg free
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;mconfig.c: 61:   V.help_id++;
  8812  01790C  EE20  F29B         	lfsr	2,_V+155	;volatile
  8813  017910  38DF               	swapf	223,w,c
  8814  017912  6E33               	movwf	(btemp+11)^0,c
  8815  017914  3233               	rrcf	(btemp+11)^0,f,c
  8816  017916  3033               	rrcf	(btemp+11)^0,w,c
  8817  017918  0B03               	andlw	3
  8818  01791A  6E33               	movwf	(btemp+11)^0,c
  8819  01791C  2A33               	incf	(btemp+11)^0,f,c
  8820  01791E  3A33               	swapf	(btemp+11)^0,f,c
  8821  017920  3633               	rlcf	(btemp+11)^0,f,c
  8822  017922  3633               	rlcf	(btemp+11)^0,f,c
  8823  017924  50DF               	movf	223,w,c
  8824  017926  1833               	xorwf	(btemp+11)^0,w,c
  8825  017928  0B3F               	andlw	-193
  8826  01792A  1833               	xorwf	(btemp+11)^0,w,c
  8827  01792C  6EDF               	movwf	223,c
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8831  01792E  0EB8               	movlw	184
  8832  017930  6EE6               	movwf	postinc1,c
  8833  017932  0E0B               	movlw	11
  8834  017934  6EE6               	movwf	postinc1,c
  8835  017936  0E09               	movlw	9
  8836  017938  6EE6               	movwf	postinc1,c
  8837  01793A  EC19  F0D6         	call	_StartTimer	;wreg free
  8838                           
  8839                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8840  01793E  0EB8               	movlw	184
  8841  017940  6EE6               	movwf	postinc1,c
  8842  017942  0E0B               	movlw	11
  8843  017944  6EE6               	movwf	postinc1,c
  8844  017946  0E07               	movlw	7
  8845  017948  6EE6               	movwf	postinc1,c
  8846  01794A  EC19  F0D6         	call	_StartTimer	;wreg free
  8847                           
  8848                           ;mconfig.c: 64:   mode_lamp_bright();
  8849  01794E  EC40  F0DB         	call	_mode_lamp_bright	;wreg free
  8850                           
  8851                           ;mconfig.c: 65:   update_lcd(1);
  8852  017952  0E01               	movlw	1
  8853  017954  6EE6               	movwf	postinc1,c
  8854  017956  EC01  F0C9         	call	_update_lcd	;wreg free
  8855                           
  8856                           ;mconfig.c: 67:  } else {
  8857  01795A  D032               	goto	l1665
  8858  01795C                     l12538:
  8859                           
  8860                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8861  01795C  0E09               	movlw	9
  8862  01795E  6EE6               	movwf	postinc1,c
  8863  017960  EC9B  F0D8         	call	_TimerDone	;wreg free
  8864  017964  5028               	movf	btemp^0,w,c
  8865  017966  B4D8               	btfsc	status,2,c
  8866  017968  D02B               	goto	l1665
  8867                           
  8868                           ;mconfig.c: 69:    set_vterm(0);
  8869  01796A  0E00               	movlw	0
  8870  01796C  6EE6               	movwf	postinc1,c
  8871  01796E  EC62  F0DA         	call	_set_vterm	;wreg free
  8872                           
  8873                           ;mconfig.c: 70:    V.help = 0;
  8874  017972  0102               	movlb	2	; () banked
  8875  017974  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  8876                           
  8877                           ; BSR set to: 2
  8878                           ;mconfig.c: 71:    set_display_info(display_help());
  8879  017976  EC7F  F0DB         	call	_display_help	;wreg free
  8880  01797A  5028               	movf	btemp^0,w,c
  8881  01797C  6EE6               	movwf	postinc1,c
  8882  01797E  EC71  F0DA         	call	_set_display_info	;wreg free
  8883                           
  8884                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8885  017982  0060  FA57  FFE6   	movff	_V+149,postinc1
  8886  017988  0060  FA5B  FFE6   	movff	_V+150,postinc1
  8887  01798E  ECD5  F0DA         	call	_mode_lamp_dim	;wreg free
  8888                           
  8889                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8890  017992  0E0B               	movlw	11
  8891  017994  6EE6               	movwf	postinc1,c
  8892  017996  EC9B  F0D8         	call	_TimerDone	;wreg free
  8893  01799A  5028               	movf	btemp^0,w,c
  8894  01799C  B4D8               	btfsc	status,2,c
  8895  01799E  D010               	goto	l1665
  8896                           
  8897                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8898  0179A0  0102               	movlb	2	; () banked
  8899  0179A2  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  8900  0179A4  A4D8               	btfss	status,2,c
  8901  0179A6  D002               	goto	u12090
  8902  0179A8  0E01               	movlw	1
  8903  0179AA  D001               	goto	u12100
  8904  0179AC                     u12090:
  8905  0179AC  0E00               	movlw	0
  8906  0179AE                     u12100:
  8907  0179AE  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  8908                           
  8909                           ; BSR set to: 2
  8910                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8911  0179B0  0EDC               	movlw	220
  8912  0179B2  6EE6               	movwf	postinc1,c
  8913  0179B4  0E05               	movlw	5
  8914  0179B6  6EE6               	movwf	postinc1,c
  8915  0179B8  0E0B               	movlw	11
  8916  0179BA  6EE6               	movwf	postinc1,c
  8917  0179BC  EC19  F0D6         	call	_StartTimer	;wreg free
  8918  0179C0                     l1665:
  8919                           
  8920                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8921  0179C0  52E5               	movf	postdec1,f,c
  8922  0179C2  0012               	return		;funcret
  8923  0179C4                     __end_of_check_help:
  8924                           	opt callstack 0
  8925                           
  8926 ;; *************** function _vterm_dump *****************
  8927 ;; Defined at:
  8928 ;;		line 121 in file "mconfig.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;		None
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;		None
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  1  [STACK] void 
  8935 ;; Registers used:
  8936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8937 ;; Tracked objects:
  8938 ;;		On entry : 3F/2
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8946 ;;Total ram usage:        0 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; Hardware stack levels required when called:   26
  8949 ;; This function calls:
  8950 ;;		_WaitMs
  8951 ;;		_eaDogM_WriteStringAtPos
  8952 ;;		_get_vterm_ptr
  8953 ;;		_sprintf
  8954 ;;		_wait_lcd_done
  8955 ;; This function is called by:
  8956 ;;		_check_help
  8957 ;; This function uses a reentrant model
  8958 ;;
  8959                           
  8960                           	psect	text29
  8961  018D84                     __ptext29:
  8962                           	opt callstack 0
  8963  018D84                     _vterm_dump:
  8964                           	opt callstack 3
  8965                           
  8966                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8967                           
  8968                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8969                           ;incstack = 0
  8970  018D84  0E01               	movlw	1
  8971  018D86  6EE6               	movwf	postinc1,c
  8972  018D88  0E00               	movlw	0
  8973  018D8A  6EE6               	movwf	postinc1,c
  8974  018D8C  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  8975  018D90  0060  F0A3  FFE6   	movff	btemp,postinc1
  8976  018D96  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8977  018D9C  0E00               	movlw	0
  8978  018D9E  6EE6               	movwf	postinc1,c
  8979  018DA0  0E00               	movlw	0
  8980  018DA2  6EE6               	movwf	postinc1,c
  8981  018DA4  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  8982  018DA8  0060  F0A3  FFE6   	movff	btemp,postinc1
  8983  018DAE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8984  018DB4  0E93               	movlw	low STR_52
  8985  018DB6  6EE6               	movwf	postinc1,c
  8986  018DB8  0EFF               	movlw	high STR_52
  8987  018DBA  6EE6               	movwf	postinc1,c
  8988  018DBC  0E01               	movlw	low (_V+1)
  8989  018DBE  6EE6               	movwf	postinc1,c
  8990  018DC0  0E02               	movlw	high (_V+1)
  8991  018DC2  6EE6               	movwf	postinc1,c
  8992  018DC4  0E08               	movlw	8
  8993  018DC6  6EE6               	movwf	postinc1,c
  8994  018DC8  EC10  F0CA         	call	_sprintf	;wreg free
  8995                           
  8996                           ; BSR set to: 0
  8997                           ;mconfig.c: 124:  wait_lcd_done();
  8998  018DCC  EC9E  F0DA         	call	_wait_lcd_done	;wreg free
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9002  018DD0  0E01               	movlw	low (_V+1)
  9003  018DD2  6EE6               	movwf	postinc1,c
  9004  018DD4  0E02               	movlw	high (_V+1)
  9005  018DD6  6EE6               	movwf	postinc1,c
  9006  018DD8  0E00               	movlw	0
  9007  018DDA  6EE6               	movwf	postinc1,c
  9008  018DDC  0E00               	movlw	0
  9009  018DDE  6EE6               	movwf	postinc1,c
  9010  018DE0  EC28  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9011                           
  9012                           ; BSR set to: 59
  9013                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9014  018DE4  0E01               	movlw	1
  9015  018DE6  6EE6               	movwf	postinc1,c
  9016  018DE8  0E01               	movlw	1
  9017  018DEA  6EE6               	movwf	postinc1,c
  9018  018DEC  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  9019  018DF0  0060  F0A3  FFE6   	movff	btemp,postinc1
  9020  018DF6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9021  018DFC  0E00               	movlw	0
  9022  018DFE  6EE6               	movwf	postinc1,c
  9023  018E00  0E01               	movlw	1
  9024  018E02  6EE6               	movwf	postinc1,c
  9025  018E04  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  9026  018E08  0060  F0A3  FFE6   	movff	btemp,postinc1
  9027  018E0E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9028  018E14  0E93               	movlw	low STR_52
  9029  018E16  6EE6               	movwf	postinc1,c
  9030  018E18  0EFF               	movlw	high STR_52
  9031  018E1A  6EE6               	movwf	postinc1,c
  9032  018E1C  0E01               	movlw	low (_V+1)
  9033  018E1E  6EE6               	movwf	postinc1,c
  9034  018E20  0E02               	movlw	high (_V+1)
  9035  018E22  6EE6               	movwf	postinc1,c
  9036  018E24  0E08               	movlw	8
  9037  018E26  6EE6               	movwf	postinc1,c
  9038  018E28  EC10  F0CA         	call	_sprintf	;wreg free
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;mconfig.c: 127:  wait_lcd_done();
  9042  018E2C  EC9E  F0DA         	call	_wait_lcd_done	;wreg free
  9043                           
  9044                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9045  018E30  0E01               	movlw	low (_V+1)
  9046  018E32  6EE6               	movwf	postinc1,c
  9047  018E34  0E02               	movlw	high (_V+1)
  9048  018E36  6EE6               	movwf	postinc1,c
  9049  018E38  0E00               	movlw	0
  9050  018E3A  6EE6               	movwf	postinc1,c
  9051  018E3C  0E01               	movlw	1
  9052  018E3E  6EE6               	movwf	postinc1,c
  9053  018E40  EC28  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9054                           
  9055                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9056  018E44  0E01               	movlw	1
  9057  018E46  6EE6               	movwf	postinc1,c
  9058  018E48  0E02               	movlw	2
  9059  018E4A  6EE6               	movwf	postinc1,c
  9060  018E4C  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  9061  018E50  0060  F0A3  FFE6   	movff	btemp,postinc1
  9062  018E56  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9063  018E5C  0E00               	movlw	0
  9064  018E5E  6EE6               	movwf	postinc1,c
  9065  018E60  0E02               	movlw	2
  9066  018E62  6EE6               	movwf	postinc1,c
  9067  018E64  ECF1  F0D7         	call	_get_vterm_ptr	;wreg free
  9068  018E68  0060  F0A3  FFE6   	movff	btemp,postinc1
  9069  018E6E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9070  018E74  0E93               	movlw	low STR_52
  9071  018E76  6EE6               	movwf	postinc1,c
  9072  018E78  0EFF               	movlw	high STR_52
  9073  018E7A  6EE6               	movwf	postinc1,c
  9074  018E7C  0E01               	movlw	low (_V+1)
  9075  018E7E  6EE6               	movwf	postinc1,c
  9076  018E80  0E02               	movlw	high (_V+1)
  9077  018E82  6EE6               	movwf	postinc1,c
  9078  018E84  0E08               	movlw	8
  9079  018E86  6EE6               	movwf	postinc1,c
  9080  018E88  EC10  F0CA         	call	_sprintf	;wreg free
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;mconfig.c: 130:  wait_lcd_done();
  9084  018E8C  EC9E  F0DA         	call	_wait_lcd_done	;wreg free
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9088  018E90  0E01               	movlw	low (_V+1)
  9089  018E92  6EE6               	movwf	postinc1,c
  9090  018E94  0E02               	movlw	high (_V+1)
  9091  018E96  6EE6               	movwf	postinc1,c
  9092  018E98  0E00               	movlw	0
  9093  018E9A  6EE6               	movwf	postinc1,c
  9094  018E9C  0E02               	movlw	2
  9095  018E9E  6EE6               	movwf	postinc1,c
  9096  018EA0  EC28  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9097                           
  9098                           ; BSR set to: 59
  9099                           ;mconfig.c: 132:  WaitMs(3000);
  9100  018EA4  0EB8               	movlw	184
  9101  018EA6  6EE6               	movwf	postinc1,c
  9102  018EA8  0E0B               	movlw	11
  9103  018EAA  6EE6               	movwf	postinc1,c
  9104  018EAC  EC0D  F0D7         	call	_WaitMs	;wreg free
  9105                           
  9106                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9107  018EB0  0012               	return		;funcret
  9108  018EB2                     __end_of_vterm_dump:
  9109                           	opt callstack 0
  9110                           
  9111 ;; *************** function _sprintf *****************
  9112 ;; Defined at:
  9113 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;  s               2  [STACK] PTR unsigned char 
  9116 ;;		 -> D.lcd(480), D(482), port_data(512), V(190), 
  9117 ;;  fmt             2  [STACK] PTR const unsigned char 
  9118 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
  9119 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9120 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9121 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9122 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9123 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9124 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9125 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9126 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  9127 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
  9128 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9129 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9130 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9131 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9132 ;;		 -> STR_2(15), STR_1(17), 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  f               6  [STACK] struct _IO_FILE
  9135 ;;  ap              2  [STACK] PTR void [1]
  9136 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9137 ;;  ret             2    0        int 
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  2  [STACK] int 
  9140 ;; Registers used:
  9141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/1
  9144 ;;		On exit  : 3F/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9151 ;;Total ram usage:        0 bytes
  9152 ;; Hardware stack levels used:    1
  9153 ;; Hardware stack levels required when called:   23
  9154 ;; This function calls:
  9155 ;;		_vfprintf
  9156 ;; This function is called by:
  9157 ;;		_main
  9158 ;;		_check_help
  9159 ;;		_vterm_dump
  9160 ;;		_calc_bsoc
  9161 ;; This function uses a reentrant model
  9162 ;;
  9163                           
  9164                           	psect	text30
  9165  019420                     __ptext30:
  9166                           	opt callstack 0
  9167  019420                     _sprintf:
  9168                           	opt callstack 0
  9169                           
  9170                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9171  019420  0E08               	movlw	8
  9172  019422  26E1               	addwf	fsr1l,f,c
  9173  019424  0E00               	movlw	0
  9174  019426  22E2               	addwfc	fsr1h,f,c
  9175                           
  9176                           ;incstack = 0
  9177 ;; hardware stack exceeded
  9178  019428  0EFE               	movlw	254
  9179  01942A  6E32               	movwf	(btemp+10)^0,c
  9180  01942C  0EFF               	movlw	255
  9181  01942E  6E33               	movwf	(btemp+11)^0,c
  9182                           
  9183                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9184  019430  0EF5               	movlw	245
  9185  019432  24E1               	addwf	fsr1l,w,c
  9186  019434  6E30               	movwf	(btemp+8)^0,c
  9187  019436  0EFF               	movlw	255
  9188  019438  20E2               	addwfc	fsr1h,w,c
  9189  01943A  6E31               	movwf	(btemp+9)^0,c
  9190  01943C  5032               	movf	(btemp+10)^0,w,c
  9191  01943E  2630               	addwf	(btemp+8)^0,f,c
  9192  019440  5033               	movf	(btemp+11)^0,w,c
  9193  019442  2231               	addwfc	(btemp+9)^0,f,c
  9194                           
  9195                           ;stkvar	_ap @ sp[(-8)+6]
  9196  019444  0EFF               	movlw	-1
  9197  019446  0060  F0C7  FFE3   	movff	btemp+9,plusw1
  9198  01944C  0EFE               	movlw	-2
  9199  01944E  0060  F0C3  FFE3   	movff	btemp+8,plusw1
  9200                           
  9201                           ;stkvar	_s @ sp[(-8)+-3]
  9202  019454  0EF5               	movlw	-11
  9203  019456  006F FF8C  F032    	movff	plusw1,btemp+10
  9204  01945C  0EF6               	movlw	-10
  9205  01945E  006F FF8C  F033    	movff	plusw1,btemp+11
  9206                           
  9207                           ;stkvar	_f @ sp[(-8)+0]
  9208  019464  0EF9               	movlw	-7
  9209  019466  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  9210  01946C  0EF8               	movlw	-8
  9211  01946E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
  9212                           
  9213                           ;stkvar	_f @ sp[(-8)+0]
  9214  019474  0EFA               	movlw	250
  9215  019476  24E1               	addwf	fsr1l,w,c
  9216  019478  6ED9               	movwf	fsr2l,c
  9217  01947A  0EFF               	movlw	255
  9218  01947C  20E2               	addwfc	fsr1h,w,c
  9219  01947E  6EDA               	movwf	fsr2h,c
  9220  019480  0E00               	movlw	0
  9221  019482  6EDE               	movwf	postinc2,c
  9222  019484  0E00               	movlw	0
  9223  019486  6EDD               	movwf	postdec2,c
  9224                           
  9225                           ;stkvar	_f @ sp[(-8)+0]
  9226  019488  0EFC               	movlw	252
  9227  01948A  24E1               	addwf	fsr1l,w,c
  9228  01948C  6ED9               	movwf	fsr2l,c
  9229  01948E  0EFF               	movlw	255
  9230  019490  20E2               	addwfc	fsr1h,w,c
  9231  019492  6EDA               	movwf	fsr2h,c
  9232  019494  0E00               	movlw	0
  9233  019496  6EDE               	movwf	postinc2,c
  9234  019498  0E00               	movlw	0
  9235  01949A  6EDD               	movwf	postdec2,c
  9236                           
  9237                           ;stkvar	_ap @ sp[(-8)+6]
  9238  01949C  0EFE               	movlw	254
  9239  01949E  24E1               	addwf	fsr1l,w,c
  9240  0194A0  6E28               	movwf	btemp^0,c
  9241  0194A2  0EFF               	movlw	255
  9242  0194A4  20E2               	addwfc	fsr1h,w,c
  9243  0194A6  6E29               	movwf	(btemp+1)^0,c
  9244  0194A8  0060  F0A3  FFE6   	movff	btemp,postinc1
  9245  0194AE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9246                           
  9247                           ;stkvar	_fmt @ sp[(-10)+-5]
  9248  0194B4  0EF1               	movlw	-15
  9249  0194B6  006F FF8F FFE6     	movff	plusw1,postinc1
  9250  0194BC  006F FF8F FFE6     	movff	plusw1,postinc1
  9251                           
  9252                           ;stkvar	_f @ sp[(-12)+0]
  9253  0194C2  0EF4               	movlw	244
  9254  0194C4  24E1               	addwf	fsr1l,w,c
  9255  0194C6  6E28               	movwf	btemp^0,c
  9256  0194C8  0EFF               	movlw	255
  9257  0194CA  20E2               	addwfc	fsr1h,w,c
  9258  0194CC  6E29               	movwf	(btemp+1)^0,c
  9259  0194CE  0060  F0A3  FFE6   	movff	btemp,postinc1
  9260  0194D4  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9261  0194DA  EC58  F0CE         	call	_vfprintf	;wreg free
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;stkvar	_f @ sp[(-8)+0]
  9265  0194DE  0EFA               	movlw	250
  9266  0194E0  24E1               	addwf	fsr1l,w,c
  9267  0194E2  6ED9               	movwf	fsr2l,c
  9268  0194E4  0EFF               	movlw	255
  9269  0194E6  20E2               	addwfc	fsr1h,w,c
  9270  0194E8  6EDA               	movwf	fsr2h,c
  9271  0194EA  006F FF78  F032    	movff	postinc2,btemp+10
  9272  0194F0  006F FF74  F033    	movff	postdec2,btemp+11
  9273                           
  9274                           ;stkvar	_s @ sp[(-8)+-3]
  9275  0194F6  0EF5               	movlw	-11
  9276  0194F8  006F FF8C  F030    	movff	plusw1,btemp+8
  9277  0194FE  0EF6               	movlw	-10
  9278  019500  006F FF8C  F031    	movff	plusw1,btemp+9
  9279  019506  5032               	movf	(btemp+10)^0,w,c
  9280  019508  2430               	addwf	(btemp+8)^0,w,c
  9281  01950A  6ED9               	movwf	fsr2l,c
  9282  01950C  5033               	movf	(btemp+11)^0,w,c
  9283  01950E  2031               	addwfc	(btemp+9)^0,w,c
  9284  019510  6EDA               	movwf	fsr2h,c
  9285  019512  0E00               	movlw	0
  9286  019514  6EDF               	movwf	indf2,c
  9287                           
  9288                           ; BSR set to: 0
  9289                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  9290  019516  0EF8               	movlw	248
  9291  019518  26E1               	addwf	fsr1l,f,c
  9292  01951A  0EFF               	movlw	255
  9293  01951C  22E2               	addwfc	fsr1h,f,c
  9294  01951E  52E5               	movf	postdec1,f,c
  9295  019520  50E7               	movf	indf1,w,c
  9296  019522  5EE1               	subwf	fsr1l,f,c
  9297  019524  0E00               	movlw	0
  9298  019526  5AE2               	subwfb	fsr1h,f,c
  9299  019528  0012               	return		;funcret
  9300  01952A                     __end_of_sprintf:
  9301                           	opt callstack 0
  9302                           
  9303 ;; *************** function _get_vterm_ptr *****************
  9304 ;; Defined at:
  9305 ;;		line 116 in file "mconfig.c"
  9306 ;; Parameters:    Size  Location     Type
  9307 ;;  line            1  [STACK] const unsigned char 
  9308 ;;  vterm           1  [STACK] const unsigned char 
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;		None
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  2  [STACK] PTR unsigned char 
  9313 ;; Registers used:
  9314 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/1
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9324 ;;Total ram usage:        0 bytes
  9325 ;; Hardware stack levels used:    1
  9326 ;; Hardware stack levels required when called:   15
  9327 ;; This function calls:
  9328 ;;		Nothing
  9329 ;; This function is called by:
  9330 ;;		_main
  9331 ;;		_check_help
  9332 ;;		_vterm_dump
  9333 ;; This function uses a reentrant model
  9334 ;;
  9335                           
  9336                           	psect	text31
  9337  01AFE2                     __ptext31:
  9338                           	opt callstack 0
  9339  01AFE2                     _get_vterm_ptr:
  9340                           	opt callstack 15
  9341                           
  9342                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9343                           ;stkvar	_vterm @ sp[(0)+-2]
  9344                           
  9345                           ; BSR set to: 0
  9346                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9347                           ;incstack = 0
  9348  01AFE2  0EFE               	movlw	-2
  9349  01AFE4  50E3               	movf	plusw1,w,c
  9350  01AFE6  0B03               	andlw	3
  9351  01AFE8  0D78               	mullw	120
  9352  01AFEA  0EFF               	movlw	low _D
  9353  01AFEC  6E28               	movwf	btemp^0,c
  9354  01AFEE  0E07               	movlw	high _D
  9355  01AFF0  6E29               	movwf	(btemp+1)^0,c
  9356  01AFF2  50F3               	movf	243,w,c
  9357  01AFF4  2628               	addwf	btemp^0,f,c
  9358  01AFF6  50F4               	movf	244,w,c
  9359  01AFF8  2229               	addwfc	(btemp+1)^0,f,c
  9360                           
  9361                           ;stkvar	_line @ sp[(0)+-1]
  9362  01AFFA  0EFF               	movlw	-1
  9363  01AFFC  50E3               	movf	plusw1,w,c
  9364  01AFFE  0B03               	andlw	3
  9365  01B000  0D28               	mullw	40
  9366  01B002  50F3               	movf	243,w,c
  9367  01B004  2628               	addwf	btemp^0,f,c
  9368  01B006  50F4               	movf	244,w,c
  9369  01B008  2229               	addwfc	(btemp+1)^0,f,c
  9370                           
  9371                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9372  01B00A  52E5               	movf	postdec1,f,c
  9373  01B00C  52E5               	movf	postdec1,f,c
  9374  01B00E  0012               	return		;funcret
  9375  01B010                     __end_of_get_vterm_ptr:
  9376                           	opt callstack 0
  9377                           
  9378 ;; *************** function _WaitMs *****************
  9379 ;; Defined at:
  9380 ;;		line 32 in file "timers.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;  numMilliseco    2  [STACK] const unsigned short 
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;		None
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  1  [STACK] void 
  9387 ;; Registers used:
  9388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/2
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9398 ;;Total ram usage:        0 bytes
  9399 ;; Hardware stack levels used:    1
  9400 ;; Hardware stack levels required when called:   16
  9401 ;; This function calls:
  9402 ;;		_StartTimer
  9403 ;;		_TimerDone
  9404 ;; This function is called by:
  9405 ;;		_main
  9406 ;;		_vterm_dump
  9407 ;; This function uses a reentrant model
  9408 ;;
  9409                           
  9410                           	psect	text32
  9411  01AE1A                     __ptext32:
  9412                           	opt callstack 0
  9413  01AE1A                     _WaitMs:
  9414                           	opt callstack 12
  9415                           
  9416                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9417                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9418                           
  9419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9420                           ;incstack = 0
  9421  01AE1A  0EFE               	movlw	-2
  9422  01AE1C  006F FF8F FFE6     	movff	plusw1,postinc1
  9423  01AE22  006F FF8F FFE6     	movff	plusw1,postinc1
  9424  01AE28  0E00               	movlw	0
  9425  01AE2A  6EE6               	movwf	postinc1,c
  9426  01AE2C  EC19  F0D6         	call	_StartTimer	;wreg free
  9427                           
  9428                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9429  01AE30  D005               	goto	l9482
  9430  01AE32                     l1596:
  9431                           
  9432                           ;timers.c: 36:   __nop();
  9433  01AE32  F000               	nop	
  9434                           
  9435                           ;timers.c: 37:   __nop();
  9436  01AE34  F000               	nop	
  9437                           
  9438                           ;timers.c: 38:   __nop();
  9439  01AE36  F000               	nop	
  9440                           
  9441                           ;timers.c: 39:   __nop();
  9442  01AE38  F000               	nop	
  9443  01AE3A  0004               	clrwdt		;# 
  9444  01AE3C                     l9482:
  9445                           
  9446                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9447  01AE3C  0E00               	movlw	0
  9448  01AE3E  6EE6               	movwf	postinc1,c
  9449  01AE40  EC9B  F0D8         	call	_TimerDone	;wreg free
  9450  01AE44  5028               	movf	btemp^0,w,c
  9451  01AE46  B4D8               	btfsc	status,2,c
  9452  01AE48  D7F4               	goto	l1596
  9453                           
  9454                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9455  01AE4A  52E5               	movf	postdec1,f,c
  9456  01AE4C  52E5               	movf	postdec1,f,c
  9457  01AE4E  0012               	return		;funcret
  9458  01AE50                     __end_of_WaitMs:
  9459                           	opt callstack 0
  9460                           
  9461 ;; *************** function _update_lcd *****************
  9462 ;; Defined at:
  9463 ;;		line 85 in file "mconfig.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;  vterm           1  [STACK] unsigned char 
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;		None
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  1  [STACK] unsigned char 
  9470 ;; Registers used:
  9471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9481 ;;Total ram usage:        0 bytes
  9482 ;; Hardware stack levels used:    1
  9483 ;; Hardware stack levels required when called:   26
  9484 ;; This function calls:
  9485 ;;		_eaDogM_WriteStringAtPos
  9486 ;;		_wait_lcd_done
  9487 ;; This function is called by:
  9488 ;;		_main
  9489 ;;		_check_help
  9490 ;; This function uses a reentrant model
  9491 ;;
  9492                           
  9493                           	psect	text33
  9494  019202                     __ptext33:
  9495                           	opt callstack 0
  9496  019202                     _update_lcd:
  9497                           	opt callstack 4
  9498                           
  9499                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9500                           ;stkvar	_vterm @ sp[(0)+-1]
  9501                           
  9502                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9503                           ;incstack = 0
  9504  019202  0EFF               	movlw	-1
  9505  019204  006F FF8C  F028    	movff	plusw1,btemp
  9506  01920A  0E03               	movlw	3
  9507  01920C  1628               	andwf	btemp^0,f,c
  9508  01920E  0EFF               	movlw	-1
  9509  019210  0060  F0A3  FFE3   	movff	btemp,plusw1
  9510                           
  9511                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9512  019216  EE22  F1DF         	lfsr	2,_D+480
  9513  01921A  A0DF               	btfss	indf2,0,c
  9514  01921C  D004               	goto	l12338
  9515                           
  9516                           ;stkvar	_vterm @ sp[(0)+-1]
  9517  01921E  0EFF               	movlw	-1
  9518  019220  50E3               	movf	plusw1,w,c
  9519  019222  B4D8               	btfsc	status,2,c
  9520  019224  D074               	goto	l1672
  9521  019226                     l12338:
  9522                           
  9523                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9524                           ;stkvar	_vterm @ sp[(0)+-1]
  9525  019226  0EFF               	movlw	-1
  9526  019228  50E3               	movf	plusw1,w,c
  9527  01922A  0D78               	mullw	120
  9528  01922C  0E0F               	movlw	low (_D+16)
  9529  01922E  24F3               	addwf	243,w,c
  9530  019230  6ED9               	movwf	fsr2l,c
  9531  019232  0E08               	movlw	high (_D+16)
  9532  019234  20F4               	addwfc	prodh,w,c
  9533  019236  6EDA               	movwf	fsr2h,c
  9534  019238  0E00               	movlw	0
  9535  01923A  6EDF               	movwf	indf2,c
  9536                           
  9537                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9538                           ;stkvar	_vterm @ sp[(0)+-1]
  9539  01923C  0EFF               	movlw	-1
  9540  01923E  50E3               	movf	plusw1,w,c
  9541  019240  0D78               	mullw	120
  9542  019242  0E37               	movlw	low (_D+56)
  9543  019244  24F3               	addwf	243,w,c
  9544  019246  6ED9               	movwf	fsr2l,c
  9545  019248  0E08               	movlw	high (_D+56)
  9546  01924A  20F4               	addwfc	prodh,w,c
  9547  01924C  6EDA               	movwf	fsr2h,c
  9548  01924E  0E00               	movlw	0
  9549  019250  6EDF               	movwf	indf2,c
  9550                           
  9551                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9552                           ;stkvar	_vterm @ sp[(0)+-1]
  9553  019252  0EFF               	movlw	-1
  9554  019254  50E3               	movf	plusw1,w,c
  9555  019256  0D78               	mullw	120
  9556  019258  0E5F               	movlw	low (_D+96)
  9557  01925A  24F3               	addwf	243,w,c
  9558  01925C  6ED9               	movwf	fsr2l,c
  9559  01925E  0E08               	movlw	high (_D+96)
  9560  019260  20F4               	addwfc	prodh,w,c
  9561  019262  6EDA               	movwf	fsr2h,c
  9562  019264  0E00               	movlw	0
  9563  019266  6EDF               	movwf	indf2,c
  9564                           
  9565                           ;mconfig.c: 95:  wait_lcd_done();
  9566  019268  EC9E  F0DA         	call	_wait_lcd_done	;wreg free
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9570                           ;stkvar	_vterm @ sp[(0)+-1]
  9571  01926C  0EFF               	movlw	-1
  9572  01926E  50E3               	movf	plusw1,w,c
  9573  019270  0D78               	mullw	120
  9574  019272  0EFF               	movlw	low _D
  9575  019274  6E32               	movwf	(btemp+10)^0,c
  9576  019276  0E07               	movlw	high _D
  9577  019278  6E33               	movwf	(btemp+11)^0,c
  9578  01927A  50F3               	movf	243,w,c
  9579  01927C  2632               	addwf	(btemp+10)^0,f,c
  9580  01927E  50F4               	movf	244,w,c
  9581  019280  2233               	addwfc	(btemp+11)^0,f,c
  9582  019282  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  9583  019288  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  9584  01928E  0E00               	movlw	0
  9585  019290  6EE6               	movwf	postinc1,c
  9586  019292  0E00               	movlw	0
  9587  019294  6EE6               	movwf	postinc1,c
  9588  019296  EC28  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9589                           
  9590                           ; BSR set to: 59
  9591                           ;mconfig.c: 97:  wait_lcd_done();
  9592  01929A  EC9E  F0DA         	call	_wait_lcd_done	;wreg free
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9596                           ;stkvar	_vterm @ sp[(0)+-1]
  9597  01929E  0EFF               	movlw	-1
  9598  0192A0  50E3               	movf	plusw1,w,c
  9599  0192A2  0D78               	mullw	120
  9600  0192A4  0EFF               	movlw	low _D
  9601  0192A6  6E32               	movwf	(btemp+10)^0,c
  9602  0192A8  0E07               	movlw	high _D
  9603  0192AA  6E33               	movwf	(btemp+11)^0,c
  9604  0192AC  0E28               	movlw	40
  9605  0192AE  2632               	addwf	(btemp+10)^0,f,c
  9606  0192B0  0E00               	movlw	0
  9607  0192B2  2233               	addwfc	(btemp+11)^0,f,c
  9608  0192B4  50F3               	movf	243,w,c
  9609  0192B6  2632               	addwf	(btemp+10)^0,f,c
  9610  0192B8  50F4               	movf	244,w,c
  9611  0192BA  2233               	addwfc	(btemp+11)^0,f,c
  9612  0192BC  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  9613  0192C2  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  9614  0192C8  0E00               	movlw	0
  9615  0192CA  6EE6               	movwf	postinc1,c
  9616  0192CC  0E01               	movlw	1
  9617  0192CE  6EE6               	movwf	postinc1,c
  9618  0192D0  EC28  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9619                           
  9620                           ; BSR set to: 59
  9621                           ;mconfig.c: 99:  wait_lcd_done();
  9622  0192D4  EC9E  F0DA         	call	_wait_lcd_done	;wreg free
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9626                           ;stkvar	_vterm @ sp[(0)+-1]
  9627  0192D8  0EFF               	movlw	-1
  9628  0192DA  50E3               	movf	plusw1,w,c
  9629  0192DC  0D78               	mullw	120
  9630  0192DE  0EFF               	movlw	low _D
  9631  0192E0  6E32               	movwf	(btemp+10)^0,c
  9632  0192E2  0E07               	movlw	high _D
  9633  0192E4  6E33               	movwf	(btemp+11)^0,c
  9634  0192E6  0E50               	movlw	80
  9635  0192E8  2632               	addwf	(btemp+10)^0,f,c
  9636  0192EA  0E00               	movlw	0
  9637  0192EC  2233               	addwfc	(btemp+11)^0,f,c
  9638  0192EE  50F3               	movf	243,w,c
  9639  0192F0  2632               	addwf	(btemp+10)^0,f,c
  9640  0192F2  50F4               	movf	244,w,c
  9641  0192F4  2233               	addwfc	(btemp+11)^0,f,c
  9642  0192F6  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  9643  0192FC  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  9644  019302  0E00               	movlw	0
  9645  019304  6EE6               	movwf	postinc1,c
  9646  019306  0E02               	movlw	2
  9647  019308  6EE6               	movwf	postinc1,c
  9648  01930A  EC28  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9649  01930E                     l1672:
  9650                           
  9651                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9652  01930E  52E5               	movf	postdec1,f,c
  9653  019310  0012               	return		;funcret
  9654  019312                     __end_of_update_lcd:
  9655                           	opt callstack 0
  9656                           
  9657 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9658 ;; Defined at:
  9659 ;;		line 278 in file "eadog.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;  r               1  [STACK] const unsigned char 
  9662 ;;  c               1  [STACK] const unsigned char 
  9663 ;;  strPtr          2  [STACK] PTR unsigned char 
  9664 ;;		 -> D.lcd(480), D(482), V(190), 
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;		None
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  1  [STACK] void 
  9669 ;; Registers used:
  9670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9671 ;; Tracked objects:
  9672 ;;		On entry : 3F/0
  9673 ;;		On exit  : 3F/3B
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9680 ;;Total ram usage:        0 bytes
  9681 ;; Hardware stack levels used:    1
  9682 ;; Hardware stack levels required when called:   25
  9683 ;; This function calls:
  9684 ;;		_eaDogM_WriteString
  9685 ;;		_send_lcd_cmd_dma
  9686 ;; This function is called by:
  9687 ;;		_update_lcd
  9688 ;;		_vterm_dump
  9689 ;; This function uses a reentrant model
  9690 ;;
  9691                           
  9692                           	psect	text34
  9693  01AE50                     __ptext34:
  9694                           	opt callstack 0
  9695  01AE50                     _eaDogM_WriteStringAtPos:
  9696                           	opt callstack 4
  9697                           
  9698                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9699                           ;stkvar	_c @ sp[(0)+-2]
  9700                           
  9701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9702                           ;incstack = 0
  9703  01AE50  0EFE               	movlw	-2
  9704  01AE52  006F FF8C  F033    	movff	plusw1,btemp+11
  9705                           
  9706                           ;stkvar	_r @ sp[(0)+-1]
  9707  01AE58  0EFF               	movlw	-1
  9708  01AE5A  50E3               	movf	plusw1,w,c
  9709  01AE5C  0D10               	mullw	16
  9710  01AE5E  50F3               	movf	243,w,c
  9711  01AE60  2433               	addwf	(btemp+11)^0,w,c
  9712  01AE62  0F80               	addlw	128
  9713  01AE64  6EE6               	movwf	postinc1,c
  9714  01AE66  EC3B  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  9715                           
  9716                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9717                           ;stkvar	_strPtr @ sp[(0)+-4]
  9718  01AE6A  0EFC               	movlw	-4
  9719  01AE6C  006F FF8F FFE6     	movff	plusw1,postinc1
  9720  01AE72  006F FF8F FFE6     	movff	plusw1,postinc1
  9721  01AE78  EC03  F0CF         	call	_eaDogM_WriteString	;wreg free
  9722                           
  9723                           ; BSR set to: 59
  9724                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9725  01AE7C  52E5               	movf	postdec1,f,c
  9726  01AE7E  52E5               	movf	postdec1,f,c
  9727  01AE80  52E5               	movf	postdec1,f,c
  9728  01AE82  52E5               	movf	postdec1,f,c
  9729  01AE84  0012               	return		;funcret
  9730  01AE86                     __end_of_eaDogM_WriteStringAtPos:
  9731                           	opt callstack 0
  9732                           
  9733 ;; *************** function _send_lcd_cmd_dma *****************
  9734 ;; Defined at:
  9735 ;;		line 220 in file "eadog.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;  strPtr          1  [STACK] unsigned char 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;		None
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  1  [STACK] void 
  9742 ;; Registers used:
  9743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/3D
  9746 ;;		On exit  : 3F/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9753 ;;Total ram usage:        0 bytes
  9754 ;; Hardware stack levels used:    1
  9755 ;; Hardware stack levels required when called:   24
  9756 ;; This function calls:
  9757 ;;		_printf
  9758 ;;		_ringBufS_flush
  9759 ;;		_start_lcd
  9760 ;;		_wait_lcd_done
  9761 ;;		_wait_lcd_set
  9762 ;; This function is called by:
  9763 ;;		_eaDogM_WriteCommand
  9764 ;;		_eaDogM_WriteStringAtPos
  9765 ;; This function uses a reentrant model
  9766 ;;
  9767                           
  9768                           	psect	text35
  9769  01A876                     __ptext35:
  9770                           	opt callstack 0
  9771  01A876                     _send_lcd_cmd_dma:
  9772                           	opt callstack 4
  9773                           
  9774                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9775                           
  9776                           ; BSR set to: 59
  9777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9778                           ;incstack = 0
  9779  01A876  EC8A  F0DB         	call	_wait_lcd_set	;wreg free
  9780                           
  9781                           ; BSR set to: 0
  9782                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9783  01A87A  0E00               	movlw	0
  9784  01A87C  6EE6               	movwf	postinc1,c
  9785  01A87E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9786  01A884  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9787  01A88A  EC86  F0D0         	call	_ringBufS_flush	;wreg free
  9788  01A88E  92BC               	bcf	188,1,c	;volatile
  9789  01A890  94BC               	bcf	188,2,c	;volatile
  9790                           
  9791                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9792  01A892  013B               	movlb	59	; () banked
  9793  01A894  9FFC               	bcf	252,7,b	;volatile
  9794                           
  9795                           ; BSR set to: 59
  9796                           ;eadog.c: 229:  DMA1SSZ = 1;
  9797  01A896  0E00               	movlw	0
  9798  01A898  6FF8               	movwf	248,b	;volatile
  9799  01A89A  0E01               	movlw	1
  9800  01A89C  6FF7               	movwf	247,b	;volatile
  9801                           
  9802                           ; BSR set to: 59
  9803                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9804  01A89E  8FFC               	bsf	252,7,b	;volatile
  9805                           
  9806                           ; BSR set to: 59
  9807                           ;eadog.c: 231:  printf("%c", strPtr);
  9808                           ;stkvar	_strPtr @ sp[(0)+-1]
  9809  01A8A0  0EFF               	movlw	-1
  9810  01A8A2  50E3               	movf	plusw1,w,c
  9811  01A8A4  6EE6               	movwf	postinc1,c
  9812  01A8A6  0E00               	movlw	0
  9813  01A8A8  6EE6               	movwf	postinc1,c
  9814  01A8AA  0EF8               	movlw	low STR_44
  9815  01A8AC  6EE6               	movwf	postinc1,c
  9816  01A8AE  0EFF               	movlw	high STR_44
  9817  01A8B0  6EE6               	movwf	postinc1,c
  9818  01A8B2  0E04               	movlw	4
  9819  01A8B4  6EE6               	movwf	postinc1,c
  9820  01A8B6  EC22  F0D3         	call	_printf	;wreg free
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;eadog.c: 232:  start_lcd();
  9824  01A8BA  EC8D  F0DB         	call	_start_lcd	;wreg free
  9825                           
  9826                           ; BSR set to: 59
  9827                           ;eadog.c: 233:  wait_lcd_done();
  9828  01A8BE  EC9E  F0DA         	call	_wait_lcd_done	;wreg free
  9829                           
  9830                           ; BSR set to: 0
  9831  01A8C2  82BC               	bsf	188,1,c	;volatile
  9832                           
  9833                           ; BSR set to: 0
  9834                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9835  01A8C4  52E5               	movf	postdec1,f,c
  9836  01A8C6  0012               	return		;funcret
  9837  01A8C8                     __end_of_send_lcd_cmd_dma:
  9838                           	opt callstack 0
  9839                           
  9840 ;; *************** function _wait_lcd_done *****************
  9841 ;; Defined at:
  9842 ;;		line 156 in file "eadog.c"
  9843 ;; Parameters:    Size  Location     Type
  9844 ;;		None
  9845 ;; Auto vars:     Size  Location     Type
  9846 ;;		None
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  1  [STACK] void 
  9849 ;; Registers used:
  9850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 3F/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9860 ;;Total ram usage:        0 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:   16
  9863 ;; This function calls:
  9864 ;;		_wdtdelay
  9865 ;; This function is called by:
  9866 ;;		_send_lcd_cmd_dma
  9867 ;;		_update_lcd
  9868 ;;		_vterm_dump
  9869 ;; This function uses a reentrant model
  9870 ;;
  9871                           
  9872                           	psect	text36
  9873  01B53C                     __ptext36:
  9874                           	opt callstack 0
  9875  01B53C                     _wait_lcd_done:
  9876                           	opt callstack 13
  9877                           
  9878                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9879                           
  9880                           ; BSR set to: 0
  9881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9882                           ;incstack = 0
  9883  01B53C  0100               	movlb	0	; () banked
  9884  01B53E  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9885  01B540  D7FD               	goto	_wait_lcd_done
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;eadog.c: 159:  wdtdelay(50);
  9889  01B542  0E32               	movlw	50
  9890  01B544  6EE6               	movwf	postinc1,c
  9891  01B546  0E00               	movlw	0
  9892  01B548  6EE6               	movwf	postinc1,c
  9893  01B54A  0E00               	movlw	0
  9894  01B54C  6EE6               	movwf	postinc1,c
  9895  01B54E  0E00               	movlw	0
  9896  01B550  6EE6               	movwf	postinc1,c
  9897  01B552  ECB3  F0D3         	call	_wdtdelay	;wreg free
  9898                           
  9899                           ; BSR set to: 0
  9900                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9901  01B556  0012               	return		;funcret
  9902  01B558                     __end_of_wait_lcd_done:
  9903                           	opt callstack 0
  9904                           
  9905 ;; *************** function _wdtdelay *****************
  9906 ;; Defined at:
  9907 ;;		line 23 in file "eadog.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;  delay           4  [STACK] const unsigned long 
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;		None
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  1  [STACK] void 
  9914 ;; Registers used:
  9915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 3F/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9925 ;;Total ram usage:        0 bytes
  9926 ;; Hardware stack levels used:    1
  9927 ;; Hardware stack levels required when called:   15
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		_init_display
  9932 ;;		_send_lcd_cmd
  9933 ;;		_send_lcd_cmd_long
  9934 ;;		_wait_lcd_done
  9935 ;; This function uses a reentrant model
  9936 ;;
  9937                           
  9938                           	psect	text37
  9939  01A766                     __ptext37:
  9940                           	opt callstack 0
  9941  01A766                     _wdtdelay:
  9942                           	opt callstack 13
  9943                           
  9944                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9945                           
  9946                           ; BSR set to: 0
  9947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9948                           ;incstack = 0
  9949  01A766  0100               	movlb	0	; () banked
  9950  01A768  6B9A               	clrf	wdtdelay@dcount& (0+255),b
  9951  01A76A  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9952  01A76C  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9953  01A76E  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9954  01A770                     l1437:
  9955                           
  9956                           ; BSR set to: 0
  9957                           ;eadog.c: 28:   __nop();
  9958  01A770  F000               	nop	
  9959  01A772  0004               	clrwdt		;# 
  9960                           
  9961                           ;eadog.c: 30:  };
  9962  01A774  0E01               	movlw	1
  9963  01A776  0100               	movlb	0	; () banked
  9964  01A778  279A               	addwf	wdtdelay@dcount& (0+255),f,b
  9965  01A77A  0E00               	movlw	0
  9966  01A77C  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9967  01A77E  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9968  01A780  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;stkvar	_delay @ sp[(0)+-4]
  9972  01A782  0EFC               	movlw	-4
  9973  01A784  006F FF8C  F028    	movff	plusw1,btemp
  9974  01A78A  519A               	movf	wdtdelay@dcount& (0+255),w,b
  9975  01A78C  5C28               	subwf	btemp^0,w,c
  9976  01A78E  0EFD               	movlw	-3
  9977  01A790  006F FF8C  F028    	movff	plusw1,btemp
  9978  01A796  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9979  01A798  5828               	subwfb	btemp^0,w,c
  9980  01A79A  0EFE               	movlw	-2
  9981  01A79C  006F FF8C  F028    	movff	plusw1,btemp
  9982  01A7A2  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9983  01A7A4  5828               	subwfb	btemp^0,w,c
  9984  01A7A6  0EFF               	movlw	-1
  9985  01A7A8  006F FF8C  F028    	movff	plusw1,btemp
  9986  01A7AE  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9987  01A7B0  5828               	subwfb	btemp^0,w,c
  9988  01A7B2  B0D8               	btfsc	status,0,c
  9989  01A7B4  D7DD               	goto	l1437
  9990                           
  9991                           ; BSR set to: 0
  9992                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9993  01A7B6  52E5               	movf	postdec1,f,c
  9994  01A7B8  52E5               	movf	postdec1,f,c
  9995  01A7BA  52E5               	movf	postdec1,f,c
  9996  01A7BC  52E5               	movf	postdec1,f,c
  9997  01A7BE  0012               	return		;funcret
  9998  01A7C0                     __end_of_wdtdelay:
  9999                           	opt callstack 0
 10000                           
 10001 ;; *************** function _eaDogM_WriteString *****************
 10002 ;; Defined at:
 10003 ;;		line 199 in file "eadog.c"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;  strPtr          2  [STACK] PTR unsigned char 
 10006 ;;		 -> D.lcd(480), D(482), V(190), 
 10007 ;; Auto vars:     Size  Location     Type
 10008 ;;		None
 10009 ;; Return value:  Size  Location     Type
 10010 ;;                  1  [STACK] void 
 10011 ;; Registers used:
 10012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10013 ;; Tracked objects:
 10014 ;;		On entry : 3F/0
 10015 ;;		On exit  : 3F/3B
 10016 ;;		Unchanged: 0/0
 10017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10022 ;;Total ram usage:        0 bytes
 10023 ;; Hardware stack levels used:    1
 10024 ;; Hardware stack levels required when called:   24
 10025 ;; This function calls:
 10026 ;;		_printf
 10027 ;;		_ringBufS_flush
 10028 ;;		_start_lcd
 10029 ;;		_strlen
 10030 ;;		_wait_lcd_set
 10031 ;; This function is called by:
 10032 ;;		_eaDogM_WriteStringAtPos
 10033 ;; This function uses a reentrant model
 10034 ;;
 10035                           
 10036                           	psect	text38
 10037  019E06                     __ptext38:
 10038                           	opt callstack 0
 10039  019E06                     _eaDogM_WriteString:
 10040                           	opt callstack 4
 10041                           
 10042                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10043                           
 10044                           ; BSR set to: 0
 10045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10046                           ;incstack = 0
 10047  019E06  EC8A  F0DB         	call	_wait_lcd_set	;wreg free
 10048                           
 10049                           ; BSR set to: 0
 10050                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10051  019E0A  0E00               	movlw	0
 10052  019E0C  6EE6               	movwf	postinc1,c
 10053  019E0E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10054  019E14  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10055  019E1A  EC86  F0D0         	call	_ringBufS_flush	;wreg free
 10056  019E1E  94BC               	bcf	188,2,c	;volatile
 10057                           
 10058                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10059                           ;stkvar	_strPtr @ sp[(0)+-2]
 10060  019E20  0EFE               	movlw	-2
 10061  019E22  006F FF8F FFE6     	movff	plusw1,postinc1
 10062  019E28  006F FF8F FFE6     	movff	plusw1,postinc1
 10063  019E2E  EC56  F0CF         	call	_strlen	;wreg free
 10064  019E32  5029               	movf	(btemp+1)^0,w,c
 10065  019E34  E104               	bnz	u11880
 10066  019E36  0E41               	movlw	65
 10067  019E38  5C28               	subwf	btemp^0,w,c
 10068  019E3A  A0D8               	btfss	status,0,c
 10069  019E3C  D010               	goto	l12292
 10070  019E3E                     u11880:
 10071                           
 10072                           ;stkvar	_strPtr @ sp[(0)+-2]
 10073  019E3E  0EFE               	movlw	-2
 10074  019E40  006F FF8C  F032    	movff	plusw1,btemp+10
 10075  019E46  0EFF               	movlw	-1
 10076  019E48  006F FF8C  F033    	movff	plusw1,btemp+11
 10077  019E4E  0E40               	movlw	64
 10078  019E50  2432               	addwf	(btemp+10)^0,w,c
 10079  019E52  6ED9               	movwf	fsr2l,c
 10080  019E54  0E00               	movlw	0
 10081  019E56  2033               	addwfc	(btemp+11)^0,w,c
 10082  019E58  6EDA               	movwf	fsr2h,c
 10083  019E5A  0E00               	movlw	0
 10084  019E5C  6EDF               	movwf	indf2,c
 10085  019E5E                     l12292:
 10086                           
 10087                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10088  019E5E  013B               	movlb	59	; () banked
 10089  019E60  9FFC               	bcf	252,7,b	;volatile
 10090                           
 10091                           ; BSR set to: 59
 10092                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10093                           ;stkvar	_strPtr @ sp[(0)+-2]
 10094  019E62  0EFE               	movlw	-2
 10095  019E64  006F FF8F FFE6     	movff	plusw1,postinc1
 10096  019E6A  006F FF8F FFE6     	movff	plusw1,postinc1
 10097  019E70  EC56  F0CF         	call	_strlen	;wreg free
 10098  019E74  0060  F0A3  FBF7   	movff	btemp,15351	;volatile
 10099  019E7A  0060  F0A7  FBF8   	movff	btemp+1,15352	;volatile
 10100                           
 10101                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10102  019E80  013B               	movlb	59	; () banked
 10103  019E82  8FFC               	bsf	252,7,b	;volatile
 10104                           
 10105                           ; BSR set to: 59
 10106                           ;eadog.c: 210:  printf("%s", strPtr);
 10107                           ;stkvar	_strPtr @ sp[(0)+-2]
 10108  019E84  0EFE               	movlw	-2
 10109  019E86  006F FF8F FFE6     	movff	plusw1,postinc1
 10110  019E8C  006F FF8F FFE6     	movff	plusw1,postinc1
 10111  019E92  0EFB               	movlw	low STR_43
 10112  019E94  6EE6               	movwf	postinc1,c
 10113  019E96  0EFF               	movlw	high STR_43
 10114  019E98  6EE6               	movwf	postinc1,c
 10115  019E9A  0E04               	movlw	4
 10116  019E9C  6EE6               	movwf	postinc1,c
 10117  019E9E  EC22  F0D3         	call	_printf	;wreg free
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;eadog.c: 211:  start_lcd();
 10121  019EA2  EC8D  F0DB         	call	_start_lcd	;wreg free
 10122                           
 10123                           ; BSR set to: 59
 10124                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10125  019EA6  52E5               	movf	postdec1,f,c
 10126  019EA8  52E5               	movf	postdec1,f,c
 10127  019EAA  0012               	return		;funcret
 10128  019EAC                     __end_of_eaDogM_WriteString:
 10129                           	opt callstack 0
 10130                           
 10131 ;; *************** function _wait_lcd_set *****************
 10132 ;; Defined at:
 10133 ;;		line 146 in file "eadog.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;		None
 10136 ;; Auto vars:     Size  Location     Type
 10137 ;;		None
 10138 ;; Return value:  Size  Location     Type
 10139 ;;                  1  [STACK] void 
 10140 ;; Registers used:
 10141 ;;		None
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/3D
 10144 ;;		On exit  : 3F/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10151 ;;Total ram usage:        0 bytes
 10152 ;; Hardware stack levels used:    1
 10153 ;; Hardware stack levels required when called:   15
 10154 ;; This function calls:
 10155 ;;		Nothing
 10156 ;; This function is called by:
 10157 ;;		_eaDogM_WriteString
 10158 ;;		_send_lcd_cmd_dma
 10159 ;; This function uses a reentrant model
 10160 ;;
 10161                           
 10162                           	psect	text39
 10163  01B714                     __ptext39:
 10164                           	opt callstack 0
 10165  01B714                     _wait_lcd_set:
 10166                           	opt callstack 12
 10167                           
 10168                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10169                           
 10170                           ; BSR set to: 59
 10171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10172                           ;incstack = 0
 10173  01B714  0100               	movlb	0	; () banked
 10174  01B716  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10175                           
 10176                           ; BSR set to: 0
 10177                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10178  01B718  0012               	return		;funcret
 10179  01B71A                     __end_of_wait_lcd_set:
 10180                           	opt callstack 0
 10181                           
 10182 ;; *************** function _start_lcd *****************
 10183 ;; Defined at:
 10184 ;;		line 141 in file "eadog.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;		None
 10187 ;; Auto vars:     Size  Location     Type
 10188 ;;		None
 10189 ;; Return value:  Size  Location     Type
 10190 ;;                  1  [STACK] void 
 10191 ;; Registers used:
 10192 ;;		None
 10193 ;; Tracked objects:
 10194 ;;		On entry : 3F/0
 10195 ;;		On exit  : 3F/3B
 10196 ;;		Unchanged: 0/0
 10197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10202 ;;Total ram usage:        0 bytes
 10203 ;; Hardware stack levels used:    1
 10204 ;; Hardware stack levels required when called:   15
 10205 ;; This function calls:
 10206 ;;		Nothing
 10207 ;; This function is called by:
 10208 ;;		_eaDogM_WriteString
 10209 ;;		_send_lcd_cmd_dma
 10210 ;; This function uses a reentrant model
 10211 ;;
 10212                           
 10213                           	psect	text40
 10214  01B71A                     __ptext40:
 10215                           	opt callstack 0
 10216  01B71A                     _start_lcd:
 10217                           	opt callstack 12
 10218                           
 10219                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10220                           
 10221                           ; BSR set to: 0
 10222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10223                           ;incstack = 0
 10224  01B71A  013B               	movlb	59	; () banked
 10225  01B71C  8DFC               	bsf	252,6,b	;volatile
 10226                           
 10227                           ; BSR set to: 59
 10228                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10229  01B71E  0012               	return		;funcret
 10230  01B720                     __end_of_start_lcd:
 10231                           	opt callstack 0
 10232                           
 10233 ;; *************** function _ringBufS_flush *****************
 10234 ;; Defined at:
 10235 ;;		line 76 in file "ringbufs.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10238 ;;		 -> ring_buf1(67), 
 10239 ;;  clearBuffer     1  [STACK] const char 
 10240 ;; Auto vars:     Size  Location     Type
 10241 ;;		None
 10242 ;; Return value:  Size  Location     Type
 10243 ;;                  1  [STACK] void 
 10244 ;; Registers used:
 10245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10246 ;; Tracked objects:
 10247 ;;		On entry : 3F/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10255 ;;Total ram usage:        0 bytes
 10256 ;; Hardware stack levels used:    1
 10257 ;; Hardware stack levels required when called:   16
 10258 ;; This function calls:
 10259 ;;		_memset
 10260 ;; This function is called by:
 10261 ;;		_eaDogM_WriteString
 10262 ;;		_send_lcd_cmd_dma
 10263 ;; This function uses a reentrant model
 10264 ;;
 10265                           
 10266                           	psect	text41
 10267  01A10C                     __ptext41:
 10268                           	opt callstack 0
 10269  01A10C                     _ringBufS_flush:
 10270                           	opt callstack 11
 10271                           
 10272                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10273                           ;stkvar	__this @ sp[(0)+-2]
 10274                           
 10275                           ; BSR set to: 59
 10276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10277                           ;incstack = 0
 10278  01A10C  0EFE               	movlw	-2
 10279  01A10E  006F FF8C  F032    	movff	plusw1,btemp+10
 10280  01A114  0EFF               	movlw	-1
 10281  01A116  006F FF8C  F033    	movff	plusw1,btemp+11
 10282  01A11C  0E42               	movlw	66
 10283  01A11E  2432               	addwf	(btemp+10)^0,w,c
 10284  01A120  6ED9               	movwf	fsr2l,c
 10285  01A122  0E00               	movlw	0
 10286  01A124  2033               	addwfc	(btemp+11)^0,w,c
 10287  01A126  6EDA               	movwf	fsr2h,c
 10288  01A128  0E00               	movlw	0
 10289  01A12A  6EDF               	movwf	indf2,c
 10290                           
 10291                           ;ringbufs.c: 79:  _this->head = 0;
 10292                           ;stkvar	__this @ sp[(0)+-2]
 10293  01A12C  0EFE               	movlw	-2
 10294  01A12E  006F FF8C  F032    	movff	plusw1,btemp+10
 10295  01A134  0EFF               	movlw	-1
 10296  01A136  006F FF8C  F033    	movff	plusw1,btemp+11
 10297  01A13C  0E40               	movlw	64
 10298  01A13E  2432               	addwf	(btemp+10)^0,w,c
 10299  01A140  6ED9               	movwf	fsr2l,c
 10300  01A142  0E00               	movlw	0
 10301  01A144  2033               	addwfc	(btemp+11)^0,w,c
 10302  01A146  6EDA               	movwf	fsr2h,c
 10303  01A148  0E00               	movlw	0
 10304  01A14A  6EDF               	movwf	indf2,c
 10305                           
 10306                           ;ringbufs.c: 80:  _this->tail = 0;
 10307                           ;stkvar	__this @ sp[(0)+-2]
 10308  01A14C  0EFE               	movlw	-2
 10309  01A14E  006F FF8C  F032    	movff	plusw1,btemp+10
 10310  01A154  0EFF               	movlw	-1
 10311  01A156  006F FF8C  F033    	movff	plusw1,btemp+11
 10312  01A15C  0E41               	movlw	65
 10313  01A15E  2432               	addwf	(btemp+10)^0,w,c
 10314  01A160  6ED9               	movwf	fsr2l,c
 10315  01A162  0E00               	movlw	0
 10316  01A164  2033               	addwfc	(btemp+11)^0,w,c
 10317  01A166  6EDA               	movwf	fsr2h,c
 10318  01A168  0E00               	movlw	0
 10319  01A16A  6EDF               	movwf	indf2,c
 10320                           
 10321                           ;ringbufs.c: 81:  if (clearBuffer) {
 10322                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10323  01A16C  0EFD               	movlw	-3
 10324  01A16E  50E3               	movf	plusw1,w,c
 10325  01A170  B4D8               	btfsc	status,2,c
 10326  01A172  D011               	goto	l1581
 10327                           
 10328                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10329  01A174  0E40               	movlw	64
 10330  01A176  6EE6               	movwf	postinc1,c
 10331  01A178  0E00               	movlw	0
 10332  01A17A  6EE6               	movwf	postinc1,c
 10333  01A17C  0E00               	movlw	0
 10334  01A17E  6EE6               	movwf	postinc1,c
 10335  01A180  0E00               	movlw	0
 10336  01A182  6EE6               	movwf	postinc1,c
 10337                           
 10338                           ;stkvar	__this @ sp[(-4)+-2]
 10339  01A184  0EFA               	movlw	-6
 10340  01A186  006F FF8F FFE6     	movff	plusw1,postinc1
 10341  01A18C  006F FF8F FFE6     	movff	plusw1,postinc1
 10342  01A192  ECFA  F0B2         	call	_memset	;wreg free
 10343  01A196                     l1581:
 10344                           
 10345                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10346  01A196  52E5               	movf	postdec1,f,c
 10347  01A198  52E5               	movf	postdec1,f,c
 10348  01A19A  52E5               	movf	postdec1,f,c
 10349  01A19C  0012               	return		;funcret
 10350  01A19E                     __end_of_ringBufS_flush:
 10351                           	opt callstack 0
 10352                           
 10353 ;; *************** function _memset *****************
 10354 ;; Defined at:
 10355 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;  dest            2  [STACK] PTR void 
 10358 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10359 ;;  c               2  [STACK] int 
 10360 ;;  n               2  [STACK] unsigned int 
 10361 ;; Auto vars:     Size  Location     Type
 10362 ;;  s               2  [STACK] PTR unsigned char 
 10363 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10364 ;;  k               2  [STACK] unsigned int 
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  2  [STACK] PTR void 
 10367 ;; Registers used:
 10368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10378 ;;Total ram usage:        0 bytes
 10379 ;; Hardware stack levels used:    1
 10380 ;; Hardware stack levels required when called:   15
 10381 ;; This function calls:
 10382 ;;		Nothing
 10383 ;; This function is called by:
 10384 ;;		_ringBufS_init
 10385 ;;		_ringBufS_flush
 10386 ;; This function uses a reentrant model
 10387 ;;
 10388                           
 10389                           	psect	text42
 10390  0165F4                     __ptext42:
 10391                           	opt callstack 0
 10392  0165F4                     _memset:
 10393                           	opt callstack 0
 10394                           
 10395                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10396  0165F4  52E6               	movf	postinc1,f,c
 10397  0165F6  52E6               	movf	postinc1,f,c
 10398  0165F8  52E6               	movf	postinc1,f,c
 10399  0165FA  52E6               	movf	postinc1,f,c
 10400                           
 10401                           ;stkvar	_dest @ sp[(-4)+-2]
 10402                           
 10403                           ;incstack = 0
 10404  0165FC  0EFA               	movlw	-6
 10405  0165FE  006F FF8C  F032    	movff	plusw1,btemp+10
 10406  016604  0EFB               	movlw	-5
 10407  016606  006F FF8C  F033    	movff	plusw1,btemp+11
 10408                           
 10409                           ;stkvar	_s @ sp[(-4)+0]
 10410  01660C  0EFD               	movlw	-3
 10411  01660E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10412  016614  0EFC               	movlw	-4
 10413  016616  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10414                           
 10415                           ;stkvar	_n @ sp[(-4)+-6]
 10416  01661C  0EF6               	movlw	-10
 10417  01661E  006F FF8C  F028    	movff	plusw1,btemp
 10418  016624  0EF7               	movlw	-9
 10419  016626  50E3               	movf	plusw1,w,c
 10420  016628  1028               	iorwf	btemp^0,w,c
 10421  01662A  B4D8               	btfsc	status,2,c
 10422  01662C  D154               	goto	u10490
 10423                           
 10424                           ;stkvar	_c @ sp[(-4)+-4]
 10425                           ;stkvar	_s @ sp[(-4)+0]
 10426  01662E  0EFC               	movlw	-4
 10427  016630  006F FF8F FFD9     	movff	plusw1,fsr2l
 10428  016636  0EFD               	movlw	-3
 10429  016638  006F FF8F FFDA     	movff	plusw1,fsr2h
 10430  01663E  0EF8               	movlw	-8
 10431  016640  006F FF8F FFDF     	movff	plusw1,indf2
 10432                           
 10433                           ;stkvar	_c @ sp[(-4)+-4]
 10434                           ;stkvar	_n @ sp[(-4)+-6]
 10435                           ;stkvar	_s @ sp[(-4)+0]
 10436  016646  0EFC               	movlw	-4
 10437  016648  006F FF8C  F032    	movff	plusw1,btemp+10
 10438  01664E  0EFD               	movlw	-3
 10439  016650  006F FF8C  F033    	movff	plusw1,btemp+11
 10440  016656  0EF6               	movlw	-10
 10441  016658  50E3               	movf	plusw1,w,c
 10442  01665A  2632               	addwf	(btemp+10)^0,f,c
 10443  01665C  0EF7               	movlw	-9
 10444  01665E  50E3               	movf	plusw1,w,c
 10445  016660  2233               	addwfc	(btemp+11)^0,f,c
 10446  016662  0EFF               	movlw	255
 10447  016664  2432               	addwf	(btemp+10)^0,w,c
 10448  016666  6ED9               	movwf	fsr2l,c
 10449  016668  0EFF               	movlw	255
 10450  01666A  2033               	addwfc	(btemp+11)^0,w,c
 10451  01666C  6EDA               	movwf	fsr2h,c
 10452  01666E  0EF8               	movlw	-8
 10453  016670  006F FF8F FFDF     	movff	plusw1,indf2
 10454                           
 10455                           ;stkvar	_n @ sp[(-4)+-6]
 10456  016676  0EF7               	movlw	-9
 10457  016678  50E3               	movf	plusw1,w,c
 10458  01667A  E108               	bnz	l11464
 10459  01667C  0EF6               	movlw	-10
 10460  01667E  006F FF8C  F028    	movff	plusw1,btemp
 10461  016684  0E03               	movlw	3
 10462  016686  5E28               	subwf	btemp^0,f,c
 10463  016688  A0D8               	btfss	status,0,c
 10464  01668A  D125               	goto	u10490
 10465  01668C                     l11464:
 10466                           
 10467                           ;stkvar	_c @ sp[(-4)+-4]
 10468                           ;stkvar	_s @ sp[(-4)+0]
 10469  01668C  0EFC               	movlw	-4
 10470  01668E  006F FF8C  F032    	movff	plusw1,btemp+10
 10471  016694  0EFD               	movlw	-3
 10472  016696  006F FF8C  F033    	movff	plusw1,btemp+11
 10473  01669C  0E01               	movlw	1
 10474  01669E  2432               	addwf	(btemp+10)^0,w,c
 10475  0166A0  6ED9               	movwf	fsr2l,c
 10476  0166A2  0E00               	movlw	0
 10477  0166A4  2033               	addwfc	(btemp+11)^0,w,c
 10478  0166A6  6EDA               	movwf	fsr2h,c
 10479  0166A8  0EF8               	movlw	-8
 10480  0166AA  006F FF8F FFDF     	movff	plusw1,indf2
 10481                           
 10482                           ;stkvar	_c @ sp[(-4)+-4]
 10483                           ;stkvar	_s @ sp[(-4)+0]
 10484  0166B0  0EFC               	movlw	-4
 10485  0166B2  006F FF8C  F032    	movff	plusw1,btemp+10
 10486  0166B8  0EFD               	movlw	-3
 10487  0166BA  006F FF8C  F033    	movff	plusw1,btemp+11
 10488  0166C0  0E02               	movlw	2
 10489  0166C2  2432               	addwf	(btemp+10)^0,w,c
 10490  0166C4  6ED9               	movwf	fsr2l,c
 10491  0166C6  0E00               	movlw	0
 10492  0166C8  2033               	addwfc	(btemp+11)^0,w,c
 10493  0166CA  6EDA               	movwf	fsr2h,c
 10494  0166CC  0EF8               	movlw	-8
 10495  0166CE  006F FF8F FFDF     	movff	plusw1,indf2
 10496                           
 10497                           ;stkvar	_c @ sp[(-4)+-4]
 10498                           ;stkvar	_n @ sp[(-4)+-6]
 10499                           ;stkvar	_s @ sp[(-4)+0]
 10500  0166D4  0EFC               	movlw	-4
 10501  0166D6  006F FF8C  F032    	movff	plusw1,btemp+10
 10502  0166DC  0EFD               	movlw	-3
 10503  0166DE  006F FF8C  F033    	movff	plusw1,btemp+11
 10504  0166E4  0EF6               	movlw	-10
 10505  0166E6  50E3               	movf	plusw1,w,c
 10506  0166E8  2632               	addwf	(btemp+10)^0,f,c
 10507  0166EA  0EF7               	movlw	-9
 10508  0166EC  50E3               	movf	plusw1,w,c
 10509  0166EE  2233               	addwfc	(btemp+11)^0,f,c
 10510  0166F0  0EFE               	movlw	254
 10511  0166F2  2432               	addwf	(btemp+10)^0,w,c
 10512  0166F4  6ED9               	movwf	fsr2l,c
 10513  0166F6  0EFF               	movlw	255
 10514  0166F8  2033               	addwfc	(btemp+11)^0,w,c
 10515  0166FA  6EDA               	movwf	fsr2h,c
 10516  0166FC  0EF8               	movlw	-8
 10517  0166FE  006F FF8F FFDF     	movff	plusw1,indf2
 10518                           
 10519                           ;stkvar	_c @ sp[(-4)+-4]
 10520                           ;stkvar	_n @ sp[(-4)+-6]
 10521                           ;stkvar	_s @ sp[(-4)+0]
 10522  016704  0EFC               	movlw	-4
 10523  016706  006F FF8C  F032    	movff	plusw1,btemp+10
 10524  01670C  0EFD               	movlw	-3
 10525  01670E  006F FF8C  F033    	movff	plusw1,btemp+11
 10526  016714  0EF6               	movlw	-10
 10527  016716  50E3               	movf	plusw1,w,c
 10528  016718  2632               	addwf	(btemp+10)^0,f,c
 10529  01671A  0EF7               	movlw	-9
 10530  01671C  50E3               	movf	plusw1,w,c
 10531  01671E  2233               	addwfc	(btemp+11)^0,f,c
 10532  016720  0EFD               	movlw	253
 10533  016722  2432               	addwf	(btemp+10)^0,w,c
 10534  016724  6ED9               	movwf	fsr2l,c
 10535  016726  0EFF               	movlw	255
 10536  016728  2033               	addwfc	(btemp+11)^0,w,c
 10537  01672A  6EDA               	movwf	fsr2h,c
 10538  01672C  0EF8               	movlw	-8
 10539  01672E  006F FF8F FFDF     	movff	plusw1,indf2
 10540                           
 10541                           ;stkvar	_n @ sp[(-4)+-6]
 10542  016734  0EF7               	movlw	-9
 10543  016736  50E3               	movf	plusw1,w,c
 10544  016738  E108               	bnz	l11470
 10545  01673A  0EF6               	movlw	-10
 10546  01673C  006F FF8C  F028    	movff	plusw1,btemp
 10547  016742  0E07               	movlw	7
 10548  016744  5E28               	subwf	btemp^0,f,c
 10549  016746  A0D8               	btfss	status,0,c
 10550  016748  D0C6               	goto	u10490
 10551  01674A                     l11470:
 10552                           
 10553                           ;stkvar	_c @ sp[(-4)+-4]
 10554                           ;stkvar	_s @ sp[(-4)+0]
 10555  01674A  0EFC               	movlw	-4
 10556  01674C  006F FF8C  F032    	movff	plusw1,btemp+10
 10557  016752  0EFD               	movlw	-3
 10558  016754  006F FF8C  F033    	movff	plusw1,btemp+11
 10559  01675A  0E03               	movlw	3
 10560  01675C  2432               	addwf	(btemp+10)^0,w,c
 10561  01675E  6ED9               	movwf	fsr2l,c
 10562  016760  0E00               	movlw	0
 10563  016762  2033               	addwfc	(btemp+11)^0,w,c
 10564  016764  6EDA               	movwf	fsr2h,c
 10565  016766  0EF8               	movlw	-8
 10566  016768  006F FF8F FFDF     	movff	plusw1,indf2
 10567                           
 10568                           ;stkvar	_c @ sp[(-4)+-4]
 10569                           ;stkvar	_n @ sp[(-4)+-6]
 10570                           ;stkvar	_s @ sp[(-4)+0]
 10571  01676E  0EFC               	movlw	-4
 10572  016770  006F FF8C  F032    	movff	plusw1,btemp+10
 10573  016776  0EFD               	movlw	-3
 10574  016778  006F FF8C  F033    	movff	plusw1,btemp+11
 10575  01677E  0EF6               	movlw	-10
 10576  016780  50E3               	movf	plusw1,w,c
 10577  016782  2632               	addwf	(btemp+10)^0,f,c
 10578  016784  0EF7               	movlw	-9
 10579  016786  50E3               	movf	plusw1,w,c
 10580  016788  2233               	addwfc	(btemp+11)^0,f,c
 10581  01678A  0EFC               	movlw	252
 10582  01678C  2432               	addwf	(btemp+10)^0,w,c
 10583  01678E  6ED9               	movwf	fsr2l,c
 10584  016790  0EFF               	movlw	255
 10585  016792  2033               	addwfc	(btemp+11)^0,w,c
 10586  016794  6EDA               	movwf	fsr2h,c
 10587  016796  0EF8               	movlw	-8
 10588  016798  006F FF8F FFDF     	movff	plusw1,indf2
 10589                           
 10590                           ;stkvar	_n @ sp[(-4)+-6]
 10591  01679E  0EF7               	movlw	-9
 10592  0167A0  50E3               	movf	plusw1,w,c
 10593  0167A2  E108               	bnz	l11476
 10594  0167A4  0EF6               	movlw	-10
 10595  0167A6  006F FF8C  F028    	movff	plusw1,btemp
 10596  0167AC  0E09               	movlw	9
 10597  0167AE  5E28               	subwf	btemp^0,f,c
 10598  0167B0  A0D8               	btfss	status,0,c
 10599  0167B2  D091               	goto	u10490
 10600  0167B4                     l11476:
 10601                           
 10602                           ;stkvar	_s @ sp[(-4)+0]
 10603  0167B4  0EFC               	movlw	-4
 10604  0167B6  006F FF8C  F032    	movff	plusw1,btemp+10
 10605  0167BC  1E32               	comf	(btemp+10)^0,f,c
 10606  0167BE  0EFD               	movlw	-3
 10607  0167C0  006F FF8C  F033    	movff	plusw1,btemp+11
 10608  0167C6  1E33               	comf	(btemp+11)^0,f,c
 10609  0167C8  2A32               	incf	(btemp+10)^0,f,c
 10610  0167CA  B4D8               	btfsc	status,2,c
 10611  0167CC  2A33               	incf	(btemp+11)^0,f,c
 10612  0167CE  0E03               	movlw	3
 10613  0167D0  1632               	andwf	(btemp+10)^0,f,c
 10614  0167D2  0E00               	movlw	0
 10615  0167D4  1633               	andwf	(btemp+11)^0,f,c
 10616                           
 10617                           ;stkvar	_k @ sp[(-4)+2]
 10618  0167D6  0EFE               	movlw	-2
 10619  0167D8  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10620  0167DE  0EFF               	movlw	-1
 10621  0167E0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10622                           
 10623                           ;stkvar	_k @ sp[(-4)+2]
 10624                           ;stkvar	_s @ sp[(-4)+0]
 10625  0167E6  0EFC               	movlw	-4
 10626  0167E8  50E3               	movf	plusw1,w,c
 10627  0167EA  6E28               	movwf	btemp^0,c
 10628  0167EC  0EFE               	movlw	-2
 10629  0167EE  50E3               	movf	plusw1,w,c
 10630  0167F0  2628               	addwf	btemp^0,f,c
 10631  0167F2  0EFC               	movlw	-4
 10632  0167F4  0060  F0A3  FFE3   	movff	btemp,plusw1
 10633  0167FA  0EFD               	movlw	-3
 10634  0167FC  50E3               	movf	plusw1,w,c
 10635  0167FE  6E28               	movwf	btemp^0,c
 10636  016800  0EFF               	movlw	-1
 10637  016802  50E3               	movf	plusw1,w,c
 10638  016804  2228               	addwfc	btemp^0,f,c
 10639  016806  0EFD               	movlw	-3
 10640  016808  0060  F0A3  FFE3   	movff	btemp,plusw1
 10641                           
 10642                           ;stkvar	_k @ sp[(-4)+2]
 10643                           ;stkvar	_n @ sp[(-4)+-6]
 10644  01680E  0EF6               	movlw	-10
 10645  016810  50E3               	movf	plusw1,w,c
 10646  016812  6E28               	movwf	btemp^0,c
 10647  016814  0EFE               	movlw	-2
 10648  016816  50E3               	movf	plusw1,w,c
 10649  016818  5E28               	subwf	btemp^0,f,c
 10650  01681A  0EF6               	movlw	-10
 10651  01681C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10652  016822  0EF7               	movlw	-9
 10653  016824  50E3               	movf	plusw1,w,c
 10654  016826  6E28               	movwf	btemp^0,c
 10655  016828  0EFF               	movlw	-1
 10656  01682A  50E3               	movf	plusw1,w,c
 10657  01682C  5A28               	subwfb	btemp^0,f,c
 10658  01682E  0EF7               	movlw	-9
 10659  016830  0060  F0A3  FFE3   	movff	btemp,plusw1
 10660  016836  0EFC               	movlw	252
 10661  016838  6E32               	movwf	(btemp+10)^0,c
 10662  01683A  0EFF               	movlw	255
 10663  01683C  6E33               	movwf	(btemp+11)^0,c
 10664                           
 10665                           ;stkvar	_n @ sp[(-4)+-6]
 10666  01683E  0EF6               	movlw	-10
 10667  016840  006F FF8C  F028    	movff	plusw1,btemp
 10668  016846  5032               	movf	(btemp+10)^0,w,c
 10669  016848  1628               	andwf	btemp^0,f,c
 10670  01684A  0EF6               	movlw	-10
 10671  01684C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10672  016852  0EF7               	movlw	-9
 10673  016854  006F FF8C  F028    	movff	plusw1,btemp
 10674  01685A  5033               	movf	(btemp+11)^0,w,c
 10675  01685C  1628               	andwf	btemp^0,f,c
 10676  01685E  0EF7               	movlw	-9
 10677  016860  D02E               	goto	L7
 10678  016862                     l11484:
 10679                           
 10680                           ;stkvar	_c @ sp[(-4)+-4]
 10681                           ;stkvar	_s @ sp[(-4)+0]
 10682  016862  0EFC               	movlw	-4
 10683  016864  006F FF8F FFD9     	movff	plusw1,fsr2l
 10684  01686A  0EFD               	movlw	-3
 10685  01686C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10686  016872  0EF8               	movlw	-8
 10687  016874  006F FF8F FFDF     	movff	plusw1,indf2
 10688                           
 10689                           ;stkvar	_n @ sp[(-4)+-6]
 10690  01687A  0EF6               	movlw	-10
 10691  01687C  006F FF8C  F028    	movff	plusw1,btemp
 10692  016882  0E01               	movlw	1
 10693  016884  5E28               	subwf	btemp^0,f,c
 10694  016886  0EF6               	movlw	-10
 10695  016888  0060  F0A3  FFE3   	movff	btemp,plusw1
 10696  01688E  0EF7               	movlw	-9
 10697  016890  006F FF8C  F028    	movff	plusw1,btemp
 10698  016896  0E00               	movlw	0
 10699  016898  5A28               	subwfb	btemp^0,f,c
 10700  01689A  0EF7               	movlw	-9
 10701  01689C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10702                           
 10703                           ;stkvar	_s @ sp[(-4)+0]
 10704  0168A2  0EFC               	movlw	-4
 10705  0168A4  50E3               	movf	plusw1,w,c
 10706  0168A6  0F01               	addlw	1
 10707  0168A8  6E28               	movwf	btemp^0,c
 10708  0168AA  0EFC               	movlw	-4
 10709  0168AC  0060  F0A3  FFE3   	movff	btemp,plusw1
 10710  0168B2  6A28               	clrf	btemp^0,c
 10711  0168B4  0EFD               	movlw	-3
 10712  0168B6  50E3               	movf	plusw1,w,c
 10713  0168B8  2028               	addwfc	btemp^0,w,c
 10714  0168BA  6E28               	movwf	btemp^0,c
 10715  0168BC  0EFD               	movlw	-3
 10716  0168BE                     L7:
 10717  0168BE  0060  F0A3  FFE3   	movff	btemp,plusw1
 10718                           
 10719                           ;stkvar	_n @ sp[(-4)+-6]
 10720  0168C4  0EF6               	movlw	-10
 10721  0168C6  006F FF8C  F028    	movff	plusw1,btemp
 10722  0168CC  0EF7               	movlw	-9
 10723  0168CE  50E3               	movf	plusw1,w,c
 10724  0168D0  1028               	iorwf	btemp^0,w,c
 10725  0168D2  A4D8               	btfss	status,2,c
 10726  0168D4  D7C6               	goto	l11484
 10727  0168D6                     u10490:
 10728                           
 10729                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10730  0168D6  0EF6               	movlw	246
 10731  0168D8  26E1               	addwf	fsr1l,f,c
 10732  0168DA  0EFF               	movlw	255
 10733  0168DC  22E2               	addwfc	fsr1h,f,c
 10734  0168DE  0012               	return		;funcret
 10735  0168E0                     __end_of_memset:
 10736                           	opt callstack 0
 10737                           
 10738 ;; *************** function _printf *****************
 10739 ;; Defined at:
 10740 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;  fmt             2  [STACK] PTR const unsigned char 
 10743 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;  ap              2  [STACK] PTR void [1]
 10746 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10747 ;;  ret             2    0        int 
 10748 ;; Return value:  Size  Location     Type
 10749 ;;                  2  [STACK] int 
 10750 ;; Registers used:
 10751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10752 ;; Tracked objects:
 10753 ;;		On entry : 3F/3B
 10754 ;;		On exit  : 3F/0
 10755 ;;		Unchanged: 0/0
 10756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10761 ;;Total ram usage:        0 bytes
 10762 ;; Hardware stack levels used:    1
 10763 ;; Hardware stack levels required when called:   23
 10764 ;; This function calls:
 10765 ;;		_vfprintf
 10766 ;; This function is called by:
 10767 ;;		_eaDogM_WriteString
 10768 ;;		_send_lcd_cmd_dma
 10769 ;; This function uses a reentrant model
 10770 ;;
 10771                           
 10772                           	psect	text43
 10773  01A644                     __ptext43:
 10774                           	opt callstack 0
 10775  01A644                     _printf:
 10776                           	opt callstack 0
 10777                           
 10778                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10779  01A644  52E6               	movf	postinc1,f,c
 10780  01A646  52E6               	movf	postinc1,f,c
 10781                           
 10782                           ;stkvar	?_printf @ sp[(-2)+-3]
 10783                           
 10784                           ;incstack = 0
 10785  01A648  0EFB               	movlw	251
 10786  01A64A  24E1               	addwf	fsr1l,w,c
 10787  01A64C  6E32               	movwf	(btemp+10)^0,c
 10788  01A64E  0EFF               	movlw	255
 10789  01A650  20E2               	addwfc	fsr1h,w,c
 10790  01A652  6E33               	movwf	(btemp+11)^0,c
 10791                           
 10792                           ;stkvar	_ap @ sp[(-2)+0]
 10793  01A654  0EFF               	movlw	-1
 10794  01A656  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10795  01A65C  0EFE               	movlw	-2
 10796  01A65E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10797                           
 10798                           ;stkvar	_ap @ sp[(-2)+0]
 10799  01A664  0EFE               	movlw	254
 10800  01A666  24E1               	addwf	fsr1l,w,c
 10801  01A668  6E28               	movwf	btemp^0,c
 10802  01A66A  0EFF               	movlw	255
 10803  01A66C  20E2               	addwfc	fsr1h,w,c
 10804  01A66E  6E29               	movwf	(btemp+1)^0,c
 10805  01A670  0060  F0A3  FFE6   	movff	btemp,postinc1
 10806  01A676  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 10807                           
 10808                           ;stkvar	_fmt @ sp[(-4)+-3]
 10809  01A67C  0EF9               	movlw	-7
 10810  01A67E  006F FF8F FFE6     	movff	plusw1,postinc1
 10811  01A684  006F FF8F FFE6     	movff	plusw1,postinc1
 10812  01A68A  0E00               	movlw	0
 10813  01A68C  6EE6               	movwf	postinc1,c
 10814  01A68E  0E00               	movlw	0
 10815  01A690  6EE6               	movwf	postinc1,c
 10816  01A692  EC58  F0CE         	call	_vfprintf	;wreg free
 10817                           
 10818                           ; BSR set to: 0
 10819                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10820  01A696  52E5               	movf	postdec1,f,c
 10821  01A698  52E5               	movf	postdec1,f,c
 10822  01A69A  52E5               	movf	postdec1,f,c
 10823  01A69C  50E7               	movf	indf1,w,c
 10824  01A69E  5EE1               	subwf	fsr1l,f,c
 10825  01A6A0  0E00               	movlw	0
 10826  01A6A2  5AE2               	subwfb	fsr1h,f,c
 10827  01A6A4  0012               	return		;funcret
 10828  01A6A6                     __end_of_printf:
 10829                           	opt callstack 0
 10830                           
 10831 ;; *************** function _vfprintf *****************
 10832 ;; Defined at:
 10833 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10836 ;;		 -> f(6), NULL(0), 
 10837 ;;  fmt             2  [STACK] PTR const unsigned char 
 10838 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10839 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10840 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10841 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10842 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10843 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10844 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10845 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10846 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10847 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10848 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10849 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10850 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10851 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10852 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10853 ;;		 -> STR_1(17), 
 10854 ;;  ap              2  [STACK] PTR PTR void 
 10855 ;;		 -> ap(2), ap(2), 
 10856 ;; Auto vars:     Size  Location     Type
 10857 ;;  cfmt            2  [STACK] PTR unsigned char 
 10858 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10859 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10860 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10861 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10862 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10863 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10864 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10865 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10866 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10867 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10868 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10869 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10870 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10871 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10872 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10873 ;;		 -> STR_1(17), 
 10874 ;; Return value:  Size  Location     Type
 10875 ;;                  2  [STACK] int 
 10876 ;; Registers used:
 10877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10878 ;; Tracked objects:
 10879 ;;		On entry : 0/1
 10880 ;;		On exit  : 3F/0
 10881 ;;		Unchanged: 0/0
 10882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10887 ;;Total ram usage:        0 bytes
 10888 ;; Hardware stack levels used:    1
 10889 ;; Hardware stack levels required when called:   22
 10890 ;; This function calls:
 10891 ;;		_vfpfcnvrt
 10892 ;; This function is called by:
 10893 ;;		_sprintf
 10894 ;;		_printf
 10895 ;; This function uses a reentrant model
 10896 ;;
 10897                           
 10898                           	psect	text44
 10899  019CB0                     __ptext44:
 10900                           	opt callstack 0
 10901  019CB0                     _vfprintf:
 10902                           	opt callstack 0
 10903                           
 10904                           ; BSR set to: 0
 10905                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10906  019CB0  52E6               	movf	postinc1,f,c
 10907  019CB2  52E6               	movf	postinc1,f,c
 10908                           
 10909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10910                           ;stkvar	_fmt @ sp[(-2)+-4]
 10911                           
 10912                           ;incstack = 0
 10913 ;; hardware stack exceeded
 10914  019CB4  0EFA               	movlw	-6
 10915  019CB6  006F FF8C  F032    	movff	plusw1,btemp+10
 10916  019CBC  0EFB               	movlw	-5
 10917  019CBE  006F FF8C  F033    	movff	plusw1,btemp+11
 10918                           
 10919                           ;stkvar	_cfmt @ sp[(-2)+0]
 10920  019CC4  0EFF               	movlw	-1
 10921  019CC6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10922  019CCC  0EFE               	movlw	-2
 10923  019CCE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10924                           
 10925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10926  019CD4  0100               	movlb	0	; () banked
 10927  019CD6  6BC0               	clrf	_nout& (0+255),b
 10928  019CD8  6BC1               	clrf	(_nout+1)& (0+255),b
 10929                           
 10930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10931  019CDA  D021               	goto	l12308
 10932  019CDC                     l12306:
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10936                           ;stkvar	_ap @ sp[(-2)+-6]
 10937  019CDC  0EF8               	movlw	-8
 10938  019CDE  006F FF8F FFE6     	movff	plusw1,postinc1
 10939  019CE4  006F FF8F FFE6     	movff	plusw1,postinc1
 10940                           
 10941                           ;stkvar	_cfmt @ sp[(-4)+0]
 10942  019CEA  0EFC               	movlw	252
 10943  019CEC  24E1               	addwf	fsr1l,w,c
 10944  019CEE  6E28               	movwf	btemp^0,c
 10945  019CF0  0EFF               	movlw	255
 10946  019CF2  20E2               	addwfc	fsr1h,w,c
 10947  019CF4  6E29               	movwf	(btemp+1)^0,c
 10948  019CF6  0060  F0A3  FFE6   	movff	btemp,postinc1
 10949  019CFC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 10950                           
 10951                           ;stkvar	_fp @ sp[(-6)+-2]
 10952  019D02  0EF8               	movlw	-8
 10953  019D04  006F FF8F FFE6     	movff	plusw1,postinc1
 10954  019D0A  006F FF8F FFE6     	movff	plusw1,postinc1
 10955  019D10  EC39  F091         	call	_vfpfcnvrt	;wreg free
 10956  019D14  5028               	movf	btemp^0,w,c
 10957  019D16  0100               	movlb	0	; () banked
 10958  019D18  27C0               	addwf	_nout& (0+255),f,b
 10959  019D1A  5029               	movf	(btemp+1)^0,w,c
 10960  019D1C  23C1               	addwfc	(_nout+1)& (0+255),f,b
 10961  019D1E                     l12308:
 10962                           
 10963                           ; BSR set to: 0
 10964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10965                           ;stkvar	_cfmt @ sp[(-2)+0]
 10966  019D1E  50E1               	movf	fsr1l,w,c
 10967  019D20  0FFE               	addlw	-2
 10968  019D22  6ED9               	movwf	fsr2l,c
 10969  019D24  50E2               	movf	fsr1h,w,c
 10970  019D26  6EDA               	movwf	fsr2h,c
 10971  019D28  0EFF               	movlw	255
 10972  019D2A  22DA               	addwfc	fsr2h,f,c
 10973  019D2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10974  019D32  006F FF77 FFF7     	movff	postdec2,tblptrh
 10975  019D38                     	if	0	;tblptru may be non-zero
 10976  019D38                     	endif
 10977  019D38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10978  019D38  0E00               	movlw	low (__mediumconst shr (0+16))
 10979  019D3A  6EF8               	movwf	tblptru,c
 10980  019D3C                     	endif
 10981  019D3C  0008               	tblrd		*
 10982  019D3E  50F5               	movf	tablat,w,c
 10983  019D40  0900               	iorlw	0
 10984  019D42  A4D8               	btfss	status,2,c
 10985  019D44  D7CB               	goto	l12306
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10989  019D46  0060  F300  F028   	movff	_nout,btemp
 10990  019D4C  0060  F304  F029   	movff	_nout+1,btemp+1
 10991                           
 10992                           ; BSR set to: 0
 10993                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10994  019D52  0EF8               	movlw	248
 10995  019D54  26E1               	addwf	fsr1l,f,c
 10996  019D56  0EFF               	movlw	255
 10997  019D58  22E2               	addwfc	fsr1h,f,c
 10998  019D5A  0012               	return		;funcret
 10999  019D5C                     __end_of_vfprintf:
 11000                           	opt callstack 0
 11001                           
 11002 ;; *************** function _vfpfcnvrt *****************
 11003 ;; Defined at:
 11004 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11005 ;; Parameters:    Size  Location     Type
 11006 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11007 ;;		 -> f(6), NULL(0), 
 11008 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11009 ;;		 -> cfmt(2), 
 11010 ;;  ap              2  [STACK] PTR PTR void 
 11011 ;;		 -> ap(2), ap(2), 
 11012 ;; Auto vars:     Size  Location     Type
 11013 ;;  llu             8  [STACK] unsigned long long 
 11014 ;;  ll              8  [STACK] long long 
 11015 ;;  f               4  [STACK] long long 
 11016 ;;  ct              3  [STACK] unsigned char [3]
 11017 ;;  vp              3    0        PTR void 
 11018 ;;  cp              2  [STACK] PTR unsigned char 
 11019 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11020 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 11021 ;;		 -> V(190), 
 11022 ;;  i               2    0        int 
 11023 ;;  done            2    0        int 
 11024 ;;  c               1  [STACK] unsigned char 
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  2  [STACK] int 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11038 ;;Total ram usage:        0 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:   21
 11041 ;; This function calls:
 11042 ;;		_atoi
 11043 ;;		_ctoa
 11044 ;;		_dtoa
 11045 ;;		_efgtoa
 11046 ;;		_fputc
 11047 ;;		_isdigit
 11048 ;;		_isupper
 11049 ;;		_stoa
 11050 ;;		_strncmp
 11051 ;;		_tolower
 11052 ;;		_utoa
 11053 ;;		_xtoa
 11054 ;; This function is called by:
 11055 ;;		_vfprintf
 11056 ;; This function uses a reentrant model
 11057 ;;
 11058                           
 11059                           	psect	text45
 11060  012272                     __ptext45:
 11061                           	opt callstack 0
 11062  012272                     _vfpfcnvrt:
 11063                           	opt callstack 0
 11064                           
 11065                           ; BSR set to: 0
 11066                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11067  012272  0E20               	movlw	32
 11068  012274  26E1               	addwf	fsr1l,f,c
 11069  012276  0E00               	movlw	0
 11070  012278  22E2               	addwfc	fsr1h,f,c
 11071                           
 11072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11073                           ;stkvar	_fmt @ sp[(-32)+-4]
 11074                           
 11075                           ;incstack = 0
 11076 ;; hardware stack exceeded
 11077  01227A  0EDC               	movlw	-36
 11078  01227C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11079  012282  0EDD               	movlw	-35
 11080  012284  006F FF8F FFDA     	movff	plusw1,fsr2h
 11081  01228A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11082  012290  006F FF77 FFF7     	movff	postdec2,tblptrh
 11083  012296                     	if	0	;tblptru may be non-zero
 11084  012296                     	endif
 11085  012296                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11086  012296  0E00               	movlw	low (__mediumconst shr (0+16))
 11087  012298  6EF8               	movwf	tblptru,c
 11088  01229A                     	endif
 11089  01229A  0008               	tblrd		*
 11090  01229C  50F5               	movf	tablat,w,c
 11091  01229E  0A25               	xorlw	37
 11092  0122A0  A4D8               	btfss	status,2,c
 11093  0122A2  EFE0  F098         	goto	l12252
 11094                           
 11095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11096                           ;stkvar	_fmt @ sp[(-32)+-4]
 11097  0122A6  0EDC               	movlw	-36
 11098  0122A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11099  0122AE  0EDD               	movlw	-35
 11100  0122B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11101  0122B6  2ADE               	incf	postinc2,f,c
 11102  0122B8  0E00               	movlw	0
 11103  0122BA  22DD               	addwfc	postdec2,f,c
 11104                           
 11105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11106  0122BC  6A48               	clrf	_width^0,c
 11107  0122BE  6A49               	clrf	(_width+1)^0,c
 11108  0122C0  6A4C               	clrf	_flags^0,c
 11109  0122C2  6A4D               	clrf	(_flags+1)^0,c
 11110                           
 11111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11112  0122C4  684A               	setf	_prec^0,c
 11113  0122C6  684B               	setf	(_prec+1)^0,c
 11114                           
 11115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11116                           ;stkvar	_fmt @ sp[(-32)+-4]
 11117  0122C8  0EDC               	movlw	-36
 11118  0122CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11119  0122D0  0EDD               	movlw	-35
 11120  0122D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11121  0122D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11122  0122DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11123  0122E4                     	if	0	;tblptru may be non-zero
 11124  0122E4                     	endif
 11125  0122E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11126  0122E4  0E00               	movlw	low (__mediumconst shr (0+16))
 11127  0122E6  6EF8               	movwf	tblptru,c
 11128  0122E8                     	endif
 11129  0122E8  0008               	tblrd		*
 11130  0122EA  50F5               	movf	tablat,w,c
 11131  0122EC  0A2A               	xorlw	42
 11132  0122EE  A4D8               	btfss	status,2,c
 11133  0122F0  D031               	goto	l12070
 11134                           
 11135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11136                           ;stkvar	_fmt @ sp[(-32)+-4]
 11137  0122F2  0EDC               	movlw	-36
 11138  0122F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11139  0122FA  0EDD               	movlw	-35
 11140  0122FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11141  012302  2ADE               	incf	postinc2,f,c
 11142  012304  0E00               	movlw	0
 11143  012306  22DD               	addwfc	postdec2,f,c
 11144                           
 11145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11146                           ;stkvar	_ap @ sp[(-32)+-6]
 11147  012308  0EDA               	movlw	-38
 11148  01230A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11149  012310  0EDB               	movlw	-37
 11150  012312  006F FF8F FFDA     	movff	plusw1,fsr2h
 11151  012318  0E02               	movlw	2
 11152  01231A  5EDE               	subwf	postinc2,f,c
 11153  01231C  0E00               	movlw	0
 11154  01231E  5ADD               	subwfb	postdec2,f,c
 11155  012320  006F FF78  F032    	movff	postinc2,btemp+10
 11156  012326  006F FF74  F033    	movff	postdec2,btemp+11
 11157  01232C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11158  012332  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11159  012338  006F FF78  F048    	movff	postinc2,_width
 11160  01233E  006F FF74  F049    	movff	postdec2,_width+1
 11161                           
 11162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11163  012344  AE49               	btfss	(_width+1)^0,7,c
 11164  012346  D066               	goto	u11620
 11165                           
 11166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11167  012348  804C               	bsf	_flags^0,0,c
 11168                           
 11169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11170  01234A  6C48               	negf	_width^0,c
 11171  01234C  1E49               	comf	(_width+1)^0,f,c
 11172  01234E  B0D8               	btfsc	status,0,c
 11173  012350  2A49               	incf	(_width+1)^0,f,c
 11174  012352  D060               	goto	u11620
 11175  012354                     l12070:
 11176                           
 11177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11178                           ;stkvar	_fmt @ sp[(-32)+-4]
 11179  012354  0EDC               	movlw	-36
 11180  012356  006F FF8F FFD9     	movff	plusw1,fsr2l
 11181  01235C  0EDD               	movlw	-35
 11182  01235E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11183  012364  006F FF78  F032    	movff	postinc2,btemp+10
 11184  01236A  006F FF74  F033    	movff	postdec2,btemp+11
 11185  012370  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11186  012376  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11187  01237C  EC6F  F0B8         	call	_atoi	;wreg free
 11188  012380  0060  F0A0  F048   	movff	btemp,_width
 11189  012386  0060  F0A4  F049   	movff	btemp+1,_width+1
 11190                           
 11191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11192  01238C  D00B               	goto	l12074
 11193  01238E                     l12072:
 11194                           
 11195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11196                           ;stkvar	_fmt @ sp[(-32)+-4]
 11197  01238E  0EDC               	movlw	-36
 11198  012390  006F FF8F FFD9     	movff	plusw1,fsr2l
 11199  012396  0EDD               	movlw	-35
 11200  012398  006F FF8F FFDA     	movff	plusw1,fsr2h
 11201  01239E  2ADE               	incf	postinc2,f,c
 11202  0123A0  0E00               	movlw	0
 11203  0123A2  22DD               	addwfc	postdec2,f,c
 11204  0123A4                     l12074:
 11205  0123A4  0ED0               	movlw	208
 11206  0123A6  6E32               	movwf	(btemp+10)^0,c
 11207  0123A8  0EFF               	movlw	255
 11208  0123AA  6E33               	movwf	(btemp+11)^0,c
 11209                           
 11210                           ;stkvar	_fmt @ sp[(-32)+-4]
 11211  0123AC  0EDC               	movlw	-36
 11212  0123AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11213  0123B4  0EDD               	movlw	-35
 11214  0123B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11215  0123BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11216  0123C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11217  0123C8                     	if	0	;tblptru may be non-zero
 11218  0123C8                     	endif
 11219  0123C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11220  0123C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11221  0123CA  6EF8               	movwf	tblptru,c
 11222  0123CC                     	endif
 11223  0123CC  0008               	tblrd		*
 11224  0123CE  50F5               	movf	tablat,w,c
 11225  0123D0  6E30               	movwf	(btemp+8)^0,c
 11226  0123D2  6A31               	clrf	(btemp+9)^0,c
 11227  0123D4  5032               	movf	(btemp+10)^0,w,c
 11228  0123D6  2630               	addwf	(btemp+8)^0,f,c
 11229  0123D8  5033               	movf	(btemp+11)^0,w,c
 11230  0123DA  2231               	addwfc	(btemp+9)^0,f,c
 11231  0123DC  5031               	movf	(btemp+9)^0,w,c
 11232  0123DE  E106               	bnz	u11600
 11233  0123E0  0E0A               	movlw	10
 11234  0123E2  5C30               	subwf	(btemp+8)^0,w,c
 11235  0123E4  B0D8               	btfsc	status,0,c
 11236  0123E6  D002               	goto	u11600
 11237  0123E8  0E01               	movlw	1
 11238  0123EA  D001               	goto	u11610
 11239  0123EC                     u11600:
 11240  0123EC  0E00               	movlw	0
 11241  0123EE                     u11610:
 11242  0123EE  6E32               	movwf	(btemp+10)^0,c
 11243  0123F0  6A33               	clrf	(btemp+11)^0,c
 11244                           
 11245                           ;stkvar	_vfpfcnvrt$5442 @ sp[(-32)+4]
 11246  0123F2  0EE4               	movlw	-28
 11247  0123F4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11248  0123FA  0EE5               	movlw	-27
 11249  0123FC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11250                           
 11251                           ;stkvar	_vfpfcnvrt$5442 @ sp[(-32)+4]
 11252  012402  0EE4               	movlw	-28
 11253  012404  006F FF8C  F028    	movff	plusw1,btemp
 11254  01240A  0EE5               	movlw	-27
 11255  01240C  50E3               	movf	plusw1,w,c
 11256  01240E  1028               	iorwf	btemp^0,w,c
 11257  012410  A4D8               	btfss	status,2,c
 11258  012412  D7BD               	goto	l12072
 11259  012414                     u11620:
 11260                           
 11261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11262                           ;stkvar	_fmt @ sp[(-32)+-4]
 11263  012414  0EDC               	movlw	-36
 11264  012416  006F FF8F FFD9     	movff	plusw1,fsr2l
 11265  01241C  0EDD               	movlw	-35
 11266  01241E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11267  012424  006F FF7B FFF6     	movff	postinc2,tblptrl
 11268  01242A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11269  012430                     	if	0	;tblptru may be non-zero
 11270  012430                     	endif
 11271  012430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11272  012430  0E00               	movlw	low (__mediumconst shr (0+16))
 11273  012432  6EF8               	movwf	tblptru,c
 11274  012434                     	endif
 11275  012434  0008               	tblrd		*
 11276  012436  50F5               	movf	tablat,w,c
 11277  012438  0A2E               	xorlw	46
 11278  01243A  A4D8               	btfss	status,2,c
 11279  01243C  D0AC               	goto	u11670
 11280                           
 11281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11282  01243E  6A4A               	clrf	_prec^0,c
 11283  012440  6A4B               	clrf	(_prec+1)^0,c
 11284                           
 11285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11286                           ;stkvar	_fmt @ sp[(-32)+-4]
 11287  012442  0EDC               	movlw	-36
 11288  012444  006F FF8F FFD9     	movff	plusw1,fsr2l
 11289  01244A  0EDD               	movlw	-35
 11290  01244C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11291  012452  2ADE               	incf	postinc2,f,c
 11292  012454  0E00               	movlw	0
 11293  012456  22DD               	addwfc	postdec2,f,c
 11294                           
 11295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11296                           ;stkvar	_fmt @ sp[(-32)+-4]
 11297  012458  0EDC               	movlw	-36
 11298  01245A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11299  012460  0EDD               	movlw	-35
 11300  012462  006F FF8F FFDA     	movff	plusw1,fsr2h
 11301  012468  006F FF7B FFF6     	movff	postinc2,tblptrl
 11302  01246E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11303  012474                     	if	0	;tblptru may be non-zero
 11304  012474                     	endif
 11305  012474                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11306  012474  0E00               	movlw	low (__mediumconst shr (0+16))
 11307  012476  6EF8               	movwf	tblptru,c
 11308  012478                     	endif
 11309  012478  0008               	tblrd		*
 11310  01247A  50F5               	movf	tablat,w,c
 11311  01247C  0A2A               	xorlw	42
 11312  01247E  A4D8               	btfss	status,2,c
 11313  012480  D02A               	goto	l12092
 11314                           
 11315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11316                           ;stkvar	_fmt @ sp[(-32)+-4]
 11317  012482  0EDC               	movlw	-36
 11318  012484  006F FF8F FFD9     	movff	plusw1,fsr2l
 11319  01248A  0EDD               	movlw	-35
 11320  01248C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11321  012492  2ADE               	incf	postinc2,f,c
 11322  012494  0E00               	movlw	0
 11323  012496  22DD               	addwfc	postdec2,f,c
 11324                           
 11325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11326                           ;stkvar	_ap @ sp[(-32)+-6]
 11327  012498  0EDA               	movlw	-38
 11328  01249A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11329  0124A0  0EDB               	movlw	-37
 11330  0124A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11331  0124A8  0E02               	movlw	2
 11332  0124AA  5EDE               	subwf	postinc2,f,c
 11333  0124AC  0E00               	movlw	0
 11334  0124AE  5ADD               	subwfb	postdec2,f,c
 11335  0124B0  006F FF78  F032    	movff	postinc2,btemp+10
 11336  0124B6  006F FF74  F033    	movff	postdec2,btemp+11
 11337  0124BC  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11338  0124C2  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11339  0124C8  006F FF78  F04A    	movff	postinc2,_prec
 11340  0124CE  006F FF74  F04B    	movff	postdec2,_prec+1
 11341                           
 11342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11343  0124D4  D060               	goto	u11670
 11344  0124D6                     l12092:
 11345                           
 11346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11347                           ;stkvar	_fmt @ sp[(-32)+-4]
 11348  0124D6  0EDC               	movlw	-36
 11349  0124D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11350  0124DE  0EDD               	movlw	-35
 11351  0124E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11352  0124E6  006F FF78  F032    	movff	postinc2,btemp+10
 11353  0124EC  006F FF74  F033    	movff	postdec2,btemp+11
 11354  0124F2  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11355  0124F8  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11356  0124FE  EC6F  F0B8         	call	_atoi	;wreg free
 11357  012502  0060  F0A0  F04A   	movff	btemp,_prec
 11358  012508  0060  F0A4  F04B   	movff	btemp+1,_prec+1
 11359                           
 11360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11361  01250E  D00B               	goto	l12096
 11362  012510                     l12094:
 11363                           
 11364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11365                           ;stkvar	_fmt @ sp[(-32)+-4]
 11366  012510  0EDC               	movlw	-36
 11367  012512  006F FF8F FFD9     	movff	plusw1,fsr2l
 11368  012518  0EDD               	movlw	-35
 11369  01251A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11370  012520  2ADE               	incf	postinc2,f,c
 11371  012522  0E00               	movlw	0
 11372  012524  22DD               	addwfc	postdec2,f,c
 11373  012526                     l12096:
 11374  012526  0ED0               	movlw	208
 11375  012528  6E32               	movwf	(btemp+10)^0,c
 11376  01252A  0EFF               	movlw	255
 11377  01252C  6E33               	movwf	(btemp+11)^0,c
 11378                           
 11379                           ;stkvar	_fmt @ sp[(-32)+-4]
 11380  01252E  0EDC               	movlw	-36
 11381  012530  006F FF8F FFD9     	movff	plusw1,fsr2l
 11382  012536  0EDD               	movlw	-35
 11383  012538  006F FF8F FFDA     	movff	plusw1,fsr2h
 11384  01253E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11385  012544  006F FF77 FFF7     	movff	postdec2,tblptrh
 11386  01254A                     	if	0	;tblptru may be non-zero
 11387  01254A                     	endif
 11388  01254A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11389  01254A  0E00               	movlw	low (__mediumconst shr (0+16))
 11390  01254C  6EF8               	movwf	tblptru,c
 11391  01254E                     	endif
 11392  01254E  0008               	tblrd		*
 11393  012550  50F5               	movf	tablat,w,c
 11394  012552  6E30               	movwf	(btemp+8)^0,c
 11395  012554  6A31               	clrf	(btemp+9)^0,c
 11396  012556  5032               	movf	(btemp+10)^0,w,c
 11397  012558  2630               	addwf	(btemp+8)^0,f,c
 11398  01255A  5033               	movf	(btemp+11)^0,w,c
 11399  01255C  2231               	addwfc	(btemp+9)^0,f,c
 11400  01255E  5031               	movf	(btemp+9)^0,w,c
 11401  012560  E106               	bnz	u11650
 11402  012562  0E0A               	movlw	10
 11403  012564  5C30               	subwf	(btemp+8)^0,w,c
 11404  012566  B0D8               	btfsc	status,0,c
 11405  012568  D002               	goto	u11650
 11406  01256A  0E01               	movlw	1
 11407  01256C  D001               	goto	u11660
 11408  01256E                     u11650:
 11409  01256E  0E00               	movlw	0
 11410  012570                     u11660:
 11411  012570  6E32               	movwf	(btemp+10)^0,c
 11412  012572  6A33               	clrf	(btemp+11)^0,c
 11413                           
 11414                           ;stkvar	_vfpfcnvrt$5443 @ sp[(-32)+0]
 11415  012574  0EE0               	movlw	-32
 11416  012576  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11417  01257C  0EE1               	movlw	-31
 11418  01257E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11419                           
 11420                           ;stkvar	_vfpfcnvrt$5443 @ sp[(-32)+0]
 11421  012584  0EE0               	movlw	-32
 11422  012586  006F FF8C  F028    	movff	plusw1,btemp
 11423  01258C  0EE1               	movlw	-31
 11424  01258E  50E3               	movf	plusw1,w,c
 11425  012590  1028               	iorwf	btemp^0,w,c
 11426  012592  A4D8               	btfss	status,2,c
 11427  012594  D7BD               	goto	l12094
 11428  012596                     u11670:
 11429                           
 11430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11431                           ;stkvar	_fmt @ sp[(-32)+-4]
 11432  012596  0EDC               	movlw	-36
 11433  012598  006F FF8F FFD9     	movff	plusw1,fsr2l
 11434  01259E  0EDD               	movlw	-35
 11435  0125A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11436  0125A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11437  0125AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11438  0125B2                     	if	0	;tblptru may be non-zero
 11439  0125B2                     	endif
 11440  0125B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11441  0125B2  0E00               	movlw	low (__mediumconst shr (0+16))
 11442  0125B4  6EF8               	movwf	tblptru,c
 11443  0125B6                     	endif
 11444  0125B6  0008               	tblrd		*
 11445  0125B8  50F5               	movf	tablat,w,c
 11446  0125BA  6EE6               	movwf	postinc1,c
 11447  0125BC  0E00               	movlw	0
 11448  0125BE  6EE6               	movwf	postinc1,c
 11449  0125C0  EC9D  F0D1         	call	_tolower	;wreg free
 11450                           
 11451                           ;stkvar	_ct @ sp[(-32)+26]
 11452  0125C4  0EFA               	movlw	-6
 11453  0125C6  0060  F0A3  FFE3   	movff	btemp,plusw1
 11454                           
 11455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11456                           ;stkvar	_ct @ sp[(-32)+26]
 11457  0125CC  0EFA               	movlw	-6
 11458  0125CE  50E3               	movf	plusw1,w,c
 11459  0125D0  B4D8               	btfsc	status,2,c
 11460  0125D2  D05B               	goto	l12112
 11461                           
 11462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11463                           ;stkvar	_ct @ sp[(-32)+26]
 11464  0125D4  0EFB               	movlw	251
 11465  0125D6  24E1               	addwf	fsr1l,w,c
 11466  0125D8  6ED9               	movwf	fsr2l,c
 11467  0125DA  0EFF               	movlw	255
 11468  0125DC  20E2               	addwfc	fsr1h,w,c
 11469  0125DE  6EDA               	movwf	fsr2h,c
 11470                           
 11471                           ;stkvar	_fmt @ sp[(-32)+-4]
 11472  0125E0  0EDC               	movlw	-36
 11473  0125E2  006F FF8F FFE9     	movff	plusw1,fsr0l
 11474  0125E8  0EDD               	movlw	-35
 11475  0125EA  006F FF8F FFEA     	movff	plusw1,fsr0h
 11476  0125F0  006F FFB8  F032    	movff	postinc0,btemp+10
 11477  0125F6  006F FFB4  F033    	movff	postdec0,btemp+11
 11478  0125FC  0E01               	movlw	1
 11479  0125FE  2632               	addwf	(btemp+10)^0,f,c
 11480  012600  0E00               	movlw	0
 11481  012602  2233               	addwfc	(btemp+11)^0,f,c
 11482  012604  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 11483  01260A  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 11484  012610                     	if	0	;tblptru may be non-zero
 11485  012610                     	endif
 11486  012610                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11487  012610  0E00               	movlw	low (__mediumconst shr (0+16))
 11488  012612  6EF8               	movwf	tblptru,c
 11489  012614                     	endif
 11490  012614  0008               	tblrd		*
 11491  012616  50F5               	movf	tablat,w,c
 11492  012618  6EE6               	movwf	postinc1,c
 11493  01261A  0E00               	movlw	0
 11494  01261C  6EE6               	movwf	postinc1,c
 11495  01261E  EC9D  F0D1         	call	_tolower	;wreg free
 11496  012622  5028               	movf	btemp^0,w,c
 11497  012624  6EDF               	movwf	indf2,c
 11498                           
 11499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11500                           ;stkvar	_ct @ sp[(-32)+26]
 11501  012626  0EFB               	movlw	251
 11502  012628  24E1               	addwf	fsr1l,w,c
 11503  01262A  6ED9               	movwf	fsr2l,c
 11504  01262C  0EFF               	movlw	255
 11505  01262E  20E2               	addwfc	fsr1h,w,c
 11506  012630  6EDA               	movwf	fsr2h,c
 11507  012632  50DF               	movf	indf2,w,c
 11508  012634  B4D8               	btfsc	status,2,c
 11509  012636  D029               	goto	l12112
 11510                           
 11511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11512                           ;stkvar	_ct @ sp[(-32)+26]
 11513  012638  0EFC               	movlw	252
 11514  01263A  24E1               	addwf	fsr1l,w,c
 11515  01263C  6ED9               	movwf	fsr2l,c
 11516  01263E  0EFF               	movlw	255
 11517  012640  20E2               	addwfc	fsr1h,w,c
 11518  012642  6EDA               	movwf	fsr2h,c
 11519                           
 11520                           ;stkvar	_fmt @ sp[(-32)+-4]
 11521  012644  0EDC               	movlw	-36
 11522  012646  006F FF8F FFE9     	movff	plusw1,fsr0l
 11523  01264C  0EDD               	movlw	-35
 11524  01264E  006F FF8F FFEA     	movff	plusw1,fsr0h
 11525  012654  006F FFB8  F032    	movff	postinc0,btemp+10
 11526  01265A  006F FFB4  F033    	movff	postdec0,btemp+11
 11527  012660  0E02               	movlw	2
 11528  012662  2632               	addwf	(btemp+10)^0,f,c
 11529  012664  0E00               	movlw	0
 11530  012666  2233               	addwfc	(btemp+11)^0,f,c
 11531  012668  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 11532  01266E  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 11533  012674                     	if	0	;tblptru may be non-zero
 11534  012674                     	endif
 11535  012674                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11536  012674  0E00               	movlw	low (__mediumconst shr (0+16))
 11537  012676  6EF8               	movwf	tblptru,c
 11538  012678                     	endif
 11539  012678  0008               	tblrd		*
 11540  01267A  50F5               	movf	tablat,w,c
 11541  01267C  6EE6               	movwf	postinc1,c
 11542  01267E  0E00               	movlw	0
 11543  012680  6EE6               	movwf	postinc1,c
 11544  012682  EC9D  F0D1         	call	_tolower	;wreg free
 11545  012686  5028               	movf	btemp^0,w,c
 11546  012688  6EDF               	movwf	indf2,c
 11547  01268A                     l12112:
 11548                           
 11549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11550                           ;stkvar	_fmt @ sp[(-32)+-4]
 11551  01268A  0EDC               	movlw	-36
 11552  01268C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11553  012692  0EDD               	movlw	-35
 11554  012694  006F FF8F FFDA     	movff	plusw1,fsr2h
 11555  01269A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11556  0126A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11557  0126A6                     	if	0	;tblptru may be non-zero
 11558  0126A6                     	endif
 11559  0126A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11560  0126A6  0E00               	movlw	low (__mediumconst shr (0+16))
 11561  0126A8  6EF8               	movwf	tblptru,c
 11562  0126AA                     	endif
 11563  0126AA  0008               	tblrd		*
 11564  0126AC  50F5               	movf	tablat,w,c
 11565  0126AE  0A63               	xorlw	99
 11566  0126B0  A4D8               	btfss	status,2,c
 11567  0126B2  D037               	goto	l12122
 11568                           
 11569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11570                           ;stkvar	_fmt @ sp[(-32)+-4]
 11571  0126B4  0EDC               	movlw	-36
 11572  0126B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11573  0126BC  0EDD               	movlw	-35
 11574  0126BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11575  0126C4  2ADE               	incf	postinc2,f,c
 11576  0126C6  0E00               	movlw	0
 11577  0126C8  22DD               	addwfc	postdec2,f,c
 11578                           
 11579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11580                           ;stkvar	_ap @ sp[(-32)+-6]
 11581  0126CA  0EDA               	movlw	-38
 11582  0126CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11583  0126D2  0EDB               	movlw	-37
 11584  0126D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11585  0126DA  0E02               	movlw	2
 11586  0126DC  5EDE               	subwf	postinc2,f,c
 11587  0126DE  0E00               	movlw	0
 11588  0126E0  5ADD               	subwfb	postdec2,f,c
 11589  0126E2  006F FF78  F032    	movff	postinc2,btemp+10
 11590  0126E8  006F FF74  F033    	movff	postdec2,btemp+11
 11591  0126EE  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11592  0126F4  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11593  0126FA  50DF               	movf	indf2,w,c
 11594  0126FC  6E33               	movwf	(btemp+11)^0,c
 11595                           
 11596                           ;stkvar	_c @ sp[(-32)+31]
 11597  0126FE  0EFF               	movlw	-1
 11598  012700  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11599                           
 11600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11601                           ;stkvar	_c @ sp[(-32)+31]
 11602  012706  0EFF               	movlw	-1
 11603  012708  50E3               	movf	plusw1,w,c
 11604  01270A  6EE6               	movwf	postinc1,c
 11605                           
 11606                           ;stkvar	_fp @ sp[(-33)+-2]
 11607  01270C  0EDD               	movlw	-35
 11608  01270E  006F FF8F FFE6     	movff	plusw1,postinc1
 11609  012714  006F FF8F FFE6     	movff	plusw1,postinc1
 11610  01271A  EC17  F0D1         	call	_ctoa	;wreg free
 11611  01271E  EF0A  F099         	goto	l2334
 11612  012722                     l12122:
 11613                           
 11614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11615                           ;stkvar	_fmt @ sp[(-32)+-4]
 11616  012722  0EDC               	movlw	-36
 11617  012724  006F FF8F FFD9     	movff	plusw1,fsr2l
 11618  01272A  0EDD               	movlw	-35
 11619  01272C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11620  012732  006F FF7B FFF6     	movff	postinc2,tblptrl
 11621  012738  006F FF77 FFF7     	movff	postdec2,tblptrh
 11622  01273E                     	if	0	;tblptru may be non-zero
 11623  01273E                     	endif
 11624  01273E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11625  01273E  0E00               	movlw	low (__mediumconst shr (0+16))
 11626  012740  6EF8               	movwf	tblptru,c
 11627  012742                     	endif
 11628  012742  0008               	tblrd		*
 11629  012744  50F5               	movf	tablat,w,c
 11630  012746  0A64               	xorlw	100
 11631  012748  B4D8               	btfsc	status,2,c
 11632  01274A  D015               	goto	u11720
 11633                           
 11634                           ;stkvar	_fmt @ sp[(-32)+-4]
 11635  01274C  0EDC               	movlw	-36
 11636  01274E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11637  012754  0EDD               	movlw	-35
 11638  012756  006F FF8F FFDA     	movff	plusw1,fsr2h
 11639  01275C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11640  012762  006F FF77 FFF7     	movff	postdec2,tblptrh
 11641  012768                     	if	0	;tblptru may be non-zero
 11642  012768                     	endif
 11643  012768                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11644  012768  0E00               	movlw	low (__mediumconst shr (0+16))
 11645  01276A  6EF8               	movwf	tblptru,c
 11646  01276C                     	endif
 11647  01276C  0008               	tblrd		*
 11648  01276E  50F5               	movf	tablat,w,c
 11649  012770  0A69               	xorlw	105
 11650  012772  A4D8               	btfss	status,2,c
 11651  012774  D076               	goto	l12134
 11652  012776                     u11720:
 11653                           
 11654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11655                           ;stkvar	_fmt @ sp[(-32)+-4]
 11656  012776  0EDC               	movlw	-36
 11657  012778  006F FF8F FFD9     	movff	plusw1,fsr2l
 11658  01277E  0EDD               	movlw	-35
 11659  012780  006F FF8F FFDA     	movff	plusw1,fsr2h
 11660  012786  2ADE               	incf	postinc2,f,c
 11661  012788  0E00               	movlw	0
 11662  01278A  22DD               	addwfc	postdec2,f,c
 11663                           
 11664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11665                           ;stkvar	_ap @ sp[(-32)+-6]
 11666  01278C  0EDA               	movlw	-38
 11667  01278E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11668  012794  0EDB               	movlw	-37
 11669  012796  006F FF8F FFDA     	movff	plusw1,fsr2h
 11670  01279C  0E02               	movlw	2
 11671  01279E  5EDE               	subwf	postinc2,f,c
 11672  0127A0  0E00               	movlw	0
 11673  0127A2  5ADD               	subwfb	postdec2,f,c
 11674  0127A4  006F FF78  F032    	movff	postinc2,btemp+10
 11675  0127AA  006F FF74  F033    	movff	postdec2,btemp+11
 11676  0127B0  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11677  0127B6  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11678  0127BC  006F FF78  F032    	movff	postinc2,btemp+10
 11679  0127C2  006F FF74  F033    	movff	postdec2,btemp+11
 11680                           
 11681                           ;stkvar	_ll @ sp[(-32)+14]
 11682  0127C8  0EEE               	movlw	-18
 11683  0127CA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11684  0127D0  0EEF               	movlw	-17
 11685  0127D2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11686  0127D8  6A28               	clrf	btemp^0,c
 11687  0127DA  BEE3               	btfsc	plusw1,7,c
 11688  0127DC  6828               	setf	btemp^0,c
 11689  0127DE  0EF0               	movlw	-16
 11690  0127E0  0060  F0A3  FFE3   	movff	btemp,plusw1
 11691  0127E6  0EF1               	movlw	-15
 11692  0127E8  0060  F0A3  FFE3   	movff	btemp,plusw1
 11693  0127EE  0EF2               	movlw	-14
 11694  0127F0  0060  F0A3  FFE3   	movff	btemp,plusw1
 11695  0127F6  0EF3               	movlw	-13
 11696  0127F8  0060  F0A3  FFE3   	movff	btemp,plusw1
 11697  0127FE  0EF4               	movlw	-12
 11698  012800  0060  F0A3  FFE3   	movff	btemp,plusw1
 11699  012806  0EF5               	movlw	-11
 11700  012808  0060  F0A3  FFE3   	movff	btemp,plusw1
 11701  01280E                     l12130:
 11702                           
 11703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11704                           ;stkvar	_ll @ sp[(-32)+14]
 11705  01280E  50E1               	movf	fsr1l,w,c
 11706  012810  0FEE               	addlw	-18
 11707  012812  6ED9               	movwf	fsr2l,c
 11708  012814  50E2               	movf	fsr1h,w,c
 11709  012816  6EDA               	movwf	fsr2h,c
 11710  012818  0EFF               	movlw	255
 11711  01281A  22DA               	addwfc	fsr2h,f,c
 11712  01281C  006F FF7B FFE6     	movff	postinc2,postinc1
 11713  012822  006F FF7B FFE6     	movff	postinc2,postinc1
 11714  012828  006F FF7B FFE6     	movff	postinc2,postinc1
 11715  01282E  006F FF7B FFE6     	movff	postinc2,postinc1
 11716  012834  006F FF7B FFE6     	movff	postinc2,postinc1
 11717  01283A  006F FF7B FFE6     	movff	postinc2,postinc1
 11718  012840  006F FF7B FFE6     	movff	postinc2,postinc1
 11719  012846  006F FF7B FFE6     	movff	postinc2,postinc1
 11720                           
 11721                           ;stkvar	_fp @ sp[(-40)+-2]
 11722  01284C  0ED6               	movlw	-42
 11723  01284E  006F FF8F FFE6     	movff	plusw1,postinc1
 11724  012854  006F FF8F FFE6     	movff	plusw1,postinc1
 11725  01285A  ECB6  F0A9         	call	_dtoa	;wreg free
 11726  01285E  EF0A  F099         	goto	l2334
 11727  012862                     l12134:
 11728                           
 11729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11730  012862  0E02               	movlw	2
 11731  012864  6EE6               	movwf	postinc1,c
 11732  012866  0E00               	movlw	0
 11733  012868  6EE6               	movwf	postinc1,c
 11734  01286A  0EE9               	movlw	low STR_74
 11735  01286C  6EE6               	movwf	postinc1,c
 11736  01286E  0EFF               	movlw	high STR_74
 11737  012870  6EE6               	movwf	postinc1,c
 11738                           
 11739                           ;stkvar	_fmt @ sp[(-36)+-4]
 11740  012872  0ED8               	movlw	-40
 11741  012874  006F FF8F FFD9     	movff	plusw1,fsr2l
 11742  01287A  0ED9               	movlw	-39
 11743  01287C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11744  012882  006F FF78  F032    	movff	postinc2,btemp+10
 11745  012888  006F FF74  F033    	movff	postdec2,btemp+11
 11746  01288E  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11747  012894  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11748  01289A  ECC9  F0BA         	call	_strncmp	;wreg free
 11749  01289E  5028               	movf	btemp^0,w,c
 11750  0128A0  1029               	iorwf	(btemp+1)^0,w,c
 11751  0128A2  B4D8               	btfsc	status,2,c
 11752  0128A4  D022               	goto	u11740
 11753  0128A6  0E02               	movlw	2
 11754  0128A8  6EE6               	movwf	postinc1,c
 11755  0128AA  0E00               	movlw	0
 11756  0128AC  6EE6               	movwf	postinc1,c
 11757  0128AE  0EEF               	movlw	low STR_78
 11758  0128B0  6EE6               	movwf	postinc1,c
 11759  0128B2  0EFF               	movlw	high STR_78
 11760  0128B4  6EE6               	movwf	postinc1,c
 11761                           
 11762                           ;stkvar	_fmt @ sp[(-36)+-4]
 11763  0128B6  0ED8               	movlw	-40
 11764  0128B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11765  0128BE  0ED9               	movlw	-39
 11766  0128C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11767  0128C6  006F FF78  F032    	movff	postinc2,btemp+10
 11768  0128CC  006F FF74  F033    	movff	postdec2,btemp+11
 11769  0128D2  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11770  0128D8  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11771  0128DE  ECC9  F0BA         	call	_strncmp	;wreg free
 11772  0128E2  5028               	movf	btemp^0,w,c
 11773  0128E4  1029               	iorwf	(btemp+1)^0,w,c
 11774  0128E6  A4D8               	btfss	status,2,c
 11775  0128E8  D069               	goto	l12146
 11776  0128EA                     u11740:
 11777                           
 11778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11779                           ;stkvar	_fmt @ sp[(-32)+-4]
 11780  0128EA  0EDC               	movlw	-36
 11781  0128EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11782  0128F2  0EDD               	movlw	-35
 11783  0128F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11784  0128FA  0E02               	movlw	2
 11785  0128FC  26DE               	addwf	postinc2,f,c
 11786  0128FE  0E00               	movlw	0
 11787  012900  22DD               	addwfc	postdec2,f,c
 11788                           
 11789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11790                           ;stkvar	_ap @ sp[(-32)+-6]
 11791  012902  0EDA               	movlw	-38
 11792  012904  006F FF8F FFD9     	movff	plusw1,fsr2l
 11793  01290A  0EDB               	movlw	-37
 11794  01290C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11795  012912  0E04               	movlw	4
 11796  012914  5EDE               	subwf	postinc2,f,c
 11797  012916  0E00               	movlw	0
 11798  012918  5ADD               	subwfb	postdec2,f,c
 11799  01291A  006F FF78  F032    	movff	postinc2,btemp+10
 11800  012920  006F FF74  F033    	movff	postdec2,btemp+11
 11801  012926  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11802  01292C  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11803  012932  006F FF78  F030    	movff	postinc2,btemp+8
 11804  012938  006F FF78  F031    	movff	postinc2,btemp+9
 11805  01293E  006F FF78  F032    	movff	postinc2,btemp+10
 11806  012944  006F FF78  F033    	movff	postinc2,btemp+11
 11807  01294A  0060  F0C0  F038   	movff	btemp+8,btemp+16
 11808  012950  0060  F0C4  F039   	movff	btemp+9,btemp+17
 11809  012956  0060  F0C8  F03A   	movff	btemp+10,btemp+18
 11810  01295C  0060  F0CC  F03B   	movff	btemp+11,btemp+19
 11811  012962  6A3C               	clrf	(btemp+20)^0,c
 11812  012964  BE3B               	btfsc	(btemp+19)^0,7,c
 11813  012966  683C               	setf	(btemp+20)^0,c
 11814  012968  0060  F0F0  F03D   	movff	btemp+20,btemp+21
 11815  01296E  0060  F0F0  F03E   	movff	btemp+20,btemp+22
 11816  012974  0060  F0F0  F03F   	movff	btemp+20,btemp+23
 11817                           
 11818                           ;stkvar	_ll @ sp[(-32)+14]
 11819  01297A  0EEE               	movlw	-18
 11820  01297C  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 11821  012982  0EEF               	movlw	-17
 11822  012984  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 11823  01298A  0EF0               	movlw	-16
 11824  01298C  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 11825  012992  0EF1               	movlw	-15
 11826  012994  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 11827  01299A  0EF2               	movlw	-14
 11828  01299C  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 11829  0129A2  0EF3               	movlw	-13
 11830  0129A4  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 11831  0129AA  0EF4               	movlw	-12
 11832  0129AC  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 11833  0129B2  0EF5               	movlw	-11
 11834  0129B4  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 11835  0129BA  D729               	goto	l12130
 11836  0129BC                     l12146:
 11837                           
 11838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11839                           ;stkvar	_ct @ sp[(-32)+26]
 11840  0129BC  0EFA               	movlw	-6
 11841  0129BE  006F FF8C  F028    	movff	plusw1,btemp
 11842  0129C4  0E66               	movlw	102
 11843  0129C6  1828               	xorwf	btemp^0,w,c
 11844  0129C8  A4D8               	btfss	status,2,c
 11845  0129CA  D06E               	goto	l12158
 11846                           
 11847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11848                           ;stkvar	_fmt @ sp[(-32)+-4]
 11849  0129CC  0EDC               	movlw	-36
 11850  0129CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11851  0129D4  0EDD               	movlw	-35
 11852  0129D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11853  0129DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11854  0129E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11855  0129E8                     	if	0	;tblptru may be non-zero
 11856  0129E8                     	endif
 11857  0129E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11858  0129E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11859  0129EA  6EF8               	movwf	tblptru,c
 11860  0129EC                     	endif
 11861                           
 11862                           ;stkvar	_c @ sp[(-32)+31]
 11863  0129EC  0008               	tblrd		*
 11864  0129EE  0EFF               	movlw	-1
 11865  0129F0  006F FFD7 FFE3     	movff	tablat,plusw1
 11866                           
 11867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11868                           ;stkvar	_fmt @ sp[(-32)+-4]
 11869  0129F6  0EDC               	movlw	-36
 11870  0129F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11871  0129FE  0EDD               	movlw	-35
 11872  012A00  006F FF8F FFDA     	movff	plusw1,fsr2h
 11873  012A06  2ADE               	incf	postinc2,f,c
 11874  012A08  0E00               	movlw	0
 11875  012A0A  22DD               	addwfc	postdec2,f,c
 11876                           
 11877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11878                           ;stkvar	_ap @ sp[(-32)+-6]
 11879  012A0C  0EDA               	movlw	-38
 11880  012A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11881  012A14  0EDB               	movlw	-37
 11882  012A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 11883  012A1C  0E04               	movlw	4
 11884  012A1E  5EDE               	subwf	postinc2,f,c
 11885  012A20  0E00               	movlw	0
 11886  012A22  5ADD               	subwfb	postdec2,f,c
 11887  012A24  006F FF78  F032    	movff	postinc2,btemp+10
 11888  012A2A  006F FF74  F033    	movff	postdec2,btemp+11
 11889  012A30  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11890  012A36  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11891  012A3C  006F FF78  F030    	movff	postinc2,btemp+8
 11892  012A42  006F FF78  F031    	movff	postinc2,btemp+9
 11893  012A48  006F FF78  F032    	movff	postinc2,btemp+10
 11894  012A4E  006F FF78  F033    	movff	postinc2,btemp+11
 11895                           
 11896                           ;stkvar	_f @ sp[(-32)+22]
 11897  012A54  0EF6               	movlw	-10
 11898  012A56  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 11899  012A5C  0EF7               	movlw	-9
 11900  012A5E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 11901  012A64  0EF8               	movlw	-8
 11902  012A66  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11903  012A6C  0EF9               	movlw	-7
 11904  012A6E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11905  012A74                     l12154:
 11906                           
 11907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11908                           ;stkvar	_c @ sp[(-32)+31]
 11909  012A74  0EFF               	movlw	-1
 11910  012A76  50E3               	movf	plusw1,w,c
 11911  012A78  6EE6               	movwf	postinc1,c
 11912                           
 11913                           ;stkvar	_f @ sp[(-33)+22]
 11914  012A7A  0EF5               	movlw	-11
 11915  012A7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11916  012A82  006F FF8F FFE6     	movff	plusw1,postinc1
 11917  012A88  006F FF8F FFE6     	movff	plusw1,postinc1
 11918  012A8E  006F FF8F FFE6     	movff	plusw1,postinc1
 11919                           
 11920                           ;stkvar	_fp @ sp[(-37)+-2]
 11921  012A94  0ED9               	movlw	-39
 11922  012A96  006F FF8F FFE6     	movff	plusw1,postinc1
 11923  012A9C  006F FF8F FFE6     	movff	plusw1,postinc1
 11924  012AA2  EC00  F080         	call	_efgtoa	;wreg free
 11925  012AA6  D3B6               	goto	l2334
 11926  012AA8                     l12158:
 11927                           
 11928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11929  012AA8  0E02               	movlw	2
 11930  012AAA  6EE6               	movwf	postinc1,c
 11931  012AAC  0E00               	movlw	0
 11932  012AAE  6EE6               	movwf	postinc1,c
 11933  012AB0  0EEC               	movlw	low STR_83
 11934  012AB2  6EE6               	movwf	postinc1,c
 11935  012AB4  0EFF               	movlw	high STR_83
 11936  012AB6  6EE6               	movwf	postinc1,c
 11937                           
 11938                           ;stkvar	_ct @ sp[(-36)+26]
 11939  012AB8  0EF6               	movlw	246
 11940  012ABA  24E1               	addwf	fsr1l,w,c
 11941  012ABC  6E28               	movwf	btemp^0,c
 11942  012ABE  0EFF               	movlw	255
 11943  012AC0  20E2               	addwfc	fsr1h,w,c
 11944  012AC2  6E29               	movwf	(btemp+1)^0,c
 11945  012AC4  0060  F0A3  FFE6   	movff	btemp,postinc1
 11946  012ACA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 11947  012AD0  ECC9  F0BA         	call	_strncmp	;wreg free
 11948  012AD4  5028               	movf	btemp^0,w,c
 11949  012AD6  1029               	iorwf	(btemp+1)^0,w,c
 11950  012AD8  A4D8               	btfss	status,2,c
 11951  012ADA  D096               	goto	l12178
 11952                           
 11953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11954                           ;stkvar	_fmt @ sp[(-32)+-4]
 11955  012ADC  0EDC               	movlw	-36
 11956  012ADE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11957  012AE4  0EDD               	movlw	-35
 11958  012AE6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11959  012AEC  006F FF78  F032    	movff	postinc2,btemp+10
 11960  012AF2  006F FF74  F033    	movff	postdec2,btemp+11
 11961  012AF8  0E01               	movlw	1
 11962  012AFA  2632               	addwf	(btemp+10)^0,f,c
 11963  012AFC  0E00               	movlw	0
 11964  012AFE  2233               	addwfc	(btemp+11)^0,f,c
 11965  012B00  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 11966  012B06  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 11967  012B0C                     	if	0	;tblptru may be non-zero
 11968  012B0C                     	endif
 11969  012B0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11970  012B0C  0E00               	movlw	low (__mediumconst shr (0+16))
 11971  012B0E  6EF8               	movwf	tblptru,c
 11972  012B10                     	endif
 11973                           
 11974                           ;stkvar	_c @ sp[(-32)+31]
 11975  012B10  0008               	tblrd		*
 11976  012B12  0EFF               	movlw	-1
 11977  012B14  006F FFD7 FFE3     	movff	tablat,plusw1
 11978  012B1A  0EBF               	movlw	191
 11979  012B1C  6E32               	movwf	(btemp+10)^0,c
 11980  012B1E  0EFF               	movlw	255
 11981  012B20  6E33               	movwf	(btemp+11)^0,c
 11982                           
 11983                           ;stkvar	_fmt @ sp[(-32)+-4]
 11984  012B22  0EDC               	movlw	-36
 11985  012B24  006F FF8F FFD9     	movff	plusw1,fsr2l
 11986  012B2A  0EDD               	movlw	-35
 11987  012B2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11988  012B32  006F FF7B FFF6     	movff	postinc2,tblptrl
 11989  012B38  006F FF77 FFF7     	movff	postdec2,tblptrh
 11990  012B3E                     	if	0	;tblptru may be non-zero
 11991  012B3E                     	endif
 11992  012B3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11993  012B3E  0E00               	movlw	low (__mediumconst shr (0+16))
 11994  012B40  6EF8               	movwf	tblptru,c
 11995  012B42                     	endif
 11996  012B42  0008               	tblrd		*
 11997  012B44  50F5               	movf	tablat,w,c
 11998  012B46  6E30               	movwf	(btemp+8)^0,c
 11999  012B48  6A31               	clrf	(btemp+9)^0,c
 12000  012B4A  5032               	movf	(btemp+10)^0,w,c
 12001  012B4C  2630               	addwf	(btemp+8)^0,f,c
 12002  012B4E  5033               	movf	(btemp+11)^0,w,c
 12003  012B50  2231               	addwfc	(btemp+9)^0,f,c
 12004  012B52  5031               	movf	(btemp+9)^0,w,c
 12005  012B54  E106               	bnz	u11770
 12006  012B56  0E1A               	movlw	26
 12007  012B58  5C30               	subwf	(btemp+8)^0,w,c
 12008  012B5A  B0D8               	btfsc	status,0,c
 12009  012B5C  D002               	goto	u11770
 12010  012B5E  0E01               	movlw	1
 12011  012B60  D001               	goto	u11780
 12012  012B62                     u11770:
 12013  012B62  0E00               	movlw	0
 12014  012B64                     u11780:
 12015  012B64  6E32               	movwf	(btemp+10)^0,c
 12016  012B66  6A33               	clrf	(btemp+11)^0,c
 12017                           
 12018                           ;stkvar	_vfpfcnvrt$5454 @ sp[(-32)+2]
 12019  012B68  0EE2               	movlw	-30
 12020  012B6A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12021  012B70  0EE3               	movlw	-29
 12022  012B72  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12023                           
 12024                           ;stkvar	_vfpfcnvrt$5454 @ sp[(-32)+2]
 12025  012B78  0EE2               	movlw	-30
 12026  012B7A  006F FF8C  F028    	movff	plusw1,btemp
 12027  012B80  0EE3               	movlw	-29
 12028  012B82  50E3               	movf	plusw1,w,c
 12029  012B84  1028               	iorwf	btemp^0,w,c
 12030                           
 12031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12032                           ;stkvar	_ap @ sp[(-32)+-6]
 12033                           
 12034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12035                           
 12036                           ;stkvar	_f @ sp[(-32)+22]
 12037                           
 12038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12039                           ;stkvar	_ap @ sp[(-32)+-6]
 12040  012B86  0EDA               	movlw	-38
 12041  012B88  006F FF8F FFD9     	movff	plusw1,fsr2l
 12042  012B8E  0EDB               	movlw	-37
 12043  012B90  006F FF8F FFDA     	movff	plusw1,fsr2h
 12044  012B96  0E04               	movlw	4
 12045  012B98  5EDE               	subwf	postinc2,f,c
 12046  012B9A  0E00               	movlw	0
 12047  012B9C  5ADD               	subwfb	postdec2,f,c
 12048  012B9E  006F FF78  F032    	movff	postinc2,btemp+10
 12049  012BA4  006F FF74  F033    	movff	postdec2,btemp+11
 12050  012BAA  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12051  012BB0  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12052  012BB6  006F FF78  F030    	movff	postinc2,btemp+8
 12053  012BBC  006F FF78  F031    	movff	postinc2,btemp+9
 12054  012BC2  006F FF78  F032    	movff	postinc2,btemp+10
 12055  012BC8  006F FF78  F033    	movff	postinc2,btemp+11
 12056                           
 12057                           ;stkvar	_f @ sp[(-32)+22]
 12058  012BCE  0EF6               	movlw	-10
 12059  012BD0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 12060  012BD6  0EF7               	movlw	-9
 12061  012BD8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 12062  012BDE  0EF8               	movlw	-8
 12063  012BE0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12064  012BE6  0EF9               	movlw	-7
 12065  012BE8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12066                           
 12067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12068                           ;stkvar	_fmt @ sp[(-32)+-4]
 12069  012BEE  0EDC               	movlw	-36
 12070  012BF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12071  012BF6  0EDD               	movlw	-35
 12072  012BF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12073  012BFE  0E02               	movlw	2
 12074  012C00  26DE               	addwf	postinc2,f,c
 12075  012C02  0E00               	movlw	0
 12076  012C04  22DD               	addwfc	postdec2,f,c
 12077  012C06  D736               	goto	l12154
 12078  012C08                     l12178:
 12079                           
 12080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12081                           ;stkvar	_fmt @ sp[(-32)+-4]
 12082  012C08  0EDC               	movlw	-36
 12083  012C0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12084  012C10  0EDD               	movlw	-35
 12085  012C12  006F FF8F FFDA     	movff	plusw1,fsr2h
 12086  012C18  006F FF7B FFF6     	movff	postinc2,tblptrl
 12087  012C1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12088  012C24                     	if	0	;tblptru may be non-zero
 12089  012C24                     	endif
 12090  012C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12091  012C24  0E00               	movlw	low (__mediumconst shr (0+16))
 12092  012C26  6EF8               	movwf	tblptru,c
 12093  012C28                     	endif
 12094  012C28  0008               	tblrd		*
 12095  012C2A  50F5               	movf	tablat,w,c
 12096  012C2C  0A73               	xorlw	115
 12097  012C2E  A4D8               	btfss	status,2,c
 12098  012C30  D042               	goto	l12188
 12099                           
 12100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12101                           ;stkvar	_fmt @ sp[(-32)+-4]
 12102  012C32  0EDC               	movlw	-36
 12103  012C34  006F FF8F FFD9     	movff	plusw1,fsr2l
 12104  012C3A  0EDD               	movlw	-35
 12105  012C3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12106  012C42  2ADE               	incf	postinc2,f,c
 12107  012C44  0E00               	movlw	0
 12108  012C46  22DD               	addwfc	postdec2,f,c
 12109                           
 12110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12111                           ;stkvar	_ap @ sp[(-32)+-6]
 12112  012C48  0EDA               	movlw	-38
 12113  012C4A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12114  012C50  0EDB               	movlw	-37
 12115  012C52  006F FF8F FFDA     	movff	plusw1,fsr2h
 12116  012C58  0E02               	movlw	2
 12117  012C5A  5EDE               	subwf	postinc2,f,c
 12118  012C5C  0E00               	movlw	0
 12119  012C5E  5ADD               	subwfb	postdec2,f,c
 12120  012C60  006F FF78  F032    	movff	postinc2,btemp+10
 12121  012C66  006F FF74  F033    	movff	postdec2,btemp+11
 12122  012C6C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12123  012C72  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12124  012C78  006F FF78  F032    	movff	postinc2,btemp+10
 12125  012C7E  006F FF74  F033    	movff	postdec2,btemp+11
 12126                           
 12127                           ;stkvar	_cp @ sp[(-32)+29]
 12128  012C84  0EFE               	movlw	-2
 12129  012C86  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12130  012C8C  0EFD               	movlw	-3
 12131  012C8E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12132                           
 12133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12134                           ;stkvar	_cp @ sp[(-32)+29]
 12135  012C94  0EFD               	movlw	-3
 12136  012C96  006F FF8F FFE6     	movff	plusw1,postinc1
 12137  012C9C  006F FF8F FFE6     	movff	plusw1,postinc1
 12138                           
 12139                           ;stkvar	_fp @ sp[(-34)+-2]
 12140  012CA2  0EDC               	movlw	-36
 12141  012CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12142  012CAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12143  012CB0  ECD0  F0B5         	call	_stoa	;wreg free
 12144  012CB4  D2AF               	goto	l2334
 12145  012CB6                     l12188:
 12146                           
 12147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12148                           ;stkvar	_fmt @ sp[(-32)+-4]
 12149  012CB6  0EDC               	movlw	-36
 12150  012CB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12151  012CBE  0EDD               	movlw	-35
 12152  012CC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12153  012CC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 12154  012CCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 12155  012CD2                     	if	0	;tblptru may be non-zero
 12156  012CD2                     	endif
 12157  012CD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12158  012CD2  0E00               	movlw	low (__mediumconst shr (0+16))
 12159  012CD4  6EF8               	movwf	tblptru,c
 12160  012CD6                     	endif
 12161  012CD6  0008               	tblrd		*
 12162  012CD8  50F5               	movf	tablat,w,c
 12163  012CDA  0A75               	xorlw	117
 12164  012CDC  A4D8               	btfss	status,2,c
 12165  012CDE  D07C               	goto	l12198
 12166                           
 12167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12168                           ;stkvar	_fmt @ sp[(-32)+-4]
 12169  012CE0  0EDC               	movlw	-36
 12170  012CE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12171  012CE8  0EDD               	movlw	-35
 12172  012CEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12173  012CF0  2ADE               	incf	postinc2,f,c
 12174  012CF2  0E00               	movlw	0
 12175  012CF4  22DD               	addwfc	postdec2,f,c
 12176                           
 12177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12178                           ;stkvar	_ap @ sp[(-32)+-6]
 12179  012CF6  0EDA               	movlw	-38
 12180  012CF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12181  012CFE  0EDB               	movlw	-37
 12182  012D00  006F FF8F FFDA     	movff	plusw1,fsr2h
 12183  012D06  0E02               	movlw	2
 12184  012D08  5EDE               	subwf	postinc2,f,c
 12185  012D0A  0E00               	movlw	0
 12186  012D0C  5ADD               	subwfb	postdec2,f,c
 12187  012D0E  006F FF78  F032    	movff	postinc2,btemp+10
 12188  012D14  006F FF74  F033    	movff	postdec2,btemp+11
 12189  012D1A  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12190  012D20  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12191  012D26  006F FF78  F032    	movff	postinc2,btemp+10
 12192  012D2C  006F FF74  F033    	movff	postdec2,btemp+11
 12193  012D32  5032               	movf	(btemp+10)^0,w,c
 12194  012D34  6E38               	movwf	(btemp+16)^0,c
 12195  012D36  5033               	movf	(btemp+11)^0,w,c
 12196  012D38  6E39               	movwf	(btemp+17)^0,c
 12197  012D3A  6A3A               	clrf	(btemp+18)^0,c
 12198  012D3C  6A3B               	clrf	(btemp+19)^0,c
 12199  012D3E  6A3C               	clrf	(btemp+20)^0,c
 12200  012D40  6A3D               	clrf	(btemp+21)^0,c
 12201  012D42  6A3E               	clrf	(btemp+22)^0,c
 12202  012D44  6A3F               	clrf	(btemp+23)^0,c
 12203                           
 12204                           ;stkvar	_llu @ sp[(-32)+6]
 12205  012D46  0EE6               	movlw	-26
 12206  012D48  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 12207  012D4E  0EE7               	movlw	-25
 12208  012D50  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 12209  012D56  0EE8               	movlw	-24
 12210  012D58  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 12211  012D5E  0EE9               	movlw	-23
 12212  012D60  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 12213  012D66  0EEA               	movlw	-22
 12214  012D68  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 12215  012D6E  0EEB               	movlw	-21
 12216  012D70  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 12217  012D76  0EEC               	movlw	-20
 12218  012D78  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 12219  012D7E  0EED               	movlw	-19
 12220  012D80  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 12221                           
 12222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12223                           ;stkvar	_llu @ sp[(-32)+6]
 12224  012D86  50E1               	movf	fsr1l,w,c
 12225  012D88  0FE6               	addlw	-26
 12226  012D8A  6ED9               	movwf	fsr2l,c
 12227  012D8C  50E2               	movf	fsr1h,w,c
 12228  012D8E  6EDA               	movwf	fsr2h,c
 12229  012D90  0EFF               	movlw	255
 12230  012D92  22DA               	addwfc	fsr2h,f,c
 12231  012D94  006F FF7B FFE6     	movff	postinc2,postinc1
 12232  012D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 12233  012DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 12234  012DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 12235  012DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 12236  012DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 12237  012DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 12238  012DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 12239                           
 12240                           ;stkvar	_fp @ sp[(-40)+-2]
 12241  012DC4  0ED6               	movlw	-42
 12242  012DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12243  012DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12244  012DD2  EC5A  F0B1         	call	_utoa	;wreg free
 12245  012DD6  D21E               	goto	l2334
 12246  012DD8                     l12198:
 12247                           
 12248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12249  012DD8  0E02               	movlw	2
 12250  012DDA  6EE6               	movwf	postinc1,c
 12251  012DDC  0E00               	movlw	0
 12252  012DDE  6EE6               	movwf	postinc1,c
 12253  012DE0  0EF2               	movlw	low STR_88
 12254  012DE2  6EE6               	movwf	postinc1,c
 12255  012DE4  0EFF               	movlw	high STR_88
 12256  012DE6  6EE6               	movwf	postinc1,c
 12257                           
 12258                           ;stkvar	_fmt @ sp[(-36)+-4]
 12259  012DE8  0ED8               	movlw	-40
 12260  012DEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12261  012DF0  0ED9               	movlw	-39
 12262  012DF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12263  012DF8  006F FF78  F032    	movff	postinc2,btemp+10
 12264  012DFE  006F FF74  F033    	movff	postdec2,btemp+11
 12265  012E04  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 12266  012E0A  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 12267  012E10  ECC9  F0BA         	call	_strncmp	;wreg free
 12268  012E14  5028               	movf	btemp^0,w,c
 12269  012E16  1029               	iorwf	(btemp+1)^0,w,c
 12270  012E18  A4D8               	btfss	status,2,c
 12271  012E1A  D039               	goto	l12208
 12272                           
 12273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12274                           ;stkvar	_fmt @ sp[(-32)+-4]
 12275  012E1C  0EDC               	movlw	-36
 12276  012E1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12277  012E24  0EDD               	movlw	-35
 12278  012E26  006F FF8F FFDA     	movff	plusw1,fsr2h
 12279  012E2C  0E02               	movlw	2
 12280  012E2E  26DE               	addwf	postinc2,f,c
 12281  012E30  0E00               	movlw	0
 12282  012E32  22DD               	addwfc	postdec2,f,c
 12283                           
 12284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12285                           ;stkvar	_ap @ sp[(-32)+-6]
 12286  012E34  0EDA               	movlw	-38
 12287  012E36  006F FF8F FFD9     	movff	plusw1,fsr2l
 12288  012E3C  0EDB               	movlw	-37
 12289  012E3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12290  012E44  0E04               	movlw	4
 12291  012E46  5EDE               	subwf	postinc2,f,c
 12292  012E48  0E00               	movlw	0
 12293  012E4A  5ADD               	subwfb	postdec2,f,c
 12294  012E4C  006F FF78  F032    	movff	postinc2,btemp+10
 12295  012E52  006F FF74  F033    	movff	postdec2,btemp+11
 12296  012E58  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12297  012E5E  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12298  012E64  006F FF78  F030    	movff	postinc2,btemp+8
 12299  012E6A  006F FF78  F031    	movff	postinc2,btemp+9
 12300  012E70  006F FF78  F032    	movff	postinc2,btemp+10
 12301  012E76  006F FF78  F033    	movff	postinc2,btemp+11
 12302  012E7C  5030               	movf	(btemp+8)^0,w,c
 12303  012E7E  6E38               	movwf	(btemp+16)^0,c
 12304  012E80  5031               	movf	(btemp+9)^0,w,c
 12305  012E82  6E39               	movwf	(btemp+17)^0,c
 12306  012E84  5032               	movf	(btemp+10)^0,w,c
 12307  012E86  6E3A               	movwf	(btemp+18)^0,c
 12308  012E88  5033               	movf	(btemp+11)^0,w,c
 12309  012E8A  6E3B               	movwf	(btemp+19)^0,c
 12310  012E8C  D758               	goto	L8
 12311  012E8E                     l12208:
 12312                           
 12313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12314                           ;stkvar	_fmt @ sp[(-32)+-4]
 12315  012E8E  0EDC               	movlw	-36
 12316  012E90  006F FF8F FFD9     	movff	plusw1,fsr2l
 12317  012E96  0EDD               	movlw	-35
 12318  012E98  006F FF8F FFDA     	movff	plusw1,fsr2h
 12319  012E9E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12320  012EA4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12321  012EAA                     	if	0	;tblptru may be non-zero
 12322  012EAA                     	endif
 12323  012EAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12324  012EAA  0E00               	movlw	low (__mediumconst shr (0+16))
 12325  012EAC  6EF8               	movwf	tblptru,c
 12326  012EAE                     	endif
 12327  012EAE  0008               	tblrd		*
 12328  012EB0  50F5               	movf	tablat,w,c
 12329  012EB2  0A78               	xorlw	120
 12330  012EB4  B4D8               	btfsc	status,2,c
 12331  012EB6  D015               	goto	u11840
 12332                           
 12333                           ;stkvar	_fmt @ sp[(-32)+-4]
 12334  012EB8  0EDC               	movlw	-36
 12335  012EBA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12336  012EC0  0EDD               	movlw	-35
 12337  012EC2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12338  012EC8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12339  012ECE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12340  012ED4                     	if	0	;tblptru may be non-zero
 12341  012ED4                     	endif
 12342  012ED4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12343  012ED4  0E00               	movlw	low (__mediumconst shr (0+16))
 12344  012ED6  6EF8               	movwf	tblptru,c
 12345  012ED8                     	endif
 12346  012ED8  0008               	tblrd		*
 12347  012EDA  50F5               	movf	tablat,w,c
 12348  012EDC  0A58               	xorlw	88
 12349  012EDE  A4D8               	btfss	status,2,c
 12350  012EE0  D094               	goto	l12222
 12351  012EE2                     u11840:
 12352                           
 12353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12354                           ;stkvar	_fmt @ sp[(-32)+-4]
 12355  012EE2  0EDC               	movlw	-36
 12356  012EE4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12357  012EEA  0EDD               	movlw	-35
 12358  012EEC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12359  012EF2  006F FF7B FFF6     	movff	postinc2,tblptrl
 12360  012EF8  006F FF77 FFF7     	movff	postdec2,tblptrh
 12361  012EFE                     	if	0	;tblptru may be non-zero
 12362  012EFE                     	endif
 12363  012EFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12364  012EFE  0E00               	movlw	low (__mediumconst shr (0+16))
 12365  012F00  6EF8               	movwf	tblptru,c
 12366  012F02                     	endif
 12367                           
 12368                           ;stkvar	_c @ sp[(-32)+31]
 12369  012F02  0008               	tblrd		*
 12370  012F04  0EFF               	movlw	-1
 12371  012F06  006F FFD7 FFE3     	movff	tablat,plusw1
 12372                           
 12373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12374                           ;stkvar	_fmt @ sp[(-32)+-4]
 12375  012F0C  0EDC               	movlw	-36
 12376  012F0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12377  012F14  0EDD               	movlw	-35
 12378  012F16  006F FF8F FFDA     	movff	plusw1,fsr2h
 12379  012F1C  2ADE               	incf	postinc2,f,c
 12380  012F1E  0E00               	movlw	0
 12381  012F20  22DD               	addwfc	postdec2,f,c
 12382                           
 12383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12384                           ;stkvar	_ap @ sp[(-32)+-6]
 12385  012F22  0EDA               	movlw	-38
 12386  012F24  006F FF8F FFD9     	movff	plusw1,fsr2l
 12387  012F2A  0EDB               	movlw	-37
 12388  012F2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12389  012F32  0E02               	movlw	2
 12390  012F34  5EDE               	subwf	postinc2,f,c
 12391  012F36  0E00               	movlw	0
 12392  012F38  5ADD               	subwfb	postdec2,f,c
 12393  012F3A  006F FF78  F032    	movff	postinc2,btemp+10
 12394  012F40  006F FF74  F033    	movff	postdec2,btemp+11
 12395  012F46  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12396  012F4C  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12397  012F52  006F FF78  F032    	movff	postinc2,btemp+10
 12398  012F58  006F FF74  F033    	movff	postdec2,btemp+11
 12399  012F5E  5032               	movf	(btemp+10)^0,w,c
 12400  012F60  6E38               	movwf	(btemp+16)^0,c
 12401  012F62  5033               	movf	(btemp+11)^0,w,c
 12402  012F64  6E39               	movwf	(btemp+17)^0,c
 12403  012F66  6A3A               	clrf	(btemp+18)^0,c
 12404  012F68  6A3B               	clrf	(btemp+19)^0,c
 12405  012F6A  6A3C               	clrf	(btemp+20)^0,c
 12406  012F6C  6A3D               	clrf	(btemp+21)^0,c
 12407  012F6E  6A3E               	clrf	(btemp+22)^0,c
 12408  012F70  6A3F               	clrf	(btemp+23)^0,c
 12409                           
 12410                           ;stkvar	_llu @ sp[(-32)+6]
 12411  012F72  0EE6               	movlw	-26
 12412  012F74  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 12413  012F7A  0EE7               	movlw	-25
 12414  012F7C  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 12415  012F82  0EE8               	movlw	-24
 12416  012F84  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 12417  012F8A  0EE9               	movlw	-23
 12418  012F8C  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 12419  012F92  0EEA               	movlw	-22
 12420  012F94  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 12421  012F9A  0EEB               	movlw	-21
 12422  012F9C  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 12423  012FA2  0EEC               	movlw	-20
 12424  012FA4  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 12425  012FAA  0EED               	movlw	-19
 12426  012FAC  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 12427                           
 12428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12429                           ;stkvar	_c @ sp[(-32)+31]
 12430  012FB2  0EFF               	movlw	-1
 12431  012FB4  50E3               	movf	plusw1,w,c
 12432  012FB6  6EE6               	movwf	postinc1,c
 12433                           
 12434                           ;stkvar	_llu @ sp[(-33)+6]
 12435  012FB8  50E1               	movf	fsr1l,w,c
 12436  012FBA  0FE5               	addlw	-27
 12437  012FBC  6ED9               	movwf	fsr2l,c
 12438  012FBE  50E2               	movf	fsr1h,w,c
 12439  012FC0  6EDA               	movwf	fsr2h,c
 12440  012FC2  0EFF               	movlw	255
 12441  012FC4  22DA               	addwfc	fsr2h,f,c
 12442  012FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 12443  012FCC  006F FF7B FFE6     	movff	postinc2,postinc1
 12444  012FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 12445  012FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 12446  012FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 12447  012FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 12448  012FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 12449  012FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 12450                           
 12451                           ;stkvar	_fp @ sp[(-41)+-2]
 12452  012FF6  0ED5               	movlw	-43
 12453  012FF8  006F FF8F FFE6     	movff	plusw1,postinc1
 12454  012FFE  006F FF8F FFE6     	movff	plusw1,postinc1
 12455  013004  ECF6  F0AB         	call	_xtoa	;wreg free
 12456  013008  D105               	goto	l2334
 12457  01300A                     l12222:
 12458                           
 12459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12460  01300A  0E02               	movlw	2
 12461  01300C  6EE6               	movwf	postinc1,c
 12462  01300E  0E00               	movlw	0
 12463  013010  6EE6               	movwf	postinc1,c
 12464  013012  0EF5               	movlw	low STR_93
 12465  013014  6EE6               	movwf	postinc1,c
 12466  013016  0EFF               	movlw	high STR_93
 12467  013018  6EE6               	movwf	postinc1,c
 12468                           
 12469                           ;stkvar	_fmt @ sp[(-36)+-4]
 12470  01301A  0ED8               	movlw	-40
 12471  01301C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12472  013022  0ED9               	movlw	-39
 12473  013024  006F FF8F FFDA     	movff	plusw1,fsr2h
 12474  01302A  006F FF78  F032    	movff	postinc2,btemp+10
 12475  013030  006F FF74  F033    	movff	postdec2,btemp+11
 12476  013036  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 12477  01303C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 12478  013042  ECC9  F0BA         	call	_strncmp	;wreg free
 12479  013046  5028               	movf	btemp^0,w,c
 12480  013048  1029               	iorwf	(btemp+1)^0,w,c
 12481  01304A  B4D8               	btfsc	status,2,c
 12482  01304C  D022               	goto	u11860
 12483  01304E  0E02               	movlw	2
 12484  013050  6EE6               	movwf	postinc1,c
 12485  013052  0E00               	movlw	0
 12486  013054  6EE6               	movwf	postinc1,c
 12487  013056  0EE6               	movlw	low STR_97
 12488  013058  6EE6               	movwf	postinc1,c
 12489  01305A  0EFF               	movlw	high STR_97
 12490  01305C  6EE6               	movwf	postinc1,c
 12491                           
 12492                           ;stkvar	_fmt @ sp[(-36)+-4]
 12493  01305E  0ED8               	movlw	-40
 12494  013060  006F FF8F FFD9     	movff	plusw1,fsr2l
 12495  013066  0ED9               	movlw	-39
 12496  013068  006F FF8F FFDA     	movff	plusw1,fsr2h
 12497  01306E  006F FF78  F032    	movff	postinc2,btemp+10
 12498  013074  006F FF74  F033    	movff	postdec2,btemp+11
 12499  01307A  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 12500  013080  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 12501  013086  ECC9  F0BA         	call	_strncmp	;wreg free
 12502  01308A  5028               	movf	btemp^0,w,c
 12503  01308C  1029               	iorwf	(btemp+1)^0,w,c
 12504  01308E  A4D8               	btfss	status,2,c
 12505  013090  D058               	goto	l12236
 12506  013092                     u11860:
 12507                           
 12508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12509                           ;stkvar	_fmt @ sp[(-32)+-4]
 12510  013092  0EDC               	movlw	-36
 12511  013094  006F FF8F FFD9     	movff	plusw1,fsr2l
 12512  01309A  0EDD               	movlw	-35
 12513  01309C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12514  0130A2  006F FF78  F032    	movff	postinc2,btemp+10
 12515  0130A8  006F FF74  F033    	movff	postdec2,btemp+11
 12516  0130AE  0E01               	movlw	1
 12517  0130B0  2632               	addwf	(btemp+10)^0,f,c
 12518  0130B2  0E00               	movlw	0
 12519  0130B4  2233               	addwfc	(btemp+11)^0,f,c
 12520  0130B6  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 12521  0130BC  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 12522  0130C2                     	if	0	;tblptru may be non-zero
 12523  0130C2                     	endif
 12524  0130C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12525  0130C2  0E00               	movlw	low (__mediumconst shr (0+16))
 12526  0130C4  6EF8               	movwf	tblptru,c
 12527  0130C6                     	endif
 12528                           
 12529                           ;stkvar	_c @ sp[(-32)+31]
 12530  0130C6  0008               	tblrd		*
 12531  0130C8  0EFF               	movlw	-1
 12532  0130CA  006F FFD7 FFE3     	movff	tablat,plusw1
 12533                           
 12534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12535                           ;stkvar	_fmt @ sp[(-32)+-4]
 12536  0130D0  0EDC               	movlw	-36
 12537  0130D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12538  0130D8  0EDD               	movlw	-35
 12539  0130DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12540  0130E0  0E02               	movlw	2
 12541  0130E2  26DE               	addwf	postinc2,f,c
 12542  0130E4  0E00               	movlw	0
 12543  0130E6  22DD               	addwfc	postdec2,f,c
 12544                           
 12545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12546                           ;stkvar	_ap @ sp[(-32)+-6]
 12547  0130E8  0EDA               	movlw	-38
 12548  0130EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12549  0130F0  0EDB               	movlw	-37
 12550  0130F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12551  0130F8  0E04               	movlw	4
 12552  0130FA  5EDE               	subwf	postinc2,f,c
 12553  0130FC  0E00               	movlw	0
 12554  0130FE  5ADD               	subwfb	postdec2,f,c
 12555  013100  006F FF78  F032    	movff	postinc2,btemp+10
 12556  013106  006F FF74  F033    	movff	postdec2,btemp+11
 12557  01310C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12558  013112  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12559  013118  006F FF78  F030    	movff	postinc2,btemp+8
 12560  01311E  006F FF78  F031    	movff	postinc2,btemp+9
 12561  013124  006F FF78  F032    	movff	postinc2,btemp+10
 12562  01312A  006F FF78  F033    	movff	postinc2,btemp+11
 12563  013130  5030               	movf	(btemp+8)^0,w,c
 12564  013132  6E38               	movwf	(btemp+16)^0,c
 12565  013134  5031               	movf	(btemp+9)^0,w,c
 12566  013136  6E39               	movwf	(btemp+17)^0,c
 12567  013138  5032               	movf	(btemp+10)^0,w,c
 12568  01313A  6E3A               	movwf	(btemp+18)^0,c
 12569  01313C  5033               	movf	(btemp+11)^0,w,c
 12570  01313E  6E3B               	movwf	(btemp+19)^0,c
 12571  013140  D714               	goto	L9
 12572  013142                     l12236:
 12573                           
 12574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12575                           ;stkvar	_fmt @ sp[(-32)+-4]
 12576  013142  0EDC               	movlw	-36
 12577  013144  006F FF8F FFD9     	movff	plusw1,fsr2l
 12578  01314A  0EDD               	movlw	-35
 12579  01314C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12580  013152  006F FF7B FFF6     	movff	postinc2,tblptrl
 12581  013158  006F FF77 FFF7     	movff	postdec2,tblptrh
 12582  01315E                     	if	0	;tblptru may be non-zero
 12583  01315E                     	endif
 12584  01315E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12585  01315E  0E00               	movlw	low (__mediumconst shr (0+16))
 12586  013160  6EF8               	movwf	tblptru,c
 12587  013162                     	endif
 12588  013162  0008               	tblrd		*
 12589  013164  50F5               	movf	tablat,w,c
 12590  013166  0A25               	xorlw	37
 12591  013168  A4D8               	btfss	status,2,c
 12592  01316A  D01A               	goto	l12246
 12593                           
 12594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12595                           ;stkvar	_fmt @ sp[(-32)+-4]
 12596  01316C  0EDC               	movlw	-36
 12597  01316E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12598  013174  0EDD               	movlw	-35
 12599  013176  006F FF8F FFDA     	movff	plusw1,fsr2h
 12600  01317C  2ADE               	incf	postinc2,f,c
 12601  01317E  0E00               	movlw	0
 12602  013180  22DD               	addwfc	postdec2,f,c
 12603                           
 12604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12605                           ;stkvar	_fp @ sp[(-32)+-2]
 12606  013182  0EDE               	movlw	-34
 12607  013184  006F FF8F FFE6     	movff	plusw1,postinc1
 12608  01318A  006F FF8F FFE6     	movff	plusw1,postinc1
 12609  013190  0E25               	movlw	37
 12610  013192  6EE6               	movwf	postinc1,c
 12611  013194  0E00               	movlw	0
 12612  013196  6EE6               	movwf	postinc1,c
 12613  013198  EC59  F0C7         	call	_fputc	;wreg free
 12614  01319C                     l12242:
 12615                           
 12616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12617  01319C  0E01               	movlw	1
 12618  01319E  D00C               	goto	L10
 12619  0131A0                     l12246:
 12620                           
 12621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12622                           ;stkvar	_fmt @ sp[(-32)+-4]
 12623  0131A0  0EDC               	movlw	-36
 12624  0131A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12625  0131A8  0EDD               	movlw	-35
 12626  0131AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12627  0131B0  2ADE               	incf	postinc2,f,c
 12628  0131B2  0E00               	movlw	0
 12629  0131B4  22DD               	addwfc	postdec2,f,c
 12630                           
 12631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12632  0131B6  0E00               	movlw	0
 12633  0131B8                     L10:
 12634  0131B8  6E28               	movwf	btemp^0,c
 12635  0131BA  0E00               	movlw	0
 12636  0131BC  6E29               	movwf	(btemp+1)^0,c
 12637  0131BE  D02A               	goto	l2334
 12638  0131C0                     l12252:
 12639                           
 12640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12641                           ;stkvar	_fp @ sp[(-32)+-2]
 12642  0131C0  0EDE               	movlw	-34
 12643  0131C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12644  0131C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12645                           
 12646                           ;stkvar	_fmt @ sp[(-34)+-4]
 12647  0131CE  0EDA               	movlw	-38
 12648  0131D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12649  0131D6  0EDB               	movlw	-37
 12650  0131D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12651  0131DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12652  0131E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12653  0131EA                     	if	0	;tblptru may be non-zero
 12654  0131EA                     	endif
 12655  0131EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12656  0131EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12657  0131EC  6EF8               	movwf	tblptru,c
 12658  0131EE                     	endif
 12659  0131EE  0008               	tblrd		*
 12660  0131F0  50F5               	movf	tablat,w,c
 12661  0131F2  6EE6               	movwf	postinc1,c
 12662  0131F4  0E00               	movlw	0
 12663  0131F6  6EE6               	movwf	postinc1,c
 12664  0131F8  EC59  F0C7         	call	_fputc	;wreg free
 12665                           
 12666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12667                           ;stkvar	_fmt @ sp[(-32)+-4]
 12668  0131FC  0EDC               	movlw	-36
 12669  0131FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12670  013204  0EDD               	movlw	-35
 12671  013206  006F FF8F FFDA     	movff	plusw1,fsr2h
 12672  01320C  2ADE               	incf	postinc2,f,c
 12673  01320E  0E00               	movlw	0
 12674  013210  22DD               	addwfc	postdec2,f,c
 12675  013212  D7C4               	goto	l12242
 12676  013214                     l2334:
 12677                           
 12678                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12679  013214  0EDA               	movlw	218
 12680  013216  26E1               	addwf	fsr1l,f,c
 12681  013218  0EFF               	movlw	255
 12682  01321A  22E2               	addwfc	fsr1h,f,c
 12683  01321C  0012               	return		;funcret
 12684  01321E                     __end_of_vfpfcnvrt:
 12685                           	opt callstack 0
 12686                           
 12687 ;; *************** function _xtoa *****************
 12688 ;; Defined at:
 12689 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12690 ;; Parameters:    Size  Location     Type
 12691 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12692 ;;		 -> f(6), NULL(0), 
 12693 ;;  d               8  [STACK] unsigned long long 
 12694 ;;  x               1  [STACK] unsigned char 
 12695 ;; Auto vars:     Size  Location     Type
 12696 ;;  n               8  [STACK] unsigned long long 
 12697 ;;  c               2  [STACK] int 
 12698 ;;  i               2  [STACK] int 
 12699 ;;  w               2  [STACK] int 
 12700 ;;  p               2  [STACK] int 
 12701 ;; Return value:  Size  Location     Type
 12702 ;;                  2  [STACK] int 
 12703 ;; Registers used:
 12704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12705 ;; Tracked objects:
 12706 ;;		On entry : 0/0
 12707 ;;		On exit  : 0/0
 12708 ;;		Unchanged: 0/0
 12709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12714 ;;Total ram usage:        0 bytes
 12715 ;; Hardware stack levels used:    1
 12716 ;; Hardware stack levels required when called:   20
 12717 ;; This function calls:
 12718 ;;		_isalpha
 12719 ;;		_isupper
 12720 ;;		_pad
 12721 ;;		_toupper
 12722 ;; This function is called by:
 12723 ;;		_vfpfcnvrt
 12724 ;; This function uses a reentrant model
 12725 ;;
 12726                           
 12727                           	psect	text46
 12728  0157EC                     __ptext46:
 12729                           	opt callstack 0
 12730  0157EC                     _xtoa:
 12731                           	opt callstack 0
 12732                           
 12733                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12734  0157EC  0E14               	movlw	20
 12735  0157EE  26E1               	addwf	fsr1l,f,c
 12736  0157F0  0E00               	movlw	0
 12737  0157F2  22E2               	addwfc	fsr1h,f,c
 12738                           
 12739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12740                           
 12741                           ;incstack = 0
 12742 ;; hardware stack exceeded
 12743  0157F4  AE4B               	btfss	(_prec+1)^0,7,c
 12744                           
 12745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12746  0157F6  924C               	bcf	_flags^0,1,c
 12747                           
 12748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12749  0157F8  BE4B               	btfsc	(_prec+1)^0,7,c
 12750  0157FA  D005               	goto	u11390
 12751  0157FC  504B               	movf	(_prec+1)^0,w,c
 12752  0157FE  E110               	bnz	l11976
 12753  015800  044A               	decf	_prec^0,w,c
 12754  015802  B0D8               	btfsc	status,0,c
 12755  015804  D00D               	goto	l11976
 12756  015806                     u11390:
 12757  015806  0E01               	movlw	1
 12758  015808  6E32               	movwf	(btemp+10)^0,c
 12759  01580A  0E00               	movlw	0
 12760  01580C  6E33               	movwf	(btemp+11)^0,c
 12761                           
 12762                           ;stkvar	_p @ sp[(-20)+18]
 12763  01580E  0EFE               	movlw	-2
 12764  015810  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12765  015816  0EFF               	movlw	-1
 12766  015818  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12767  01581E  D008               	goto	l2284
 12768  015820                     l11976:
 12769                           
 12770                           ;stkvar	_p @ sp[(-20)+18]
 12771  015820  0EFE               	movlw	-2
 12772  015822  0060  F12B  FFE3   	movff	_prec,plusw1
 12773  015828  0EFF               	movlw	-1
 12774  01582A  0060  F12F  FFE3   	movff	_prec+1,plusw1
 12775  015830                     l2284:
 12776                           
 12777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 12778                           ;stkvar	_w @ sp[(-20)+16]
 12779  015830  0EFC               	movlw	-4
 12780  015832  0060  F123  FFE3   	movff	_width,plusw1
 12781  015838  0EFD               	movlw	-3
 12782  01583A  0060  F127  FFE3   	movff	_width+1,plusw1
 12783                           
 12784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 12785  015840  A84C               	btfss	_flags^0,4,c
 12786  015842  D00B               	goto	l11982
 12787                           
 12788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12789                           ;stkvar	_w @ sp[(-20)+16]
 12790  015844  50E1               	movf	fsr1l,w,c
 12791  015846  0FFC               	addlw	-4
 12792  015848  6ED9               	movwf	fsr2l,c
 12793  01584A  50E2               	movf	fsr1h,w,c
 12794  01584C  6EDA               	movwf	fsr2h,c
 12795  01584E  0EFF               	movlw	255
 12796  015850  22DA               	addwfc	fsr2h,f,c
 12797  015852  0EFE               	movlw	254
 12798  015854  26DE               	addwf	postinc2,f,c
 12799  015856  0EFF               	movlw	255
 12800  015858  22DD               	addwfc	postdec2,f,c
 12801  01585A                     l11982:
 12802                           
 12803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12804                           ;stkvar	_d @ sp[(-20)+-10]
 12805  01585A  0EE2               	movlw	226
 12806  01585C  24E1               	addwf	fsr1l,w,c
 12807  01585E  6ED9               	movwf	fsr2l,c
 12808  015860  0EFF               	movlw	255
 12809  015862  20E2               	addwfc	fsr1h,w,c
 12810  015864  6EDA               	movwf	fsr2h,c
 12811                           
 12812                           ;stkvar	_n @ sp[(-20)+4]
 12813  015866  0E08               	movlw	8
 12814  015868  6E28               	movwf	btemp^0,c
 12815  01586A  0EF0               	movlw	-16
 12816  01586C                     us1141999:
 12817  01586C  006F FF7B FFE3     	movff	postinc2,plusw1
 12818  015872  28E8               	incf	wreg,w,c
 12819  015874  2E28               	decfsz	btemp^0,f,c
 12820  015876  D7FA               	bra	us1141999
 12821                           
 12822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12823  015878  0E4F               	movlw	79
 12824  01587A  6E32               	movwf	(btemp+10)^0,c
 12825  01587C  0E00               	movlw	0
 12826  01587E  6E33               	movwf	(btemp+11)^0,c
 12827                           
 12828                           ;stkvar	_i @ sp[(-20)+14]
 12829  015880  0EFA               	movlw	-6
 12830  015882  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12831  015888  0EFB               	movlw	-5
 12832  01588A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12833                           
 12834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12835  015890  0103               	movlb	3	; () banked
 12836  015892  6BFD               	clrf	(_dbuf+79)& (0+255),b
 12837                           
 12838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12839  015894  D0EE               	goto	l12020
 12840  015896                     l11988:
 12841                           
 12842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12843                           ;stkvar	_i @ sp[(-20)+14]
 12844  015896  50E1               	movf	fsr1l,w,c
 12845  015898  0FFA               	addlw	-6
 12846  01589A  6ED9               	movwf	fsr2l,c
 12847  01589C  50E2               	movf	fsr1h,w,c
 12848  01589E  6EDA               	movwf	fsr2h,c
 12849  0158A0  0EFF               	movlw	255
 12850  0158A2  22DA               	addwfc	fsr2h,f,c
 12851  0158A4  06DE               	decf	postinc2,f,c
 12852  0158A6  0E00               	movlw	0
 12853  0158A8  5ADD               	subwfb	postdec2,f,c
 12854                           
 12855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12856                           ;stkvar	_n @ sp[(-20)+4]
 12857  0158AA  0EF0               	movlw	-16
 12858  0158AC  006F FF8C  F032    	movff	plusw1,btemp+10
 12859  0158B2  0EF1               	movlw	-15
 12860  0158B4  006F FF8C  F033    	movff	plusw1,btemp+11
 12861  0158BA  0E0F               	movlw	15
 12862  0158BC  1632               	andwf	(btemp+10)^0,f,c
 12863  0158BE  0E00               	movlw	0
 12864  0158C0  1633               	andwf	(btemp+11)^0,f,c
 12865                           
 12866                           ;stkvar	_c @ sp[(-20)+12]
 12867  0158C2  0EF8               	movlw	-8
 12868  0158C4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12869  0158CA  0EF9               	movlw	-7
 12870  0158CC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12871                           
 12872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12873                           ;stkvar	_c @ sp[(-20)+12]
 12874  0158D2  0EF9               	movlw	-7
 12875  0158D4  BEE3               	btfsc	plusw1,7,c
 12876  0158D6  D00F               	goto	l11996
 12877  0158D8  0EF9               	movlw	-7
 12878  0158DA  50E3               	movf	plusw1,w,c
 12879  0158DC  E108               	bnz	u11420
 12880  0158DE  0EF8               	movlw	-8
 12881  0158E0  006F FF8C  F028    	movff	plusw1,btemp
 12882  0158E6  0E0A               	movlw	10
 12883  0158E8  5E28               	subwf	btemp^0,f,c
 12884  0158EA  A0D8               	btfss	status,0,c
 12885  0158EC  D004               	goto	l11996
 12886  0158EE                     u11420:
 12887                           
 12888                           ;stkvar	_c @ sp[(-20)+12]
 12889  0158EE  0EF8               	movlw	-8
 12890  0158F0  50E3               	movf	plusw1,w,c
 12891  0158F2  0F57               	addlw	87
 12892  0158F4  D003               	goto	L11
 12893  0158F6                     l11996:
 12894                           
 12895                           ;stkvar	_c @ sp[(-20)+12]
 12896  0158F6  0EF8               	movlw	-8
 12897  0158F8  50E3               	movf	plusw1,w,c
 12898  0158FA  0F30               	addlw	48
 12899  0158FC                     L11:
 12900  0158FC  6E32               	movwf	(btemp+10)^0,c
 12901  0158FE  0EF9               	movlw	-7
 12902  015900  006F FF8C  F033    	movff	plusw1,btemp+11
 12903  015906  0E00               	movlw	0
 12904  015908  2233               	addwfc	(btemp+11)^0,f,c
 12905                           
 12906                           ;stkvar	_c @ sp[(-20)+12]
 12907  01590A  0EF8               	movlw	-8
 12908  01590C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12909  015912  0EF9               	movlw	-7
 12910  015914  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12911  01591A  0EBF               	movlw	191
 12912  01591C  6E32               	movwf	(btemp+10)^0,c
 12913  01591E  0EFF               	movlw	255
 12914  015920  6E33               	movwf	(btemp+11)^0,c
 12915                           
 12916                           ;stkvar	_x @ sp[(-20)+-11]
 12917  015922  0EE1               	movlw	-31
 12918  015924  50E3               	movf	plusw1,w,c
 12919  015926  6E30               	movwf	(btemp+8)^0,c
 12920  015928  6A31               	clrf	(btemp+9)^0,c
 12921  01592A  5032               	movf	(btemp+10)^0,w,c
 12922  01592C  2630               	addwf	(btemp+8)^0,f,c
 12923  01592E  5033               	movf	(btemp+11)^0,w,c
 12924  015930  2231               	addwfc	(btemp+9)^0,f,c
 12925  015932  5031               	movf	(btemp+9)^0,w,c
 12926  015934  E106               	bnz	u11430
 12927  015936  0E1A               	movlw	26
 12928  015938  5C30               	subwf	(btemp+8)^0,w,c
 12929  01593A  B0D8               	btfsc	status,0,c
 12930  01593C  D002               	goto	u11430
 12931  01593E  0E01               	movlw	1
 12932  015940  D001               	goto	u11440
 12933  015942                     u11430:
 12934  015942  0E00               	movlw	0
 12935  015944                     u11440:
 12936  015944  6E32               	movwf	(btemp+10)^0,c
 12937  015946  6A33               	clrf	(btemp+11)^0,c
 12938                           
 12939                           ;stkvar	_xtoa$5427 @ sp[(-20)+2]
 12940  015948  0EEE               	movlw	-18
 12941  01594A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12942  015950  0EEF               	movlw	-17
 12943  015952  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12944                           
 12945                           ;stkvar	_xtoa$5427 @ sp[(-20)+2]
 12946  015958  0EEE               	movlw	-18
 12947  01595A  006F FF8C  F028    	movff	plusw1,btemp
 12948  015960  0EEF               	movlw	-17
 12949  015962  50E3               	movf	plusw1,w,c
 12950  015964  1028               	iorwf	btemp^0,w,c
 12951  015966  B4D8               	btfsc	status,2,c
 12952  015968  D041               	goto	l12012
 12953  01596A  0E9F               	movlw	159
 12954  01596C  6E32               	movwf	(btemp+10)^0,c
 12955  01596E  0EFF               	movlw	255
 12956  015970  6E33               	movwf	(btemp+11)^0,c
 12957                           
 12958                           ;stkvar	_c @ sp[(-20)+12]
 12959  015972  0EF8               	movlw	-8
 12960  015974  006F FF8C  F030    	movff	plusw1,btemp+8
 12961  01597A  0EF9               	movlw	-7
 12962  01597C  006F FF8C  F031    	movff	plusw1,btemp+9
 12963  015982  0E20               	movlw	32
 12964  015984  1230               	iorwf	(btemp+8)^0,f,c
 12965  015986  0E00               	movlw	0
 12966  015988  1231               	iorwf	(btemp+9)^0,f,c
 12967  01598A  5032               	movf	(btemp+10)^0,w,c
 12968  01598C  2630               	addwf	(btemp+8)^0,f,c
 12969  01598E  5033               	movf	(btemp+11)^0,w,c
 12970  015990  2231               	addwfc	(btemp+9)^0,f,c
 12971  015992  5031               	movf	(btemp+9)^0,w,c
 12972  015994  E106               	bnz	u11460
 12973  015996  0E1A               	movlw	26
 12974  015998  5C30               	subwf	(btemp+8)^0,w,c
 12975  01599A  B0D8               	btfsc	status,0,c
 12976  01599C  D002               	goto	u11460
 12977  01599E  0E01               	movlw	1
 12978  0159A0  D001               	goto	u11470
 12979  0159A2                     u11460:
 12980  0159A2  0E00               	movlw	0
 12981  0159A4                     u11470:
 12982  0159A4  6E32               	movwf	(btemp+10)^0,c
 12983  0159A6  6A33               	clrf	(btemp+11)^0,c
 12984                           
 12985                           ;stkvar	_xtoa$5428 @ sp[(-20)+0]
 12986  0159A8  0EEC               	movlw	-20
 12987  0159AA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12988  0159B0  0EED               	movlw	-19
 12989  0159B2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12990                           
 12991                           ;stkvar	_xtoa$5428 @ sp[(-20)+0]
 12992  0159B8  0EEC               	movlw	-20
 12993  0159BA  006F FF8C  F028    	movff	plusw1,btemp
 12994  0159C0  0EED               	movlw	-19
 12995  0159C2  50E3               	movf	plusw1,w,c
 12996  0159C4  1028               	iorwf	btemp^0,w,c
 12997  0159C6  B4D8               	btfsc	status,2,c
 12998  0159C8  D011               	goto	l12012
 12999                           
 13000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13001                           ;stkvar	_c @ sp[(-20)+12]
 13002  0159CA  0EF8               	movlw	-8
 13003  0159CC  006F FF8F FFE6     	movff	plusw1,postinc1
 13004  0159D2  006F FF8F FFE6     	movff	plusw1,postinc1
 13005  0159D8  EC5B  F0D1         	call	_toupper	;wreg free
 13006                           
 13007                           ;stkvar	_c @ sp[(-20)+12]
 13008  0159DC  0EF8               	movlw	-8
 13009  0159DE  0060  F0A3  FFE3   	movff	btemp,plusw1
 13010  0159E4  0EF9               	movlw	-7
 13011  0159E6  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 13012  0159EC                     l12012:
 13013                           
 13014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13015                           ;stkvar	_c @ sp[(-20)+12]
 13016                           ;stkvar	_i @ sp[(-20)+14]
 13017  0159EC  0EFA               	movlw	-6
 13018  0159EE  006F FF8C  F032    	movff	plusw1,btemp+10
 13019  0159F4  0EFB               	movlw	-5
 13020  0159F6  006F FF8C  F033    	movff	plusw1,btemp+11
 13021  0159FC  0EAE               	movlw	low _dbuf
 13022  0159FE  2432               	addwf	(btemp+10)^0,w,c
 13023  015A00  6ED9               	movwf	fsr2l,c
 13024  015A02  0E03               	movlw	high _dbuf
 13025  015A04  2033               	addwfc	(btemp+11)^0,w,c
 13026  015A06  6EDA               	movwf	fsr2h,c
 13027  015A08  0EF8               	movlw	-8
 13028  015A0A  006F FF8F FFDF     	movff	plusw1,indf2
 13029                           
 13030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13031                           ;stkvar	_p @ sp[(-20)+18]
 13032  015A10  50E1               	movf	fsr1l,w,c
 13033  015A12  0FFE               	addlw	-2
 13034  015A14  6ED9               	movwf	fsr2l,c
 13035  015A16  50E2               	movf	fsr1h,w,c
 13036  015A18  6EDA               	movwf	fsr2h,c
 13037  015A1A  0EFF               	movlw	255
 13038  015A1C  22DA               	addwfc	fsr2h,f,c
 13039  015A1E  06DE               	decf	postinc2,f,c
 13040  015A20  0E00               	movlw	0
 13041  015A22  5ADD               	subwfb	postdec2,f,c
 13042                           
 13043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13044                           ;stkvar	_w @ sp[(-20)+16]
 13045  015A24  50E1               	movf	fsr1l,w,c
 13046  015A26  0FFC               	addlw	-4
 13047  015A28  6ED9               	movwf	fsr2l,c
 13048  015A2A  50E2               	movf	fsr1h,w,c
 13049  015A2C  6EDA               	movwf	fsr2h,c
 13050  015A2E  0EFF               	movlw	255
 13051  015A30  22DA               	addwfc	fsr2h,f,c
 13052  015A32  06DE               	decf	postinc2,f,c
 13053  015A34  0E00               	movlw	0
 13054  015A36  5ADD               	subwfb	postdec2,f,c
 13055                           
 13056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13057  015A38  0E04               	movlw	4
 13058  015A3A  6E33               	movwf	(btemp+11)^0,c
 13059                           
 13060                           ;stkvar	_n @ sp[(-20)+4]
 13061  015A3C  50E1               	movf	fsr1l,w,c
 13062  015A3E  0FF0               	addlw	-16
 13063  015A40  6ED9               	movwf	fsr2l,c
 13064  015A42  50E2               	movf	fsr1h,w,c
 13065  015A44  6EDA               	movwf	fsr2h,c
 13066  015A46  0EFF               	movlw	255
 13067  015A48  22DA               	addwfc	fsr2h,f,c
 13068  015A4A  2833               	incf	(btemp+11)^0,w,c
 13069  015A4C  52DE               	movf	postinc2,f,c
 13070  015A4E  D00F               	goto	u11490
 13071  015A50                     u11495:
 13072  015A50  52DE               	movf	postinc2,f,c
 13073  015A52  52DE               	movf	postinc2,f,c
 13074  015A54  52DE               	movf	postinc2,f,c
 13075  015A56  52DE               	movf	postinc2,f,c
 13076  015A58  52DE               	movf	postinc2,f,c
 13077  015A5A  52DE               	movf	postinc2,f,c
 13078  015A5C  90D8               	bcf	status,0,c
 13079  015A5E  32DD               	rrcf	postdec2,f,c
 13080  015A60  32DD               	rrcf	postdec2,f,c
 13081  015A62  32DD               	rrcf	postdec2,f,c
 13082  015A64  32DD               	rrcf	postdec2,f,c
 13083  015A66  32DD               	rrcf	postdec2,f,c
 13084  015A68  32DD               	rrcf	postdec2,f,c
 13085  015A6A  32DD               	rrcf	postdec2,f,c
 13086  015A6C  32DE               	rrcf	postinc2,f,c
 13087  015A6E                     u11490:
 13088  015A6E  2EE8               	decfsz	wreg,f,c
 13089  015A70  D7EF               	goto	u11495
 13090  015A72                     l12020:
 13091                           
 13092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13093                           ;stkvar	_i @ sp[(-20)+14]
 13094  015A72  0EFB               	movlw	-5
 13095  015A74  BEE3               	btfsc	plusw1,7,c
 13096  015A76  D03A               	goto	u11540
 13097  015A78  0EFB               	movlw	-5
 13098  015A7A  50E3               	movf	plusw1,w,c
 13099  015A7C  E108               	bnz	u11500
 13100  015A7E  0EFA               	movlw	-6
 13101  015A80  006F FF8C  F028    	movff	plusw1,btemp
 13102  015A86  0E02               	movlw	2
 13103  015A88  5E28               	subwf	btemp^0,f,c
 13104  015A8A  A0D8               	btfss	status,0,c
 13105  015A8C  D02F               	goto	u11540
 13106  015A8E                     u11500:
 13107                           
 13108                           ;stkvar	_n @ sp[(-20)+4]
 13109  015A8E  0EF0               	movlw	-16
 13110  015A90  50E3               	movf	plusw1,w,c
 13111  015A92  E115               	bnz	u11511
 13112  015A94  0EF1               	movlw	-15
 13113  015A96  50E3               	movf	plusw1,w,c
 13114  015A98  E112               	bnz	u11511
 13115  015A9A  0EF2               	movlw	-14
 13116  015A9C  50E3               	movf	plusw1,w,c
 13117  015A9E  E10F               	bnz	u11511
 13118  015AA0  0EF3               	movlw	-13
 13119  015AA2  50E3               	movf	plusw1,w,c
 13120  015AA4  E10C               	bnz	u11511
 13121  015AA6  0EF4               	movlw	-12
 13122  015AA8  50E3               	movf	plusw1,w,c
 13123  015AAA  E109               	bnz	u11511
 13124  015AAC  0EF5               	movlw	-11
 13125  015AAE  50E3               	movf	plusw1,w,c
 13126  015AB0  E106               	bnz	u11511
 13127  015AB2  0EF6               	movlw	-10
 13128  015AB4  50E3               	movf	plusw1,w,c
 13129  015AB6  E103               	bnz	u11511
 13130  015AB8  0EF7               	movlw	-9
 13131  015ABA  50E3               	movf	plusw1,w,c
 13132  015ABC  A4D8               	btfss	status,2,c
 13133  015ABE                     u11511:
 13134  015ABE  D6EB               	goto	l11988
 13135                           
 13136                           ;stkvar	_p @ sp[(-20)+18]
 13137  015AC0  0EFF               	movlw	-1
 13138  015AC2  BEE3               	btfsc	plusw1,7,c
 13139  015AC4  D007               	goto	u11520
 13140  015AC6  0EFF               	movlw	-1
 13141  015AC8  50E3               	movf	plusw1,w,c
 13142  015ACA  E103               	bnz	u11521
 13143  015ACC  0EFE               	movlw	-2
 13144  015ACE  04E3               	decf	plusw1,w,c
 13145  015AD0  B0D8               	btfsc	status,0,c
 13146  015AD2                     u11521:
 13147  015AD2  D6E1               	goto	l11988
 13148  015AD4                     u11520:
 13149                           
 13150                           ;stkvar	_w @ sp[(-20)+16]
 13151  015AD4  0EFD               	movlw	-3
 13152  015AD6  BEE3               	btfsc	plusw1,7,c
 13153  015AD8  D009               	goto	u11540
 13154  015ADA  0EFD               	movlw	-3
 13155  015ADC  50E3               	movf	plusw1,w,c
 13156  015ADE  E104               	bnz	u11530
 13157  015AE0  0EFC               	movlw	-4
 13158  015AE2  04E3               	decf	plusw1,w,c
 13159  015AE4  A0D8               	btfss	status,0,c
 13160  015AE6  D002               	goto	u11540
 13161  015AE8                     u11530:
 13162  015AE8  B24C               	btfsc	_flags^0,1,c
 13163  015AEA  D6D5               	goto	l11988
 13164  015AEC                     u11540:
 13165                           
 13166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13167  015AEC  A84C               	btfss	_flags^0,4,c
 13168  015AEE  D036               	goto	l12036
 13169                           
 13170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13171                           ;stkvar	_i @ sp[(-20)+14]
 13172  015AF0  50E1               	movf	fsr1l,w,c
 13173  015AF2  0FFA               	addlw	-6
 13174  015AF4  6ED9               	movwf	fsr2l,c
 13175  015AF6  50E2               	movf	fsr1h,w,c
 13176  015AF8  6EDA               	movwf	fsr2h,c
 13177  015AFA  0EFF               	movlw	255
 13178  015AFC  22DA               	addwfc	fsr2h,f,c
 13179  015AFE  06DE               	decf	postinc2,f,c
 13180  015B00  0E00               	movlw	0
 13181  015B02  5ADD               	subwfb	postdec2,f,c
 13182                           
 13183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13184                           ;stkvar	_x @ sp[(-20)+-11]
 13185                           ;stkvar	_i @ sp[(-20)+14]
 13186  015B04  0EFA               	movlw	-6
 13187  015B06  006F FF8C  F032    	movff	plusw1,btemp+10
 13188  015B0C  0EFB               	movlw	-5
 13189  015B0E  006F FF8C  F033    	movff	plusw1,btemp+11
 13190  015B14  0EAE               	movlw	low _dbuf
 13191  015B16  2432               	addwf	(btemp+10)^0,w,c
 13192  015B18  6ED9               	movwf	fsr2l,c
 13193  015B1A  0E03               	movlw	high _dbuf
 13194  015B1C  2033               	addwfc	(btemp+11)^0,w,c
 13195  015B1E  6EDA               	movwf	fsr2h,c
 13196  015B20  0EE1               	movlw	-31
 13197  015B22  006F FF8F FFDF     	movff	plusw1,indf2
 13198                           
 13199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13200                           ;stkvar	_i @ sp[(-20)+14]
 13201  015B28  50E1               	movf	fsr1l,w,c
 13202  015B2A  0FFA               	addlw	-6
 13203  015B2C  6ED9               	movwf	fsr2l,c
 13204  015B2E  50E2               	movf	fsr1h,w,c
 13205  015B30  6EDA               	movwf	fsr2h,c
 13206  015B32  0EFF               	movlw	255
 13207  015B34  22DA               	addwfc	fsr2h,f,c
 13208  015B36  06DE               	decf	postinc2,f,c
 13209  015B38  0E00               	movlw	0
 13210  015B3A  5ADD               	subwfb	postdec2,f,c
 13211                           
 13212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13213                           ;stkvar	_i @ sp[(-20)+14]
 13214  015B3C  0EFA               	movlw	-6
 13215  015B3E  006F FF8C  F032    	movff	plusw1,btemp+10
 13216  015B44  0EFB               	movlw	-5
 13217  015B46  006F FF8C  F033    	movff	plusw1,btemp+11
 13218  015B4C  0EAE               	movlw	low _dbuf
 13219  015B4E  2432               	addwf	(btemp+10)^0,w,c
 13220  015B50  6ED9               	movwf	fsr2l,c
 13221  015B52  0E03               	movlw	high _dbuf
 13222  015B54  2033               	addwfc	(btemp+11)^0,w,c
 13223  015B56  6EDA               	movwf	fsr2h,c
 13224  015B58  0E30               	movlw	48
 13225  015B5A  6EDF               	movwf	indf2,c
 13226  015B5C                     l12036:
 13227                           
 13228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13229                           ;stkvar	_w @ sp[(-20)+16]
 13230  015B5C  0EFC               	movlw	-4
 13231  015B5E  006F FF8F FFE6     	movff	plusw1,postinc1
 13232  015B64  006F FF8F FFE6     	movff	plusw1,postinc1
 13233                           
 13234                           ;stkvar	_i @ sp[(-22)+14]
 13235  015B6A  0EAE               	movlw	low _dbuf
 13236  015B6C  6E32               	movwf	(btemp+10)^0,c
 13237  015B6E  0E03               	movlw	high _dbuf
 13238  015B70  6E33               	movwf	(btemp+11)^0,c
 13239  015B72  0EF8               	movlw	-8
 13240  015B74  50E3               	movf	plusw1,w,c
 13241  015B76  2632               	addwf	(btemp+10)^0,f,c
 13242  015B78  0EF9               	movlw	-7
 13243  015B7A  50E3               	movf	plusw1,w,c
 13244  015B7C  2233               	addwfc	(btemp+11)^0,f,c
 13245  015B7E  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 13246  015B84  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 13247                           
 13248                           ;stkvar	_fp @ sp[(-24)+-2]
 13249  015B8A  0EE6               	movlw	-26
 13250  015B8C  006F FF8F FFE6     	movff	plusw1,postinc1
 13251  015B92  006F FF8F FFE6     	movff	plusw1,postinc1
 13252  015B98  EC77  F0C8         	call	_pad	;wreg free
 13253                           
 13254                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13255  015B9C  0EE1               	movlw	225
 13256  015B9E  26E1               	addwf	fsr1l,f,c
 13257  015BA0  0EFF               	movlw	255
 13258  015BA2  22E2               	addwfc	fsr1h,f,c
 13259  015BA4  0012               	return		;funcret
 13260  015BA6                     __end_of_xtoa:
 13261                           	opt callstack 0
 13262                           
 13263 ;; *************** function _toupper *****************
 13264 ;; Defined at:
 13265 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13266 ;; Parameters:    Size  Location     Type
 13267 ;;  c               2  [STACK] int 
 13268 ;; Auto vars:     Size  Location     Type
 13269 ;;		None
 13270 ;; Return value:  Size  Location     Type
 13271 ;;                  2  [STACK] int 
 13272 ;; Registers used:
 13273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13274 ;; Tracked objects:
 13275 ;;		On entry : 0/3
 13276 ;;		On exit  : 0/0
 13277 ;;		Unchanged: 0/0
 13278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13283 ;;Total ram usage:        0 bytes
 13284 ;; Hardware stack levels used:    1
 13285 ;; Hardware stack levels required when called:   16
 13286 ;; This function calls:
 13287 ;;		_islower
 13288 ;; This function is called by:
 13289 ;;		_xtoa
 13290 ;; This function uses a reentrant model
 13291 ;;
 13292                           
 13293                           	psect	text47
 13294  01A2B6                     __ptext47:
 13295                           	opt callstack 0
 13296  01A2B6                     _toupper:
 13297                           	opt callstack 0
 13298                           
 13299                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13300  01A2B6  52E6               	movf	postinc1,f,c
 13301  01A2B8  52E6               	movf	postinc1,f,c
 13302                           
 13303                           ;stkvar	_c @ sp[(-2)+-2]
 13304                           
 13305                           ;incstack = 0
 13306 ;; hardware stack exceeded
 13307  01A2BA  0EFC               	movlw	-4
 13308  01A2BC  50E3               	movf	plusw1,w,c
 13309  01A2BE  0F9F               	addlw	159
 13310  01A2C0  6E32               	movwf	(btemp+10)^0,c
 13311  01A2C2  0EFD               	movlw	-3
 13312  01A2C4  006F FF8C  F033    	movff	plusw1,btemp+11
 13313  01A2CA  0EFF               	movlw	255
 13314  01A2CC  2233               	addwfc	(btemp+11)^0,f,c
 13315  01A2CE  5033               	movf	(btemp+11)^0,w,c
 13316  01A2D0  E106               	bnz	u6000
 13317  01A2D2  0E1A               	movlw	26
 13318  01A2D4  5C32               	subwf	(btemp+10)^0,w,c
 13319  01A2D6  B0D8               	btfsc	status,0,c
 13320  01A2D8  D002               	goto	u6000
 13321  01A2DA  0E01               	movlw	1
 13322  01A2DC  D001               	goto	u6010
 13323  01A2DE                     u6000:
 13324  01A2DE  0E00               	movlw	0
 13325  01A2E0                     u6010:
 13326  01A2E0  6E32               	movwf	(btemp+10)^0,c
 13327  01A2E2  6A33               	clrf	(btemp+11)^0,c
 13328                           
 13329                           ;stkvar	_toupper$6234 @ sp[(-2)+0]
 13330  01A2E4  0EFE               	movlw	-2
 13331  01A2E6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 13332  01A2EC  0EFF               	movlw	-1
 13333  01A2EE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 13334                           
 13335                           ;stkvar	_toupper$6234 @ sp[(-2)+0]
 13336  01A2F4  0EFE               	movlw	-2
 13337  01A2F6  006F FF8C  F028    	movff	plusw1,btemp
 13338  01A2FC  0EFF               	movlw	-1
 13339  01A2FE  50E3               	movf	plusw1,w,c
 13340  01A300  1028               	iorwf	btemp^0,w,c
 13341  01A302  B4D8               	btfsc	status,2,c
 13342  01A304  D00D               	goto	l7848
 13343                           
 13344                           ;stkvar	_c @ sp[(-2)+-2]
 13345  01A306  0EFC               	movlw	-4
 13346  01A308  006F FF8C  F028    	movff	plusw1,btemp
 13347  01A30E  0EFD               	movlw	-3
 13348  01A310  006F FF8C  F029    	movff	plusw1,btemp+1
 13349  01A316  0E5F               	movlw	95
 13350  01A318  1628               	andwf	btemp^0,f,c
 13351  01A31A  0E00               	movlw	0
 13352  01A31C  1629               	andwf	(btemp+1)^0,f,c
 13353  01A31E  D008               	goto	l3451
 13354  01A320                     l7848:
 13355                           
 13356                           ;stkvar	_c @ sp[(-2)+-2]
 13357  01A320  0EFC               	movlw	-4
 13358  01A322  006F FF8C  F028    	movff	plusw1,btemp
 13359  01A328  0EFD               	movlw	-3
 13360  01A32A  006F FF8C  F029    	movff	plusw1,btemp+1
 13361  01A330                     l3451:
 13362                           
 13363                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13364  01A330  52E5               	movf	postdec1,f,c
 13365  01A332  52E5               	movf	postdec1,f,c
 13366  01A334  52E5               	movf	postdec1,f,c
 13367  01A336  52E5               	movf	postdec1,f,c
 13368  01A338  0012               	return		;funcret
 13369  01A33A                     __end_of_toupper:
 13370                           	opt callstack 0
 13371                           
 13372 ;; *************** function _islower *****************
 13373 ;; Defined at:
 13374 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13375 ;; Parameters:    Size  Location     Type
 13376 ;;  c               2  [STACK] int 
 13377 ;; Auto vars:     Size  Location     Type
 13378 ;;		None
 13379 ;; Return value:  Size  Location     Type
 13380 ;;                  2  [STACK] int 
 13381 ;; Registers used:
 13382 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13383 ;; Tracked objects:
 13384 ;;		On entry : 0/0
 13385 ;;		On exit  : 0/0
 13386 ;;		Unchanged: 0/0
 13387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13392 ;;Total ram usage:        0 bytes
 13393 ;; Hardware stack levels used:    1
 13394 ;; Hardware stack levels required when called:   15
 13395 ;; This function calls:
 13396 ;;		Nothing
 13397 ;; This function is called by:
 13398 ;;		_toupper
 13399 ;; This function uses a reentrant model
 13400 ;;
 13401                           
 13402                           	psect	text48
 13403  01AF52                     __ptext48:
 13404                           	opt callstack 0
 13405  01AF52                     _islower:
 13406                           	opt callstack 0
 13407                           
 13408                           ;stkvar	_c @ sp[(0)+-2]
 13409                           
 13410                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13411                           ;incstack = 0
 13412 ;; hardware stack exceeded
 13413  01AF52  0EFE               	movlw	-2
 13414  01AF54  50E3               	movf	plusw1,w,c
 13415  01AF56  0F9F               	addlw	159
 13416  01AF58  6E32               	movwf	(btemp+10)^0,c
 13417  01AF5A  0EFF               	movlw	-1
 13418  01AF5C  006F FF8C  F033    	movff	plusw1,btemp+11
 13419  01AF62  0EFF               	movlw	255
 13420  01AF64  2233               	addwfc	(btemp+11)^0,f,c
 13421  01AF66  5033               	movf	(btemp+11)^0,w,c
 13422  01AF68  E106               	bnz	u5690
 13423  01AF6A  0E1A               	movlw	26
 13424  01AF6C  5C32               	subwf	(btemp+10)^0,w,c
 13425  01AF6E  B0D8               	btfsc	status,0,c
 13426  01AF70  D002               	goto	u5690
 13427  01AF72  0E01               	movlw	1
 13428  01AF74  D001               	goto	u5700
 13429  01AF76                     u5690:
 13430  01AF76  0E00               	movlw	0
 13431  01AF78                     u5700:
 13432  01AF78  6E28               	movwf	btemp^0,c
 13433  01AF7A  6A29               	clrf	(btemp+1)^0,c
 13434                           
 13435                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13436  01AF7C  52E5               	movf	postdec1,f,c
 13437  01AF7E  52E5               	movf	postdec1,f,c
 13438  01AF80  0012               	return		;funcret
 13439  01AF82                     __end_of_islower:
 13440                           	opt callstack 0
 13441                           
 13442 ;; *************** function _isalpha *****************
 13443 ;; Defined at:
 13444 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13445 ;; Parameters:    Size  Location     Type
 13446 ;;  c               2  [STACK] int 
 13447 ;; Auto vars:     Size  Location     Type
 13448 ;;		None
 13449 ;; Return value:  Size  Location     Type
 13450 ;;                  2  [STACK] int 
 13451 ;; Registers used:
 13452 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13453 ;; Tracked objects:
 13454 ;;		On entry : 0/0
 13455 ;;		On exit  : 0/0
 13456 ;;		Unchanged: 0/0
 13457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13462 ;;Total ram usage:        0 bytes
 13463 ;; Hardware stack levels used:    1
 13464 ;; Hardware stack levels required when called:   15
 13465 ;; This function calls:
 13466 ;;		Nothing
 13467 ;; This function is called by:
 13468 ;;		_xtoa
 13469 ;; This function uses a reentrant model
 13470 ;;
 13471                           
 13472                           	psect	text49
 13473  01ABAC                     __ptext49:
 13474                           	opt callstack 0
 13475  01ABAC                     _isalpha:
 13476                           	opt callstack 0
 13477                           
 13478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13479                           ;incstack = 0
 13480 ;; hardware stack exceeded
 13481  01ABAC  0E9F               	movlw	159
 13482  01ABAE  6E32               	movwf	(btemp+10)^0,c
 13483  01ABB0  0EFF               	movlw	255
 13484  01ABB2  6E33               	movwf	(btemp+11)^0,c
 13485                           
 13486                           ;stkvar	_c @ sp[(0)+-2]
 13487  01ABB4  0EFE               	movlw	-2
 13488  01ABB6  006F FF8C  F030    	movff	plusw1,btemp+8
 13489  01ABBC  0EFF               	movlw	-1
 13490  01ABBE  006F FF8C  F031    	movff	plusw1,btemp+9
 13491  01ABC4  0E20               	movlw	32
 13492  01ABC6  1230               	iorwf	(btemp+8)^0,f,c
 13493  01ABC8  0E00               	movlw	0
 13494  01ABCA  1231               	iorwf	(btemp+9)^0,f,c
 13495  01ABCC  5032               	movf	(btemp+10)^0,w,c
 13496  01ABCE  2630               	addwf	(btemp+8)^0,f,c
 13497  01ABD0  5033               	movf	(btemp+11)^0,w,c
 13498  01ABD2  2231               	addwfc	(btemp+9)^0,f,c
 13499  01ABD4  5031               	movf	(btemp+9)^0,w,c
 13500  01ABD6  E106               	bnz	u5980
 13501  01ABD8  0E1A               	movlw	26
 13502  01ABDA  5C30               	subwf	(btemp+8)^0,w,c
 13503  01ABDC  B0D8               	btfsc	status,0,c
 13504  01ABDE  D002               	goto	u5980
 13505  01ABE0  0E01               	movlw	1
 13506  01ABE2  D001               	goto	u5990
 13507  01ABE4                     u5980:
 13508  01ABE4  0E00               	movlw	0
 13509  01ABE6                     u5990:
 13510  01ABE6  6E28               	movwf	btemp^0,c
 13511  01ABE8  6A29               	clrf	(btemp+1)^0,c
 13512                           
 13513                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13514  01ABEA  52E5               	movf	postdec1,f,c
 13515  01ABEC  52E5               	movf	postdec1,f,c
 13516  01ABEE  0012               	return		;funcret
 13517  01ABF0                     __end_of_isalpha:
 13518                           	opt callstack 0
 13519                           
 13520 ;; *************** function _utoa *****************
 13521 ;; Defined at:
 13522 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13523 ;; Parameters:    Size  Location     Type
 13524 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13525 ;;		 -> f(6), NULL(0), 
 13526 ;;  d               8  [STACK] unsigned long long 
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;  n               8  [STACK] unsigned long long 
 13529 ;;  i               2  [STACK] int 
 13530 ;;  w               2  [STACK] int 
 13531 ;;  p               2  [STACK] int 
 13532 ;; Return value:  Size  Location     Type
 13533 ;;                  2  [STACK] int 
 13534 ;; Registers used:
 13535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13536 ;; Tracked objects:
 13537 ;;		On entry : 0/0
 13538 ;;		On exit  : 0/0
 13539 ;;		Unchanged: 0/0
 13540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13545 ;;Total ram usage:        0 bytes
 13546 ;; Hardware stack levels used:    1
 13547 ;; Hardware stack levels required when called:   20
 13548 ;; This function calls:
 13549 ;;		___lodiv
 13550 ;;		___lomod
 13551 ;;		_pad
 13552 ;; This function is called by:
 13553 ;;		_vfpfcnvrt
 13554 ;; This function uses a reentrant model
 13555 ;;
 13556                           
 13557                           	psect	text50
 13558  0162B4                     __ptext50:
 13559                           	opt callstack 0
 13560  0162B4                     _utoa:
 13561                           	opt callstack 0
 13562                           
 13563                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13564  0162B4  0E0E               	movlw	14
 13565  0162B6  26E1               	addwf	fsr1l,f,c
 13566  0162B8  0E00               	movlw	0
 13567  0162BA  22E2               	addwfc	fsr1h,f,c
 13568                           
 13569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13570                           
 13571                           ;incstack = 0
 13572 ;; hardware stack exceeded
 13573  0162BC  AE4B               	btfss	(_prec+1)^0,7,c
 13574                           
 13575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13576  0162BE  924C               	bcf	_flags^0,1,c
 13577                           
 13578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13579  0162C0  BE4B               	btfsc	(_prec+1)^0,7,c
 13580  0162C2  D005               	goto	u11310
 13581  0162C4  504B               	movf	(_prec+1)^0,w,c
 13582  0162C6  E110               	bnz	l11936
 13583  0162C8  044A               	decf	_prec^0,w,c
 13584  0162CA  B0D8               	btfsc	status,0,c
 13585  0162CC  D00D               	goto	l11936
 13586  0162CE                     u11310:
 13587  0162CE  0E01               	movlw	1
 13588  0162D0  6E32               	movwf	(btemp+10)^0,c
 13589  0162D2  0E00               	movlw	0
 13590  0162D4  6E33               	movwf	(btemp+11)^0,c
 13591                           
 13592                           ;stkvar	_p @ sp[(-14)+12]
 13593  0162D6  0EFE               	movlw	-2
 13594  0162D8  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 13595  0162DE  0EFF               	movlw	-1
 13596  0162E0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 13597  0162E6  D008               	goto	l2269
 13598  0162E8                     l11936:
 13599                           
 13600                           ;stkvar	_p @ sp[(-14)+12]
 13601  0162E8  0EFE               	movlw	-2
 13602  0162EA  0060  F12B  FFE3   	movff	_prec,plusw1
 13603  0162F0  0EFF               	movlw	-1
 13604  0162F2  0060  F12F  FFE3   	movff	_prec+1,plusw1
 13605  0162F8                     l2269:
 13606                           
 13607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13608                           ;stkvar	_w @ sp[(-14)+10]
 13609  0162F8  0EFC               	movlw	-4
 13610  0162FA  0060  F123  FFE3   	movff	_width,plusw1
 13611  016300  0EFD               	movlw	-3
 13612  016302  0060  F127  FFE3   	movff	_width+1,plusw1
 13613                           
 13614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13615                           ;stkvar	_d @ sp[(-14)+-10]
 13616  016308  0EE8               	movlw	232
 13617  01630A  24E1               	addwf	fsr1l,w,c
 13618  01630C  6ED9               	movwf	fsr2l,c
 13619  01630E  0EFF               	movlw	255
 13620  016310  20E2               	addwfc	fsr1h,w,c
 13621  016312  6EDA               	movwf	fsr2h,c
 13622                           
 13623                           ;stkvar	_n @ sp[(-14)+0]
 13624  016314  0E08               	movlw	8
 13625  016316  6E28               	movwf	btemp^0,c
 13626  016318  0EF2               	movlw	-14
 13627  01631A                     us1132999:
 13628  01631A  006F FF7B FFE3     	movff	postinc2,plusw1
 13629  016320  28E8               	incf	wreg,w,c
 13630  016322  2E28               	decfsz	btemp^0,f,c
 13631  016324  D7FA               	bra	us1132999
 13632                           
 13633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13634  016326  0E4F               	movlw	79
 13635  016328  6E32               	movwf	(btemp+10)^0,c
 13636  01632A  0E00               	movlw	0
 13637  01632C  6E33               	movwf	(btemp+11)^0,c
 13638                           
 13639                           ;stkvar	_i @ sp[(-14)+8]
 13640  01632E  0EFA               	movlw	-6
 13641  016330  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 13642  016336  0EFB               	movlw	-5
 13643  016338  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 13644                           
 13645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13646  01633E  0103               	movlb	3	; () banked
 13647  016340  6BFD               	clrf	(_dbuf+79)& (0+255),b
 13648                           
 13649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13650  016342  D0FB               	goto	l11954
 13651  016344                     l11944:
 13652                           
 13653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13654                           ;stkvar	_i @ sp[(-14)+8]
 13655  016344  50E1               	movf	fsr1l,w,c
 13656  016346  0FFA               	addlw	-6
 13657  016348  6ED9               	movwf	fsr2l,c
 13658  01634A  50E2               	movf	fsr1h,w,c
 13659  01634C  6EDA               	movwf	fsr2h,c
 13660  01634E  0EFF               	movlw	255
 13661  016350  22DA               	addwfc	fsr2h,f,c
 13662  016352  06DE               	decf	postinc2,f,c
 13663  016354  0E00               	movlw	0
 13664  016356  5ADD               	subwfb	postdec2,f,c
 13665                           
 13666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13667  016358  0E0A               	movlw	10
 13668  01635A  6EE6               	movwf	postinc1,c
 13669  01635C  0E00               	movlw	0
 13670  01635E  6EE6               	movwf	postinc1,c
 13671  016360  0E00               	movlw	0
 13672  016362  6EE6               	movwf	postinc1,c
 13673  016364  0E00               	movlw	0
 13674  016366  6EE6               	movwf	postinc1,c
 13675  016368  0E00               	movlw	0
 13676  01636A  6EE6               	movwf	postinc1,c
 13677  01636C  0E00               	movlw	0
 13678  01636E  6EE6               	movwf	postinc1,c
 13679  016370  0E00               	movlw	0
 13680  016372  6EE6               	movwf	postinc1,c
 13681  016374  0E00               	movlw	0
 13682  016376  6EE6               	movwf	postinc1,c
 13683                           
 13684                           ;stkvar	_n @ sp[(-22)+0]
 13685  016378  50E1               	movf	fsr1l,w,c
 13686  01637A  0FEA               	addlw	-22
 13687  01637C  6ED9               	movwf	fsr2l,c
 13688  01637E  50E2               	movf	fsr1h,w,c
 13689  016380  6EDA               	movwf	fsr2h,c
 13690  016382  0EFF               	movlw	255
 13691  016384  22DA               	addwfc	fsr2h,f,c
 13692  016386  006F FF7B FFE6     	movff	postinc2,postinc1
 13693  01638C  006F FF7B FFE6     	movff	postinc2,postinc1
 13694  016392  006F FF7B FFE6     	movff	postinc2,postinc1
 13695  016398  006F FF7B FFE6     	movff	postinc2,postinc1
 13696  01639E  006F FF7B FFE6     	movff	postinc2,postinc1
 13697  0163A4  006F FF7B FFE6     	movff	postinc2,postinc1
 13698  0163AA  006F FF7B FFE6     	movff	postinc2,postinc1
 13699  0163B0  006F FF7B FFE6     	movff	postinc2,postinc1
 13700  0163B6  EC82  F0C5         	call	___lomod	;wreg free
 13701  0163BA  52E5               	movf	postdec1,f,c
 13702  0163BC  006F FF9C  F03F    	movff	indf1,btemp+23
 13703  0163C2  52E5               	movf	postdec1,f,c
 13704  0163C4  006F FF9C  F03E    	movff	indf1,btemp+22
 13705  0163CA  52E5               	movf	postdec1,f,c
 13706  0163CC  006F FF9C  F03D    	movff	indf1,btemp+21
 13707  0163D2  52E5               	movf	postdec1,f,c
 13708  0163D4  006F FF9C  F03C    	movff	indf1,btemp+20
 13709  0163DA  52E5               	movf	postdec1,f,c
 13710  0163DC  006F FF9C  F03B    	movff	indf1,btemp+19
 13711  0163E2  52E5               	movf	postdec1,f,c
 13712  0163E4  006F FF9C  F03A    	movff	indf1,btemp+18
 13713  0163EA  52E5               	movf	postdec1,f,c
 13714  0163EC  006F FF9C  F039    	movff	indf1,btemp+17
 13715  0163F2  52E5               	movf	postdec1,f,c
 13716  0163F4  006F FF9C  F038    	movff	indf1,btemp+16
 13717  0163FA  0EF8               	movlw	248
 13718  0163FC  26E1               	addwf	fsr1l,f,c
 13719  0163FE  0EFF               	movlw	255
 13720  016400  22E2               	addwfc	fsr1h,f,c
 13721  016402  0E30               	movlw	48
 13722  016404  2638               	addwf	(btemp+16)^0,f,c
 13723                           
 13724                           ;stkvar	_i @ sp[(-14)+8]
 13725  016406  0EFA               	movlw	-6
 13726  016408  006F FF8C  F032    	movff	plusw1,btemp+10
 13727  01640E  0EFB               	movlw	-5
 13728  016410  006F FF8C  F033    	movff	plusw1,btemp+11
 13729  016416  0EAE               	movlw	low _dbuf
 13730  016418  2432               	addwf	(btemp+10)^0,w,c
 13731  01641A  6ED9               	movwf	fsr2l,c
 13732  01641C  0E03               	movlw	high _dbuf
 13733  01641E  2033               	addwfc	(btemp+11)^0,w,c
 13734  016420  6EDA               	movwf	fsr2h,c
 13735  016422  0060  F0E3  FFDF   	movff	btemp+16,indf2
 13736                           
 13737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13738                           ;stkvar	_p @ sp[(-14)+12]
 13739  016428  50E1               	movf	fsr1l,w,c
 13740  01642A  0FFE               	addlw	-2
 13741  01642C  6ED9               	movwf	fsr2l,c
 13742  01642E  50E2               	movf	fsr1h,w,c
 13743  016430  6EDA               	movwf	fsr2h,c
 13744  016432  0EFF               	movlw	255
 13745  016434  22DA               	addwfc	fsr2h,f,c
 13746  016436  06DE               	decf	postinc2,f,c
 13747  016438  0E00               	movlw	0
 13748  01643A  5ADD               	subwfb	postdec2,f,c
 13749                           
 13750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13751                           ;stkvar	_w @ sp[(-14)+10]
 13752  01643C  50E1               	movf	fsr1l,w,c
 13753  01643E  0FFC               	addlw	-4
 13754  016440  6ED9               	movwf	fsr2l,c
 13755  016442  50E2               	movf	fsr1h,w,c
 13756  016444  6EDA               	movwf	fsr2h,c
 13757  016446  0EFF               	movlw	255
 13758  016448  22DA               	addwfc	fsr2h,f,c
 13759  01644A  06DE               	decf	postinc2,f,c
 13760  01644C  0E00               	movlw	0
 13761  01644E  5ADD               	subwfb	postdec2,f,c
 13762                           
 13763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13764  016450  0E0A               	movlw	10
 13765  016452  6EE6               	movwf	postinc1,c
 13766  016454  0E00               	movlw	0
 13767  016456  6EE6               	movwf	postinc1,c
 13768  016458  0E00               	movlw	0
 13769  01645A  6EE6               	movwf	postinc1,c
 13770  01645C  0E00               	movlw	0
 13771  01645E  6EE6               	movwf	postinc1,c
 13772  016460  0E00               	movlw	0
 13773  016462  6EE6               	movwf	postinc1,c
 13774  016464  0E00               	movlw	0
 13775  016466  6EE6               	movwf	postinc1,c
 13776  016468  0E00               	movlw	0
 13777  01646A  6EE6               	movwf	postinc1,c
 13778  01646C  0E00               	movlw	0
 13779  01646E  6EE6               	movwf	postinc1,c
 13780                           
 13781                           ;stkvar	_n @ sp[(-22)+0]
 13782  016470  50E1               	movf	fsr1l,w,c
 13783  016472  0FEA               	addlw	-22
 13784  016474  6ED9               	movwf	fsr2l,c
 13785  016476  50E2               	movf	fsr1h,w,c
 13786  016478  6EDA               	movwf	fsr2h,c
 13787  01647A  0EFF               	movlw	255
 13788  01647C  22DA               	addwfc	fsr2h,f,c
 13789  01647E  006F FF7B FFE6     	movff	postinc2,postinc1
 13790  016484  006F FF7B FFE6     	movff	postinc2,postinc1
 13791  01648A  006F FF7B FFE6     	movff	postinc2,postinc1
 13792  016490  006F FF7B FFE6     	movff	postinc2,postinc1
 13793  016496  006F FF7B FFE6     	movff	postinc2,postinc1
 13794  01649C  006F FF7B FFE6     	movff	postinc2,postinc1
 13795  0164A2  006F FF7B FFE6     	movff	postinc2,postinc1
 13796  0164A8  006F FF7B FFE6     	movff	postinc2,postinc1
 13797  0164AE  EC8D  F0C0         	call	___lodiv	;wreg free
 13798  0164B2  52E5               	movf	postdec1,f,c
 13799  0164B4  006F FF9C  F03F    	movff	indf1,btemp+23
 13800  0164BA  52E5               	movf	postdec1,f,c
 13801  0164BC  006F FF9C  F03E    	movff	indf1,btemp+22
 13802  0164C2  52E5               	movf	postdec1,f,c
 13803  0164C4  006F FF9C  F03D    	movff	indf1,btemp+21
 13804  0164CA  52E5               	movf	postdec1,f,c
 13805  0164CC  006F FF9C  F03C    	movff	indf1,btemp+20
 13806  0164D2  52E5               	movf	postdec1,f,c
 13807  0164D4  006F FF9C  F03B    	movff	indf1,btemp+19
 13808  0164DA  52E5               	movf	postdec1,f,c
 13809  0164DC  006F FF9C  F03A    	movff	indf1,btemp+18
 13810  0164E2  52E5               	movf	postdec1,f,c
 13811  0164E4  006F FF9C  F039    	movff	indf1,btemp+17
 13812  0164EA  52E5               	movf	postdec1,f,c
 13813  0164EC  006F FF9C  F038    	movff	indf1,btemp+16
 13814  0164F2  0EF8               	movlw	248
 13815  0164F4  26E1               	addwf	fsr1l,f,c
 13816  0164F6  0EFF               	movlw	255
 13817  0164F8  22E2               	addwfc	fsr1h,f,c
 13818                           
 13819                           ;stkvar	_n @ sp[(-14)+0]
 13820  0164FA  0EF2               	movlw	-14
 13821  0164FC  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 13822  016502  0EF3               	movlw	-13
 13823  016504  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 13824  01650A  0EF4               	movlw	-12
 13825  01650C  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 13826  016512  0EF5               	movlw	-11
 13827  016514  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 13828  01651A  0EF6               	movlw	-10
 13829  01651C  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 13830  016522  0EF7               	movlw	-9
 13831  016524  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 13832  01652A  0EF8               	movlw	-8
 13833  01652C  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 13834  016532  0EF9               	movlw	-7
 13835  016534  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 13836  01653A                     l11954:
 13837                           
 13838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13839                           ;stkvar	_i @ sp[(-14)+8]
 13840  01653A  0EFA               	movlw	-6
 13841  01653C  006F FF8C  F028    	movff	plusw1,btemp
 13842  016542  0EFB               	movlw	-5
 13843  016544  50E3               	movf	plusw1,w,c
 13844  016546  1028               	iorwf	btemp^0,w,c
 13845  016548  B4D8               	btfsc	status,2,c
 13846  01654A  D02F               	goto	u11370
 13847                           
 13848                           ;stkvar	_n @ sp[(-14)+0]
 13849  01654C  0EF2               	movlw	-14
 13850  01654E  50E3               	movf	plusw1,w,c
 13851  016550  E115               	bnz	u11341
 13852  016552  0EF3               	movlw	-13
 13853  016554  50E3               	movf	plusw1,w,c
 13854  016556  E112               	bnz	u11341
 13855  016558  0EF4               	movlw	-12
 13856  01655A  50E3               	movf	plusw1,w,c
 13857  01655C  E10F               	bnz	u11341
 13858  01655E  0EF5               	movlw	-11
 13859  016560  50E3               	movf	plusw1,w,c
 13860  016562  E10C               	bnz	u11341
 13861  016564  0EF6               	movlw	-10
 13862  016566  50E3               	movf	plusw1,w,c
 13863  016568  E109               	bnz	u11341
 13864  01656A  0EF7               	movlw	-9
 13865  01656C  50E3               	movf	plusw1,w,c
 13866  01656E  E106               	bnz	u11341
 13867  016570  0EF8               	movlw	-8
 13868  016572  50E3               	movf	plusw1,w,c
 13869  016574  E103               	bnz	u11341
 13870  016576  0EF9               	movlw	-7
 13871  016578  50E3               	movf	plusw1,w,c
 13872  01657A  A4D8               	btfss	status,2,c
 13873  01657C                     u11341:
 13874  01657C  D6E3               	goto	l11944
 13875                           
 13876                           ;stkvar	_p @ sp[(-14)+12]
 13877  01657E  0EFF               	movlw	-1
 13878  016580  BEE3               	btfsc	plusw1,7,c
 13879  016582  D007               	goto	u11350
 13880  016584  0EFF               	movlw	-1
 13881  016586  50E3               	movf	plusw1,w,c
 13882  016588  E103               	bnz	u11351
 13883  01658A  0EFE               	movlw	-2
 13884  01658C  04E3               	decf	plusw1,w,c
 13885  01658E  B0D8               	btfsc	status,0,c
 13886  016590                     u11351:
 13887  016590  D6D9               	goto	l11944
 13888  016592                     u11350:
 13889                           
 13890                           ;stkvar	_w @ sp[(-14)+10]
 13891  016592  0EFD               	movlw	-3
 13892  016594  BEE3               	btfsc	plusw1,7,c
 13893  016596  D009               	goto	u11370
 13894  016598  0EFD               	movlw	-3
 13895  01659A  50E3               	movf	plusw1,w,c
 13896  01659C  E104               	bnz	u11360
 13897  01659E  0EFC               	movlw	-4
 13898  0165A0  04E3               	decf	plusw1,w,c
 13899  0165A2  A0D8               	btfss	status,0,c
 13900  0165A4  D002               	goto	u11370
 13901  0165A6                     u11360:
 13902  0165A6  B24C               	btfsc	_flags^0,1,c
 13903  0165A8  D6CD               	goto	l11944
 13904  0165AA                     u11370:
 13905                           
 13906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13907                           ;stkvar	_w @ sp[(-14)+10]
 13908  0165AA  0EFC               	movlw	-4
 13909  0165AC  006F FF8F FFE6     	movff	plusw1,postinc1
 13910  0165B2  006F FF8F FFE6     	movff	plusw1,postinc1
 13911                           
 13912                           ;stkvar	_i @ sp[(-16)+8]
 13913  0165B8  0EAE               	movlw	low _dbuf
 13914  0165BA  6E32               	movwf	(btemp+10)^0,c
 13915  0165BC  0E03               	movlw	high _dbuf
 13916  0165BE  6E33               	movwf	(btemp+11)^0,c
 13917  0165C0  0EF8               	movlw	-8
 13918  0165C2  50E3               	movf	plusw1,w,c
 13919  0165C4  2632               	addwf	(btemp+10)^0,f,c
 13920  0165C6  0EF9               	movlw	-7
 13921  0165C8  50E3               	movf	plusw1,w,c
 13922  0165CA  2233               	addwfc	(btemp+11)^0,f,c
 13923  0165CC  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 13924  0165D2  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 13925                           
 13926                           ;stkvar	_fp @ sp[(-18)+-2]
 13927  0165D8  0EEC               	movlw	-20
 13928  0165DA  006F FF8F FFE6     	movff	plusw1,postinc1
 13929  0165E0  006F FF8F FFE6     	movff	plusw1,postinc1
 13930  0165E6  EC77  F0C8         	call	_pad	;wreg free
 13931                           
 13932                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13933  0165EA  0EE8               	movlw	232
 13934  0165EC  26E1               	addwf	fsr1l,f,c
 13935  0165EE  0EFF               	movlw	255
 13936  0165F0  22E2               	addwfc	fsr1h,f,c
 13937  0165F2  0012               	return		;funcret
 13938  0165F4                     __end_of_utoa:
 13939                           	opt callstack 0
 13940                           
 13941 ;; *************** function ___lomod *****************
 13942 ;; Defined at:
 13943 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13944 ;; Parameters:    Size  Location     Type
 13945 ;;  dividend        8  [STACK] unsigned long long 
 13946 ;;  divisor         8  [STACK] unsigned long long 
 13947 ;; Auto vars:     Size  Location     Type
 13948 ;;  counter         1  [STACK] unsigned char 
 13949 ;; Return value:  Size  Location     Type
 13950 ;;                  8  [STACK] unsigned long long 
 13951 ;; Registers used:
 13952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13953 ;; Tracked objects:
 13954 ;;		On entry : 0/3
 13955 ;;		On exit  : 0/0
 13956 ;;		Unchanged: 0/0
 13957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13962 ;;Total ram usage:        0 bytes
 13963 ;; Hardware stack levels used:    1
 13964 ;; Hardware stack levels required when called:   15
 13965 ;; This function calls:
 13966 ;;		Nothing
 13967 ;; This function is called by:
 13968 ;;		_utoa
 13969 ;; This function uses a reentrant model
 13970 ;;
 13971                           
 13972                           	psect	text51
 13973  018B04                     __ptext51:
 13974                           	opt callstack 0
 13975  018B04                     ___lomod:
 13976                           	opt callstack 0
 13977                           
 13978                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13979  018B04  52E6               	movf	postinc1,f,c
 13980                           
 13981                           ;stkvar	_divisor @ sp[(-1)+-16]
 13982                           
 13983                           ;incstack = 0
 13984 ;; hardware stack exceeded
 13985  018B06  0EEF               	movlw	-17
 13986  018B08  50E3               	movf	plusw1,w,c
 13987  018B0A  E116               	bnz	u7130
 13988  018B0C  0EF0               	movlw	-16
 13989  018B0E  50E3               	movf	plusw1,w,c
 13990  018B10  E113               	bnz	u7130
 13991  018B12  0EF1               	movlw	-15
 13992  018B14  50E3               	movf	plusw1,w,c
 13993  018B16  E110               	bnz	u7130
 13994  018B18  0EF2               	movlw	-14
 13995  018B1A  50E3               	movf	plusw1,w,c
 13996  018B1C  E10D               	bnz	u7130
 13997  018B1E  0EF3               	movlw	-13
 13998  018B20  50E3               	movf	plusw1,w,c
 13999  018B22  E10A               	bnz	u7130
 14000  018B24  0EF4               	movlw	-12
 14001  018B26  50E3               	movf	plusw1,w,c
 14002  018B28  E107               	bnz	u7130
 14003  018B2A  0EF5               	movlw	-11
 14004  018B2C  50E3               	movf	plusw1,w,c
 14005  018B2E  E104               	bnz	u7130
 14006  018B30  0EF6               	movlw	-10
 14007  018B32  50E3               	movf	plusw1,w,c
 14008  018B34  B4D8               	btfsc	status,2,c
 14009  018B36  D075               	goto	u7160
 14010  018B38                     u7130:
 14011                           
 14012                           ;stkvar	_counter @ sp[(-1)+0]
 14013  018B38  0EFF               	movlw	-1
 14014  018B3A  6AE3               	clrf	plusw1,c
 14015  018B3C  D012               	goto	L12
 14016  018B3E                     l8458:
 14017                           
 14018                           ;stkvar	_divisor @ sp[(-1)+-16]
 14019  018B3E  90D8               	bcf	status,0,c
 14020  018B40  0EEF               	movlw	-17
 14021  018B42  36E3               	rlcf	plusw1,f,c
 14022  018B44  0EF0               	movlw	-16
 14023  018B46  36E3               	rlcf	plusw1,f,c
 14024  018B48  0EF1               	movlw	-15
 14025  018B4A  36E3               	rlcf	plusw1,f,c
 14026  018B4C  0EF2               	movlw	-14
 14027  018B4E  36E3               	rlcf	plusw1,f,c
 14028  018B50  0EF3               	movlw	-13
 14029  018B52  36E3               	rlcf	plusw1,f,c
 14030  018B54  0EF4               	movlw	-12
 14031  018B56  36E3               	rlcf	plusw1,f,c
 14032  018B58  0EF5               	movlw	-11
 14033  018B5A  36E3               	rlcf	plusw1,f,c
 14034  018B5C  0EF6               	movlw	-10
 14035  018B5E  36E3               	rlcf	plusw1,f,c
 14036                           
 14037                           ;stkvar	_counter @ sp[(-1)+0]
 14038  018B60  0EFF               	movlw	-1
 14039  018B62                     L12:
 14040  018B62  2AE3               	incf	plusw1,f,c
 14041                           
 14042                           ;stkvar	_divisor @ sp[(-1)+-16]
 14043  018B64  0EF6               	movlw	-10
 14044  018B66  AEE3               	btfss	plusw1,7,c
 14045  018B68  D7EA               	goto	l8458
 14046  018B6A                     u7140:
 14047                           
 14048                           ;stkvar	_divisor @ sp[(-1)+-16]
 14049                           ;stkvar	_dividend @ sp[(-1)+-8]
 14050  018B6A  50E1               	movf	fsr1l,w,c
 14051  018B6C  0FF7               	addlw	-9
 14052  018B6E  6ED9               	movwf	fsr2l,c
 14053  018B70  50E2               	movf	fsr1h,w,c
 14054  018B72  6EDA               	movwf	fsr2h,c
 14055  018B74  0EFF               	movlw	255
 14056  018B76  22DA               	addwfc	fsr2h,f,c
 14057  018B78  0EEF               	movlw	-17
 14058  018B7A  50E3               	movf	plusw1,w,c
 14059  018B7C  5CDE               	subwf	postinc2,w,c
 14060  018B7E  0EF0               	movlw	-16
 14061  018B80  50E3               	movf	plusw1,w,c
 14062  018B82  58DE               	subwfb	postinc2,w,c
 14063  018B84  0EF1               	movlw	-15
 14064  018B86  50E3               	movf	plusw1,w,c
 14065  018B88  58DE               	subwfb	postinc2,w,c
 14066  018B8A  0EF2               	movlw	-14
 14067  018B8C  50E3               	movf	plusw1,w,c
 14068  018B8E  58DE               	subwfb	postinc2,w,c
 14069  018B90  0EF3               	movlw	-13
 14070  018B92  50E3               	movf	plusw1,w,c
 14071  018B94  58DE               	subwfb	postinc2,w,c
 14072  018B96  0EF4               	movlw	-12
 14073  018B98  50E3               	movf	plusw1,w,c
 14074  018B9A  58DE               	subwfb	postinc2,w,c
 14075  018B9C  0EF5               	movlw	-11
 14076  018B9E  50E3               	movf	plusw1,w,c
 14077  018BA0  58DE               	subwfb	postinc2,w,c
 14078  018BA2  0EF6               	movlw	-10
 14079  018BA4  50E3               	movf	plusw1,w,c
 14080  018BA6  58DE               	subwfb	postinc2,w,c
 14081  018BA8  A0D8               	btfss	status,0,c
 14082  018BAA  D01F               	goto	l8466
 14083                           
 14084                           ;stkvar	_divisor @ sp[(-1)+-16]
 14085                           ;stkvar	_dividend @ sp[(-1)+-8]
 14086  018BAC  50E1               	movf	fsr1l,w,c
 14087  018BAE  0FF7               	addlw	-9
 14088  018BB0  6ED9               	movwf	fsr2l,c
 14089  018BB2  50E2               	movf	fsr1h,w,c
 14090  018BB4  6EDA               	movwf	fsr2h,c
 14091  018BB6  0EFF               	movlw	255
 14092  018BB8  22DA               	addwfc	fsr2h,f,c
 14093  018BBA  0EEF               	movlw	-17
 14094  018BBC  50E3               	movf	plusw1,w,c
 14095  018BBE  5EDE               	subwf	postinc2,f,c
 14096  018BC0  0EF0               	movlw	-16
 14097  018BC2  50E3               	movf	plusw1,w,c
 14098  018BC4  5ADE               	subwfb	postinc2,f,c
 14099  018BC6  0EF1               	movlw	-15
 14100  018BC8  50E3               	movf	plusw1,w,c
 14101  018BCA  5ADE               	subwfb	postinc2,f,c
 14102  018BCC  0EF2               	movlw	-14
 14103  018BCE  50E3               	movf	plusw1,w,c
 14104  018BD0  5ADE               	subwfb	postinc2,f,c
 14105  018BD2  0EF3               	movlw	-13
 14106  018BD4  50E3               	movf	plusw1,w,c
 14107  018BD6  5ADE               	subwfb	postinc2,f,c
 14108  018BD8  0EF4               	movlw	-12
 14109  018BDA  50E3               	movf	plusw1,w,c
 14110  018BDC  5ADE               	subwfb	postinc2,f,c
 14111  018BDE  0EF5               	movlw	-11
 14112  018BE0  50E3               	movf	plusw1,w,c
 14113  018BE2  5ADE               	subwfb	postinc2,f,c
 14114  018BE4  0EF6               	movlw	-10
 14115  018BE6  50E3               	movf	plusw1,w,c
 14116  018BE8  5ADE               	subwfb	postinc2,f,c
 14117  018BEA                     l8466:
 14118                           
 14119                           ;stkvar	_divisor @ sp[(-1)+-16]
 14120  018BEA  90D8               	bcf	status,0,c
 14121  018BEC  0EF6               	movlw	-10
 14122  018BEE  32E3               	rrcf	plusw1,f,c
 14123  018BF0  0EF5               	movlw	-11
 14124  018BF2  32E3               	rrcf	plusw1,f,c
 14125  018BF4  0EF4               	movlw	-12
 14126  018BF6  32E3               	rrcf	plusw1,f,c
 14127  018BF8  0EF3               	movlw	-13
 14128  018BFA  32E3               	rrcf	plusw1,f,c
 14129  018BFC  0EF2               	movlw	-14
 14130  018BFE  32E3               	rrcf	plusw1,f,c
 14131  018C00  0EF1               	movlw	-15
 14132  018C02  32E3               	rrcf	plusw1,f,c
 14133  018C04  0EF0               	movlw	-16
 14134  018C06  32E3               	rrcf	plusw1,f,c
 14135  018C08  0EEF               	movlw	-17
 14136  018C0A  32E3               	rrcf	plusw1,f,c
 14137                           
 14138                           ;stkvar	_counter @ sp[(-1)+0]
 14139  018C0C  0EFF               	movlw	-1
 14140  018C0E  50E3               	movf	plusw1,w,c
 14141  018C10  6E28               	movwf	btemp^0,c
 14142  018C12  0E01               	movlw	1
 14143  018C14  5E28               	subwf	btemp^0,f,c
 14144  018C16  0EFF               	movlw	-1
 14145  018C18  0060  F0A3  FFE3   	movff	btemp,plusw1
 14146  018C1E  A4D8               	btfss	status,2,c
 14147  018C20  D7A4               	goto	u7140
 14148  018C22                     u7160:
 14149                           
 14150                           ;stkvar	_dividend @ sp[(-1)+-8]
 14151  018C22  0EF7               	movlw	247
 14152  018C24  24E1               	addwf	fsr1l,w,c
 14153  018C26  6ED9               	movwf	fsr2l,c
 14154  018C28  0EFF               	movlw	255
 14155  018C2A  20E2               	addwfc	fsr1h,w,c
 14156  018C2C  6EDA               	movwf	fsr2h,c
 14157                           
 14158                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14159  018C2E  0E08               	movlw	8
 14160  018C30  6E28               	movwf	btemp^0,c
 14161  018C32  0EF7               	movlw	-9
 14162  018C34                     us717999:
 14163  018C34  006F FF7B FFE3     	movff	postinc2,plusw1
 14164  018C3A  28E8               	incf	wreg,w,c
 14165  018C3C  2E28               	decfsz	btemp^0,f,c
 14166  018C3E  D7FA               	bra	us717999
 14167                           
 14168                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14169  018C40  52E5               	movf	postdec1,f,c
 14170  018C42  0012               	return		;funcret
 14171  018C44                     __end_of___lomod:
 14172                           	opt callstack 0
 14173                           
 14174 ;; *************** function ___lodiv *****************
 14175 ;; Defined at:
 14176 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14177 ;; Parameters:    Size  Location     Type
 14178 ;;  dividend        8  [STACK] unsigned long long 
 14179 ;;  divisor         8  [STACK] unsigned long long 
 14180 ;; Auto vars:     Size  Location     Type
 14181 ;;  quotient        8  [STACK] unsigned long long 
 14182 ;;  counter         1  [STACK] unsigned char 
 14183 ;; Return value:  Size  Location     Type
 14184 ;;                  8  [STACK] unsigned long long 
 14185 ;; Registers used:
 14186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14187 ;; Tracked objects:
 14188 ;;		On entry : 0/3
 14189 ;;		On exit  : 0/0
 14190 ;;		Unchanged: 0/0
 14191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14196 ;;Total ram usage:        0 bytes
 14197 ;; Hardware stack levels used:    1
 14198 ;; Hardware stack levels required when called:   15
 14199 ;; This function calls:
 14200 ;;		Nothing
 14201 ;; This function is called by:
 14202 ;;		_utoa
 14203 ;; This function uses a reentrant model
 14204 ;;
 14205                           
 14206                           	psect	text52
 14207  01811A                     __ptext52:
 14208                           	opt callstack 0
 14209  01811A                     ___lodiv:
 14210                           	opt callstack 0
 14211                           
 14212                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14213  01811A  0E09               	movlw	9
 14214  01811C  26E1               	addwf	fsr1l,f,c
 14215  01811E  0E00               	movlw	0
 14216  018120  22E2               	addwfc	fsr1h,f,c
 14217                           
 14218                           ;stkvar	_quotient @ sp[(-9)+0]
 14219                           
 14220                           ;incstack = 0
 14221 ;; hardware stack exceeded
 14222  018122  0E07               	movlw	7
 14223  018124  6E28               	movwf	btemp^0,c
 14224  018126  0EF7               	movlw	-9
 14225  018128                     u7071:
 14226  018128  6AE3               	clrf	plusw1,c
 14227  01812A  2AE8               	incf	wreg,f,c
 14228  01812C  0628               	decf	btemp^0,f,c
 14229  01812E  E2FC               	bc	u7071
 14230                           
 14231                           ;stkvar	_divisor @ sp[(-9)+-16]
 14232  018130  0EE7               	movlw	-25
 14233  018132  50E3               	movf	plusw1,w,c
 14234  018134  E116               	bnz	u7080
 14235  018136  0EE8               	movlw	-24
 14236  018138  50E3               	movf	plusw1,w,c
 14237  01813A  E113               	bnz	u7080
 14238  01813C  0EE9               	movlw	-23
 14239  01813E  50E3               	movf	plusw1,w,c
 14240  018140  E110               	bnz	u7080
 14241  018142  0EEA               	movlw	-22
 14242  018144  50E3               	movf	plusw1,w,c
 14243  018146  E10D               	bnz	u7080
 14244  018148  0EEB               	movlw	-21
 14245  01814A  50E3               	movf	plusw1,w,c
 14246  01814C  E10A               	bnz	u7080
 14247  01814E  0EEC               	movlw	-20
 14248  018150  50E3               	movf	plusw1,w,c
 14249  018152  E107               	bnz	u7080
 14250  018154  0EED               	movlw	-19
 14251  018156  50E3               	movf	plusw1,w,c
 14252  018158  E104               	bnz	u7080
 14253  01815A  0EEE               	movlw	-18
 14254  01815C  50E3               	movf	plusw1,w,c
 14255  01815E  B4D8               	btfsc	status,2,c
 14256  018160  D088               	goto	u7110
 14257  018162                     u7080:
 14258                           
 14259                           ;stkvar	_counter @ sp[(-9)+8]
 14260  018162  0EFF               	movlw	-1
 14261  018164  6AE3               	clrf	plusw1,c
 14262  018166  D012               	goto	L13
 14263  018168                     l8434:
 14264                           
 14265                           ;stkvar	_divisor @ sp[(-9)+-16]
 14266  018168  90D8               	bcf	status,0,c
 14267  01816A  0EE7               	movlw	-25
 14268  01816C  36E3               	rlcf	plusw1,f,c
 14269  01816E  0EE8               	movlw	-24
 14270  018170  36E3               	rlcf	plusw1,f,c
 14271  018172  0EE9               	movlw	-23
 14272  018174  36E3               	rlcf	plusw1,f,c
 14273  018176  0EEA               	movlw	-22
 14274  018178  36E3               	rlcf	plusw1,f,c
 14275  01817A  0EEB               	movlw	-21
 14276  01817C  36E3               	rlcf	plusw1,f,c
 14277  01817E  0EEC               	movlw	-20
 14278  018180  36E3               	rlcf	plusw1,f,c
 14279  018182  0EED               	movlw	-19
 14280  018184  36E3               	rlcf	plusw1,f,c
 14281  018186  0EEE               	movlw	-18
 14282  018188  36E3               	rlcf	plusw1,f,c
 14283                           
 14284                           ;stkvar	_counter @ sp[(-9)+8]
 14285  01818A  0EFF               	movlw	-1
 14286  01818C                     L13:
 14287  01818C  2AE3               	incf	plusw1,f,c
 14288                           
 14289                           ;stkvar	_divisor @ sp[(-9)+-16]
 14290  01818E  0EEE               	movlw	-18
 14291  018190  AEE3               	btfss	plusw1,7,c
 14292  018192  D7EA               	goto	l8434
 14293  018194                     u7090:
 14294                           
 14295                           ;stkvar	_quotient @ sp[(-9)+0]
 14296  018194  90D8               	bcf	status,0,c
 14297  018196  0EF7               	movlw	-9
 14298  018198  36E3               	rlcf	plusw1,f,c
 14299  01819A  0EF8               	movlw	-8
 14300  01819C  36E3               	rlcf	plusw1,f,c
 14301  01819E  0EF9               	movlw	-7
 14302  0181A0  36E3               	rlcf	plusw1,f,c
 14303  0181A2  0EFA               	movlw	-6
 14304  0181A4  36E3               	rlcf	plusw1,f,c
 14305  0181A6  0EFB               	movlw	-5
 14306  0181A8  36E3               	rlcf	plusw1,f,c
 14307  0181AA  0EFC               	movlw	-4
 14308  0181AC  36E3               	rlcf	plusw1,f,c
 14309  0181AE  0EFD               	movlw	-3
 14310  0181B0  36E3               	rlcf	plusw1,f,c
 14311  0181B2  0EFE               	movlw	-2
 14312  0181B4  36E3               	rlcf	plusw1,f,c
 14313                           
 14314                           ;stkvar	_divisor @ sp[(-9)+-16]
 14315                           ;stkvar	_dividend @ sp[(-9)+-8]
 14316  0181B6  50E1               	movf	fsr1l,w,c
 14317  0181B8  0FEF               	addlw	-17
 14318  0181BA  6ED9               	movwf	fsr2l,c
 14319  0181BC  50E2               	movf	fsr1h,w,c
 14320  0181BE  6EDA               	movwf	fsr2h,c
 14321  0181C0  0EFF               	movlw	255
 14322  0181C2  22DA               	addwfc	fsr2h,f,c
 14323  0181C4  0EE7               	movlw	-25
 14324  0181C6  50E3               	movf	plusw1,w,c
 14325  0181C8  5CDE               	subwf	postinc2,w,c
 14326  0181CA  0EE8               	movlw	-24
 14327  0181CC  50E3               	movf	plusw1,w,c
 14328  0181CE  58DE               	subwfb	postinc2,w,c
 14329  0181D0  0EE9               	movlw	-23
 14330  0181D2  50E3               	movf	plusw1,w,c
 14331  0181D4  58DE               	subwfb	postinc2,w,c
 14332  0181D6  0EEA               	movlw	-22
 14333  0181D8  50E3               	movf	plusw1,w,c
 14334  0181DA  58DE               	subwfb	postinc2,w,c
 14335  0181DC  0EEB               	movlw	-21
 14336  0181DE  50E3               	movf	plusw1,w,c
 14337  0181E0  58DE               	subwfb	postinc2,w,c
 14338  0181E2  0EEC               	movlw	-20
 14339  0181E4  50E3               	movf	plusw1,w,c
 14340  0181E6  58DE               	subwfb	postinc2,w,c
 14341  0181E8  0EED               	movlw	-19
 14342  0181EA  50E3               	movf	plusw1,w,c
 14343  0181EC  58DE               	subwfb	postinc2,w,c
 14344  0181EE  0EEE               	movlw	-18
 14345  0181F0  50E3               	movf	plusw1,w,c
 14346  0181F2  58DE               	subwfb	postinc2,w,c
 14347  0181F4  A0D8               	btfss	status,0,c
 14348  0181F6  D021               	goto	l8446
 14349                           
 14350                           ;stkvar	_divisor @ sp[(-9)+-16]
 14351                           ;stkvar	_dividend @ sp[(-9)+-8]
 14352  0181F8  50E1               	movf	fsr1l,w,c
 14353  0181FA  0FEF               	addlw	-17
 14354  0181FC  6ED9               	movwf	fsr2l,c
 14355  0181FE  50E2               	movf	fsr1h,w,c
 14356  018200  6EDA               	movwf	fsr2h,c
 14357  018202  0EFF               	movlw	255
 14358  018204  22DA               	addwfc	fsr2h,f,c
 14359  018206  0EE7               	movlw	-25
 14360  018208  50E3               	movf	plusw1,w,c
 14361  01820A  5EDE               	subwf	postinc2,f,c
 14362  01820C  0EE8               	movlw	-24
 14363  01820E  50E3               	movf	plusw1,w,c
 14364  018210  5ADE               	subwfb	postinc2,f,c
 14365  018212  0EE9               	movlw	-23
 14366  018214  50E3               	movf	plusw1,w,c
 14367  018216  5ADE               	subwfb	postinc2,f,c
 14368  018218  0EEA               	movlw	-22
 14369  01821A  50E3               	movf	plusw1,w,c
 14370  01821C  5ADE               	subwfb	postinc2,f,c
 14371  01821E  0EEB               	movlw	-21
 14372  018220  50E3               	movf	plusw1,w,c
 14373  018222  5ADE               	subwfb	postinc2,f,c
 14374  018224  0EEC               	movlw	-20
 14375  018226  50E3               	movf	plusw1,w,c
 14376  018228  5ADE               	subwfb	postinc2,f,c
 14377  01822A  0EED               	movlw	-19
 14378  01822C  50E3               	movf	plusw1,w,c
 14379  01822E  5ADE               	subwfb	postinc2,f,c
 14380  018230  0EEE               	movlw	-18
 14381  018232  50E3               	movf	plusw1,w,c
 14382  018234  5ADE               	subwfb	postinc2,f,c
 14383                           
 14384                           ;stkvar	_quotient @ sp[(-9)+0]
 14385  018236  0EF7               	movlw	-9
 14386  018238  80E3               	bsf	plusw1,0,c
 14387  01823A                     l8446:
 14388                           
 14389                           ;stkvar	_divisor @ sp[(-9)+-16]
 14390  01823A  90D8               	bcf	status,0,c
 14391  01823C  0EEE               	movlw	-18
 14392  01823E  32E3               	rrcf	plusw1,f,c
 14393  018240  0EED               	movlw	-19
 14394  018242  32E3               	rrcf	plusw1,f,c
 14395  018244  0EEC               	movlw	-20
 14396  018246  32E3               	rrcf	plusw1,f,c
 14397  018248  0EEB               	movlw	-21
 14398  01824A  32E3               	rrcf	plusw1,f,c
 14399  01824C  0EEA               	movlw	-22
 14400  01824E  32E3               	rrcf	plusw1,f,c
 14401  018250  0EE9               	movlw	-23
 14402  018252  32E3               	rrcf	plusw1,f,c
 14403  018254  0EE8               	movlw	-24
 14404  018256  32E3               	rrcf	plusw1,f,c
 14405  018258  0EE7               	movlw	-25
 14406  01825A  32E3               	rrcf	plusw1,f,c
 14407                           
 14408                           ;stkvar	_counter @ sp[(-9)+8]
 14409  01825C  0EFF               	movlw	-1
 14410  01825E  50E3               	movf	plusw1,w,c
 14411  018260  6E28               	movwf	btemp^0,c
 14412  018262  0E01               	movlw	1
 14413  018264  5E28               	subwf	btemp^0,f,c
 14414  018266  0EFF               	movlw	-1
 14415  018268  0060  F0A3  FFE3   	movff	btemp,plusw1
 14416  01826E  A4D8               	btfss	status,2,c
 14417  018270  D791               	goto	u7090
 14418  018272                     u7110:
 14419                           
 14420                           ;stkvar	_quotient @ sp[(-9)+0]
 14421  018272  0EF7               	movlw	247
 14422  018274  24E1               	addwf	fsr1l,w,c
 14423  018276  6ED9               	movwf	fsr2l,c
 14424  018278  0EFF               	movlw	255
 14425  01827A  20E2               	addwfc	fsr1h,w,c
 14426  01827C  6EDA               	movwf	fsr2h,c
 14427                           
 14428                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14429  01827E  0E08               	movlw	8
 14430  018280  6E28               	movwf	btemp^0,c
 14431  018282  0EEF               	movlw	-17
 14432  018284                     us712999:
 14433  018284  006F FF7B FFE3     	movff	postinc2,plusw1
 14434  01828A  28E8               	incf	wreg,w,c
 14435  01828C  2E28               	decfsz	btemp^0,f,c
 14436  01828E  D7FA               	bra	us712999
 14437                           
 14438                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14439  018290  0EF7               	movlw	247
 14440  018292  26E1               	addwf	fsr1l,f,c
 14441  018294  0EFF               	movlw	255
 14442  018296  22E2               	addwfc	fsr1h,f,c
 14443  018298  0012               	return		;funcret
 14444  01829A                     __end_of___lodiv:
 14445                           	opt callstack 0
 14446                           
 14447 ;; *************** function _strncmp *****************
 14448 ;; Defined at:
 14449 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14450 ;; Parameters:    Size  Location     Type
 14451 ;;  _l              2  [STACK] PTR const unsigned char 
 14452 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14453 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14454 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14455 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14456 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14457 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14458 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14459 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14460 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14461 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14462 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14463 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14464 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14465 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14466 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14467 ;;		 -> STR_2(15), STR_1(17), 
 14468 ;;  _r              2  [STACK] PTR const unsigned char 
 14469 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14470 ;;		 -> STR_80(3), STR_76(3), 
 14471 ;;  n               2  [STACK] unsigned int 
 14472 ;; Auto vars:     Size  Location     Type
 14473 ;;  r               2  [STACK] PTR const unsigned char 
 14474 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14475 ;;		 -> STR_80(3), STR_76(3), 
 14476 ;;  l               2  [STACK] PTR const unsigned char 
 14477 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14478 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14479 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14480 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14481 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14482 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14483 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14484 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14485 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14486 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14487 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14488 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14489 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14490 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14491 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14492 ;;		 -> STR_2(15), STR_1(17), 
 14493 ;; Return value:  Size  Location     Type
 14494 ;;                  2  [STACK] int 
 14495 ;; Registers used:
 14496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14497 ;; Tracked objects:
 14498 ;;		On entry : 0/0
 14499 ;;		On exit  : 0/0
 14500 ;;		Unchanged: 0/0
 14501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14506 ;;Total ram usage:        0 bytes
 14507 ;; Hardware stack levels used:    1
 14508 ;; Hardware stack levels required when called:   15
 14509 ;; This function calls:
 14510 ;;		Nothing
 14511 ;; This function is called by:
 14512 ;;		_vfpfcnvrt
 14513 ;; This function uses a reentrant model
 14514 ;;
 14515                           
 14516                           	psect	text53
 14517  017592                     __ptext53:
 14518                           	opt callstack 0
 14519  017592                     _strncmp:
 14520                           	opt callstack 0
 14521                           
 14522                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14523  017592  52E6               	movf	postinc1,f,c
 14524  017594  52E6               	movf	postinc1,f,c
 14525  017596  52E6               	movf	postinc1,f,c
 14526  017598  52E6               	movf	postinc1,f,c
 14527                           
 14528                           ;stkvar	__l @ sp[(-4)+-2]
 14529                           
 14530                           ;incstack = 0
 14531 ;; hardware stack exceeded
 14532  01759A  0EFA               	movlw	-6
 14533  01759C  006F FF8C  F032    	movff	plusw1,btemp+10
 14534  0175A2  0EFB               	movlw	-5
 14535  0175A4  006F FF8C  F033    	movff	plusw1,btemp+11
 14536                           
 14537                           ;stkvar	_l @ sp[(-4)+2]
 14538  0175AA  0EFF               	movlw	-1
 14539  0175AC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14540  0175B2  0EFE               	movlw	-2
 14541  0175B4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14542                           
 14543                           ;stkvar	__r @ sp[(-4)+-4]
 14544  0175BA  0EF8               	movlw	-8
 14545  0175BC  006F FF8C  F032    	movff	plusw1,btemp+10
 14546  0175C2  0EF9               	movlw	-7
 14547  0175C4  006F FF8C  F033    	movff	plusw1,btemp+11
 14548                           
 14549                           ;stkvar	_r @ sp[(-4)+0]
 14550  0175CA  0EFD               	movlw	-3
 14551  0175CC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14552  0175D2  0EFC               	movlw	-4
 14553  0175D4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14554                           
 14555                           ;stkvar	_n @ sp[(-4)+-6]
 14556  0175DA  0EF6               	movlw	-10
 14557  0175DC  006F FF8C  F028    	movff	plusw1,btemp
 14558  0175E2  0E01               	movlw	1
 14559  0175E4  5E28               	subwf	btemp^0,f,c
 14560  0175E6  0EF6               	movlw	-10
 14561  0175E8  0060  F0A3  FFE3   	movff	btemp,plusw1
 14562  0175EE  0EF7               	movlw	-9
 14563  0175F0  006F FF8C  F028    	movff	plusw1,btemp
 14564  0175F6  0E00               	movlw	0
 14565  0175F8  5A28               	subwfb	btemp^0,f,c
 14566  0175FA  0EF7               	movlw	-9
 14567  0175FC  0060  F0A3  FFE3   	movff	btemp,plusw1
 14568  017602  0EF6               	movlw	-10
 14569  017604  28E3               	incf	plusw1,w,c
 14570  017606  E13F               	bnz	l9142
 14571  017608  0EF7               	movlw	-9
 14572  01760A  28E3               	incf	plusw1,w,c
 14573  01760C  A4D8               	btfss	status,2,c
 14574  01760E  D03B               	goto	l9142
 14575  017610  0E00               	movlw	0
 14576  017612  6E28               	movwf	btemp^0,c
 14577  017614  0E00               	movlw	0
 14578  017616  6E29               	movwf	(btemp+1)^0,c
 14579  017618  D0C7               	goto	l3423
 14580  01761A                     l9140:
 14581                           
 14582                           ;stkvar	_l @ sp[(-4)+2]
 14583  01761A  0EFE               	movlw	-2
 14584  01761C  50E3               	movf	plusw1,w,c
 14585  01761E  0F01               	addlw	1
 14586  017620  6E28               	movwf	btemp^0,c
 14587  017622  0EFE               	movlw	-2
 14588  017624  0060  F0A3  FFE3   	movff	btemp,plusw1
 14589  01762A  6A28               	clrf	btemp^0,c
 14590  01762C  0EFF               	movlw	-1
 14591  01762E  50E3               	movf	plusw1,w,c
 14592  017630  2028               	addwfc	btemp^0,w,c
 14593  017632  6E28               	movwf	btemp^0,c
 14594  017634  0EFF               	movlw	-1
 14595  017636  0060  F0A3  FFE3   	movff	btemp,plusw1
 14596                           
 14597                           ;stkvar	_r @ sp[(-4)+0]
 14598  01763C  0EFC               	movlw	-4
 14599  01763E  50E3               	movf	plusw1,w,c
 14600  017640  0F01               	addlw	1
 14601  017642  6E28               	movwf	btemp^0,c
 14602  017644  0EFC               	movlw	-4
 14603  017646  0060  F0A3  FFE3   	movff	btemp,plusw1
 14604  01764C  6A28               	clrf	btemp^0,c
 14605  01764E  0EFD               	movlw	-3
 14606  017650  50E3               	movf	plusw1,w,c
 14607  017652  2028               	addwfc	btemp^0,w,c
 14608  017654  6E28               	movwf	btemp^0,c
 14609  017656  0EFD               	movlw	-3
 14610  017658  0060  F0A3  FFE3   	movff	btemp,plusw1
 14611                           
 14612                           ;stkvar	_n @ sp[(-4)+-6]
 14613  01765E  0EF6               	movlw	-10
 14614  017660  006F FF8C  F028    	movff	plusw1,btemp
 14615  017666  0E01               	movlw	1
 14616  017668  5E28               	subwf	btemp^0,f,c
 14617  01766A  0EF6               	movlw	-10
 14618  01766C  0060  F0A3  FFE3   	movff	btemp,plusw1
 14619  017672  0EF7               	movlw	-9
 14620  017674  006F FF8C  F028    	movff	plusw1,btemp
 14621  01767A  0E00               	movlw	0
 14622  01767C  5A28               	subwfb	btemp^0,f,c
 14623  01767E  0EF7               	movlw	-9
 14624  017680  0060  F0A3  FFE3   	movff	btemp,plusw1
 14625  017686                     l9142:
 14626                           
 14627                           ;stkvar	_l @ sp[(-4)+2]
 14628  017686  0EFE               	movlw	-2
 14629  017688  006F FF8F FFF6     	movff	plusw1,tblptrl
 14630  01768E  0EFF               	movlw	-1
 14631  017690  006F FF8F FFF7     	movff	plusw1,tblptrh
 14632  017696  0E00               	movlw	low (__mediumconst shr (0+16))
 14633  017698  6EF8               	movwf	tblptru,c
 14634  01769A  0E1F               	movlw	(high __ramtop+-1)
 14635  01769C  64F7               	cpfsgt	tblptrh,c
 14636  01769E  D003               	bra	u8407
 14637  0176A0  0008               	tblrd		*
 14638  0176A2  50F5               	movf	tablat,w,c
 14639  0176A4  D007               	bra	u8400
 14640  0176A6                     u8407:
 14641  0176A6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14642  0176AC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14643  0176B2  50EF               	movf	indf0,w,c
 14644  0176B4                     u8400:
 14645  0176B4  0900               	iorlw	0
 14646  0176B6  B4D8               	btfsc	status,2,c
 14647  0176B8  D04A               	goto	u8440
 14648                           
 14649                           ;stkvar	_r @ sp[(-4)+0]
 14650  0176BA  50E1               	movf	fsr1l,w,c
 14651  0176BC  0FFC               	addlw	-4
 14652  0176BE  6ED9               	movwf	fsr2l,c
 14653  0176C0  50E2               	movf	fsr1h,w,c
 14654  0176C2  6EDA               	movwf	fsr2h,c
 14655  0176C4  0EFF               	movlw	255
 14656  0176C6  22DA               	addwfc	fsr2h,f,c
 14657  0176C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 14658  0176CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 14659  0176D4                     	if	0	;tblptru may be non-zero
 14660  0176D4                     	endif
 14661  0176D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14662  0176D4  0E00               	movlw	low (__mediumconst shr (0+16))
 14663  0176D6  6EF8               	movwf	tblptru,c
 14664  0176D8                     	endif
 14665  0176D8  0008               	tblrd		*
 14666  0176DA  50F5               	movf	tablat,w,c
 14667  0176DC  0900               	iorlw	0
 14668  0176DE  B4D8               	btfsc	status,2,c
 14669  0176E0  D036               	goto	u8440
 14670                           
 14671                           ;stkvar	_n @ sp[(-4)+-6]
 14672  0176E2  0EF6               	movlw	-10
 14673  0176E4  006F FF8C  F028    	movff	plusw1,btemp
 14674  0176EA  0EF7               	movlw	-9
 14675  0176EC  50E3               	movf	plusw1,w,c
 14676  0176EE  1028               	iorwf	btemp^0,w,c
 14677  0176F0  B4D8               	btfsc	status,2,c
 14678  0176F2  D02D               	goto	u8440
 14679                           
 14680                           ;stkvar	_r @ sp[(-4)+0]
 14681  0176F4  50E1               	movf	fsr1l,w,c
 14682  0176F6  0FFC               	addlw	-4
 14683  0176F8  6ED9               	movwf	fsr2l,c
 14684  0176FA  50E2               	movf	fsr1h,w,c
 14685  0176FC  6EDA               	movwf	fsr2h,c
 14686  0176FE  0EFF               	movlw	255
 14687  017700  22DA               	addwfc	fsr2h,f,c
 14688  017702  006F FF7B FFF6     	movff	postinc2,tblptrl
 14689  017708  006F FF77 FFF7     	movff	postdec2,tblptrh
 14690  01770E                     	if	0	;tblptru may be non-zero
 14691  01770E                     	endif
 14692  01770E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14693  01770E  0E00               	movlw	low (__mediumconst shr (0+16))
 14694  017710  6EF8               	movwf	tblptru,c
 14695  017712                     	endif
 14696  017712  0008               	tblrd		*
 14697  017714  006F FFD4  F033    	movff	tablat,btemp+11
 14698                           
 14699                           ;stkvar	_l @ sp[(-4)+2]
 14700  01771A  0EFE               	movlw	-2
 14701  01771C  006F FF8F FFF6     	movff	plusw1,tblptrl
 14702  017722  0EFF               	movlw	-1
 14703  017724  006F FF8F FFF7     	movff	plusw1,tblptrh
 14704  01772A  0E00               	movlw	low (__mediumconst shr (0+16))
 14705  01772C  6EF8               	movwf	tblptru,c
 14706  01772E  0E1F               	movlw	(high __ramtop+-1)
 14707  017730  64F7               	cpfsgt	tblptrh,c
 14708  017732  D003               	bra	u8447
 14709  017734  0008               	tblrd		*
 14710  017736  50F5               	movf	tablat,w,c
 14711  017738  D007               	bra	u8445
 14712  01773A                     u8447:
 14713  01773A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14714  017740  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14715  017746  50EF               	movf	indf0,w,c
 14716  017748                     u8445:
 14717  017748  1833               	xorwf	(btemp+11)^0,w,c
 14718  01774A  B4D8               	btfsc	status,2,c
 14719  01774C  D766               	goto	l9140
 14720  01774E                     u8440:
 14721                           
 14722                           ;stkvar	_l @ sp[(-4)+2]
 14723  01774E  0EFE               	movlw	-2
 14724  017750  006F FF8F FFF6     	movff	plusw1,tblptrl
 14725  017756  0EFF               	movlw	-1
 14726  017758  006F FF8F FFF7     	movff	plusw1,tblptrh
 14727  01775E  0E00               	movlw	low (__mediumconst shr (0+16))
 14728  017760  6EF8               	movwf	tblptru,c
 14729  017762  0E1F               	movlw	(high __ramtop+-1)
 14730  017764  64F7               	cpfsgt	tblptrh,c
 14731  017766  D003               	bra	u8457
 14732  017768  0008               	tblrd		*
 14733  01776A  50F5               	movf	tablat,w,c
 14734  01776C  D007               	bra	u8450
 14735  01776E                     u8457:
 14736  01776E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14737  017774  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14738  01777A  50EF               	movf	indf0,w,c
 14739  01777C                     u8450:
 14740  01777C  6E28               	movwf	btemp^0,c
 14741  01777E  6A29               	clrf	(btemp+1)^0,c
 14742                           
 14743                           ;stkvar	_r @ sp[(-4)+0]
 14744  017780  50E1               	movf	fsr1l,w,c
 14745  017782  0FFC               	addlw	-4
 14746  017784  6ED9               	movwf	fsr2l,c
 14747  017786  50E2               	movf	fsr1h,w,c
 14748  017788  6EDA               	movwf	fsr2h,c
 14749  01778A  0EFF               	movlw	255
 14750  01778C  22DA               	addwfc	fsr2h,f,c
 14751  01778E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14752  017794  006F FF77 FFF7     	movff	postdec2,tblptrh
 14753  01779A                     	if	0	;tblptru may be non-zero
 14754  01779A                     	endif
 14755  01779A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14756  01779A  0E00               	movlw	low (__mediumconst shr (0+16))
 14757  01779C  6EF8               	movwf	tblptru,c
 14758  01779E                     	endif
 14759  01779E  0008               	tblrd		*
 14760  0177A0  50F5               	movf	tablat,w,c
 14761  0177A2  5E28               	subwf	btemp^0,f,c
 14762  0177A4  0E00               	movlw	0
 14763  0177A6  5A29               	subwfb	(btemp+1)^0,f,c
 14764  0177A8                     l3423:
 14765                           
 14766                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14767  0177A8  0EF6               	movlw	246
 14768  0177AA  26E1               	addwf	fsr1l,f,c
 14769  0177AC  0EFF               	movlw	255
 14770  0177AE  22E2               	addwfc	fsr1h,f,c
 14771  0177B0  0012               	return		;funcret
 14772  0177B2                     __end_of_strncmp:
 14773                           	opt callstack 0
 14774                           
 14775 ;; *************** function _stoa *****************
 14776 ;; Defined at:
 14777 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14778 ;; Parameters:    Size  Location     Type
 14779 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14780 ;;		 -> f(6), NULL(0), 
 14781 ;;  s               2  [STACK] PTR unsigned char 
 14782 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 14783 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 14784 ;;		 -> V(190), 
 14785 ;; Auto vars:     Size  Location     Type
 14786 ;;  nuls            7  [STACK] unsigned char [7]
 14787 ;;  l               2  [STACK] int 
 14788 ;;  p               2  [STACK] int 
 14789 ;;  cp              2  [STACK] PTR unsigned char 
 14790 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 14791 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 14792 ;;		 -> STR_3(6), V(190), 
 14793 ;;  w               2  [STACK] int 
 14794 ;;  i               2  [STACK] int 
 14795 ;; Return value:  Size  Location     Type
 14796 ;;                  2  [STACK] int 
 14797 ;; Registers used:
 14798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14799 ;; Tracked objects:
 14800 ;;		On entry : 0/0
 14801 ;;		On exit  : 0/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14808 ;;Total ram usage:        0 bytes
 14809 ;; Hardware stack levels used:    1
 14810 ;; Hardware stack levels required when called:   18
 14811 ;; This function calls:
 14812 ;;		_fputc
 14813 ;;		_strlen
 14814 ;; This function is called by:
 14815 ;;		_vfpfcnvrt
 14816 ;; This function uses a reentrant model
 14817 ;;
 14818                           
 14819                           	psect	text54
 14820  016BA0                     __ptext54:
 14821                           	opt callstack 0
 14822  016BA0                     _stoa:
 14823                           	opt callstack 0
 14824                           
 14825                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14826  016BA0  0E11               	movlw	17
 14827  016BA2  26E1               	addwf	fsr1l,f,c
 14828  016BA4  0E00               	movlw	0
 14829  016BA6  22E2               	addwfc	fsr1h,f,c
 14830                           
 14831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14832                           
 14833                           ;incstack = 0
 14834 ;; hardware stack exceeded
 14835  016BA8  EE20  F0EE         	lfsr	2,stoa@F1166
 14836                           
 14837                           ;stkvar	_nuls @ sp[(-17)+0]
 14838  016BAC  0E07               	movlw	7
 14839  016BAE  6E28               	movwf	btemp^0,c
 14840  016BB0  0EEF               	movlw	-17
 14841  016BB2                     us1120999:
 14842  016BB2  006F FF7B FFE3     	movff	postinc2,plusw1
 14843  016BB8  28E8               	incf	wreg,w,c
 14844  016BBA  2E28               	decfsz	btemp^0,f,c
 14845  016BBC  D7FA               	bra	us1120999
 14846                           
 14847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14848                           ;stkvar	_s @ sp[(-17)+-4]
 14849  016BBE  0EEB               	movlw	-21
 14850  016BC0  006F FF8C  F032    	movff	plusw1,btemp+10
 14851  016BC6  0EEC               	movlw	-20
 14852  016BC8  006F FF8C  F033    	movff	plusw1,btemp+11
 14853                           
 14854                           ;stkvar	_cp @ sp[(-17)+11]
 14855  016BCE  0EFB               	movlw	-5
 14856  016BD0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14857  016BD6  0EFA               	movlw	-6
 14858  016BD8  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14859                           
 14860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14861                           ;stkvar	_cp @ sp[(-17)+11]
 14862  016BDE  0EFA               	movlw	-6
 14863  016BE0  006F FF8C  F028    	movff	plusw1,btemp
 14864  016BE6  0EFB               	movlw	-5
 14865  016BE8  50E3               	movf	plusw1,w,c
 14866  016BEA  1028               	iorwf	btemp^0,w,c
 14867  016BEC  A4D8               	btfss	status,2,c
 14868  016BEE  D00E               	goto	l11884
 14869                           
 14870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14871                           ;stkvar	_nuls @ sp[(-17)+0]
 14872  016BF0  0EEF               	movlw	239
 14873  016BF2  24E1               	addwf	fsr1l,w,c
 14874  016BF4  6E32               	movwf	(btemp+10)^0,c
 14875  016BF6  0EFF               	movlw	255
 14876  016BF8  20E2               	addwfc	fsr1h,w,c
 14877  016BFA  6E33               	movwf	(btemp+11)^0,c
 14878                           
 14879                           ;stkvar	_cp @ sp[(-17)+11]
 14880  016BFC  0EFB               	movlw	-5
 14881  016BFE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14882  016C04  0EFA               	movlw	-6
 14883  016C06  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14884  016C0C                     l11884:
 14885                           
 14886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14887                           ;stkvar	_cp @ sp[(-17)+11]
 14888  016C0C  0EFA               	movlw	-6
 14889  016C0E  006F FF8F FFE6     	movff	plusw1,postinc1
 14890  016C14  006F FF8F FFE6     	movff	plusw1,postinc1
 14891  016C1A  EC56  F0CF         	call	_strlen	;wreg free
 14892                           
 14893                           ;stkvar	_l @ sp[(-17)+7]
 14894  016C1E  0EF6               	movlw	-10
 14895  016C20  0060  F0A3  FFE3   	movff	btemp,plusw1
 14896  016C26  0EF7               	movlw	-9
 14897  016C28  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 14898                           
 14899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14900                           ;stkvar	_p @ sp[(-17)+9]
 14901  016C2E  0EF8               	movlw	-8
 14902  016C30  0060  F12B  FFE3   	movff	_prec,plusw1
 14903  016C36  0EF9               	movlw	-7
 14904  016C38  0060  F12F  FFE3   	movff	_prec+1,plusw1
 14905                           
 14906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14907                           ;stkvar	_p @ sp[(-17)+9]
 14908  016C3E  0EF9               	movlw	-7
 14909  016C40  BEE3               	btfsc	plusw1,7,c
 14910  016C42  D023               	goto	l2248
 14911                           
 14912                           ;stkvar	_l @ sp[(-17)+7]
 14913                           ;stkvar	_p @ sp[(-17)+9]
 14914  016C44  50E1               	movf	fsr1l,w,c
 14915  016C46  0FF8               	addlw	-8
 14916  016C48  6ED9               	movwf	fsr2l,c
 14917  016C4A  50E2               	movf	fsr1h,w,c
 14918  016C4C  6EDA               	movwf	fsr2h,c
 14919  016C4E  0EFF               	movlw	255
 14920  016C50  22DA               	addwfc	fsr2h,f,c
 14921  016C52  0EF6               	movlw	-10
 14922  016C54  50E3               	movf	plusw1,w,c
 14923  016C56  5CDE               	subwf	postinc2,w,c
 14924  016C58  50DE               	movf	postinc2,w,c
 14925  016C5A  0A80               	xorlw	128
 14926  016C5C  6E28               	movwf	btemp^0,c
 14927  016C5E  0EF7               	movlw	-9
 14928  016C60  50E3               	movf	plusw1,w,c
 14929  016C62  0A80               	xorlw	128
 14930  016C64  5828               	subwfb	btemp^0,w,c
 14931  016C66  B0D8               	btfsc	status,0,c
 14932  016C68  D010               	goto	l2248
 14933                           
 14934                           ;stkvar	_p @ sp[(-17)+9]
 14935                           ;stkvar	_l @ sp[(-17)+7]
 14936  016C6A  0EF8               	movlw	-8
 14937  016C6C  006F FF8C  F028    	movff	plusw1,btemp
 14938  016C72  0EF6               	movlw	-10
 14939  016C74  0060  F0A3  FFE3   	movff	btemp,plusw1
 14940  016C7A  0EF9               	movlw	-7
 14941  016C7C  006F FF8C  F028    	movff	plusw1,btemp
 14942  016C82  0EF7               	movlw	-9
 14943  016C84  0060  F0A3  FFE3   	movff	btemp,plusw1
 14944  016C8A                     l2248:
 14945                           
 14946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14947                           ;stkvar	_l @ sp[(-17)+7]
 14948                           ;stkvar	_p @ sp[(-17)+9]
 14949  016C8A  0EF6               	movlw	-10
 14950  016C8C  006F FF8C  F028    	movff	plusw1,btemp
 14951  016C92  0EF8               	movlw	-8
 14952  016C94  0060  F0A3  FFE3   	movff	btemp,plusw1
 14953  016C9A  0EF7               	movlw	-9
 14954  016C9C  006F FF8C  F028    	movff	plusw1,btemp
 14955  016CA2  0EF9               	movlw	-7
 14956  016CA4  0060  F0A3  FFE3   	movff	btemp,plusw1
 14957                           
 14958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14959                           ;stkvar	_w @ sp[(-17)+13]
 14960  016CAA  0EFC               	movlw	-4
 14961  016CAC  0060  F123  FFE3   	movff	_width,plusw1
 14962  016CB2  0EFD               	movlw	-3
 14963  016CB4  0060  F127  FFE3   	movff	_width+1,plusw1
 14964                           
 14965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14966  016CBA  A04C               	btfss	_flags^0,0,c
 14967  016CBC  D01F               	goto	l11904
 14968  016CBE  D031               	goto	u11250
 14969  016CC0                     l11900:
 14970                           
 14971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14972                           ;stkvar	_fp @ sp[(-17)+-2]
 14973  016CC0  0EED               	movlw	-19
 14974  016CC2  006F FF8F FFE6     	movff	plusw1,postinc1
 14975  016CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 14976  016CCE  0E20               	movlw	32
 14977  016CD0  6EE6               	movwf	postinc1,c
 14978  016CD2  0E00               	movlw	0
 14979  016CD4  6EE6               	movwf	postinc1,c
 14980  016CD6  EC59  F0C7         	call	_fputc	;wreg free
 14981                           
 14982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14983                           ;stkvar	_l @ sp[(-17)+7]
 14984  016CDA  0EF6               	movlw	-10
 14985  016CDC  50E3               	movf	plusw1,w,c
 14986  016CDE  0F01               	addlw	1
 14987  016CE0  6E28               	movwf	btemp^0,c
 14988  016CE2  0EF6               	movlw	-10
 14989  016CE4  0060  F0A3  FFE3   	movff	btemp,plusw1
 14990  016CEA  6A28               	clrf	btemp^0,c
 14991  016CEC  0EF7               	movlw	-9
 14992  016CEE  50E3               	movf	plusw1,w,c
 14993  016CF0  2028               	addwfc	btemp^0,w,c
 14994  016CF2  6E28               	movwf	btemp^0,c
 14995  016CF4  0EF7               	movlw	-9
 14996  016CF6  0060  F0A3  FFE3   	movff	btemp,plusw1
 14997  016CFC                     l11904:
 14998                           
 14999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15000                           ;stkvar	_w @ sp[(-17)+13]
 15001                           ;stkvar	_l @ sp[(-17)+7]
 15002  016CFC  50E1               	movf	fsr1l,w,c
 15003  016CFE  0FF6               	addlw	-10
 15004  016D00  6ED9               	movwf	fsr2l,c
 15005  016D02  50E2               	movf	fsr1h,w,c
 15006  016D04  6EDA               	movwf	fsr2h,c
 15007  016D06  0EFF               	movlw	255
 15008  016D08  22DA               	addwfc	fsr2h,f,c
 15009  016D0A  0EFC               	movlw	-4
 15010  016D0C  50E3               	movf	plusw1,w,c
 15011  016D0E  5CDE               	subwf	postinc2,w,c
 15012  016D10  50DE               	movf	postinc2,w,c
 15013  016D12  0A80               	xorlw	128
 15014  016D14  6E28               	movwf	btemp^0,c
 15015  016D16  0EFD               	movlw	-3
 15016  016D18  50E3               	movf	plusw1,w,c
 15017  016D1A  0A80               	xorlw	128
 15018  016D1C  5828               	subwfb	btemp^0,w,c
 15019  016D1E  A0D8               	btfss	status,0,c
 15020  016D20  D7CF               	goto	l11900
 15021  016D22                     u11250:
 15022                           
 15023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15024                           ;stkvar	_i @ sp[(-17)+15]
 15025  016D22  0EFE               	movlw	-2
 15026  016D24  6AE3               	clrf	plusw1,c
 15027  016D26  0EFF               	movlw	-1
 15028  016D28  6AE3               	clrf	plusw1,c
 15029                           
 15030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15031  016D2A  D045               	goto	l11914
 15032  016D2C                     l11908:
 15033                           
 15034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15035                           ;stkvar	_fp @ sp[(-17)+-2]
 15036  016D2C  0EED               	movlw	-19
 15037  016D2E  006F FF8F FFE6     	movff	plusw1,postinc1
 15038  016D34  006F FF8F FFE6     	movff	plusw1,postinc1
 15039                           
 15040                           ;stkvar	_cp @ sp[(-19)+11]
 15041  016D3A  0EF8               	movlw	-8
 15042  016D3C  006F FF8F FFF6     	movff	plusw1,tblptrl
 15043  016D42  0EF9               	movlw	-7
 15044  016D44  006F FF8F FFF7     	movff	plusw1,tblptrh
 15045  016D4A  0E00               	movlw	low (__mediumconst shr (0+16))
 15046  016D4C  6EF8               	movwf	tblptru,c
 15047  016D4E  0E1F               	movlw	(high __ramtop+-1)
 15048  016D50  64F7               	cpfsgt	tblptrh,c
 15049  016D52  D003               	bra	u11267
 15050  016D54  0008               	tblrd		*
 15051  016D56  50F5               	movf	tablat,w,c
 15052  016D58  D007               	bra	u11260
 15053  016D5A                     u11267:
 15054  016D5A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15055  016D60  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15056  016D66  50EF               	movf	indf0,w,c
 15057  016D68                     u11260:
 15058  016D68  6EE6               	movwf	postinc1,c
 15059  016D6A  0E00               	movlw	0
 15060  016D6C  6EE6               	movwf	postinc1,c
 15061  016D6E  EC59  F0C7         	call	_fputc	;wreg free
 15062                           
 15063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15064                           ;stkvar	_cp @ sp[(-17)+11]
 15065  016D72  0EFA               	movlw	-6
 15066  016D74  50E3               	movf	plusw1,w,c
 15067  016D76  0F01               	addlw	1
 15068  016D78  6E28               	movwf	btemp^0,c
 15069  016D7A  0EFA               	movlw	-6
 15070  016D7C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15071  016D82  6A28               	clrf	btemp^0,c
 15072  016D84  0EFB               	movlw	-5
 15073  016D86  50E3               	movf	plusw1,w,c
 15074  016D88  2028               	addwfc	btemp^0,w,c
 15075  016D8A  6E28               	movwf	btemp^0,c
 15076  016D8C  0EFB               	movlw	-5
 15077  016D8E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15078                           
 15079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15080                           ;stkvar	_i @ sp[(-17)+15]
 15081  016D94  0EFE               	movlw	-2
 15082  016D96  50E3               	movf	plusw1,w,c
 15083  016D98  0F01               	addlw	1
 15084  016D9A  6E28               	movwf	btemp^0,c
 15085  016D9C  0EFE               	movlw	-2
 15086  016D9E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15087  016DA4  6A28               	clrf	btemp^0,c
 15088  016DA6  0EFF               	movlw	-1
 15089  016DA8  50E3               	movf	plusw1,w,c
 15090  016DAA  2028               	addwfc	btemp^0,w,c
 15091  016DAC  6E28               	movwf	btemp^0,c
 15092  016DAE  0EFF               	movlw	-1
 15093  016DB0  0060  F0A3  FFE3   	movff	btemp,plusw1
 15094  016DB6                     l11914:
 15095                           
 15096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15097                           ;stkvar	_p @ sp[(-17)+9]
 15098                           ;stkvar	_i @ sp[(-17)+15]
 15099  016DB6  50E1               	movf	fsr1l,w,c
 15100  016DB8  0FFE               	addlw	-2
 15101  016DBA  6ED9               	movwf	fsr2l,c
 15102  016DBC  50E2               	movf	fsr1h,w,c
 15103  016DBE  6EDA               	movwf	fsr2h,c
 15104  016DC0  0EFF               	movlw	255
 15105  016DC2  22DA               	addwfc	fsr2h,f,c
 15106  016DC4  0EF8               	movlw	-8
 15107  016DC6  50E3               	movf	plusw1,w,c
 15108  016DC8  5CDE               	subwf	postinc2,w,c
 15109  016DCA  50DE               	movf	postinc2,w,c
 15110  016DCC  0A80               	xorlw	128
 15111  016DCE  6E28               	movwf	btemp^0,c
 15112  016DD0  0EF9               	movlw	-7
 15113  016DD2  50E3               	movf	plusw1,w,c
 15114  016DD4  0A80               	xorlw	128
 15115  016DD6  5828               	subwfb	btemp^0,w,c
 15116  016DD8  A0D8               	btfss	status,0,c
 15117  016DDA  D7A8               	goto	l11908
 15118                           
 15119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15120  016DDC  B04C               	btfsc	_flags^0,0,c
 15121  016DDE  D01F               	goto	l11922
 15122  016DE0  D031               	goto	u11290
 15123  016DE2                     l11918:
 15124                           
 15125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15126                           ;stkvar	_fp @ sp[(-17)+-2]
 15127  016DE2  0EED               	movlw	-19
 15128  016DE4  006F FF8F FFE6     	movff	plusw1,postinc1
 15129  016DEA  006F FF8F FFE6     	movff	plusw1,postinc1
 15130  016DF0  0E20               	movlw	32
 15131  016DF2  6EE6               	movwf	postinc1,c
 15132  016DF4  0E00               	movlw	0
 15133  016DF6  6EE6               	movwf	postinc1,c
 15134  016DF8  EC59  F0C7         	call	_fputc	;wreg free
 15135                           
 15136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15137                           ;stkvar	_l @ sp[(-17)+7]
 15138  016DFC  0EF6               	movlw	-10
 15139  016DFE  50E3               	movf	plusw1,w,c
 15140  016E00  0F01               	addlw	1
 15141  016E02  6E28               	movwf	btemp^0,c
 15142  016E04  0EF6               	movlw	-10
 15143  016E06  0060  F0A3  FFE3   	movff	btemp,plusw1
 15144  016E0C  6A28               	clrf	btemp^0,c
 15145  016E0E  0EF7               	movlw	-9
 15146  016E10  50E3               	movf	plusw1,w,c
 15147  016E12  2028               	addwfc	btemp^0,w,c
 15148  016E14  6E28               	movwf	btemp^0,c
 15149  016E16  0EF7               	movlw	-9
 15150  016E18  0060  F0A3  FFE3   	movff	btemp,plusw1
 15151  016E1E                     l11922:
 15152                           
 15153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15154                           ;stkvar	_w @ sp[(-17)+13]
 15155                           ;stkvar	_l @ sp[(-17)+7]
 15156  016E1E  50E1               	movf	fsr1l,w,c
 15157  016E20  0FF6               	addlw	-10
 15158  016E22  6ED9               	movwf	fsr2l,c
 15159  016E24  50E2               	movf	fsr1h,w,c
 15160  016E26  6EDA               	movwf	fsr2h,c
 15161  016E28  0EFF               	movlw	255
 15162  016E2A  22DA               	addwfc	fsr2h,f,c
 15163  016E2C  0EFC               	movlw	-4
 15164  016E2E  50E3               	movf	plusw1,w,c
 15165  016E30  5CDE               	subwf	postinc2,w,c
 15166  016E32  50DE               	movf	postinc2,w,c
 15167  016E34  0A80               	xorlw	128
 15168  016E36  6E28               	movwf	btemp^0,c
 15169  016E38  0EFD               	movlw	-3
 15170  016E3A  50E3               	movf	plusw1,w,c
 15171  016E3C  0A80               	xorlw	128
 15172  016E3E  5828               	subwfb	btemp^0,w,c
 15173  016E40  A0D8               	btfss	status,0,c
 15174  016E42  D7CF               	goto	l11918
 15175  016E44                     u11290:
 15176                           
 15177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15178                           ;stkvar	_l @ sp[(-17)+7]
 15179  016E44  0EF6               	movlw	-10
 15180  016E46  006F FF8C  F028    	movff	plusw1,btemp
 15181  016E4C  0EF7               	movlw	-9
 15182  016E4E  006F FF8C  F029    	movff	plusw1,btemp+1
 15183                           
 15184                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15185  016E54  0EEB               	movlw	235
 15186  016E56  26E1               	addwf	fsr1l,f,c
 15187  016E58  0EFF               	movlw	255
 15188  016E5A  22E2               	addwfc	fsr1h,f,c
 15189  016E5C  0012               	return		;funcret
 15190  016E5E                     __end_of_stoa:
 15191                           	opt callstack 0
 15192                           
 15193 ;; *************** function _efgtoa *****************
 15194 ;; Defined at:
 15195 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15196 ;; Parameters:    Size  Location     Type
 15197 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15198 ;;		 -> f(6), NULL(0), 
 15199 ;;  f               4  [STACK] PTR struct _IO_FILE
 15200 ;;  c               1  [STACK] unsigned char 
 15201 ;; Auto vars:     Size  Location     Type
 15202 ;;  u               4  [STACK] unsigned char 
 15203 ;;  g               4  [STACK] unsigned char 
 15204 ;;  l               4  [STACK] unsigned char 
 15205 ;;  h               4  [STACK] unsigned char 
 15206 ;;  ou              4  [STACK] unsigned char 
 15207 ;;  n               2  [STACK] int 
 15208 ;;  e               2  [STACK] int 
 15209 ;;  i               2  [STACK] int 
 15210 ;;  w               2  [STACK] int 
 15211 ;;  p               2  [STACK] int 
 15212 ;;  sign            2  [STACK] int 
 15213 ;;  d               2  [STACK] int 
 15214 ;;  ne              2  [STACK] int 
 15215 ;;  m               2  [STACK] int 
 15216 ;;  pp              2  [STACK] int 
 15217 ;;  t               2  [STACK] int 
 15218 ;;  mode            1  [STACK] unsigned char 
 15219 ;;  nmode           1  [STACK] unsigned char 
 15220 ;; Return value:  Size  Location     Type
 15221 ;;                  2  [STACK] int 
 15222 ;; Registers used:
 15223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15224 ;; Tracked objects:
 15225 ;;		On entry : 0/0
 15226 ;;		On exit  : 0/0
 15227 ;;		Unchanged: 0/0
 15228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15233 ;;Total ram usage:        0 bytes
 15234 ;; Hardware stack levels used:    1
 15235 ;; Hardware stack levels required when called:   20
 15236 ;; This function calls:
 15237 ;;		___awdiv
 15238 ;;		___awmod
 15239 ;;		___fladd
 15240 ;;		___fldiv
 15241 ;;		___fleq
 15242 ;;		___flge
 15243 ;;		___flmul
 15244 ;;		___flneg
 15245 ;;		___flsub
 15246 ;;		___fltol
 15247 ;;		___fpclassifyf
 15248 ;;		_floorf
 15249 ;;		_isupper
 15250 ;;		_pad
 15251 ;;		_strcpy
 15252 ;;		_tolower
 15253 ;; This function is called by:
 15254 ;;		_vfpfcnvrt
 15255 ;; This function uses a reentrant model
 15256 ;;
 15257                           
 15258                           	psect	text55
 15259  010000                     __ptext55:
 15260                           	opt callstack 0
 15261  010000                     _efgtoa:
 15262                           	opt callstack 0
 15263                           
 15264                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15265  010000  0E38               	movlw	56
 15266  010002  26E1               	addwf	fsr1l,f,c
 15267  010004  0E00               	movlw	0
 15268  010006  22E2               	addwfc	fsr1h,f,c
 15269                           
 15270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15271                           ;stkvar	_sign @ sp[(-56)+42]
 15272                           
 15273                           ;incstack = 0
 15274 ;; hardware stack exceeded
 15275  010008  0EF2               	movlw	-14
 15276  01000A  6AE3               	clrf	plusw1,c
 15277  01000C  0EF3               	movlw	-13
 15278  01000E  6AE3               	clrf	plusw1,c
 15279                           
 15280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15281                           ;stkvar	_f @ sp[(-56)+-6]
 15282  010010  0EC2               	movlw	-62
 15283  010012  006F FF8C  F030    	movff	plusw1,btemp+8
 15284  010018  0EC3               	movlw	-61
 15285  01001A  006F FF8C  F031    	movff	plusw1,btemp+9
 15286  010020  0EC4               	movlw	-60
 15287  010022  006F FF8C  F032    	movff	plusw1,btemp+10
 15288  010028  0EC5               	movlw	-59
 15289  01002A  006F FF8C  F033    	movff	plusw1,btemp+11
 15290                           
 15291                           ;stkvar	_g @ sp[(-56)+16]
 15292  010030  0ED8               	movlw	-40
 15293  010032  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 15294  010038  0ED9               	movlw	-39
 15295  01003A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 15296  010040  0EDA               	movlw	-38
 15297  010042  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15298  010048  0EDB               	movlw	-37
 15299  01004A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15300                           
 15301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15302                           ;stkvar	_g @ sp[(-56)+16]
 15303  010050  0EDB               	movlw	-37
 15304  010052  AEE3               	btfss	plusw1,7,c
 15305  010054  D02B               	goto	l11582
 15306                           
 15307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15308  010056  0E01               	movlw	1
 15309  010058  6E32               	movwf	(btemp+10)^0,c
 15310  01005A  0E00               	movlw	0
 15311  01005C  6E33               	movwf	(btemp+11)^0,c
 15312                           
 15313                           ;stkvar	_sign @ sp[(-56)+42]
 15314  01005E  0EF2               	movlw	-14
 15315  010060  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15316  010066  0EF3               	movlw	-13
 15317  010068  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15318                           
 15319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15320                           ;stkvar	_g @ sp[(-56)+16]
 15321  01006E  0ED8               	movlw	-40
 15322  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15323  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15324  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15325  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15326  010088  EC02  F0D5         	call	___flneg	;wreg free
 15327                           
 15328                           ;stkvar	_g @ sp[(-56)+16]
 15329  01008C  0ED8               	movlw	-40
 15330  01008E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15331  010094  0ED9               	movlw	-39
 15332  010096  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 15333  01009C  0EDA               	movlw	-38
 15334  01009E  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 15335  0100A4  0EDB               	movlw	-37
 15336  0100A6  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 15337  0100AC                     l11582:
 15338                           
 15339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15340                           ;stkvar	_n @ sp[(-56)+32]
 15341  0100AC  0EE8               	movlw	-24
 15342  0100AE  6AE3               	clrf	plusw1,c
 15343  0100B0  0EE9               	movlw	-23
 15344  0100B2  6AE3               	clrf	plusw1,c
 15345                           
 15346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15347                           ;stkvar	_w @ sp[(-56)+38]
 15348  0100B4  0EEE               	movlw	-18
 15349  0100B6  0060  F123  FFE3   	movff	_width,plusw1
 15350  0100BC  0EEF               	movlw	-17
 15351  0100BE  0060  F127  FFE3   	movff	_width+1,plusw1
 15352                           
 15353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15354                           ;stkvar	_sign @ sp[(-56)+42]
 15355  0100C4  0EF2               	movlw	-14
 15356  0100C6  006F FF8C  F028    	movff	plusw1,btemp
 15357  0100CC  0EF3               	movlw	-13
 15358  0100CE  50E3               	movf	plusw1,w,c
 15359  0100D0  1028               	iorwf	btemp^0,w,c
 15360  0100D2  A4D8               	btfss	status,2,c
 15361  0100D4  D002               	goto	u10700
 15362  0100D6  A44C               	btfss	_flags^0,2,c
 15363  0100D8  D036               	goto	l11602
 15364  0100DA                     u10700:
 15365                           
 15366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15367                           ;stkvar	_sign @ sp[(-56)+42]
 15368  0100DA  0EF2               	movlw	-14
 15369  0100DC  006F FF8C  F028    	movff	plusw1,btemp
 15370  0100E2  0EF3               	movlw	-13
 15371  0100E4  50E3               	movf	plusw1,w,c
 15372  0100E6  1028               	iorwf	btemp^0,w,c
 15373  0100E8  A4D8               	btfss	status,2,c
 15374  0100EA  D002               	goto	l11594
 15375  0100EC  0E2B               	movlw	43
 15376  0100EE  D001               	goto	L14
 15377  0100F0                     l11594:
 15378  0100F0  0E2D               	movlw	45
 15379  0100F2                     L14:
 15380  0100F2  6E32               	movwf	(btemp+10)^0,c
 15381  0100F4  0E00               	movlw	0
 15382  0100F6  6E33               	movwf	(btemp+11)^0,c
 15383                           
 15384                           ;stkvar	_efgtoa$5389 @ sp[(-56)+10]
 15385  0100F8  0ED2               	movlw	-46
 15386  0100FA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15387  010100  0ED3               	movlw	-45
 15388  010102  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15389                           
 15390                           ;stkvar	_efgtoa$5389 @ sp[(-56)+10]
 15391  010108  0ED2               	movlw	-46
 15392  01010A  006F FF8C  F3AE    	movff	plusw1,_dbuf
 15393                           
 15394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15395                           ;stkvar	_n @ sp[(-56)+32]
 15396  010110  0EE8               	movlw	-24
 15397  010112  50E3               	movf	plusw1,w,c
 15398  010114  0F01               	addlw	1
 15399  010116  6E28               	movwf	btemp^0,c
 15400  010118  0EE8               	movlw	-24
 15401  01011A  0060  F0A3  FFE3   	movff	btemp,plusw1
 15402  010120  6A28               	clrf	btemp^0,c
 15403  010122  0EE9               	movlw	-23
 15404  010124  50E3               	movf	plusw1,w,c
 15405  010126  2028               	addwfc	btemp^0,w,c
 15406  010128  6E28               	movwf	btemp^0,c
 15407  01012A  0EE9               	movlw	-23
 15408  01012C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15409                           
 15410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15411                           ;stkvar	_w @ sp[(-56)+38]
 15412  010132  50E1               	movf	fsr1l,w,c
 15413  010134  0FEE               	addlw	-18
 15414  010136  6ED9               	movwf	fsr2l,c
 15415  010138  50E2               	movf	fsr1h,w,c
 15416  01013A  6EDA               	movwf	fsr2h,c
 15417  01013C  0EFF               	movlw	255
 15418  01013E  22DA               	addwfc	fsr2h,f,c
 15419  010140  06DE               	decf	postinc2,f,c
 15420  010142  0E00               	movlw	0
 15421  010144  5ADD               	subwfb	postdec2,f,c
 15422  010146                     l11602:
 15423                           
 15424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15425                           ;stkvar	_g @ sp[(-56)+16]
 15426  010146  0ED8               	movlw	-40
 15427  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15428  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15429  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15430  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15431  010160  ECC2  F0BF         	call	___fpclassifyf	;wreg free
 15432  010164  0428               	decf	btemp^0,w,c
 15433  010166  1029               	iorwf	(btemp+1)^0,w,c
 15434  010168  A4D8               	btfss	status,2,c
 15435  01016A  D076               	goto	l11620
 15436  01016C  0EBF               	movlw	191
 15437  01016E  6E32               	movwf	(btemp+10)^0,c
 15438  010170  0EFF               	movlw	255
 15439  010172  6E33               	movwf	(btemp+11)^0,c
 15440                           
 15441                           ;stkvar	_c @ sp[(-56)+-7]
 15442  010174  0EC1               	movlw	-63
 15443  010176  50E3               	movf	plusw1,w,c
 15444  010178  6E30               	movwf	(btemp+8)^0,c
 15445  01017A  6A31               	clrf	(btemp+9)^0,c
 15446  01017C  5032               	movf	(btemp+10)^0,w,c
 15447  01017E  2630               	addwf	(btemp+8)^0,f,c
 15448  010180  5033               	movf	(btemp+11)^0,w,c
 15449  010182  2231               	addwfc	(btemp+9)^0,f,c
 15450  010184  5031               	movf	(btemp+9)^0,w,c
 15451  010186  E106               	bnz	u10730
 15452  010188  0E1A               	movlw	26
 15453  01018A  5C30               	subwf	(btemp+8)^0,w,c
 15454  01018C  B0D8               	btfsc	status,0,c
 15455  01018E  D002               	goto	u10730
 15456  010190  0E01               	movlw	1
 15457  010192  D001               	goto	u10740
 15458  010194                     u10730:
 15459  010194  0E00               	movlw	0
 15460  010196                     u10740:
 15461  010196  6E32               	movwf	(btemp+10)^0,c
 15462  010198  6A33               	clrf	(btemp+11)^0,c
 15463                           
 15464                           ;stkvar	_efgtoa$5390 @ sp[(-56)+8]
 15465  01019A  0ED0               	movlw	-48
 15466  01019C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15467  0101A2  0ED1               	movlw	-47
 15468  0101A4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15469                           
 15470                           ;stkvar	_efgtoa$5390 @ sp[(-56)+8]
 15471  0101AA  0ED0               	movlw	-48
 15472  0101AC  006F FF8C  F028    	movff	plusw1,btemp
 15473  0101B2  0ED1               	movlw	-47
 15474  0101B4  50E3               	movf	plusw1,w,c
 15475  0101B6  1028               	iorwf	btemp^0,w,c
 15476  0101B8  B4D8               	btfsc	status,2,c
 15477  0101BA  D017               	goto	l11612
 15478                           
 15479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15480  0101BC  0ED6               	movlw	low STR_66
 15481  0101BE  6EE6               	movwf	postinc1,c
 15482  0101C0  0EFF               	movlw	high STR_66
 15483  0101C2  6EE6               	movwf	postinc1,c
 15484                           
 15485                           ;stkvar	_n @ sp[(-58)+32]
 15486  0101C4  0EAE               	movlw	low _dbuf
 15487  0101C6  6E32               	movwf	(btemp+10)^0,c
 15488  0101C8  0E03               	movlw	high _dbuf
 15489  0101CA  6E33               	movwf	(btemp+11)^0,c
 15490  0101CC  0EE6               	movlw	-26
 15491  0101CE  50E3               	movf	plusw1,w,c
 15492  0101D0  2632               	addwf	(btemp+10)^0,f,c
 15493  0101D2  0EE7               	movlw	-25
 15494  0101D4  50E3               	movf	plusw1,w,c
 15495  0101D6  2233               	addwfc	(btemp+11)^0,f,c
 15496  0101D8  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15497  0101DE  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15498  0101E4  EC7A  F0CC         	call	_strcpy	;wreg free
 15499                           
 15500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15501  0101E8  D016               	goto	l11614
 15502  0101EA                     l11612:
 15503                           
 15504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15505  0101EA  0EDE               	movlw	low STR_67
 15506  0101EC  6EE6               	movwf	postinc1,c
 15507  0101EE  0EFF               	movlw	high STR_67
 15508  0101F0  6EE6               	movwf	postinc1,c
 15509                           
 15510                           ;stkvar	_n @ sp[(-58)+32]
 15511  0101F2  0EAE               	movlw	low _dbuf
 15512  0101F4  6E32               	movwf	(btemp+10)^0,c
 15513  0101F6  0E03               	movlw	high _dbuf
 15514  0101F8  6E33               	movwf	(btemp+11)^0,c
 15515  0101FA  0EE6               	movlw	-26
 15516  0101FC  50E3               	movf	plusw1,w,c
 15517  0101FE  2632               	addwf	(btemp+10)^0,f,c
 15518  010200  0EE7               	movlw	-25
 15519  010202  50E3               	movf	plusw1,w,c
 15520  010204  2233               	addwfc	(btemp+11)^0,f,c
 15521  010206  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15522  01020C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15523  010212  EC7A  F0CC         	call	_strcpy	;wreg free
 15524  010216                     l11614:
 15525                           
 15526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15527                           ;stkvar	_w @ sp[(-56)+38]
 15528  010216  50E1               	movf	fsr1l,w,c
 15529  010218  0FEE               	addlw	-18
 15530  01021A  6ED9               	movwf	fsr2l,c
 15531  01021C  50E2               	movf	fsr1h,w,c
 15532  01021E  6EDA               	movwf	fsr2h,c
 15533  010220  0EFF               	movlw	255
 15534  010222  22DA               	addwfc	fsr2h,f,c
 15535  010224  0EFD               	movlw	253
 15536  010226  26DE               	addwf	postinc2,f,c
 15537  010228  0EFF               	movlw	255
 15538  01022A  22DD               	addwfc	postdec2,f,c
 15539  01022C                     l11616:
 15540                           
 15541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15542                           ;stkvar	_w @ sp[(-56)+38]
 15543  01022C  0EEE               	movlw	-18
 15544  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15545  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15546  01023A  0EAE               	movlw	low _dbuf
 15547  01023C  6EE6               	movwf	postinc1,c
 15548  01023E  0E03               	movlw	high _dbuf
 15549  010240  6EE6               	movwf	postinc1,c
 15550                           
 15551                           ;stkvar	_fp @ sp[(-60)+-2]
 15552  010242  0EC2               	movlw	-62
 15553  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15554  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15555  010250  EC77  F0C8         	call	_pad	;wreg free
 15556  010254  EF1D  F089         	goto	l2166
 15557  010258                     l11620:
 15558                           
 15559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15560                           ;stkvar	_g @ sp[(-56)+16]
 15561  010258  0ED8               	movlw	-40
 15562  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15563  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15564  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15565  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15566  010272  ECC2  F0BF         	call	___fpclassifyf	;wreg free
 15567  010276  5028               	movf	btemp^0,w,c
 15568  010278  1029               	iorwf	(btemp+1)^0,w,c
 15569  01027A  A4D8               	btfss	status,2,c
 15570  01027C  D056               	goto	l11638
 15571  01027E  0EBF               	movlw	191
 15572  010280  6E32               	movwf	(btemp+10)^0,c
 15573  010282  0EFF               	movlw	255
 15574  010284  6E33               	movwf	(btemp+11)^0,c
 15575                           
 15576                           ;stkvar	_c @ sp[(-56)+-7]
 15577  010286  0EC1               	movlw	-63
 15578  010288  50E3               	movf	plusw1,w,c
 15579  01028A  6E30               	movwf	(btemp+8)^0,c
 15580  01028C  6A31               	clrf	(btemp+9)^0,c
 15581  01028E  5032               	movf	(btemp+10)^0,w,c
 15582  010290  2630               	addwf	(btemp+8)^0,f,c
 15583  010292  5033               	movf	(btemp+11)^0,w,c
 15584  010294  2231               	addwfc	(btemp+9)^0,f,c
 15585  010296  5031               	movf	(btemp+9)^0,w,c
 15586  010298  E106               	bnz	u10770
 15587  01029A  0E1A               	movlw	26
 15588  01029C  5C30               	subwf	(btemp+8)^0,w,c
 15589  01029E  B0D8               	btfsc	status,0,c
 15590  0102A0  D002               	goto	u10770
 15591  0102A2  0E01               	movlw	1
 15592  0102A4  D001               	goto	u10780
 15593  0102A6                     u10770:
 15594  0102A6  0E00               	movlw	0
 15595  0102A8                     u10780:
 15596  0102A8  6E32               	movwf	(btemp+10)^0,c
 15597  0102AA  6A33               	clrf	(btemp+11)^0,c
 15598                           
 15599                           ;stkvar	_efgtoa$5394 @ sp[(-56)+6]
 15600  0102AC  0ECE               	movlw	-50
 15601  0102AE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15602  0102B4  0ECF               	movlw	-49
 15603  0102B6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15604                           
 15605                           ;stkvar	_efgtoa$5394 @ sp[(-56)+6]
 15606  0102BC  0ECE               	movlw	-50
 15607  0102BE  006F FF8C  F028    	movff	plusw1,btemp
 15608  0102C4  0ECF               	movlw	-49
 15609  0102C6  50E3               	movf	plusw1,w,c
 15610  0102C8  1028               	iorwf	btemp^0,w,c
 15611  0102CA  B4D8               	btfsc	status,2,c
 15612  0102CC  D017               	goto	l11630
 15613                           
 15614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15615  0102CE  0EDA               	movlw	low STR_70
 15616  0102D0  6EE6               	movwf	postinc1,c
 15617  0102D2  0EFF               	movlw	high STR_70
 15618  0102D4  6EE6               	movwf	postinc1,c
 15619                           
 15620                           ;stkvar	_n @ sp[(-58)+32]
 15621  0102D6  0EAE               	movlw	low _dbuf
 15622  0102D8  6E32               	movwf	(btemp+10)^0,c
 15623  0102DA  0E03               	movlw	high _dbuf
 15624  0102DC  6E33               	movwf	(btemp+11)^0,c
 15625  0102DE  0EE6               	movlw	-26
 15626  0102E0  50E3               	movf	plusw1,w,c
 15627  0102E2  2632               	addwf	(btemp+10)^0,f,c
 15628  0102E4  0EE7               	movlw	-25
 15629  0102E6  50E3               	movf	plusw1,w,c
 15630  0102E8  2233               	addwfc	(btemp+11)^0,f,c
 15631  0102EA  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15632  0102F0  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15633  0102F6  EC7A  F0CC         	call	_strcpy	;wreg free
 15634                           
 15635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15636  0102FA  D78D               	goto	l11614
 15637  0102FC                     l11630:
 15638                           
 15639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15640  0102FC  0EE2               	movlw	low STR_71
 15641  0102FE  6EE6               	movwf	postinc1,c
 15642  010300  0EFF               	movlw	high STR_71
 15643  010302  6EE6               	movwf	postinc1,c
 15644                           
 15645                           ;stkvar	_n @ sp[(-58)+32]
 15646  010304  0EAE               	movlw	low _dbuf
 15647  010306  6E32               	movwf	(btemp+10)^0,c
 15648  010308  0E03               	movlw	high _dbuf
 15649  01030A  6E33               	movwf	(btemp+11)^0,c
 15650  01030C  0EE6               	movlw	-26
 15651  01030E  50E3               	movf	plusw1,w,c
 15652  010310  2632               	addwf	(btemp+10)^0,f,c
 15653  010312  0EE7               	movlw	-25
 15654  010314  50E3               	movf	plusw1,w,c
 15655  010316  2233               	addwfc	(btemp+11)^0,f,c
 15656  010318  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15657  01031E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15658  010324  EC7A  F0CC         	call	_strcpy	;wreg free
 15659  010328  D776               	goto	l11614
 15660  01032A                     l11638:
 15661                           
 15662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15663  01032A  0E00               	movlw	0
 15664  01032C  6E30               	movwf	(btemp+8)^0,c
 15665  01032E  0E00               	movlw	0
 15666  010330  6E31               	movwf	(btemp+9)^0,c
 15667  010332  0E80               	movlw	128
 15668  010334  6E32               	movwf	(btemp+10)^0,c
 15669  010336  0E3F               	movlw	63
 15670  010338  6E33               	movwf	(btemp+11)^0,c
 15671                           
 15672                           ;stkvar	_u @ sp[(-56)+12]
 15673  01033A  0ED4               	movlw	-44
 15674  01033C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 15675  010342  0ED5               	movlw	-43
 15676  010344  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 15677  01034A  0ED6               	movlw	-42
 15678  01034C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15679  010352  0ED7               	movlw	-41
 15680  010354  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15681                           
 15682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15683                           ;stkvar	_e @ sp[(-56)+34]
 15684  01035A  0EEA               	movlw	-22
 15685  01035C  6AE3               	clrf	plusw1,c
 15686  01035E  0EEB               	movlw	-21
 15687  010360  6AE3               	clrf	plusw1,c
 15688                           
 15689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15690  010362  0E00               	movlw	0
 15691  010364  6EE6               	movwf	postinc1,c
 15692  010366  0E00               	movlw	0
 15693  010368  6EE6               	movwf	postinc1,c
 15694  01036A  0E00               	movlw	0
 15695  01036C  6EE6               	movwf	postinc1,c
 15696  01036E  0E00               	movlw	0
 15697  010370  6EE6               	movwf	postinc1,c
 15698                           
 15699                           ;stkvar	_g @ sp[(-60)+16]
 15700  010372  0ED4               	movlw	-44
 15701  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15702  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15703  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15704  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15705  01038C  ECE4  F0CC         	call	___fleq	;wreg free
 15706  010390  A028               	btfss	btemp& (0+255),0,c
 15707  010392  D039               	goto	l11650
 15708  010394  D0BC               	goto	u10820
 15709  010396                     l11646:
 15710                           
 15711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15712  010396  0E00               	movlw	0
 15713  010398  6EE6               	movwf	postinc1,c
 15714  01039A  0E00               	movlw	0
 15715  01039C  6EE6               	movwf	postinc1,c
 15716  01039E  0E20               	movlw	32
 15717  0103A0  6EE6               	movwf	postinc1,c
 15718  0103A2  0E41               	movlw	65
 15719  0103A4  6EE6               	movwf	postinc1,c
 15720                           
 15721                           ;stkvar	_u @ sp[(-60)+12]
 15722  0103A6  0ED0               	movlw	-48
 15723  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15724  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15725  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15726  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15727  0103C0  EC0F  F099         	call	___flmul	;wreg free
 15728                           
 15729                           ;stkvar	_u @ sp[(-56)+12]
 15730  0103C4  0ED4               	movlw	-44
 15731  0103C6  0060  F0A3  FFE3   	movff	btemp,plusw1
 15732  0103CC  0ED5               	movlw	-43
 15733  0103CE  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 15734  0103D4  0ED6               	movlw	-42
 15735  0103D6  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 15736  0103DC  0ED7               	movlw	-41
 15737  0103DE  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 15738                           
 15739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15740                           ;stkvar	_e @ sp[(-56)+34]
 15741  0103E4  0EEA               	movlw	-22
 15742  0103E6  50E3               	movf	plusw1,w,c
 15743  0103E8  0F01               	addlw	1
 15744  0103EA  6E28               	movwf	btemp^0,c
 15745  0103EC  0EEA               	movlw	-22
 15746  0103EE  0060  F0A3  FFE3   	movff	btemp,plusw1
 15747  0103F4  6A28               	clrf	btemp^0,c
 15748  0103F6  0EEB               	movlw	-21
 15749  0103F8  50E3               	movf	plusw1,w,c
 15750  0103FA  2028               	addwfc	btemp^0,w,c
 15751  0103FC  6E28               	movwf	btemp^0,c
 15752  0103FE  0EEB               	movlw	-21
 15753  010400  0060  F0A3  FFE3   	movff	btemp,plusw1
 15754  010406                     l11650:
 15755                           
 15756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15757  010406  0E00               	movlw	0
 15758  010408  6EE6               	movwf	postinc1,c
 15759  01040A  0E00               	movlw	0
 15760  01040C  6EE6               	movwf	postinc1,c
 15761  01040E  0E20               	movlw	32
 15762  010410  6EE6               	movwf	postinc1,c
 15763  010412  0E41               	movlw	65
 15764  010414  6EE6               	movwf	postinc1,c
 15765                           
 15766                           ;stkvar	_u @ sp[(-60)+12]
 15767  010416  0ED0               	movlw	-48
 15768  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15769  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15770  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15771  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15772  010430  EC0F  F099         	call	___flmul	;wreg free
 15773  010434  0060  F0A3  FFE6   	movff	btemp,postinc1
 15774  01043A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 15775  010440  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 15776  010446  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 15777                           
 15778                           ;stkvar	_g @ sp[(-60)+16]
 15779  01044C  0ED4               	movlw	-44
 15780  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 15781  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 15782  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 15783  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 15784  010466  EC78  F0C3         	call	___flge	;wreg free
 15785  01046A  A028               	btfss	btemp& (0+255),0,c
 15786  01046C  D032               	goto	l11656
 15787  01046E  D793               	goto	l11646
 15788  010470                     l11652:
 15789                           
 15790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 15791  010470  0E00               	movlw	0
 15792  010472  6EE6               	movwf	postinc1,c
 15793  010474  0E00               	movlw	0
 15794  010476  6EE6               	movwf	postinc1,c
 15795  010478  0E20               	movlw	32
 15796  01047A  6EE6               	movwf	postinc1,c
 15797  01047C  0E41               	movlw	65
 15798  01047E  6EE6               	movwf	postinc1,c
 15799                           
 15800                           ;stkvar	_u @ sp[(-60)+12]
 15801  010480  0ED0               	movlw	-48
 15802  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15803  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15804  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15805  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15806  01049A  ECA3  F0A4         	call	___fldiv	;wreg free
 15807                           
 15808                           ;stkvar	_u @ sp[(-56)+12]
 15809  01049E  0ED4               	movlw	-44
 15810  0104A0  0060  F0A3  FFE3   	movff	btemp,plusw1
 15811  0104A6  0ED5               	movlw	-43
 15812  0104A8  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 15813  0104AE  0ED6               	movlw	-42
 15814  0104B0  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 15815  0104B6  0ED7               	movlw	-41
 15816  0104B8  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 15817                           
 15818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15819                           ;stkvar	_e @ sp[(-56)+34]
 15820  0104BE  50E1               	movf	fsr1l,w,c
 15821  0104C0  0FEA               	addlw	-22
 15822  0104C2  6ED9               	movwf	fsr2l,c
 15823  0104C4  50E2               	movf	fsr1h,w,c
 15824  0104C6  6EDA               	movwf	fsr2h,c
 15825  0104C8  0EFF               	movlw	255
 15826  0104CA  22DA               	addwfc	fsr2h,f,c
 15827  0104CC  06DE               	decf	postinc2,f,c
 15828  0104CE  0E00               	movlw	0
 15829  0104D0  5ADD               	subwfb	postdec2,f,c
 15830  0104D2                     l11656:
 15831                           
 15832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15833                           ;stkvar	_u @ sp[(-56)+12]
 15834  0104D2  0ED4               	movlw	-44
 15835  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15836  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15837  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15838  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15839                           
 15840                           ;stkvar	_g @ sp[(-60)+16]
 15841  0104EC  0ED4               	movlw	-44
 15842  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15843  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15844  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15845  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15846  010506  EC78  F0C3         	call	___flge	;wreg free
 15847  01050A  A028               	btfss	btemp& (0+255),0,c
 15848  01050C  D7B1               	goto	l11652
 15849  01050E                     u10820:
 15850                           
 15851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15852                           ;stkvar	_c @ sp[(-56)+-7]
 15853  01050E  0EC1               	movlw	-63
 15854  010510  50E3               	movf	plusw1,w,c
 15855  010512  6EE6               	movwf	postinc1,c
 15856  010514  0E00               	movlw	0
 15857  010516  6EE6               	movwf	postinc1,c
 15858  010518  EC9D  F0D1         	call	_tolower	;wreg free
 15859                           
 15860                           ;stkvar	_mode @ sp[(-56)+54]
 15861  01051C  0EFE               	movlw	-2
 15862  01051E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15863                           
 15864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15865                           ;stkvar	_mode @ sp[(-56)+54]
 15866                           ;stkvar	_nmode @ sp[(-56)+55]
 15867  010524  0EFE               	movlw	-2
 15868  010526  006F FF8C  F028    	movff	plusw1,btemp
 15869  01052C  0EFF               	movlw	-1
 15870  01052E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15871                           
 15872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15873                           ;stkvar	_mode @ sp[(-56)+54]
 15874  010534  0EFE               	movlw	-2
 15875  010536  006F FF8C  F028    	movff	plusw1,btemp
 15876  01053C  0E67               	movlw	103
 15877  01053E  1828               	xorwf	btemp^0,w,c
 15878  010540  A4D8               	btfss	status,2,c
 15879  010542  D025               	goto	l11674
 15880                           
 15881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15882  010544  504A               	movf	_prec^0,w,c
 15883  010546  104B               	iorwf	(_prec+1)^0,w,c
 15884  010548  A4D8               	btfss	status,2,c
 15885  01054A  D004               	goto	l11668
 15886                           
 15887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15888  01054C  0E00               	movlw	0
 15889  01054E  6E4B               	movwf	(_prec+1)^0,c
 15890  010550  0E01               	movlw	1
 15891  010552  6E4A               	movwf	_prec^0,c
 15892  010554                     l11668:
 15893                           
 15894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15895  010554  BE4B               	btfsc	(_prec+1)^0,7,c
 15896  010556  D005               	goto	u10850
 15897  010558  504B               	movf	(_prec+1)^0,w,c
 15898  01055A  E110               	bnz	l11672
 15899  01055C  044A               	decf	_prec^0,w,c
 15900  01055E  B0D8               	btfsc	status,0,c
 15901  010560  D00D               	goto	l11672
 15902  010562                     u10850:
 15903  010562  0E06               	movlw	6
 15904  010564  6E32               	movwf	(btemp+10)^0,c
 15905  010566  0E00               	movlw	0
 15906  010568  6E33               	movwf	(btemp+11)^0,c
 15907                           
 15908                           ;stkvar	_p @ sp[(-56)+40]
 15909  01056A  0EF0               	movlw	-16
 15910  01056C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15911  010572  0EF1               	movlw	-15
 15912  010574  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15913  01057A  D00C               	goto	l11680
 15914  01057C                     l11672:
 15915                           
 15916                           ;stkvar	_p @ sp[(-56)+40]
 15917  01057C  0EF0               	movlw	-16
 15918  01057E  0060  F12B  FFE3   	movff	_prec,plusw1
 15919  010584  0EF1               	movlw	-15
 15920  010586  0060  F12F  FFE3   	movff	_prec+1,plusw1
 15921  01058C  D003               	goto	l11680
 15922  01058E                     l11674:
 15923                           
 15924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15925  01058E  AE4B               	btfss	(_prec+1)^0,7,c
 15926  010590  D7F5               	goto	l11672
 15927  010592  D7E7               	goto	u10850
 15928  010594                     l11680:
 15929                           
 15930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15931                           ;stkvar	_mode @ sp[(-56)+54]
 15932  010594  0EFE               	movlw	-2
 15933  010596  006F FF8C  F028    	movff	plusw1,btemp
 15934  01059C  0E67               	movlw	103
 15935  01059E  1828               	xorwf	btemp^0,w,c
 15936  0105A0  A4D8               	btfss	status,2,c
 15937  0105A2  D02F               	goto	l11690
 15938                           
 15939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15940                           ;stkvar	_e @ sp[(-56)+34]
 15941  0105A4  0EEB               	movlw	-21
 15942  0105A6  AEE3               	btfss	plusw1,7,c
 15943  0105A8  D00E               	goto	u10880
 15944  0105AA  0EEA               	movlw	-22
 15945  0105AC  006F FF8C  F028    	movff	plusw1,btemp
 15946  0105B2  0EFC               	movlw	252
 15947  0105B4  5E28               	subwf	btemp^0,f,c
 15948  0105B6  0EEB               	movlw	-21
 15949  0105B8  006F FF8C  F028    	movff	plusw1,btemp
 15950  0105BE  0EFF               	movlw	255
 15951  0105C0  5A28               	subwfb	btemp^0,f,c
 15952  0105C2  A0D8               	btfss	status,0,c
 15953  0105C4  D018               	goto	l11688
 15954  0105C6                     u10880:
 15955                           
 15956                           ;stkvar	_e @ sp[(-56)+34]
 15957                           ;stkvar	_p @ sp[(-56)+40]
 15958  0105C6  0EF0               	movlw	-16
 15959  0105C8  50E3               	movf	plusw1,w,c
 15960  0105CA  0FFF               	addlw	255
 15961  0105CC  6E32               	movwf	(btemp+10)^0,c
 15962  0105CE  0EF1               	movlw	-15
 15963  0105D0  006F FF8C  F033    	movff	plusw1,btemp+11
 15964  0105D6  0EFF               	movlw	255
 15965  0105D8  2233               	addwfc	(btemp+11)^0,f,c
 15966  0105DA  0EEA               	movlw	-22
 15967  0105DC  50E3               	movf	plusw1,w,c
 15968  0105DE  5C32               	subwf	(btemp+10)^0,w,c
 15969  0105E0  5033               	movf	(btemp+11)^0,w,c
 15970  0105E2  0A80               	xorlw	128
 15971  0105E4  6E28               	movwf	btemp^0,c
 15972  0105E6  0EEB               	movlw	-21
 15973  0105E8  50E3               	movf	plusw1,w,c
 15974  0105EA  0A80               	xorlw	128
 15975  0105EC  5828               	subwfb	btemp^0,w,c
 15976  0105EE  A0D8               	btfss	status,0,c
 15977  0105F0  D002               	goto	l11688
 15978                           
 15979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15980  0105F2  0E66               	movlw	102
 15981  0105F4  D001               	goto	L15
 15982  0105F6                     l11688:
 15983                           
 15984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15985  0105F6  0E65               	movlw	101
 15986  0105F8                     L15:
 15987  0105F8  6E33               	movwf	(btemp+11)^0,c
 15988                           
 15989                           ;stkvar	_nmode @ sp[(-56)+55]
 15990  0105FA  0EFF               	movlw	-1
 15991  0105FC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15992  010602                     l11690:
 15993                           
 15994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 15995                           ;stkvar	_p @ sp[(-56)+40]
 15996                           ;stkvar	_m @ sp[(-56)+48]
 15997  010602  0EF0               	movlw	-16
 15998  010604  006F FF8C  F028    	movff	plusw1,btemp
 15999  01060A  0EF8               	movlw	-8
 16000  01060C  0060  F0A3  FFE3   	movff	btemp,plusw1
 16001  010612  0EF1               	movlw	-15
 16002  010614  006F FF8C  F028    	movff	plusw1,btemp
 16003  01061A  0EF9               	movlw	-7
 16004  01061C  0060  F0A3  FFE3   	movff	btemp,plusw1
 16005                           
 16006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16007                           ;stkvar	_mode @ sp[(-56)+54]
 16008  010622  0EFE               	movlw	-2
 16009  010624  006F FF8C  F028    	movff	plusw1,btemp
 16010  01062A  0E67               	movlw	103
 16011  01062C  1828               	xorwf	btemp^0,w,c
 16012  01062E  A4D8               	btfss	status,2,c
 16013  010630  D00B               	goto	u10920
 16014                           
 16015                           ;stkvar	_nmode @ sp[(-56)+55]
 16016  010632  0EFF               	movlw	-1
 16017  010634  006F FF8C  F028    	movff	plusw1,btemp
 16018  01063A  0E66               	movlw	102
 16019  01063C  1828               	xorwf	btemp^0,w,c
 16020  01063E  A4D8               	btfss	status,2,c
 16021  010640  D014               	goto	l2195
 16022                           
 16023                           ;stkvar	_e @ sp[(-56)+34]
 16024  010642  0EEB               	movlw	-21
 16025  010644  AEE3               	btfss	plusw1,7,c
 16026  010646  D011               	goto	l2195
 16027  010648                     u10920:
 16028                           
 16029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16030                           ;stkvar	_m @ sp[(-56)+48]
 16031  010648  0EF8               	movlw	-8
 16032  01064A  50E3               	movf	plusw1,w,c
 16033  01064C  0F01               	addlw	1
 16034  01064E  6E28               	movwf	btemp^0,c
 16035  010650  0EF8               	movlw	-8
 16036  010652  0060  F0A3  FFE3   	movff	btemp,plusw1
 16037  010658  6A28               	clrf	btemp^0,c
 16038  01065A  0EF9               	movlw	-7
 16039  01065C  50E3               	movf	plusw1,w,c
 16040  01065E  2028               	addwfc	btemp^0,w,c
 16041  010660  6E28               	movwf	btemp^0,c
 16042  010662  0EF9               	movlw	-7
 16043  010664  0060  F0A3  FFE3   	movff	btemp,plusw1
 16044  01066A                     l2195:
 16045                           
 16046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16047                           ;stkvar	_nmode @ sp[(-56)+55]
 16048  01066A  0EFF               	movlw	-1
 16049  01066C  006F FF8C  F028    	movff	plusw1,btemp
 16050  010672  0E66               	movlw	102
 16051  010674  1828               	xorwf	btemp^0,w,c
 16052  010676  A4D8               	btfss	status,2,c
 16053  010678  D03B               	goto	l11710
 16054                           
 16055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16056                           ;stkvar	_e @ sp[(-56)+34]
 16057  01067A  0EEB               	movlw	-21
 16058  01067C  AEE3               	btfss	plusw1,7,c
 16059  01067E  D01C               	goto	l11706
 16060                           
 16061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16062  010680  0E00               	movlw	0
 16063  010682  6E30               	movwf	(btemp+8)^0,c
 16064  010684  0E00               	movlw	0
 16065  010686  6E31               	movwf	(btemp+9)^0,c
 16066  010688  0E80               	movlw	128
 16067  01068A  6E32               	movwf	(btemp+10)^0,c
 16068  01068C  0E3F               	movlw	63
 16069  01068E  6E33               	movwf	(btemp+11)^0,c
 16070                           
 16071                           ;stkvar	_u @ sp[(-56)+12]
 16072  010690  0ED4               	movlw	-44
 16073  010692  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16074  010698  0ED5               	movlw	-43
 16075  01069A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16076  0106A0  0ED6               	movlw	-42
 16077  0106A2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16078  0106A8  0ED7               	movlw	-41
 16079  0106AA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16080                           
 16081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16082                           ;stkvar	_e @ sp[(-56)+34]
 16083  0106B0  0EEA               	movlw	-22
 16084  0106B2  6AE3               	clrf	plusw1,c
 16085  0106B4  0EEB               	movlw	-21
 16086  0106B6  6AE3               	clrf	plusw1,c
 16087  0106B8                     l11706:
 16088                           
 16089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16090                           ;stkvar	_mode @ sp[(-56)+54]
 16091  0106B8  0EFE               	movlw	-2
 16092  0106BA  006F FF8C  F028    	movff	plusw1,btemp
 16093  0106C0  0E67               	movlw	103
 16094  0106C2  1828               	xorwf	btemp^0,w,c
 16095  0106C4  B4D8               	btfsc	status,2,c
 16096  0106C6  D014               	goto	l11710
 16097                           
 16098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16099                           ;stkvar	_e @ sp[(-56)+34]
 16100                           ;stkvar	_m @ sp[(-56)+48]
 16101  0106C8  0EF8               	movlw	-8
 16102  0106CA  50E3               	movf	plusw1,w,c
 16103  0106CC  6E28               	movwf	btemp^0,c
 16104  0106CE  0EEA               	movlw	-22
 16105  0106D0  50E3               	movf	plusw1,w,c
 16106  0106D2  2628               	addwf	btemp^0,f,c
 16107  0106D4  0EF8               	movlw	-8
 16108  0106D6  0060  F0A3  FFE3   	movff	btemp,plusw1
 16109  0106DC  0EF9               	movlw	-7
 16110  0106DE  50E3               	movf	plusw1,w,c
 16111  0106E0  6E28               	movwf	btemp^0,c
 16112  0106E2  0EEB               	movlw	-21
 16113  0106E4  50E3               	movf	plusw1,w,c
 16114  0106E6  2228               	addwfc	btemp^0,f,c
 16115  0106E8  0EF9               	movlw	-7
 16116  0106EA  0060  F0A3  FFE3   	movff	btemp,plusw1
 16117  0106F0                     l11710:
 16118                           
 16119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16120                           ;stkvar	_i @ sp[(-56)+36]
 16121  0106F0  0EEC               	movlw	-20
 16122  0106F2  6AE3               	clrf	plusw1,c
 16123  0106F4  0EED               	movlw	-19
 16124  0106F6  6AE3               	clrf	plusw1,c
 16125                           
 16126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16127                           ;stkvar	_g @ sp[(-56)+16]
 16128  0106F8  0ED8               	movlw	-40
 16129  0106FA  006F FF8C  F030    	movff	plusw1,btemp+8
 16130  010700  0ED9               	movlw	-39
 16131  010702  006F FF8C  F031    	movff	plusw1,btemp+9
 16132  010708  0EDA               	movlw	-38
 16133  01070A  006F FF8C  F032    	movff	plusw1,btemp+10
 16134  010710  0EDB               	movlw	-37
 16135  010712  006F FF8C  F033    	movff	plusw1,btemp+11
 16136                           
 16137                           ;stkvar	_h @ sp[(-56)+24]
 16138  010718  0EE0               	movlw	-32
 16139  01071A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16140  010720  0EE1               	movlw	-31
 16141  010722  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16142  010728  0EE2               	movlw	-30
 16143  01072A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16144  010730  0EE3               	movlw	-29
 16145  010732  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16146                           
 16147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16148                           ;stkvar	_u @ sp[(-56)+12]
 16149  010738  0ED4               	movlw	-44
 16150  01073A  006F FF8C  F030    	movff	plusw1,btemp+8
 16151  010740  0ED5               	movlw	-43
 16152  010742  006F FF8C  F031    	movff	plusw1,btemp+9
 16153  010748  0ED6               	movlw	-42
 16154  01074A  006F FF8C  F032    	movff	plusw1,btemp+10
 16155  010750  0ED7               	movlw	-41
 16156  010752  006F FF8C  F033    	movff	plusw1,btemp+11
 16157                           
 16158                           ;stkvar	_ou @ sp[(-56)+28]
 16159  010758  0EE4               	movlw	-28
 16160  01075A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16161  010760  0EE5               	movlw	-27
 16162  010762  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16163  010768  0EE6               	movlw	-26
 16164  01076A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16165  010770  0EE7               	movlw	-25
 16166  010772  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16167                           
 16168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16169  010778  D0D6               	goto	l11726
 16170  01077A                     l11716:
 16171                           
 16172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16173                           ;stkvar	_u @ sp[(-56)+12]
 16174  01077A  0ED4               	movlw	-44
 16175  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16176  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16177  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16178  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16179                           
 16180                           ;stkvar	_h @ sp[(-60)+24]
 16181  010794  0EDC               	movlw	-36
 16182  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16183  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16184  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16185  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16186  0107AE  ECA3  F0A4         	call	___fldiv	;wreg free
 16187  0107B2  0060  F0A3  FFE6   	movff	btemp,postinc1
 16188  0107B8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16189  0107BE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16190  0107C4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16191  0107CA  ECA4  F0AF         	call	_floorf	;wreg free
 16192                           
 16193                           ;stkvar	_l @ sp[(-56)+20]
 16194  0107CE  0EDC               	movlw	-36
 16195  0107D0  0060  F0A3  FFE3   	movff	btemp,plusw1
 16196  0107D6  0EDD               	movlw	-35
 16197  0107D8  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16198  0107DE  0EDE               	movlw	-34
 16199  0107E0  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16200  0107E6  0EDF               	movlw	-33
 16201  0107E8  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16202                           
 16203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16204                           ;stkvar	_l @ sp[(-56)+20]
 16205  0107EE  0EDC               	movlw	-36
 16206  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16207  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16208  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16209  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16210  010808  EC07  F0C2         	call	___fltol	;wreg free
 16211  01080C  0060  F0A0  F032   	movff	btemp,btemp+10
 16212  010812  0060  F0A4  F033   	movff	btemp+1,btemp+11
 16213                           
 16214                           ;stkvar	_d @ sp[(-56)+44]
 16215  010818  0EF4               	movlw	-12
 16216  01081A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16217  010820  0EF5               	movlw	-11
 16218  010822  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16219                           
 16220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16221                           ;stkvar	_u @ sp[(-56)+12]
 16222  010828  0ED4               	movlw	-44
 16223  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16224  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16225  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16226  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16227                           
 16228                           ;stkvar	_l @ sp[(-60)+20]
 16229  010842  0ED8               	movlw	-40
 16230  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16231  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16232  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16233  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16234  01085C  EC0F  F099         	call	___flmul	;wreg free
 16235  010860  0060  F0A3  FFE6   	movff	btemp,postinc1
 16236  010866  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16237  01086C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16238  010872  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16239                           
 16240                           ;stkvar	_h @ sp[(-60)+24]
 16241  010878  0EDC               	movlw	-36
 16242  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16243  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16244  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16245  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16246  010892  EC6D  F0D5         	call	___flsub	;wreg free
 16247                           
 16248                           ;stkvar	_h @ sp[(-56)+24]
 16249  010896  0EE0               	movlw	-32
 16250  010898  0060  F0A3  FFE3   	movff	btemp,plusw1
 16251  01089E  0EE1               	movlw	-31
 16252  0108A0  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16253  0108A6  0EE2               	movlw	-30
 16254  0108A8  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16255  0108AE  0EE3               	movlw	-29
 16256  0108B0  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16257                           
 16258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16259  0108B6  0E00               	movlw	0
 16260  0108B8  6EE6               	movwf	postinc1,c
 16261  0108BA  0E00               	movlw	0
 16262  0108BC  6EE6               	movwf	postinc1,c
 16263  0108BE  0E20               	movlw	32
 16264  0108C0  6EE6               	movwf	postinc1,c
 16265  0108C2  0E41               	movlw	65
 16266  0108C4  6EE6               	movwf	postinc1,c
 16267                           
 16268                           ;stkvar	_u @ sp[(-60)+12]
 16269  0108C6  0ED0               	movlw	-48
 16270  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16271  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16272  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16273  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16274  0108E0  ECA3  F0A4         	call	___fldiv	;wreg free
 16275                           
 16276                           ;stkvar	_u @ sp[(-56)+12]
 16277  0108E4  0ED4               	movlw	-44
 16278  0108E6  0060  F0A3  FFE3   	movff	btemp,plusw1
 16279  0108EC  0ED5               	movlw	-43
 16280  0108EE  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16281  0108F4  0ED6               	movlw	-42
 16282  0108F6  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16283  0108FC  0ED7               	movlw	-41
 16284  0108FE  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16285                           
 16286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16287                           ;stkvar	_i @ sp[(-56)+36]
 16288  010904  0EEC               	movlw	-20
 16289  010906  50E3               	movf	plusw1,w,c
 16290  010908  0F01               	addlw	1
 16291  01090A  6E28               	movwf	btemp^0,c
 16292  01090C  0EEC               	movlw	-20
 16293  01090E  0060  F0A3  FFE3   	movff	btemp,plusw1
 16294  010914  6A28               	clrf	btemp^0,c
 16295  010916  0EED               	movlw	-19
 16296  010918  50E3               	movf	plusw1,w,c
 16297  01091A  2028               	addwfc	btemp^0,w,c
 16298  01091C  6E28               	movwf	btemp^0,c
 16299  01091E  0EED               	movlw	-19
 16300  010920  0060  F0A3  FFE3   	movff	btemp,plusw1
 16301  010926                     l11726:
 16302                           
 16303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16304                           ;stkvar	_m @ sp[(-56)+48]
 16305                           ;stkvar	_i @ sp[(-56)+36]
 16306  010926  50E1               	movf	fsr1l,w,c
 16307  010928  0FEC               	addlw	-20
 16308  01092A  6ED9               	movwf	fsr2l,c
 16309  01092C  50E2               	movf	fsr1h,w,c
 16310  01092E  6EDA               	movwf	fsr2h,c
 16311  010930  0EFF               	movlw	255
 16312  010932  22DA               	addwfc	fsr2h,f,c
 16313  010934  0EF8               	movlw	-8
 16314  010936  50E3               	movf	plusw1,w,c
 16315  010938  5CDE               	subwf	postinc2,w,c
 16316  01093A  50DE               	movf	postinc2,w,c
 16317  01093C  0A80               	xorlw	128
 16318  01093E  6E28               	movwf	btemp^0,c
 16319  010940  0EF9               	movlw	-7
 16320  010942  50E3               	movf	plusw1,w,c
 16321  010944  0A80               	xorlw	128
 16322  010946  5828               	subwfb	btemp^0,w,c
 16323  010948  A0D8               	btfss	status,0,c
 16324  01094A  D717               	goto	l11716
 16325                           
 16326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16327  01094C  0E00               	movlw	0
 16328  01094E  6EE6               	movwf	postinc1,c
 16329  010950  0E00               	movlw	0
 16330  010952  6EE6               	movwf	postinc1,c
 16331  010954  0EA0               	movlw	160
 16332  010956  6EE6               	movwf	postinc1,c
 16333  010958  0E40               	movlw	64
 16334  01095A  6EE6               	movwf	postinc1,c
 16335                           
 16336                           ;stkvar	_u @ sp[(-60)+12]
 16337  01095C  0ED0               	movlw	-48
 16338  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16339  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16340  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16341  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16342  010976  EC0F  F099         	call	___flmul	;wreg free
 16343                           
 16344                           ;stkvar	_l @ sp[(-56)+20]
 16345  01097A  0EDC               	movlw	-36
 16346  01097C  0060  F0A3  FFE3   	movff	btemp,plusw1
 16347  010982  0EDD               	movlw	-35
 16348  010984  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16349  01098A  0EDE               	movlw	-34
 16350  01098C  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16351  010992  0EDF               	movlw	-33
 16352  010994  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16353                           
 16354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16355                           ;stkvar	_l @ sp[(-56)+20]
 16356  01099A  0EDC               	movlw	-36
 16357  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16358  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16359  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16360  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16361                           
 16362                           ;stkvar	_h @ sp[(-60)+24]
 16363  0109B4  0EDC               	movlw	-36
 16364  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16365  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16366  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16367  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16368  0109CE  EC78  F0C3         	call	___flge	;wreg free
 16369  0109D2  A028               	btfss	btemp& (0+255),0,c
 16370  0109D4  D021               	goto	u10990
 16371                           
 16372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16373                           ;stkvar	_l @ sp[(-56)+20]
 16374                           
 16375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16376                           
 16377                           ;stkvar	_l @ sp[(-56)+20]
 16378                           
 16379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16380  0109D6  0EDC               	movlw	-36
 16381  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16382  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16383  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16384  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16385                           
 16386                           ;stkvar	_h @ sp[(-60)+24]
 16387  0109F0  0EDC               	movlw	-36
 16388  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16389  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16390  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16391  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16392  010A0A  ECE4  F0CC         	call	___fleq	;wreg free
 16393  010A0E  A028               	btfss	btemp& (0+255),0,c
 16394  010A10  D01B               	goto	l11740
 16395                           
 16396                           ;stkvar	_d @ sp[(-56)+44]
 16397  010A12  0EF4               	movlw	-12
 16398  010A14  B0E3               	btfsc	plusw1,0,c
 16399  010A16  D018               	goto	l11740
 16400  010A18                     u10990:
 16401                           
 16402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16403  010A18  0E00               	movlw	0
 16404  010A1A  6E30               	movwf	(btemp+8)^0,c
 16405  010A1C  0E00               	movlw	0
 16406  010A1E  6E31               	movwf	(btemp+9)^0,c
 16407  010A20  0E00               	movlw	0
 16408  010A22  6E32               	movwf	(btemp+10)^0,c
 16409  010A24  0E00               	movlw	0
 16410  010A26  6E33               	movwf	(btemp+11)^0,c
 16411                           
 16412                           ;stkvar	_l @ sp[(-56)+20]
 16413  010A28  0EDC               	movlw	-36
 16414  010A2A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16415  010A30  0EDD               	movlw	-35
 16416  010A32  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16417  010A38  0EDE               	movlw	-34
 16418  010A3A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16419  010A40  0EDF               	movlw	-33
 16420  010A42  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16421  010A48                     l11740:
 16422                           
 16423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16424                           ;stkvar	_l @ sp[(-56)+20]
 16425  010A48  0EDC               	movlw	-36
 16426  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16427  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16428  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16429  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16430                           
 16431                           ;stkvar	_g @ sp[(-60)+16]
 16432  010A62  0ED4               	movlw	-44
 16433  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16434  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16435  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16436  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16437  010A7C  EC24  F09D         	call	___fladd	;wreg free
 16438                           
 16439                           ;stkvar	_h @ sp[(-56)+24]
 16440  010A80  0EE0               	movlw	-32
 16441  010A82  0060  F0A3  FFE3   	movff	btemp,plusw1
 16442  010A88  0EE1               	movlw	-31
 16443  010A8A  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16444  010A90  0EE2               	movlw	-30
 16445  010A92  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16446  010A98  0EE3               	movlw	-29
 16447  010A9A  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16448                           
 16449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16450                           ;stkvar	_ou @ sp[(-56)+28]
 16451  010AA0  0EE4               	movlw	-28
 16452  010AA2  006F FF8C  F030    	movff	plusw1,btemp+8
 16453  010AA8  0EE5               	movlw	-27
 16454  010AAA  006F FF8C  F031    	movff	plusw1,btemp+9
 16455  010AB0  0EE6               	movlw	-26
 16456  010AB2  006F FF8C  F032    	movff	plusw1,btemp+10
 16457  010AB8  0EE7               	movlw	-25
 16458  010ABA  006F FF8C  F033    	movff	plusw1,btemp+11
 16459                           
 16460                           ;stkvar	_u @ sp[(-56)+12]
 16461  010AC0  0ED4               	movlw	-44
 16462  010AC2  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16463  010AC8  0ED5               	movlw	-43
 16464  010ACA  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16465  010AD0  0ED6               	movlw	-42
 16466  010AD2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16467  010AD8  0ED7               	movlw	-41
 16468  010ADA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16469                           
 16470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16471                           ;stkvar	_nmode @ sp[(-56)+55]
 16472  010AE0  0EFF               	movlw	-1
 16473  010AE2  006F FF8C  F028    	movff	plusw1,btemp
 16474  010AE8  0E65               	movlw	101
 16475  010AEA  1828               	xorwf	btemp^0,w,c
 16476  010AEC  B4D8               	btfsc	status,2,c
 16477  010AEE  D011               	goto	l11748
 16478                           
 16479                           ;stkvar	_e @ sp[(-56)+34]
 16480                           ;stkvar	_ne @ sp[(-56)+46]
 16481  010AF0  0EEA               	movlw	-22
 16482  010AF2  006F FF8C  F028    	movff	plusw1,btemp
 16483  010AF8  0EF6               	movlw	-10
 16484  010AFA  0060  F0A3  FFE3   	movff	btemp,plusw1
 16485  010B00  0EEB               	movlw	-21
 16486  010B02  006F FF8C  F028    	movff	plusw1,btemp
 16487  010B08  0EF7               	movlw	-9
 16488  010B0A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16489  010B10  D004               	goto	l2210
 16490  010B12                     l11748:
 16491                           
 16492                           ;stkvar	_ne @ sp[(-56)+46]
 16493  010B12  0EF6               	movlw	-10
 16494  010B14  6AE3               	clrf	plusw1,c
 16495  010B16  0EF7               	movlw	-9
 16496  010B18  6AE3               	clrf	plusw1,c
 16497  010B1A                     l2210:
 16498                           
 16499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16500                           ;stkvar	_pp @ sp[(-56)+50]
 16501  010B1A  0EFA               	movlw	-6
 16502  010B1C  6AE3               	clrf	plusw1,c
 16503  010B1E  0EFB               	movlw	-5
 16504  010B20  6AE3               	clrf	plusw1,c
 16505                           
 16506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16507                           ;stkvar	_t @ sp[(-56)+52]
 16508  010B22  0EFC               	movlw	-4
 16509  010B24  6AE3               	clrf	plusw1,c
 16510  010B26  0EFD               	movlw	-3
 16511  010B28  6AE3               	clrf	plusw1,c
 16512                           
 16513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16514                           ;stkvar	_i @ sp[(-56)+36]
 16515  010B2A  0EEC               	movlw	-20
 16516  010B2C  6AE3               	clrf	plusw1,c
 16517  010B2E  0EED               	movlw	-19
 16518  010B30  6AE3               	clrf	plusw1,c
 16519                           
 16520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16521  010B32  D1B7               	goto	l11800
 16522  010B34                     l11750:
 16523                           
 16524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16525                           ;stkvar	_u @ sp[(-56)+12]
 16526  010B34  0ED4               	movlw	-44
 16527  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16528  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16529  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16530  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16531                           
 16532                           ;stkvar	_h @ sp[(-60)+24]
 16533  010B4E  0EDC               	movlw	-36
 16534  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16535  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16536  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16537  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16538  010B68  ECA3  F0A4         	call	___fldiv	;wreg free
 16539  010B6C  0060  F0A3  FFE6   	movff	btemp,postinc1
 16540  010B72  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16541  010B78  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16542  010B7E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16543  010B84  ECA4  F0AF         	call	_floorf	;wreg free
 16544                           
 16545                           ;stkvar	_l @ sp[(-56)+20]
 16546  010B88  0EDC               	movlw	-36
 16547  010B8A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16548  010B90  0EDD               	movlw	-35
 16549  010B92  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16550  010B98  0EDE               	movlw	-34
 16551  010B9A  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16552  010BA0  0EDF               	movlw	-33
 16553  010BA2  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16554                           
 16555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16556                           ;stkvar	_l @ sp[(-56)+20]
 16557  010BA8  0EDC               	movlw	-36
 16558  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16559  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16560  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16561  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16562  010BC2  EC07  F0C2         	call	___fltol	;wreg free
 16563  010BC6  0060  F0A0  F032   	movff	btemp,btemp+10
 16564  010BCC  0060  F0A4  F033   	movff	btemp+1,btemp+11
 16565                           
 16566                           ;stkvar	_d @ sp[(-56)+44]
 16567  010BD2  0EF4               	movlw	-12
 16568  010BD4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16569  010BDA  0EF5               	movlw	-11
 16570  010BDC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16571                           
 16572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16573  010BE2  B84C               	btfsc	_flags^0,4,c
 16574  010BE4  D026               	goto	l11764
 16575                           
 16576                           ;stkvar	_d @ sp[(-56)+44]
 16577  010BE6  0EF4               	movlw	-12
 16578  010BE8  006F FF8C  F028    	movff	plusw1,btemp
 16579  010BEE  0EF5               	movlw	-11
 16580  010BF0  50E3               	movf	plusw1,w,c
 16581  010BF2  1028               	iorwf	btemp^0,w,c
 16582  010BF4  A4D8               	btfss	status,2,c
 16583  010BF6  D01D               	goto	l11764
 16584                           
 16585                           ;stkvar	_mode @ sp[(-56)+54]
 16586  010BF8  0EFE               	movlw	-2
 16587  010BFA  006F FF8C  F028    	movff	plusw1,btemp
 16588  010C00  0E67               	movlw	103
 16589  010C02  1828               	xorwf	btemp^0,w,c
 16590  010C04  A4D8               	btfss	status,2,c
 16591  010C06  D015               	goto	l11764
 16592                           
 16593                           ;stkvar	_ne @ sp[(-56)+46]
 16594  010C08  0EF7               	movlw	-9
 16595  010C0A  AEE3               	btfss	plusw1,7,c
 16596  010C0C  D012               	goto	l11764
 16597                           
 16598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16599                           ;stkvar	_t @ sp[(-56)+52]
 16600  010C0E  0EFC               	movlw	-4
 16601  010C10  50E3               	movf	plusw1,w,c
 16602  010C12  0F01               	addlw	1
 16603  010C14  6E28               	movwf	btemp^0,c
 16604  010C16  0EFC               	movlw	-4
 16605  010C18  0060  F0A3  FFE3   	movff	btemp,plusw1
 16606  010C1E  6A28               	clrf	btemp^0,c
 16607  010C20  0EFD               	movlw	-3
 16608  010C22  50E3               	movf	plusw1,w,c
 16609  010C24  2028               	addwfc	btemp^0,w,c
 16610  010C26  6E28               	movwf	btemp^0,c
 16611  010C28  0EFD               	movlw	-3
 16612  010C2A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16613                           
 16614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16615  010C30  D0AF               	goto	l11792
 16616  010C32                     l11764:
 16617                           
 16618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16619                           ;stkvar	_pp @ sp[(-56)+50]
 16620  010C32  0EFA               	movlw	-6
 16621  010C34  006F FF8C  F028    	movff	plusw1,btemp
 16622  010C3A  0EFB               	movlw	-5
 16623  010C3C  50E3               	movf	plusw1,w,c
 16624  010C3E  1028               	iorwf	btemp^0,w,c
 16625  010C40  A4D8               	btfss	status,2,c
 16626  010C42  D070               	goto	l11784
 16627                           
 16628                           ;stkvar	_ne @ sp[(-56)+46]
 16629  010C44  0EF7               	movlw	-9
 16630  010C46  AEE3               	btfss	plusw1,7,c
 16631  010C48  D06D               	goto	l11784
 16632                           
 16633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16634                           ;stkvar	_n @ sp[(-56)+32]
 16635  010C4A  0EE8               	movlw	-24
 16636  010C4C  006F FF8C  F032    	movff	plusw1,btemp+10
 16637  010C52  0EE9               	movlw	-23
 16638  010C54  006F FF8C  F033    	movff	plusw1,btemp+11
 16639  010C5A  0EAE               	movlw	low _dbuf
 16640  010C5C  2432               	addwf	(btemp+10)^0,w,c
 16641  010C5E  6ED9               	movwf	fsr2l,c
 16642  010C60  0E03               	movlw	high _dbuf
 16643  010C62  2033               	addwfc	(btemp+11)^0,w,c
 16644  010C64  6EDA               	movwf	fsr2h,c
 16645  010C66  0E2E               	movlw	46
 16646  010C68  6EDF               	movwf	indf2,c
 16647                           
 16648                           ;stkvar	_n @ sp[(-56)+32]
 16649  010C6A  0EE8               	movlw	-24
 16650  010C6C  50E3               	movf	plusw1,w,c
 16651  010C6E  0F01               	addlw	1
 16652  010C70  6E28               	movwf	btemp^0,c
 16653  010C72  0EE8               	movlw	-24
 16654  010C74  0060  F0A3  FFE3   	movff	btemp,plusw1
 16655  010C7A  6A28               	clrf	btemp^0,c
 16656  010C7C  0EE9               	movlw	-23
 16657  010C7E  50E3               	movf	plusw1,w,c
 16658  010C80  2028               	addwfc	btemp^0,w,c
 16659  010C82  6E28               	movwf	btemp^0,c
 16660  010C84  0EE9               	movlw	-23
 16661  010C86  0060  F0A3  FFE3   	movff	btemp,plusw1
 16662                           
 16663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16664                           ;stkvar	_w @ sp[(-56)+38]
 16665  010C8C  50E1               	movf	fsr1l,w,c
 16666  010C8E  0FEE               	addlw	-18
 16667  010C90  6ED9               	movwf	fsr2l,c
 16668  010C92  50E2               	movf	fsr1h,w,c
 16669  010C94  6EDA               	movwf	fsr2h,c
 16670  010C96  0EFF               	movlw	255
 16671  010C98  22DA               	addwfc	fsr2h,f,c
 16672  010C9A  06DE               	decf	postinc2,f,c
 16673  010C9C  0E00               	movlw	0
 16674  010C9E  5ADD               	subwfb	postdec2,f,c
 16675                           
 16676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16677  010CA0  0E01               	movlw	1
 16678  010CA2  6E32               	movwf	(btemp+10)^0,c
 16679  010CA4  0E00               	movlw	0
 16680  010CA6  6E33               	movwf	(btemp+11)^0,c
 16681                           
 16682                           ;stkvar	_pp @ sp[(-56)+50]
 16683  010CA8  0EFA               	movlw	-6
 16684  010CAA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16685  010CB0  0EFB               	movlw	-5
 16686  010CB2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16687  010CB8  D035               	goto	l11784
 16688  010CBA                     l11776:
 16689                           
 16690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16691                           ;stkvar	_n @ sp[(-56)+32]
 16692  010CBA  0EE8               	movlw	-24
 16693  010CBC  006F FF8C  F032    	movff	plusw1,btemp+10
 16694  010CC2  0EE9               	movlw	-23
 16695  010CC4  006F FF8C  F033    	movff	plusw1,btemp+11
 16696  010CCA  0EAE               	movlw	low _dbuf
 16697  010CCC  2432               	addwf	(btemp+10)^0,w,c
 16698  010CCE  6ED9               	movwf	fsr2l,c
 16699  010CD0  0E03               	movlw	high _dbuf
 16700  010CD2  2033               	addwfc	(btemp+11)^0,w,c
 16701  010CD4  6EDA               	movwf	fsr2h,c
 16702  010CD6  0E30               	movlw	48
 16703  010CD8  6EDF               	movwf	indf2,c
 16704                           
 16705                           ;stkvar	_n @ sp[(-56)+32]
 16706  010CDA  0EE8               	movlw	-24
 16707  010CDC  50E3               	movf	plusw1,w,c
 16708  010CDE  0F01               	addlw	1
 16709  010CE0  6E28               	movwf	btemp^0,c
 16710  010CE2  0EE8               	movlw	-24
 16711  010CE4  0060  F0A3  FFE3   	movff	btemp,plusw1
 16712  010CEA  6A28               	clrf	btemp^0,c
 16713  010CEC  0EE9               	movlw	-23
 16714  010CEE  50E3               	movf	plusw1,w,c
 16715  010CF0  2028               	addwfc	btemp^0,w,c
 16716  010CF2  6E28               	movwf	btemp^0,c
 16717  010CF4  0EE9               	movlw	-23
 16718  010CF6  0060  F0A3  FFE3   	movff	btemp,plusw1
 16719                           
 16720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16721                           ;stkvar	_w @ sp[(-56)+38]
 16722  010CFC  50E1               	movf	fsr1l,w,c
 16723  010CFE  0FEE               	addlw	-18
 16724  010D00  6ED9               	movwf	fsr2l,c
 16725  010D02  50E2               	movf	fsr1h,w,c
 16726  010D04  6EDA               	movwf	fsr2h,c
 16727  010D06  0EFF               	movlw	255
 16728  010D08  22DA               	addwfc	fsr2h,f,c
 16729  010D0A  06DE               	decf	postinc2,f,c
 16730  010D0C  0E00               	movlw	0
 16731  010D0E  5ADD               	subwfb	postdec2,f,c
 16732                           
 16733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16734                           ;stkvar	_t @ sp[(-56)+52]
 16735  010D10  50E1               	movf	fsr1l,w,c
 16736  010D12  0FFC               	addlw	-4
 16737  010D14  6ED9               	movwf	fsr2l,c
 16738  010D16  50E2               	movf	fsr1h,w,c
 16739  010D18  6EDA               	movwf	fsr2h,c
 16740  010D1A  0EFF               	movlw	255
 16741  010D1C  22DA               	addwfc	fsr2h,f,c
 16742  010D1E  06DE               	decf	postinc2,f,c
 16743  010D20  0E00               	movlw	0
 16744  010D22  5ADD               	subwfb	postdec2,f,c
 16745  010D24                     l11784:
 16746                           
 16747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16748                           ;stkvar	_t @ sp[(-56)+52]
 16749  010D24  0EFC               	movlw	-4
 16750  010D26  006F FF8C  F028    	movff	plusw1,btemp
 16751  010D2C  0EFD               	movlw	-3
 16752  010D2E  50E3               	movf	plusw1,w,c
 16753  010D30  1028               	iorwf	btemp^0,w,c
 16754  010D32  A4D8               	btfss	status,2,c
 16755  010D34  D7C2               	goto	l11776
 16756                           
 16757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16758                           ;stkvar	_n @ sp[(-56)+32]
 16759  010D36  0EE8               	movlw	-24
 16760  010D38  006F FF8C  F032    	movff	plusw1,btemp+10
 16761  010D3E  0EE9               	movlw	-23
 16762  010D40  006F FF8C  F033    	movff	plusw1,btemp+11
 16763  010D46  0EAE               	movlw	low _dbuf
 16764  010D48  2432               	addwf	(btemp+10)^0,w,c
 16765  010D4A  6ED9               	movwf	fsr2l,c
 16766  010D4C  0E03               	movlw	high _dbuf
 16767  010D4E  2033               	addwfc	(btemp+11)^0,w,c
 16768  010D50  6EDA               	movwf	fsr2h,c
 16769                           
 16770                           ;stkvar	_d @ sp[(-56)+44]
 16771  010D52  0EF4               	movlw	-12
 16772  010D54  50E3               	movf	plusw1,w,c
 16773  010D56  0F30               	addlw	48
 16774  010D58  6EDF               	movwf	indf2,c
 16775                           
 16776                           ;stkvar	_n @ sp[(-56)+32]
 16777  010D5A  0EE8               	movlw	-24
 16778  010D5C  50E3               	movf	plusw1,w,c
 16779  010D5E  0F01               	addlw	1
 16780  010D60  6E28               	movwf	btemp^0,c
 16781  010D62  0EE8               	movlw	-24
 16782  010D64  0060  F0A3  FFE3   	movff	btemp,plusw1
 16783  010D6A  6A28               	clrf	btemp^0,c
 16784  010D6C  0EE9               	movlw	-23
 16785  010D6E  50E3               	movf	plusw1,w,c
 16786  010D70  2028               	addwfc	btemp^0,w,c
 16787  010D72  6E28               	movwf	btemp^0,c
 16788  010D74  0EE9               	movlw	-23
 16789  010D76  0060  F0A3  FFE3   	movff	btemp,plusw1
 16790                           
 16791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16792                           ;stkvar	_w @ sp[(-56)+38]
 16793  010D7C  50E1               	movf	fsr1l,w,c
 16794  010D7E  0FEE               	addlw	-18
 16795  010D80  6ED9               	movwf	fsr2l,c
 16796  010D82  50E2               	movf	fsr1h,w,c
 16797  010D84  6EDA               	movwf	fsr2h,c
 16798  010D86  0EFF               	movlw	255
 16799  010D88  22DA               	addwfc	fsr2h,f,c
 16800  010D8A  06DE               	decf	postinc2,f,c
 16801  010D8C  0E00               	movlw	0
 16802  010D8E  5ADD               	subwfb	postdec2,f,c
 16803  010D90                     l11792:
 16804                           
 16805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16806                           ;stkvar	_u @ sp[(-56)+12]
 16807  010D90  0ED4               	movlw	-44
 16808  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16809  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16810  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16811  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16812                           
 16813                           ;stkvar	_l @ sp[(-60)+20]
 16814  010DAA  0ED8               	movlw	-40
 16815  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16816  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16817  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16818  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16819  010DC4  EC0F  F099         	call	___flmul	;wreg free
 16820  010DC8  0060  F0A3  FFE6   	movff	btemp,postinc1
 16821  010DCE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16822  010DD4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16823  010DDA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16824                           
 16825                           ;stkvar	_h @ sp[(-60)+24]
 16826  010DE0  0EDC               	movlw	-36
 16827  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16828  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16829  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16830  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16831  010DFA  EC6D  F0D5         	call	___flsub	;wreg free
 16832                           
 16833                           ;stkvar	_h @ sp[(-56)+24]
 16834  010DFE  0EE0               	movlw	-32
 16835  010E00  0060  F0A3  FFE3   	movff	btemp,plusw1
 16836  010E06  0EE1               	movlw	-31
 16837  010E08  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16838  010E0E  0EE2               	movlw	-30
 16839  010E10  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16840  010E16  0EE3               	movlw	-29
 16841  010E18  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16842                           
 16843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16844  010E1E  0E00               	movlw	0
 16845  010E20  6EE6               	movwf	postinc1,c
 16846  010E22  0E00               	movlw	0
 16847  010E24  6EE6               	movwf	postinc1,c
 16848  010E26  0E20               	movlw	32
 16849  010E28  6EE6               	movwf	postinc1,c
 16850  010E2A  0E41               	movlw	65
 16851  010E2C  6EE6               	movwf	postinc1,c
 16852                           
 16853                           ;stkvar	_u @ sp[(-60)+12]
 16854  010E2E  0ED0               	movlw	-48
 16855  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16856  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16857  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16858  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16859  010E48  ECA3  F0A4         	call	___fldiv	;wreg free
 16860                           
 16861                           ;stkvar	_u @ sp[(-56)+12]
 16862  010E4C  0ED4               	movlw	-44
 16863  010E4E  0060  F0A3  FFE3   	movff	btemp,plusw1
 16864  010E54  0ED5               	movlw	-43
 16865  010E56  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16866  010E5C  0ED6               	movlw	-42
 16867  010E5E  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16868  010E64  0ED7               	movlw	-41
 16869  010E66  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16870                           
 16871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16872                           ;stkvar	_ne @ sp[(-56)+46]
 16873  010E6C  50E1               	movf	fsr1l,w,c
 16874  010E6E  0FF6               	addlw	-10
 16875  010E70  6ED9               	movwf	fsr2l,c
 16876  010E72  50E2               	movf	fsr1h,w,c
 16877  010E74  6EDA               	movwf	fsr2h,c
 16878  010E76  0EFF               	movlw	255
 16879  010E78  22DA               	addwfc	fsr2h,f,c
 16880  010E7A  06DE               	decf	postinc2,f,c
 16881  010E7C  0E00               	movlw	0
 16882  010E7E  5ADD               	subwfb	postdec2,f,c
 16883                           
 16884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16885                           ;stkvar	_i @ sp[(-56)+36]
 16886  010E80  0EEC               	movlw	-20
 16887  010E82  50E3               	movf	plusw1,w,c
 16888  010E84  0F01               	addlw	1
 16889  010E86  6E28               	movwf	btemp^0,c
 16890  010E88  0EEC               	movlw	-20
 16891  010E8A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16892  010E90  6A28               	clrf	btemp^0,c
 16893  010E92  0EED               	movlw	-19
 16894  010E94  50E3               	movf	plusw1,w,c
 16895  010E96  2028               	addwfc	btemp^0,w,c
 16896  010E98  6E28               	movwf	btemp^0,c
 16897  010E9A  0EED               	movlw	-19
 16898  010E9C  0060  F0A3  FFE3   	movff	btemp,plusw1
 16899  010EA2                     l11800:
 16900                           
 16901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16902                           ;stkvar	_m @ sp[(-56)+48]
 16903                           ;stkvar	_i @ sp[(-56)+36]
 16904  010EA2  50E1               	movf	fsr1l,w,c
 16905  010EA4  0FEC               	addlw	-20
 16906  010EA6  6ED9               	movwf	fsr2l,c
 16907  010EA8  50E2               	movf	fsr1h,w,c
 16908  010EAA  6EDA               	movwf	fsr2h,c
 16909  010EAC  0EFF               	movlw	255
 16910  010EAE  22DA               	addwfc	fsr2h,f,c
 16911  010EB0  0EF8               	movlw	-8
 16912  010EB2  50E3               	movf	plusw1,w,c
 16913  010EB4  5CDE               	subwf	postinc2,w,c
 16914  010EB6  50DE               	movf	postinc2,w,c
 16915  010EB8  0A80               	xorlw	128
 16916  010EBA  6E28               	movwf	btemp^0,c
 16917  010EBC  0EF9               	movlw	-7
 16918  010EBE  50E3               	movf	plusw1,w,c
 16919  010EC0  0A80               	xorlw	128
 16920  010EC2  5828               	subwfb	btemp^0,w,c
 16921  010EC4  B0D8               	btfsc	status,0,c
 16922  010EC6  D00E               	goto	u11090
 16923                           
 16924                           ;stkvar	_n @ sp[(-56)+32]
 16925  010EC8  0EE9               	movlw	-23
 16926  010ECA  BEE3               	btfsc	plusw1,7,c
 16927  010ECC  D633               	goto	l11750
 16928  010ECE  0EE9               	movlw	-23
 16929  010ED0  50E3               	movf	plusw1,w,c
 16930  010ED2  E108               	bnz	u11090
 16931  010ED4  0EE8               	movlw	-24
 16932  010ED6  006F FF8C  F028    	movff	plusw1,btemp
 16933  010EDC  0E4B               	movlw	75
 16934  010EDE  5E28               	subwf	btemp^0,f,c
 16935  010EE0  A0D8               	btfss	status,0,c
 16936  010EE2  D628               	goto	l11750
 16937  010EE4                     u11090:
 16938                           
 16939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16940                           ;stkvar	_pp @ sp[(-56)+50]
 16941  010EE4  0EFA               	movlw	-6
 16942  010EE6  006F FF8C  F028    	movff	plusw1,btemp
 16943  010EEC  0EFB               	movlw	-5
 16944  010EEE  50E3               	movf	plusw1,w,c
 16945  010EF0  1028               	iorwf	btemp^0,w,c
 16946  010EF2  B4D8               	btfsc	status,2,c
 16947  010EF4  A84C               	btfss	_flags^0,4,c
 16948  010EF6  D021               	goto	l11812
 16949                           
 16950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16951                           ;stkvar	_n @ sp[(-56)+32]
 16952  010EF8  0EE8               	movlw	-24
 16953  010EFA  006F FF8C  F032    	movff	plusw1,btemp+10
 16954  010F00  0EE9               	movlw	-23
 16955  010F02  006F FF8C  F033    	movff	plusw1,btemp+11
 16956  010F08  0EAE               	movlw	low _dbuf
 16957  010F0A  2432               	addwf	(btemp+10)^0,w,c
 16958  010F0C  6ED9               	movwf	fsr2l,c
 16959  010F0E  0E03               	movlw	high _dbuf
 16960  010F10  2033               	addwfc	(btemp+11)^0,w,c
 16961  010F12  6EDA               	movwf	fsr2h,c
 16962  010F14  0E2E               	movlw	46
 16963  010F16  6EDF               	movwf	indf2,c
 16964                           
 16965                           ;stkvar	_n @ sp[(-56)+32]
 16966  010F18  0EE8               	movlw	-24
 16967  010F1A  50E3               	movf	plusw1,w,c
 16968  010F1C  0F01               	addlw	1
 16969  010F1E  6E28               	movwf	btemp^0,c
 16970  010F20  0EE8               	movlw	-24
 16971  010F22  0060  F0A3  FFE3   	movff	btemp,plusw1
 16972  010F28  6A28               	clrf	btemp^0,c
 16973  010F2A  0EE9               	movlw	-23
 16974  010F2C  50E3               	movf	plusw1,w,c
 16975  010F2E  2028               	addwfc	btemp^0,w,c
 16976  010F30  6E28               	movwf	btemp^0,c
 16977  010F32  0EE9               	movlw	-23
 16978  010F34  0060  F0A3  FFE3   	movff	btemp,plusw1
 16979  010F3A                     l11812:
 16980                           
 16981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16982                           ;stkvar	_n @ sp[(-56)+32]
 16983  010F3A  0EE8               	movlw	-24
 16984  010F3C  006F FF8C  F032    	movff	plusw1,btemp+10
 16985  010F42  0EE9               	movlw	-23
 16986  010F44  006F FF8C  F033    	movff	plusw1,btemp+11
 16987  010F4A  0EAE               	movlw	low _dbuf
 16988  010F4C  2432               	addwf	(btemp+10)^0,w,c
 16989  010F4E  6ED9               	movwf	fsr2l,c
 16990  010F50  0E03               	movlw	high _dbuf
 16991  010F52  2033               	addwfc	(btemp+11)^0,w,c
 16992  010F54  6EDA               	movwf	fsr2h,c
 16993  010F56  0E00               	movlw	0
 16994  010F58  6EDF               	movwf	indf2,c
 16995                           
 16996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 16997                           ;stkvar	_nmode @ sp[(-56)+55]
 16998  010F5A  0EFF               	movlw	-1
 16999  010F5C  006F FF8C  F028    	movff	plusw1,btemp
 17000  010F62  0E65               	movlw	101
 17001  010F64  1828               	xorwf	btemp^0,w,c
 17002  010F66  A4D8               	btfss	status,2,c
 17003  010F68  EF16  F081         	goto	l11616
 17004                           
 17005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17006  010F6C  0E4F               	movlw	79
 17007  010F6E  6E32               	movwf	(btemp+10)^0,c
 17008  010F70  0E00               	movlw	0
 17009  010F72  6E33               	movwf	(btemp+11)^0,c
 17010                           
 17011                           ;stkvar	_i @ sp[(-56)+36]
 17012  010F74  0EEC               	movlw	-20
 17013  010F76  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17014  010F7C  0EED               	movlw	-19
 17015  010F7E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17016                           
 17017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17018                           ;stkvar	_i @ sp[(-56)+36]
 17019  010F84  0EEC               	movlw	-20
 17020  010F86  006F FF8C  F032    	movff	plusw1,btemp+10
 17021  010F8C  0EED               	movlw	-19
 17022  010F8E  006F FF8C  F033    	movff	plusw1,btemp+11
 17023  010F94  0EAE               	movlw	low _dbuf
 17024  010F96  2432               	addwf	(btemp+10)^0,w,c
 17025  010F98  6ED9               	movwf	fsr2l,c
 17026  010F9A  0E03               	movlw	high _dbuf
 17027  010F9C  2033               	addwfc	(btemp+11)^0,w,c
 17028  010F9E  6EDA               	movwf	fsr2h,c
 17029  010FA0  0E00               	movlw	0
 17030  010FA2  6EDF               	movwf	indf2,c
 17031                           
 17032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17033                           ;stkvar	_sign @ sp[(-56)+42]
 17034  010FA4  0EF2               	movlw	-14
 17035  010FA6  6AE3               	clrf	plusw1,c
 17036  010FA8  0EF3               	movlw	-13
 17037  010FAA  6AE3               	clrf	plusw1,c
 17038                           
 17039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17040                           ;stkvar	_e @ sp[(-56)+34]
 17041  010FAC  0EEB               	movlw	-21
 17042  010FAE  AEE3               	btfss	plusw1,7,c
 17043  010FB0  D012               	goto	l11826
 17044                           
 17045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17046  010FB2  0E01               	movlw	1
 17047  010FB4  6E32               	movwf	(btemp+10)^0,c
 17048  010FB6  0E00               	movlw	0
 17049  010FB8  6E33               	movwf	(btemp+11)^0,c
 17050                           
 17051                           ;stkvar	_sign @ sp[(-56)+42]
 17052  010FBA  0EF2               	movlw	-14
 17053  010FBC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17054  010FC2  0EF3               	movlw	-13
 17055  010FC4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17056                           
 17057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17058                           ;stkvar	_e @ sp[(-56)+34]
 17059                           ;stkvar	_e @ sp[(-56)+34]
 17060  010FCA  0EEA               	movlw	-22
 17061  010FCC  6CE3               	negf	plusw1,c
 17062  010FCE  0EEB               	movlw	-21
 17063  010FD0  1EE3               	comf	plusw1,f,c
 17064  010FD2  B0D8               	btfsc	status,0,c
 17065  010FD4  2AE3               	incf	plusw1,f,c
 17066  010FD6                     l11826:
 17067                           
 17068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17069  010FD6  0E02               	movlw	2
 17070  010FD8  6E32               	movwf	(btemp+10)^0,c
 17071  010FDA  0E00               	movlw	0
 17072  010FDC  6E33               	movwf	(btemp+11)^0,c
 17073                           
 17074                           ;stkvar	_p @ sp[(-56)+40]
 17075  010FDE  0EF0               	movlw	-16
 17076  010FE0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17077  010FE6  0EF1               	movlw	-15
 17078  010FE8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17079                           
 17080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17081  010FEE  D051               	goto	l11838
 17082  010FF0                     l11828:
 17083                           
 17084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17085                           ;stkvar	_i @ sp[(-56)+36]
 17086  010FF0  50E1               	movf	fsr1l,w,c
 17087  010FF2  0FEC               	addlw	-20
 17088  010FF4  6ED9               	movwf	fsr2l,c
 17089  010FF6  50E2               	movf	fsr1h,w,c
 17090  010FF8  6EDA               	movwf	fsr2h,c
 17091  010FFA  0EFF               	movlw	255
 17092  010FFC  22DA               	addwfc	fsr2h,f,c
 17093  010FFE  06DE               	decf	postinc2,f,c
 17094  011000  0E00               	movlw	0
 17095  011002  5ADD               	subwfb	postdec2,f,c
 17096                           
 17097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17098                           ;stkvar	_i @ sp[(-56)+36]
 17099  011004  0EEC               	movlw	-20
 17100  011006  006F FF8C  F032    	movff	plusw1,btemp+10
 17101  01100C  0EED               	movlw	-19
 17102  01100E  006F FF8C  F033    	movff	plusw1,btemp+11
 17103  011014  0EAE               	movlw	low _dbuf
 17104  011016  2432               	addwf	(btemp+10)^0,w,c
 17105  011018  6ED9               	movwf	fsr2l,c
 17106  01101A  0E03               	movlw	high _dbuf
 17107  01101C  2033               	addwfc	(btemp+11)^0,w,c
 17108  01101E  6EDA               	movwf	fsr2h,c
 17109  011020  0E0A               	movlw	10
 17110  011022  6EE6               	movwf	postinc1,c
 17111  011024  0E00               	movlw	0
 17112  011026  6EE6               	movwf	postinc1,c
 17113                           
 17114                           ;stkvar	_e @ sp[(-58)+34]
 17115  011028  0EE8               	movlw	-24
 17116  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17117  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17118  011036  ECEB  F0C7         	call	___awmod	;wreg free
 17119  01103A  5028               	movf	btemp^0,w,c
 17120  01103C  0F30               	addlw	48
 17121  01103E  6EDF               	movwf	indf2,c
 17122                           
 17123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17124  011040  0E0A               	movlw	10
 17125  011042  6EE6               	movwf	postinc1,c
 17126  011044  0E00               	movlw	0
 17127  011046  6EE6               	movwf	postinc1,c
 17128                           
 17129                           ;stkvar	_e @ sp[(-58)+34]
 17130  011048  0EE8               	movlw	-24
 17131  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17132  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17133  011056  ECDB  F0C4         	call	___awdiv	;wreg free
 17134                           
 17135                           ;stkvar	_e @ sp[(-56)+34]
 17136  01105A  0EEA               	movlw	-22
 17137  01105C  0060  F0A3  FFE3   	movff	btemp,plusw1
 17138  011062  0EEB               	movlw	-21
 17139  011064  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 17140                           
 17141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17142                           ;stkvar	_p @ sp[(-56)+40]
 17143  01106A  50E1               	movf	fsr1l,w,c
 17144  01106C  0FF0               	addlw	-16
 17145  01106E  6ED9               	movwf	fsr2l,c
 17146  011070  50E2               	movf	fsr1h,w,c
 17147  011072  6EDA               	movwf	fsr2h,c
 17148  011074  0EFF               	movlw	255
 17149  011076  22DA               	addwfc	fsr2h,f,c
 17150  011078  06DE               	decf	postinc2,f,c
 17151  01107A  0E00               	movlw	0
 17152  01107C  5ADD               	subwfb	postdec2,f,c
 17153                           
 17154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17155                           ;stkvar	_w @ sp[(-56)+38]
 17156  01107E  50E1               	movf	fsr1l,w,c
 17157  011080  0FEE               	addlw	-18
 17158  011082  6ED9               	movwf	fsr2l,c
 17159  011084  50E2               	movf	fsr1h,w,c
 17160  011086  6EDA               	movwf	fsr2h,c
 17161  011088  0EFF               	movlw	255
 17162  01108A  22DA               	addwfc	fsr2h,f,c
 17163  01108C  06DE               	decf	postinc2,f,c
 17164  01108E  0E00               	movlw	0
 17165  011090  5ADD               	subwfb	postdec2,f,c
 17166  011092                     l11838:
 17167                           
 17168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17169                           ;stkvar	_e @ sp[(-56)+34]
 17170  011092  0EEA               	movlw	-22
 17171  011094  006F FF8C  F028    	movff	plusw1,btemp
 17172  01109A  0EEB               	movlw	-21
 17173  01109C  50E3               	movf	plusw1,w,c
 17174  01109E  1028               	iorwf	btemp^0,w,c
 17175  0110A0  A4D8               	btfss	status,2,c
 17176  0110A2  D7A6               	goto	l11828
 17177                           
 17178                           ;stkvar	_p @ sp[(-56)+40]
 17179  0110A4  0EF1               	movlw	-15
 17180  0110A6  BEE3               	btfsc	plusw1,7,c
 17181  0110A8  D007               	goto	u11150
 17182  0110AA  0EF1               	movlw	-15
 17183  0110AC  50E3               	movf	plusw1,w,c
 17184  0110AE  E1A0               	bnz	l11828
 17185  0110B0  0EF0               	movlw	-16
 17186  0110B2  04E3               	decf	plusw1,w,c
 17187  0110B4  B0D8               	btfsc	status,0,c
 17188  0110B6  D79C               	goto	l11828
 17189  0110B8                     u11150:
 17190                           
 17191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17192                           ;stkvar	_i @ sp[(-56)+36]
 17193  0110B8  50E1               	movf	fsr1l,w,c
 17194  0110BA  0FEC               	addlw	-20
 17195  0110BC  6ED9               	movwf	fsr2l,c
 17196  0110BE  50E2               	movf	fsr1h,w,c
 17197  0110C0  6EDA               	movwf	fsr2h,c
 17198  0110C2  0EFF               	movlw	255
 17199  0110C4  22DA               	addwfc	fsr2h,f,c
 17200  0110C6  06DE               	decf	postinc2,f,c
 17201  0110C8  0E00               	movlw	0
 17202  0110CA  5ADD               	subwfb	postdec2,f,c
 17203                           
 17204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17205                           ;stkvar	_sign @ sp[(-56)+42]
 17206  0110CC  0EF2               	movlw	-14
 17207  0110CE  006F FF8C  F028    	movff	plusw1,btemp
 17208  0110D4  0EF3               	movlw	-13
 17209  0110D6  50E3               	movf	plusw1,w,c
 17210  0110D8  1028               	iorwf	btemp^0,w,c
 17211  0110DA  A4D8               	btfss	status,2,c
 17212  0110DC  D002               	goto	l11848
 17213  0110DE  0E2B               	movlw	43
 17214  0110E0  D001               	goto	L16
 17215  0110E2                     l11848:
 17216  0110E2  0E2D               	movlw	45
 17217  0110E4                     L16:
 17218  0110E4  6E32               	movwf	(btemp+10)^0,c
 17219  0110E6  0E00               	movlw	0
 17220  0110E8  6E33               	movwf	(btemp+11)^0,c
 17221                           
 17222                           ;stkvar	_efgtoa$5398 @ sp[(-56)+4]
 17223  0110EA  0ECC               	movlw	-52
 17224  0110EC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17225  0110F2  0ECD               	movlw	-51
 17226  0110F4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17227                           
 17228                           ;stkvar	_efgtoa$5398 @ sp[(-56)+4]
 17229                           ;stkvar	_i @ sp[(-56)+36]
 17230  0110FA  0EEC               	movlw	-20
 17231  0110FC  006F FF8C  F032    	movff	plusw1,btemp+10
 17232  011102  0EED               	movlw	-19
 17233  011104  006F FF8C  F033    	movff	plusw1,btemp+11
 17234  01110A  0EAE               	movlw	low _dbuf
 17235  01110C  2432               	addwf	(btemp+10)^0,w,c
 17236  01110E  6ED9               	movwf	fsr2l,c
 17237  011110  0E03               	movlw	high _dbuf
 17238  011112  2033               	addwfc	(btemp+11)^0,w,c
 17239  011114  6EDA               	movwf	fsr2h,c
 17240  011116  0ECC               	movlw	-52
 17241  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17242                           
 17243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17244                           ;stkvar	_w @ sp[(-56)+38]
 17245  01111E  50E1               	movf	fsr1l,w,c
 17246  011120  0FEE               	addlw	-18
 17247  011122  6ED9               	movwf	fsr2l,c
 17248  011124  50E2               	movf	fsr1h,w,c
 17249  011126  6EDA               	movwf	fsr2h,c
 17250  011128  0EFF               	movlw	255
 17251  01112A  22DA               	addwfc	fsr2h,f,c
 17252  01112C  06DE               	decf	postinc2,f,c
 17253  01112E  0E00               	movlw	0
 17254  011130  5ADD               	subwfb	postdec2,f,c
 17255                           
 17256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17257                           ;stkvar	_i @ sp[(-56)+36]
 17258  011132  50E1               	movf	fsr1l,w,c
 17259  011134  0FEC               	addlw	-20
 17260  011136  6ED9               	movwf	fsr2l,c
 17261  011138  50E2               	movf	fsr1h,w,c
 17262  01113A  6EDA               	movwf	fsr2h,c
 17263  01113C  0EFF               	movlw	255
 17264  01113E  22DA               	addwfc	fsr2h,f,c
 17265  011140  06DE               	decf	postinc2,f,c
 17266  011142  0E00               	movlw	0
 17267  011144  5ADD               	subwfb	postdec2,f,c
 17268  011146  0EBF               	movlw	191
 17269  011148  6E32               	movwf	(btemp+10)^0,c
 17270  01114A  0EFF               	movlw	255
 17271  01114C  6E33               	movwf	(btemp+11)^0,c
 17272                           
 17273                           ;stkvar	_c @ sp[(-56)+-7]
 17274  01114E  0EC1               	movlw	-63
 17275  011150  50E3               	movf	plusw1,w,c
 17276  011152  6E30               	movwf	(btemp+8)^0,c
 17277  011154  6A31               	clrf	(btemp+9)^0,c
 17278  011156  5032               	movf	(btemp+10)^0,w,c
 17279  011158  2630               	addwf	(btemp+8)^0,f,c
 17280  01115A  5033               	movf	(btemp+11)^0,w,c
 17281  01115C  2231               	addwfc	(btemp+9)^0,f,c
 17282  01115E  5031               	movf	(btemp+9)^0,w,c
 17283  011160  E106               	bnz	u11170
 17284  011162  0E1A               	movlw	26
 17285  011164  5C30               	subwf	(btemp+8)^0,w,c
 17286  011166  B0D8               	btfsc	status,0,c
 17287  011168  D002               	goto	u11170
 17288  01116A  0E01               	movlw	1
 17289  01116C  D001               	goto	u11180
 17290  01116E                     u11170:
 17291  01116E  0E00               	movlw	0
 17292  011170                     u11180:
 17293  011170  6E32               	movwf	(btemp+10)^0,c
 17294  011172  6A33               	clrf	(btemp+11)^0,c
 17295                           
 17296                           ;stkvar	_efgtoa$5400 @ sp[(-56)+0]
 17297  011174  0EC8               	movlw	-56
 17298  011176  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17299  01117C  0EC9               	movlw	-55
 17300  01117E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17301                           
 17302                           ;stkvar	_efgtoa$5400 @ sp[(-56)+0]
 17303  011184  0EC8               	movlw	-56
 17304  011186  006F FF8C  F028    	movff	plusw1,btemp
 17305  01118C  0EC9               	movlw	-55
 17306  01118E  50E3               	movf	plusw1,w,c
 17307  011190  1028               	iorwf	btemp^0,w,c
 17308  011192  A4D8               	btfss	status,2,c
 17309  011194  D002               	goto	l11864
 17310  011196  0E65               	movlw	101
 17311  011198  D001               	goto	L17
 17312  01119A                     l11864:
 17313  01119A  0E45               	movlw	69
 17314  01119C                     L17:
 17315  01119C  6E32               	movwf	(btemp+10)^0,c
 17316  01119E  0E00               	movlw	0
 17317  0111A0  6E33               	movwf	(btemp+11)^0,c
 17318                           
 17319                           ;stkvar	_efgtoa$5399 @ sp[(-56)+2]
 17320  0111A2  0ECA               	movlw	-54
 17321  0111A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17322  0111AA  0ECB               	movlw	-53
 17323  0111AC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17324                           
 17325                           ;stkvar	_efgtoa$5399 @ sp[(-56)+2]
 17326                           ;stkvar	_i @ sp[(-56)+36]
 17327  0111B2  0EEC               	movlw	-20
 17328  0111B4  006F FF8C  F032    	movff	plusw1,btemp+10
 17329  0111BA  0EED               	movlw	-19
 17330  0111BC  006F FF8C  F033    	movff	plusw1,btemp+11
 17331  0111C2  0EAE               	movlw	low _dbuf
 17332  0111C4  2432               	addwf	(btemp+10)^0,w,c
 17333  0111C6  6ED9               	movwf	fsr2l,c
 17334  0111C8  0E03               	movlw	high _dbuf
 17335  0111CA  2033               	addwfc	(btemp+11)^0,w,c
 17336  0111CC  6EDA               	movwf	fsr2h,c
 17337  0111CE  0ECA               	movlw	-54
 17338  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17339                           
 17340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17341                           ;stkvar	_w @ sp[(-56)+38]
 17342  0111D6  50E1               	movf	fsr1l,w,c
 17343  0111D8  0FEE               	addlw	-18
 17344  0111DA  6ED9               	movwf	fsr2l,c
 17345  0111DC  50E2               	movf	fsr1h,w,c
 17346  0111DE  6EDA               	movwf	fsr2h,c
 17347  0111E0  0EFF               	movlw	255
 17348  0111E2  22DA               	addwfc	fsr2h,f,c
 17349  0111E4  06DE               	decf	postinc2,f,c
 17350  0111E6  0E00               	movlw	0
 17351  0111E8  5ADD               	subwfb	postdec2,f,c
 17352                           
 17353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17354                           ;stkvar	_i @ sp[(-56)+36]
 17355  0111EA  0EEC               	movlw	-20
 17356  0111EC  006F FF8C  F032    	movff	plusw1,btemp+10
 17357  0111F2  0EED               	movlw	-19
 17358  0111F4  006F FF8C  F033    	movff	plusw1,btemp+11
 17359  0111FA  0EAE               	movlw	low _dbuf
 17360  0111FC  2432               	addwf	(btemp+10)^0,w,c
 17361  0111FE  6E30               	movwf	(btemp+8)^0,c
 17362  011200  0E03               	movlw	high _dbuf
 17363  011202  2033               	addwfc	(btemp+11)^0,w,c
 17364  011204  6E31               	movwf	(btemp+9)^0,c
 17365  011206  0060  F0C3  FFE6   	movff	btemp+8,postinc1
 17366  01120C  0060  F0C7  FFE6   	movff	btemp+9,postinc1
 17367                           
 17368                           ;stkvar	_n @ sp[(-58)+32]
 17369  011212  0EAE               	movlw	low _dbuf
 17370  011214  6E32               	movwf	(btemp+10)^0,c
 17371  011216  0E03               	movlw	high _dbuf
 17372  011218  6E33               	movwf	(btemp+11)^0,c
 17373  01121A  0EE6               	movlw	-26
 17374  01121C  50E3               	movf	plusw1,w,c
 17375  01121E  2632               	addwf	(btemp+10)^0,f,c
 17376  011220  0EE7               	movlw	-25
 17377  011222  50E3               	movf	plusw1,w,c
 17378  011224  2233               	addwfc	(btemp+11)^0,f,c
 17379  011226  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 17380  01122C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 17381  011232  EC7A  F0CC         	call	_strcpy	;wreg free
 17382  011236  EF16  F081         	goto	l11616
 17383  01123A                     l2166:
 17384                           
 17385                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17386  01123A  0EC1               	movlw	193
 17387  01123C  26E1               	addwf	fsr1l,f,c
 17388  01123E  0EFF               	movlw	255
 17389  011240  22E2               	addwfc	fsr1h,f,c
 17390  011242  0012               	return		;funcret
 17391  011244                     __end_of_efgtoa:
 17392                           	opt callstack 0
 17393                           
 17394 ;; *************** function _tolower *****************
 17395 ;; Defined at:
 17396 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17397 ;; Parameters:    Size  Location     Type
 17398 ;;  c               2  [STACK] int 
 17399 ;; Auto vars:     Size  Location     Type
 17400 ;;		None
 17401 ;; Return value:  Size  Location     Type
 17402 ;;                  2  [STACK] int 
 17403 ;; Registers used:
 17404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17405 ;; Tracked objects:
 17406 ;;		On entry : 0/0
 17407 ;;		On exit  : 0/0
 17408 ;;		Unchanged: 0/0
 17409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17414 ;;Total ram usage:        0 bytes
 17415 ;; Hardware stack levels used:    1
 17416 ;; Hardware stack levels required when called:   16
 17417 ;; This function calls:
 17418 ;;		_isupper
 17419 ;; This function is called by:
 17420 ;;		_efgtoa
 17421 ;;		_vfpfcnvrt
 17422 ;; This function uses a reentrant model
 17423 ;;
 17424                           
 17425                           	psect	text56
 17426  01A33A                     __ptext56:
 17427                           	opt callstack 0
 17428  01A33A                     _tolower:
 17429                           	opt callstack 0
 17430                           
 17431                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17432  01A33A  52E6               	movf	postinc1,f,c
 17433  01A33C  52E6               	movf	postinc1,f,c
 17434                           
 17435                           ;stkvar	_c @ sp[(-2)+-2]
 17436                           
 17437                           ;incstack = 0
 17438 ;; hardware stack exceeded
 17439  01A33E  0EFC               	movlw	-4
 17440  01A340  50E3               	movf	plusw1,w,c
 17441  01A342  0FBF               	addlw	191
 17442  01A344  6E32               	movwf	(btemp+10)^0,c
 17443  01A346  0EFD               	movlw	-3
 17444  01A348  006F FF8C  F033    	movff	plusw1,btemp+11
 17445  01A34E  0EFF               	movlw	255
 17446  01A350  2233               	addwfc	(btemp+11)^0,f,c
 17447  01A352  5033               	movf	(btemp+11)^0,w,c
 17448  01A354  E106               	bnz	u5850
 17449  01A356  0E1A               	movlw	26
 17450  01A358  5C32               	subwf	(btemp+10)^0,w,c
 17451  01A35A  B0D8               	btfsc	status,0,c
 17452  01A35C  D002               	goto	u5850
 17453  01A35E  0E01               	movlw	1
 17454  01A360  D001               	goto	u5860
 17455  01A362                     u5850:
 17456  01A362  0E00               	movlw	0
 17457  01A364                     u5860:
 17458  01A364  6E32               	movwf	(btemp+10)^0,c
 17459  01A366  6A33               	clrf	(btemp+11)^0,c
 17460                           
 17461                           ;stkvar	_tolower$6219 @ sp[(-2)+0]
 17462  01A368  0EFE               	movlw	-2
 17463  01A36A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17464  01A370  0EFF               	movlw	-1
 17465  01A372  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17466                           
 17467                           ;stkvar	_tolower$6219 @ sp[(-2)+0]
 17468  01A378  0EFE               	movlw	-2
 17469  01A37A  006F FF8C  F028    	movff	plusw1,btemp
 17470  01A380  0EFF               	movlw	-1
 17471  01A382  50E3               	movf	plusw1,w,c
 17472  01A384  1028               	iorwf	btemp^0,w,c
 17473  01A386  B4D8               	btfsc	status,2,c
 17474  01A388  D00D               	goto	l7792
 17475                           
 17476                           ;stkvar	_c @ sp[(-2)+-2]
 17477  01A38A  0EFC               	movlw	-4
 17478  01A38C  006F FF8C  F028    	movff	plusw1,btemp
 17479  01A392  0EFD               	movlw	-3
 17480  01A394  006F FF8C  F029    	movff	plusw1,btemp+1
 17481  01A39A  0E20               	movlw	32
 17482  01A39C  1228               	iorwf	btemp^0,f,c
 17483  01A39E  0E00               	movlw	0
 17484  01A3A0  1229               	iorwf	(btemp+1)^0,f,c
 17485  01A3A2  D008               	goto	l3438
 17486  01A3A4                     l7792:
 17487                           
 17488                           ;stkvar	_c @ sp[(-2)+-2]
 17489  01A3A4  0EFC               	movlw	-4
 17490  01A3A6  006F FF8C  F028    	movff	plusw1,btemp
 17491  01A3AC  0EFD               	movlw	-3
 17492  01A3AE  006F FF8C  F029    	movff	plusw1,btemp+1
 17493  01A3B4                     l3438:
 17494                           
 17495                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17496  01A3B4  52E5               	movf	postdec1,f,c
 17497  01A3B6  52E5               	movf	postdec1,f,c
 17498  01A3B8  52E5               	movf	postdec1,f,c
 17499  01A3BA  52E5               	movf	postdec1,f,c
 17500  01A3BC  0012               	return		;funcret
 17501  01A3BE                     __end_of_tolower:
 17502                           	opt callstack 0
 17503                           
 17504 ;; *************** function _isupper *****************
 17505 ;; Defined at:
 17506 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17507 ;; Parameters:    Size  Location     Type
 17508 ;;  c               2  [STACK] int 
 17509 ;; Auto vars:     Size  Location     Type
 17510 ;;		None
 17511 ;; Return value:  Size  Location     Type
 17512 ;;                  2  [STACK] int 
 17513 ;; Registers used:
 17514 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17515 ;; Tracked objects:
 17516 ;;		On entry : 0/0
 17517 ;;		On exit  : 0/0
 17518 ;;		Unchanged: 0/0
 17519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17524 ;;Total ram usage:        0 bytes
 17525 ;; Hardware stack levels used:    1
 17526 ;; Hardware stack levels required when called:   15
 17527 ;; This function calls:
 17528 ;;		Nothing
 17529 ;; This function is called by:
 17530 ;;		_efgtoa
 17531 ;;		_xtoa
 17532 ;;		_vfpfcnvrt
 17533 ;;		_tolower
 17534 ;; This function uses a reentrant model
 17535 ;;
 17536                           
 17537                           	psect	text57
 17538  01AF82                     __ptext57:
 17539                           	opt callstack 0
 17540  01AF82                     _isupper:
 17541                           	opt callstack 0
 17542                           
 17543                           ;stkvar	_c @ sp[(0)+-2]
 17544                           
 17545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17546                           ;incstack = 0
 17547 ;; hardware stack exceeded
 17548  01AF82  0EFE               	movlw	-2
 17549  01AF84  50E3               	movf	plusw1,w,c
 17550  01AF86  0FBF               	addlw	191
 17551  01AF88  6E32               	movwf	(btemp+10)^0,c
 17552  01AF8A  0EFF               	movlw	-1
 17553  01AF8C  006F FF8C  F033    	movff	plusw1,btemp+11
 17554  01AF92  0EFF               	movlw	255
 17555  01AF94  2233               	addwfc	(btemp+11)^0,f,c
 17556  01AF96  5033               	movf	(btemp+11)^0,w,c
 17557  01AF98  E106               	bnz	u5250
 17558  01AF9A  0E1A               	movlw	26
 17559  01AF9C  5C32               	subwf	(btemp+10)^0,w,c
 17560  01AF9E  B0D8               	btfsc	status,0,c
 17561  01AFA0  D002               	goto	u5250
 17562  01AFA2  0E01               	movlw	1
 17563  01AFA4  D001               	goto	u5260
 17564  01AFA6                     u5250:
 17565  01AFA6  0E00               	movlw	0
 17566  01AFA8                     u5260:
 17567  01AFA8  6E28               	movwf	btemp^0,c
 17568  01AFAA  6A29               	clrf	(btemp+1)^0,c
 17569                           
 17570                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17571  01AFAC  52E5               	movf	postdec1,f,c
 17572  01AFAE  52E5               	movf	postdec1,f,c
 17573  01AFB0  0012               	return		;funcret
 17574  01AFB2                     __end_of_isupper:
 17575                           	opt callstack 0
 17576                           
 17577 ;; *************** function _strcpy *****************
 17578 ;; Defined at:
 17579 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17580 ;; Parameters:    Size  Location     Type
 17581 ;;  dest            2  [STACK] PTR unsigned char 
 17582 ;;		 -> dbuf(80), 
 17583 ;;  src             2  [STACK] PTR const unsigned char 
 17584 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17585 ;;		 -> dbuf(80), 
 17586 ;; Auto vars:     Size  Location     Type
 17587 ;;  d               2  [STACK] PTR unsigned char 
 17588 ;;		 -> dbuf(80), 
 17589 ;;  s               2  [STACK] PTR const unsigned char 
 17590 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17591 ;;		 -> dbuf(80), 
 17592 ;; Return value:  Size  Location     Type
 17593 ;;                  2  [STACK] PTR unsigned char 
 17594 ;; Registers used:
 17595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17596 ;; Tracked objects:
 17597 ;;		On entry : 0/0
 17598 ;;		On exit  : 0/0
 17599 ;;		Unchanged: 0/0
 17600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17605 ;;Total ram usage:        0 bytes
 17606 ;; Hardware stack levels used:    1
 17607 ;; Hardware stack levels required when called:   15
 17608 ;; This function calls:
 17609 ;;		Nothing
 17610 ;; This function is called by:
 17611 ;;		_efgtoa
 17612 ;; This function uses a reentrant model
 17613 ;;
 17614                           
 17615                           	psect	text58
 17616  0198F4                     __ptext58:
 17617                           	opt callstack 0
 17618  0198F4                     _strcpy:
 17619                           	opt callstack 0
 17620                           
 17621                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17622  0198F4  52E6               	movf	postinc1,f,c
 17623  0198F6  52E6               	movf	postinc1,f,c
 17624  0198F8  52E6               	movf	postinc1,f,c
 17625  0198FA  52E6               	movf	postinc1,f,c
 17626                           
 17627                           ;stkvar	_src @ sp[(-4)+-4]
 17628                           
 17629                           ;incstack = 0
 17630 ;; hardware stack exceeded
 17631  0198FC  0EF8               	movlw	-8
 17632  0198FE  006F FF8C  F032    	movff	plusw1,btemp+10
 17633  019904  0EF9               	movlw	-7
 17634  019906  006F FF8C  F033    	movff	plusw1,btemp+11
 17635                           
 17636                           ;stkvar	_s @ sp[(-4)+2]
 17637  01990C  0EFF               	movlw	-1
 17638  01990E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17639  019914  0EFE               	movlw	-2
 17640  019916  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17641                           
 17642                           ;stkvar	_dest @ sp[(-4)+-2]
 17643  01991C  0EFA               	movlw	-6
 17644  01991E  006F FF8C  F032    	movff	plusw1,btemp+10
 17645  019924  0EFB               	movlw	-5
 17646  019926  006F FF8C  F033    	movff	plusw1,btemp+11
 17647                           
 17648                           ;stkvar	_d @ sp[(-4)+0]
 17649  01992C  0EFD               	movlw	-3
 17650  01992E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17651  019934  0EFC               	movlw	-4
 17652  019936  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17653  01993C                     l11448:
 17654                           
 17655                           ;stkvar	_s @ sp[(-4)+2]
 17656  01993C  50E1               	movf	fsr1l,w,c
 17657  01993E  0FFE               	addlw	-2
 17658  019940  6ED9               	movwf	fsr2l,c
 17659  019942  50E2               	movf	fsr1h,w,c
 17660  019944  6EDA               	movwf	fsr2h,c
 17661  019946  0EFF               	movlw	255
 17662  019948  22DA               	addwfc	fsr2h,f,c
 17663  01994A  006F FF7C  F032    	movff	indf2,btemp+10
 17664  019950  0E01               	movlw	1
 17665  019952  26DE               	addwf	postinc2,f,c
 17666  019954  006F FF7C  F033    	movff	indf2,btemp+11
 17667  01995A  0E00               	movlw	0
 17668  01995C  22DD               	addwfc	postdec2,f,c
 17669  01995E  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 17670  019964  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 17671  01996A  0E00               	movlw	low (__mediumconst shr (0+16))
 17672  01996C  6EF8               	movwf	tblptru,c
 17673                           
 17674                           ;stkvar	_d @ sp[(-4)+0]
 17675  01996E  50E1               	movf	fsr1l,w,c
 17676  019970  0FFC               	addlw	-4
 17677  019972  6ED9               	movwf	fsr2l,c
 17678  019974  50E2               	movf	fsr1h,w,c
 17679  019976  6EDA               	movwf	fsr2h,c
 17680  019978  0EFF               	movlw	255
 17681  01997A  22DA               	addwfc	fsr2h,f,c
 17682  01997C  006F FF7C  F032    	movff	indf2,btemp+10
 17683  019982  0E01               	movlw	1
 17684  019984  26DE               	addwf	postinc2,f,c
 17685  019986  006F FF7C  F033    	movff	indf2,btemp+11
 17686  01998C  0E00               	movlw	0
 17687  01998E  22DD               	addwfc	postdec2,f,c
 17688  019990  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 17689  019996  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 17690  01999C  0E1F               	movlw	(high __ramtop+-1)
 17691  01999E  64F7               	cpfsgt	tblptrh,c
 17692  0199A0  D003               	bra	u10437
 17693  0199A2  0008               	tblrd		*
 17694  0199A4  50F5               	movf	tablat,w,c
 17695  0199A6  D007               	bra	u10430
 17696  0199A8                     u10437:
 17697  0199A8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17698  0199AE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17699  0199B4  50EF               	movf	indf0,w,c
 17700  0199B6                     u10430:
 17701  0199B6  6EDF               	movwf	indf2,c
 17702  0199B8  50DF               	movf	indf2,w,c
 17703  0199BA  A4D8               	btfss	status,2,c
 17704  0199BC  D7BF               	goto	l11448
 17705                           
 17706                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17707  0199BE  0EF8               	movlw	248
 17708  0199C0  26E1               	addwf	fsr1l,f,c
 17709  0199C2  0EFF               	movlw	255
 17710  0199C4  22E2               	addwfc	fsr1h,f,c
 17711  0199C6  0012               	return		;funcret
 17712  0199C8                     __end_of_strcpy:
 17713                           	opt callstack 0
 17714                           
 17715 ;; *************** function _floorf *****************
 17716 ;; Defined at:
 17717 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17718 ;; Parameters:    Size  Location     Type
 17719 ;;  x               4  [STACK] float 
 17720 ;; Auto vars:     Size  Location     Type
 17721 ;;  u               4  [STACK] struct .
 17722 ;;  m               4  [STACK] unsigned long 
 17723 ;;  e               2  [STACK] int 
 17724 ;; Return value:  Size  Location     Type
 17725 ;;                  4  [STACK] float 
 17726 ;; Registers used:
 17727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17728 ;; Tracked objects:
 17729 ;;		On entry : 0/0
 17730 ;;		On exit  : 0/0
 17731 ;;		Unchanged: 0/0
 17732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17737 ;;Total ram usage:        0 bytes
 17738 ;; Hardware stack levels used:    1
 17739 ;; Hardware stack levels required when called:   15
 17740 ;; This function calls:
 17741 ;;		Nothing
 17742 ;; This function is called by:
 17743 ;;		_efgtoa
 17744 ;; This function uses a reentrant model
 17745 ;;
 17746                           
 17747                           	psect	text59
 17748  015F48                     __ptext59:
 17749                           	opt callstack 0
 17750  015F48                     _floorf:
 17751                           	opt callstack 0
 17752                           
 17753                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17754  015F48  0E0A               	movlw	10
 17755  015F4A  26E1               	addwf	fsr1l,f,c
 17756  015F4C  0E00               	movlw	0
 17757  015F4E  22E2               	addwfc	fsr1h,f,c
 17758                           
 17759                           ;incstack = 0
 17760 ;; hardware stack exceeded
 17761  015F50  0060  F1E8  F030   	movff	floorf@F524,btemp+8
 17762  015F56  0060  F1EC  F031   	movff	floorf@F524+1,btemp+9
 17763  015F5C  0060  F1F0  F032   	movff	floorf@F524+2,btemp+10
 17764  015F62  0060  F1F4  F033   	movff	floorf@F524+3,btemp+11
 17765                           
 17766                           ;stkvar	_u @ sp[(-10)+0]
 17767  015F68  0EF6               	movlw	-10
 17768  015F6A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 17769  015F70  0EF7               	movlw	-9
 17770  015F72  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 17771  015F78  0EF8               	movlw	-8
 17772  015F7A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17773  015F80  0EF9               	movlw	-7
 17774  015F82  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17775                           
 17776                           ;stkvar	_x @ sp[(-10)+-4]
 17777  015F88  0EF2               	movlw	-14
 17778  015F8A  006F FF8C  F030    	movff	plusw1,btemp+8
 17779  015F90  0EF3               	movlw	-13
 17780  015F92  006F FF8C  F031    	movff	plusw1,btemp+9
 17781  015F98  0EF4               	movlw	-12
 17782  015F9A  006F FF8C  F032    	movff	plusw1,btemp+10
 17783  015FA0  0EF5               	movlw	-11
 17784  015FA2  006F FF8C  F033    	movff	plusw1,btemp+11
 17785                           
 17786                           ;stkvar	_u @ sp[(-10)+0]
 17787  015FA8  0EF6               	movlw	-10
 17788  015FAA  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 17789  015FB0  0EF7               	movlw	-9
 17790  015FB2  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 17791  015FB8  0EF8               	movlw	-8
 17792  015FBA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17793  015FC0  0EF9               	movlw	-7
 17794  015FC2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17795  015FC8  0E81               	movlw	129
 17796  015FCA  6E32               	movwf	(btemp+10)^0,c
 17797  015FCC  0EFF               	movlw	255
 17798  015FCE  6E33               	movwf	(btemp+11)^0,c
 17799                           
 17800                           ;stkvar	_u @ sp[(-10)+0]
 17801  015FD0  0EF6               	movlw	-10
 17802  015FD2  006F FF8C  F02C    	movff	plusw1,btemp+4
 17803  015FD8  0EF7               	movlw	-9
 17804  015FDA  006F FF8C  F02D    	movff	plusw1,btemp+5
 17805  015FE0  0EF8               	movlw	-8
 17806  015FE2  006F FF8C  F02E    	movff	plusw1,btemp+6
 17807  015FE8  0EF9               	movlw	-7
 17808  015FEA  006F FF8C  F02F    	movff	plusw1,btemp+7
 17809  015FF0  0E18               	movlw	24
 17810  015FF2  D005               	goto	u5880
 17811  015FF4                     u5885:
 17812  015FF4  90D8               	bcf	status,0,c
 17813  015FF6  322F               	rrcf	(btemp+7)^0,f,c
 17814  015FF8  322E               	rrcf	(btemp+6)^0,f,c
 17815  015FFA  322D               	rrcf	(btemp+5)^0,f,c
 17816  015FFC  322C               	rrcf	(btemp+4)^0,f,c
 17817  015FFE                     u5880:
 17818  015FFE  2EE8               	decfsz	wreg,f,c
 17819  016000  D7F9               	goto	u5885
 17820  016002  0060  F0B0  F030   	movff	btemp+4,btemp+8
 17821  016008  0060  F0B4  F031   	movff	btemp+5,btemp+9
 17822  01600E  0EFF               	movlw	255
 17823  016010  1630               	andwf	(btemp+8)^0,f,c
 17824  016012  0E00               	movlw	0
 17825  016014  1631               	andwf	(btemp+9)^0,f,c
 17826  016016  5032               	movf	(btemp+10)^0,w,c
 17827  016018  2630               	addwf	(btemp+8)^0,f,c
 17828  01601A  5033               	movf	(btemp+11)^0,w,c
 17829  01601C  2231               	addwfc	(btemp+9)^0,f,c
 17830                           
 17831                           ;stkvar	_e @ sp[(-10)+8]
 17832  01601E  0EFE               	movlw	-2
 17833  016020  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 17834  016026  0EFF               	movlw	-1
 17835  016028  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 17836                           
 17837                           ;stkvar	_e @ sp[(-10)+8]
 17838  01602E  0EFF               	movlw	-1
 17839  016030  BEE3               	btfsc	plusw1,7,c
 17840  016032  D019               	goto	l7806
 17841  016034  0EFF               	movlw	-1
 17842  016036  50E3               	movf	plusw1,w,c
 17843  016038  E108               	bnz	u5890
 17844  01603A  0EFE               	movlw	-2
 17845  01603C  006F FF8C  F028    	movff	plusw1,btemp
 17846  016042  0E17               	movlw	23
 17847  016044  5E28               	subwf	btemp^0,f,c
 17848  016046  A0D8               	btfss	status,0,c
 17849  016048  D00E               	goto	l7806
 17850  01604A                     u5890:
 17851                           
 17852                           ;stkvar	_x @ sp[(-10)+-4]
 17853  01604A  0EF2               	movlw	-14
 17854  01604C  006F FF8C  F028    	movff	plusw1,btemp
 17855  016052  0EF3               	movlw	-13
 17856  016054  006F FF8C  F029    	movff	plusw1,btemp+1
 17857  01605A  0EF4               	movlw	-12
 17858  01605C  006F FF8C  F02A    	movff	plusw1,btemp+2
 17859  016062  0EF5               	movlw	-11
 17860  016064  D11F               	goto	L18
 17861  016066                     l7806:
 17862                           
 17863                           ;stkvar	_e @ sp[(-10)+8]
 17864  016066  0EFF               	movlw	-1
 17865  016068  BEE3               	btfsc	plusw1,7,c
 17866  01606A  D0B4               	goto	l7822
 17867                           
 17868                           ;stkvar	_e @ sp[(-10)+8]
 17869  01606C  0EFE               	movlw	-2
 17870  01606E  006F FF8C  F033    	movff	plusw1,btemp+11
 17871  016074  0EFF               	movlw	255
 17872  016076  6E2C               	movwf	(btemp+4)^0,c
 17873  016078  0EFF               	movlw	255
 17874  01607A  6E2D               	movwf	(btemp+5)^0,c
 17875  01607C  0E7F               	movlw	127
 17876  01607E  6E2E               	movwf	(btemp+6)^0,c
 17877  016080  0E00               	movlw	0
 17878  016082  6E2F               	movwf	(btemp+7)^0,c
 17879  016084                     u5915:
 17880  016084  6633               	tstfsz	(btemp+11)^0,c
 17881  016086  D001               	goto	u5916
 17882  016088  D007               	goto	u5917
 17883  01608A                     u5916:
 17884  01608A  342F               	rlcf	(btemp+7)^0,w,c
 17885  01608C  322F               	rrcf	(btemp+7)^0,f,c
 17886  01608E  322E               	rrcf	(btemp+6)^0,f,c
 17887  016090  322D               	rrcf	(btemp+5)^0,f,c
 17888  016092  322C               	rrcf	(btemp+4)^0,f,c
 17889  016094  2E33               	decfsz	(btemp+11)^0,f,c
 17890  016096  D7F6               	goto	u5915
 17891  016098                     u5917:
 17892                           
 17893                           ;stkvar	_m @ sp[(-10)+4]
 17894  016098  0EFA               	movlw	-6
 17895  01609A  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 17896  0160A0  0EFB               	movlw	-5
 17897  0160A2  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 17898  0160A8  0EFC               	movlw	-4
 17899  0160AA  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 17900  0160B0  0EFD               	movlw	-3
 17901  0160B2  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 17902                           
 17903                           ;stkvar	_m @ sp[(-10)+4]
 17904                           ;stkvar	_u @ sp[(-10)+0]
 17905  0160B8  0EF6               	movlw	-10
 17906  0160BA  006F FF8C  F030    	movff	plusw1,btemp+8
 17907  0160C0  0EF7               	movlw	-9
 17908  0160C2  006F FF8C  F031    	movff	plusw1,btemp+9
 17909  0160C8  0EF8               	movlw	-8
 17910  0160CA  006F FF8C  F032    	movff	plusw1,btemp+10
 17911  0160D0  0EF9               	movlw	-7
 17912  0160D2  006F FF8C  F033    	movff	plusw1,btemp+11
 17913  0160D8  0EFA               	movlw	-6
 17914  0160DA  50E3               	movf	plusw1,w,c
 17915  0160DC  1630               	andwf	(btemp+8)^0,f,c
 17916  0160DE  0EFB               	movlw	-5
 17917  0160E0  50E3               	movf	plusw1,w,c
 17918  0160E2  1631               	andwf	(btemp+9)^0,f,c
 17919  0160E4  0EFC               	movlw	-4
 17920  0160E6  50E3               	movf	plusw1,w,c
 17921  0160E8  1632               	andwf	(btemp+10)^0,f,c
 17922  0160EA  0EFD               	movlw	-3
 17923  0160EC  50E3               	movf	plusw1,w,c
 17924  0160EE  1633               	andwf	(btemp+11)^0,f,c
 17925  0160F0  5030               	movf	(btemp+8)^0,w,c
 17926  0160F2  1031               	iorwf	(btemp+9)^0,w,c
 17927  0160F4  1032               	iorwf	(btemp+10)^0,w,c
 17928  0160F6  1033               	iorwf	(btemp+11)^0,w,c
 17929  0160F8  B4D8               	btfsc	status,2,c
 17930  0160FA  D7A7               	goto	u5890
 17931                           
 17932                           ;stkvar	_u @ sp[(-10)+0]
 17933  0160FC  0EF6               	movlw	-10
 17934  0160FE  006F FF8C  F030    	movff	plusw1,btemp+8
 17935  016104  0EF7               	movlw	-9
 17936  016106  006F FF8C  F031    	movff	plusw1,btemp+9
 17937  01610C  0EF8               	movlw	-8
 17938  01610E  006F FF8C  F032    	movff	plusw1,btemp+10
 17939  016114  0EF9               	movlw	-7
 17940  016116  006F FF8C  F033    	movff	plusw1,btemp+11
 17941  01611C  0E20               	movlw	32
 17942  01611E  D005               	goto	u5930
 17943  016120                     u5935:
 17944  016120  90D8               	bcf	status,0,c
 17945  016122  3233               	rrcf	(btemp+11)^0,f,c
 17946  016124  3232               	rrcf	(btemp+10)^0,f,c
 17947  016126  3231               	rrcf	(btemp+9)^0,f,c
 17948  016128  3230               	rrcf	(btemp+8)^0,f,c
 17949  01612A                     u5930:
 17950  01612A  2EE8               	decfsz	wreg,f,c
 17951  01612C  D7F9               	goto	u5935
 17952  01612E  5030               	movf	(btemp+8)^0,w,c
 17953  016130  B4D8               	btfsc	status,2,c
 17954  016132  D028               	goto	l7820
 17955                           
 17956                           ;stkvar	_m @ sp[(-10)+4]
 17957                           ;stkvar	_u @ sp[(-10)+0]
 17958  016134  0EF6               	movlw	-10
 17959  016136  50E3               	movf	plusw1,w,c
 17960  016138  6E28               	movwf	btemp^0,c
 17961  01613A  0EFA               	movlw	-6
 17962  01613C  50E3               	movf	plusw1,w,c
 17963  01613E  2628               	addwf	btemp^0,f,c
 17964  016140  0EF6               	movlw	-10
 17965  016142  0060  F0A3  FFE3   	movff	btemp,plusw1
 17966  016148  0EF7               	movlw	-9
 17967  01614A  50E3               	movf	plusw1,w,c
 17968  01614C  6E28               	movwf	btemp^0,c
 17969  01614E  0EFB               	movlw	-5
 17970  016150  50E3               	movf	plusw1,w,c
 17971  016152  2228               	addwfc	btemp^0,f,c
 17972  016154  0EF7               	movlw	-9
 17973  016156  0060  F0A3  FFE3   	movff	btemp,plusw1
 17974  01615C  0EF8               	movlw	-8
 17975  01615E  50E3               	movf	plusw1,w,c
 17976  016160  6E28               	movwf	btemp^0,c
 17977  016162  0EFC               	movlw	-4
 17978  016164  50E3               	movf	plusw1,w,c
 17979  016166  2228               	addwfc	btemp^0,f,c
 17980  016168  0EF8               	movlw	-8
 17981  01616A  0060  F0A3  FFE3   	movff	btemp,plusw1
 17982  016170  0EF9               	movlw	-7
 17983  016172  50E3               	movf	plusw1,w,c
 17984  016174  6E28               	movwf	btemp^0,c
 17985  016176  0EFD               	movlw	-3
 17986  016178  50E3               	movf	plusw1,w,c
 17987  01617A  2228               	addwfc	btemp^0,f,c
 17988  01617C  0EF9               	movlw	-7
 17989  01617E  0060  F0A3  FFE3   	movff	btemp,plusw1
 17990  016184                     l7820:
 17991                           
 17992                           ;stkvar	_m @ sp[(-10)+4]
 17993  016184  0EFA               	movlw	-6
 17994  016186  006F FF8C  F030    	movff	plusw1,btemp+8
 17995  01618C  0EFB               	movlw	-5
 17996  01618E  006F FF8C  F031    	movff	plusw1,btemp+9
 17997  016194  0EFC               	movlw	-4
 17998  016196  006F FF8C  F032    	movff	plusw1,btemp+10
 17999  01619C  0EFD               	movlw	-3
 18000  01619E  006F FF8C  F033    	movff	plusw1,btemp+11
 18001  0161A4  1C30               	comf	(btemp+8)^0,w,c
 18002  0161A6  6E2C               	movwf	(btemp+4)^0,c
 18003  0161A8  1C31               	comf	(btemp+9)^0,w,c
 18004  0161AA  6E2D               	movwf	(btemp+5)^0,c
 18005  0161AC  1C32               	comf	(btemp+10)^0,w,c
 18006  0161AE  6E2E               	movwf	(btemp+6)^0,c
 18007  0161B0  1C33               	comf	(btemp+11)^0,w,c
 18008  0161B2  6E2F               	movwf	(btemp+7)^0,c
 18009                           
 18010                           ;stkvar	_u @ sp[(-10)+0]
 18011  0161B4  50E1               	movf	fsr1l,w,c
 18012  0161B6  0FF6               	addlw	-10
 18013  0161B8  6ED9               	movwf	fsr2l,c
 18014  0161BA  50E2               	movf	fsr1h,w,c
 18015  0161BC  6EDA               	movwf	fsr2h,c
 18016  0161BE  0EFF               	movlw	255
 18017  0161C0  22DA               	addwfc	fsr2h,f,c
 18018  0161C2  502C               	movf	(btemp+4)^0,w,c
 18019  0161C4  16DE               	andwf	postinc2,f,c
 18020  0161C6  502D               	movf	(btemp+5)^0,w,c
 18021  0161C8  16DE               	andwf	postinc2,f,c
 18022  0161CA  502E               	movf	(btemp+6)^0,w,c
 18023  0161CC  16DE               	andwf	postinc2,f,c
 18024  0161CE  502F               	movf	(btemp+7)^0,w,c
 18025  0161D0  16DE               	andwf	postinc2,f,c
 18026  0161D2  D05B               	goto	l7830
 18027  0161D4                     l7822:
 18028                           
 18029                           ;stkvar	_u @ sp[(-10)+0]
 18030  0161D4  0EF6               	movlw	-10
 18031  0161D6  006F FF8C  F030    	movff	plusw1,btemp+8
 18032  0161DC  0EF7               	movlw	-9
 18033  0161DE  006F FF8C  F031    	movff	plusw1,btemp+9
 18034  0161E4  0EF8               	movlw	-8
 18035  0161E6  006F FF8C  F032    	movff	plusw1,btemp+10
 18036  0161EC  0EF9               	movlw	-7
 18037  0161EE  006F FF8C  F033    	movff	plusw1,btemp+11
 18038  0161F4  0E20               	movlw	32
 18039  0161F6  D005               	goto	u5950
 18040  0161F8                     u5955:
 18041  0161F8  90D8               	bcf	status,0,c
 18042  0161FA  3233               	rrcf	(btemp+11)^0,f,c
 18043  0161FC  3232               	rrcf	(btemp+10)^0,f,c
 18044  0161FE  3231               	rrcf	(btemp+9)^0,f,c
 18045  016200  3230               	rrcf	(btemp+8)^0,f,c
 18046  016202                     u5950:
 18047  016202  2EE8               	decfsz	wreg,f,c
 18048  016204  D7F9               	goto	u5955
 18049  016206  6630               	tstfsz	(btemp+8)^0,c
 18050  016208  D009               	goto	l7826
 18051                           
 18052                           ;stkvar	_u @ sp[(-10)+0]
 18053  01620A  0EF6               	movlw	-10
 18054  01620C  6AE3               	clrf	plusw1,c
 18055  01620E  0EF7               	movlw	-9
 18056  016210  6AE3               	clrf	plusw1,c
 18057  016212  0EF8               	movlw	-8
 18058  016214  6AE3               	clrf	plusw1,c
 18059  016216  0EF9               	movlw	-7
 18060  016218  6AE3               	clrf	plusw1,c
 18061  01621A  D037               	goto	l7830
 18062  01621C                     l7826:
 18063                           
 18064                           ;stkvar	_u @ sp[(-10)+0]
 18065  01621C  0EF6               	movlw	-10
 18066  01621E  006F FF8C  F030    	movff	plusw1,btemp+8
 18067  016224  0EF7               	movlw	-9
 18068  016226  006F FF8C  F031    	movff	plusw1,btemp+9
 18069  01622C  0EF8               	movlw	-8
 18070  01622E  006F FF8C  F032    	movff	plusw1,btemp+10
 18071  016234  0EF9               	movlw	-7
 18072  016236  006F FF8C  F033    	movff	plusw1,btemp+11
 18073  01623C  90D8               	bcf	status,0,c
 18074  01623E  3430               	rlcf	(btemp+8)^0,w,c
 18075  016240  6E2C               	movwf	(btemp+4)^0,c
 18076  016242  3431               	rlcf	(btemp+9)^0,w,c
 18077  016244  6E2D               	movwf	(btemp+5)^0,c
 18078  016246  3432               	rlcf	(btemp+10)^0,w,c
 18079  016248  6E2E               	movwf	(btemp+6)^0,c
 18080  01624A  3433               	rlcf	(btemp+11)^0,w,c
 18081  01624C  6E2F               	movwf	(btemp+7)^0,c
 18082  01624E  502C               	movf	(btemp+4)^0,w,c
 18083  016250  102D               	iorwf	(btemp+5)^0,w,c
 18084  016252  102E               	iorwf	(btemp+6)^0,w,c
 18085  016254  102F               	iorwf	(btemp+7)^0,w,c
 18086  016256  B4D8               	btfsc	status,2,c
 18087  016258  D018               	goto	l7830
 18088  01625A  0E00               	movlw	0
 18089  01625C  6E30               	movwf	(btemp+8)^0,c
 18090  01625E  0E00               	movlw	0
 18091  016260  6E31               	movwf	(btemp+9)^0,c
 18092  016262  0E80               	movlw	128
 18093  016264  6E32               	movwf	(btemp+10)^0,c
 18094  016266  0EBF               	movlw	191
 18095  016268  6E33               	movwf	(btemp+11)^0,c
 18096                           
 18097                           ;stkvar	_u @ sp[(-10)+0]
 18098  01626A  0EF6               	movlw	-10
 18099  01626C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18100  016272  0EF7               	movlw	-9
 18101  016274  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 18102  01627A  0EF8               	movlw	-8
 18103  01627C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 18104  016282  0EF9               	movlw	-7
 18105  016284  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 18106  01628A                     l7830:
 18107                           
 18108                           ;stkvar	_u @ sp[(-10)+0]
 18109  01628A  0EF6               	movlw	-10
 18110  01628C  006F FF8C  F028    	movff	plusw1,btemp
 18111  016292  0EF7               	movlw	-9
 18112  016294  006F FF8C  F029    	movff	plusw1,btemp+1
 18113  01629A  0EF8               	movlw	-8
 18114  01629C  006F FF8C  F02A    	movff	plusw1,btemp+2
 18115  0162A2  0EF9               	movlw	-7
 18116  0162A4                     L18:
 18117  0162A4  006F FF8C  F02B    	movff	plusw1,btemp+3
 18118                           
 18119                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18120  0162AA  0EF2               	movlw	242
 18121  0162AC  26E1               	addwf	fsr1l,f,c
 18122  0162AE  0EFF               	movlw	255
 18123  0162B0  22E2               	addwfc	fsr1h,f,c
 18124  0162B2  0012               	return		;funcret
 18125  0162B4                     __end_of_floorf:
 18126                           	opt callstack 0
 18127                           
 18128 ;; *************** function ___fpclassifyf *****************
 18129 ;; Defined at:
 18130 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18131 ;; Parameters:    Size  Location     Type
 18132 ;;  x               4  [STACK] float 
 18133 ;; Auto vars:     Size  Location     Type
 18134 ;;  u               4  [STACK] struct .
 18135 ;;  e               2  [STACK] int 
 18136 ;; Return value:  Size  Location     Type
 18137 ;;                  2  [STACK] int 
 18138 ;; Registers used:
 18139 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18140 ;; Tracked objects:
 18141 ;;		On entry : 0/0
 18142 ;;		On exit  : 0/0
 18143 ;;		Unchanged: 0/0
 18144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18149 ;;Total ram usage:        0 bytes
 18150 ;; Hardware stack levels used:    1
 18151 ;; Hardware stack levels required when called:   15
 18152 ;; This function calls:
 18153 ;;		Nothing
 18154 ;; This function is called by:
 18155 ;;		_efgtoa
 18156 ;; This function uses a reentrant model
 18157 ;;
 18158                           
 18159                           	psect	text60
 18160  017F84                     __ptext60:
 18161                           	opt callstack 0
 18162  017F84                     ___fpclassifyf:
 18163                           	opt callstack 0
 18164                           
 18165                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18166  017F84  0E06               	movlw	6
 18167  017F86  26E1               	addwf	fsr1l,f,c
 18168  017F88  0E00               	movlw	0
 18169  017F8A  22E2               	addwfc	fsr1h,f,c
 18170                           
 18171                           ;incstack = 0
 18172 ;; hardware stack exceeded
 18173  017F8C  0060  F208  F030   	movff	___fpclassifyf@F463,btemp+8
 18174  017F92  0060  F20C  F031   	movff	___fpclassifyf@F463+1,btemp+9
 18175  017F98  0060  F210  F032   	movff	___fpclassifyf@F463+2,btemp+10
 18176  017F9E  0060  F214  F033   	movff	___fpclassifyf@F463+3,btemp+11
 18177                           
 18178                           ;stkvar	_u @ sp[(-6)+0]
 18179  017FA4  0EFA               	movlw	-6
 18180  017FA6  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18181  017FAC  0EFB               	movlw	-5
 18182  017FAE  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 18183  017FB4  0EFC               	movlw	-4
 18184  017FB6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 18185  017FBC  0EFD               	movlw	-3
 18186  017FBE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 18187                           
 18188                           ;stkvar	_x @ sp[(-6)+-4]
 18189  017FC4  0EF6               	movlw	-10
 18190  017FC6  006F FF8C  F030    	movff	plusw1,btemp+8
 18191  017FCC  0EF7               	movlw	-9
 18192  017FCE  006F FF8C  F031    	movff	plusw1,btemp+9
 18193  017FD4  0EF8               	movlw	-8
 18194  017FD6  006F FF8C  F032    	movff	plusw1,btemp+10
 18195  017FDC  0EF9               	movlw	-7
 18196  017FDE  006F FF8C  F033    	movff	plusw1,btemp+11
 18197                           
 18198                           ;stkvar	_u @ sp[(-6)+0]
 18199  017FE4  0EFA               	movlw	-6
 18200  017FE6  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18201  017FEC  0EFB               	movlw	-5
 18202  017FEE  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 18203  017FF4  0EFC               	movlw	-4
 18204  017FF6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 18205  017FFC  0EFD               	movlw	-3
 18206  017FFE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 18207                           
 18208                           ;stkvar	_u @ sp[(-6)+0]
 18209  018004  0EFA               	movlw	-6
 18210  018006  006F FF8C  F030    	movff	plusw1,btemp+8
 18211  01800C  0EFB               	movlw	-5
 18212  01800E  006F FF8C  F031    	movff	plusw1,btemp+9
 18213  018014  0EFC               	movlw	-4
 18214  018016  006F FF8C  F032    	movff	plusw1,btemp+10
 18215  01801C  0EFD               	movlw	-3
 18216  01801E  006F FF8C  F033    	movff	plusw1,btemp+11
 18217  018024  0E18               	movlw	24
 18218  018026  D005               	goto	u5760
 18219  018028                     u5765:
 18220  018028  90D8               	bcf	status,0,c
 18221  01802A  3233               	rrcf	(btemp+11)^0,f,c
 18222  01802C  3232               	rrcf	(btemp+10)^0,f,c
 18223  01802E  3231               	rrcf	(btemp+9)^0,f,c
 18224  018030  3230               	rrcf	(btemp+8)^0,f,c
 18225  018032                     u5760:
 18226  018032  2EE8               	decfsz	wreg,f,c
 18227  018034  D7F9               	goto	u5765
 18228  018036  0060  F0C0  F02E   	movff	btemp+8,btemp+6
 18229  01803C  0060  F0C4  F02F   	movff	btemp+9,btemp+7
 18230  018042  0EFF               	movlw	255
 18231  018044  162E               	andwf	(btemp+6)^0,f,c
 18232  018046  0E00               	movlw	0
 18233  018048  162F               	andwf	(btemp+7)^0,f,c
 18234                           
 18235                           ;stkvar	_e @ sp[(-6)+4]
 18236  01804A  0EFE               	movlw	-2
 18237  01804C  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 18238  018052  0EFF               	movlw	-1
 18239  018054  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 18240                           
 18241                           ;stkvar	_e @ sp[(-6)+4]
 18242  01805A  0EFE               	movlw	-2
 18243  01805C  006F FF8C  F028    	movff	plusw1,btemp
 18244  018062  0EFF               	movlw	-1
 18245  018064  50E3               	movf	plusw1,w,c
 18246  018066  1028               	iorwf	btemp^0,w,c
 18247  018068  A4D8               	btfss	status,2,c
 18248  01806A  D023               	goto	l7768
 18249                           
 18250                           ;stkvar	_u @ sp[(-6)+0]
 18251  01806C  0EFA               	movlw	-6
 18252  01806E  006F FF8C  F030    	movff	plusw1,btemp+8
 18253  018074  0EFB               	movlw	-5
 18254  018076  006F FF8C  F031    	movff	plusw1,btemp+9
 18255  01807C  0EFC               	movlw	-4
 18256  01807E  006F FF8C  F032    	movff	plusw1,btemp+10
 18257  018084  0EFD               	movlw	-3
 18258  018086  006F FF8C  F033    	movff	plusw1,btemp+11
 18259  01808C  90D8               	bcf	status,0,c
 18260  01808E  3430               	rlcf	(btemp+8)^0,w,c
 18261  018090  6E2C               	movwf	(btemp+4)^0,c
 18262  018092  3431               	rlcf	(btemp+9)^0,w,c
 18263  018094  6E2D               	movwf	(btemp+5)^0,c
 18264  018096  3432               	rlcf	(btemp+10)^0,w,c
 18265  018098  6E2E               	movwf	(btemp+6)^0,c
 18266  01809A  3433               	rlcf	(btemp+11)^0,w,c
 18267  01809C  6E2F               	movwf	(btemp+7)^0,c
 18268  01809E  502C               	movf	(btemp+4)^0,w,c
 18269  0180A0  102D               	iorwf	(btemp+5)^0,w,c
 18270  0180A2  102E               	iorwf	(btemp+6)^0,w,c
 18271  0180A4  102F               	iorwf	(btemp+7)^0,w,c
 18272  0180A6  A4D8               	btfss	status,2,c
 18273  0180A8  D002               	goto	l7764
 18274  0180AA  0E02               	movlw	2
 18275  0180AC  D02E               	goto	L19
 18276  0180AE                     l7764:
 18277  0180AE  0E03               	movlw	3
 18278  0180B0  D02C               	goto	L19
 18279  0180B2                     l7768:
 18280                           
 18281                           ;stkvar	_e @ sp[(-6)+4]
 18282  0180B2  0EFE               	movlw	-2
 18283  0180B4  28E3               	incf	plusw1,w,c
 18284  0180B6  E128               	bnz	l7774
 18285  0180B8  0EFF               	movlw	-1
 18286  0180BA  50E3               	movf	plusw1,w,c
 18287  0180BC  A4D8               	btfss	status,2,c
 18288  0180BE  D024               	goto	l7774
 18289                           
 18290                           ;stkvar	_u @ sp[(-6)+0]
 18291  0180C0  0EFA               	movlw	-6
 18292  0180C2  006F FF8C  F030    	movff	plusw1,btemp+8
 18293  0180C8  0EFB               	movlw	-5
 18294  0180CA  006F FF8C  F031    	movff	plusw1,btemp+9
 18295  0180D0  0EFC               	movlw	-4
 18296  0180D2  006F FF8C  F032    	movff	plusw1,btemp+10
 18297  0180D8  0EFD               	movlw	-3
 18298  0180DA  006F FF8C  F033    	movff	plusw1,btemp+11
 18299  0180E0  0E09               	movlw	9
 18300  0180E2                     u5805:
 18301  0180E2  90D8               	bcf	status,0,c
 18302  0180E4  3630               	rlcf	(btemp+8)^0,f,c
 18303  0180E6  3631               	rlcf	(btemp+9)^0,f,c
 18304  0180E8  3632               	rlcf	(btemp+10)^0,f,c
 18305  0180EA  3633               	rlcf	(btemp+11)^0,f,c
 18306  0180EC  2EE8               	decfsz	wreg,f,c
 18307  0180EE  D7F9               	goto	u5805
 18308  0180F0  5030               	movf	(btemp+8)^0,w,c
 18309  0180F2  1031               	iorwf	(btemp+9)^0,w,c
 18310  0180F4  1032               	iorwf	(btemp+10)^0,w,c
 18311  0180F6  1033               	iorwf	(btemp+11)^0,w,c
 18312  0180F8  A4D8               	btfss	status,2,c
 18313  0180FA  D002               	goto	u5810
 18314  0180FC  0E01               	movlw	1
 18315  0180FE  D001               	goto	u5820
 18316  018100                     u5810:
 18317  018100  0E00               	movlw	0
 18318  018102                     u5820:
 18319  018102  6E28               	movwf	btemp^0,c
 18320  018104  6A29               	clrf	(btemp+1)^0,c
 18321  018106  D004               	goto	l3048
 18322  018108                     l7774:
 18323  018108  0E04               	movlw	4
 18324  01810A                     L19:
 18325  01810A  6E28               	movwf	btemp^0,c
 18326  01810C  0E00               	movlw	0
 18327  01810E  6E29               	movwf	(btemp+1)^0,c
 18328  018110                     l3048:
 18329                           
 18330                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18331  018110  0EF6               	movlw	246
 18332  018112  26E1               	addwf	fsr1l,f,c
 18333  018114  0EFF               	movlw	255
 18334  018116  22E2               	addwfc	fsr1h,f,c
 18335  018118  0012               	return		;funcret
 18336  01811A                     __end_of___fpclassifyf:
 18337                           	opt callstack 0
 18338                           
 18339 ;; *************** function ___fltol *****************
 18340 ;; Defined at:
 18341 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18342 ;; Parameters:    Size  Location     Type
 18343 ;;  f1              4  [STACK] int 
 18344 ;; Auto vars:     Size  Location     Type
 18345 ;;  exp1            1  [STACK] unsigned char 
 18346 ;;  sign1           1  [STACK] unsigned char 
 18347 ;; Return value:  Size  Location     Type
 18348 ;;                  4  [STACK] long 
 18349 ;; Registers used:
 18350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18351 ;; Tracked objects:
 18352 ;;		On entry : 0/0
 18353 ;;		On exit  : 0/0
 18354 ;;		Unchanged: 0/0
 18355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18360 ;;Total ram usage:        0 bytes
 18361 ;; Hardware stack levels used:    1
 18362 ;; Hardware stack levels required when called:   15
 18363 ;; This function calls:
 18364 ;;		Nothing
 18365 ;; This function is called by:
 18366 ;;		_main
 18367 ;;		_calc_bsoc
 18368 ;;		_init_bsoc
 18369 ;;		_efgtoa
 18370 ;; This function uses a reentrant model
 18371 ;;
 18372                           
 18373                           	psect	text61
 18374  01840E                     __ptext61:
 18375                           	opt callstack 0
 18376  01840E                     ___fltol:
 18377                           	opt callstack 0
 18378                           
 18379                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18380  01840E  52E6               	movf	postinc1,f,c
 18381  018410  52E6               	movf	postinc1,f,c
 18382                           
 18383                           ;stkvar	_f1 @ sp[(-2)+-4]
 18384                           
 18385                           ;incstack = 0
 18386 ;; hardware stack exceeded
 18387  018412  0EFA               	movlw	-6
 18388  018414  006F FF8C  F030    	movff	plusw1,btemp+8
 18389  01841A  0EFB               	movlw	-5
 18390  01841C  006F FF8C  F031    	movff	plusw1,btemp+9
 18391  018422  0EFC               	movlw	-4
 18392  018424  006F FF8C  F032    	movff	plusw1,btemp+10
 18393  01842A  0EFD               	movlw	-3
 18394  01842C  006F FF8C  F033    	movff	plusw1,btemp+11
 18395  018432  0E18               	movlw	24
 18396  018434  D005               	goto	u6970
 18397  018436                     u6975:
 18398  018436  90D8               	bcf	status,0,c
 18399  018438  3233               	rrcf	(btemp+11)^0,f,c
 18400  01843A  3232               	rrcf	(btemp+10)^0,f,c
 18401  01843C  3231               	rrcf	(btemp+9)^0,f,c
 18402  01843E  3230               	rrcf	(btemp+8)^0,f,c
 18403  018440                     u6970:
 18404  018440  2EE8               	decfsz	wreg,f,c
 18405  018442  D7F9               	goto	u6975
 18406                           
 18407                           ;stkvar	_exp1 @ sp[(-2)+0]
 18408  018444  0EFE               	movlw	-2
 18409  018446  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18410  01844C  0EFE               	movlw	-2
 18411  01844E  50E3               	movf	plusw1,w,c
 18412  018450  A4D8               	btfss	status,2,c
 18413  018452  D006               	goto	l8394
 18414  018454                     u6980:
 18415  018454  0E00               	movlw	0
 18416  018456  6E28               	movwf	btemp^0,c
 18417  018458  6A29               	clrf	(btemp+1)^0,c
 18418  01845A  6A2A               	clrf	(btemp+2)^0,c
 18419  01845C  6A2B               	clrf	(btemp+3)^0,c
 18420  01845E  D08B               	goto	l2664
 18421  018460                     l8394:
 18422                           
 18423                           ;stkvar	_f1 @ sp[(-2)+-4]
 18424  018460  0EFA               	movlw	-6
 18425  018462  006F FF8C  F030    	movff	plusw1,btemp+8
 18426  018468  0EFB               	movlw	-5
 18427  01846A  006F FF8C  F031    	movff	plusw1,btemp+9
 18428  018470  0EFC               	movlw	-4
 18429  018472  006F FF8C  F032    	movff	plusw1,btemp+10
 18430  018478  0EFD               	movlw	-3
 18431  01847A  006F FF8C  F033    	movff	plusw1,btemp+11
 18432  018480  0E20               	movlw	32
 18433  018482  D005               	goto	u6990
 18434  018484                     u6995:
 18435  018484  90D8               	bcf	status,0,c
 18436  018486  3233               	rrcf	(btemp+11)^0,f,c
 18437  018488  3232               	rrcf	(btemp+10)^0,f,c
 18438  01848A  3231               	rrcf	(btemp+9)^0,f,c
 18439  01848C  3230               	rrcf	(btemp+8)^0,f,c
 18440  01848E                     u6990:
 18441  01848E  2EE8               	decfsz	wreg,f,c
 18442  018490  D7F9               	goto	u6995
 18443                           
 18444                           ;stkvar	_sign1 @ sp[(-2)+1]
 18445  018492  0EFF               	movlw	-1
 18446  018494  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18447                           
 18448                           ;stkvar	_f1 @ sp[(-2)+-4]
 18449  01849A  0EFC               	movlw	-4
 18450  01849C  8EE3               	bsf	plusw1,7,c
 18451                           
 18452                           ;stkvar	_f1 @ sp[(-2)+-4]
 18453  01849E  50E1               	movf	fsr1l,w,c
 18454  0184A0  0FFA               	addlw	-6
 18455  0184A2  6ED9               	movwf	fsr2l,c
 18456  0184A4  50E2               	movf	fsr1h,w,c
 18457  0184A6  6EDA               	movwf	fsr2h,c
 18458  0184A8  0EFF               	movlw	255
 18459  0184AA  22DA               	addwfc	fsr2h,f,c
 18460  0184AC  0EFF               	movlw	255
 18461  0184AE  16DE               	andwf	postinc2,f,c
 18462  0184B0  0EFF               	movlw	255
 18463  0184B2  16DE               	andwf	postinc2,f,c
 18464  0184B4  0EFF               	movlw	255
 18465  0184B6  16DE               	andwf	postinc2,f,c
 18466  0184B8  0E00               	movlw	0
 18467  0184BA  16DE               	andwf	postinc2,f,c
 18468                           
 18469                           ;stkvar	_exp1 @ sp[(-2)+0]
 18470  0184BC  0EFE               	movlw	-2
 18471  0184BE  006F FF8C  F028    	movff	plusw1,btemp
 18472  0184C4  0E96               	movlw	150
 18473  0184C6  5E28               	subwf	btemp^0,f,c
 18474  0184C8  0EFE               	movlw	-2
 18475  0184CA  0060  F0A3  FFE3   	movff	btemp,plusw1
 18476                           
 18477                           ;stkvar	_exp1 @ sp[(-2)+0]
 18478  0184D0  0EFE               	movlw	-2
 18479  0184D2  AEE3               	btfss	plusw1,7,c
 18480  0184D4  D014               	goto	l8412
 18481                           
 18482                           ;stkvar	_exp1 @ sp[(-2)+0]
 18483  0184D6  0EFE               	movlw	-2
 18484  0184D8  50E3               	movf	plusw1,w,c
 18485  0184DA  0A80               	xorlw	128
 18486  0184DC  0F97               	addlw	151
 18487  0184DE  A0D8               	btfss	status,0,c
 18488  0184E0  D7B9               	goto	u6980
 18489  0184E2                     l8410:
 18490                           
 18491                           ;stkvar	_f1 @ sp[(-2)+-4]
 18492  0184E2  90D8               	bcf	status,0,c
 18493  0184E4  0EFD               	movlw	-3
 18494  0184E6  32E3               	rrcf	plusw1,f,c
 18495  0184E8  0EFC               	movlw	-4
 18496  0184EA  32E3               	rrcf	plusw1,f,c
 18497  0184EC  0EFB               	movlw	-5
 18498  0184EE  32E3               	rrcf	plusw1,f,c
 18499  0184F0  0EFA               	movlw	-6
 18500  0184F2  32E3               	rrcf	plusw1,f,c
 18501                           
 18502                           ;stkvar	_exp1 @ sp[(-2)+0]
 18503  0184F4  0EFE               	movlw	-2
 18504  0184F6  2AE3               	incf	plusw1,f,c
 18505  0184F8  B4D8               	btfsc	status,2,c
 18506  0184FA  D018               	goto	u7040
 18507  0184FC  D7F2               	goto	l8410
 18508  0184FE                     l8412:
 18509                           
 18510                           ;stkvar	_exp1 @ sp[(-2)+0]
 18511  0184FE  0EFE               	movlw	-2
 18512  018500  006F FF8C  F028    	movff	plusw1,btemp
 18513  018506  0E1F               	movlw	31
 18514  018508  6428               	cpfsgt	btemp^0,c
 18515  01850A  D00C               	goto	l8420
 18516  01850C  D7A3               	goto	u6980
 18517  01850E                     l8418:
 18518                           
 18519                           ;stkvar	_f1 @ sp[(-2)+-4]
 18520  01850E  90D8               	bcf	status,0,c
 18521  018510  0EFA               	movlw	-6
 18522  018512  36E3               	rlcf	plusw1,f,c
 18523  018514  0EFB               	movlw	-5
 18524  018516  36E3               	rlcf	plusw1,f,c
 18525  018518  0EFC               	movlw	-4
 18526  01851A  36E3               	rlcf	plusw1,f,c
 18527  01851C  0EFD               	movlw	-3
 18528  01851E  36E3               	rlcf	plusw1,f,c
 18529                           
 18530                           ;stkvar	_exp1 @ sp[(-2)+0]
 18531  018520  0EFE               	movlw	-2
 18532  018522  06E3               	decf	plusw1,f,c
 18533  018524                     l8420:
 18534                           
 18535                           ;stkvar	_exp1 @ sp[(-2)+0]
 18536  018524  0EFE               	movlw	-2
 18537  018526  50E3               	movf	plusw1,w,c
 18538  018528  A4D8               	btfss	status,2,c
 18539  01852A  D7F1               	goto	l8418
 18540  01852C                     u7040:
 18541                           
 18542                           ;stkvar	_sign1 @ sp[(-2)+1]
 18543  01852C  0EFF               	movlw	-1
 18544  01852E  50E3               	movf	plusw1,w,c
 18545  018530  B4D8               	btfsc	status,2,c
 18546  018532  D011               	goto	u7060
 18547                           
 18548                           ;stkvar	_f1 @ sp[(-2)+-4]
 18549                           ;stkvar	_f1 @ sp[(-2)+-4]
 18550  018534  0EFA               	movlw	-6
 18551  018536  6CE3               	negf	plusw1,c
 18552  018538  0EFB               	movlw	-5
 18553  01853A  1EE3               	comf	plusw1,f,c
 18554  01853C  0EFC               	movlw	-4
 18555  01853E  1EE3               	comf	plusw1,f,c
 18556  018540  0EFD               	movlw	-3
 18557  018542  1EE3               	comf	plusw1,f,c
 18558  018544  E308               	bnc	u7060
 18559  018546  0EFB               	movlw	-5
 18560  018548  2AE3               	incf	plusw1,f,c
 18561  01854A  E305               	bnc	u7060
 18562  01854C  0EFC               	movlw	-4
 18563  01854E  2AE3               	incf	plusw1,f,c
 18564  018550  E302               	bnc	u7060
 18565  018552  0EFD               	movlw	-3
 18566  018554  2AE3               	incf	plusw1,f,c
 18567  018556                     u7060:
 18568                           
 18569                           ;stkvar	_f1 @ sp[(-2)+-4]
 18570  018556  0EFA               	movlw	-6
 18571  018558  006F FF8C  F028    	movff	plusw1,btemp
 18572  01855E  0EFB               	movlw	-5
 18573  018560  006F FF8C  F029    	movff	plusw1,btemp+1
 18574  018566  0EFC               	movlw	-4
 18575  018568  006F FF8C  F02A    	movff	plusw1,btemp+2
 18576  01856E  0EFD               	movlw	-3
 18577  018570  006F FF8C  F02B    	movff	plusw1,btemp+3
 18578  018576                     l2664:
 18579                           
 18580                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18581  018576  0EFA               	movlw	250
 18582  018578  26E1               	addwf	fsr1l,f,c
 18583  01857A  0EFF               	movlw	255
 18584  01857C  22E2               	addwfc	fsr1h,f,c
 18585  01857E  0012               	return		;funcret
 18586  018580                     __end_of___fltol:
 18587                           	opt callstack 0
 18588                           
 18589 ;; *************** function ___flneg *****************
 18590 ;; Defined at:
 18591 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18592 ;; Parameters:    Size  Location     Type
 18593 ;;  f1              4  [STACK] long 
 18594 ;; Auto vars:     Size  Location     Type
 18595 ;;		None
 18596 ;; Return value:  Size  Location     Type
 18597 ;;                  4  [STACK] long 
 18598 ;; Registers used:
 18599 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18600 ;; Tracked objects:
 18601 ;;		On entry : 0/0
 18602 ;;		On exit  : 0/0
 18603 ;;		Unchanged: 0/0
 18604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18609 ;;Total ram usage:        0 bytes
 18610 ;; Hardware stack levels used:    1
 18611 ;; Hardware stack levels required when called:   15
 18612 ;; This function calls:
 18613 ;;		Nothing
 18614 ;; This function is called by:
 18615 ;;		_calc_bsoc
 18616 ;;		_efgtoa
 18617 ;; This function uses a reentrant model
 18618 ;;
 18619                           
 18620                           	psect	text62
 18621  01AA04                     __ptext62:
 18622                           	opt callstack 0
 18623  01AA04                     ___flneg:
 18624                           	opt callstack 0
 18625                           
 18626                           ;stkvar	_f1 @ sp[(0)+-4]
 18627                           
 18628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18629                           ;incstack = 0
 18630 ;; hardware stack exceeded
 18631  01AA04  0EFC               	movlw	-4
 18632  01AA06  50E3               	movf	plusw1,w,c
 18633  01AA08  E10A               	bnz	u6960
 18634  01AA0A  0EFD               	movlw	-3
 18635  01AA0C  50E3               	movf	plusw1,w,c
 18636  01AA0E  E107               	bnz	u6960
 18637  01AA10  0EFE               	movlw	-2
 18638  01AA12  50E3               	movf	plusw1,w,c
 18639  01AA14  E104               	bnz	u6960
 18640  01AA16  0EFF               	movlw	-1
 18641  01AA18  50E3               	movf	plusw1,w,c
 18642  01AA1A  B4D8               	btfsc	status,2,c
 18643  01AA1C  D002               	goto	l8384
 18644  01AA1E                     u6960:
 18645                           
 18646                           ;stkvar	_f1 @ sp[(0)+-4]
 18647  01AA1E  0EFF               	movlw	-1
 18648  01AA20  7EE3               	btg	plusw1,7,c
 18649  01AA22                     l8384:
 18650                           
 18651                           ;stkvar	_f1 @ sp[(0)+-4]
 18652  01AA22  0EFC               	movlw	-4
 18653  01AA24  006F FF8C  F028    	movff	plusw1,btemp
 18654  01AA2A  0EFD               	movlw	-3
 18655  01AA2C  006F FF8C  F029    	movff	plusw1,btemp+1
 18656  01AA32  0EFE               	movlw	-2
 18657  01AA34  006F FF8C  F02A    	movff	plusw1,btemp+2
 18658  01AA3A  0EFF               	movlw	-1
 18659  01AA3C  006F FF8C  F02B    	movff	plusw1,btemp+3
 18660                           
 18661                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18662  01AA42  52E5               	movf	postdec1,f,c
 18663  01AA44  52E5               	movf	postdec1,f,c
 18664  01AA46  52E5               	movf	postdec1,f,c
 18665  01AA48  52E5               	movf	postdec1,f,c
 18666  01AA4A  0012               	return		;funcret
 18667  01AA4C                     __end_of___flneg:
 18668                           	opt callstack 0
 18669                           
 18670 ;; *************** function ___fleq *****************
 18671 ;; Defined at:
 18672 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18673 ;; Parameters:    Size  Location     Type
 18674 ;;  ff1             4  [STACK] long 
 18675 ;;  ff2             4  [STACK] long 
 18676 ;; Auto vars:     Size  Location     Type
 18677 ;;		None
 18678 ;; Return value:  Size  Location     Type
 18679 ;;		None               void
 18680 ;; Registers used:
 18681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18682 ;; Tracked objects:
 18683 ;;		On entry : 0/0
 18684 ;;		On exit  : 0/0
 18685 ;;		Unchanged: 0/0
 18686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18691 ;;Total ram usage:        0 bytes
 18692 ;; Hardware stack levels used:    1
 18693 ;; Hardware stack levels required when called:   15
 18694 ;; This function calls:
 18695 ;;		Nothing
 18696 ;; This function is called by:
 18697 ;;		_efgtoa
 18698 ;; This function uses a reentrant model
 18699 ;;
 18700                           
 18701                           	psect	text63
 18702  0199C8                     __ptext63:
 18703                           	opt callstack 0
 18704  0199C8                     ___fleq:
 18705                           	opt callstack 0
 18706                           
 18707                           ;stkvar	_ff1 @ sp[(0)+-4]
 18708                           
 18709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18710                           ;incstack = 0
 18711 ;; hardware stack exceeded
 18712  0199C8  50E1               	movf	fsr1l,w,c
 18713  0199CA  0FFC               	addlw	-4
 18714  0199CC  6ED9               	movwf	fsr2l,c
 18715  0199CE  50E2               	movf	fsr1h,w,c
 18716  0199D0  6EDA               	movwf	fsr2h,c
 18717  0199D2  0EFF               	movlw	255
 18718  0199D4  22DA               	addwfc	fsr2h,f,c
 18719  0199D6  0E00               	movlw	0
 18720  0199D8  14DE               	andwf	postinc2,w,c
 18721  0199DA  6E30               	movwf	(btemp+8)^0,c
 18722  0199DC  0E00               	movlw	0
 18723  0199DE  14DE               	andwf	postinc2,w,c
 18724  0199E0  6E31               	movwf	(btemp+9)^0,c
 18725  0199E2  0E80               	movlw	128
 18726  0199E4  14DE               	andwf	postinc2,w,c
 18727  0199E6  6E32               	movwf	(btemp+10)^0,c
 18728  0199E8  0E7F               	movlw	127
 18729  0199EA  14DE               	andwf	postinc2,w,c
 18730  0199EC  6E33               	movwf	(btemp+11)^0,c
 18731  0199EE  5030               	movf	(btemp+8)^0,w,c
 18732  0199F0  1031               	iorwf	(btemp+9)^0,w,c
 18733  0199F2  1032               	iorwf	(btemp+10)^0,w,c
 18734  0199F4  1033               	iorwf	(btemp+11)^0,w,c
 18735  0199F6  A4D8               	btfss	status,2,c
 18736  0199F8  D008               	goto	l8342
 18737                           
 18738                           ;stkvar	_ff1 @ sp[(0)+-4]
 18739  0199FA  0EFC               	movlw	-4
 18740  0199FC  6AE3               	clrf	plusw1,c
 18741  0199FE  0EFD               	movlw	-3
 18742  019A00  6AE3               	clrf	plusw1,c
 18743  019A02  0EFE               	movlw	-2
 18744  019A04  6AE3               	clrf	plusw1,c
 18745  019A06  0EFF               	movlw	-1
 18746  019A08  6AE3               	clrf	plusw1,c
 18747  019A0A                     l8342:
 18748                           
 18749                           ;stkvar	_ff2 @ sp[(0)+-8]
 18750  019A0A  50E1               	movf	fsr1l,w,c
 18751  019A0C  0FF8               	addlw	-8
 18752  019A0E  6ED9               	movwf	fsr2l,c
 18753  019A10  50E2               	movf	fsr1h,w,c
 18754  019A12  6EDA               	movwf	fsr2h,c
 18755  019A14  0EFF               	movlw	255
 18756  019A16  22DA               	addwfc	fsr2h,f,c
 18757  019A18  0E00               	movlw	0
 18758  019A1A  14DE               	andwf	postinc2,w,c
 18759  019A1C  6E30               	movwf	(btemp+8)^0,c
 18760  019A1E  0E00               	movlw	0
 18761  019A20  14DE               	andwf	postinc2,w,c
 18762  019A22  6E31               	movwf	(btemp+9)^0,c
 18763  019A24  0E80               	movlw	128
 18764  019A26  14DE               	andwf	postinc2,w,c
 18765  019A28  6E32               	movwf	(btemp+10)^0,c
 18766  019A2A  0E7F               	movlw	127
 18767  019A2C  14DE               	andwf	postinc2,w,c
 18768  019A2E  6E33               	movwf	(btemp+11)^0,c
 18769  019A30  5030               	movf	(btemp+8)^0,w,c
 18770  019A32  1031               	iorwf	(btemp+9)^0,w,c
 18771  019A34  1032               	iorwf	(btemp+10)^0,w,c
 18772  019A36  1033               	iorwf	(btemp+11)^0,w,c
 18773  019A38  A4D8               	btfss	status,2,c
 18774  019A3A  D008               	goto	l8346
 18775                           
 18776                           ;stkvar	_ff2 @ sp[(0)+-8]
 18777  019A3C  0EF8               	movlw	-8
 18778  019A3E  6AE3               	clrf	plusw1,c
 18779  019A40  0EF9               	movlw	-7
 18780  019A42  6AE3               	clrf	plusw1,c
 18781  019A44  0EFA               	movlw	-6
 18782  019A46  6AE3               	clrf	plusw1,c
 18783  019A48  0EFB               	movlw	-5
 18784  019A4A  6AE3               	clrf	plusw1,c
 18785  019A4C                     l8346:
 18786                           
 18787                           ;stkvar	_ff2 @ sp[(0)+-8]
 18788                           ;stkvar	_ff1 @ sp[(0)+-4]
 18789  019A4C  50E1               	movf	fsr1l,w,c
 18790  019A4E  0FFC               	addlw	-4
 18791  019A50  6ED9               	movwf	fsr2l,c
 18792  019A52  50E2               	movf	fsr1h,w,c
 18793  019A54  6EDA               	movwf	fsr2h,c
 18794  019A56  0EFF               	movlw	255
 18795  019A58  22DA               	addwfc	fsr2h,f,c
 18796  019A5A  0EF8               	movlw	-8
 18797  019A5C  50E3               	movf	plusw1,w,c
 18798  019A5E  18DE               	xorwf	postinc2,w,c
 18799  019A60  E10D               	bnz	u6900
 18800  019A62  0EF9               	movlw	-7
 18801  019A64  50E3               	movf	plusw1,w,c
 18802  019A66  18DE               	xorwf	postinc2,w,c
 18803  019A68  E109               	bnz	u6900
 18804  019A6A  0EFA               	movlw	-6
 18805  019A6C  50E3               	movf	plusw1,w,c
 18806  019A6E  18DE               	xorwf	postinc2,w,c
 18807  019A70  E105               	bnz	u6900
 18808  019A72  0EFB               	movlw	-5
 18809  019A74  50E3               	movf	plusw1,w,c
 18810  019A76  18DE               	xorwf	postinc2,w,c
 18811  019A78  B4D8               	btfsc	status,2,c
 18812  019A7A  D002               	goto	l8350
 18813  019A7C                     u6900:
 18814  019A7C  9028               	bcf	btemp& (0+255),0,c
 18815  019A7E  D001               	goto	l2626
 18816  019A80                     l8350:
 18817  019A80  8028               	bsf	btemp& (0+255),0,c
 18818  019A82                     l2626:
 18819                           
 18820                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18821  019A82  0EF8               	movlw	248
 18822  019A84  26E1               	addwf	fsr1l,f,c
 18823  019A86  0EFF               	movlw	255
 18824  019A88  22E2               	addwfc	fsr1h,f,c
 18825  019A8A  0012               	return		;funcret
 18826  019A8C                     __end_of___fleq:
 18827                           	opt callstack 0
 18828                           
 18829 ;; *************** function ___awmod *****************
 18830 ;; Defined at:
 18831 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18832 ;; Parameters:    Size  Location     Type
 18833 ;;  dividend        2  [STACK] int 
 18834 ;;  divisor         2  [STACK] int 
 18835 ;; Auto vars:     Size  Location     Type
 18836 ;;  sign            1  [STACK] unsigned char 
 18837 ;;  counter         1  [STACK] unsigned char 
 18838 ;; Return value:  Size  Location     Type
 18839 ;;                  2  [STACK] int 
 18840 ;; Registers used:
 18841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18842 ;; Tracked objects:
 18843 ;;		On entry : 0/0
 18844 ;;		On exit  : 0/0
 18845 ;;		Unchanged: 0/0
 18846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18851 ;;Total ram usage:        0 bytes
 18852 ;; Hardware stack levels used:    1
 18853 ;; Hardware stack levels required when called:   15
 18854 ;; This function calls:
 18855 ;;		Nothing
 18856 ;; This function is called by:
 18857 ;;		_efgtoa
 18858 ;; This function uses a reentrant model
 18859 ;;
 18860                           
 18861                           	psect	text64
 18862  018FD6                     __ptext64:
 18863                           	opt callstack 0
 18864  018FD6                     ___awmod:
 18865                           	opt callstack 0
 18866                           
 18867                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18868  018FD6  52E6               	movf	postinc1,f,c
 18869  018FD8  52E6               	movf	postinc1,f,c
 18870                           
 18871                           ;stkvar	_sign @ sp[(-2)+0]
 18872                           
 18873                           ;incstack = 0
 18874 ;; hardware stack exceeded
 18875  018FDA  0EFE               	movlw	-2
 18876  018FDC  6AE3               	clrf	plusw1,c
 18877                           
 18878                           ;stkvar	_dividend @ sp[(-2)+-2]
 18879  018FDE  0EFD               	movlw	-3
 18880  018FE0  AEE3               	btfss	plusw1,7,c
 18881  018FE2  D009               	goto	l8308
 18882                           
 18883                           ;stkvar	_dividend @ sp[(-2)+-2]
 18884                           ;stkvar	_dividend @ sp[(-2)+-2]
 18885  018FE4  0EFC               	movlw	-4
 18886  018FE6  6CE3               	negf	plusw1,c
 18887  018FE8  0EFD               	movlw	-3
 18888  018FEA  1EE3               	comf	plusw1,f,c
 18889  018FEC  B0D8               	btfsc	status,0,c
 18890  018FEE  2AE3               	incf	plusw1,f,c
 18891                           
 18892                           ;stkvar	_sign @ sp[(-2)+0]
 18893  018FF0  0EFE               	movlw	-2
 18894  018FF2  6AE3               	clrf	plusw1,c
 18895  018FF4  2AE3               	incf	plusw1,f,c
 18896  018FF6                     l8308:
 18897                           
 18898                           ;stkvar	_divisor @ sp[(-2)+-4]
 18899  018FF6  0EFB               	movlw	-5
 18900  018FF8  AEE3               	btfss	plusw1,7,c
 18901  018FFA  D006               	goto	l8312
 18902                           
 18903                           ;stkvar	_divisor @ sp[(-2)+-4]
 18904                           ;stkvar	_divisor @ sp[(-2)+-4]
 18905  018FFC  0EFA               	movlw	-6
 18906  018FFE  6CE3               	negf	plusw1,c
 18907  019000  0EFB               	movlw	-5
 18908  019002  1EE3               	comf	plusw1,f,c
 18909  019004  B0D8               	btfsc	status,0,c
 18910  019006  2AE3               	incf	plusw1,f,c
 18911  019008                     l8312:
 18912                           
 18913                           ;stkvar	_divisor @ sp[(-2)+-4]
 18914  019008  0EFA               	movlw	-6
 18915  01900A  006F FF8C  F028    	movff	plusw1,btemp
 18916  019010  0EFB               	movlw	-5
 18917  019012  50E3               	movf	plusw1,w,c
 18918  019014  1028               	iorwf	btemp^0,w,c
 18919  019016  B4D8               	btfsc	status,2,c
 18920  019018  D053               	goto	u6860
 18921                           
 18922                           ;stkvar	_counter @ sp[(-2)+1]
 18923  01901A  0EFF               	movlw	-1
 18924  01901C  6AE3               	clrf	plusw1,c
 18925  01901E  D012               	goto	L20
 18926  019020                     l8316:
 18927                           
 18928                           ;stkvar	_divisor @ sp[(-2)+-4]
 18929  019020  0EFA               	movlw	-6
 18930  019022  50E3               	movf	plusw1,w,c
 18931  019024  90D8               	bcf	status,0,c
 18932  019026  34E8               	rlcf	wreg,w,c
 18933  019028  6E28               	movwf	btemp^0,c
 18934  01902A  0EFA               	movlw	-6
 18935  01902C  0060  F0A3  FFE3   	movff	btemp,plusw1
 18936  019032  0EFB               	movlw	-5
 18937  019034  50E3               	movf	plusw1,w,c
 18938  019036  34E8               	rlcf	wreg,w,c
 18939  019038  6E28               	movwf	btemp^0,c
 18940  01903A  0EFB               	movlw	-5
 18941  01903C  0060  F0A3  FFE3   	movff	btemp,plusw1
 18942                           
 18943                           ;stkvar	_counter @ sp[(-2)+1]
 18944  019042  0EFF               	movlw	-1
 18945  019044                     L20:
 18946  019044  2AE3               	incf	plusw1,f,c
 18947                           
 18948                           ;stkvar	_divisor @ sp[(-2)+-4]
 18949  019046  0EFB               	movlw	-5
 18950  019048  AEE3               	btfss	plusw1,7,c
 18951  01904A  D7EA               	goto	l8316
 18952  01904C                     u6840:
 18953                           
 18954                           ;stkvar	_divisor @ sp[(-2)+-4]
 18955  01904C  0EFA               	movlw	-6
 18956  01904E  006F FF8C  F032    	movff	plusw1,btemp+10
 18957  019054  0EFB               	movlw	-5
 18958  019056  006F FF8C  F033    	movff	plusw1,btemp+11
 18959                           
 18960                           ;stkvar	_dividend @ sp[(-2)+-2]
 18961  01905C  0EFC               	movlw	-4
 18962  01905E  006F FF8C  F030    	movff	plusw1,btemp+8
 18963  019064  0EFD               	movlw	-3
 18964  019066  006F FF8C  F031    	movff	plusw1,btemp+9
 18965  01906C  5032               	movf	(btemp+10)^0,w,c
 18966  01906E  5C30               	subwf	(btemp+8)^0,w,c
 18967  019070  5033               	movf	(btemp+11)^0,w,c
 18968  019072  5831               	subwfb	(btemp+9)^0,w,c
 18969  019074  A0D8               	btfss	status,0,c
 18970  019076  D014               	goto	l8326
 18971                           
 18972                           ;stkvar	_divisor @ sp[(-2)+-4]
 18973                           ;stkvar	_dividend @ sp[(-2)+-2]
 18974  019078  0EFC               	movlw	-4
 18975  01907A  50E3               	movf	plusw1,w,c
 18976  01907C  6E28               	movwf	btemp^0,c
 18977  01907E  0EFA               	movlw	-6
 18978  019080  50E3               	movf	plusw1,w,c
 18979  019082  5E28               	subwf	btemp^0,f,c
 18980  019084  0EFC               	movlw	-4
 18981  019086  0060  F0A3  FFE3   	movff	btemp,plusw1
 18982  01908C  0EFD               	movlw	-3
 18983  01908E  50E3               	movf	plusw1,w,c
 18984  019090  6E28               	movwf	btemp^0,c
 18985  019092  0EFB               	movlw	-5
 18986  019094  50E3               	movf	plusw1,w,c
 18987  019096  5A28               	subwfb	btemp^0,f,c
 18988  019098  0EFD               	movlw	-3
 18989  01909A  0060  F0A3  FFE3   	movff	btemp,plusw1
 18990  0190A0                     l8326:
 18991                           
 18992                           ;stkvar	_divisor @ sp[(-2)+-4]
 18993  0190A0  90D8               	bcf	status,0,c
 18994  0190A2  0EFB               	movlw	-5
 18995  0190A4  32E3               	rrcf	plusw1,f,c
 18996  0190A6  0EFA               	movlw	-6
 18997  0190A8  32E3               	rrcf	plusw1,f,c
 18998                           
 18999                           ;stkvar	_counter @ sp[(-2)+1]
 19000  0190AA  0EFF               	movlw	-1
 19001  0190AC  50E3               	movf	plusw1,w,c
 19002  0190AE  6E28               	movwf	btemp^0,c
 19003  0190B0  0E01               	movlw	1
 19004  0190B2  5E28               	subwf	btemp^0,f,c
 19005  0190B4  0EFF               	movlw	-1
 19006  0190B6  0060  F0A3  FFE3   	movff	btemp,plusw1
 19007  0190BC  A4D8               	btfss	status,2,c
 19008  0190BE  D7C6               	goto	u6840
 19009  0190C0                     u6860:
 19010                           
 19011                           ;stkvar	_sign @ sp[(-2)+0]
 19012  0190C0  0EFE               	movlw	-2
 19013  0190C2  50E3               	movf	plusw1,w,c
 19014  0190C4  B4D8               	btfsc	status,2,c
 19015  0190C6  D006               	goto	l8334
 19016                           
 19017                           ;stkvar	_dividend @ sp[(-2)+-2]
 19018                           ;stkvar	_dividend @ sp[(-2)+-2]
 19019  0190C8  0EFC               	movlw	-4
 19020  0190CA  6CE3               	negf	plusw1,c
 19021  0190CC  0EFD               	movlw	-3
 19022  0190CE  1EE3               	comf	plusw1,f,c
 19023  0190D0  B0D8               	btfsc	status,0,c
 19024  0190D2  2AE3               	incf	plusw1,f,c
 19025  0190D4                     l8334:
 19026                           
 19027                           ;stkvar	_dividend @ sp[(-2)+-2]
 19028  0190D4  0EFC               	movlw	-4
 19029  0190D6  006F FF8C  F028    	movff	plusw1,btemp
 19030  0190DC  0EFD               	movlw	-3
 19031  0190DE  006F FF8C  F029    	movff	plusw1,btemp+1
 19032                           
 19033                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19034  0190E4  0EFA               	movlw	250
 19035  0190E6  26E1               	addwf	fsr1l,f,c
 19036  0190E8  0EFF               	movlw	255
 19037  0190EA  22E2               	addwfc	fsr1h,f,c
 19038  0190EC  0012               	return		;funcret
 19039  0190EE                     __end_of___awmod:
 19040                           	opt callstack 0
 19041                           
 19042 ;; *************** function ___awdiv *****************
 19043 ;; Defined at:
 19044 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19045 ;; Parameters:    Size  Location     Type
 19046 ;;  dividend        2  [STACK] int 
 19047 ;;  divisor         2  [STACK] int 
 19048 ;; Auto vars:     Size  Location     Type
 19049 ;;  quotient        2  [STACK] int 
 19050 ;;  sign            1  [STACK] unsigned char 
 19051 ;;  counter         1  [STACK] unsigned char 
 19052 ;; Return value:  Size  Location     Type
 19053 ;;                  2  [STACK] int 
 19054 ;; Registers used:
 19055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19056 ;; Tracked objects:
 19057 ;;		On entry : 0/0
 19058 ;;		On exit  : 0/0
 19059 ;;		Unchanged: 0/0
 19060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19065 ;;Total ram usage:        0 bytes
 19066 ;; Hardware stack levels used:    1
 19067 ;; Hardware stack levels required when called:   15
 19068 ;; This function calls:
 19069 ;;		Nothing
 19070 ;; This function is called by:
 19071 ;;		_efgtoa
 19072 ;; This function uses a reentrant model
 19073 ;;
 19074                           
 19075                           	psect	text65
 19076  0189B6                     __ptext65:
 19077                           	opt callstack 0
 19078  0189B6                     ___awdiv:
 19079                           	opt callstack 0
 19080                           
 19081                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19082  0189B6  52E6               	movf	postinc1,f,c
 19083  0189B8  52E6               	movf	postinc1,f,c
 19084  0189BA  52E6               	movf	postinc1,f,c
 19085  0189BC  52E6               	movf	postinc1,f,c
 19086                           
 19087                           ;stkvar	_sign @ sp[(-4)+2]
 19088                           
 19089                           ;incstack = 0
 19090 ;; hardware stack exceeded
 19091  0189BE  0EFE               	movlw	-2
 19092  0189C0  6AE3               	clrf	plusw1,c
 19093                           
 19094                           ;stkvar	_divisor @ sp[(-4)+-4]
 19095  0189C2  0EF9               	movlw	-7
 19096  0189C4  AEE3               	btfss	plusw1,7,c
 19097  0189C6  D009               	goto	l8262
 19098                           
 19099                           ;stkvar	_divisor @ sp[(-4)+-4]
 19100                           ;stkvar	_divisor @ sp[(-4)+-4]
 19101  0189C8  0EF8               	movlw	-8
 19102  0189CA  6CE3               	negf	plusw1,c
 19103  0189CC  0EF9               	movlw	-7
 19104  0189CE  1EE3               	comf	plusw1,f,c
 19105  0189D0  B0D8               	btfsc	status,0,c
 19106  0189D2  2AE3               	incf	plusw1,f,c
 19107                           
 19108                           ;stkvar	_sign @ sp[(-4)+2]
 19109  0189D4  0EFE               	movlw	-2
 19110  0189D6  6AE3               	clrf	plusw1,c
 19111  0189D8  2AE3               	incf	plusw1,f,c
 19112  0189DA                     l8262:
 19113                           
 19114                           ;stkvar	_dividend @ sp[(-4)+-2]
 19115  0189DA  0EFB               	movlw	-5
 19116  0189DC  AEE3               	btfss	plusw1,7,c
 19117  0189DE  D008               	goto	l8268
 19118                           
 19119                           ;stkvar	_dividend @ sp[(-4)+-2]
 19120                           ;stkvar	_dividend @ sp[(-4)+-2]
 19121  0189E0  0EFA               	movlw	-6
 19122  0189E2  6CE3               	negf	plusw1,c
 19123  0189E4  0EFB               	movlw	-5
 19124  0189E6  1EE3               	comf	plusw1,f,c
 19125  0189E8  B0D8               	btfsc	status,0,c
 19126  0189EA  2AE3               	incf	plusw1,f,c
 19127                           
 19128                           ;stkvar	_sign @ sp[(-4)+2]
 19129  0189EC  0EFE               	movlw	-2
 19130  0189EE  70E3               	btg	plusw1,0,c
 19131  0189F0                     l8268:
 19132                           
 19133                           ;stkvar	_quotient @ sp[(-4)+0]
 19134  0189F0  0EFC               	movlw	-4
 19135  0189F2  6AE3               	clrf	plusw1,c
 19136  0189F4  0EFD               	movlw	-3
 19137  0189F6  6AE3               	clrf	plusw1,c
 19138                           
 19139                           ;stkvar	_divisor @ sp[(-4)+-4]
 19140  0189F8  0EF8               	movlw	-8
 19141  0189FA  006F FF8C  F028    	movff	plusw1,btemp
 19142  018A00  0EF9               	movlw	-7
 19143  018A02  50E3               	movf	plusw1,w,c
 19144  018A04  1028               	iorwf	btemp^0,w,c
 19145  018A06  B4D8               	btfsc	status,2,c
 19146  018A08  D066               	goto	u6790
 19147                           
 19148                           ;stkvar	_counter @ sp[(-4)+3]
 19149  018A0A  0EFF               	movlw	-1
 19150  018A0C  6AE3               	clrf	plusw1,c
 19151  018A0E  D012               	goto	L21
 19152  018A10                     l8274:
 19153                           
 19154                           ;stkvar	_divisor @ sp[(-4)+-4]
 19155  018A10  0EF8               	movlw	-8
 19156  018A12  50E3               	movf	plusw1,w,c
 19157  018A14  90D8               	bcf	status,0,c
 19158  018A16  34E8               	rlcf	wreg,w,c
 19159  018A18  6E28               	movwf	btemp^0,c
 19160  018A1A  0EF8               	movlw	-8
 19161  018A1C  0060  F0A3  FFE3   	movff	btemp,plusw1
 19162  018A22  0EF9               	movlw	-7
 19163  018A24  50E3               	movf	plusw1,w,c
 19164  018A26  34E8               	rlcf	wreg,w,c
 19165  018A28  6E28               	movwf	btemp^0,c
 19166  018A2A  0EF9               	movlw	-7
 19167  018A2C  0060  F0A3  FFE3   	movff	btemp,plusw1
 19168                           
 19169                           ;stkvar	_counter @ sp[(-4)+3]
 19170  018A32  0EFF               	movlw	-1
 19171  018A34                     L21:
 19172  018A34  2AE3               	incf	plusw1,f,c
 19173                           
 19174                           ;stkvar	_divisor @ sp[(-4)+-4]
 19175  018A36  0EF9               	movlw	-7
 19176  018A38  AEE3               	btfss	plusw1,7,c
 19177  018A3A  D7EA               	goto	l8274
 19178  018A3C                     u6770:
 19179                           
 19180                           ;stkvar	_quotient @ sp[(-4)+0]
 19181  018A3C  0EFC               	movlw	-4
 19182  018A3E  50E3               	movf	plusw1,w,c
 19183  018A40  90D8               	bcf	status,0,c
 19184  018A42  34E8               	rlcf	wreg,w,c
 19185  018A44  6E28               	movwf	btemp^0,c
 19186  018A46  0EFC               	movlw	-4
 19187  018A48  0060  F0A3  FFE3   	movff	btemp,plusw1
 19188  018A4E  0EFD               	movlw	-3
 19189  018A50  50E3               	movf	plusw1,w,c
 19190  018A52  34E8               	rlcf	wreg,w,c
 19191  018A54  6E28               	movwf	btemp^0,c
 19192  018A56  0EFD               	movlw	-3
 19193  018A58  0060  F0A3  FFE3   	movff	btemp,plusw1
 19194                           
 19195                           ;stkvar	_divisor @ sp[(-4)+-4]
 19196  018A5E  0EF8               	movlw	-8
 19197  018A60  006F FF8C  F032    	movff	plusw1,btemp+10
 19198  018A66  0EF9               	movlw	-7
 19199  018A68  006F FF8C  F033    	movff	plusw1,btemp+11
 19200                           
 19201                           ;stkvar	_dividend @ sp[(-4)+-2]
 19202  018A6E  0EFA               	movlw	-6
 19203  018A70  006F FF8C  F030    	movff	plusw1,btemp+8
 19204  018A76  0EFB               	movlw	-5
 19205  018A78  006F FF8C  F031    	movff	plusw1,btemp+9
 19206  018A7E  5032               	movf	(btemp+10)^0,w,c
 19207  018A80  5C30               	subwf	(btemp+8)^0,w,c
 19208  018A82  5033               	movf	(btemp+11)^0,w,c
 19209  018A84  5831               	subwfb	(btemp+9)^0,w,c
 19210  018A86  A0D8               	btfss	status,0,c
 19211  018A88  D016               	goto	l8288
 19212                           
 19213                           ;stkvar	_divisor @ sp[(-4)+-4]
 19214                           ;stkvar	_dividend @ sp[(-4)+-2]
 19215  018A8A  0EFA               	movlw	-6
 19216  018A8C  50E3               	movf	plusw1,w,c
 19217  018A8E  6E28               	movwf	btemp^0,c
 19218  018A90  0EF8               	movlw	-8
 19219  018A92  50E3               	movf	plusw1,w,c
 19220  018A94  5E28               	subwf	btemp^0,f,c
 19221  018A96  0EFA               	movlw	-6
 19222  018A98  0060  F0A3  FFE3   	movff	btemp,plusw1
 19223  018A9E  0EFB               	movlw	-5
 19224  018AA0  50E3               	movf	plusw1,w,c
 19225  018AA2  6E28               	movwf	btemp^0,c
 19226  018AA4  0EF9               	movlw	-7
 19227  018AA6  50E3               	movf	plusw1,w,c
 19228  018AA8  5A28               	subwfb	btemp^0,f,c
 19229  018AAA  0EFB               	movlw	-5
 19230  018AAC  0060  F0A3  FFE3   	movff	btemp,plusw1
 19231                           
 19232                           ;stkvar	_quotient @ sp[(-4)+0]
 19233  018AB2  0EFC               	movlw	-4
 19234  018AB4  80E3               	bsf	plusw1,0,c
 19235  018AB6                     l8288:
 19236                           
 19237                           ;stkvar	_divisor @ sp[(-4)+-4]
 19238  018AB6  90D8               	bcf	status,0,c
 19239  018AB8  0EF9               	movlw	-7
 19240  018ABA  32E3               	rrcf	plusw1,f,c
 19241  018ABC  0EF8               	movlw	-8
 19242  018ABE  32E3               	rrcf	plusw1,f,c
 19243                           
 19244                           ;stkvar	_counter @ sp[(-4)+3]
 19245  018AC0  0EFF               	movlw	-1
 19246  018AC2  50E3               	movf	plusw1,w,c
 19247  018AC4  6E28               	movwf	btemp^0,c
 19248  018AC6  0E01               	movlw	1
 19249  018AC8  5E28               	subwf	btemp^0,f,c
 19250  018ACA  0EFF               	movlw	-1
 19251  018ACC  0060  F0A3  FFE3   	movff	btemp,plusw1
 19252  018AD2  A4D8               	btfss	status,2,c
 19253  018AD4  D7B3               	goto	u6770
 19254  018AD6                     u6790:
 19255                           
 19256                           ;stkvar	_sign @ sp[(-4)+2]
 19257  018AD6  0EFE               	movlw	-2
 19258  018AD8  50E3               	movf	plusw1,w,c
 19259  018ADA  B4D8               	btfsc	status,2,c
 19260  018ADC  D006               	goto	l8296
 19261                           
 19262                           ;stkvar	_quotient @ sp[(-4)+0]
 19263                           ;stkvar	_quotient @ sp[(-4)+0]
 19264  018ADE  0EFC               	movlw	-4
 19265  018AE0  6CE3               	negf	plusw1,c
 19266  018AE2  0EFD               	movlw	-3
 19267  018AE4  1EE3               	comf	plusw1,f,c
 19268  018AE6  B0D8               	btfsc	status,0,c
 19269  018AE8  2AE3               	incf	plusw1,f,c
 19270  018AEA                     l8296:
 19271                           
 19272                           ;stkvar	_quotient @ sp[(-4)+0]
 19273  018AEA  0EFC               	movlw	-4
 19274  018AEC  006F FF8C  F028    	movff	plusw1,btemp
 19275  018AF2  0EFD               	movlw	-3
 19276  018AF4  006F FF8C  F029    	movff	plusw1,btemp+1
 19277                           
 19278                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19279  018AFA  0EF8               	movlw	248
 19280  018AFC  26E1               	addwf	fsr1l,f,c
 19281  018AFE  0EFF               	movlw	255
 19282  018B00  22E2               	addwfc	fsr1h,f,c
 19283  018B02  0012               	return		;funcret
 19284  018B04                     __end_of___awdiv:
 19285                           	opt callstack 0
 19286                           
 19287 ;; *************** function _dtoa *****************
 19288 ;; Defined at:
 19289 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19290 ;; Parameters:    Size  Location     Type
 19291 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19292 ;;		 -> f(6), NULL(0), 
 19293 ;;  d               8  [STACK] long long 
 19294 ;; Auto vars:     Size  Location     Type
 19295 ;;  n               8  [STACK] long long 
 19296 ;;  i               2  [STACK] int 
 19297 ;;  s               2  [STACK] int 
 19298 ;;  w               2  [STACK] int 
 19299 ;;  p               2  [STACK] int 
 19300 ;; Return value:  Size  Location     Type
 19301 ;;                  2  [STACK] int 
 19302 ;; Registers used:
 19303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19304 ;; Tracked objects:
 19305 ;;		On entry : 0/0
 19306 ;;		On exit  : 0/0
 19307 ;;		Unchanged: 0/0
 19308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19313 ;;Total ram usage:        0 bytes
 19314 ;; Hardware stack levels used:    1
 19315 ;; Hardware stack levels required when called:   20
 19316 ;; This function calls:
 19317 ;;		___aodiv
 19318 ;;		___aomod
 19319 ;;		_abs
 19320 ;;		_pad
 19321 ;; This function is called by:
 19322 ;;		_vfpfcnvrt
 19323 ;; This function uses a reentrant model
 19324 ;;
 19325                           
 19326                           	psect	text66
 19327  01536C                     __ptext66:
 19328                           	opt callstack 0
 19329  01536C                     _dtoa:
 19330                           	opt callstack 0
 19331                           
 19332                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19333  01536C  0E12               	movlw	18
 19334  01536E  26E1               	addwf	fsr1l,f,c
 19335  015370  0E00               	movlw	0
 19336  015372  22E2               	addwfc	fsr1h,f,c
 19337                           
 19338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19339                           ;stkvar	_d @ sp[(-18)+-10]
 19340                           
 19341                           ;incstack = 0
 19342 ;; hardware stack exceeded
 19343  015374  0EE4               	movlw	228
 19344  015376  24E1               	addwf	fsr1l,w,c
 19345  015378  6ED9               	movwf	fsr2l,c
 19346  01537A  0EFF               	movlw	255
 19347  01537C  20E2               	addwfc	fsr1h,w,c
 19348  01537E  6EDA               	movwf	fsr2h,c
 19349                           
 19350                           ;stkvar	_n @ sp[(-18)+2]
 19351  015380  0E08               	movlw	8
 19352  015382  6E28               	movwf	btemp^0,c
 19353  015384  0EF0               	movlw	-16
 19354  015386                     us1051999:
 19355  015386  006F FF7B FFE3     	movff	postinc2,plusw1
 19356  01538C  28E8               	incf	wreg,w,c
 19357  01538E  2E28               	decfsz	btemp^0,f,c
 19358  015390  D7FA               	bra	us1051999
 19359                           
 19360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19361                           ;stkvar	_n @ sp[(-18)+2]
 19362  015392  0EF7               	movlw	-9
 19363  015394  AEE3               	btfss	plusw1,7,c
 19364  015396  D002               	goto	u10520
 19365  015398  0E01               	movlw	1
 19366  01539A  D001               	goto	u10530
 19367  01539C                     u10520:
 19368  01539C  0E00               	movlw	0
 19369  01539E                     u10530:
 19370  01539E  6E32               	movwf	(btemp+10)^0,c
 19371  0153A0  6A33               	clrf	(btemp+11)^0,c
 19372                           
 19373                           ;stkvar	_s @ sp[(-18)+12]
 19374  0153A2  0EFA               	movlw	-6
 19375  0153A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19376  0153AA  0EFB               	movlw	-5
 19377  0153AC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19378                           
 19379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19380                           ;stkvar	_s @ sp[(-18)+12]
 19381  0153B2  0EFA               	movlw	-6
 19382  0153B4  006F FF8C  F028    	movff	plusw1,btemp
 19383  0153BA  0EFB               	movlw	-5
 19384  0153BC  50E3               	movf	plusw1,w,c
 19385  0153BE  1028               	iorwf	btemp^0,w,c
 19386  0153C0  B4D8               	btfsc	status,2,c
 19387  0153C2  D025               	goto	u10550
 19388                           
 19389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19390                           ;stkvar	_n @ sp[(-18)+2]
 19391                           ;stkvar	_n @ sp[(-18)+2]
 19392  0153C4  0EF0               	movlw	-16
 19393  0153C6  6CE3               	negf	plusw1,c
 19394  0153C8  0EF1               	movlw	-15
 19395  0153CA  1EE3               	comf	plusw1,f,c
 19396  0153CC  0EF2               	movlw	-14
 19397  0153CE  1EE3               	comf	plusw1,f,c
 19398  0153D0  0EF3               	movlw	-13
 19399  0153D2  1EE3               	comf	plusw1,f,c
 19400  0153D4  0EF4               	movlw	-12
 19401  0153D6  1EE3               	comf	plusw1,f,c
 19402  0153D8  0EF5               	movlw	-11
 19403  0153DA  1EE3               	comf	plusw1,f,c
 19404  0153DC  0EF6               	movlw	-10
 19405  0153DE  1EE3               	comf	plusw1,f,c
 19406  0153E0  0EF7               	movlw	-9
 19407  0153E2  1EE3               	comf	plusw1,f,c
 19408  0153E4  E314               	bnc	u10550
 19409  0153E6  0EF1               	movlw	-15
 19410  0153E8  2AE3               	incf	plusw1,f,c
 19411  0153EA  E311               	bnc	u10550
 19412  0153EC  0EF2               	movlw	-14
 19413  0153EE  2AE3               	incf	plusw1,f,c
 19414  0153F0  E30E               	bnc	u10550
 19415  0153F2  0EF3               	movlw	-13
 19416  0153F4  2AE3               	incf	plusw1,f,c
 19417  0153F6  E30B               	bnc	u10550
 19418  0153F8  0EF4               	movlw	-12
 19419  0153FA  2AE3               	incf	plusw1,f,c
 19420  0153FC  E308               	bnc	u10550
 19421  0153FE  0EF5               	movlw	-11
 19422  015400  2AE3               	incf	plusw1,f,c
 19423  015402  E305               	bnc	u10550
 19424  015404  0EF6               	movlw	-10
 19425  015406  2AE3               	incf	plusw1,f,c
 19426  015408  E302               	bnc	u10550
 19427  01540A  0EF7               	movlw	-9
 19428  01540C  2AE3               	incf	plusw1,f,c
 19429  01540E                     u10550:
 19430                           
 19431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19432  01540E  AE4B               	btfss	(_prec+1)^0,7,c
 19433                           
 19434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19435  015410  924C               	bcf	_flags^0,1,c
 19436                           
 19437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19438  015412  BE4B               	btfsc	(_prec+1)^0,7,c
 19439  015414  D005               	goto	u10570
 19440  015416  504B               	movf	(_prec+1)^0,w,c
 19441  015418  E110               	bnz	l11522
 19442  01541A  044A               	decf	_prec^0,w,c
 19443  01541C  B0D8               	btfsc	status,0,c
 19444  01541E  D00D               	goto	l11522
 19445  015420                     u10570:
 19446  015420  0E01               	movlw	1
 19447  015422  6E32               	movwf	(btemp+10)^0,c
 19448  015424  0E00               	movlw	0
 19449  015426  6E33               	movwf	(btemp+11)^0,c
 19450                           
 19451                           ;stkvar	_p @ sp[(-18)+16]
 19452  015428  0EFE               	movlw	-2
 19453  01542A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19454  015430  0EFF               	movlw	-1
 19455  015432  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19456  015438  D008               	goto	l2130
 19457  01543A                     l11522:
 19458                           
 19459                           ;stkvar	_p @ sp[(-18)+16]
 19460  01543A  0EFE               	movlw	-2
 19461  01543C  0060  F12B  FFE3   	movff	_prec,plusw1
 19462  015442  0EFF               	movlw	-1
 19463  015444  0060  F12F  FFE3   	movff	_prec+1,plusw1
 19464  01544A                     l2130:
 19465                           
 19466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19467                           ;stkvar	_w @ sp[(-18)+14]
 19468  01544A  0EFC               	movlw	-4
 19469  01544C  0060  F123  FFE3   	movff	_width,plusw1
 19470  015452  0EFD               	movlw	-3
 19471  015454  0060  F127  FFE3   	movff	_width+1,plusw1
 19472                           
 19473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19474                           ;stkvar	_s @ sp[(-18)+12]
 19475  01545A  0EFA               	movlw	-6
 19476  01545C  006F FF8C  F028    	movff	plusw1,btemp
 19477  015462  0EFB               	movlw	-5
 19478  015464  50E3               	movf	plusw1,w,c
 19479  015466  1028               	iorwf	btemp^0,w,c
 19480  015468  A4D8               	btfss	status,2,c
 19481  01546A  D002               	goto	u10590
 19482  01546C  A44C               	btfss	_flags^0,2,c
 19483  01546E  D00A               	goto	l11530
 19484  015470                     u10590:
 19485                           
 19486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19487                           ;stkvar	_w @ sp[(-18)+14]
 19488  015470  50E1               	movf	fsr1l,w,c
 19489  015472  0FFC               	addlw	-4
 19490  015474  6ED9               	movwf	fsr2l,c
 19491  015476  50E2               	movf	fsr1h,w,c
 19492  015478  6EDA               	movwf	fsr2h,c
 19493  01547A  0EFF               	movlw	255
 19494  01547C  22DA               	addwfc	fsr2h,f,c
 19495  01547E  06DE               	decf	postinc2,f,c
 19496  015480  0E00               	movlw	0
 19497  015482  5ADD               	subwfb	postdec2,f,c
 19498  015484                     l11530:
 19499                           
 19500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19501  015484  0E4F               	movlw	79
 19502  015486  6E32               	movwf	(btemp+10)^0,c
 19503  015488  0E00               	movlw	0
 19504  01548A  6E33               	movwf	(btemp+11)^0,c
 19505                           
 19506                           ;stkvar	_i @ sp[(-18)+10]
 19507  01548C  0EF8               	movlw	-8
 19508  01548E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19509  015494  0EF9               	movlw	-7
 19510  015496  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19511                           
 19512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19513  01549C  0103               	movlb	3	; () banked
 19514  01549E  6BFD               	clrf	(_dbuf+79)& (0+255),b
 19515                           
 19516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19517  0154A0  D109               	goto	l11544
 19518  0154A2                     l11534:
 19519                           
 19520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19521                           ;stkvar	_i @ sp[(-18)+10]
 19522  0154A2  50E1               	movf	fsr1l,w,c
 19523  0154A4  0FF8               	addlw	-8
 19524  0154A6  6ED9               	movwf	fsr2l,c
 19525  0154A8  50E2               	movf	fsr1h,w,c
 19526  0154AA  6EDA               	movwf	fsr2h,c
 19527  0154AC  0EFF               	movlw	255
 19528  0154AE  22DA               	addwfc	fsr2h,f,c
 19529  0154B0  06DE               	decf	postinc2,f,c
 19530  0154B2  0E00               	movlw	0
 19531  0154B4  5ADD               	subwfb	postdec2,f,c
 19532                           
 19533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19534  0154B6  0E0A               	movlw	10
 19535  0154B8  6EE6               	movwf	postinc1,c
 19536  0154BA  0E00               	movlw	0
 19537  0154BC  6EE6               	movwf	postinc1,c
 19538  0154BE  0E00               	movlw	0
 19539  0154C0  6EE6               	movwf	postinc1,c
 19540  0154C2  0E00               	movlw	0
 19541  0154C4  6EE6               	movwf	postinc1,c
 19542  0154C6  0E00               	movlw	0
 19543  0154C8  6EE6               	movwf	postinc1,c
 19544  0154CA  0E00               	movlw	0
 19545  0154CC  6EE6               	movwf	postinc1,c
 19546  0154CE  0E00               	movlw	0
 19547  0154D0  6EE6               	movwf	postinc1,c
 19548  0154D2  0E00               	movlw	0
 19549  0154D4  6EE6               	movwf	postinc1,c
 19550                           
 19551                           ;stkvar	_n @ sp[(-26)+2]
 19552  0154D6  50E1               	movf	fsr1l,w,c
 19553  0154D8  0FE8               	addlw	-24
 19554  0154DA  6ED9               	movwf	fsr2l,c
 19555  0154DC  50E2               	movf	fsr1h,w,c
 19556  0154DE  6EDA               	movwf	fsr2h,c
 19557  0154E0  0EFF               	movlw	255
 19558  0154E2  22DA               	addwfc	fsr2h,f,c
 19559  0154E4  006F FF7B FFE6     	movff	postinc2,postinc1
 19560  0154EA  006F FF7B FFE6     	movff	postinc2,postinc1
 19561  0154F0  006F FF7B FFE6     	movff	postinc2,postinc1
 19562  0154F6  006F FF7B FFE6     	movff	postinc2,postinc1
 19563  0154FC  006F FF7B FFE6     	movff	postinc2,postinc1
 19564  015502  006F FF7B FFE6     	movff	postinc2,postinc1
 19565  015508  006F FF7B FFE6     	movff	postinc2,postinc1
 19566  01550E  006F FF7B FFE6     	movff	postinc2,postinc1
 19567  015514  ECA9  F0B9         	call	___aomod	;wreg free
 19568  015518  52E5               	movf	postdec1,f,c
 19569  01551A  006F FF9C  F03F    	movff	indf1,btemp+23
 19570  015520  52E5               	movf	postdec1,f,c
 19571  015522  006F FF9C  F03E    	movff	indf1,btemp+22
 19572  015528  52E5               	movf	postdec1,f,c
 19573  01552A  006F FF9C  F03D    	movff	indf1,btemp+21
 19574  015530  52E5               	movf	postdec1,f,c
 19575  015532  006F FF9C  F03C    	movff	indf1,btemp+20
 19576  015538  52E5               	movf	postdec1,f,c
 19577  01553A  006F FF9C  F03B    	movff	indf1,btemp+19
 19578  015540  52E5               	movf	postdec1,f,c
 19579  015542  006F FF9C  F03A    	movff	indf1,btemp+18
 19580  015548  52E5               	movf	postdec1,f,c
 19581  01554A  006F FF9C  F039    	movff	indf1,btemp+17
 19582  015550  52E5               	movf	postdec1,f,c
 19583  015552  006F FF9C  F038    	movff	indf1,btemp+16
 19584  015558  0EF8               	movlw	248
 19585  01555A  26E1               	addwf	fsr1l,f,c
 19586  01555C  0EFF               	movlw	255
 19587  01555E  22E2               	addwfc	fsr1h,f,c
 19588  015560  0060  F0E0  F032   	movff	btemp+16,btemp+10
 19589  015566  0060  F0E4  F033   	movff	btemp+17,btemp+11
 19590  01556C  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 19591  015572  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 19592  015578  EC4A  F0D5         	call	_abs	;wreg free
 19593  01557C  0E30               	movlw	48
 19594  01557E  2628               	addwf	btemp^0,f,c
 19595                           
 19596                           ;stkvar	_i @ sp[(-18)+10]
 19597  015580  0EF8               	movlw	-8
 19598  015582  006F FF8C  F032    	movff	plusw1,btemp+10
 19599  015588  0EF9               	movlw	-7
 19600  01558A  006F FF8C  F033    	movff	plusw1,btemp+11
 19601  015590  0EAE               	movlw	low _dbuf
 19602  015592  2432               	addwf	(btemp+10)^0,w,c
 19603  015594  6ED9               	movwf	fsr2l,c
 19604  015596  0E03               	movlw	high _dbuf
 19605  015598  2033               	addwfc	(btemp+11)^0,w,c
 19606  01559A  6EDA               	movwf	fsr2h,c
 19607  01559C  0060  F0A3  FFDF   	movff	btemp,indf2
 19608                           
 19609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19610                           ;stkvar	_p @ sp[(-18)+16]
 19611  0155A2  50E1               	movf	fsr1l,w,c
 19612  0155A4  0FFE               	addlw	-2
 19613  0155A6  6ED9               	movwf	fsr2l,c
 19614  0155A8  50E2               	movf	fsr1h,w,c
 19615  0155AA  6EDA               	movwf	fsr2h,c
 19616  0155AC  0EFF               	movlw	255
 19617  0155AE  22DA               	addwfc	fsr2h,f,c
 19618  0155B0  06DE               	decf	postinc2,f,c
 19619  0155B2  0E00               	movlw	0
 19620  0155B4  5ADD               	subwfb	postdec2,f,c
 19621                           
 19622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19623                           ;stkvar	_w @ sp[(-18)+14]
 19624  0155B6  50E1               	movf	fsr1l,w,c
 19625  0155B8  0FFC               	addlw	-4
 19626  0155BA  6ED9               	movwf	fsr2l,c
 19627  0155BC  50E2               	movf	fsr1h,w,c
 19628  0155BE  6EDA               	movwf	fsr2h,c
 19629  0155C0  0EFF               	movlw	255
 19630  0155C2  22DA               	addwfc	fsr2h,f,c
 19631  0155C4  06DE               	decf	postinc2,f,c
 19632  0155C6  0E00               	movlw	0
 19633  0155C8  5ADD               	subwfb	postdec2,f,c
 19634                           
 19635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19636  0155CA  0E0A               	movlw	10
 19637  0155CC  6EE6               	movwf	postinc1,c
 19638  0155CE  0E00               	movlw	0
 19639  0155D0  6EE6               	movwf	postinc1,c
 19640  0155D2  0E00               	movlw	0
 19641  0155D4  6EE6               	movwf	postinc1,c
 19642  0155D6  0E00               	movlw	0
 19643  0155D8  6EE6               	movwf	postinc1,c
 19644  0155DA  0E00               	movlw	0
 19645  0155DC  6EE6               	movwf	postinc1,c
 19646  0155DE  0E00               	movlw	0
 19647  0155E0  6EE6               	movwf	postinc1,c
 19648  0155E2  0E00               	movlw	0
 19649  0155E4  6EE6               	movwf	postinc1,c
 19650  0155E6  0E00               	movlw	0
 19651  0155E8  6EE6               	movwf	postinc1,c
 19652                           
 19653                           ;stkvar	_n @ sp[(-26)+2]
 19654  0155EA  50E1               	movf	fsr1l,w,c
 19655  0155EC  0FE8               	addlw	-24
 19656  0155EE  6ED9               	movwf	fsr2l,c
 19657  0155F0  50E2               	movf	fsr1h,w,c
 19658  0155F2  6EDA               	movwf	fsr2h,c
 19659  0155F4  0EFF               	movlw	255
 19660  0155F6  22DA               	addwfc	fsr2h,f,c
 19661  0155F8  006F FF7B FFE6     	movff	postinc2,postinc1
 19662  0155FE  006F FF7B FFE6     	movff	postinc2,postinc1
 19663  015604  006F FF7B FFE6     	movff	postinc2,postinc1
 19664  01560A  006F FF7B FFE6     	movff	postinc2,postinc1
 19665  015610  006F FF7B FFE6     	movff	postinc2,postinc1
 19666  015616  006F FF7B FFE6     	movff	postinc2,postinc1
 19667  01561C  006F FF7B FFE6     	movff	postinc2,postinc1
 19668  015622  006F FF7B FFE6     	movff	postinc2,postinc1
 19669  015628  EC2F  F0B7         	call	___aodiv	;wreg free
 19670  01562C  52E5               	movf	postdec1,f,c
 19671  01562E  006F FF9C  F03F    	movff	indf1,btemp+23
 19672  015634  52E5               	movf	postdec1,f,c
 19673  015636  006F FF9C  F03E    	movff	indf1,btemp+22
 19674  01563C  52E5               	movf	postdec1,f,c
 19675  01563E  006F FF9C  F03D    	movff	indf1,btemp+21
 19676  015644  52E5               	movf	postdec1,f,c
 19677  015646  006F FF9C  F03C    	movff	indf1,btemp+20
 19678  01564C  52E5               	movf	postdec1,f,c
 19679  01564E  006F FF9C  F03B    	movff	indf1,btemp+19
 19680  015654  52E5               	movf	postdec1,f,c
 19681  015656  006F FF9C  F03A    	movff	indf1,btemp+18
 19682  01565C  52E5               	movf	postdec1,f,c
 19683  01565E  006F FF9C  F039    	movff	indf1,btemp+17
 19684  015664  52E5               	movf	postdec1,f,c
 19685  015666  006F FF9C  F038    	movff	indf1,btemp+16
 19686  01566C  0EF8               	movlw	248
 19687  01566E  26E1               	addwf	fsr1l,f,c
 19688  015670  0EFF               	movlw	255
 19689  015672  22E2               	addwfc	fsr1h,f,c
 19690                           
 19691                           ;stkvar	_n @ sp[(-18)+2]
 19692  015674  0EF0               	movlw	-16
 19693  015676  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 19694  01567C  0EF1               	movlw	-15
 19695  01567E  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 19696  015684  0EF2               	movlw	-14
 19697  015686  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 19698  01568C  0EF3               	movlw	-13
 19699  01568E  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 19700  015694  0EF4               	movlw	-12
 19701  015696  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 19702  01569C  0EF5               	movlw	-11
 19703  01569E  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 19704  0156A4  0EF6               	movlw	-10
 19705  0156A6  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 19706  0156AC  0EF7               	movlw	-9
 19707  0156AE  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 19708  0156B4                     l11544:
 19709                           
 19710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19711                           ;stkvar	_i @ sp[(-18)+10]
 19712  0156B4  0EF9               	movlw	-7
 19713  0156B6  BEE3               	btfsc	plusw1,7,c
 19714  0156B8  D036               	goto	u10640
 19715  0156BA  0EF9               	movlw	-7
 19716  0156BC  50E3               	movf	plusw1,w,c
 19717  0156BE  E104               	bnz	u10600
 19718  0156C0  0EF8               	movlw	-8
 19719  0156C2  04E3               	decf	plusw1,w,c
 19720  0156C4  A0D8               	btfss	status,0,c
 19721  0156C6  D02F               	goto	u10640
 19722  0156C8                     u10600:
 19723                           
 19724                           ;stkvar	_n @ sp[(-18)+2]
 19725  0156C8  0EF0               	movlw	-16
 19726  0156CA  50E3               	movf	plusw1,w,c
 19727  0156CC  E115               	bnz	u10611
 19728  0156CE  0EF1               	movlw	-15
 19729  0156D0  50E3               	movf	plusw1,w,c
 19730  0156D2  E112               	bnz	u10611
 19731  0156D4  0EF2               	movlw	-14
 19732  0156D6  50E3               	movf	plusw1,w,c
 19733  0156D8  E10F               	bnz	u10611
 19734  0156DA  0EF3               	movlw	-13
 19735  0156DC  50E3               	movf	plusw1,w,c
 19736  0156DE  E10C               	bnz	u10611
 19737  0156E0  0EF4               	movlw	-12
 19738  0156E2  50E3               	movf	plusw1,w,c
 19739  0156E4  E109               	bnz	u10611
 19740  0156E6  0EF5               	movlw	-11
 19741  0156E8  50E3               	movf	plusw1,w,c
 19742  0156EA  E106               	bnz	u10611
 19743  0156EC  0EF6               	movlw	-10
 19744  0156EE  50E3               	movf	plusw1,w,c
 19745  0156F0  E103               	bnz	u10611
 19746  0156F2  0EF7               	movlw	-9
 19747  0156F4  50E3               	movf	plusw1,w,c
 19748  0156F6  A4D8               	btfss	status,2,c
 19749  0156F8                     u10611:
 19750  0156F8  D6D4               	goto	l11534
 19751                           
 19752                           ;stkvar	_p @ sp[(-18)+16]
 19753  0156FA  0EFF               	movlw	-1
 19754  0156FC  BEE3               	btfsc	plusw1,7,c
 19755  0156FE  D007               	goto	u10620
 19756  015700  0EFF               	movlw	-1
 19757  015702  50E3               	movf	plusw1,w,c
 19758  015704  E103               	bnz	u10621
 19759  015706  0EFE               	movlw	-2
 19760  015708  04E3               	decf	plusw1,w,c
 19761  01570A  B0D8               	btfsc	status,0,c
 19762  01570C                     u10621:
 19763  01570C  D6CA               	goto	l11534
 19764  01570E                     u10620:
 19765                           
 19766                           ;stkvar	_w @ sp[(-18)+14]
 19767  01570E  0EFD               	movlw	-3
 19768  015710  BEE3               	btfsc	plusw1,7,c
 19769  015712  D009               	goto	u10640
 19770  015714  0EFD               	movlw	-3
 19771  015716  50E3               	movf	plusw1,w,c
 19772  015718  E104               	bnz	u10630
 19773  01571A  0EFC               	movlw	-4
 19774  01571C  04E3               	decf	plusw1,w,c
 19775  01571E  A0D8               	btfss	status,0,c
 19776  015720  D002               	goto	u10640
 19777  015722                     u10630:
 19778  015722  B24C               	btfsc	_flags^0,1,c
 19779  015724  D6BE               	goto	l11534
 19780  015726                     u10640:
 19781                           
 19782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19783                           ;stkvar	_s @ sp[(-18)+12]
 19784  015726  0EFA               	movlw	-6
 19785  015728  006F FF8C  F028    	movff	plusw1,btemp
 19786  01572E  0EFB               	movlw	-5
 19787  015730  50E3               	movf	plusw1,w,c
 19788  015732  1028               	iorwf	btemp^0,w,c
 19789  015734  A4D8               	btfss	status,2,c
 19790  015736  D002               	goto	u10660
 19791  015738  A44C               	btfss	_flags^0,2,c
 19792  01573A  D033               	goto	l11568
 19793  01573C                     u10660:
 19794                           
 19795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19796                           ;stkvar	_i @ sp[(-18)+10]
 19797  01573C  50E1               	movf	fsr1l,w,c
 19798  01573E  0FF8               	addlw	-8
 19799  015740  6ED9               	movwf	fsr2l,c
 19800  015742  50E2               	movf	fsr1h,w,c
 19801  015744  6EDA               	movwf	fsr2h,c
 19802  015746  0EFF               	movlw	255
 19803  015748  22DA               	addwfc	fsr2h,f,c
 19804  01574A  06DE               	decf	postinc2,f,c
 19805  01574C  0E00               	movlw	0
 19806  01574E  5ADD               	subwfb	postdec2,f,c
 19807                           
 19808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19809                           ;stkvar	_s @ sp[(-18)+12]
 19810  015750  0EFA               	movlw	-6
 19811  015752  006F FF8C  F028    	movff	plusw1,btemp
 19812  015758  0EFB               	movlw	-5
 19813  01575A  50E3               	movf	plusw1,w,c
 19814  01575C  1028               	iorwf	btemp^0,w,c
 19815  01575E  A4D8               	btfss	status,2,c
 19816  015760  D002               	goto	l11564
 19817  015762  0E2B               	movlw	43
 19818  015764  D001               	goto	L22
 19819  015766                     l11564:
 19820  015766  0E2D               	movlw	45
 19821  015768                     L22:
 19822  015768  6E32               	movwf	(btemp+10)^0,c
 19823  01576A  0E00               	movlw	0
 19824  01576C  6E33               	movwf	(btemp+11)^0,c
 19825                           
 19826                           ;stkvar	_dtoa$5366 @ sp[(-18)+0]
 19827  01576E  0EEE               	movlw	-18
 19828  015770  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19829  015776  0EEF               	movlw	-17
 19830  015778  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19831                           
 19832                           ;stkvar	_dtoa$5366 @ sp[(-18)+0]
 19833                           ;stkvar	_i @ sp[(-18)+10]
 19834  01577E  0EF8               	movlw	-8
 19835  015780  006F FF8C  F032    	movff	plusw1,btemp+10
 19836  015786  0EF9               	movlw	-7
 19837  015788  006F FF8C  F033    	movff	plusw1,btemp+11
 19838  01578E  0EAE               	movlw	low _dbuf
 19839  015790  2432               	addwf	(btemp+10)^0,w,c
 19840  015792  6ED9               	movwf	fsr2l,c
 19841  015794  0E03               	movlw	high _dbuf
 19842  015796  2033               	addwfc	(btemp+11)^0,w,c
 19843  015798  6EDA               	movwf	fsr2h,c
 19844  01579A  0EEE               	movlw	-18
 19845  01579C  006F FF8F FFDF     	movff	plusw1,indf2
 19846  0157A2                     l11568:
 19847                           
 19848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19849                           ;stkvar	_w @ sp[(-18)+14]
 19850  0157A2  0EFC               	movlw	-4
 19851  0157A4  006F FF8F FFE6     	movff	plusw1,postinc1
 19852  0157AA  006F FF8F FFE6     	movff	plusw1,postinc1
 19853                           
 19854                           ;stkvar	_i @ sp[(-20)+10]
 19855  0157B0  0EAE               	movlw	low _dbuf
 19856  0157B2  6E32               	movwf	(btemp+10)^0,c
 19857  0157B4  0E03               	movlw	high _dbuf
 19858  0157B6  6E33               	movwf	(btemp+11)^0,c
 19859  0157B8  0EF6               	movlw	-10
 19860  0157BA  50E3               	movf	plusw1,w,c
 19861  0157BC  2632               	addwf	(btemp+10)^0,f,c
 19862  0157BE  0EF7               	movlw	-9
 19863  0157C0  50E3               	movf	plusw1,w,c
 19864  0157C2  2233               	addwfc	(btemp+11)^0,f,c
 19865  0157C4  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 19866  0157CA  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 19867                           
 19868                           ;stkvar	_fp @ sp[(-22)+-2]
 19869  0157D0  0EE8               	movlw	-24
 19870  0157D2  006F FF8F FFE6     	movff	plusw1,postinc1
 19871  0157D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19872  0157DE  EC77  F0C8         	call	_pad	;wreg free
 19873                           
 19874                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19875  0157E2  0EE4               	movlw	228
 19876  0157E4  26E1               	addwf	fsr1l,f,c
 19877  0157E6  0EFF               	movlw	255
 19878  0157E8  22E2               	addwfc	fsr1h,f,c
 19879  0157EA  0012               	return		;funcret
 19880  0157EC                     __end_of_dtoa:
 19881                           	opt callstack 0
 19882                           
 19883 ;; *************** function _abs *****************
 19884 ;; Defined at:
 19885 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19886 ;; Parameters:    Size  Location     Type
 19887 ;;  a               2  [STACK] int 
 19888 ;; Auto vars:     Size  Location     Type
 19889 ;;		None
 19890 ;; Return value:  Size  Location     Type
 19891 ;;                  2  [STACK] int 
 19892 ;; Registers used:
 19893 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19894 ;; Tracked objects:
 19895 ;;		On entry : 0/3
 19896 ;;		On exit  : 0/0
 19897 ;;		Unchanged: 0/0
 19898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19903 ;;Total ram usage:        0 bytes
 19904 ;; Hardware stack levels used:    1
 19905 ;; Hardware stack levels required when called:   15
 19906 ;; This function calls:
 19907 ;;		Nothing
 19908 ;; This function is called by:
 19909 ;;		_dtoa
 19910 ;; This function uses a reentrant model
 19911 ;;
 19912                           
 19913                           	psect	text67
 19914  01AA94                     __ptext67:
 19915                           	opt callstack 0
 19916  01AA94                     _abs:
 19917                           	opt callstack 0
 19918                           
 19919                           ;stkvar	_a @ sp[(0)+-2]
 19920                           
 19921                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19922                           ;incstack = 0
 19923 ;; hardware stack exceeded
 19924  01AA94  0EFF               	movlw	-1
 19925  01AA96  BEE3               	btfsc	plusw1,7,c
 19926  01AA98  D007               	goto	u5750
 19927  01AA9A  0EFF               	movlw	-1
 19928  01AA9C  50E3               	movf	plusw1,w,c
 19929  01AA9E  E112               	bnz	l7750
 19930  01AAA0  0EFE               	movlw	-2
 19931  01AAA2  04E3               	decf	plusw1,w,c
 19932  01AAA4  B0D8               	btfsc	status,0,c
 19933  01AAA6  D00E               	goto	l7750
 19934  01AAA8                     u5750:
 19935                           
 19936                           ;stkvar	_a @ sp[(0)+-2]
 19937  01AAA8  0EFE               	movlw	-2
 19938  01AAAA  006F FF8C  F028    	movff	plusw1,btemp
 19939  01AAB0  1E28               	comf	btemp^0,f,c
 19940  01AAB2  0EFF               	movlw	-1
 19941  01AAB4  006F FF8C  F029    	movff	plusw1,btemp+1
 19942  01AABA  1E29               	comf	(btemp+1)^0,f,c
 19943  01AABC  2A28               	incf	btemp^0,f,c
 19944  01AABE  B4D8               	btfsc	status,2,c
 19945  01AAC0  2A29               	incf	(btemp+1)^0,f,c
 19946  01AAC2  D008               	goto	l3056
 19947  01AAC4                     l7750:
 19948                           
 19949                           ;stkvar	_a @ sp[(0)+-2]
 19950  01AAC4  0EFE               	movlw	-2
 19951  01AAC6  006F FF8C  F028    	movff	plusw1,btemp
 19952  01AACC  0EFF               	movlw	-1
 19953  01AACE  006F FF8C  F029    	movff	plusw1,btemp+1
 19954  01AAD4                     l3056:
 19955                           
 19956                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19957  01AAD4  52E5               	movf	postdec1,f,c
 19958  01AAD6  52E5               	movf	postdec1,f,c
 19959  01AAD8  0012               	return		;funcret
 19960  01AADA                     __end_of_abs:
 19961                           	opt callstack 0
 19962                           
 19963 ;; *************** function ___aomod *****************
 19964 ;; Defined at:
 19965 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19966 ;; Parameters:    Size  Location     Type
 19967 ;;  dividend        8  [STACK] long long 
 19968 ;;  divisor         8  [STACK] long long 
 19969 ;; Auto vars:     Size  Location     Type
 19970 ;;  sign            1  [STACK] unsigned char 
 19971 ;;  counter         1  [STACK] unsigned char 
 19972 ;; Return value:  Size  Location     Type
 19973 ;;                  8  [STACK] long long 
 19974 ;; Registers used:
 19975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19976 ;; Tracked objects:
 19977 ;;		On entry : 0/3
 19978 ;;		On exit  : 0/0
 19979 ;;		Unchanged: 0/0
 19980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19985 ;;Total ram usage:        0 bytes
 19986 ;; Hardware stack levels used:    1
 19987 ;; Hardware stack levels required when called:   15
 19988 ;; This function calls:
 19989 ;;		Nothing
 19990 ;; This function is called by:
 19991 ;;		_dtoa
 19992 ;; This function uses a reentrant model
 19993 ;;
 19994                           
 19995                           	psect	text68
 19996  017352                     __ptext68:
 19997                           	opt callstack 0
 19998  017352                     ___aomod:
 19999                           	opt callstack 0
 20000                           
 20001                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20002  017352  52E6               	movf	postinc1,f,c
 20003  017354  52E6               	movf	postinc1,f,c
 20004                           
 20005                           ;stkvar	_sign @ sp[(-2)+0]
 20006                           
 20007                           ;incstack = 0
 20008 ;; hardware stack exceeded
 20009  017356  0EFE               	movlw	-2
 20010  017358  6AE3               	clrf	plusw1,c
 20011                           
 20012                           ;stkvar	_dividend @ sp[(-2)+-8]
 20013  01735A  0EFD               	movlw	-3
 20014  01735C  AEE3               	btfss	plusw1,7,c
 20015  01735E  D028               	goto	l7908
 20016                           
 20017                           ;stkvar	_dividend @ sp[(-2)+-8]
 20018                           ;stkvar	_dividend @ sp[(-2)+-8]
 20019  017360  0EF6               	movlw	-10
 20020  017362  6CE3               	negf	plusw1,c
 20021  017364  0EF7               	movlw	-9
 20022  017366  1EE3               	comf	plusw1,f,c
 20023  017368  0EF8               	movlw	-8
 20024  01736A  1EE3               	comf	plusw1,f,c
 20025  01736C  0EF9               	movlw	-7
 20026  01736E  1EE3               	comf	plusw1,f,c
 20027  017370  0EFA               	movlw	-6
 20028  017372  1EE3               	comf	plusw1,f,c
 20029  017374  0EFB               	movlw	-5
 20030  017376  1EE3               	comf	plusw1,f,c
 20031  017378  0EFC               	movlw	-4
 20032  01737A  1EE3               	comf	plusw1,f,c
 20033  01737C  0EFD               	movlw	-3
 20034  01737E  1EE3               	comf	plusw1,f,c
 20035  017380  E314               	bnc	u6180
 20036  017382  0EF7               	movlw	-9
 20037  017384  2AE3               	incf	plusw1,f,c
 20038  017386  E311               	bnc	u6180
 20039  017388  0EF8               	movlw	-8
 20040  01738A  2AE3               	incf	plusw1,f,c
 20041  01738C  E30E               	bnc	u6180
 20042  01738E  0EF9               	movlw	-7
 20043  017390  2AE3               	incf	plusw1,f,c
 20044  017392  E30B               	bnc	u6180
 20045  017394  0EFA               	movlw	-6
 20046  017396  2AE3               	incf	plusw1,f,c
 20047  017398  E308               	bnc	u6180
 20048  01739A  0EFB               	movlw	-5
 20049  01739C  2AE3               	incf	plusw1,f,c
 20050  01739E  E305               	bnc	u6180
 20051  0173A0  0EFC               	movlw	-4
 20052  0173A2  2AE3               	incf	plusw1,f,c
 20053  0173A4  E302               	bnc	u6180
 20054  0173A6  0EFD               	movlw	-3
 20055  0173A8  2AE3               	incf	plusw1,f,c
 20056  0173AA                     u6180:
 20057                           
 20058                           ;stkvar	_sign @ sp[(-2)+0]
 20059  0173AA  0EFE               	movlw	-2
 20060  0173AC  6AE3               	clrf	plusw1,c
 20061  0173AE  2AE3               	incf	plusw1,f,c
 20062  0173B0                     l7908:
 20063                           
 20064                           ;stkvar	_divisor @ sp[(-2)+-16]
 20065  0173B0  0EF5               	movlw	-11
 20066  0173B2  AEE3               	btfss	plusw1,7,c
 20067  0173B4  D025               	goto	u6200
 20068                           
 20069                           ;stkvar	_divisor @ sp[(-2)+-16]
 20070                           ;stkvar	_divisor @ sp[(-2)+-16]
 20071  0173B6  0EEE               	movlw	-18
 20072  0173B8  6CE3               	negf	plusw1,c
 20073  0173BA  0EEF               	movlw	-17
 20074  0173BC  1EE3               	comf	plusw1,f,c
 20075  0173BE  0EF0               	movlw	-16
 20076  0173C0  1EE3               	comf	plusw1,f,c
 20077  0173C2  0EF1               	movlw	-15
 20078  0173C4  1EE3               	comf	plusw1,f,c
 20079  0173C6  0EF2               	movlw	-14
 20080  0173C8  1EE3               	comf	plusw1,f,c
 20081  0173CA  0EF3               	movlw	-13
 20082  0173CC  1EE3               	comf	plusw1,f,c
 20083  0173CE  0EF4               	movlw	-12
 20084  0173D0  1EE3               	comf	plusw1,f,c
 20085  0173D2  0EF5               	movlw	-11
 20086  0173D4  1EE3               	comf	plusw1,f,c
 20087  0173D6  E314               	bnc	u6200
 20088  0173D8  0EEF               	movlw	-17
 20089  0173DA  2AE3               	incf	plusw1,f,c
 20090  0173DC  E311               	bnc	u6200
 20091  0173DE  0EF0               	movlw	-16
 20092  0173E0  2AE3               	incf	plusw1,f,c
 20093  0173E2  E30E               	bnc	u6200
 20094  0173E4  0EF1               	movlw	-15
 20095  0173E6  2AE3               	incf	plusw1,f,c
 20096  0173E8  E30B               	bnc	u6200
 20097  0173EA  0EF2               	movlw	-14
 20098  0173EC  2AE3               	incf	plusw1,f,c
 20099  0173EE  E308               	bnc	u6200
 20100  0173F0  0EF3               	movlw	-13
 20101  0173F2  2AE3               	incf	plusw1,f,c
 20102  0173F4  E305               	bnc	u6200
 20103  0173F6  0EF4               	movlw	-12
 20104  0173F8  2AE3               	incf	plusw1,f,c
 20105  0173FA  E302               	bnc	u6200
 20106  0173FC  0EF5               	movlw	-11
 20107  0173FE  2AE3               	incf	plusw1,f,c
 20108  017400                     u6200:
 20109                           
 20110                           ;stkvar	_divisor @ sp[(-2)+-16]
 20111  017400  0EEE               	movlw	-18
 20112  017402  50E3               	movf	plusw1,w,c
 20113  017404  E116               	bnz	u6210
 20114  017406  0EEF               	movlw	-17
 20115  017408  50E3               	movf	plusw1,w,c
 20116  01740A  E113               	bnz	u6210
 20117  01740C  0EF0               	movlw	-16
 20118  01740E  50E3               	movf	plusw1,w,c
 20119  017410  E110               	bnz	u6210
 20120  017412  0EF1               	movlw	-15
 20121  017414  50E3               	movf	plusw1,w,c
 20122  017416  E10D               	bnz	u6210
 20123  017418  0EF2               	movlw	-14
 20124  01741A  50E3               	movf	plusw1,w,c
 20125  01741C  E10A               	bnz	u6210
 20126  01741E  0EF3               	movlw	-13
 20127  017420  50E3               	movf	plusw1,w,c
 20128  017422  E107               	bnz	u6210
 20129  017424  0EF4               	movlw	-12
 20130  017426  50E3               	movf	plusw1,w,c
 20131  017428  E104               	bnz	u6210
 20132  01742A  0EF5               	movlw	-11
 20133  01742C  50E3               	movf	plusw1,w,c
 20134  01742E  B4D8               	btfsc	status,2,c
 20135  017430  D075               	goto	u6240
 20136  017432                     u6210:
 20137                           
 20138                           ;stkvar	_counter @ sp[(-2)+1]
 20139  017432  0EFF               	movlw	-1
 20140  017434  6AE3               	clrf	plusw1,c
 20141  017436  D012               	goto	L23
 20142  017438                     l7916:
 20143                           
 20144                           ;stkvar	_divisor @ sp[(-2)+-16]
 20145  017438  90D8               	bcf	status,0,c
 20146  01743A  0EEE               	movlw	-18
 20147  01743C  36E3               	rlcf	plusw1,f,c
 20148  01743E  0EEF               	movlw	-17
 20149  017440  36E3               	rlcf	plusw1,f,c
 20150  017442  0EF0               	movlw	-16
 20151  017444  36E3               	rlcf	plusw1,f,c
 20152  017446  0EF1               	movlw	-15
 20153  017448  36E3               	rlcf	plusw1,f,c
 20154  01744A  0EF2               	movlw	-14
 20155  01744C  36E3               	rlcf	plusw1,f,c
 20156  01744E  0EF3               	movlw	-13
 20157  017450  36E3               	rlcf	plusw1,f,c
 20158  017452  0EF4               	movlw	-12
 20159  017454  36E3               	rlcf	plusw1,f,c
 20160  017456  0EF5               	movlw	-11
 20161  017458  36E3               	rlcf	plusw1,f,c
 20162                           
 20163                           ;stkvar	_counter @ sp[(-2)+1]
 20164  01745A  0EFF               	movlw	-1
 20165  01745C                     L23:
 20166  01745C  2AE3               	incf	plusw1,f,c
 20167                           
 20168                           ;stkvar	_divisor @ sp[(-2)+-16]
 20169  01745E  0EF5               	movlw	-11
 20170  017460  AEE3               	btfss	plusw1,7,c
 20171  017462  D7EA               	goto	l7916
 20172  017464                     u6220:
 20173                           
 20174                           ;stkvar	_divisor @ sp[(-2)+-16]
 20175                           ;stkvar	_dividend @ sp[(-2)+-8]
 20176  017464  50E1               	movf	fsr1l,w,c
 20177  017466  0FF6               	addlw	-10
 20178  017468  6ED9               	movwf	fsr2l,c
 20179  01746A  50E2               	movf	fsr1h,w,c
 20180  01746C  6EDA               	movwf	fsr2h,c
 20181  01746E  0EFF               	movlw	255
 20182  017470  22DA               	addwfc	fsr2h,f,c
 20183  017472  0EEE               	movlw	-18
 20184  017474  50E3               	movf	plusw1,w,c
 20185  017476  5CDE               	subwf	postinc2,w,c
 20186  017478  0EEF               	movlw	-17
 20187  01747A  50E3               	movf	plusw1,w,c
 20188  01747C  58DE               	subwfb	postinc2,w,c
 20189  01747E  0EF0               	movlw	-16
 20190  017480  50E3               	movf	plusw1,w,c
 20191  017482  58DE               	subwfb	postinc2,w,c
 20192  017484  0EF1               	movlw	-15
 20193  017486  50E3               	movf	plusw1,w,c
 20194  017488  58DE               	subwfb	postinc2,w,c
 20195  01748A  0EF2               	movlw	-14
 20196  01748C  50E3               	movf	plusw1,w,c
 20197  01748E  58DE               	subwfb	postinc2,w,c
 20198  017490  0EF3               	movlw	-13
 20199  017492  50E3               	movf	plusw1,w,c
 20200  017494  58DE               	subwfb	postinc2,w,c
 20201  017496  0EF4               	movlw	-12
 20202  017498  50E3               	movf	plusw1,w,c
 20203  01749A  58DE               	subwfb	postinc2,w,c
 20204  01749C  0EF5               	movlw	-11
 20205  01749E  50E3               	movf	plusw1,w,c
 20206  0174A0  58DE               	subwfb	postinc2,w,c
 20207  0174A2  A0D8               	btfss	status,0,c
 20208  0174A4  D01F               	goto	l7924
 20209                           
 20210                           ;stkvar	_divisor @ sp[(-2)+-16]
 20211                           ;stkvar	_dividend @ sp[(-2)+-8]
 20212  0174A6  50E1               	movf	fsr1l,w,c
 20213  0174A8  0FF6               	addlw	-10
 20214  0174AA  6ED9               	movwf	fsr2l,c
 20215  0174AC  50E2               	movf	fsr1h,w,c
 20216  0174AE  6EDA               	movwf	fsr2h,c
 20217  0174B0  0EFF               	movlw	255
 20218  0174B2  22DA               	addwfc	fsr2h,f,c
 20219  0174B4  0EEE               	movlw	-18
 20220  0174B6  50E3               	movf	plusw1,w,c
 20221  0174B8  5EDE               	subwf	postinc2,f,c
 20222  0174BA  0EEF               	movlw	-17
 20223  0174BC  50E3               	movf	plusw1,w,c
 20224  0174BE  5ADE               	subwfb	postinc2,f,c
 20225  0174C0  0EF0               	movlw	-16
 20226  0174C2  50E3               	movf	plusw1,w,c
 20227  0174C4  5ADE               	subwfb	postinc2,f,c
 20228  0174C6  0EF1               	movlw	-15
 20229  0174C8  50E3               	movf	plusw1,w,c
 20230  0174CA  5ADE               	subwfb	postinc2,f,c
 20231  0174CC  0EF2               	movlw	-14
 20232  0174CE  50E3               	movf	plusw1,w,c
 20233  0174D0  5ADE               	subwfb	postinc2,f,c
 20234  0174D2  0EF3               	movlw	-13
 20235  0174D4  50E3               	movf	plusw1,w,c
 20236  0174D6  5ADE               	subwfb	postinc2,f,c
 20237  0174D8  0EF4               	movlw	-12
 20238  0174DA  50E3               	movf	plusw1,w,c
 20239  0174DC  5ADE               	subwfb	postinc2,f,c
 20240  0174DE  0EF5               	movlw	-11
 20241  0174E0  50E3               	movf	plusw1,w,c
 20242  0174E2  5ADE               	subwfb	postinc2,f,c
 20243  0174E4                     l7924:
 20244                           
 20245                           ;stkvar	_divisor @ sp[(-2)+-16]
 20246  0174E4  90D8               	bcf	status,0,c
 20247  0174E6  0EF5               	movlw	-11
 20248  0174E8  32E3               	rrcf	plusw1,f,c
 20249  0174EA  0EF4               	movlw	-12
 20250  0174EC  32E3               	rrcf	plusw1,f,c
 20251  0174EE  0EF3               	movlw	-13
 20252  0174F0  32E3               	rrcf	plusw1,f,c
 20253  0174F2  0EF2               	movlw	-14
 20254  0174F4  32E3               	rrcf	plusw1,f,c
 20255  0174F6  0EF1               	movlw	-15
 20256  0174F8  32E3               	rrcf	plusw1,f,c
 20257  0174FA  0EF0               	movlw	-16
 20258  0174FC  32E3               	rrcf	plusw1,f,c
 20259  0174FE  0EEF               	movlw	-17
 20260  017500  32E3               	rrcf	plusw1,f,c
 20261  017502  0EEE               	movlw	-18
 20262  017504  32E3               	rrcf	plusw1,f,c
 20263                           
 20264                           ;stkvar	_counter @ sp[(-2)+1]
 20265  017506  0EFF               	movlw	-1
 20266  017508  50E3               	movf	plusw1,w,c
 20267  01750A  6E28               	movwf	btemp^0,c
 20268  01750C  0E01               	movlw	1
 20269  01750E  5E28               	subwf	btemp^0,f,c
 20270  017510  0EFF               	movlw	-1
 20271  017512  0060  F0A3  FFE3   	movff	btemp,plusw1
 20272  017518  A4D8               	btfss	status,2,c
 20273  01751A  D7A4               	goto	u6220
 20274  01751C                     u6240:
 20275                           
 20276                           ;stkvar	_sign @ sp[(-2)+0]
 20277  01751C  0EFE               	movlw	-2
 20278  01751E  50E3               	movf	plusw1,w,c
 20279  017520  B4D8               	btfsc	status,2,c
 20280  017522  D025               	goto	u6260
 20281                           
 20282                           ;stkvar	_dividend @ sp[(-2)+-8]
 20283                           ;stkvar	_dividend @ sp[(-2)+-8]
 20284  017524  0EF6               	movlw	-10
 20285  017526  6CE3               	negf	plusw1,c
 20286  017528  0EF7               	movlw	-9
 20287  01752A  1EE3               	comf	plusw1,f,c
 20288  01752C  0EF8               	movlw	-8
 20289  01752E  1EE3               	comf	plusw1,f,c
 20290  017530  0EF9               	movlw	-7
 20291  017532  1EE3               	comf	plusw1,f,c
 20292  017534  0EFA               	movlw	-6
 20293  017536  1EE3               	comf	plusw1,f,c
 20294  017538  0EFB               	movlw	-5
 20295  01753A  1EE3               	comf	plusw1,f,c
 20296  01753C  0EFC               	movlw	-4
 20297  01753E  1EE3               	comf	plusw1,f,c
 20298  017540  0EFD               	movlw	-3
 20299  017542  1EE3               	comf	plusw1,f,c
 20300  017544  E314               	bnc	u6260
 20301  017546  0EF7               	movlw	-9
 20302  017548  2AE3               	incf	plusw1,f,c
 20303  01754A  E311               	bnc	u6260
 20304  01754C  0EF8               	movlw	-8
 20305  01754E  2AE3               	incf	plusw1,f,c
 20306  017550  E30E               	bnc	u6260
 20307  017552  0EF9               	movlw	-7
 20308  017554  2AE3               	incf	plusw1,f,c
 20309  017556  E30B               	bnc	u6260
 20310  017558  0EFA               	movlw	-6
 20311  01755A  2AE3               	incf	plusw1,f,c
 20312  01755C  E308               	bnc	u6260
 20313  01755E  0EFB               	movlw	-5
 20314  017560  2AE3               	incf	plusw1,f,c
 20315  017562  E305               	bnc	u6260
 20316  017564  0EFC               	movlw	-4
 20317  017566  2AE3               	incf	plusw1,f,c
 20318  017568  E302               	bnc	u6260
 20319  01756A  0EFD               	movlw	-3
 20320  01756C  2AE3               	incf	plusw1,f,c
 20321  01756E                     u6260:
 20322                           
 20323                           ;stkvar	_dividend @ sp[(-2)+-8]
 20324  01756E  0EF6               	movlw	246
 20325  017570  24E1               	addwf	fsr1l,w,c
 20326  017572  6ED9               	movwf	fsr2l,c
 20327  017574  0EFF               	movlw	255
 20328  017576  20E2               	addwfc	fsr1h,w,c
 20329  017578  6EDA               	movwf	fsr2h,c
 20330                           
 20331                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20332  01757A  0E08               	movlw	8
 20333  01757C  6E28               	movwf	btemp^0,c
 20334  01757E  0EF6               	movlw	-10
 20335  017580                     us627999:
 20336  017580  006F FF7B FFE3     	movff	postinc2,plusw1
 20337  017586  28E8               	incf	wreg,w,c
 20338  017588  2E28               	decfsz	btemp^0,f,c
 20339  01758A  D7FA               	bra	us627999
 20340                           
 20341                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20342  01758C  52E5               	movf	postdec1,f,c
 20343  01758E  52E5               	movf	postdec1,f,c
 20344  017590  0012               	return		;funcret
 20345  017592                     __end_of___aomod:
 20346                           	opt callstack 0
 20347                           
 20348 ;; *************** function ___aodiv *****************
 20349 ;; Defined at:
 20350 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20351 ;; Parameters:    Size  Location     Type
 20352 ;;  dividend        8  [STACK] long long 
 20353 ;;  divisor         8  [STACK] long long 
 20354 ;; Auto vars:     Size  Location     Type
 20355 ;;  quotient        8  [STACK] long long 
 20356 ;;  sign            1  [STACK] unsigned char 
 20357 ;;  counter         1  [STACK] unsigned char 
 20358 ;; Return value:  Size  Location     Type
 20359 ;;                  8  [STACK] long long 
 20360 ;; Registers used:
 20361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20362 ;; Tracked objects:
 20363 ;;		On entry : 0/3
 20364 ;;		On exit  : 0/0
 20365 ;;		Unchanged: 0/0
 20366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20371 ;;Total ram usage:        0 bytes
 20372 ;; Hardware stack levels used:    1
 20373 ;; Hardware stack levels required when called:   15
 20374 ;; This function calls:
 20375 ;;		Nothing
 20376 ;; This function is called by:
 20377 ;;		_dtoa
 20378 ;; This function uses a reentrant model
 20379 ;;
 20380                           
 20381                           	psect	text69
 20382  016E5E                     __ptext69:
 20383                           	opt callstack 0
 20384  016E5E                     ___aodiv:
 20385                           	opt callstack 0
 20386                           
 20387                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20388  016E5E  0E0A               	movlw	10
 20389  016E60  26E1               	addwf	fsr1l,f,c
 20390  016E62  0E00               	movlw	0
 20391  016E64  22E2               	addwfc	fsr1h,f,c
 20392                           
 20393                           ;stkvar	_sign @ sp[(-10)+8]
 20394                           
 20395                           ;incstack = 0
 20396 ;; hardware stack exceeded
 20397  016E66  0EFE               	movlw	-2
 20398  016E68  6AE3               	clrf	plusw1,c
 20399                           
 20400                           ;stkvar	_divisor @ sp[(-10)+-16]
 20401  016E6A  0EED               	movlw	-19
 20402  016E6C  AEE3               	btfss	plusw1,7,c
 20403  016E6E  D028               	goto	l7864
 20404                           
 20405                           ;stkvar	_divisor @ sp[(-10)+-16]
 20406                           ;stkvar	_divisor @ sp[(-10)+-16]
 20407  016E70  0EE6               	movlw	-26
 20408  016E72  6CE3               	negf	plusw1,c
 20409  016E74  0EE7               	movlw	-25
 20410  016E76  1EE3               	comf	plusw1,f,c
 20411  016E78  0EE8               	movlw	-24
 20412  016E7A  1EE3               	comf	plusw1,f,c
 20413  016E7C  0EE9               	movlw	-23
 20414  016E7E  1EE3               	comf	plusw1,f,c
 20415  016E80  0EEA               	movlw	-22
 20416  016E82  1EE3               	comf	plusw1,f,c
 20417  016E84  0EEB               	movlw	-21
 20418  016E86  1EE3               	comf	plusw1,f,c
 20419  016E88  0EEC               	movlw	-20
 20420  016E8A  1EE3               	comf	plusw1,f,c
 20421  016E8C  0EED               	movlw	-19
 20422  016E8E  1EE3               	comf	plusw1,f,c
 20423  016E90  E314               	bnc	u6060
 20424  016E92  0EE7               	movlw	-25
 20425  016E94  2AE3               	incf	plusw1,f,c
 20426  016E96  E311               	bnc	u6060
 20427  016E98  0EE8               	movlw	-24
 20428  016E9A  2AE3               	incf	plusw1,f,c
 20429  016E9C  E30E               	bnc	u6060
 20430  016E9E  0EE9               	movlw	-23
 20431  016EA0  2AE3               	incf	plusw1,f,c
 20432  016EA2  E30B               	bnc	u6060
 20433  016EA4  0EEA               	movlw	-22
 20434  016EA6  2AE3               	incf	plusw1,f,c
 20435  016EA8  E308               	bnc	u6060
 20436  016EAA  0EEB               	movlw	-21
 20437  016EAC  2AE3               	incf	plusw1,f,c
 20438  016EAE  E305               	bnc	u6060
 20439  016EB0  0EEC               	movlw	-20
 20440  016EB2  2AE3               	incf	plusw1,f,c
 20441  016EB4  E302               	bnc	u6060
 20442  016EB6  0EED               	movlw	-19
 20443  016EB8  2AE3               	incf	plusw1,f,c
 20444  016EBA                     u6060:
 20445                           
 20446                           ;stkvar	_sign @ sp[(-10)+8]
 20447  016EBA  0EFE               	movlw	-2
 20448  016EBC  6AE3               	clrf	plusw1,c
 20449  016EBE  2AE3               	incf	plusw1,f,c
 20450  016EC0                     l7864:
 20451                           
 20452                           ;stkvar	_dividend @ sp[(-10)+-8]
 20453  016EC0  0EF5               	movlw	-11
 20454  016EC2  AEE3               	btfss	plusw1,7,c
 20455  016EC4  D027               	goto	l7870
 20456                           
 20457                           ;stkvar	_dividend @ sp[(-10)+-8]
 20458                           ;stkvar	_dividend @ sp[(-10)+-8]
 20459  016EC6  0EEE               	movlw	-18
 20460  016EC8  6CE3               	negf	plusw1,c
 20461  016ECA  0EEF               	movlw	-17
 20462  016ECC  1EE3               	comf	plusw1,f,c
 20463  016ECE  0EF0               	movlw	-16
 20464  016ED0  1EE3               	comf	plusw1,f,c
 20465  016ED2  0EF1               	movlw	-15
 20466  016ED4  1EE3               	comf	plusw1,f,c
 20467  016ED6  0EF2               	movlw	-14
 20468  016ED8  1EE3               	comf	plusw1,f,c
 20469  016EDA  0EF3               	movlw	-13
 20470  016EDC  1EE3               	comf	plusw1,f,c
 20471  016EDE  0EF4               	movlw	-12
 20472  016EE0  1EE3               	comf	plusw1,f,c
 20473  016EE2  0EF5               	movlw	-11
 20474  016EE4  1EE3               	comf	plusw1,f,c
 20475  016EE6  E314               	bnc	u6080
 20476  016EE8  0EEF               	movlw	-17
 20477  016EEA  2AE3               	incf	plusw1,f,c
 20478  016EEC  E311               	bnc	u6080
 20479  016EEE  0EF0               	movlw	-16
 20480  016EF0  2AE3               	incf	plusw1,f,c
 20481  016EF2  E30E               	bnc	u6080
 20482  016EF4  0EF1               	movlw	-15
 20483  016EF6  2AE3               	incf	plusw1,f,c
 20484  016EF8  E30B               	bnc	u6080
 20485  016EFA  0EF2               	movlw	-14
 20486  016EFC  2AE3               	incf	plusw1,f,c
 20487  016EFE  E308               	bnc	u6080
 20488  016F00  0EF3               	movlw	-13
 20489  016F02  2AE3               	incf	plusw1,f,c
 20490  016F04  E305               	bnc	u6080
 20491  016F06  0EF4               	movlw	-12
 20492  016F08  2AE3               	incf	plusw1,f,c
 20493  016F0A  E302               	bnc	u6080
 20494  016F0C  0EF5               	movlw	-11
 20495  016F0E  2AE3               	incf	plusw1,f,c
 20496  016F10                     u6080:
 20497                           
 20498                           ;stkvar	_sign @ sp[(-10)+8]
 20499  016F10  0EFE               	movlw	-2
 20500  016F12  70E3               	btg	plusw1,0,c
 20501  016F14                     l7870:
 20502                           
 20503                           ;stkvar	_quotient @ sp[(-10)+0]
 20504  016F14  0E07               	movlw	7
 20505  016F16  6E28               	movwf	btemp^0,c
 20506  016F18  0EF6               	movlw	-10
 20507  016F1A                     u6091:
 20508  016F1A  6AE3               	clrf	plusw1,c
 20509  016F1C  2AE8               	incf	wreg,f,c
 20510  016F1E  0628               	decf	btemp^0,f,c
 20511  016F20  E2FC               	bc	u6091
 20512                           
 20513                           ;stkvar	_divisor @ sp[(-10)+-16]
 20514  016F22  0EE6               	movlw	-26
 20515  016F24  50E3               	movf	plusw1,w,c
 20516  016F26  E116               	bnz	u6100
 20517  016F28  0EE7               	movlw	-25
 20518  016F2A  50E3               	movf	plusw1,w,c
 20519  016F2C  E113               	bnz	u6100
 20520  016F2E  0EE8               	movlw	-24
 20521  016F30  50E3               	movf	plusw1,w,c
 20522  016F32  E110               	bnz	u6100
 20523  016F34  0EE9               	movlw	-23
 20524  016F36  50E3               	movf	plusw1,w,c
 20525  016F38  E10D               	bnz	u6100
 20526  016F3A  0EEA               	movlw	-22
 20527  016F3C  50E3               	movf	plusw1,w,c
 20528  016F3E  E10A               	bnz	u6100
 20529  016F40  0EEB               	movlw	-21
 20530  016F42  50E3               	movf	plusw1,w,c
 20531  016F44  E107               	bnz	u6100
 20532  016F46  0EEC               	movlw	-20
 20533  016F48  50E3               	movf	plusw1,w,c
 20534  016F4A  E104               	bnz	u6100
 20535  016F4C  0EED               	movlw	-19
 20536  016F4E  50E3               	movf	plusw1,w,c
 20537  016F50  B4D8               	btfsc	status,2,c
 20538  016F52  D088               	goto	u6130
 20539  016F54                     u6100:
 20540                           
 20541                           ;stkvar	_counter @ sp[(-10)+9]
 20542  016F54  0EFF               	movlw	-1
 20543  016F56  6AE3               	clrf	plusw1,c
 20544  016F58  D012               	goto	L24
 20545  016F5A                     l7876:
 20546                           
 20547                           ;stkvar	_divisor @ sp[(-10)+-16]
 20548  016F5A  90D8               	bcf	status,0,c
 20549  016F5C  0EE6               	movlw	-26
 20550  016F5E  36E3               	rlcf	plusw1,f,c
 20551  016F60  0EE7               	movlw	-25
 20552  016F62  36E3               	rlcf	plusw1,f,c
 20553  016F64  0EE8               	movlw	-24
 20554  016F66  36E3               	rlcf	plusw1,f,c
 20555  016F68  0EE9               	movlw	-23
 20556  016F6A  36E3               	rlcf	plusw1,f,c
 20557  016F6C  0EEA               	movlw	-22
 20558  016F6E  36E3               	rlcf	plusw1,f,c
 20559  016F70  0EEB               	movlw	-21
 20560  016F72  36E3               	rlcf	plusw1,f,c
 20561  016F74  0EEC               	movlw	-20
 20562  016F76  36E3               	rlcf	plusw1,f,c
 20563  016F78  0EED               	movlw	-19
 20564  016F7A  36E3               	rlcf	plusw1,f,c
 20565                           
 20566                           ;stkvar	_counter @ sp[(-10)+9]
 20567  016F7C  0EFF               	movlw	-1
 20568  016F7E                     L24:
 20569  016F7E  2AE3               	incf	plusw1,f,c
 20570                           
 20571                           ;stkvar	_divisor @ sp[(-10)+-16]
 20572  016F80  0EED               	movlw	-19
 20573  016F82  AEE3               	btfss	plusw1,7,c
 20574  016F84  D7EA               	goto	l7876
 20575  016F86                     u6110:
 20576                           
 20577                           ;stkvar	_quotient @ sp[(-10)+0]
 20578  016F86  90D8               	bcf	status,0,c
 20579  016F88  0EF6               	movlw	-10
 20580  016F8A  36E3               	rlcf	plusw1,f,c
 20581  016F8C  0EF7               	movlw	-9
 20582  016F8E  36E3               	rlcf	plusw1,f,c
 20583  016F90  0EF8               	movlw	-8
 20584  016F92  36E3               	rlcf	plusw1,f,c
 20585  016F94  0EF9               	movlw	-7
 20586  016F96  36E3               	rlcf	plusw1,f,c
 20587  016F98  0EFA               	movlw	-6
 20588  016F9A  36E3               	rlcf	plusw1,f,c
 20589  016F9C  0EFB               	movlw	-5
 20590  016F9E  36E3               	rlcf	plusw1,f,c
 20591  016FA0  0EFC               	movlw	-4
 20592  016FA2  36E3               	rlcf	plusw1,f,c
 20593  016FA4  0EFD               	movlw	-3
 20594  016FA6  36E3               	rlcf	plusw1,f,c
 20595                           
 20596                           ;stkvar	_divisor @ sp[(-10)+-16]
 20597                           ;stkvar	_dividend @ sp[(-10)+-8]
 20598  016FA8  50E1               	movf	fsr1l,w,c
 20599  016FAA  0FEE               	addlw	-18
 20600  016FAC  6ED9               	movwf	fsr2l,c
 20601  016FAE  50E2               	movf	fsr1h,w,c
 20602  016FB0  6EDA               	movwf	fsr2h,c
 20603  016FB2  0EFF               	movlw	255
 20604  016FB4  22DA               	addwfc	fsr2h,f,c
 20605  016FB6  0EE6               	movlw	-26
 20606  016FB8  50E3               	movf	plusw1,w,c
 20607  016FBA  5CDE               	subwf	postinc2,w,c
 20608  016FBC  0EE7               	movlw	-25
 20609  016FBE  50E3               	movf	plusw1,w,c
 20610  016FC0  58DE               	subwfb	postinc2,w,c
 20611  016FC2  0EE8               	movlw	-24
 20612  016FC4  50E3               	movf	plusw1,w,c
 20613  016FC6  58DE               	subwfb	postinc2,w,c
 20614  016FC8  0EE9               	movlw	-23
 20615  016FCA  50E3               	movf	plusw1,w,c
 20616  016FCC  58DE               	subwfb	postinc2,w,c
 20617  016FCE  0EEA               	movlw	-22
 20618  016FD0  50E3               	movf	plusw1,w,c
 20619  016FD2  58DE               	subwfb	postinc2,w,c
 20620  016FD4  0EEB               	movlw	-21
 20621  016FD6  50E3               	movf	plusw1,w,c
 20622  016FD8  58DE               	subwfb	postinc2,w,c
 20623  016FDA  0EEC               	movlw	-20
 20624  016FDC  50E3               	movf	plusw1,w,c
 20625  016FDE  58DE               	subwfb	postinc2,w,c
 20626  016FE0  0EED               	movlw	-19
 20627  016FE2  50E3               	movf	plusw1,w,c
 20628  016FE4  58DE               	subwfb	postinc2,w,c
 20629  016FE6  A0D8               	btfss	status,0,c
 20630  016FE8  D021               	goto	l7888
 20631                           
 20632                           ;stkvar	_divisor @ sp[(-10)+-16]
 20633                           ;stkvar	_dividend @ sp[(-10)+-8]
 20634  016FEA  50E1               	movf	fsr1l,w,c
 20635  016FEC  0FEE               	addlw	-18
 20636  016FEE  6ED9               	movwf	fsr2l,c
 20637  016FF0  50E2               	movf	fsr1h,w,c
 20638  016FF2  6EDA               	movwf	fsr2h,c
 20639  016FF4  0EFF               	movlw	255
 20640  016FF6  22DA               	addwfc	fsr2h,f,c
 20641  016FF8  0EE6               	movlw	-26
 20642  016FFA  50E3               	movf	plusw1,w,c
 20643  016FFC  5EDE               	subwf	postinc2,f,c
 20644  016FFE  0EE7               	movlw	-25
 20645  017000  50E3               	movf	plusw1,w,c
 20646  017002  5ADE               	subwfb	postinc2,f,c
 20647  017004  0EE8               	movlw	-24
 20648  017006  50E3               	movf	plusw1,w,c
 20649  017008  5ADE               	subwfb	postinc2,f,c
 20650  01700A  0EE9               	movlw	-23
 20651  01700C  50E3               	movf	plusw1,w,c
 20652  01700E  5ADE               	subwfb	postinc2,f,c
 20653  017010  0EEA               	movlw	-22
 20654  017012  50E3               	movf	plusw1,w,c
 20655  017014  5ADE               	subwfb	postinc2,f,c
 20656  017016  0EEB               	movlw	-21
 20657  017018  50E3               	movf	plusw1,w,c
 20658  01701A  5ADE               	subwfb	postinc2,f,c
 20659  01701C  0EEC               	movlw	-20
 20660  01701E  50E3               	movf	plusw1,w,c
 20661  017020  5ADE               	subwfb	postinc2,f,c
 20662  017022  0EED               	movlw	-19
 20663  017024  50E3               	movf	plusw1,w,c
 20664  017026  5ADE               	subwfb	postinc2,f,c
 20665                           
 20666                           ;stkvar	_quotient @ sp[(-10)+0]
 20667  017028  0EF6               	movlw	-10
 20668  01702A  80E3               	bsf	plusw1,0,c
 20669  01702C                     l7888:
 20670                           
 20671                           ;stkvar	_divisor @ sp[(-10)+-16]
 20672  01702C  90D8               	bcf	status,0,c
 20673  01702E  0EED               	movlw	-19
 20674  017030  32E3               	rrcf	plusw1,f,c
 20675  017032  0EEC               	movlw	-20
 20676  017034  32E3               	rrcf	plusw1,f,c
 20677  017036  0EEB               	movlw	-21
 20678  017038  32E3               	rrcf	plusw1,f,c
 20679  01703A  0EEA               	movlw	-22
 20680  01703C  32E3               	rrcf	plusw1,f,c
 20681  01703E  0EE9               	movlw	-23
 20682  017040  32E3               	rrcf	plusw1,f,c
 20683  017042  0EE8               	movlw	-24
 20684  017044  32E3               	rrcf	plusw1,f,c
 20685  017046  0EE7               	movlw	-25
 20686  017048  32E3               	rrcf	plusw1,f,c
 20687  01704A  0EE6               	movlw	-26
 20688  01704C  32E3               	rrcf	plusw1,f,c
 20689                           
 20690                           ;stkvar	_counter @ sp[(-10)+9]
 20691  01704E  0EFF               	movlw	-1
 20692  017050  50E3               	movf	plusw1,w,c
 20693  017052  6E28               	movwf	btemp^0,c
 20694  017054  0E01               	movlw	1
 20695  017056  5E28               	subwf	btemp^0,f,c
 20696  017058  0EFF               	movlw	-1
 20697  01705A  0060  F0A3  FFE3   	movff	btemp,plusw1
 20698  017060  A4D8               	btfss	status,2,c
 20699  017062  D791               	goto	u6110
 20700  017064                     u6130:
 20701                           
 20702                           ;stkvar	_sign @ sp[(-10)+8]
 20703  017064  0EFE               	movlw	-2
 20704  017066  50E3               	movf	plusw1,w,c
 20705  017068  B4D8               	btfsc	status,2,c
 20706  01706A  D025               	goto	u6150
 20707                           
 20708                           ;stkvar	_quotient @ sp[(-10)+0]
 20709                           ;stkvar	_quotient @ sp[(-10)+0]
 20710  01706C  0EF6               	movlw	-10
 20711  01706E  6CE3               	negf	plusw1,c
 20712  017070  0EF7               	movlw	-9
 20713  017072  1EE3               	comf	plusw1,f,c
 20714  017074  0EF8               	movlw	-8
 20715  017076  1EE3               	comf	plusw1,f,c
 20716  017078  0EF9               	movlw	-7
 20717  01707A  1EE3               	comf	plusw1,f,c
 20718  01707C  0EFA               	movlw	-6
 20719  01707E  1EE3               	comf	plusw1,f,c
 20720  017080  0EFB               	movlw	-5
 20721  017082  1EE3               	comf	plusw1,f,c
 20722  017084  0EFC               	movlw	-4
 20723  017086  1EE3               	comf	plusw1,f,c
 20724  017088  0EFD               	movlw	-3
 20725  01708A  1EE3               	comf	plusw1,f,c
 20726  01708C  E314               	bnc	u6150
 20727  01708E  0EF7               	movlw	-9
 20728  017090  2AE3               	incf	plusw1,f,c
 20729  017092  E311               	bnc	u6150
 20730  017094  0EF8               	movlw	-8
 20731  017096  2AE3               	incf	plusw1,f,c
 20732  017098  E30E               	bnc	u6150
 20733  01709A  0EF9               	movlw	-7
 20734  01709C  2AE3               	incf	plusw1,f,c
 20735  01709E  E30B               	bnc	u6150
 20736  0170A0  0EFA               	movlw	-6
 20737  0170A2  2AE3               	incf	plusw1,f,c
 20738  0170A4  E308               	bnc	u6150
 20739  0170A6  0EFB               	movlw	-5
 20740  0170A8  2AE3               	incf	plusw1,f,c
 20741  0170AA  E305               	bnc	u6150
 20742  0170AC  0EFC               	movlw	-4
 20743  0170AE  2AE3               	incf	plusw1,f,c
 20744  0170B0  E302               	bnc	u6150
 20745  0170B2  0EFD               	movlw	-3
 20746  0170B4  2AE3               	incf	plusw1,f,c
 20747  0170B6                     u6150:
 20748                           
 20749                           ;stkvar	_quotient @ sp[(-10)+0]
 20750  0170B6  0EF6               	movlw	246
 20751  0170B8  24E1               	addwf	fsr1l,w,c
 20752  0170BA  6ED9               	movwf	fsr2l,c
 20753  0170BC  0EFF               	movlw	255
 20754  0170BE  20E2               	addwfc	fsr1h,w,c
 20755  0170C0  6EDA               	movwf	fsr2h,c
 20756                           
 20757                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20758  0170C2  0E08               	movlw	8
 20759  0170C4  6E28               	movwf	btemp^0,c
 20760  0170C6  0EEE               	movlw	-18
 20761  0170C8                     us616999:
 20762  0170C8  006F FF7B FFE3     	movff	postinc2,plusw1
 20763  0170CE  28E8               	incf	wreg,w,c
 20764  0170D0  2E28               	decfsz	btemp^0,f,c
 20765  0170D2  D7FA               	bra	us616999
 20766                           
 20767                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20768  0170D4  0EF6               	movlw	246
 20769  0170D6  26E1               	addwf	fsr1l,f,c
 20770  0170D8  0EFF               	movlw	255
 20771  0170DA  22E2               	addwfc	fsr1h,f,c
 20772  0170DC  0012               	return		;funcret
 20773  0170DE                     __end_of___aodiv:
 20774                           	opt callstack 0
 20775                           
 20776 ;; *************** function _ctoa *****************
 20777 ;; Defined at:
 20778 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20779 ;; Parameters:    Size  Location     Type
 20780 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20781 ;;		 -> f(6), NULL(0), 
 20782 ;;  c               1  [STACK] unsigned char 
 20783 ;; Auto vars:     Size  Location     Type
 20784 ;;  w               2  [STACK] int 
 20785 ;;  l               2    0        int 
 20786 ;; Return value:  Size  Location     Type
 20787 ;;                  2  [STACK] int 
 20788 ;; Registers used:
 20789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20790 ;; Tracked objects:
 20791 ;;		On entry : 0/0
 20792 ;;		On exit  : 0/0
 20793 ;;		Unchanged: 0/0
 20794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20799 ;;Total ram usage:        0 bytes
 20800 ;; Hardware stack levels used:    1
 20801 ;; Hardware stack levels required when called:   20
 20802 ;; This function calls:
 20803 ;;		_pad
 20804 ;; This function is called by:
 20805 ;;		_vfpfcnvrt
 20806 ;; This function uses a reentrant model
 20807 ;;
 20808                           
 20809                           	psect	text70
 20810  01A22E                     __ptext70:
 20811                           	opt callstack 0
 20812  01A22E                     _ctoa:
 20813                           	opt callstack 0
 20814                           
 20815                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20816  01A22E  52E6               	movf	postinc1,f,c
 20817  01A230  52E6               	movf	postinc1,f,c
 20818                           
 20819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20820                           
 20821                           ;incstack = 0
 20822 ;; hardware stack exceeded
 20823  01A232  5048               	movf	_width^0,w,c
 20824  01A234  1049               	iorwf	(_width+1)^0,w,c
 20825  01A236  A4D8               	btfss	status,2,c
 20826  01A238  D009               	goto	l11496
 20827                           
 20828                           ;stkvar	_w @ sp[(-2)+0]
 20829  01A23A  0EFE               	movlw	-2
 20830  01A23C  0060  F123  FFE3   	movff	_width,plusw1
 20831  01A242  0EFF               	movlw	-1
 20832  01A244  0060  F127  FFE3   	movff	_width+1,plusw1
 20833  01A24A  D016               	goto	l11498
 20834  01A24C                     l11496:
 20835  01A24C  0EFF               	movlw	255
 20836  01A24E  6E32               	movwf	(btemp+10)^0,c
 20837  01A250  0EFF               	movlw	255
 20838  01A252  6E33               	movwf	(btemp+11)^0,c
 20839  01A254  0060  F120  F030   	movff	_width,btemp+8
 20840  01A25A  0060  F124  F031   	movff	_width+1,btemp+9
 20841  01A260  5032               	movf	(btemp+10)^0,w,c
 20842  01A262  2630               	addwf	(btemp+8)^0,f,c
 20843  01A264  5033               	movf	(btemp+11)^0,w,c
 20844  01A266  2231               	addwfc	(btemp+9)^0,f,c
 20845                           
 20846                           ;stkvar	_w @ sp[(-2)+0]
 20847  01A268  0EFE               	movlw	-2
 20848  01A26A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 20849  01A270  0EFF               	movlw	-1
 20850  01A272  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 20851  01A278                     l11498:
 20852                           
 20853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20854                           ;stkvar	_c @ sp[(-2)+-3]
 20855  01A278  0EFB               	movlw	-5
 20856  01A27A  006F FF8C  F3AE    	movff	plusw1,_dbuf
 20857                           
 20858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20859  01A280  0103               	movlb	3	; () banked
 20860  01A282  6BAF               	clrf	(_dbuf+1)& (0+255),b
 20861                           
 20862                           ; BSR set to: 3
 20863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20864                           ;stkvar	_w @ sp[(-2)+0]
 20865  01A284  0EFE               	movlw	-2
 20866  01A286  006F FF8F FFE6     	movff	plusw1,postinc1
 20867  01A28C  006F FF8F FFE6     	movff	plusw1,postinc1
 20868  01A292  0EAE               	movlw	low _dbuf
 20869  01A294  6EE6               	movwf	postinc1,c
 20870  01A296  0E03               	movlw	high _dbuf
 20871  01A298  6EE6               	movwf	postinc1,c
 20872                           
 20873                           ;stkvar	_fp @ sp[(-6)+-2]
 20874  01A29A  0EF8               	movlw	-8
 20875  01A29C  006F FF8F FFE6     	movff	plusw1,postinc1
 20876  01A2A2  006F FF8F FFE6     	movff	plusw1,postinc1
 20877  01A2A8  EC77  F0C8         	call	_pad	;wreg free
 20878                           
 20879                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20880  01A2AC  0EFB               	movlw	251
 20881  01A2AE  26E1               	addwf	fsr1l,f,c
 20882  01A2B0  0EFF               	movlw	255
 20883  01A2B2  22E2               	addwfc	fsr1h,f,c
 20884  01A2B4  0012               	return		;funcret
 20885  01A2B6                     __end_of_ctoa:
 20886                           	opt callstack 0
 20887                           
 20888 ;; *************** function _pad *****************
 20889 ;; Defined at:
 20890 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20891 ;; Parameters:    Size  Location     Type
 20892 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20893 ;;		 -> f(6), NULL(0), 
 20894 ;;  buf             2  [STACK] PTR unsigned char 
 20895 ;;		 -> dbuf(80), 
 20896 ;;  p               2  [STACK] int 
 20897 ;; Auto vars:     Size  Location     Type
 20898 ;;  w               2  [STACK] int 
 20899 ;;  i               2  [STACK] int 
 20900 ;; Return value:  Size  Location     Type
 20901 ;;                  2  [STACK] int 
 20902 ;; Registers used:
 20903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20904 ;; Tracked objects:
 20905 ;;		On entry : 0/3
 20906 ;;		On exit  : 0/0
 20907 ;;		Unchanged: 0/0
 20908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20913 ;;Total ram usage:        0 bytes
 20914 ;; Hardware stack levels used:    1
 20915 ;; Hardware stack levels required when called:   19
 20916 ;; This function calls:
 20917 ;;		_fputc
 20918 ;;		_fputs
 20919 ;;		_strlen
 20920 ;; This function is called by:
 20921 ;;		_ctoa
 20922 ;;		_dtoa
 20923 ;;		_efgtoa
 20924 ;;		_utoa
 20925 ;;		_xtoa
 20926 ;; This function uses a reentrant model
 20927 ;;
 20928                           
 20929                           	psect	text71
 20930  0190EE                     __ptext71:
 20931                           	opt callstack 0
 20932  0190EE                     _pad:
 20933                           	opt callstack 0
 20934                           
 20935                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20936  0190EE  52E6               	movf	postinc1,f,c
 20937  0190F0  52E6               	movf	postinc1,f,c
 20938  0190F2  52E6               	movf	postinc1,f,c
 20939  0190F4  52E6               	movf	postinc1,f,c
 20940                           
 20941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20942                           
 20943                           ;incstack = 0
 20944 ;; hardware stack exceeded
 20945  0190F6  A04C               	btfss	_flags^0,0,c
 20946  0190F8  D010               	goto	l11428
 20947                           
 20948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20949                           ;stkvar	_fp @ sp[(-4)+-2]
 20950  0190FA  0EFA               	movlw	-6
 20951  0190FC  006F FF8F FFE6     	movff	plusw1,postinc1
 20952  019102  006F FF8F FFE6     	movff	plusw1,postinc1
 20953                           
 20954                           ;stkvar	_buf @ sp[(-6)+-4]
 20955  019108  0EF6               	movlw	-10
 20956  01910A  006F FF8F FFE6     	movff	plusw1,postinc1
 20957  019110  006F FF8F FFE6     	movff	plusw1,postinc1
 20958  019116  ECA7  F0CF         	call	_fputs	;wreg free
 20959  01911A                     l11428:
 20960                           
 20961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20962                           ;stkvar	_p @ sp[(-4)+-6]
 20963  01911A  0EF7               	movlw	-9
 20964  01911C  BEE3               	btfsc	plusw1,7,c
 20965  01911E  D011               	goto	l11432
 20966                           
 20967                           ;stkvar	_p @ sp[(-4)+-6]
 20968                           ;stkvar	_w @ sp[(-4)+0]
 20969  019120  0EF6               	movlw	-10
 20970  019122  006F FF8C  F028    	movff	plusw1,btemp
 20971  019128  0EFC               	movlw	-4
 20972  01912A  0060  F0A3  FFE3   	movff	btemp,plusw1
 20973  019130  0EF7               	movlw	-9
 20974  019132  006F FF8C  F028    	movff	plusw1,btemp
 20975  019138  0EFD               	movlw	-3
 20976  01913A  0060  F0A3  FFE3   	movff	btemp,plusw1
 20977  019140  D004               	goto	l2110
 20978  019142                     l11432:
 20979                           
 20980                           ;stkvar	_w @ sp[(-4)+0]
 20981  019142  0EFC               	movlw	-4
 20982  019144  6AE3               	clrf	plusw1,c
 20983  019146  0EFD               	movlw	-3
 20984  019148  6AE3               	clrf	plusw1,c
 20985  01914A                     l2110:
 20986                           
 20987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20988                           ;stkvar	_i @ sp[(-4)+2]
 20989  01914A  0EFE               	movlw	-2
 20990  01914C  6AE3               	clrf	plusw1,c
 20991  01914E  0EFF               	movlw	-1
 20992  019150  6AE3               	clrf	plusw1,c
 20993                           
 20994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20995  019152  D01E               	goto	l11438
 20996  019154                     l11434:
 20997                           
 20998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20999                           ;stkvar	_fp @ sp[(-4)+-2]
 21000  019154  0EFA               	movlw	-6
 21001  019156  006F FF8F FFE6     	movff	plusw1,postinc1
 21002  01915C  006F FF8F FFE6     	movff	plusw1,postinc1
 21003  019162  0E20               	movlw	32
 21004  019164  6EE6               	movwf	postinc1,c
 21005  019166  0E00               	movlw	0
 21006  019168  6EE6               	movwf	postinc1,c
 21007  01916A  EC59  F0C7         	call	_fputc	;wreg free
 21008                           
 21009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21010                           ;stkvar	_i @ sp[(-4)+2]
 21011  01916E  0EFE               	movlw	-2
 21012  019170  50E3               	movf	plusw1,w,c
 21013  019172  0F01               	addlw	1
 21014  019174  6E28               	movwf	btemp^0,c
 21015  019176  0EFE               	movlw	-2
 21016  019178  0060  F0A3  FFE3   	movff	btemp,plusw1
 21017  01917E  6A28               	clrf	btemp^0,c
 21018  019180  0EFF               	movlw	-1
 21019  019182  50E3               	movf	plusw1,w,c
 21020  019184  2028               	addwfc	btemp^0,w,c
 21021  019186  6E28               	movwf	btemp^0,c
 21022  019188  0EFF               	movlw	-1
 21023  01918A  0060  F0A3  FFE3   	movff	btemp,plusw1
 21024  019190                     l11438:
 21025                           
 21026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21027                           ;stkvar	_w @ sp[(-4)+0]
 21028                           ;stkvar	_i @ sp[(-4)+2]
 21029  019190  50E1               	movf	fsr1l,w,c
 21030  019192  0FFE               	addlw	-2
 21031  019194  6ED9               	movwf	fsr2l,c
 21032  019196  50E2               	movf	fsr1h,w,c
 21033  019198  6EDA               	movwf	fsr2h,c
 21034  01919A  0EFF               	movlw	255
 21035  01919C  22DA               	addwfc	fsr2h,f,c
 21036  01919E  0EFC               	movlw	-4
 21037  0191A0  50E3               	movf	plusw1,w,c
 21038  0191A2  5CDE               	subwf	postinc2,w,c
 21039  0191A4  50DE               	movf	postinc2,w,c
 21040  0191A6  0A80               	xorlw	128
 21041  0191A8  6E28               	movwf	btemp^0,c
 21042  0191AA  0EFD               	movlw	-3
 21043  0191AC  50E3               	movf	plusw1,w,c
 21044  0191AE  0A80               	xorlw	128
 21045  0191B0  5828               	subwfb	btemp^0,w,c
 21046  0191B2  A0D8               	btfss	status,0,c
 21047  0191B4  D7CF               	goto	l11434
 21048                           
 21049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21050  0191B6  B04C               	btfsc	_flags^0,0,c
 21051  0191B8  D010               	goto	l11442
 21052                           
 21053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21054                           ;stkvar	_fp @ sp[(-4)+-2]
 21055  0191BA  0EFA               	movlw	-6
 21056  0191BC  006F FF8F FFE6     	movff	plusw1,postinc1
 21057  0191C2  006F FF8F FFE6     	movff	plusw1,postinc1
 21058                           
 21059                           ;stkvar	_buf @ sp[(-6)+-4]
 21060  0191C8  0EF6               	movlw	-10
 21061  0191CA  006F FF8F FFE6     	movff	plusw1,postinc1
 21062  0191D0  006F FF8F FFE6     	movff	plusw1,postinc1
 21063  0191D6  ECA7  F0CF         	call	_fputs	;wreg free
 21064  0191DA                     l11442:
 21065                           
 21066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21067                           ;stkvar	_w @ sp[(-4)+0]
 21068                           ;stkvar	_buf @ sp[(-4)+-4]
 21069  0191DA  0EF8               	movlw	-8
 21070  0191DC  006F FF8F FFE6     	movff	plusw1,postinc1
 21071  0191E2  006F FF8F FFE6     	movff	plusw1,postinc1
 21072  0191E8  EC56  F0CF         	call	_strlen	;wreg free
 21073  0191EC  0EFC               	movlw	-4
 21074  0191EE  50E3               	movf	plusw1,w,c
 21075  0191F0  2628               	addwf	btemp^0,f,c
 21076  0191F2  0EFD               	movlw	-3
 21077  0191F4  50E3               	movf	plusw1,w,c
 21078  0191F6  2229               	addwfc	(btemp+1)^0,f,c
 21079                           
 21080                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21081  0191F8  0EF6               	movlw	246
 21082  0191FA  26E1               	addwf	fsr1l,f,c
 21083  0191FC  0EFF               	movlw	255
 21084  0191FE  22E2               	addwfc	fsr1h,f,c
 21085  019200  0012               	return		;funcret
 21086  019202                     __end_of_pad:
 21087                           	opt callstack 0
 21088                           
 21089 ;; *************** function _strlen *****************
 21090 ;; Defined at:
 21091 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21092 ;; Parameters:    Size  Location     Type
 21093 ;;  s               2  [STACK] PTR const unsigned char 
 21094 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21095 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21096 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21097 ;;		 -> V(190), 
 21098 ;; Auto vars:     Size  Location     Type
 21099 ;;  a               2  [STACK] PTR const unsigned char 
 21100 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21101 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21102 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21103 ;;		 -> V(190), 
 21104 ;; Return value:  Size  Location     Type
 21105 ;;                  2  [STACK] unsigned int 
 21106 ;; Registers used:
 21107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21108 ;; Tracked objects:
 21109 ;;		On entry : 0/0
 21110 ;;		On exit  : 0/0
 21111 ;;		Unchanged: 0/0
 21112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21117 ;;Total ram usage:        0 bytes
 21118 ;; Hardware stack levels used:    1
 21119 ;; Hardware stack levels required when called:   15
 21120 ;; This function calls:
 21121 ;;		Nothing
 21122 ;; This function is called by:
 21123 ;;		_eaDogM_WriteString
 21124 ;;		_spinners
 21125 ;;		_calc_bsoc
 21126 ;;		_pad
 21127 ;;		_stoa
 21128 ;; This function uses a reentrant model
 21129 ;;
 21130                           
 21131                           	psect	text72
 21132  019EAC                     __ptext72:
 21133                           	opt callstack 0
 21134  019EAC                     _strlen:
 21135                           	opt callstack 0
 21136                           
 21137                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21138  019EAC  52E6               	movf	postinc1,f,c
 21139  019EAE  52E6               	movf	postinc1,f,c
 21140                           
 21141                           ;stkvar	_s @ sp[(-2)+-2]
 21142                           
 21143                           ;incstack = 0
 21144 ;; hardware stack exceeded
 21145  019EB0  0EFC               	movlw	-4
 21146  019EB2  006F FF8C  F032    	movff	plusw1,btemp+10
 21147  019EB8  0EFD               	movlw	-3
 21148  019EBA  006F FF8C  F033    	movff	plusw1,btemp+11
 21149                           
 21150                           ;stkvar	_a @ sp[(-2)+0]
 21151  019EC0  0EFF               	movlw	-1
 21152  019EC2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21153  019EC8  0EFE               	movlw	-2
 21154  019ECA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 21155  019ED0  D011               	goto	l7482
 21156  019ED2                     l7480:
 21157                           
 21158                           ;stkvar	_s @ sp[(-2)+-2]
 21159  019ED2  0EFC               	movlw	-4
 21160  019ED4  50E3               	movf	plusw1,w,c
 21161  019ED6  0F01               	addlw	1
 21162  019ED8  6E28               	movwf	btemp^0,c
 21163  019EDA  0EFC               	movlw	-4
 21164  019EDC  0060  F0A3  FFE3   	movff	btemp,plusw1
 21165  019EE2  6A28               	clrf	btemp^0,c
 21166  019EE4  0EFD               	movlw	-3
 21167  019EE6  50E3               	movf	plusw1,w,c
 21168  019EE8  2028               	addwfc	btemp^0,w,c
 21169  019EEA  6E28               	movwf	btemp^0,c
 21170  019EEC  0EFD               	movlw	-3
 21171  019EEE  0060  F0A3  FFE3   	movff	btemp,plusw1
 21172  019EF4                     l7482:
 21173                           
 21174                           ;stkvar	_s @ sp[(-2)+-2]
 21175  019EF4  0EFC               	movlw	-4
 21176  019EF6  006F FF8F FFF6     	movff	plusw1,tblptrl
 21177  019EFC  0EFD               	movlw	-3
 21178  019EFE  006F FF8F FFF7     	movff	plusw1,tblptrh
 21179  019F04  0E00               	movlw	low (__mediumconst shr (0+16))
 21180  019F06  6EF8               	movwf	tblptru,c
 21181  019F08  0E1F               	movlw	(high __ramtop+-1)
 21182  019F0A  64F7               	cpfsgt	tblptrh,c
 21183  019F0C  D003               	bra	u5227
 21184  019F0E  0008               	tblrd		*
 21185  019F10  50F5               	movf	tablat,w,c
 21186  019F12  D007               	bra	u5220
 21187  019F14                     u5227:
 21188  019F14  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21189  019F1A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21190  019F20  50EF               	movf	indf0,w,c
 21191  019F22                     u5220:
 21192  019F22  0900               	iorlw	0
 21193  019F24  A4D8               	btfss	status,2,c
 21194  019F26  D7D5               	goto	l7480
 21195                           
 21196                           ;stkvar	_a @ sp[(-2)+0]
 21197                           ;stkvar	_s @ sp[(-2)+-2]
 21198  019F28  0EFC               	movlw	-4
 21199  019F2A  006F FF8C  F028    	movff	plusw1,btemp
 21200  019F30  0EFD               	movlw	-3
 21201  019F32  006F FF8C  F029    	movff	plusw1,btemp+1
 21202  019F38  0EFE               	movlw	-2
 21203  019F3A  50E3               	movf	plusw1,w,c
 21204  019F3C  5E28               	subwf	btemp^0,f,c
 21205  019F3E  0EFF               	movlw	-1
 21206  019F40  50E3               	movf	plusw1,w,c
 21207  019F42  5A29               	subwfb	(btemp+1)^0,f,c
 21208                           
 21209                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21210  019F44  52E5               	movf	postdec1,f,c
 21211  019F46  52E5               	movf	postdec1,f,c
 21212  019F48  52E5               	movf	postdec1,f,c
 21213  019F4A  52E5               	movf	postdec1,f,c
 21214  019F4C  0012               	return		;funcret
 21215  019F4E                     __end_of_strlen:
 21216                           	opt callstack 0
 21217                           
 21218 ;; *************** function _fputs *****************
 21219 ;; Defined at:
 21220 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21221 ;; Parameters:    Size  Location     Type
 21222 ;;  s               2  [STACK] PTR const unsigned char 
 21223 ;;		 -> dbuf(80), 
 21224 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21225 ;;		 -> f(6), NULL(0), 
 21226 ;; Auto vars:     Size  Location     Type
 21227 ;;  i               2  [STACK] int 
 21228 ;;  c               1  [STACK] unsigned char 
 21229 ;; Return value:  Size  Location     Type
 21230 ;;                  2  [STACK] int 
 21231 ;; Registers used:
 21232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21233 ;; Tracked objects:
 21234 ;;		On entry : 0/3
 21235 ;;		On exit  : 0/0
 21236 ;;		Unchanged: 0/0
 21237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21242 ;;Total ram usage:        0 bytes
 21243 ;; Hardware stack levels used:    1
 21244 ;; Hardware stack levels required when called:   18
 21245 ;; This function calls:
 21246 ;;		_fputc
 21247 ;; This function is called by:
 21248 ;;		_pad
 21249 ;; This function uses a reentrant model
 21250 ;;
 21251                           
 21252                           	psect	text73
 21253  019F4E                     __ptext73:
 21254                           	opt callstack 0
 21255  019F4E                     _fputs:
 21256                           	opt callstack 0
 21257                           
 21258                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21259  019F4E  52E6               	movf	postinc1,f,c
 21260  019F50  52E6               	movf	postinc1,f,c
 21261  019F52  52E6               	movf	postinc1,f,c
 21262                           
 21263                           ;stkvar	_i @ sp[(-3)+0]
 21264                           
 21265                           ;incstack = 0
 21266 ;; hardware stack exceeded
 21267  019F54  0EFD               	movlw	-3
 21268  019F56  6AE3               	clrf	plusw1,c
 21269  019F58  0EFE               	movlw	-2
 21270  019F5A  6AE3               	clrf	plusw1,c
 21271  019F5C  D01F               	goto	l11422
 21272  019F5E                     l11418:
 21273                           
 21274                           ;stkvar	_fp @ sp[(-3)+-4]
 21275  019F5E  0EF9               	movlw	-7
 21276  019F60  006F FF8F FFE6     	movff	plusw1,postinc1
 21277  019F66  006F FF8F FFE6     	movff	plusw1,postinc1
 21278                           
 21279                           ;stkvar	_c @ sp[(-5)+2]
 21280  019F6C  0EFD               	movlw	-3
 21281  019F6E  50E3               	movf	plusw1,w,c
 21282  019F70  6EE6               	movwf	postinc1,c
 21283  019F72  0E00               	movlw	0
 21284  019F74  6EE6               	movwf	postinc1,c
 21285  019F76  EC59  F0C7         	call	_fputc	;wreg free
 21286                           
 21287                           ;stkvar	_i @ sp[(-3)+0]
 21288  019F7A  0EFD               	movlw	-3
 21289  019F7C  50E3               	movf	plusw1,w,c
 21290  019F7E  0F01               	addlw	1
 21291  019F80  6E28               	movwf	btemp^0,c
 21292  019F82  0EFD               	movlw	-3
 21293  019F84  0060  F0A3  FFE3   	movff	btemp,plusw1
 21294  019F8A  6A28               	clrf	btemp^0,c
 21295  019F8C  0EFE               	movlw	-2
 21296  019F8E  50E3               	movf	plusw1,w,c
 21297  019F90  2028               	addwfc	btemp^0,w,c
 21298  019F92  6E28               	movwf	btemp^0,c
 21299  019F94  0EFE               	movlw	-2
 21300  019F96  0060  F0A3  FFE3   	movff	btemp,plusw1
 21301  019F9C                     l11422:
 21302                           
 21303                           ;stkvar	_i @ sp[(-3)+0]
 21304  019F9C  0EFD               	movlw	-3
 21305  019F9E  006F FF8C  F032    	movff	plusw1,btemp+10
 21306  019FA4  0EFE               	movlw	-2
 21307  019FA6  006F FF8C  F033    	movff	plusw1,btemp+11
 21308                           
 21309                           ;stkvar	_s @ sp[(-3)+-2]
 21310  019FAC  0EFB               	movlw	-5
 21311  019FAE  006F FF8C  F030    	movff	plusw1,btemp+8
 21312  019FB4  0EFC               	movlw	-4
 21313  019FB6  006F FF8C  F031    	movff	plusw1,btemp+9
 21314  019FBC  5032               	movf	(btemp+10)^0,w,c
 21315  019FBE  2430               	addwf	(btemp+8)^0,w,c
 21316  019FC0  6ED9               	movwf	fsr2l,c
 21317  019FC2  5033               	movf	(btemp+11)^0,w,c
 21318  019FC4  2031               	addwfc	(btemp+9)^0,w,c
 21319  019FC6  6EDA               	movwf	fsr2h,c
 21320  019FC8  50DF               	movf	indf2,w,c
 21321  019FCA  6E33               	movwf	(btemp+11)^0,c
 21322                           
 21323                           ;stkvar	_c @ sp[(-3)+2]
 21324  019FCC  0EFF               	movlw	-1
 21325  019FCE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21326  019FD4  0EFF               	movlw	-1
 21327  019FD6  50E3               	movf	plusw1,w,c
 21328  019FD8  A4D8               	btfss	status,2,c
 21329  019FDA  D7C1               	goto	l11418
 21330                           
 21331                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21332  019FDC  0EF9               	movlw	249
 21333  019FDE  26E1               	addwf	fsr1l,f,c
 21334  019FE0  0EFF               	movlw	255
 21335  019FE2  22E2               	addwfc	fsr1h,f,c
 21336  019FE4  0012               	return		;funcret
 21337  019FE6                     __end_of_fputs:
 21338                           	opt callstack 0
 21339                           
 21340 ;; *************** function _fputc *****************
 21341 ;; Defined at:
 21342 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21343 ;; Parameters:    Size  Location     Type
 21344 ;;  c               2  [STACK] int 
 21345 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21346 ;;		 -> f(6), NULL(0), 
 21347 ;; Auto vars:     Size  Location     Type
 21348 ;;		None
 21349 ;; Return value:  Size  Location     Type
 21350 ;;                  2  [STACK] int 
 21351 ;; Registers used:
 21352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21353 ;; Tracked objects:
 21354 ;;		On entry : 0/0
 21355 ;;		On exit  : 0/0
 21356 ;;		Unchanged: 0/0
 21357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21362 ;;Total ram usage:        0 bytes
 21363 ;; Hardware stack levels used:    1
 21364 ;; Hardware stack levels required when called:   17
 21365 ;; This function calls:
 21366 ;;		_putch
 21367 ;; This function is called by:
 21368 ;;		_pad
 21369 ;;		_stoa
 21370 ;;		_vfpfcnvrt
 21371 ;;		_fputs
 21372 ;; This function uses a reentrant model
 21373 ;;
 21374                           
 21375                           	psect	text74
 21376  018EB2                     __ptext74:
 21377                           	opt callstack 0
 21378  018EB2                     _fputc:
 21379                           	opt callstack 0
 21380                           
 21381                           ;stkvar	_fp @ sp[(0)+-4]
 21382                           
 21383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21384                           ;incstack = 0
 21385 ;; hardware stack exceeded
 21386  018EB2  0EFC               	movlw	-4
 21387  018EB4  006F FF8C  F028    	movff	plusw1,btemp
 21388  018EBA  0EFD               	movlw	-3
 21389  018EBC  50E3               	movf	plusw1,w,c
 21390  018EBE  1028               	iorwf	btemp^0,w,c
 21391  018EC0  B4D8               	btfsc	status,2,c
 21392  018EC2  D009               	goto	u10350
 21393                           
 21394                           ;stkvar	_fp @ sp[(0)+-4]
 21395  018EC4  0EFC               	movlw	-4
 21396  018EC6  006F FF8C  F028    	movff	plusw1,btemp
 21397  018ECC  0EFD               	movlw	-3
 21398  018ECE  50E3               	movf	plusw1,w,c
 21399  018ED0  1028               	iorwf	btemp^0,w,c
 21400  018ED2  A4D8               	btfss	status,2,c
 21401  018ED4  D006               	goto	l11406
 21402  018ED6                     u10350:
 21403                           
 21404                           ;stkvar	_c @ sp[(0)+-2]
 21405  018ED6  0EFE               	movlw	-2
 21406  018ED8  50E3               	movf	plusw1,w,c
 21407  018EDA  6EE6               	movwf	postinc1,c
 21408  018EDC  ECBA  F0DA         	call	_putch	;wreg free
 21409  018EE0  D075               	goto	l3156
 21410  018EE2                     l11406:
 21411                           
 21412                           ;stkvar	_fp @ sp[(0)+-4]
 21413  018EE2  0EFC               	movlw	-4
 21414  018EE4  006F FF8C  F032    	movff	plusw1,btemp+10
 21415  018EEA  0EFD               	movlw	-3
 21416  018EEC  006F FF8C  F033    	movff	plusw1,btemp+11
 21417  018EF2  0E04               	movlw	4
 21418  018EF4  2432               	addwf	(btemp+10)^0,w,c
 21419  018EF6  6ED9               	movwf	fsr2l,c
 21420  018EF8  0E00               	movlw	0
 21421  018EFA  2033               	addwfc	(btemp+11)^0,w,c
 21422  018EFC  6EDA               	movwf	fsr2h,c
 21423  018EFE  50DE               	movf	postinc2,w,c
 21424  018F00  10DE               	iorwf	postinc2,w,c
 21425  018F02  B4D8               	btfsc	status,2,c
 21426  018F04  D026               	goto	u10370
 21427                           
 21428                           ;stkvar	_fp @ sp[(0)+-4]
 21429  018F06  0EFC               	movlw	-4
 21430  018F08  006F FF8C  F032    	movff	plusw1,btemp+10
 21431  018F0E  0EFD               	movlw	-3
 21432  018F10  006F FF8C  F033    	movff	plusw1,btemp+11
 21433  018F16  0E04               	movlw	4
 21434  018F18  2432               	addwf	(btemp+10)^0,w,c
 21435  018F1A  6ED9               	movwf	fsr2l,c
 21436  018F1C  0E00               	movlw	0
 21437  018F1E  2033               	addwfc	(btemp+11)^0,w,c
 21438  018F20  6EDA               	movwf	fsr2h,c
 21439                           
 21440                           ;stkvar	_fp @ sp[(0)+-4]
 21441  018F22  0EFC               	movlw	-4
 21442  018F24  006F FF8C  F032    	movff	plusw1,btemp+10
 21443  018F2A  0EFD               	movlw	-3
 21444  018F2C  006F FF8C  F033    	movff	plusw1,btemp+11
 21445  018F32  0E02               	movlw	2
 21446  018F34  2432               	addwf	(btemp+10)^0,w,c
 21447  018F36  6EE9               	movwf	fsr0l,c
 21448  018F38  0E00               	movlw	0
 21449  018F3A  2033               	addwfc	(btemp+11)^0,w,c
 21450  018F3C  6EEA               	movwf	fsr0h,c
 21451  018F3E  50DE               	movf	postinc2,w,c
 21452  018F40  5CEE               	subwf	postinc0,w,c
 21453  018F42  50EE               	movf	postinc0,w,c
 21454  018F44  0A80               	xorlw	128
 21455  018F46  6E28               	movwf	btemp^0,c
 21456  018F48  50DE               	movf	postinc2,w,c
 21457  018F4A  0A80               	xorlw	128
 21458  018F4C  5828               	subwfb	btemp^0,w,c
 21459  018F4E  B0D8               	btfsc	status,0,c
 21460  018F50  D03D               	goto	l3156
 21461  018F52                     u10370:
 21462                           
 21463                           ;stkvar	_c @ sp[(0)+-2]
 21464                           ;stkvar	_fp @ sp[(0)+-4]
 21465  018F52  0EFC               	movlw	-4
 21466  018F54  006F FF8C  F032    	movff	plusw1,btemp+10
 21467  018F5A  0EFD               	movlw	-3
 21468  018F5C  006F FF8C  F033    	movff	plusw1,btemp+11
 21469  018F62  0E02               	movlw	2
 21470  018F64  2432               	addwf	(btemp+10)^0,w,c
 21471  018F66  6ED9               	movwf	fsr2l,c
 21472  018F68  0E00               	movlw	0
 21473  018F6A  2033               	addwfc	(btemp+11)^0,w,c
 21474  018F6C  6EDA               	movwf	fsr2h,c
 21475  018F6E  006F FF78  F032    	movff	postinc2,btemp+10
 21476  018F74  006F FF74  F033    	movff	postdec2,btemp+11
 21477                           
 21478                           ;stkvar	_fp @ sp[(0)+-4]
 21479  018F7A  0EFC               	movlw	-4
 21480  018F7C  006F FF8F FFD9     	movff	plusw1,fsr2l
 21481  018F82  0EFD               	movlw	-3
 21482  018F84  006F FF8F FFDA     	movff	plusw1,fsr2h
 21483  018F8A  006F FF78  F030    	movff	postinc2,btemp+8
 21484  018F90  006F FF74  F031    	movff	postdec2,btemp+9
 21485  018F96  5032               	movf	(btemp+10)^0,w,c
 21486  018F98  2430               	addwf	(btemp+8)^0,w,c
 21487  018F9A  6ED9               	movwf	fsr2l,c
 21488  018F9C  5033               	movf	(btemp+11)^0,w,c
 21489  018F9E  2031               	addwfc	(btemp+9)^0,w,c
 21490  018FA0  6EDA               	movwf	fsr2h,c
 21491  018FA2  0EFE               	movlw	-2
 21492  018FA4  006F FF8F FFDF     	movff	plusw1,indf2
 21493                           
 21494                           ;stkvar	_fp @ sp[(0)+-4]
 21495  018FAA  0EFC               	movlw	-4
 21496  018FAC  006F FF8C  F032    	movff	plusw1,btemp+10
 21497  018FB2  0EFD               	movlw	-3
 21498  018FB4  006F FF8C  F033    	movff	plusw1,btemp+11
 21499  018FBA  0E02               	movlw	2
 21500  018FBC  2432               	addwf	(btemp+10)^0,w,c
 21501  018FBE  6ED9               	movwf	fsr2l,c
 21502  018FC0  0E00               	movlw	0
 21503  018FC2  2033               	addwfc	(btemp+11)^0,w,c
 21504  018FC4  6EDA               	movwf	fsr2h,c
 21505  018FC6  2ADE               	incf	postinc2,f,c
 21506  018FC8  0E00               	movlw	0
 21507  018FCA  22DD               	addwfc	postdec2,f,c
 21508  018FCC                     l3156:
 21509                           
 21510                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21511  018FCC  52E5               	movf	postdec1,f,c
 21512  018FCE  52E5               	movf	postdec1,f,c
 21513  018FD0  52E5               	movf	postdec1,f,c
 21514  018FD2  52E5               	movf	postdec1,f,c
 21515  018FD4  0012               	return		;funcret
 21516  018FD6                     __end_of_fputc:
 21517                           	opt callstack 0
 21518                           
 21519 ;; *************** function _putch *****************
 21520 ;; Defined at:
 21521 ;;		line 170 in file "eadog.c"
 21522 ;; Parameters:    Size  Location     Type
 21523 ;;  c               1  [STACK] unsigned char 
 21524 ;; Auto vars:     Size  Location     Type
 21525 ;;		None
 21526 ;; Return value:  Size  Location     Type
 21527 ;;                  1  [STACK] void 
 21528 ;; Registers used:
 21529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21530 ;; Tracked objects:
 21531 ;;		On entry : 0/0
 21532 ;;		On exit  : 0/0
 21533 ;;		Unchanged: 0/0
 21534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21539 ;;Total ram usage:        0 bytes
 21540 ;; Hardware stack levels used:    1
 21541 ;; Hardware stack levels required when called:   16
 21542 ;; This function calls:
 21543 ;;		_ringBufS_put_dma
 21544 ;; This function is called by:
 21545 ;;		_fputc
 21546 ;; This function uses a reentrant model
 21547 ;;
 21548                           
 21549                           	psect	text75
 21550  01B574                     __ptext75:
 21551                           	opt callstack 0
 21552  01B574                     _putch:
 21553                           	opt callstack 0
 21554                           
 21555                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21556                           ;stkvar	_c @ sp[(0)+-1]
 21557                           
 21558                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21559                           ;incstack = 0
 21560 ;; hardware stack exceeded
 21561  01B574  0EFF               	movlw	-1
 21562  01B576  50E3               	movf	plusw1,w,c
 21563  01B578  6EE6               	movwf	postinc1,c
 21564  01B57A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21565  01B580  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21566  01B586  ECAE  F0CE         	call	_ringBufS_put_dma	;wreg free
 21567                           
 21568                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21569  01B58A  52E5               	movf	postdec1,f,c
 21570  01B58C  0012               	return		;funcret
 21571  01B58E                     __end_of_putch:
 21572                           	opt callstack 0
 21573                           
 21574 ;; *************** function _ringBufS_put_dma *****************
 21575 ;; Defined at:
 21576 ;;		line 67 in file "ringbufs.c"
 21577 ;; Parameters:    Size  Location     Type
 21578 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21579 ;;		 -> ring_buf1(67), 
 21580 ;;  c               1  [STACK] const unsigned char 
 21581 ;; Auto vars:     Size  Location     Type
 21582 ;;		None
 21583 ;; Return value:  Size  Location     Type
 21584 ;;                  1  [STACK] void 
 21585 ;; Registers used:
 21586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21587 ;; Tracked objects:
 21588 ;;		On entry : 0/0
 21589 ;;		On exit  : 0/0
 21590 ;;		Unchanged: 0/0
 21591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21596 ;;Total ram usage:        0 bytes
 21597 ;; Hardware stack levels used:    1
 21598 ;; Hardware stack levels required when called:   15
 21599 ;; This function calls:
 21600 ;;		Nothing
 21601 ;; This function is called by:
 21602 ;;		_putch
 21603 ;; This function uses a reentrant model
 21604 ;;
 21605                           
 21606                           	psect	text76
 21607  019D5C                     __ptext76:
 21608                           	opt callstack 0
 21609  019D5C                     _ringBufS_put_dma:
 21610                           	opt callstack 0
 21611                           
 21612                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21613                           ;stkvar	__this @ sp[(0)+-2]
 21614                           
 21615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21616                           ;incstack = 0
 21617 ;; hardware stack exceeded
 21618  019D5C  0EFE               	movlw	-2
 21619  019D5E  006F FF8C  F032    	movff	plusw1,btemp+10
 21620  019D64  0EFF               	movlw	-1
 21621  019D66  006F FF8C  F033    	movff	plusw1,btemp+11
 21622  019D6C  0E42               	movlw	66
 21623  019D6E  2432               	addwf	(btemp+10)^0,w,c
 21624  019D70  6ED9               	movwf	fsr2l,c
 21625  019D72  0E00               	movlw	0
 21626  019D74  2033               	addwfc	(btemp+11)^0,w,c
 21627  019D76  6EDA               	movwf	fsr2h,c
 21628  019D78  0E40               	movlw	64
 21629  019D7A  60DF               	cpfslt	indf2,c
 21630  019D7C  D040               	goto	l1577
 21631                           
 21632                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21633                           ;stkvar	_c @ sp[(0)+-3]
 21634                           ;stkvar	__this @ sp[(0)+-2]
 21635  019D7E  0EFE               	movlw	-2
 21636  019D80  006F FF8C  F032    	movff	plusw1,btemp+10
 21637  019D86  0EFF               	movlw	-1
 21638  019D88  006F FF8C  F033    	movff	plusw1,btemp+11
 21639  019D8E  0E40               	movlw	64
 21640  019D90  2432               	addwf	(btemp+10)^0,w,c
 21641  019D92  6ED9               	movwf	fsr2l,c
 21642  019D94  0E00               	movlw	0
 21643  019D96  2033               	addwfc	(btemp+11)^0,w,c
 21644  019D98  6EDA               	movwf	fsr2h,c
 21645  019D9A  50DF               	movf	indf2,w,c
 21646  019D9C  6E33               	movwf	(btemp+11)^0,c
 21647                           
 21648                           ;stkvar	__this @ sp[(0)+-2]
 21649  019D9E  0EFE               	movlw	-2
 21650  019DA0  006F FF8C  F030    	movff	plusw1,btemp+8
 21651  019DA6  0EFF               	movlw	-1
 21652  019DA8  006F FF8C  F031    	movff	plusw1,btemp+9
 21653  019DAE  5033               	movf	(btemp+11)^0,w,c
 21654  019DB0  2430               	addwf	(btemp+8)^0,w,c
 21655  019DB2  6ED9               	movwf	fsr2l,c
 21656  019DB4  0E00               	movlw	0
 21657  019DB6  2031               	addwfc	(btemp+9)^0,w,c
 21658  019DB8  6EDA               	movwf	fsr2h,c
 21659  019DBA  0EFD               	movlw	-3
 21660  019DBC  006F FF8F FFDF     	movff	plusw1,indf2
 21661                           
 21662                           ;ringbufs.c: 71:   ++_this->head;
 21663                           ;stkvar	__this @ sp[(0)+-2]
 21664  019DC2  0EFE               	movlw	-2
 21665  019DC4  006F FF8C  F032    	movff	plusw1,btemp+10
 21666  019DCA  0EFF               	movlw	-1
 21667  019DCC  006F FF8C  F033    	movff	plusw1,btemp+11
 21668  019DD2  0E40               	movlw	64
 21669  019DD4  2432               	addwf	(btemp+10)^0,w,c
 21670  019DD6  6ED9               	movwf	fsr2l,c
 21671  019DD8  0E00               	movlw	0
 21672  019DDA  2033               	addwfc	(btemp+11)^0,w,c
 21673  019DDC  6EDA               	movwf	fsr2h,c
 21674  019DDE  2ADF               	incf	indf2,f,c
 21675                           
 21676                           ;ringbufs.c: 72:   ++_this->count;
 21677                           ;stkvar	__this @ sp[(0)+-2]
 21678  019DE0  0EFE               	movlw	-2
 21679  019DE2  006F FF8C  F032    	movff	plusw1,btemp+10
 21680  019DE8  0EFF               	movlw	-1
 21681  019DEA  006F FF8C  F033    	movff	plusw1,btemp+11
 21682  019DF0  0E42               	movlw	66
 21683  019DF2  2432               	addwf	(btemp+10)^0,w,c
 21684  019DF4  6ED9               	movwf	fsr2l,c
 21685  019DF6  0E00               	movlw	0
 21686  019DF8  2033               	addwfc	(btemp+11)^0,w,c
 21687  019DFA  6EDA               	movwf	fsr2h,c
 21688  019DFC  2ADF               	incf	indf2,f,c
 21689  019DFE                     l1577:
 21690                           
 21691                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21692  019DFE  52E5               	movf	postdec1,f,c
 21693  019E00  52E5               	movf	postdec1,f,c
 21694  019E02  52E5               	movf	postdec1,f,c
 21695  019E04  0012               	return		;funcret
 21696  019E06                     __end_of_ringBufS_put_dma:
 21697                           	opt callstack 0
 21698                           
 21699 ;; *************** function _atoi *****************
 21700 ;; Defined at:
 21701 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21702 ;; Parameters:    Size  Location     Type
 21703 ;;  s               2  [STACK] PTR const unsigned char 
 21704 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 21705 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21706 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21707 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21708 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21709 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21710 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21711 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21712 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21713 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 21714 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 21715 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 21716 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21717 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21718 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21719 ;;		 -> STR_1(17), 
 21720 ;; Auto vars:     Size  Location     Type
 21721 ;;  n               2  [STACK] int 
 21722 ;;  neg             2  [STACK] int 
 21723 ;; Return value:  Size  Location     Type
 21724 ;;                  2  [STACK] int 
 21725 ;; Registers used:
 21726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21727 ;; Tracked objects:
 21728 ;;		On entry : 0/0
 21729 ;;		On exit  : 0/0
 21730 ;;		Unchanged: 0/0
 21731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21736 ;;Total ram usage:        0 bytes
 21737 ;; Hardware stack levels used:    1
 21738 ;; Hardware stack levels required when called:   16
 21739 ;; This function calls:
 21740 ;;		_isdigit
 21741 ;;		_isspace
 21742 ;; This function is called by:
 21743 ;;		_vfpfcnvrt
 21744 ;; This function uses a reentrant model
 21745 ;;
 21746                           
 21747                           	psect	text77
 21748  0170DE                     __ptext77:
 21749                           	opt callstack 0
 21750  0170DE                     _atoi:
 21751                           	opt callstack 0
 21752                           
 21753                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21754  0170DE  0E09               	movlw	9
 21755  0170E0  26E1               	addwf	fsr1l,f,c
 21756  0170E2  0E00               	movlw	0
 21757  0170E4  22E2               	addwfc	fsr1h,f,c
 21758                           
 21759                           ;stkvar	_n @ sp[(-9)+5]
 21760                           
 21761                           ;incstack = 0
 21762 ;; hardware stack exceeded
 21763  0170E6  0EFC               	movlw	-4
 21764  0170E8  6AE3               	clrf	plusw1,c
 21765  0170EA  0EFD               	movlw	-3
 21766  0170EC  6AE3               	clrf	plusw1,c
 21767                           
 21768                           ;stkvar	_neg @ sp[(-9)+7]
 21769  0170EE  0EFE               	movlw	-2
 21770  0170F0  6AE3               	clrf	plusw1,c
 21771  0170F2  0EFF               	movlw	-1
 21772  0170F4  6AE3               	clrf	plusw1,c
 21773  0170F6  D011               	goto	l9090
 21774  0170F8                     l9088:
 21775                           
 21776                           ;stkvar	_s @ sp[(-9)+-2]
 21777  0170F8  0EF5               	movlw	-11
 21778  0170FA  50E3               	movf	plusw1,w,c
 21779  0170FC  0F01               	addlw	1
 21780  0170FE  6E28               	movwf	btemp^0,c
 21781  017100  0EF5               	movlw	-11
 21782  017102  0060  F0A3  FFE3   	movff	btemp,plusw1
 21783  017108  6A28               	clrf	btemp^0,c
 21784  01710A  0EF6               	movlw	-10
 21785  01710C  50E3               	movf	plusw1,w,c
 21786  01710E  2028               	addwfc	btemp^0,w,c
 21787  017110  6E28               	movwf	btemp^0,c
 21788  017112  0EF6               	movlw	-10
 21789  017114  0060  F0A3  FFE3   	movff	btemp,plusw1
 21790  01711A                     l9090:
 21791                           
 21792                           ;stkvar	_atoi$5949 @ sp[(-9)+4]
 21793  01711A  0EFB               	movlw	-5
 21794  01711C  6AE3               	clrf	plusw1,c
 21795  01711E  2AE3               	incf	plusw1,f,c
 21796                           
 21797                           ;stkvar	_s @ sp[(-9)+-2]
 21798  017120  50E1               	movf	fsr1l,w,c
 21799  017122  0FF5               	addlw	-11
 21800  017124  6ED9               	movwf	fsr2l,c
 21801  017126  50E2               	movf	fsr1h,w,c
 21802  017128  6EDA               	movwf	fsr2h,c
 21803  01712A  0EFF               	movlw	255
 21804  01712C  22DA               	addwfc	fsr2h,f,c
 21805  01712E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21806  017134  006F FF77 FFF7     	movff	postdec2,tblptrh
 21807  01713A                     	if	0	;tblptru may be non-zero
 21808  01713A                     	endif
 21809  01713A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21810  01713A  0E00               	movlw	low (__mediumconst shr (0+16))
 21811  01713C  6EF8               	movwf	tblptru,c
 21812  01713E                     	endif
 21813  01713E  0008               	tblrd		*
 21814  017140  50F5               	movf	tablat,w,c
 21815  017142  0A20               	xorlw	32
 21816  017144  B4D8               	btfsc	status,2,c
 21817  017146  D023               	goto	l9098
 21818  017148  0EF7               	movlw	247
 21819  01714A  6E32               	movwf	(btemp+10)^0,c
 21820  01714C  0EFF               	movlw	255
 21821  01714E  6E33               	movwf	(btemp+11)^0,c
 21822                           
 21823                           ;stkvar	_s @ sp[(-9)+-2]
 21824  017150  50E1               	movf	fsr1l,w,c
 21825  017152  0FF5               	addlw	-11
 21826  017154  6ED9               	movwf	fsr2l,c
 21827  017156  50E2               	movf	fsr1h,w,c
 21828  017158  6EDA               	movwf	fsr2h,c
 21829  01715A  0EFF               	movlw	255
 21830  01715C  22DA               	addwfc	fsr2h,f,c
 21831  01715E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21832  017164  006F FF77 FFF7     	movff	postdec2,tblptrh
 21833  01716A                     	if	0	;tblptru may be non-zero
 21834  01716A                     	endif
 21835  01716A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21836  01716A  0E00               	movlw	low (__mediumconst shr (0+16))
 21837  01716C  6EF8               	movwf	tblptru,c
 21838  01716E                     	endif
 21839  01716E  0008               	tblrd		*
 21840  017170  50F5               	movf	tablat,w,c
 21841  017172  6E30               	movwf	(btemp+8)^0,c
 21842  017174  6A31               	clrf	(btemp+9)^0,c
 21843  017176  5032               	movf	(btemp+10)^0,w,c
 21844  017178  2630               	addwf	(btemp+8)^0,f,c
 21845  01717A  5033               	movf	(btemp+11)^0,w,c
 21846  01717C  2231               	addwfc	(btemp+9)^0,f,c
 21847  01717E  5031               	movf	(btemp+9)^0,w,c
 21848  017180  E104               	bnz	u8330
 21849  017182  0E05               	movlw	5
 21850  017184  5C30               	subwf	(btemp+8)^0,w,c
 21851  017186  A0D8               	btfss	status,0,c
 21852  017188  D002               	goto	l9098
 21853  01718A                     u8330:
 21854                           
 21855                           ;stkvar	_atoi$5949 @ sp[(-9)+4]
 21856  01718A  0EFB               	movlw	-5
 21857  01718C  6AE3               	clrf	plusw1,c
 21858  01718E                     l9098:
 21859                           
 21860                           ;stkvar	_atoi$5949 @ sp[(-9)+4]
 21861  01718E  0EFB               	movlw	-5
 21862  017190  50E3               	movf	plusw1,w,c
 21863  017192  6E32               	movwf	(btemp+10)^0,c
 21864  017194  6A33               	clrf	(btemp+11)^0,c
 21865                           
 21866                           ;stkvar	_atoi$5948 @ sp[(-9)+2]
 21867  017196  0EF9               	movlw	-7
 21868  017198  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 21869  01719E  0EFA               	movlw	-6
 21870  0171A0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21871                           
 21872                           ;stkvar	_atoi$5948 @ sp[(-9)+2]
 21873  0171A6  0EF9               	movlw	-7
 21874  0171A8  006F FF8C  F028    	movff	plusw1,btemp
 21875  0171AE  0EFA               	movlw	-6
 21876  0171B0  50E3               	movf	plusw1,w,c
 21877  0171B2  1028               	iorwf	btemp^0,w,c
 21878  0171B4  B4D8               	btfsc	status,2,c
 21879  0171B6  D01F               	goto	l9108
 21880  0171B8  D79F               	goto	l9088
 21881  0171BA                     l9104:
 21882  0171BA  0E01               	movlw	1
 21883  0171BC  6E32               	movwf	(btemp+10)^0,c
 21884  0171BE  0E00               	movlw	0
 21885  0171C0  6E33               	movwf	(btemp+11)^0,c
 21886                           
 21887                           ;stkvar	_neg @ sp[(-9)+7]
 21888  0171C2  0EFE               	movlw	-2
 21889  0171C4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 21890  0171CA  0EFF               	movlw	-1
 21891  0171CC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21892  0171D2                     l9106:
 21893                           
 21894                           ;stkvar	_s @ sp[(-9)+-2]
 21895  0171D2  0EF5               	movlw	-11
 21896  0171D4  50E3               	movf	plusw1,w,c
 21897  0171D6  0F01               	addlw	1
 21898  0171D8  6E28               	movwf	btemp^0,c
 21899  0171DA  0EF5               	movlw	-11
 21900  0171DC  0060  F0A3  FFE3   	movff	btemp,plusw1
 21901  0171E2  6A28               	clrf	btemp^0,c
 21902  0171E4  0EF6               	movlw	-10
 21903  0171E6  50E3               	movf	plusw1,w,c
 21904  0171E8  2028               	addwfc	btemp^0,w,c
 21905  0171EA  6E28               	movwf	btemp^0,c
 21906  0171EC  0EF6               	movlw	-10
 21907  0171EE  0060  F0A3  FFE3   	movff	btemp,plusw1
 21908  0171F4  D053               	goto	l9114
 21909  0171F6                     l9108:
 21910                           
 21911                           ;stkvar	_s @ sp[(-9)+-2]
 21912  0171F6  50E1               	movf	fsr1l,w,c
 21913  0171F8  0FF5               	addlw	-11
 21914  0171FA  6ED9               	movwf	fsr2l,c
 21915  0171FC  50E2               	movf	fsr1h,w,c
 21916  0171FE  6EDA               	movwf	fsr2h,c
 21917  017200  0EFF               	movlw	255
 21918  017202  22DA               	addwfc	fsr2h,f,c
 21919  017204  006F FF7B FFF6     	movff	postinc2,tblptrl
 21920  01720A  006F FF77 FFF7     	movff	postdec2,tblptrh
 21921  017210                     	if	0	;tblptru may be non-zero
 21922  017210                     	endif
 21923  017210                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21924  017210  0E00               	movlw	low (__mediumconst shr (0+16))
 21925  017212  6EF8               	movwf	tblptru,c
 21926  017214                     	endif
 21927  017214  0008               	tblrd		*
 21928  017216  50F5               	movf	tablat,w,c
 21929  017218  6E32               	movwf	(btemp+10)^0,c
 21930  01721A  6A33               	clrf	(btemp+11)^0,c
 21931                           
 21932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21933                           ; Switch size 1, requested type "simple"
 21934                           ; Number of cases is 1, Range of values is 0 to 0
 21935                           ; switch strategies available:
 21936                           ; Name         Instructions Cycles
 21937                           ; simple_byte            4     3 (average)
 21938                           ;	Chosen strategy is simple_byte
 21939  01721C  5033               	movf	(btemp+11)^0,w,c
 21940  01721E  0A00               	xorlw	0	; case 0
 21941  017220  A4D8               	btfss	status,2,c
 21942  017222  D03C               	goto	l9114
 21943                           
 21944                           ; Switch size 1, requested type "simple"
 21945                           ; Number of cases is 2, Range of values is 43 to 45
 21946                           ; switch strategies available:
 21947                           ; Name         Instructions Cycles
 21948                           ; simple_byte            7     4 (average)
 21949                           ;	Chosen strategy is simple_byte
 21950  017224  5032               	movf	(btemp+10)^0,w,c
 21951  017226  0A2B               	xorlw	43	; case 43
 21952  017228  B4D8               	btfsc	status,2,c
 21953  01722A  D7D3               	goto	l9106
 21954  01722C  0A06               	xorlw	6	; case 45
 21955  01722E  B4D8               	btfsc	status,2,c
 21956  017230  D7C4               	goto	l9104
 21957  017232  D034               	goto	l9114
 21958  017234                     l9110:
 21959                           
 21960                           ;stkvar	_n @ sp[(-9)+5]
 21961  017234  0EFC               	movlw	-4
 21962  017236  006F FF8C  F032    	movff	plusw1,btemp+10
 21963  01723C  0EFD               	movlw	-3
 21964  01723E  006F FF8C  F033    	movff	plusw1,btemp+11
 21965  017244  0E0A               	movlw	10
 21966  017246  0232               	mulwf	(btemp+10)^0,c
 21967  017248  006F FFCC  F030    	movff	prodl,btemp+8
 21968  01724E  006F FFD0  F031    	movff	prodh,btemp+9
 21969  017254  0233               	mulwf	(btemp+11)^0,c
 21970  017256  50F3               	movf	prodl,w,c
 21971  017258  2631               	addwf	(btemp+9)^0,f,c
 21972                           
 21973                           ;stkvar	_s @ sp[(-9)+-2]
 21974  01725A  50E1               	movf	fsr1l,w,c
 21975  01725C  0FF5               	addlw	-11
 21976  01725E  6ED9               	movwf	fsr2l,c
 21977  017260  50E2               	movf	fsr1h,w,c
 21978  017262  6EDA               	movwf	fsr2h,c
 21979  017264  0EFF               	movlw	255
 21980  017266  22DA               	addwfc	fsr2h,f,c
 21981  017268  006F FF7B FFF6     	movff	postinc2,tblptrl
 21982  01726E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21983  017274                     	if	0	;tblptru may be non-zero
 21984  017274                     	endif
 21985  017274                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21986  017274  0E00               	movlw	low (__mediumconst shr (0+16))
 21987  017276  6EF8               	movwf	tblptru,c
 21988  017278                     	endif
 21989  017278  0008               	tblrd		*
 21990  01727A  50F5               	movf	tablat,w,c
 21991  01727C  5E30               	subwf	(btemp+8)^0,f,c
 21992  01727E  0E00               	movlw	0
 21993  017280  5A31               	subwfb	(btemp+9)^0,f,c
 21994  017282  0E30               	movlw	48
 21995  017284  2630               	addwf	(btemp+8)^0,f,c
 21996  017286  0E00               	movlw	0
 21997  017288  2231               	addwfc	(btemp+9)^0,f,c
 21998                           
 21999                           ;stkvar	_n @ sp[(-9)+5]
 22000  01728A  0EFC               	movlw	-4
 22001  01728C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 22002  017292  0EFD               	movlw	-3
 22003  017294  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 22004  01729A  D79B               	goto	l9106
 22005  01729C                     l9114:
 22006  01729C  0ED0               	movlw	208
 22007  01729E  6E32               	movwf	(btemp+10)^0,c
 22008  0172A0  0EFF               	movlw	255
 22009  0172A2  6E33               	movwf	(btemp+11)^0,c
 22010                           
 22011                           ;stkvar	_s @ sp[(-9)+-2]
 22012  0172A4  50E1               	movf	fsr1l,w,c
 22013  0172A6  0FF5               	addlw	-11
 22014  0172A8  6ED9               	movwf	fsr2l,c
 22015  0172AA  50E2               	movf	fsr1h,w,c
 22016  0172AC  6EDA               	movwf	fsr2h,c
 22017  0172AE  0EFF               	movlw	255
 22018  0172B0  22DA               	addwfc	fsr2h,f,c
 22019  0172B2  006F FF7B FFF6     	movff	postinc2,tblptrl
 22020  0172B8  006F FF77 FFF7     	movff	postdec2,tblptrh
 22021  0172BE                     	if	0	;tblptru may be non-zero
 22022  0172BE                     	endif
 22023  0172BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22024  0172BE  0E00               	movlw	low (__mediumconst shr (0+16))
 22025  0172C0  6EF8               	movwf	tblptru,c
 22026  0172C2                     	endif
 22027  0172C2  0008               	tblrd		*
 22028  0172C4  50F5               	movf	tablat,w,c
 22029  0172C6  6E30               	movwf	(btemp+8)^0,c
 22030  0172C8  6A31               	clrf	(btemp+9)^0,c
 22031  0172CA  5032               	movf	(btemp+10)^0,w,c
 22032  0172CC  2630               	addwf	(btemp+8)^0,f,c
 22033  0172CE  5033               	movf	(btemp+11)^0,w,c
 22034  0172D0  2231               	addwfc	(btemp+9)^0,f,c
 22035  0172D2  5031               	movf	(btemp+9)^0,w,c
 22036  0172D4  E106               	bnz	u8350
 22037  0172D6  0E0A               	movlw	10
 22038  0172D8  5C30               	subwf	(btemp+8)^0,w,c
 22039  0172DA  B0D8               	btfsc	status,0,c
 22040  0172DC  D002               	goto	u8350
 22041  0172DE  0E01               	movlw	1
 22042  0172E0  D001               	goto	u8360
 22043  0172E2                     u8350:
 22044  0172E2  0E00               	movlw	0
 22045  0172E4                     u8360:
 22046  0172E4  6E32               	movwf	(btemp+10)^0,c
 22047  0172E6  6A33               	clrf	(btemp+11)^0,c
 22048                           
 22049                           ;stkvar	_atoi$5950 @ sp[(-9)+0]
 22050  0172E8  0EF7               	movlw	-9
 22051  0172EA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 22052  0172F0  0EF8               	movlw	-8
 22053  0172F2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 22054                           
 22055                           ;stkvar	_atoi$5950 @ sp[(-9)+0]
 22056  0172F8  0EF7               	movlw	-9
 22057  0172FA  006F FF8C  F028    	movff	plusw1,btemp
 22058  017300  0EF8               	movlw	-8
 22059  017302  50E3               	movf	plusw1,w,c
 22060  017304  1028               	iorwf	btemp^0,w,c
 22061  017306  A4D8               	btfss	status,2,c
 22062  017308  D795               	goto	l9110
 22063                           
 22064                           ;stkvar	_neg @ sp[(-9)+7]
 22065  01730A  0EFE               	movlw	-2
 22066  01730C  006F FF8C  F028    	movff	plusw1,btemp
 22067  017312  0EFF               	movlw	-1
 22068  017314  50E3               	movf	plusw1,w,c
 22069  017316  1028               	iorwf	btemp^0,w,c
 22070  017318  A4D8               	btfss	status,2,c
 22071  01731A  D00E               	goto	l9124
 22072                           
 22073                           ;stkvar	_n @ sp[(-9)+5]
 22074  01731C  0EFC               	movlw	-4
 22075  01731E  006F FF8C  F028    	movff	plusw1,btemp
 22076  017324  1E28               	comf	btemp^0,f,c
 22077  017326  0EFD               	movlw	-3
 22078  017328  006F FF8C  F029    	movff	plusw1,btemp+1
 22079  01732E  1E29               	comf	(btemp+1)^0,f,c
 22080  017330  2A28               	incf	btemp^0,f,c
 22081  017332  B4D8               	btfsc	status,2,c
 22082  017334  2A29               	incf	(btemp+1)^0,f,c
 22083  017336  D008               	goto	l3087
 22084  017338                     l9124:
 22085                           
 22086                           ;stkvar	_n @ sp[(-9)+5]
 22087  017338  0EFC               	movlw	-4
 22088  01733A  006F FF8C  F028    	movff	plusw1,btemp
 22089  017340  0EFD               	movlw	-3
 22090  017342  006F FF8C  F029    	movff	plusw1,btemp+1
 22091  017348                     l3087:
 22092                           
 22093                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22094  017348  0EF5               	movlw	245
 22095  01734A  26E1               	addwf	fsr1l,f,c
 22096  01734C  0EFF               	movlw	255
 22097  01734E  22E2               	addwfc	fsr1h,f,c
 22098  017350  0012               	return		;funcret
 22099  017352                     __end_of_atoi:
 22100                           	opt callstack 0
 22101                           
 22102 ;; *************** function _isspace *****************
 22103 ;; Defined at:
 22104 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22105 ;; Parameters:    Size  Location     Type
 22106 ;;  c               2  [STACK] int 
 22107 ;; Auto vars:     Size  Location     Type
 22108 ;;		None
 22109 ;; Return value:  Size  Location     Type
 22110 ;;                  2  [STACK] int 
 22111 ;; Registers used:
 22112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22113 ;; Tracked objects:
 22114 ;;		On entry : 0/0
 22115 ;;		On exit  : 0/0
 22116 ;;		Unchanged: 0/0
 22117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22122 ;;Total ram usage:        0 bytes
 22123 ;; Hardware stack levels used:    1
 22124 ;; Hardware stack levels required when called:   15
 22125 ;; This function calls:
 22126 ;;		Nothing
 22127 ;; This function is called by:
 22128 ;;		_atoi
 22129 ;; This function uses a reentrant model
 22130 ;;
 22131                           
 22132                           	psect	text78
 22133  01A8C8                     __ptext78:
 22134                           	opt callstack 0
 22135  01A8C8                     _isspace:
 22136                           	opt callstack 0
 22137                           
 22138                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22139  01A8C8  52E6               	movf	postinc1,f,c
 22140                           
 22141                           ;stkvar	_isspace$5999 @ sp[(-1)+0]
 22142                           
 22143                           ;incstack = 0
 22144 ;; hardware stack exceeded
 22145  01A8CA  0EFF               	movlw	-1
 22146  01A8CC  6AE3               	clrf	plusw1,c
 22147  01A8CE  2AE3               	incf	plusw1,f,c
 22148                           
 22149                           ;stkvar	_c @ sp[(-1)+-2]
 22150  01A8D0  0EFD               	movlw	-3
 22151  01A8D2  006F FF8C  F028    	movff	plusw1,btemp
 22152  01A8D8  0E20               	movlw	32
 22153  01A8DA  1828               	xorwf	btemp^0,w,c
 22154  01A8DC  E104               	bnz	u7180
 22155  01A8DE  0EFE               	movlw	-2
 22156  01A8E0  50E3               	movf	plusw1,w,c
 22157  01A8E2  B4D8               	btfsc	status,2,c
 22158  01A8E4  D012               	goto	l8482
 22159  01A8E6                     u7180:
 22160                           
 22161                           ;stkvar	_c @ sp[(-1)+-2]
 22162  01A8E6  0EFD               	movlw	-3
 22163  01A8E8  50E3               	movf	plusw1,w,c
 22164  01A8EA  0FF7               	addlw	247
 22165  01A8EC  6E32               	movwf	(btemp+10)^0,c
 22166  01A8EE  0EFE               	movlw	-2
 22167  01A8F0  006F FF8C  F033    	movff	plusw1,btemp+11
 22168  01A8F6  0EFF               	movlw	255
 22169  01A8F8  2233               	addwfc	(btemp+11)^0,f,c
 22170  01A8FA  5033               	movf	(btemp+11)^0,w,c
 22171  01A8FC  E104               	bnz	u7190
 22172  01A8FE  0E05               	movlw	5
 22173  01A900  5C32               	subwf	(btemp+10)^0,w,c
 22174  01A902  A0D8               	btfss	status,0,c
 22175  01A904  D002               	goto	l8482
 22176  01A906                     u7190:
 22177                           
 22178                           ;stkvar	_isspace$5999 @ sp[(-1)+0]
 22179  01A906  0EFF               	movlw	-1
 22180  01A908  6AE3               	clrf	plusw1,c
 22181  01A90A                     l8482:
 22182                           
 22183                           ;stkvar	_isspace$5999 @ sp[(-1)+0]
 22184  01A90A  0EFF               	movlw	-1
 22185  01A90C  50E3               	movf	plusw1,w,c
 22186  01A90E  6E28               	movwf	btemp^0,c
 22187  01A910  6A29               	clrf	(btemp+1)^0,c
 22188                           
 22189                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22190  01A912  52E5               	movf	postdec1,f,c
 22191  01A914  52E5               	movf	postdec1,f,c
 22192  01A916  52E5               	movf	postdec1,f,c
 22193  01A918  0012               	return		;funcret
 22194  01A91A                     __end_of_isspace:
 22195                           	opt callstack 0
 22196                           
 22197 ;; *************** function _isdigit *****************
 22198 ;; Defined at:
 22199 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22200 ;; Parameters:    Size  Location     Type
 22201 ;;  c               2  [STACK] int 
 22202 ;; Auto vars:     Size  Location     Type
 22203 ;;		None
 22204 ;; Return value:  Size  Location     Type
 22205 ;;                  2  [STACK] int 
 22206 ;; Registers used:
 22207 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22208 ;; Tracked objects:
 22209 ;;		On entry : 0/0
 22210 ;;		On exit  : 0/0
 22211 ;;		Unchanged: 0/0
 22212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22217 ;;Total ram usage:        0 bytes
 22218 ;; Hardware stack levels used:    1
 22219 ;; Hardware stack levels required when called:   15
 22220 ;; This function calls:
 22221 ;;		Nothing
 22222 ;; This function is called by:
 22223 ;;		_vfpfcnvrt
 22224 ;;		_atoi
 22225 ;; This function uses a reentrant model
 22226 ;;
 22227                           
 22228                           	psect	text79
 22229  01AFB2                     __ptext79:
 22230                           	opt callstack 0
 22231  01AFB2                     _isdigit:
 22232                           	opt callstack 0
 22233                           
 22234                           ;stkvar	_c @ sp[(0)+-2]
 22235                           
 22236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22237                           ;incstack = 0
 22238 ;; hardware stack exceeded
 22239  01AFB2  0EFE               	movlw	-2
 22240  01AFB4  50E3               	movf	plusw1,w,c
 22241  01AFB6  0FD0               	addlw	208
 22242  01AFB8  6E32               	movwf	(btemp+10)^0,c
 22243  01AFBA  0EFF               	movlw	-1
 22244  01AFBC  006F FF8C  F033    	movff	plusw1,btemp+11
 22245  01AFC2  0EFF               	movlw	255
 22246  01AFC4  2233               	addwfc	(btemp+11)^0,f,c
 22247  01AFC6  5033               	movf	(btemp+11)^0,w,c
 22248  01AFC8  E106               	bnz	u6030
 22249  01AFCA  0E0A               	movlw	10
 22250  01AFCC  5C32               	subwf	(btemp+10)^0,w,c
 22251  01AFCE  B0D8               	btfsc	status,0,c
 22252  01AFD0  D002               	goto	u6030
 22253  01AFD2  0E01               	movlw	1
 22254  01AFD4  D001               	goto	u6040
 22255  01AFD6                     u6030:
 22256  01AFD6  0E00               	movlw	0
 22257  01AFD8                     u6040:
 22258  01AFD8  6E28               	movwf	btemp^0,c
 22259  01AFDA  6A29               	clrf	(btemp+1)^0,c
 22260                           
 22261                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22262  01AFDC  52E5               	movf	postdec1,f,c
 22263  01AFDE  52E5               	movf	postdec1,f,c
 22264  01AFE0  0012               	return		;funcret
 22265  01AFE2                     __end_of_isdigit:
 22266                           	opt callstack 0
 22267                           
 22268 ;; *************** function _set_vterm *****************
 22269 ;; Defined at:
 22270 ;;		line 107 in file "mconfig.c"
 22271 ;; Parameters:    Size  Location     Type
 22272 ;;  vterm           1  [STACK] const unsigned char 
 22273 ;; Auto vars:     Size  Location     Type
 22274 ;;		None
 22275 ;; Return value:  Size  Location     Type
 22276 ;;                  1  [STACK] unsigned char 
 22277 ;; Registers used:
 22278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22279 ;; Tracked objects:
 22280 ;;		On entry : 0/1
 22281 ;;		On exit  : 0/0
 22282 ;;		Unchanged: 0/0
 22283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22288 ;;Total ram usage:        0 bytes
 22289 ;; Hardware stack levels used:    1
 22290 ;; Hardware stack levels required when called:   15
 22291 ;; This function calls:
 22292 ;;		Nothing
 22293 ;; This function is called by:
 22294 ;;		_main
 22295 ;;		_check_help
 22296 ;; This function uses a reentrant model
 22297 ;;
 22298                           
 22299                           	psect	text80
 22300  01B4C4                     __ptext80:
 22301                           	opt callstack 0
 22302  01B4C4                     _set_vterm:
 22303                           	opt callstack 15
 22304                           
 22305                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22306                           ;stkvar	_vterm @ sp[(0)+-1]
 22307                           
 22308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22309                           ;incstack = 0
 22310  01B4C4  0EFF               	movlw	-1
 22311  01B4C6  006F FF8C  F033    	movff	plusw1,btemp+11
 22312  01B4CC  0E03               	movlw	3
 22313  01B4CE  1633               	andwf	(btemp+11)^0,f,c
 22314  01B4D0  EE22  F1DF         	lfsr	2,_D+480
 22315  01B4D4  50DF               	movf	223,w,c
 22316  01B4D6  1833               	xorwf	(btemp+11)^0,w,c
 22317  01B4D8  0BFE               	andlw	-2
 22318  01B4DA  1833               	xorwf	(btemp+11)^0,w,c
 22319  01B4DC  6EDF               	movwf	223,c
 22320                           
 22321                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22322  01B4DE  52E5               	movf	postdec1,f,c
 22323  01B4E0  0012               	return		;funcret
 22324  01B4E2                     __end_of_set_vterm:
 22325                           	opt callstack 0
 22326                           
 22327 ;; *************** function _set_temp_display_help *****************
 22328 ;; Defined at:
 22329 ;;		line 211 in file "mconfig.c"
 22330 ;; Parameters:    Size  Location     Type
 22331 ;;  new_response    1  [STACK] const enum E16509
 22332 ;; Auto vars:     Size  Location     Type
 22333 ;;		None
 22334 ;; Return value:  Size  Location     Type
 22335 ;;                  1  [STACK] enum E16509
 22336 ;; Registers used:
 22337 ;;		wreg, fsr1l, fsr1h
 22338 ;; Tracked objects:
 22339 ;;		On entry : 0/2
 22340 ;;		On exit  : 3F/2
 22341 ;;		Unchanged: 0/0
 22342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22347 ;;Total ram usage:        0 bytes
 22348 ;; Hardware stack levels used:    1
 22349 ;; Hardware stack levels required when called:   15
 22350 ;; This function calls:
 22351 ;;		Nothing
 22352 ;; This function is called by:
 22353 ;;		_check_help
 22354 ;; This function uses a reentrant model
 22355 ;;
 22356                           
 22357                           	psect	text81
 22358  01B662                     __ptext81:
 22359                           	opt callstack 0
 22360  01B662                     _set_temp_display_help:
 22361                           	opt callstack 14
 22362                           
 22363                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22364                           
 22365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22366                           ;incstack = 0
 22367  01B662  0102               	movlb	2	; () banked
 22368  01B664  51A5               	movf	(_V+165)& (0+255),w,b	;volatile
 22369                           
 22370                           ; BSR set to: 2
 22371                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22372                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22373  01B666  0EFF               	movlw	-1
 22374  01B668  006F FF8C  F2A5    	movff	plusw1,_V+165	;volatile
 22375                           
 22376                           ; BSR set to: 2
 22377                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22378  01B66E  52E5               	movf	postdec1,f,c
 22379  01B670  0012               	return		;funcret
 22380  01B672                     __end_of_set_temp_display_help:
 22381                           	opt callstack 0
 22382                           
 22383 ;; *************** function _set_display_info *****************
 22384 ;; Defined at:
 22385 ;;		line 200 in file "mconfig.c"
 22386 ;; Parameters:    Size  Location     Type
 22387 ;;  new_response    1  [STACK] const enum E16509
 22388 ;; Auto vars:     Size  Location     Type
 22389 ;;		None
 22390 ;; Return value:  Size  Location     Type
 22391 ;;                  1  [STACK] enum E16994
 22392 ;; Registers used:
 22393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22394 ;; Tracked objects:
 22395 ;;		On entry : 0/0
 22396 ;;		On exit  : 0/0
 22397 ;;		Unchanged: 0/0
 22398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22403 ;;Total ram usage:        0 bytes
 22404 ;; Hardware stack levels used:    1
 22405 ;; Hardware stack levels required when called:   16
 22406 ;; This function calls:
 22407 ;;		_TimerDone
 22408 ;; This function is called by:
 22409 ;;		_main
 22410 ;;		_check_help
 22411 ;; This function uses a reentrant model
 22412 ;;
 22413                           
 22414                           	psect	text82
 22415  01B4E2                     __ptext82:
 22416                           	opt callstack 0
 22417  01B4E2                     _set_display_info:
 22418                           	opt callstack 14
 22419                           
 22420                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22421                           
 22422                           ; BSR set to: 2
 22423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22424                           ;incstack = 0
 22425  01B4E2  0E07               	movlw	7
 22426  01B4E4  6EE6               	movwf	postinc1,c
 22427  01B4E6  EC9B  F0D8         	call	_TimerDone	;wreg free
 22428  01B4EA  5028               	movf	btemp^0,w,c
 22429  01B4EC  B4D8               	btfsc	status,2,c
 22430  01B4EE  D006               	goto	l1712
 22431                           
 22432                           ;mconfig.c: 205:   old_info = V.response.info;
 22433  01B4F0  0102               	movlb	2	; () banked
 22434  01B4F2  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22435                           
 22436                           ; BSR set to: 2
 22437                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22438                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22439  01B4F4  0EFF               	movlw	-1
 22440  01B4F6  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 22441  01B4FC                     l1712:
 22442                           
 22443                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22444  01B4FC  52E5               	movf	postdec1,f,c
 22445  01B4FE  0012               	return		;funcret
 22446  01B500                     __end_of_set_display_info:
 22447                           	opt callstack 0
 22448                           
 22449 ;; *************** function _mode_lamp_dim *****************
 22450 ;; Defined at:
 22451 ;;		line 13 in file "mconfig.c"
 22452 ;; Parameters:    Size  Location     Type
 22453 ;;  level           2  [STACK] const unsigned short 
 22454 ;; Auto vars:     Size  Location     Type
 22455 ;;		None
 22456 ;; Return value:  Size  Location     Type
 22457 ;;                  1  [STACK] void 
 22458 ;; Registers used:
 22459 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22460 ;; Tracked objects:
 22461 ;;		On entry : 0/2
 22462 ;;		On exit  : 0/0
 22463 ;;		Unchanged: 0/0
 22464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22469 ;;Total ram usage:        0 bytes
 22470 ;; Hardware stack levels used:    1
 22471 ;; Hardware stack levels required when called:   16
 22472 ;; This function calls:
 22473 ;;		_PWM8_LoadDutyValue
 22474 ;; This function is called by:
 22475 ;;		_main
 22476 ;;		_check_help
 22477 ;; This function uses a reentrant model
 22478 ;;
 22479                           
 22480                           	psect	text83
 22481  01B5AA                     __ptext83:
 22482                           	opt callstack 0
 22483  01B5AA                     _mode_lamp_dim:
 22484                           	opt callstack 14
 22485                           
 22486                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22487                           ;stkvar	_level @ sp[(0)+-2]
 22488                           
 22489                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22490                           ;incstack = 0
 22491  01B5AA  0EFE               	movlw	-2
 22492  01B5AC  006F FF8F FFE6     	movff	plusw1,postinc1
 22493  01B5B2  006F FF8F FFE6     	movff	plusw1,postinc1
 22494  01B5B8  ECF8  F0D5         	call	_PWM8_LoadDutyValue	;wreg free
 22495                           
 22496                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22497  01B5BC  52E5               	movf	postdec1,f,c
 22498  01B5BE  52E5               	movf	postdec1,f,c
 22499  01B5C0  0012               	return		;funcret
 22500  01B5C2                     __end_of_mode_lamp_dim:
 22501                           	opt callstack 0
 22502                           
 22503 ;; *************** function _mode_lamp_bright *****************
 22504 ;; Defined at:
 22505 ;;		line 18 in file "mconfig.c"
 22506 ;; Parameters:    Size  Location     Type
 22507 ;;		None
 22508 ;; Auto vars:     Size  Location     Type
 22509 ;;		None
 22510 ;; Return value:  Size  Location     Type
 22511 ;;                  1  [STACK] void 
 22512 ;; Registers used:
 22513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22514 ;; Tracked objects:
 22515 ;;		On entry : 0/0
 22516 ;;		On exit  : 0/0
 22517 ;;		Unchanged: 0/0
 22518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22523 ;;Total ram usage:        0 bytes
 22524 ;; Hardware stack levels used:    1
 22525 ;; Hardware stack levels required when called:   16
 22526 ;; This function calls:
 22527 ;;		_PWM8_LoadDutyValue
 22528 ;; This function is called by:
 22529 ;;		_check_help
 22530 ;; This function uses a reentrant model
 22531 ;;
 22532                           
 22533                           	psect	text84
 22534  01B680                     __ptext84:
 22535                           	opt callstack 0
 22536  01B680                     _mode_lamp_bright:
 22537                           	opt callstack 13
 22538                           
 22539                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22540                           
 22541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22542                           ;incstack = 0
 22543  01B680  0E2C               	movlw	44
 22544  01B682  6EE6               	movwf	postinc1,c
 22545  01B684  0E01               	movlw	1
 22546  01B686  6EE6               	movwf	postinc1,c
 22547  01B688  ECF8  F0D5         	call	_PWM8_LoadDutyValue	;wreg free
 22548                           
 22549                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22550  01B68C  0012               	return		;funcret
 22551  01B68E                     __end_of_mode_lamp_bright:
 22552                           	opt callstack 0
 22553                           
 22554 ;; *************** function _PWM8_LoadDutyValue *****************
 22555 ;; Defined at:
 22556 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22557 ;; Parameters:    Size  Location     Type
 22558 ;;  dutyValue       2  [STACK] unsigned short 
 22559 ;; Auto vars:     Size  Location     Type
 22560 ;;		None
 22561 ;; Return value:  Size  Location     Type
 22562 ;;                  1  [STACK] void 
 22563 ;; Registers used:
 22564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22565 ;; Tracked objects:
 22566 ;;		On entry : 0/2
 22567 ;;		On exit  : 0/0
 22568 ;;		Unchanged: 0/0
 22569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22574 ;;Total ram usage:        0 bytes
 22575 ;; Hardware stack levels used:    1
 22576 ;; Hardware stack levels required when called:   15
 22577 ;; This function calls:
 22578 ;;		Nothing
 22579 ;; This function is called by:
 22580 ;;		_mode_lamp_dim
 22581 ;;		_mode_lamp_bright
 22582 ;; This function uses a reentrant model
 22583 ;;
 22584                           
 22585                           	psect	text85
 22586  01ABF0                     __ptext85:
 22587                           	opt callstack 0
 22588  01ABF0                     _PWM8_LoadDutyValue:
 22589                           	opt callstack 14
 22590                           
 22591                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22592                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22593                           
 22594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22595                           ;incstack = 0
 22596  01ABF0  0EFE               	movlw	-2
 22597  01ABF2  006F FF8C  F032    	movff	plusw1,btemp+10
 22598  01ABF8  0EFF               	movlw	-1
 22599  01ABFA  006F FF8C  F033    	movff	plusw1,btemp+11
 22600  01AC00  90D8               	bcf	status,0,c
 22601  01AC02  3233               	rrcf	(btemp+11)^0,f,c
 22602  01AC04  3232               	rrcf	(btemp+10)^0,f,c
 22603  01AC06  90D8               	bcf	status,0,c
 22604  01AC08  3233               	rrcf	(btemp+11)^0,f,c
 22605  01AC0A  3232               	rrcf	(btemp+10)^0,f,c
 22606  01AC0C  5032               	movf	(btemp+10)^0,w,c
 22607  01AC0E  6E61               	movwf	97,c	;volatile
 22608                           
 22609                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22610                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22611  01AC10  0EFE               	movlw	-2
 22612  01AC12  006F FF8C  F033    	movff	plusw1,btemp+11
 22613  01AC18  0E03               	movlw	3
 22614  01AC1A  1633               	andwf	(btemp+11)^0,f,c
 22615  01AC1C  0E06               	movlw	6
 22616  01AC1E  6E28               	movwf	btemp^0,c
 22617  01AC20                     u8835:
 22618  01AC20  90D8               	bcf	status,0,c
 22619  01AC22  3633               	rlcf	(btemp+11)^0,f,c
 22620  01AC24  2E28               	decfsz	btemp^0,f,c
 22621  01AC26  D7FC               	goto	u8835
 22622  01AC28  5033               	movf	(btemp+11)^0,w,c
 22623  01AC2A  6E60               	movwf	96,c	;volatile
 22624                           
 22625                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22626  01AC2C  52E5               	movf	postdec1,f,c
 22627  01AC2E  52E5               	movf	postdec1,f,c
 22628  01AC30  0012               	return		;funcret
 22629  01AC32                     __end_of_PWM8_LoadDutyValue:
 22630                           	opt callstack 0
 22631                           
 22632 ;; *************** function _help_button *****************
 22633 ;; Defined at:
 22634 ;;		line 26 in file "mconfig.c"
 22635 ;; Parameters:    Size  Location     Type
 22636 ;;		None
 22637 ;; Auto vars:     Size  Location     Type
 22638 ;;		None
 22639 ;; Return value:  Size  Location     Type
 22640 ;;                  1  [STACK] _Bool 
 22641 ;; Registers used:
 22642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22643 ;; Tracked objects:
 22644 ;;		On entry : 0/2
 22645 ;;		On exit  : 0/0
 22646 ;;		Unchanged: 0/0
 22647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22652 ;;Total ram usage:        0 bytes
 22653 ;; Hardware stack levels used:    1
 22654 ;; Hardware stack levels required when called:   16
 22655 ;; This function calls:
 22656 ;;		_StartTimer
 22657 ;;		_TimerDone
 22658 ;; This function is called by:
 22659 ;;		_check_help
 22660 ;; This function uses a reentrant model
 22661 ;;
 22662                           
 22663                           	psect	text86
 22664  01ADAC                     __ptext86:
 22665                           	opt callstack 0
 22666  01ADAC                     _help_button:
 22667                           	opt callstack 13
 22668                           
 22669                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22670                           
 22671                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22672                           ;incstack = 0
 22673  01ADAC  B0CB               	btfsc	203,0,c	;volatile
 22674  01ADAE  D00C               	goto	l1655
 22675                           
 22676                           ;mconfig.c: 29:   V.help = 1;
 22677  01ADB0  0102               	movlb	2	; () banked
 22678  01ADB2  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22679                           
 22680                           ; BSR set to: 2
 22681                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22682  01ADB4  0E08               	movlw	8
 22683  01ADB6  6EE6               	movwf	postinc1,c
 22684  01ADB8  EC9B  F0D8         	call	_TimerDone	;wreg free
 22685  01ADBC  5028               	movf	btemp^0,w,c
 22686  01ADBE  B4D8               	btfsc	status,2,c
 22687  01ADC0  D003               	goto	l1655
 22688                           
 22689                           ;mconfig.c: 31:    return 1;
 22690  01ADC2  0E01               	movlw	1
 22691  01ADC4  6E28               	movwf	btemp^0,c
 22692  01ADC6  0012               	return	
 22693  01ADC8                     l1655:
 22694                           
 22695                           ;mconfig.c: 34:  if (!V.help)
 22696  01ADC8  0102               	movlb	2	; () banked
 22697  01ADCA  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22698  01ADCC  D008               	goto	l10166
 22699                           
 22700                           ; BSR set to: 2
 22701                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22702  01ADCE  0E2C               	movlw	44
 22703  01ADD0  6EE6               	movwf	postinc1,c
 22704  01ADD2  0E01               	movlw	1
 22705  01ADD4  6EE6               	movwf	postinc1,c
 22706  01ADD6  0E08               	movlw	8
 22707  01ADD8  6EE6               	movwf	postinc1,c
 22708  01ADDA  EC19  F0D6         	call	_StartTimer	;wreg free
 22709  01ADDE                     l10166:
 22710                           
 22711                           ;mconfig.c: 37:  return 0;
 22712  01ADDE  0E00               	movlw	0
 22713  01ADE0  6E28               	movwf	btemp^0,c
 22714                           
 22715                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22716  01ADE2  0012               	return		;funcret
 22717  01ADE4                     __end_of_help_button:
 22718                           	opt callstack 0
 22719                           
 22720 ;; *************** function _TimerDone *****************
 22721 ;; Defined at:
 22722 ;;		line 20 in file "timers.c"
 22723 ;; Parameters:    Size  Location     Type
 22724 ;;  timer           1  [STACK] const unsigned char 
 22725 ;; Auto vars:     Size  Location     Type
 22726 ;;		None
 22727 ;; Return value:  Size  Location     Type
 22728 ;;                  1  [STACK] _Bool 
 22729 ;; Registers used:
 22730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22731 ;; Tracked objects:
 22732 ;;		On entry : 0/0
 22733 ;;		On exit  : 0/0
 22734 ;;		Unchanged: 0/0
 22735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22740 ;;Total ram usage:        0 bytes
 22741 ;; Hardware stack levels used:    1
 22742 ;; Hardware stack levels required when called:   15
 22743 ;; This function calls:
 22744 ;;		Nothing
 22745 ;; This function is called by:
 22746 ;;		_main
 22747 ;;		_WaitMs
 22748 ;;		_help_button
 22749 ;;		_check_help
 22750 ;;		_set_display_info
 22751 ;;		_update_adc_result
 22752 ;;		_esr_check
 22753 ;; This function uses a reentrant model
 22754 ;;
 22755                           
 22756                           	psect	text87
 22757  01B136                     __ptext87:
 22758                           	opt callstack 0
 22759  01B136                     _TimerDone:
 22760                           	opt callstack 14
 22761                           
 22762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22763                           ;incstack = 0
 22764  01B136  0004               	clrwdt		;# 
 22765                           
 22766                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22767                           ;stkvar	_timer @ sp[(0)+-1]
 22768  01B138  0EFF               	movlw	-1
 22769  01B13A  50E3               	movf	plusw1,w,c
 22770  01B13C  0D02               	mullw	2
 22771  01B13E  0E94               	movlw	low _tickCount
 22772  01B140  24F3               	addwf	243,w,c
 22773  01B142  6ED9               	movwf	fsr2l,c
 22774  01B144  0E03               	movlw	high _tickCount
 22775  01B146  20F4               	addwfc	prodh,w,c
 22776  01B148  6EDA               	movwf	fsr2h,c
 22777  01B14A  50DE               	movf	postinc2,w,c
 22778  01B14C  10DE               	iorwf	postinc2,w,c
 22779  01B14E  A4D8               	btfss	status,2,c
 22780  01B150  D002               	goto	l9394
 22781                           
 22782                           ;timers.c: 24:   return 1;
 22783  01B152  0E01               	movlw	1
 22784  01B154  D001               	goto	L25
 22785  01B156                     l9394:
 22786                           
 22787                           ;timers.c: 26:  return 0;
 22788  01B156  0E00               	movlw	0
 22789  01B158                     L25:
 22790  01B158  6E28               	movwf	btemp^0,c
 22791                           
 22792                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22793  01B15A  52E5               	movf	postdec1,f,c
 22794  01B15C  0012               	return		;funcret
 22795  01B15E                     __end_of_TimerDone:
 22796                           	opt callstack 0
 22797                           
 22798 ;; *************** function _StartTimer *****************
 22799 ;; Defined at:
 22800 ;;		line 12 in file "timers.c"
 22801 ;; Parameters:    Size  Location     Type
 22802 ;;  timer           1  [STACK] const unsigned char 
 22803 ;;  count           2  [STACK] const unsigned short 
 22804 ;; Auto vars:     Size  Location     Type
 22805 ;;		None
 22806 ;; Return value:  Size  Location     Type
 22807 ;;                  1  [STACK] void 
 22808 ;; Registers used:
 22809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22810 ;; Tracked objects:
 22811 ;;		On entry : 0/0
 22812 ;;		On exit  : 0/0
 22813 ;;		Unchanged: 0/0
 22814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22819 ;;Total ram usage:        0 bytes
 22820 ;; Hardware stack levels used:    1
 22821 ;; Hardware stack levels required when called:   15
 22822 ;; This function calls:
 22823 ;;		Nothing
 22824 ;; This function is called by:
 22825 ;;		_main
 22826 ;;		_WaitMs
 22827 ;;		_help_button
 22828 ;;		_check_help
 22829 ;;		_update_adc_result
 22830 ;;		_calc_bsoc
 22831 ;;		_esr_check
 22832 ;; This function uses a reentrant model
 22833 ;;
 22834                           
 22835                           	psect	text88
 22836  01AC32                     __ptext88:
 22837                           	opt callstack 0
 22838  01AC32                     _StartTimer:
 22839                           	opt callstack 0
 22840                           
 22841                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22842                           ;stkvar	_count @ sp[(0)+-3]
 22843                           
 22844                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22845                           ;incstack = 0
 22846 ;; hardware stack exceeded
 22847  01AC32  0EFD               	movlw	-3
 22848  01AC34  006F FF8C  F032    	movff	plusw1,btemp+10
 22849  01AC3A  0EFE               	movlw	-2
 22850  01AC3C  006F FF8C  F033    	movff	plusw1,btemp+11
 22851  01AC42  90D8               	bcf	status,0,c
 22852  01AC44  3432               	rlcf	(btemp+10)^0,w,c
 22853  01AC46  6E30               	movwf	(btemp+8)^0,c
 22854  01AC48  3433               	rlcf	(btemp+11)^0,w,c
 22855  01AC4A  6E31               	movwf	(btemp+9)^0,c
 22856                           
 22857                           ;stkvar	_timer @ sp[(0)+-1]
 22858  01AC4C  0EFF               	movlw	-1
 22859  01AC4E  50E3               	movf	plusw1,w,c
 22860  01AC50  0D02               	mullw	2
 22861  01AC52  0E94               	movlw	low _tickCount
 22862  01AC54  24F3               	addwf	243,w,c
 22863  01AC56  6ED9               	movwf	fsr2l,c
 22864  01AC58  0E03               	movlw	high _tickCount
 22865  01AC5A  20F4               	addwfc	prodh,w,c
 22866  01AC5C  6EDA               	movwf	fsr2h,c
 22867  01AC5E  0060  F0C3  FFDE   	movff	btemp+8,postinc2
 22868  01AC64  0060  F0C7  FFDD   	movff	btemp+9,postdec2
 22869                           
 22870                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22871  01AC6A  52E5               	movf	postdec1,f,c
 22872  01AC6C  52E5               	movf	postdec1,f,c
 22873  01AC6E  52E5               	movf	postdec1,f,c
 22874  01AC70  0012               	return		;funcret
 22875  01AC72                     __end_of_StartTimer:
 22876                           	opt callstack 0
 22877                           
 22878 ;; *************** function _display_info *****************
 22879 ;; Defined at:
 22880 ;;		line 190 in file "mconfig.c"
 22881 ;; Parameters:    Size  Location     Type
 22882 ;;		None
 22883 ;; Auto vars:     Size  Location     Type
 22884 ;;		None
 22885 ;; Return value:  Size  Location     Type
 22886 ;;                  1  [STACK] enum E16509
 22887 ;; Registers used:
 22888 ;;		btemp
 22889 ;; Tracked objects:
 22890 ;;		On entry : 0/2
 22891 ;;		On exit  : 0/0
 22892 ;;		Unchanged: 0/0
 22893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22898 ;;Total ram usage:        0 bytes
 22899 ;; Hardware stack levels used:    1
 22900 ;; Hardware stack levels required when called:   15
 22901 ;; This function calls:
 22902 ;;		Nothing
 22903 ;; This function is called by:
 22904 ;;		_check_help
 22905 ;; This function uses a reentrant model
 22906 ;;
 22907                           
 22908                           	psect	text89
 22909  01B6F6                     __ptext89:
 22910                           	opt callstack 0
 22911  01B6F6                     _display_info:
 22912                           	opt callstack 14
 22913                           
 22914                           ;mconfig.c: 192:  return V.response.info;
 22915                           
 22916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22917                           ;incstack = 0
 22918  01B6F6  0060  FA90  F028   	movff	_V+164,btemp	;volatile
 22919                           
 22920                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22921  01B6FC  0012               	return		;funcret
 22922  01B6FE                     __end_of_display_info:
 22923                           	opt callstack 0
 22924                           
 22925 ;; *************** function _display_help *****************
 22926 ;; Defined at:
 22927 ;;		line 195 in file "mconfig.c"
 22928 ;; Parameters:    Size  Location     Type
 22929 ;;		None
 22930 ;; Auto vars:     Size  Location     Type
 22931 ;;		None
 22932 ;; Return value:  Size  Location     Type
 22933 ;;                  1  [STACK] enum E16509
 22934 ;; Registers used:
 22935 ;;		btemp
 22936 ;; Tracked objects:
 22937 ;;		On entry : 3F/2
 22938 ;;		On exit  : 0/0
 22939 ;;		Unchanged: 0/0
 22940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22945 ;;Total ram usage:        0 bytes
 22946 ;; Hardware stack levels used:    1
 22947 ;; Hardware stack levels required when called:   15
 22948 ;; This function calls:
 22949 ;;		Nothing
 22950 ;; This function is called by:
 22951 ;;		_check_help
 22952 ;; This function uses a reentrant model
 22953 ;;
 22954                           
 22955                           	psect	text90
 22956  01B6FE                     __ptext90:
 22957                           	opt callstack 0
 22958  01B6FE                     _display_help:
 22959                           	opt callstack 14
 22960                           
 22961                           ;mconfig.c: 197:  return V.response.help_temp;
 22962                           
 22963                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22964                           ;incstack = 0
 22965  01B6FE  0060  FA94  F028   	movff	_V+165,btemp	;volatile
 22966                           
 22967                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22968  01B704  0012               	return		;funcret
 22969  01B706                     __end_of_display_help:
 22970                           	opt callstack 0
 22971                           
 22972 ;; *************** function _check_enter_button *****************
 22973 ;; Defined at:
 22974 ;;		line 42 in file "hid.c"
 22975 ;; Parameters:    Size  Location     Type
 22976 ;;  h               1  [STACK] PTR struct H_data
 22977 ;;		 -> H(7), 
 22978 ;; Auto vars:     Size  Location     Type
 22979 ;;		None
 22980 ;; Return value:  Size  Location     Type
 22981 ;;                  1  [STACK] _Bool 
 22982 ;; Registers used:
 22983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22984 ;; Tracked objects:
 22985 ;;		On entry : 0/0
 22986 ;;		On exit  : 0/0
 22987 ;;		Unchanged: 0/0
 22988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22993 ;;Total ram usage:        0 bytes
 22994 ;; Hardware stack levels used:    1
 22995 ;; Hardware stack levels required when called:   15
 22996 ;; This function calls:
 22997 ;;		Nothing
 22998 ;; This function is called by:
 22999 ;;		_main
 23000 ;; This function uses a reentrant model
 23001 ;;
 23002                           
 23003                           	psect	text91
 23004  01AC72                     __ptext91:
 23005                           	opt callstack 0
 23006  01AC72                     _check_enter_button:
 23007                           	opt callstack 15
 23008                           
 23009                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23010                           ;stkvar	_h @ sp[(0)+-1]
 23011                           
 23012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23013                           ;incstack = 0
 23014  01AC72  0EFF               	movlw	-1
 23015  01AC74  50E3               	movf	plusw1,w,c
 23016  01AC76  6ED9               	movwf	fsr2l,c
 23017  01AC78  6ADA               	clrf	fsr2h,c
 23018  01AC7A  0E04               	movlw	4
 23019  01AC7C  26D9               	addwf	fsr2l,f,c
 23020  01AC7E  50DF               	movf	indf2,w,c
 23021  01AC80  A4D8               	btfss	status,2,c
 23022  01AC82  D013               	goto	l10766
 23023                           
 23024                           ;stkvar	_h @ sp[(0)+-1]
 23025  01AC84  0EFF               	movlw	-1
 23026  01AC86  50E3               	movf	plusw1,w,c
 23027  01AC88  6ED9               	movwf	fsr2l,c
 23028  01AC8A  6ADA               	clrf	fsr2h,c
 23029  01AC8C  0E05               	movlw	5
 23030  01AC8E  26D9               	addwf	fsr2l,f,c
 23031  01AC90  50DF               	movf	indf2,w,c
 23032  01AC92  A4D8               	btfss	status,2,c
 23033  01AC94  D00A               	goto	l10766
 23034                           
 23035                           ;hid.c: 45:   h->wait_enter = 1;
 23036                           ;stkvar	_h @ sp[(0)+-1]
 23037  01AC96  0EFF               	movlw	-1
 23038  01AC98  50E3               	movf	plusw1,w,c
 23039  01AC9A  6ED9               	movwf	fsr2l,c
 23040  01AC9C  6ADA               	clrf	fsr2h,c
 23041  01AC9E  0E04               	movlw	4
 23042  01ACA0  26D9               	addwf	fsr2l,f,c
 23043  01ACA2  0E01               	movlw	1
 23044  01ACA4  6EDF               	movwf	indf2,c
 23045                           
 23046                           ;hid.c: 46:   return 1;
 23047  01ACA6  0E01               	movlw	1
 23048  01ACA8  D001               	goto	L26
 23049  01ACAA                     l10766:
 23050                           
 23051                           ;hid.c: 48:  return 0;
 23052  01ACAA  0E00               	movlw	0
 23053  01ACAC                     L26:
 23054  01ACAC  6E28               	movwf	btemp^0,c
 23055                           
 23056                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23057  01ACAE  52E5               	movf	postdec1,f,c
 23058  01ACB0  0012               	return		;funcret
 23059  01ACB2                     __end_of_check_enter_button:
 23060                           	opt callstack 0
 23061                           
 23062 ;; *************** function _calc_ror_data *****************
 23063 ;; Defined at:
 23064 ;;		line 101 in file "mbmc.c"
 23065 ;; Parameters:    Size  Location     Type
 23066 ;;		None
 23067 ;; Auto vars:     Size  Location     Type
 23068 ;;		None
 23069 ;; Return value:  Size  Location     Type
 23070 ;;                  1  [STACK] void 
 23071 ;; Registers used:
 23072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23073 ;; Tracked objects:
 23074 ;;		On entry : 0/39
 23075 ;;		On exit  : 0/0
 23076 ;;		Unchanged: 0/0
 23077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23082 ;;Total ram usage:        0 bytes
 23083 ;; Hardware stack levels used:    1
 23084 ;; Hardware stack levels required when called:   18
 23085 ;; This function calls:
 23086 ;;		___flge
 23087 ;;		___flsub
 23088 ;;		_conv_raw_result
 23089 ;;		_fabsf
 23090 ;; This function is called by:
 23091 ;;		_main
 23092 ;; This function uses a reentrant model
 23093 ;;
 23094                           
 23095                           	psect	text92
 23096  01829A                     __ptext92:
 23097                           	opt callstack 0
 23098  01829A                     _calc_ror_data:
 23099                           	opt callstack 12
 23100                           
 23101                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23102                           
 23103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23104                           ;incstack = 0
 23105  01829A  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23106  0182A0  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23107  0182A6  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23108  0182AC  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23109  0182B2  0E00               	movlw	0
 23110  0182B4  6EE6               	movwf	postinc1,c
 23111  0182B6  0E00               	movlw	0
 23112  0182B8  6EE6               	movwf	postinc1,c
 23113  0182BA  EC60  F0A7         	call	_conv_raw_result	;wreg free
 23114  0182BE  0060  F0A3  FFE6   	movff	btemp,postinc1
 23115  0182C4  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23116  0182CA  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23117  0182D0  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23118  0182D6  EC6D  F0D5         	call	___flsub	;wreg free
 23119  0182DA  0060  F0A3  FFE6   	movff	btemp,postinc1
 23120  0182E0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23121  0182E6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23122  0182EC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23123  0182F2  EC01  F0CE         	call	_fabsf	;wreg free
 23124  0182F6  0060  F0A0  F16C   	movff	btemp,_C+108	;volatile
 23125  0182FC  0060  F0A4  F16D   	movff	btemp+1,_C+109	;volatile
 23126  018302  0060  F0A8  F16E   	movff	btemp+2,_C+110	;volatile
 23127  018308  0060  F0AC  F16F   	movff	btemp+3,_C+111	;volatile
 23128                           
 23129                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 23130  01830E  0E00               	movlw	0
 23131  018310  6EE6               	movwf	postinc1,c
 23132  018312  0E00               	movlw	0
 23133  018314  6EE6               	movwf	postinc1,c
 23134  018316  EC60  F0A7         	call	_conv_raw_result	;wreg free
 23135  01831A  0060  F0A0  F086   	movff	btemp,calc_ror_data@bcror
 23136  018320  0060  F0A4  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23137  018326  0060  F0A8  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23138  01832C  0060  F0AC  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23139                           
 23140                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23141  018332  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23142  018338  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23143  01833E  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23144  018344  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23145  01834A  0E00               	movlw	0
 23146  01834C  6EE6               	movwf	postinc1,c
 23147  01834E  0E04               	movlw	4
 23148  018350  6EE6               	movwf	postinc1,c
 23149  018352  EC60  F0A7         	call	_conv_raw_result	;wreg free
 23150  018356  0060  F0A3  FFE6   	movff	btemp,postinc1
 23151  01835C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23152  018362  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23153  018368  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23154  01836E  EC6D  F0D5         	call	___flsub	;wreg free
 23155  018372  0060  F0A3  FFE6   	movff	btemp,postinc1
 23156  018378  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23157  01837E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23158  018384  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23159  01838A  EC01  F0CE         	call	_fabsf	;wreg free
 23160  01838E  0060  F0A0  F168   	movff	btemp,_C+104	;volatile
 23161  018394  0060  F0A4  F169   	movff	btemp+1,_C+105	;volatile
 23162  01839A  0060  F0A8  F16A   	movff	btemp+2,_C+106	;volatile
 23163  0183A0  0060  F0AC  F16B   	movff	btemp+3,_C+107	;volatile
 23164                           
 23165                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 23166  0183A6  0EE7               	movlw	231
 23167  0183A8  6EE6               	movwf	postinc1,c
 23168  0183AA  0E1D               	movlw	29
 23169  0183AC  6EE6               	movwf	postinc1,c
 23170  0183AE  0EA7               	movlw	167
 23171  0183B0  6EE6               	movwf	postinc1,c
 23172  0183B2  0E3B               	movlw	59
 23173  0183B4  6EE6               	movwf	postinc1,c
 23174  0183B6  0060  F5A3  FFE6   	movff	_C+104,postinc1
 23175  0183BC  0060  F5A7  FFE6   	movff	_C+105,postinc1
 23176  0183C2  0060  F5AB  FFE6   	movff	_C+106,postinc1
 23177  0183C8  0060  F5AF  FFE6   	movff	_C+107,postinc1
 23178  0183CE  EC78  F0C3         	call	___flge	;wreg free
 23179  0183D2  B028               	btfsc	btemp& (0+255),0,c
 23180  0183D4  D009               	goto	l10560
 23181                           
 23182                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 23183  0183D6  0EB0               	movlw	176
 23184  0183D8  0101               	movlb	1	; () banked
 23185  0183DA  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 23186  0183DC  0E03               	movlw	3
 23187  0183DE  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 23188  0183E0  0E67               	movlw	103
 23189  0183E2  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 23190  0183E4  0E3C               	movlw	60
 23191  0183E6  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 23192  0183E8                     l10560:
 23193                           
 23194                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 23195  0183E8  0E00               	movlw	0
 23196  0183EA  6EE6               	movwf	postinc1,c
 23197  0183EC  0E04               	movlw	4
 23198  0183EE  6EE6               	movwf	postinc1,c
 23199  0183F0  EC60  F0A7         	call	_conv_raw_result	;wreg free
 23200  0183F4  0060  F0A0  F08A   	movff	btemp,calc_ror_data@bvror
 23201  0183FA  0060  F0A4  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23202  018400  0060  F0A8  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23203  018406  0060  F0AC  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23204                           
 23205                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23206  01840C  0012               	return		;funcret
 23207  01840E                     __end_of_calc_ror_data:
 23208                           	opt callstack 0
 23209                           
 23210 ;; *************** function _fabsf *****************
 23211 ;; Defined at:
 23212 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23213 ;; Parameters:    Size  Location     Type
 23214 ;;  x               4  [STACK] float 
 23215 ;; Auto vars:     Size  Location     Type
 23216 ;;  u               4  [STACK] struct .
 23217 ;; Return value:  Size  Location     Type
 23218 ;;                  4  [STACK] float 
 23219 ;; Registers used:
 23220 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23221 ;; Tracked objects:
 23222 ;;		On entry : 0/0
 23223 ;;		On exit  : 0/0
 23224 ;;		Unchanged: 0/0
 23225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23230 ;;Total ram usage:        0 bytes
 23231 ;; Hardware stack levels used:    1
 23232 ;; Hardware stack levels required when called:   15
 23233 ;; This function calls:
 23234 ;;		Nothing
 23235 ;; This function is called by:
 23236 ;;		_main
 23237 ;;		_calc_ror_data
 23238 ;;		_calc_bsoc
 23239 ;;		_esr_check
 23240 ;; This function uses a reentrant model
 23241 ;;
 23242                           
 23243                           	psect	text93
 23244  019C02                     __ptext93:
 23245                           	opt callstack 0
 23246  019C02                     _fabsf:
 23247                           	opt callstack 0
 23248                           
 23249                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23250  019C02  52E6               	movf	postinc1,f,c
 23251  019C04  52E6               	movf	postinc1,f,c
 23252  019C06  52E6               	movf	postinc1,f,c
 23253  019C08  52E6               	movf	postinc1,f,c
 23254                           
 23255                           ;incstack = 0
 23256 ;; hardware stack exceeded
 23257  019C0A  0060  F1F8  F030   	movff	fabsf@F463,btemp+8
 23258  019C10  0060  F1FC  F031   	movff	fabsf@F463+1,btemp+9
 23259  019C16  0060  F200  F032   	movff	fabsf@F463+2,btemp+10
 23260  019C1C  0060  F204  F033   	movff	fabsf@F463+3,btemp+11
 23261                           
 23262                           ;stkvar	_u @ sp[(-4)+0]
 23263  019C22  0EFC               	movlw	-4
 23264  019C24  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 23265  019C2A  0EFD               	movlw	-3
 23266  019C2C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 23267  019C32  0EFE               	movlw	-2
 23268  019C34  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 23269  019C3A  0EFF               	movlw	-1
 23270  019C3C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 23271                           
 23272                           ;stkvar	_x @ sp[(-4)+-4]
 23273  019C42  0EF8               	movlw	-8
 23274  019C44  006F FF8C  F030    	movff	plusw1,btemp+8
 23275  019C4A  0EF9               	movlw	-7
 23276  019C4C  006F FF8C  F031    	movff	plusw1,btemp+9
 23277  019C52  0EFA               	movlw	-6
 23278  019C54  006F FF8C  F032    	movff	plusw1,btemp+10
 23279  019C5A  0EFB               	movlw	-5
 23280  019C5C  006F FF8C  F033    	movff	plusw1,btemp+11
 23281                           
 23282                           ;stkvar	_u @ sp[(-4)+0]
 23283  019C62  0EFC               	movlw	-4
 23284  019C64  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 23285  019C6A  0EFD               	movlw	-3
 23286  019C6C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 23287  019C72  0EFE               	movlw	-2
 23288  019C74  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 23289  019C7A  0EFF               	movlw	-1
 23290  019C7C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 23291                           
 23292                           ;stkvar	_u @ sp[(-4)+0]
 23293  019C82  0EFF               	movlw	-1
 23294  019C84  9EE3               	bcf	plusw1,7,c
 23295                           
 23296                           ;stkvar	_u @ sp[(-4)+0]
 23297  019C86  0EFC               	movlw	-4
 23298  019C88  006F FF8C  F028    	movff	plusw1,btemp
 23299  019C8E  0EFD               	movlw	-3
 23300  019C90  006F FF8C  F029    	movff	plusw1,btemp+1
 23301  019C96  0EFE               	movlw	-2
 23302  019C98  006F FF8C  F02A    	movff	plusw1,btemp+2
 23303  019C9E  0EFF               	movlw	-1
 23304  019CA0  006F FF8C  F02B    	movff	plusw1,btemp+3
 23305                           
 23306                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23307  019CA6  0EF8               	movlw	248
 23308  019CA8  26E1               	addwf	fsr1l,f,c
 23309  019CAA  0EFF               	movlw	255
 23310  019CAC  22E2               	addwfc	fsr1h,f,c
 23311  019CAE  0012               	return		;funcret
 23312  019CB0                     __end_of_fabsf:
 23313                           	opt callstack 0
 23314                           
 23315 ;; *************** function _conv_raw_result *****************
 23316 ;; Defined at:
 23317 ;;		line 95 in file "daq.c"
 23318 ;; Parameters:    Size  Location     Type
 23319 ;;  chan            1  [STACK] const enum E16582
 23320 ;;  to_what         1  [STACK] const enum E16644
 23321 ;; Auto vars:     Size  Location     Type
 23322 ;;		None
 23323 ;; Return value:  Size  Location     Type
 23324 ;;                  4  [STACK] float 
 23325 ;; Registers used:
 23326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23327 ;; Tracked objects:
 23328 ;;		On entry : 0/39
 23329 ;;		On exit  : 0/0
 23330 ;;		Unchanged: 0/0
 23331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23336 ;;Total ram usage:        0 bytes
 23337 ;; Hardware stack levels used:    1
 23338 ;; Hardware stack levels required when called:   17
 23339 ;; This function calls:
 23340 ;;		___fldiv
 23341 ;;		___flmul
 23342 ;;		___flsub
 23343 ;;		___xxtofl
 23344 ;;		_get_raw_result
 23345 ;;		_nanf
 23346 ;; This function is called by:
 23347 ;;		_main
 23348 ;;		_convert_adc_data
 23349 ;;		_calc_ror_data
 23350 ;;		_init_bsoc
 23351 ;;		_esr_check
 23352 ;; This function uses a reentrant model
 23353 ;;
 23354                           
 23355                           	psect	text94
 23356  014EC0                     __ptext94:
 23357                           	opt callstack 0
 23358  014EC0                     _conv_raw_result:
 23359                           	opt callstack 12
 23360                           
 23361                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 23362                           
 23363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23364                           ;incstack = 0
 23365  014EC0  D242               	goto	l10096
 23366  014EC2                     l10042:
 23367                           
 23368                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 23369                           ;stkvar	_chan @ sp[(0)+-1]
 23370  014EC2  0EFF               	movlw	-1
 23371  014EC4  006F FF8C  F033    	movff	plusw1,btemp+11
 23372  014ECA  0E77               	movlw	119
 23373  014ECC  6E30               	movwf	(btemp+8)^0,c
 23374  014ECE  0E3C               	movlw	60
 23375  014ED0  6E31               	movwf	(btemp+9)^0,c
 23376  014ED2  2A33               	incf	(btemp+11)^0,f,c
 23377  014ED4  D003               	goto	u9094
 23378  014ED6                     u9095:
 23379  014ED6  3431               	rlcf	(btemp+9)^0,w,c
 23380  014ED8  3231               	rrcf	(btemp+9)^0,f,c
 23381  014EDA  3230               	rrcf	(btemp+8)^0,f,c
 23382  014EDC                     u9094:
 23383  014EDC  2E33               	decfsz	(btemp+11)^0,f,c
 23384  014EDE  D7FB               	goto	u9095
 23385  014EE0  B030               	btfsc	(btemp+8)^0,0,c
 23386  014EE2  D007               	goto	l10048
 23387                           
 23388                           ;daq.c: 101:    return nanf("");
 23389  014EE4  0EBB               	movlw	low (STR_65+84)
 23390  014EE6  6EE6               	movwf	postinc1,c
 23391  014EE8  0EFC               	movlw	high (STR_65+84)
 23392  014EEA  6EE6               	movwf	postinc1,c
 23393  014EEC  EC53  F0D3         	call	_nanf	;wreg free
 23394  014EF0  D23A               	goto	l1774
 23395  014EF2                     l10048:
 23396                           
 23397                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23398                           ;stkvar	_chan @ sp[(0)+-1]
 23399  014EF2  0EFF               	movlw	-1
 23400  014EF4  006F FF8C  F033    	movff	plusw1,btemp+11
 23401  014EFA  0E03               	movlw	3
 23402  014EFC  6E30               	movwf	(btemp+8)^0,c
 23403  014EFE  0E00               	movlw	0
 23404  014F00  6E31               	movwf	(btemp+9)^0,c
 23405  014F02  2A33               	incf	(btemp+11)^0,f,c
 23406  014F04  D003               	goto	u9114
 23407  014F06                     u9115:
 23408  014F06  3431               	rlcf	(btemp+9)^0,w,c
 23409  014F08  3231               	rrcf	(btemp+9)^0,f,c
 23410  014F0A  3230               	rrcf	(btemp+8)^0,f,c
 23411  014F0C                     u9114:
 23412  014F0C  2E33               	decfsz	(btemp+11)^0,f,c
 23413  014F0E  D7FB               	goto	u9115
 23414  014F10  A030               	btfss	(btemp+8)^0,0,c
 23415  014F12  D0EB               	goto	l10062
 23416                           
 23417                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23418                           ;stkvar	_chan @ sp[(0)+-1]
 23419  014F14  0EFF               	movlw	-1
 23420  014F16  006F FF8C  F033    	movff	plusw1,btemp+11
 23421  014F1C  0E01               	movlw	1
 23422  014F1E  6E30               	movwf	(btemp+8)^0,c
 23423  014F20  0E00               	movlw	0
 23424  014F22  6E31               	movwf	(btemp+9)^0,c
 23425  014F24  2A33               	incf	(btemp+11)^0,f,c
 23426  014F26  D003               	goto	u9134
 23427  014F28                     u9135:
 23428  014F28  3431               	rlcf	(btemp+9)^0,w,c
 23429  014F2A  3231               	rrcf	(btemp+9)^0,f,c
 23430  014F2C  3230               	rrcf	(btemp+8)^0,f,c
 23431  014F2E                     u9134:
 23432  014F2E  2E33               	decfsz	(btemp+11)^0,f,c
 23433  014F30  D7FB               	goto	u9135
 23434  014F32  A030               	btfss	(btemp+8)^0,0,c
 23435  014F34  D06D               	goto	l10058
 23436                           
 23437                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 23438  014F36  0E7B               	movlw	123
 23439  014F38  6EE6               	movwf	postinc1,c
 23440  014F3A  0E14               	movlw	20
 23441  014F3C  6EE6               	movwf	postinc1,c
 23442  014F3E  0EAE               	movlw	174
 23443  014F40  6EE6               	movwf	postinc1,c
 23444  014F42  0E3D               	movlw	61
 23445  014F44  6EE6               	movwf	postinc1,c
 23446  014F46  0060  F398  F030   	movff	_R+32,btemp+8	;volatile
 23447  014F4C  0060  F39C  F031   	movff	_R+33,btemp+9	;volatile
 23448  014F52  0E00               	movlw	0
 23449  014F54  BE31               	btfsc	(btemp+9)^0,7,c
 23450  014F56  0EFF               	movlw	255
 23451  014F58  6E32               	movwf	(btemp+10)^0,c
 23452  014F5A  6E33               	movwf	(btemp+11)^0,c
 23453  014F5C  0060  F0C3  FFE6   	movff	btemp+8,postinc1
 23454  014F62  0060  F0C7  FFE6   	movff	btemp+9,postinc1
 23455  014F68  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 23456  014F6E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 23457  014F74  0E01               	movlw	1
 23458  014F76  6EE6               	movwf	postinc1,c
 23459  014F78  ECE2  F0BC         	call	___xxtofl	;wreg free
 23460  014F7C  0060  F0A3  FFE6   	movff	btemp,postinc1
 23461  014F82  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23462  014F88  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23463  014F8E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23464                           
 23465                           ;stkvar	_chan @ sp[(-8)+-1]
 23466  014F94  0EF7               	movlw	-9
 23467  014F96  50E3               	movf	plusw1,w,c
 23468  014F98  6EE6               	movwf	postinc1,c
 23469  014F9A  EC80  F0DA         	call	_get_raw_result	;wreg free
 23470  014F9E  0060  F0A0  F032   	movff	btemp,btemp+10
 23471  014FA4  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23472  014FAA  5032               	movf	(btemp+10)^0,w,c
 23473  014FAC  6E2C               	movwf	(btemp+4)^0,c
 23474  014FAE  5033               	movf	(btemp+11)^0,w,c
 23475  014FB0  6E2D               	movwf	(btemp+5)^0,c
 23476  014FB2  6A2E               	clrf	(btemp+6)^0,c
 23477  014FB4  6A2F               	clrf	(btemp+7)^0,c
 23478  014FB6  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23479  014FBC  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23480  014FC2  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23481  014FC8  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23482  014FCE  0E00               	movlw	0
 23483  014FD0  6EE6               	movwf	postinc1,c
 23484  014FD2  ECE2  F0BC         	call	___xxtofl	;wreg free
 23485  014FD6  0060  F0A3  FFE6   	movff	btemp,postinc1
 23486  014FDC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23487  014FE2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23488  014FE8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23489  014FEE  EC6D  F0D5         	call	___flsub	;wreg free
 23490  014FF2  0060  F0A3  FFE6   	movff	btemp,postinc1
 23491  014FF8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23492  014FFE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23493  015004  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23494  01500A  EC0F  F099         	call	___flmul	;wreg free
 23495  01500E  D1AB               	goto	l1774
 23496  015010                     l10058:
 23497                           
 23498                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 23499  015010  0E29               	movlw	41
 23500  015012  6EE6               	movwf	postinc1,c
 23501  015014  0E5C               	movlw	92
 23502  015016  6EE6               	movwf	postinc1,c
 23503  015018  0E0F               	movlw	15
 23504  01501A  6EE6               	movwf	postinc1,c
 23505  01501C  0E3D               	movlw	61
 23506  01501E  6EE6               	movwf	postinc1,c
 23507  015020  0060  F3A0  F030   	movff	_R+34,btemp+8	;volatile
 23508  015026  0060  F3A4  F031   	movff	_R+35,btemp+9	;volatile
 23509  01502C  0E00               	movlw	0
 23510  01502E  BE31               	btfsc	(btemp+9)^0,7,c
 23511  015030  0EFF               	movlw	255
 23512  015032  6E32               	movwf	(btemp+10)^0,c
 23513  015034  6E33               	movwf	(btemp+11)^0,c
 23514  015036  0060  F0C3  FFE6   	movff	btemp+8,postinc1
 23515  01503C  0060  F0C7  FFE6   	movff	btemp+9,postinc1
 23516  015042  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 23517  015048  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 23518  01504E  0E01               	movlw	1
 23519  015050  6EE6               	movwf	postinc1,c
 23520  015052  ECE2  F0BC         	call	___xxtofl	;wreg free
 23521  015056  0060  F0A3  FFE6   	movff	btemp,postinc1
 23522  01505C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23523  015062  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23524  015068  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23525                           
 23526                           ;stkvar	_chan @ sp[(-8)+-1]
 23527  01506E  0EF7               	movlw	-9
 23528  015070  50E3               	movf	plusw1,w,c
 23529  015072  6EE6               	movwf	postinc1,c
 23530  015074  EC80  F0DA         	call	_get_raw_result	;wreg free
 23531  015078  0060  F0A0  F032   	movff	btemp,btemp+10
 23532  01507E  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23533  015084  5032               	movf	(btemp+10)^0,w,c
 23534  015086  6E2C               	movwf	(btemp+4)^0,c
 23535  015088  5033               	movf	(btemp+11)^0,w,c
 23536  01508A  6E2D               	movwf	(btemp+5)^0,c
 23537  01508C  6A2E               	clrf	(btemp+6)^0,c
 23538  01508E  6A2F               	clrf	(btemp+7)^0,c
 23539  015090  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23540  015096  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23541  01509C  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23542  0150A2  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23543  0150A8  0E00               	movlw	0
 23544  0150AA  6EE6               	movwf	postinc1,c
 23545  0150AC  ECE2  F0BC         	call	___xxtofl	;wreg free
 23546  0150B0  0060  F0A3  FFE6   	movff	btemp,postinc1
 23547  0150B6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23548  0150BC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23549  0150C2  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23550  0150C8  EC6D  F0D5         	call	___flsub	;wreg free
 23551  0150CC  0060  F0A3  FFE6   	movff	btemp,postinc1
 23552  0150D2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23553  0150D8  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23554  0150DE  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23555  0150E4  EC0F  F099         	call	___flmul	;wreg free
 23556  0150E8  D13E               	goto	l1774
 23557  0150EA                     l10062:
 23558                           
 23559                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23560                           ;stkvar	_chan @ sp[(0)+-1]
 23561  0150EA  0EFF               	movlw	-1
 23562  0150EC  006F FF8C  F033    	movff	plusw1,btemp+11
 23563  0150F2  0E00               	movlw	0
 23564  0150F4  6E30               	movwf	(btemp+8)^0,c
 23565  0150F6  0E08               	movlw	8
 23566  0150F8  6E31               	movwf	(btemp+9)^0,c
 23567  0150FA  2A33               	incf	(btemp+11)^0,f,c
 23568  0150FC  D003               	goto	u9154
 23569  0150FE                     u9155:
 23570  0150FE  3431               	rlcf	(btemp+9)^0,w,c
 23571  015100  3231               	rrcf	(btemp+9)^0,f,c
 23572  015102  3230               	rrcf	(btemp+8)^0,f,c
 23573  015104                     u9154:
 23574  015104  2E33               	decfsz	(btemp+11)^0,f,c
 23575  015106  D7FB               	goto	u9155
 23576  015108  A030               	btfss	(btemp+8)^0,0,c
 23577  01510A  D008               	goto	l10070
 23578                           
 23579                           ;daq.c: 111:     return 25.0;
 23580  01510C  0E00               	movlw	0
 23581  01510E  6E28               	movwf	btemp^0,c
 23582  015110  0E00               	movlw	0
 23583  015112  6E29               	movwf	(btemp+1)^0,c
 23584  015114  0EC8               	movlw	200
 23585  015116  6E2A               	movwf	(btemp+2)^0,c
 23586  015118  0E41               	movlw	65
 23587  01511A  D113               	goto	L27
 23588  01511C                     l10070:
 23589                           
 23590                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23591  01511C  0E00               	movlw	0
 23592  01511E  6EE6               	movwf	postinc1,c
 23593  015120  0E00               	movlw	0
 23594  015122  6EE6               	movwf	postinc1,c
 23595  015124  0E7A               	movlw	122
 23596  015126  6EE6               	movwf	postinc1,c
 23597  015128  0E44               	movlw	68
 23598  01512A  6EE6               	movwf	postinc1,c
 23599  01512C  0E61               	movlw	97
 23600  01512E  6EE6               	movwf	postinc1,c
 23601  015130  0E03               	movlw	3
 23602  015132  6EE6               	movwf	postinc1,c
 23603  015134  0E84               	movlw	132
 23604  015136  6EE6               	movwf	postinc1,c
 23605  015138  0E40               	movlw	64
 23606  01513A  6EE6               	movwf	postinc1,c
 23607                           
 23608                           ;stkvar	_chan @ sp[(-8)+-1]
 23609  01513C  0EF7               	movlw	-9
 23610  01513E  50E3               	movf	plusw1,w,c
 23611  015140  6EE6               	movwf	postinc1,c
 23612  015142  EC80  F0DA         	call	_get_raw_result	;wreg free
 23613  015146  0060  F0A0  F032   	movff	btemp,btemp+10
 23614  01514C  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23615  015152  5032               	movf	(btemp+10)^0,w,c
 23616  015154  6E2C               	movwf	(btemp+4)^0,c
 23617  015156  5033               	movf	(btemp+11)^0,w,c
 23618  015158  6E2D               	movwf	(btemp+5)^0,c
 23619  01515A  6A2E               	clrf	(btemp+6)^0,c
 23620  01515C  6A2F               	clrf	(btemp+7)^0,c
 23621  01515E  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23622  015164  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23623  01516A  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23624  015170  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23625  015176  0E00               	movlw	0
 23626  015178  6EE6               	movwf	postinc1,c
 23627  01517A  ECE2  F0BC         	call	___xxtofl	;wreg free
 23628  01517E  0060  F0A3  FFE6   	movff	btemp,postinc1
 23629  015184  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23630  01518A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23631  015190  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23632  015196  EC0F  F099         	call	___flmul	;wreg free
 23633  01519A  0060  F0A3  FFE6   	movff	btemp,postinc1
 23634  0151A0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23635  0151A6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23636  0151AC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23637  0151B2  ECA3  F0A4         	call	___fldiv	;wreg free
 23638  0151B6  D0D7               	goto	l1774
 23639  0151B8                     l10074:
 23640                           
 23641                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23642                           ;stkvar	_chan @ sp[(0)+-1]
 23643  0151B8  0EFF               	movlw	-1
 23644  0151BA  006F FF8C  F033    	movff	plusw1,btemp+11
 23645  0151C0  0E03               	movlw	3
 23646  0151C2  6E30               	movwf	(btemp+8)^0,c
 23647  0151C4  0E00               	movlw	0
 23648  0151C6  6E31               	movwf	(btemp+9)^0,c
 23649  0151C8  2A33               	incf	(btemp+11)^0,f,c
 23650  0151CA  D003               	goto	u9174
 23651  0151CC                     u9175:
 23652  0151CC  3431               	rlcf	(btemp+9)^0,w,c
 23653  0151CE  3231               	rrcf	(btemp+9)^0,f,c
 23654  0151D0  3230               	rrcf	(btemp+8)^0,f,c
 23655  0151D2                     u9174:
 23656  0151D2  2E33               	decfsz	(btemp+11)^0,f,c
 23657  0151D4  D7FB               	goto	u9175
 23658  0151D6  B030               	btfsc	(btemp+8)^0,0,c
 23659  0151D8  D011               	goto	u9200
 23660                           
 23661                           ;stkvar	_chan @ sp[(0)+-1]
 23662  0151DA  0EFF               	movlw	-1
 23663  0151DC  006F FF8C  F033    	movff	plusw1,btemp+11
 23664  0151E2  0E00               	movlw	0
 23665  0151E4  6E30               	movwf	(btemp+8)^0,c
 23666  0151E6  0E08               	movlw	8
 23667  0151E8  6E31               	movwf	(btemp+9)^0,c
 23668  0151EA  2A33               	incf	(btemp+11)^0,f,c
 23669  0151EC  D003               	goto	u9194
 23670  0151EE                     u9195:
 23671  0151EE  3431               	rlcf	(btemp+9)^0,w,c
 23672  0151F0  3231               	rrcf	(btemp+9)^0,f,c
 23673  0151F2  3230               	rrcf	(btemp+8)^0,f,c
 23674  0151F4                     u9194:
 23675  0151F4  2E33               	decfsz	(btemp+11)^0,f,c
 23676  0151F6  D7FB               	goto	u9195
 23677  0151F8  A030               	btfss	(btemp+8)^0,0,c
 23678  0151FA  D04E               	goto	l10082
 23679  0151FC                     u9200:
 23680                           
 23681                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23682  0151FC  0E00               	movlw	0
 23683  0151FE  6EE6               	movwf	postinc1,c
 23684  015200  0E00               	movlw	0
 23685  015202  6EE6               	movwf	postinc1,c
 23686  015204  0E7A               	movlw	122
 23687  015206  6EE6               	movwf	postinc1,c
 23688  015208  0E44               	movlw	68
 23689  01520A  6EE6               	movwf	postinc1,c
 23690  01520C  0E00               	movlw	0
 23691  01520E  6EE6               	movwf	postinc1,c
 23692  015210  0E00               	movlw	0
 23693  015212  6EE6               	movwf	postinc1,c
 23694  015214  0E20               	movlw	32
 23695  015216  6EE6               	movwf	postinc1,c
 23696  015218  0E3F               	movlw	63
 23697  01521A  6EE6               	movwf	postinc1,c
 23698                           
 23699                           ;stkvar	_chan @ sp[(-8)+-1]
 23700  01521C  0EF7               	movlw	-9
 23701  01521E  50E3               	movf	plusw1,w,c
 23702  015220  6EE6               	movwf	postinc1,c
 23703  015222  EC80  F0DA         	call	_get_raw_result	;wreg free
 23704  015226  0060  F0A0  F032   	movff	btemp,btemp+10
 23705  01522C  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23706  015232  5032               	movf	(btemp+10)^0,w,c
 23707  015234  6E2C               	movwf	(btemp+4)^0,c
 23708  015236  5033               	movf	(btemp+11)^0,w,c
 23709  015238  6E2D               	movwf	(btemp+5)^0,c
 23710  01523A  6A2E               	clrf	(btemp+6)^0,c
 23711  01523C  6A2F               	clrf	(btemp+7)^0,c
 23712  01523E  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23713  015244  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23714  01524A  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23715  015250  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23716  015256  0E00               	movlw	0
 23717  015258  6EE6               	movwf	postinc1,c
 23718  01525A  ECE2  F0BC         	call	___xxtofl	;wreg free
 23719  01525E  0060  F0A3  FFE6   	movff	btemp,postinc1
 23720  015264  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23721  01526A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23722  015270  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23723  015276  EC0F  F099         	call	___flmul	;wreg free
 23724  01527A  0060  F0A3  FFE6   	movff	btemp,postinc1
 23725  015280  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23726  015286  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23727  01528C  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23728  015292  ECA3  F0A4         	call	___fldiv	;wreg free
 23729  015296  D067               	goto	l1774
 23730  015298                     l10082:
 23731                           
 23732                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23733  015298  0E00               	movlw	0
 23734  01529A  6EE6               	movwf	postinc1,c
 23735  01529C  0E00               	movlw	0
 23736  01529E  6EE6               	movwf	postinc1,c
 23737  0152A0  0E7A               	movlw	122
 23738  0152A2  6EE6               	movwf	postinc1,c
 23739  0152A4  0E44               	movlw	68
 23740  0152A6  6EE6               	movwf	postinc1,c
 23741  0152A8  0E61               	movlw	97
 23742  0152AA  6EE6               	movwf	postinc1,c
 23743  0152AC  0E03               	movlw	3
 23744  0152AE  6EE6               	movwf	postinc1,c
 23745  0152B0  0E84               	movlw	132
 23746  0152B2  6EE6               	movwf	postinc1,c
 23747  0152B4  0E40               	movlw	64
 23748  0152B6  6EE6               	movwf	postinc1,c
 23749                           
 23750                           ;stkvar	_chan @ sp[(-8)+-1]
 23751  0152B8  0EF7               	movlw	-9
 23752  0152BA  50E3               	movf	plusw1,w,c
 23753  0152BC  6EE6               	movwf	postinc1,c
 23754  0152BE  EC80  F0DA         	call	_get_raw_result	;wreg free
 23755  0152C2  0060  F0A0  F032   	movff	btemp,btemp+10
 23756  0152C8  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23757  0152CE  5032               	movf	(btemp+10)^0,w,c
 23758  0152D0  6E2C               	movwf	(btemp+4)^0,c
 23759  0152D2  5033               	movf	(btemp+11)^0,w,c
 23760  0152D4  6E2D               	movwf	(btemp+5)^0,c
 23761  0152D6  6A2E               	clrf	(btemp+6)^0,c
 23762  0152D8  6A2F               	clrf	(btemp+7)^0,c
 23763  0152DA  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23764  0152E0  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23765  0152E6  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23766  0152EC  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23767  0152F2  0E00               	movlw	0
 23768  0152F4  6EE6               	movwf	postinc1,c
 23769  0152F6  ECE2  F0BC         	call	___xxtofl	;wreg free
 23770  0152FA  0060  F0A3  FFE6   	movff	btemp,postinc1
 23771  015300  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23772  015306  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23773  01530C  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23774  015312  EC0F  F099         	call	___flmul	;wreg free
 23775  015316  0060  F0A3  FFE6   	movff	btemp,postinc1
 23776  01531C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23777  015322  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23778  015328  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23779  01532E  ECA3  F0A4         	call	___fldiv	;wreg free
 23780  015332  D019               	goto	l1774
 23781  015334                     l10088:
 23782                           
 23783                           ;daq.c: 124:   return 0.0;
 23784  015334  0E00               	movlw	0
 23785  015336  6E28               	movwf	btemp^0,c
 23786  015338  0E00               	movlw	0
 23787  01533A  6E29               	movwf	(btemp+1)^0,c
 23788  01533C  0E00               	movlw	0
 23789  01533E  6E2A               	movwf	(btemp+2)^0,c
 23790  015340  0E00               	movlw	0
 23791  015342                     L27:
 23792  015342  6E2B               	movwf	(btemp+3)^0,c
 23793  015344  D010               	goto	l1774
 23794  015346                     l10096:
 23795                           
 23796                           ;stkvar	_to_what @ sp[(0)+-2]
 23797  015346  0EFE               	movlw	-2
 23798  015348  50E3               	movf	plusw1,w,c
 23799  01534A  6E32               	movwf	(btemp+10)^0,c
 23800  01534C  6A33               	clrf	(btemp+11)^0,c
 23801                           
 23802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23803                           ; Switch size 1, requested type "simple"
 23804                           ; Number of cases is 1, Range of values is 0 to 0
 23805                           ; switch strategies available:
 23806                           ; Name         Instructions Cycles
 23807                           ; simple_byte            4     3 (average)
 23808                           ;	Chosen strategy is simple_byte
 23809  01534E  5033               	movf	(btemp+11)^0,w,c
 23810  015350  0A00               	xorlw	0	; case 0
 23811  015352  A4D8               	btfss	status,2,c
 23812  015354  D7EF               	goto	l10088
 23813                           
 23814                           ; Switch size 1, requested type "simple"
 23815                           ; Number of cases is 2, Range of values is 0 to 1
 23816                           ; switch strategies available:
 23817                           ; Name         Instructions Cycles
 23818                           ; simple_byte            7     4 (average)
 23819                           ;	Chosen strategy is simple_byte
 23820  015356  5032               	movf	(btemp+10)^0,w,c
 23821  015358  0A00               	xorlw	0	; case 0
 23822  01535A  B4D8               	btfsc	status,2,c
 23823  01535C  D5B2               	goto	l10042
 23824  01535E  0A01               	xorlw	1	; case 1
 23825  015360  B4D8               	btfsc	status,2,c
 23826  015362  D72A               	goto	l10074
 23827  015364  D7E7               	goto	l10088
 23828  015366                     l1774:
 23829                           
 23830                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23831  015366  52E5               	movf	postdec1,f,c
 23832  015368  52E5               	movf	postdec1,f,c
 23833  01536A  0012               	return		;funcret
 23834  01536C                     __end_of_conv_raw_result:
 23835                           	opt callstack 0
 23836                           
 23837 ;; *************** function _nanf *****************
 23838 ;; Defined at:
 23839 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23840 ;; Parameters:    Size  Location     Type
 23841 ;;  s               2  [STACK] PTR const unsigned char 
 23842 ;;		 -> STR_102(1), STR_64(1), 
 23843 ;; Auto vars:     Size  Location     Type
 23844 ;;  u               4  [STACK] struct .
 23845 ;; Return value:  Size  Location     Type
 23846 ;;                  4  [STACK] float 
 23847 ;; Registers used:
 23848 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23849 ;; Tracked objects:
 23850 ;;		On entry : 0/39
 23851 ;;		On exit  : 0/0
 23852 ;;		Unchanged: 0/0
 23853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23858 ;;Total ram usage:        0 bytes
 23859 ;; Hardware stack levels used:    1
 23860 ;; Hardware stack levels required when called:   15
 23861 ;; This function calls:
 23862 ;;		Nothing
 23863 ;; This function is called by:
 23864 ;;		_conv_raw_result
 23865 ;; This function uses a reentrant model
 23866 ;;
 23867                           
 23868                           	psect	text95
 23869  01A6A6                     __ptext95:
 23870                           	opt callstack 0
 23871  01A6A6                     _nanf:
 23872                           	opt callstack 0
 23873                           
 23874                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23875  01A6A6  52E6               	movf	postinc1,f,c
 23876  01A6A8  52E6               	movf	postinc1,f,c
 23877  01A6AA  52E6               	movf	postinc1,f,c
 23878  01A6AC  52E6               	movf	postinc1,f,c
 23879                           
 23880                           ;incstack = 0
 23881  01A6AE  0EFF               	movlw	255
 23882  01A6B0  6E30               	movwf	(btemp+8)^0,c
 23883  01A6B2  0EFF               	movlw	255
 23884  01A6B4  6E31               	movwf	(btemp+9)^0,c
 23885  01A6B6  0EFF               	movlw	255
 23886  01A6B8  6E32               	movwf	(btemp+10)^0,c
 23887  01A6BA  0E7F               	movlw	127
 23888  01A6BC  6E33               	movwf	(btemp+11)^0,c
 23889                           
 23890                           ;stkvar	_u @ sp[(-4)+0]
 23891  01A6BE  0EFC               	movlw	-4
 23892  01A6C0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 23893  01A6C6  0EFD               	movlw	-3
 23894  01A6C8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 23895  01A6CE  0EFE               	movlw	-2
 23896  01A6D0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 23897  01A6D6  0EFF               	movlw	-1
 23898  01A6D8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 23899                           
 23900                           ;stkvar	_u @ sp[(-4)+0]
 23901  01A6DE  0EFC               	movlw	-4
 23902  01A6E0  006F FF8C  F028    	movff	plusw1,btemp
 23903  01A6E6  0EFD               	movlw	-3
 23904  01A6E8  006F FF8C  F029    	movff	plusw1,btemp+1
 23905  01A6EE  0EFE               	movlw	-2
 23906  01A6F0  006F FF8C  F02A    	movff	plusw1,btemp+2
 23907  01A6F6  0EFF               	movlw	-1
 23908  01A6F8  006F FF8C  F02B    	movff	plusw1,btemp+3
 23909                           
 23910                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23911  01A6FE  0EFA               	movlw	250
 23912  01A700  26E1               	addwf	fsr1l,f,c
 23913  01A702  0EFF               	movlw	255
 23914  01A704  22E2               	addwfc	fsr1h,f,c
 23915  01A706  0012               	return		;funcret
 23916  01A708                     __end_of_nanf:
 23917                           	opt callstack 0
 23918                           
 23919 ;; *************** function _get_raw_result *****************
 23920 ;; Defined at:
 23921 ;;		line 87 in file "daq.c"
 23922 ;; Parameters:    Size  Location     Type
 23923 ;;  index           1  [STACK] const enum E16582
 23924 ;; Auto vars:     Size  Location     Type
 23925 ;;		None
 23926 ;; Return value:  Size  Location     Type
 23927 ;;                  2  [STACK] unsigned short 
 23928 ;; Registers used:
 23929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23930 ;; Tracked objects:
 23931 ;;		On entry : 0/2
 23932 ;;		On exit  : 0/0
 23933 ;;		Unchanged: 0/0
 23934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23939 ;;Total ram usage:        0 bytes
 23940 ;; Hardware stack levels used:    1
 23941 ;; Hardware stack levels required when called:   15
 23942 ;; This function calls:
 23943 ;;		Nothing
 23944 ;; This function is called by:
 23945 ;;		_main
 23946 ;;		_conv_raw_result
 23947 ;; This function uses a reentrant model
 23948 ;;
 23949                           
 23950                           	psect	text96
 23951  01B500                     __ptext96:
 23952                           	opt callstack 0
 23953  01B500                     _get_raw_result:
 23954                           	opt callstack 13
 23955                           
 23956                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 23957                           ;stkvar	_index @ sp[(0)+-1]
 23958                           
 23959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23960                           ;incstack = 0
 23961  01B500  0EFF               	movlw	-1
 23962  01B502  50E3               	movf	plusw1,w,c
 23963  01B504  0D02               	mullw	2
 23964  01B506  50F3               	movf	243,w,c
 23965  01B508  0FC6               	addlw	low _R
 23966  01B50A  6ED9               	movwf	fsr2l,c
 23967  01B50C  6ADA               	clrf	fsr2h,c
 23968  01B50E  006F FF78  F028    	movff	postinc2,btemp
 23969  01B514  006F FF74  F029    	movff	postdec2,btemp+1
 23970                           
 23971                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 23972  01B51A  52E5               	movf	postdec1,f,c
 23973  01B51C  0012               	return		;funcret
 23974  01B51E                     __end_of_get_raw_result:
 23975                           	opt callstack 0
 23976                           
 23977 ;; *************** function ___xxtofl *****************
 23978 ;; Defined at:
 23979 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 23980 ;; Parameters:    Size  Location     Type
 23981 ;;  sign            1  [STACK] unsigned char 
 23982 ;;  val             4  [STACK] long 
 23983 ;; Auto vars:     Size  Location     Type
 23984 ;;  arg             4  [STACK] unsigned long 
 23985 ;;  exp             1  [STACK] unsigned char 
 23986 ;; Return value:  Size  Location     Type
 23987 ;;                  4  [STACK] unsigned char 
 23988 ;; Registers used:
 23989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23990 ;; Tracked objects:
 23991 ;;		On entry : 0/1
 23992 ;;		On exit  : 0/0
 23993 ;;		Unchanged: 0/0
 23994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23999 ;;Total ram usage:        0 bytes
 24000 ;; Hardware stack levels used:    1
 24001 ;; Hardware stack levels required when called:   15
 24002 ;; This function calls:
 24003 ;;		Nothing
 24004 ;; This function is called by:
 24005 ;;		_conv_raw_result
 24006 ;;		_init_bsoc
 24007 ;; This function uses a reentrant model
 24008 ;;
 24009                           
 24010                           	psect	text97
 24011  0179C4                     __ptext97:
 24012                           	opt callstack 0
 24013  0179C4                     ___xxtofl:
 24014                           	opt callstack 0
 24015                           
 24016                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24017  0179C4  0E05               	movlw	5
 24018  0179C6  26E1               	addwf	fsr1l,f,c
 24019  0179C8  0E00               	movlw	0
 24020  0179CA  22E2               	addwfc	fsr1h,f,c
 24021                           
 24022                           ;stkvar	_sign @ sp[(-5)+-1]
 24023                           
 24024                           ;incstack = 0
 24025  0179CC  0EFA               	movlw	-6
 24026  0179CE  50E3               	movf	plusw1,w,c
 24027  0179D0  B4D8               	btfsc	status,2,c
 24028  0179D2  D01D               	goto	l9580
 24029                           
 24030                           ;stkvar	_val @ sp[(-5)+-5]
 24031  0179D4  0EF9               	movlw	-7
 24032  0179D6  AEE3               	btfss	plusw1,7,c
 24033  0179D8  D01A               	goto	l9580
 24034                           
 24035                           ;stkvar	_val @ sp[(-5)+-5]
 24036  0179DA  0EF6               	movlw	-10
 24037  0179DC  006F FF8C  F030    	movff	plusw1,btemp+8
 24038  0179E2  0EF7               	movlw	-9
 24039  0179E4  006F FF8C  F031    	movff	plusw1,btemp+9
 24040  0179EA  0EF8               	movlw	-8
 24041  0179EC  006F FF8C  F032    	movff	plusw1,btemp+10
 24042  0179F2  0EF9               	movlw	-7
 24043  0179F4  006F FF8C  F033    	movff	plusw1,btemp+11
 24044  0179FA  1E30               	comf	(btemp+8)^0,f,c
 24045  0179FC  1E31               	comf	(btemp+9)^0,f,c
 24046  0179FE  1E32               	comf	(btemp+10)^0,f,c
 24047  017A00  1E33               	comf	(btemp+11)^0,f,c
 24048  017A02  2A30               	incf	(btemp+8)^0,f,c
 24049  017A04  0E00               	movlw	0
 24050  017A06  2231               	addwfc	(btemp+9)^0,f,c
 24051  017A08  2232               	addwfc	(btemp+10)^0,f,c
 24052  017A0A  2233               	addwfc	(btemp+11)^0,f,c
 24053  017A0C  D010               	goto	L28
 24054  017A0E                     l9580:
 24055                           
 24056                           ;stkvar	_val @ sp[(-5)+-5]
 24057  017A0E  0EF6               	movlw	-10
 24058  017A10  006F FF8C  F030    	movff	plusw1,btemp+8
 24059  017A16  0EF7               	movlw	-9
 24060  017A18  006F FF8C  F031    	movff	plusw1,btemp+9
 24061  017A1E  0EF8               	movlw	-8
 24062  017A20  006F FF8C  F032    	movff	plusw1,btemp+10
 24063  017A26  0EF9               	movlw	-7
 24064  017A28  006F FF8C  F033    	movff	plusw1,btemp+11
 24065  017A2E                     L28:
 24066                           
 24067                           ;stkvar	_arg @ sp[(-5)+0]
 24068  017A2E  0EFB               	movlw	-5
 24069  017A30  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24070  017A36  0EFC               	movlw	-4
 24071  017A38  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24072  017A3E  0EFD               	movlw	-3
 24073  017A40  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24074  017A46  0EFE               	movlw	-2
 24075  017A48  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24076                           
 24077                           ;stkvar	_val @ sp[(-5)+-5]
 24078  017A4E  0EF6               	movlw	-10
 24079  017A50  50E3               	movf	plusw1,w,c
 24080  017A52  E113               	bnz	l9588
 24081  017A54  0EF7               	movlw	-9
 24082  017A56  50E3               	movf	plusw1,w,c
 24083  017A58  E110               	bnz	l9588
 24084  017A5A  0EF8               	movlw	-8
 24085  017A5C  50E3               	movf	plusw1,w,c
 24086  017A5E  E10D               	bnz	l9588
 24087  017A60  0EF9               	movlw	-7
 24088  017A62  50E3               	movf	plusw1,w,c
 24089  017A64  A4D8               	btfss	status,2,c
 24090  017A66  D009               	goto	l9588
 24091  017A68  0E00               	movlw	0
 24092  017A6A  6E28               	movwf	btemp^0,c
 24093  017A6C  0E00               	movlw	0
 24094  017A6E  6E29               	movwf	(btemp+1)^0,c
 24095  017A70  0E00               	movlw	0
 24096  017A72  6E2A               	movwf	(btemp+2)^0,c
 24097  017A74  0E00               	movlw	0
 24098  017A76  6E2B               	movwf	(btemp+3)^0,c
 24099  017A78  D0A2               	goto	l3025
 24100  017A7A                     l9588:
 24101  017A7A  0E96               	movlw	150
 24102  017A7C  6E33               	movwf	(btemp+11)^0,c
 24103                           
 24104                           ;stkvar	_exp @ sp[(-5)+4]
 24105  017A7E  0EFF               	movlw	-1
 24106  017A80  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24107  017A86  D00B               	goto	l9592
 24108  017A88                     l9590:
 24109                           
 24110                           ;stkvar	_exp @ sp[(-5)+4]
 24111  017A88  0EFF               	movlw	-1
 24112  017A8A  2AE3               	incf	plusw1,f,c
 24113                           
 24114                           ;stkvar	_arg @ sp[(-5)+0]
 24115  017A8C  90D8               	bcf	status,0,c
 24116  017A8E  0EFE               	movlw	-2
 24117  017A90  32E3               	rrcf	plusw1,f,c
 24118  017A92  0EFD               	movlw	-3
 24119  017A94  32E3               	rrcf	plusw1,f,c
 24120  017A96  0EFC               	movlw	-4
 24121  017A98  32E3               	rrcf	plusw1,f,c
 24122  017A9A  0EFB               	movlw	-5
 24123  017A9C  32E3               	rrcf	plusw1,f,c
 24124  017A9E                     l9592:
 24125                           
 24126                           ;stkvar	_arg @ sp[(-5)+0]
 24127  017A9E  50E1               	movf	fsr1l,w,c
 24128  017AA0  0FFB               	addlw	-5
 24129  017AA2  6ED9               	movwf	fsr2l,c
 24130  017AA4  50E2               	movf	fsr1h,w,c
 24131  017AA6  6EDA               	movwf	fsr2h,c
 24132  017AA8  0EFF               	movlw	255
 24133  017AAA  22DA               	addwfc	fsr2h,f,c
 24134  017AAC  52DE               	movf	postinc2,f,c
 24135  017AAE  52DE               	movf	postinc2,f,c
 24136  017AB0  52DE               	movf	postinc2,f,c
 24137  017AB2  0EFE               	movlw	254
 24138  017AB4  14DD               	andwf	postdec2,w,c
 24139  017AB6  B4D8               	btfsc	status,2,c
 24140  017AB8  D018               	goto	l9600
 24141  017ABA  D7E6               	goto	l9590
 24142  017ABC                     l9594:
 24143                           
 24144                           ;stkvar	_exp @ sp[(-5)+4]
 24145  017ABC  0EFF               	movlw	-1
 24146  017ABE  2AE3               	incf	plusw1,f,c
 24147                           
 24148                           ;stkvar	_arg @ sp[(-5)+0]
 24149  017AC0  50E1               	movf	fsr1l,w,c
 24150  017AC2  0FFB               	addlw	-5
 24151  017AC4  6ED9               	movwf	fsr2l,c
 24152  017AC6  50E2               	movf	fsr1h,w,c
 24153  017AC8  6EDA               	movwf	fsr2h,c
 24154  017ACA  0EFF               	movlw	255
 24155  017ACC  22DA               	addwfc	fsr2h,f,c
 24156  017ACE  2ADE               	incf	postinc2,f,c
 24157  017AD0  0E00               	movlw	0
 24158  017AD2  22DE               	addwfc	postinc2,f,c
 24159  017AD4  22DE               	addwfc	postinc2,f,c
 24160  017AD6  22DE               	addwfc	postinc2,f,c
 24161                           
 24162                           ;stkvar	_arg @ sp[(-5)+0]
 24163  017AD8  90D8               	bcf	status,0,c
 24164  017ADA  0EFE               	movlw	-2
 24165  017ADC  32E3               	rrcf	plusw1,f,c
 24166  017ADE  0EFD               	movlw	-3
 24167  017AE0  32E3               	rrcf	plusw1,f,c
 24168  017AE2  0EFC               	movlw	-4
 24169  017AE4  32E3               	rrcf	plusw1,f,c
 24170  017AE6  0EFB               	movlw	-5
 24171  017AE8  32E3               	rrcf	plusw1,f,c
 24172  017AEA                     l9600:
 24173                           
 24174                           ;stkvar	_arg @ sp[(-5)+0]
 24175  017AEA  50E1               	movf	fsr1l,w,c
 24176  017AEC  0FFB               	addlw	-5
 24177  017AEE  6ED9               	movwf	fsr2l,c
 24178  017AF0  50E2               	movf	fsr1h,w,c
 24179  017AF2  6EDA               	movwf	fsr2h,c
 24180  017AF4  0EFF               	movlw	255
 24181  017AF6  22DA               	addwfc	fsr2h,f,c
 24182  017AF8  52DE               	movf	postinc2,f,c
 24183  017AFA  52DE               	movf	postinc2,f,c
 24184  017AFC  52DE               	movf	postinc2,f,c
 24185  017AFE  0EFF               	movlw	255
 24186  017B00  14DD               	andwf	postdec2,w,c
 24187  017B02  B4D8               	btfsc	status,2,c
 24188  017B04  D00C               	goto	l9604
 24189  017B06  D7DA               	goto	l9594
 24190  017B08                     l9602:
 24191                           
 24192                           ;stkvar	_exp @ sp[(-5)+4]
 24193  017B08  0EFF               	movlw	-1
 24194  017B0A  06E3               	decf	plusw1,f,c
 24195                           
 24196                           ;stkvar	_arg @ sp[(-5)+0]
 24197  017B0C  90D8               	bcf	status,0,c
 24198  017B0E  0EFB               	movlw	-5
 24199  017B10  36E3               	rlcf	plusw1,f,c
 24200  017B12  0EFC               	movlw	-4
 24201  017B14  36E3               	rlcf	plusw1,f,c
 24202  017B16  0EFD               	movlw	-3
 24203  017B18  36E3               	rlcf	plusw1,f,c
 24204  017B1A  0EFE               	movlw	-2
 24205  017B1C  36E3               	rlcf	plusw1,f,c
 24206  017B1E                     l9604:
 24207                           
 24208                           ;stkvar	_arg @ sp[(-5)+0]
 24209  017B1E  0EFD               	movlw	-3
 24210  017B20  BEE3               	btfsc	plusw1,7,c
 24211  017B22  D007               	goto	u8940
 24212                           
 24213                           ;stkvar	_exp @ sp[(-5)+4]
 24214  017B24  0EFF               	movlw	-1
 24215  017B26  006F FF8C  F028    	movff	plusw1,btemp
 24216  017B2C  0E02               	movlw	2
 24217  017B2E  6028               	cpfslt	btemp^0,c
 24218  017B30  D7EB               	goto	l9602
 24219  017B32                     u8940:
 24220                           
 24221                           ;stkvar	_exp @ sp[(-5)+4]
 24222  017B32  0EFF               	movlw	-1
 24223  017B34  B0E3               	btfsc	plusw1,0,c
 24224  017B36  D002               	goto	l9612
 24225                           
 24226                           ;stkvar	_arg @ sp[(-5)+0]
 24227  017B38  0EFD               	movlw	-3
 24228  017B3A  9EE3               	bcf	plusw1,7,c
 24229  017B3C                     l9612:
 24230                           
 24231                           ;stkvar	_exp @ sp[(-5)+4]
 24232  017B3C  50E1               	movf	fsr1l,w,c
 24233  017B3E  0FFF               	addlw	-1
 24234  017B40  6ED9               	movwf	fsr2l,c
 24235  017B42  50E2               	movf	fsr1h,w,c
 24236  017B44  6EDA               	movwf	fsr2h,c
 24237  017B46  0EFF               	movlw	255
 24238  017B48  22DA               	addwfc	fsr2h,f,c
 24239  017B4A  90D8               	bcf	status,0,c
 24240  017B4C  32DF               	rrcf	indf2,f,c
 24241                           
 24242                           ;stkvar	_exp @ sp[(-5)+4]
 24243  017B4E  0EFF               	movlw	-1
 24244  017B50  006F FF8C  F033    	movff	plusw1,btemp+11
 24245  017B56  0060  F0CC  F02C   	movff	btemp+11,btemp+4
 24246  017B5C  6A2D               	clrf	(btemp+5)^0,c
 24247  017B5E  6A2E               	clrf	(btemp+6)^0,c
 24248  017B60  6A2F               	clrf	(btemp+7)^0,c
 24249  017B62  0060  F0B0  F02F   	movff	btemp+4,btemp+7
 24250  017B68  6A2E               	clrf	(btemp+6)^0,c
 24251  017B6A  6A2D               	clrf	(btemp+5)^0,c
 24252  017B6C  6A2C               	clrf	(btemp+4)^0,c
 24253                           
 24254                           ;stkvar	_arg @ sp[(-5)+0]
 24255  017B6E  50E1               	movf	fsr1l,w,c
 24256  017B70  0FFB               	addlw	-5
 24257  017B72  6ED9               	movwf	fsr2l,c
 24258  017B74  50E2               	movf	fsr1h,w,c
 24259  017B76  6EDA               	movwf	fsr2h,c
 24260  017B78  0EFF               	movlw	255
 24261  017B7A  22DA               	addwfc	fsr2h,f,c
 24262  017B7C  502C               	movf	(btemp+4)^0,w,c
 24263  017B7E  12DE               	iorwf	postinc2,f,c
 24264  017B80  502D               	movf	(btemp+5)^0,w,c
 24265  017B82  12DE               	iorwf	postinc2,f,c
 24266  017B84  502E               	movf	(btemp+6)^0,w,c
 24267  017B86  12DE               	iorwf	postinc2,f,c
 24268  017B88  502F               	movf	(btemp+7)^0,w,c
 24269  017B8A  12DE               	iorwf	postinc2,f,c
 24270                           
 24271                           ;stkvar	_sign @ sp[(-5)+-1]
 24272  017B8C  0EFA               	movlw	-6
 24273  017B8E  50E3               	movf	plusw1,w,c
 24274  017B90  B4D8               	btfsc	status,2,c
 24275  017B92  D005               	goto	l9622
 24276                           
 24277                           ;stkvar	_val @ sp[(-5)+-5]
 24278  017B94  0EF9               	movlw	-7
 24279  017B96  AEE3               	btfss	plusw1,7,c
 24280  017B98  D002               	goto	l9622
 24281                           
 24282                           ;stkvar	_arg @ sp[(-5)+0]
 24283  017B9A  0EFE               	movlw	-2
 24284  017B9C  8EE3               	bsf	plusw1,7,c
 24285  017B9E                     l9622:
 24286                           
 24287                           ;stkvar	_arg @ sp[(-5)+0]
 24288  017B9E  0EFB               	movlw	-5
 24289  017BA0  006F FF8C  F028    	movff	plusw1,btemp
 24290  017BA6  0EFC               	movlw	-4
 24291  017BA8  006F FF8C  F029    	movff	plusw1,btemp+1
 24292  017BAE  0EFD               	movlw	-3
 24293  017BB0  006F FF8C  F02A    	movff	plusw1,btemp+2
 24294  017BB6  0EFE               	movlw	-2
 24295  017BB8  006F FF8C  F02B    	movff	plusw1,btemp+3
 24296  017BBE                     l3025:
 24297                           
 24298                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24299  017BBE  0EF6               	movlw	246
 24300  017BC0  26E1               	addwf	fsr1l,f,c
 24301  017BC2  0EFF               	movlw	255
 24302  017BC4  22E2               	addwfc	fsr1h,f,c
 24303  017BC6  0012               	return		;funcret
 24304  017BC8                     __end_of___xxtofl:
 24305                           	opt callstack 0
 24306                           
 24307 ;; *************** function ___fldiv *****************
 24308 ;; Defined at:
 24309 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24310 ;; Parameters:    Size  Location     Type
 24311 ;;  b               4  [STACK] unsigned char 
 24312 ;;  a               4  [STACK] unsigned char 
 24313 ;; Auto vars:     Size  Location     Type
 24314 ;;  grs             4  [STACK] unsigned long 
 24315 ;;  rem             4  [STACK] unsigned long 
 24316 ;;  new_exp         2  [STACK] short 
 24317 ;;  aexp            1  [STACK] unsigned char 
 24318 ;;  bexp            1  [STACK] unsigned char 
 24319 ;;  sign            1  [STACK] unsigned char 
 24320 ;; Return value:  Size  Location     Type
 24321 ;;                  4  [STACK] unsigned char 
 24322 ;; Registers used:
 24323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24324 ;; Tracked objects:
 24325 ;;		On entry : 0/1
 24326 ;;		On exit  : 0/0
 24327 ;;		Unchanged: 0/0
 24328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24333 ;;Total ram usage:        0 bytes
 24334 ;; Hardware stack levels used:    1
 24335 ;; Hardware stack levels required when called:   15
 24336 ;; This function calls:
 24337 ;;		Nothing
 24338 ;; This function is called by:
 24339 ;;		_conv_raw_result
 24340 ;;		_calc_bsoc
 24341 ;;		_init_bsoc
 24342 ;;		_esr_check
 24343 ;;		_efgtoa
 24344 ;; This function uses a reentrant model
 24345 ;;
 24346                           
 24347                           	psect	text98
 24348  014946                     __ptext98:
 24349                           	opt callstack 0
 24350  014946                     ___fldiv:
 24351                           	opt callstack 0
 24352                           
 24353                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24354  014946  0E0D               	movlw	13
 24355  014948  26E1               	addwf	fsr1l,f,c
 24356  01494A  0E00               	movlw	0
 24357  01494C  22E2               	addwfc	fsr1h,f,c
 24358                           
 24359                           ;stkvar	_b @ sp[(-13)+-4]
 24360                           
 24361                           ;incstack = 0
 24362 ;; hardware stack exceeded
 24363  01494E  0EF2               	movlw	242
 24364  014950  24E1               	addwf	fsr1l,w,c
 24365  014952  6ED9               	movwf	fsr2l,c
 24366  014954  0EFF               	movlw	255
 24367  014956  20E2               	addwfc	fsr1h,w,c
 24368  014958  6EDA               	movwf	fsr2h,c
 24369  01495A  50DF               	movf	indf2,w,c
 24370  01495C  6E33               	movwf	(btemp+11)^0,c
 24371  01495E  0E80               	movlw	128
 24372  014960  1633               	andwf	(btemp+11)^0,f,c
 24373                           
 24374                           ;stkvar	_sign @ sp[(-13)+12]
 24375  014962  0EFF               	movlw	-1
 24376  014964  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24377                           
 24378                           ;stkvar	_b @ sp[(-13)+-4]
 24379  01496A  0EF2               	movlw	242
 24380  01496C  24E1               	addwf	fsr1l,w,c
 24381  01496E  6ED9               	movwf	fsr2l,c
 24382  014970  0EFF               	movlw	255
 24383  014972  20E2               	addwfc	fsr1h,w,c
 24384  014974  6EDA               	movwf	fsr2h,c
 24385  014976  50DF               	movf	indf2,w,c
 24386  014978  6E33               	movwf	(btemp+11)^0,c
 24387  01497A  90D8               	bcf	status,0,c
 24388  01497C  3433               	rlcf	(btemp+11)^0,w,c
 24389  01497E  6E32               	movwf	(btemp+10)^0,c
 24390                           
 24391                           ;stkvar	_bexp @ sp[(-13)+11]
 24392  014980  0EFE               	movlw	-2
 24393  014982  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24394                           
 24395                           ;stkvar	_b @ sp[(-13)+-4]
 24396  014988  0EF1               	movlw	241
 24397  01498A  24E1               	addwf	fsr1l,w,c
 24398  01498C  6ED9               	movwf	fsr2l,c
 24399  01498E  0EFF               	movlw	255
 24400  014990  20E2               	addwfc	fsr1h,w,c
 24401  014992  6EDA               	movwf	fsr2h,c
 24402  014994  AEDF               	btfss	indf2,7,c
 24403  014996  D002               	goto	l7944
 24404                           
 24405                           ;stkvar	_bexp @ sp[(-13)+11]
 24406  014998  0EFE               	movlw	-2
 24407  01499A  80E3               	bsf	plusw1,0,c
 24408  01499C                     l7944:
 24409                           
 24410                           ;stkvar	_bexp @ sp[(-13)+11]
 24411  01499C  0EFE               	movlw	-2
 24412  01499E  50E3               	movf	plusw1,w,c
 24413  0149A0  B4D8               	btfsc	status,2,c
 24414  0149A2  D027               	goto	l7954
 24415                           
 24416                           ;stkvar	_bexp @ sp[(-13)+11]
 24417  0149A4  0EFE               	movlw	-2
 24418  0149A6  28E3               	incf	plusw1,w,c
 24419  0149A8  A4D8               	btfss	status,2,c
 24420  0149AA  D018               	goto	l7950
 24421  0149AC  0E00               	movlw	0
 24422  0149AE  6E30               	movwf	(btemp+8)^0,c
 24423  0149B0  0E00               	movlw	0
 24424  0149B2  6E31               	movwf	(btemp+9)^0,c
 24425  0149B4  0E00               	movlw	0
 24426  0149B6  6E32               	movwf	(btemp+10)^0,c
 24427  0149B8  0E00               	movlw	0
 24428  0149BA  6E33               	movwf	(btemp+11)^0,c
 24429                           
 24430                           ;stkvar	_b @ sp[(-13)+-4]
 24431  0149BC  0EEF               	movlw	-17
 24432  0149BE  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24433  0149C4  0EF0               	movlw	-16
 24434  0149C6  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24435  0149CC  0EF1               	movlw	-15
 24436  0149CE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24437  0149D4  0EF2               	movlw	-14
 24438  0149D6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24439  0149DC                     l7950:
 24440                           
 24441                           ;stkvar	_b @ sp[(-13)+-4]
 24442  0149DC  0EF1               	movlw	-15
 24443  0149DE  8EE3               	bsf	plusw1,7,c
 24444                           
 24445                           ;stkvar	_b @ sp[(-13)+-4]
 24446  0149E0  0EF2               	movlw	242
 24447  0149E2  24E1               	addwf	fsr1l,w,c
 24448  0149E4  6ED9               	movwf	fsr2l,c
 24449  0149E6  0EFF               	movlw	255
 24450  0149E8  20E2               	addwfc	fsr1h,w,c
 24451  0149EA  6EDA               	movwf	fsr2h,c
 24452  0149EC  0E00               	movlw	0
 24453  0149EE  6EDF               	movwf	indf2,c
 24454  0149F0  D018               	goto	l7956
 24455  0149F2                     l7954:
 24456  0149F2  0E00               	movlw	0
 24457  0149F4  6E30               	movwf	(btemp+8)^0,c
 24458  0149F6  0E00               	movlw	0
 24459  0149F8  6E31               	movwf	(btemp+9)^0,c
 24460  0149FA  0E00               	movlw	0
 24461  0149FC  6E32               	movwf	(btemp+10)^0,c
 24462  0149FE  0E00               	movlw	0
 24463  014A00  6E33               	movwf	(btemp+11)^0,c
 24464                           
 24465                           ;stkvar	_b @ sp[(-13)+-4]
 24466  014A02  0EEF               	movlw	-17
 24467  014A04  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24468  014A0A  0EF0               	movlw	-16
 24469  014A0C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24470  014A12  0EF1               	movlw	-15
 24471  014A14  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24472  014A1A  0EF2               	movlw	-14
 24473  014A1C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24474  014A22                     l7956:
 24475                           
 24476                           ;stkvar	_a @ sp[(-13)+-8]
 24477  014A22  0EEE               	movlw	238
 24478  014A24  24E1               	addwf	fsr1l,w,c
 24479  014A26  6ED9               	movwf	fsr2l,c
 24480  014A28  0EFF               	movlw	255
 24481  014A2A  20E2               	addwfc	fsr1h,w,c
 24482  014A2C  6EDA               	movwf	fsr2h,c
 24483  014A2E  50DF               	movf	indf2,w,c
 24484  014A30  6E33               	movwf	(btemp+11)^0,c
 24485  014A32  0E80               	movlw	128
 24486  014A34  1633               	andwf	(btemp+11)^0,f,c
 24487                           
 24488                           ;stkvar	_sign @ sp[(-13)+12]
 24489  014A36  50E1               	movf	fsr1l,w,c
 24490  014A38  0FFF               	addlw	-1
 24491  014A3A  6ED9               	movwf	fsr2l,c
 24492  014A3C  50E2               	movf	fsr1h,w,c
 24493  014A3E  6EDA               	movwf	fsr2h,c
 24494  014A40  0EFF               	movlw	255
 24495  014A42  22DA               	addwfc	fsr2h,f,c
 24496  014A44  5033               	movf	(btemp+11)^0,w,c
 24497  014A46  1ADF               	xorwf	indf2,f,c
 24498                           
 24499                           ;stkvar	_a @ sp[(-13)+-8]
 24500  014A48  0EEE               	movlw	238
 24501  014A4A  24E1               	addwf	fsr1l,w,c
 24502  014A4C  6ED9               	movwf	fsr2l,c
 24503  014A4E  0EFF               	movlw	255
 24504  014A50  20E2               	addwfc	fsr1h,w,c
 24505  014A52  6EDA               	movwf	fsr2h,c
 24506  014A54  50DF               	movf	indf2,w,c
 24507  014A56  6E33               	movwf	(btemp+11)^0,c
 24508  014A58  90D8               	bcf	status,0,c
 24509  014A5A  3433               	rlcf	(btemp+11)^0,w,c
 24510  014A5C  6E32               	movwf	(btemp+10)^0,c
 24511                           
 24512                           ;stkvar	_aexp @ sp[(-13)+10]
 24513  014A5E  0EFD               	movlw	-3
 24514  014A60  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24515                           
 24516                           ;stkvar	_a @ sp[(-13)+-8]
 24517  014A66  0EED               	movlw	237
 24518  014A68  24E1               	addwf	fsr1l,w,c
 24519  014A6A  6ED9               	movwf	fsr2l,c
 24520  014A6C  0EFF               	movlw	255
 24521  014A6E  20E2               	addwfc	fsr1h,w,c
 24522  014A70  6EDA               	movwf	fsr2h,c
 24523  014A72  AEDF               	btfss	indf2,7,c
 24524  014A74  D002               	goto	l7964
 24525                           
 24526                           ;stkvar	_aexp @ sp[(-13)+10]
 24527  014A76  0EFD               	movlw	-3
 24528  014A78  80E3               	bsf	plusw1,0,c
 24529  014A7A                     l7964:
 24530                           
 24531                           ;stkvar	_aexp @ sp[(-13)+10]
 24532  014A7A  0EFD               	movlw	-3
 24533  014A7C  50E3               	movf	plusw1,w,c
 24534  014A7E  B4D8               	btfsc	status,2,c
 24535  014A80  D027               	goto	l7974
 24536                           
 24537                           ;stkvar	_aexp @ sp[(-13)+10]
 24538  014A82  0EFD               	movlw	-3
 24539  014A84  28E3               	incf	plusw1,w,c
 24540  014A86  A4D8               	btfss	status,2,c
 24541  014A88  D018               	goto	l7970
 24542  014A8A  0E00               	movlw	0
 24543  014A8C  6E30               	movwf	(btemp+8)^0,c
 24544  014A8E  0E00               	movlw	0
 24545  014A90  6E31               	movwf	(btemp+9)^0,c
 24546  014A92  0E00               	movlw	0
 24547  014A94  6E32               	movwf	(btemp+10)^0,c
 24548  014A96  0E00               	movlw	0
 24549  014A98  6E33               	movwf	(btemp+11)^0,c
 24550                           
 24551                           ;stkvar	_a @ sp[(-13)+-8]
 24552  014A9A  0EEB               	movlw	-21
 24553  014A9C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24554  014AA2  0EEC               	movlw	-20
 24555  014AA4  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24556  014AAA  0EED               	movlw	-19
 24557  014AAC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24558  014AB2  0EEE               	movlw	-18
 24559  014AB4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24560  014ABA                     l7970:
 24561                           
 24562                           ;stkvar	_a @ sp[(-13)+-8]
 24563  014ABA  0EED               	movlw	-19
 24564  014ABC  8EE3               	bsf	plusw1,7,c
 24565                           
 24566                           ;stkvar	_a @ sp[(-13)+-8]
 24567  014ABE  0EEE               	movlw	238
 24568  014AC0  24E1               	addwf	fsr1l,w,c
 24569  014AC2  6ED9               	movwf	fsr2l,c
 24570  014AC4  0EFF               	movlw	255
 24571  014AC6  20E2               	addwfc	fsr1h,w,c
 24572  014AC8  6EDA               	movwf	fsr2h,c
 24573  014ACA  0E00               	movlw	0
 24574  014ACC  6EDF               	movwf	indf2,c
 24575  014ACE  D018               	goto	l7976
 24576  014AD0                     l7974:
 24577  014AD0  0E00               	movlw	0
 24578  014AD2  6E30               	movwf	(btemp+8)^0,c
 24579  014AD4  0E00               	movlw	0
 24580  014AD6  6E31               	movwf	(btemp+9)^0,c
 24581  014AD8  0E00               	movlw	0
 24582  014ADA  6E32               	movwf	(btemp+10)^0,c
 24583  014ADC  0E00               	movlw	0
 24584  014ADE  6E33               	movwf	(btemp+11)^0,c
 24585                           
 24586                           ;stkvar	_a @ sp[(-13)+-8]
 24587  014AE0  0EEB               	movlw	-21
 24588  014AE2  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24589  014AE8  0EEC               	movlw	-20
 24590  014AEA  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24591  014AF0  0EED               	movlw	-19
 24592  014AF2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24593  014AF8  0EEE               	movlw	-18
 24594  014AFA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24595  014B00                     l7976:
 24596                           
 24597                           ;stkvar	_a @ sp[(-13)+-8]
 24598  014B00  0EEB               	movlw	-21
 24599  014B02  50E3               	movf	plusw1,w,c
 24600  014B04  E139               	bnz	l7988
 24601  014B06  0EEC               	movlw	-20
 24602  014B08  50E3               	movf	plusw1,w,c
 24603  014B0A  E136               	bnz	l7988
 24604  014B0C  0EED               	movlw	-19
 24605  014B0E  50E3               	movf	plusw1,w,c
 24606  014B10  E133               	bnz	l7988
 24607  014B12  0EEE               	movlw	-18
 24608  014B14  50E3               	movf	plusw1,w,c
 24609  014B16  A4D8               	btfss	status,2,c
 24610  014B18  D02F               	goto	l7988
 24611                           
 24612                           ;stkvar	_b @ sp[(-13)+-4]
 24613  014B1A  0EEF               	movlw	-17
 24614  014B1C  6AE3               	clrf	plusw1,c
 24615  014B1E  0EF0               	movlw	-16
 24616  014B20  6AE3               	clrf	plusw1,c
 24617  014B22  0EF1               	movlw	-15
 24618  014B24  6AE3               	clrf	plusw1,c
 24619  014B26  0EF2               	movlw	-14
 24620  014B28  6AE3               	clrf	plusw1,c
 24621                           
 24622                           ;stkvar	_b @ sp[(-13)+-4]
 24623  014B2A  0EF1               	movlw	241
 24624  014B2C  24E1               	addwf	fsr1l,w,c
 24625  014B2E  6ED9               	movwf	fsr2l,c
 24626  014B30  0EFF               	movlw	255
 24627  014B32  20E2               	addwfc	fsr1h,w,c
 24628  014B34  6EDA               	movwf	fsr2h,c
 24629  014B36  0E80               	movlw	128
 24630  014B38  12DE               	iorwf	postinc2,f,c
 24631  014B3A  0E7F               	movlw	127
 24632  014B3C  12DD               	iorwf	postdec2,f,c
 24633  014B3E                     l7982:
 24634                           
 24635                           ;stkvar	_sign @ sp[(-13)+12]
 24636  014B3E  0EFF               	movlw	-1
 24637  014B40  006F FF8C  F033    	movff	plusw1,btemp+11
 24638                           
 24639                           ;stkvar	_b @ sp[(-13)+-4]
 24640  014B46  0EF2               	movlw	242
 24641  014B48  24E1               	addwf	fsr1l,w,c
 24642  014B4A  6ED9               	movwf	fsr2l,c
 24643  014B4C  0EFF               	movlw	255
 24644  014B4E  20E2               	addwfc	fsr1h,w,c
 24645  014B50  6EDA               	movwf	fsr2h,c
 24646  014B52  5033               	movf	(btemp+11)^0,w,c
 24647  014B54  12DF               	iorwf	indf2,f,c
 24648                           
 24649                           ;stkvar	_b @ sp[(-13)+-4]
 24650  014B56  0EEF               	movlw	-17
 24651  014B58  006F FF8C  F028    	movff	plusw1,btemp
 24652  014B5E  0EF0               	movlw	-16
 24653  014B60  006F FF8C  F029    	movff	plusw1,btemp+1
 24654  014B66  0EF1               	movlw	-15
 24655  014B68  006F FF8C  F02A    	movff	plusw1,btemp+2
 24656  014B6E  0EF2               	movlw	-14
 24657  014B70  006F FF8C  F02B    	movff	plusw1,btemp+3
 24658  014B76  D19F               	goto	l2949
 24659  014B78                     l7988:
 24660                           
 24661                           ;stkvar	_bexp @ sp[(-13)+11]
 24662  014B78  0EFE               	movlw	-2
 24663  014B7A  50E3               	movf	plusw1,w,c
 24664  014B7C  A4D8               	btfss	status,2,c
 24665  014B7E  D009               	goto	l7996
 24666  014B80  0E00               	movlw	0
 24667  014B82  6E28               	movwf	btemp^0,c
 24668  014B84  0E00               	movlw	0
 24669  014B86  6E29               	movwf	(btemp+1)^0,c
 24670  014B88  0E00               	movlw	0
 24671  014B8A  6E2A               	movwf	(btemp+2)^0,c
 24672  014B8C  0E00               	movlw	0
 24673  014B8E  6E2B               	movwf	(btemp+3)^0,c
 24674  014B90  D192               	goto	l2949
 24675  014B92                     l7996:
 24676                           
 24677                           ;stkvar	_bexp @ sp[(-13)+11]
 24678  014B92  0EFE               	movlw	-2
 24679  014B94  50E3               	movf	plusw1,w,c
 24680  014B96  6E32               	movwf	(btemp+10)^0,c
 24681  014B98  6A33               	clrf	(btemp+11)^0,c
 24682                           
 24683                           ;stkvar	_aexp @ sp[(-13)+10]
 24684  014B9A  0EFD               	movlw	-3
 24685  014B9C  50E3               	movf	plusw1,w,c
 24686  014B9E  5E32               	subwf	(btemp+10)^0,f,c
 24687  014BA0  0E00               	movlw	0
 24688  014BA2  5A33               	subwfb	(btemp+11)^0,f,c
 24689  014BA4  0E7F               	movlw	127
 24690  014BA6  2632               	addwf	(btemp+10)^0,f,c
 24691  014BA8  0E00               	movlw	0
 24692  014BAA  2233               	addwfc	(btemp+11)^0,f,c
 24693                           
 24694                           ;stkvar	_new_exp @ sp[(-13)+8]
 24695  014BAC  0EFB               	movlw	-5
 24696  014BAE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24697  014BB4  0EFC               	movlw	-4
 24698  014BB6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24699                           
 24700                           ;stkvar	_b @ sp[(-13)+-4]
 24701  014BBC  0EEF               	movlw	-17
 24702  014BBE  006F FF8C  F030    	movff	plusw1,btemp+8
 24703  014BC4  0EF0               	movlw	-16
 24704  014BC6  006F FF8C  F031    	movff	plusw1,btemp+9
 24705  014BCC  0EF1               	movlw	-15
 24706  014BCE  006F FF8C  F032    	movff	plusw1,btemp+10
 24707  014BD4  0EF2               	movlw	-14
 24708  014BD6  006F FF8C  F033    	movff	plusw1,btemp+11
 24709                           
 24710                           ;stkvar	_rem @ sp[(-13)+4]
 24711  014BDC  0EF7               	movlw	-9
 24712  014BDE  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24713  014BE4  0EF8               	movlw	-8
 24714  014BE6  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24715  014BEC  0EF9               	movlw	-7
 24716  014BEE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24717  014BF4  0EFA               	movlw	-6
 24718  014BF6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24719                           
 24720                           ;stkvar	_b @ sp[(-13)+-4]
 24721  014BFC  0EEF               	movlw	-17
 24722  014BFE  6AE3               	clrf	plusw1,c
 24723  014C00  0EF0               	movlw	-16
 24724  014C02  6AE3               	clrf	plusw1,c
 24725  014C04  0EF1               	movlw	-15
 24726  014C06  6AE3               	clrf	plusw1,c
 24727  014C08  0EF2               	movlw	-14
 24728  014C0A  6AE3               	clrf	plusw1,c
 24729                           
 24730                           ;stkvar	_grs @ sp[(-13)+0]
 24731  014C0C  0EF3               	movlw	-13
 24732  014C0E  6AE3               	clrf	plusw1,c
 24733  014C10  0EF4               	movlw	-12
 24734  014C12  6AE3               	clrf	plusw1,c
 24735  014C14  0EF5               	movlw	-11
 24736  014C16  6AE3               	clrf	plusw1,c
 24737  014C18  0EF6               	movlw	-10
 24738  014C1A  6AE3               	clrf	plusw1,c
 24739                           
 24740                           ;stkvar	_aexp @ sp[(-13)+10]
 24741  014C1C  0EFD               	movlw	-3
 24742  014C1E  6AE3               	clrf	plusw1,c
 24743  014C20  D050               	goto	l8024
 24744  014C22                     l8006:
 24745                           
 24746                           ;stkvar	_aexp @ sp[(-13)+10]
 24747  014C22  0EFD               	movlw	-3
 24748  014C24  50E3               	movf	plusw1,w,c
 24749  014C26  B4D8               	btfsc	status,2,c
 24750  014C28  D020               	goto	l8016
 24751                           
 24752                           ;stkvar	_rem @ sp[(-13)+4]
 24753  014C2A  90D8               	bcf	status,0,c
 24754  014C2C  0EF7               	movlw	-9
 24755  014C2E  36E3               	rlcf	plusw1,f,c
 24756  014C30  0EF8               	movlw	-8
 24757  014C32  36E3               	rlcf	plusw1,f,c
 24758  014C34  0EF9               	movlw	-7
 24759  014C36  36E3               	rlcf	plusw1,f,c
 24760  014C38  0EFA               	movlw	-6
 24761  014C3A  36E3               	rlcf	plusw1,f,c
 24762                           
 24763                           ;stkvar	_b @ sp[(-13)+-4]
 24764  014C3C  90D8               	bcf	status,0,c
 24765  014C3E  0EEF               	movlw	-17
 24766  014C40  36E3               	rlcf	plusw1,f,c
 24767  014C42  0EF0               	movlw	-16
 24768  014C44  36E3               	rlcf	plusw1,f,c
 24769  014C46  0EF1               	movlw	-15
 24770  014C48  36E3               	rlcf	plusw1,f,c
 24771  014C4A  0EF2               	movlw	-14
 24772  014C4C  36E3               	rlcf	plusw1,f,c
 24773                           
 24774                           ;stkvar	_grs @ sp[(-13)+0]
 24775  014C4E  0EF6               	movlw	-10
 24776  014C50  AEE3               	btfss	plusw1,7,c
 24777  014C52  D002               	goto	l8014
 24778                           
 24779                           ;stkvar	_b @ sp[(-13)+-4]
 24780  014C54  0EEF               	movlw	-17
 24781  014C56  80E3               	bsf	plusw1,0,c
 24782  014C58                     l8014:
 24783                           
 24784                           ;stkvar	_grs @ sp[(-13)+0]
 24785  014C58  90D8               	bcf	status,0,c
 24786  014C5A  0EF3               	movlw	-13
 24787  014C5C  36E3               	rlcf	plusw1,f,c
 24788  014C5E  0EF4               	movlw	-12
 24789  014C60  36E3               	rlcf	plusw1,f,c
 24790  014C62  0EF5               	movlw	-11
 24791  014C64  36E3               	rlcf	plusw1,f,c
 24792  014C66  0EF6               	movlw	-10
 24793  014C68  36E3               	rlcf	plusw1,f,c
 24794  014C6A                     l8016:
 24795                           
 24796                           ;stkvar	_a @ sp[(-13)+-8]
 24797                           ;stkvar	_rem @ sp[(-13)+4]
 24798  014C6A  50E1               	movf	fsr1l,w,c
 24799  014C6C  0FF7               	addlw	-9
 24800  014C6E  6ED9               	movwf	fsr2l,c
 24801  014C70  50E2               	movf	fsr1h,w,c
 24802  014C72  6EDA               	movwf	fsr2h,c
 24803  014C74  0EFF               	movlw	255
 24804  014C76  22DA               	addwfc	fsr2h,f,c
 24805  014C78  0EEB               	movlw	-21
 24806  014C7A  50E3               	movf	plusw1,w,c
 24807  014C7C  5CDE               	subwf	postinc2,w,c
 24808  014C7E  0EEC               	movlw	-20
 24809  014C80  50E3               	movf	plusw1,w,c
 24810  014C82  58DE               	subwfb	postinc2,w,c
 24811  014C84  0EED               	movlw	-19
 24812  014C86  50E3               	movf	plusw1,w,c
 24813  014C88  58DE               	subwfb	postinc2,w,c
 24814  014C8A  0EEE               	movlw	-18
 24815  014C8C  50E3               	movf	plusw1,w,c
 24816  014C8E  58DE               	subwfb	postinc2,w,c
 24817  014C90  A0D8               	btfss	status,0,c
 24818  014C92  D015               	goto	l8022
 24819                           
 24820                           ;stkvar	_grs @ sp[(-13)+0]
 24821  014C94  0EF6               	movlw	-10
 24822  014C96  8CE3               	bsf	plusw1,6,c
 24823                           
 24824                           ;stkvar	_a @ sp[(-13)+-8]
 24825                           ;stkvar	_rem @ sp[(-13)+4]
 24826  014C98  50E1               	movf	fsr1l,w,c
 24827  014C9A  0FF7               	addlw	-9
 24828  014C9C  6ED9               	movwf	fsr2l,c
 24829  014C9E  50E2               	movf	fsr1h,w,c
 24830  014CA0  6EDA               	movwf	fsr2h,c
 24831  014CA2  0EFF               	movlw	255
 24832  014CA4  22DA               	addwfc	fsr2h,f,c
 24833  014CA6  0EEB               	movlw	-21
 24834  014CA8  50E3               	movf	plusw1,w,c
 24835  014CAA  5EDE               	subwf	postinc2,f,c
 24836  014CAC  0EEC               	movlw	-20
 24837  014CAE  50E3               	movf	plusw1,w,c
 24838  014CB0  5ADE               	subwfb	postinc2,f,c
 24839  014CB2  0EED               	movlw	-19
 24840  014CB4  50E3               	movf	plusw1,w,c
 24841  014CB6  5ADE               	subwfb	postinc2,f,c
 24842  014CB8  0EEE               	movlw	-18
 24843  014CBA  50E3               	movf	plusw1,w,c
 24844  014CBC  5ADE               	subwfb	postinc2,f,c
 24845  014CBE                     l8022:
 24846                           
 24847                           ;stkvar	_aexp @ sp[(-13)+10]
 24848  014CBE  0EFD               	movlw	-3
 24849  014CC0  2AE3               	incf	plusw1,f,c
 24850  014CC2                     l8024:
 24851                           
 24852                           ;stkvar	_aexp @ sp[(-13)+10]
 24853  014CC2  0EFD               	movlw	-3
 24854  014CC4  006F FF8C  F028    	movff	plusw1,btemp
 24855  014CCA  0E19               	movlw	25
 24856  014CCC  6428               	cpfsgt	btemp^0,c
 24857  014CCE  D7A9               	goto	l8006
 24858                           
 24859                           ;stkvar	_rem @ sp[(-13)+4]
 24860  014CD0  0EF7               	movlw	-9
 24861  014CD2  50E3               	movf	plusw1,w,c
 24862  014CD4  E10A               	bnz	u6400
 24863  014CD6  0EF8               	movlw	-8
 24864  014CD8  50E3               	movf	plusw1,w,c
 24865  014CDA  E107               	bnz	u6400
 24866  014CDC  0EF9               	movlw	-7
 24867  014CDE  50E3               	movf	plusw1,w,c
 24868  014CE0  E104               	bnz	u6400
 24869  014CE2  0EFA               	movlw	-6
 24870  014CE4  50E3               	movf	plusw1,w,c
 24871  014CE6  B4D8               	btfsc	status,2,c
 24872  014CE8  D024               	goto	l8040
 24873  014CEA                     u6400:
 24874                           
 24875                           ;stkvar	_grs @ sp[(-13)+0]
 24876  014CEA  0EF3               	movlw	-13
 24877  014CEC  80E3               	bsf	plusw1,0,c
 24878  014CEE  D021               	goto	l8040
 24879  014CF0                     l8030:
 24880                           
 24881                           ;stkvar	_b @ sp[(-13)+-4]
 24882  014CF0  90D8               	bcf	status,0,c
 24883  014CF2  0EEF               	movlw	-17
 24884  014CF4  36E3               	rlcf	plusw1,f,c
 24885  014CF6  0EF0               	movlw	-16
 24886  014CF8  36E3               	rlcf	plusw1,f,c
 24887  014CFA  0EF1               	movlw	-15
 24888  014CFC  36E3               	rlcf	plusw1,f,c
 24889  014CFE  0EF2               	movlw	-14
 24890  014D00  36E3               	rlcf	plusw1,f,c
 24891                           
 24892                           ;stkvar	_grs @ sp[(-13)+0]
 24893  014D02  0EF6               	movlw	-10
 24894  014D04  AEE3               	btfss	plusw1,7,c
 24895  014D06  D002               	goto	l8036
 24896                           
 24897                           ;stkvar	_b @ sp[(-13)+-4]
 24898  014D08  0EEF               	movlw	-17
 24899  014D0A  80E3               	bsf	plusw1,0,c
 24900  014D0C                     l8036:
 24901                           
 24902                           ;stkvar	_grs @ sp[(-13)+0]
 24903  014D0C  90D8               	bcf	status,0,c
 24904  014D0E  0EF3               	movlw	-13
 24905  014D10  36E3               	rlcf	plusw1,f,c
 24906  014D12  0EF4               	movlw	-12
 24907  014D14  36E3               	rlcf	plusw1,f,c
 24908  014D16  0EF5               	movlw	-11
 24909  014D18  36E3               	rlcf	plusw1,f,c
 24910  014D1A  0EF6               	movlw	-10
 24911  014D1C  36E3               	rlcf	plusw1,f,c
 24912                           
 24913                           ;stkvar	_new_exp @ sp[(-13)+8]
 24914  014D1E  50E1               	movf	fsr1l,w,c
 24915  014D20  0FFB               	addlw	-5
 24916  014D22  6ED9               	movwf	fsr2l,c
 24917  014D24  50E2               	movf	fsr1h,w,c
 24918  014D26  6EDA               	movwf	fsr2h,c
 24919  014D28  0EFF               	movlw	255
 24920  014D2A  22DA               	addwfc	fsr2h,f,c
 24921  014D2C  06DE               	decf	postinc2,f,c
 24922  014D2E  0E00               	movlw	0
 24923  014D30  5ADD               	subwfb	postdec2,f,c
 24924  014D32                     l8040:
 24925                           
 24926                           ;stkvar	_b @ sp[(-13)+-4]
 24927  014D32  0EF1               	movlw	-15
 24928  014D34  AEE3               	btfss	plusw1,7,c
 24929  014D36  D7DC               	goto	l8030
 24930                           
 24931                           ;stkvar	_aexp @ sp[(-13)+10]
 24932  014D38  0EFD               	movlw	-3
 24933  014D3A  6AE3               	clrf	plusw1,c
 24934                           
 24935                           ;stkvar	_grs @ sp[(-13)+0]
 24936  014D3C  0EF6               	movlw	-10
 24937  014D3E  AEE3               	btfss	plusw1,7,c
 24938  014D40  D020               	goto	l8054
 24939                           
 24940                           ;stkvar	_grs @ sp[(-13)+0]
 24941  014D42  50E1               	movf	fsr1l,w,c
 24942  014D44  0FF3               	addlw	-13
 24943  014D46  6ED9               	movwf	fsr2l,c
 24944  014D48  50E2               	movf	fsr1h,w,c
 24945  014D4A  6EDA               	movwf	fsr2h,c
 24946  014D4C  0EFF               	movlw	255
 24947  014D4E  22DA               	addwfc	fsr2h,f,c
 24948  014D50  0EFF               	movlw	255
 24949  014D52  14DE               	andwf	postinc2,w,c
 24950  014D54  6E30               	movwf	(btemp+8)^0,c
 24951  014D56  0EFF               	movlw	255
 24952  014D58  14DE               	andwf	postinc2,w,c
 24953  014D5A  6E31               	movwf	(btemp+9)^0,c
 24954  014D5C  0EFF               	movlw	255
 24955  014D5E  14DE               	andwf	postinc2,w,c
 24956  014D60  6E32               	movwf	(btemp+10)^0,c
 24957  014D62  0E7F               	movlw	127
 24958  014D64  14DE               	andwf	postinc2,w,c
 24959  014D66  6E33               	movwf	(btemp+11)^0,c
 24960  014D68  5030               	movf	(btemp+8)^0,w,c
 24961  014D6A  1031               	iorwf	(btemp+9)^0,w,c
 24962  014D6C  1032               	iorwf	(btemp+10)^0,w,c
 24963  014D6E  1033               	iorwf	(btemp+11)^0,w,c
 24964  014D70  B4D8               	btfsc	status,2,c
 24965  014D72  D004               	goto	l8050
 24966  014D74                     u6440:
 24967                           
 24968                           ;stkvar	_aexp @ sp[(-13)+10]
 24969  014D74  0EFD               	movlw	-3
 24970  014D76  6AE3               	clrf	plusw1,c
 24971  014D78  2AE3               	incf	plusw1,f,c
 24972  014D7A  D003               	goto	l8054
 24973  014D7C                     l8050:
 24974                           
 24975                           ;stkvar	_b @ sp[(-13)+-4]
 24976  014D7C  0EEF               	movlw	-17
 24977  014D7E  B0E3               	btfsc	plusw1,0,c
 24978  014D80  D7F9               	goto	u6440
 24979  014D82                     l8054:
 24980                           
 24981                           ;stkvar	_aexp @ sp[(-13)+10]
 24982  014D82  0EFD               	movlw	-3
 24983  014D84  50E3               	movf	plusw1,w,c
 24984  014D86  B4D8               	btfsc	status,2,c
 24985  014D88  D036               	goto	l8064
 24986                           
 24987                           ;stkvar	_b @ sp[(-13)+-4]
 24988  014D8A  50E1               	movf	fsr1l,w,c
 24989  014D8C  0FEF               	addlw	-17
 24990  014D8E  6ED9               	movwf	fsr2l,c
 24991  014D90  50E2               	movf	fsr1h,w,c
 24992  014D92  6EDA               	movwf	fsr2h,c
 24993  014D94  0EFF               	movlw	255
 24994  014D96  22DA               	addwfc	fsr2h,f,c
 24995  014D98  2ADE               	incf	postinc2,f,c
 24996  014D9A  0E00               	movlw	0
 24997  014D9C  22DE               	addwfc	postinc2,f,c
 24998  014D9E  22DE               	addwfc	postinc2,f,c
 24999  014DA0  22DE               	addwfc	postinc2,f,c
 25000                           
 25001                           ;stkvar	_b @ sp[(-13)+-4]
 25002  014DA2  0EF2               	movlw	-14
 25003  014DA4  A0E3               	btfss	plusw1,0,c
 25004  014DA6  D027               	goto	l8064
 25005  014DA8  0E01               	movlw	1
 25006  014DAA  6E33               	movwf	(btemp+11)^0,c
 25007                           
 25008                           ;stkvar	_b @ sp[(-13)+-4]
 25009  014DAC  50E1               	movf	fsr1l,w,c
 25010  014DAE  0FEF               	addlw	-17
 25011  014DB0  6ED9               	movwf	fsr2l,c
 25012  014DB2  50E2               	movf	fsr1h,w,c
 25013  014DB4  6EDA               	movwf	fsr2h,c
 25014  014DB6  0EFF               	movlw	255
 25015  014DB8  22DA               	addwfc	fsr2h,f,c
 25016  014DBA  2833               	incf	(btemp+11)^0,w,c
 25017  014DBC  52DE               	movf	postinc2,f,c
 25018  014DBE  D008               	goto	u6480
 25019  014DC0                     u6485:
 25020  014DC0  52DE               	movf	postinc2,f,c
 25021  014DC2  90D8               	bcf	status,0,c
 25022  014DC4  BEDC               	btfsc	preinc2,7,c
 25023  014DC6  80D8               	bsf	status,0,c
 25024  014DC8  32DD               	rrcf	postdec2,f,c
 25025  014DCA  32DD               	rrcf	postdec2,f,c
 25026  014DCC  32DD               	rrcf	postdec2,f,c
 25027  014DCE  32DE               	rrcf	postinc2,f,c
 25028  014DD0                     u6480:
 25029  014DD0  2EE8               	decfsz	wreg,f,c
 25030  014DD2  D7F6               	goto	u6485
 25031                           
 25032                           ;stkvar	_new_exp @ sp[(-13)+8]
 25033  014DD4  0EFB               	movlw	-5
 25034  014DD6  50E3               	movf	plusw1,w,c
 25035  014DD8  0F01               	addlw	1
 25036  014DDA  6E28               	movwf	btemp^0,c
 25037  014DDC  0EFB               	movlw	-5
 25038  014DDE  0060  F0A3  FFE3   	movff	btemp,plusw1
 25039  014DE4  6A28               	clrf	btemp^0,c
 25040  014DE6  0EFC               	movlw	-4
 25041  014DE8  50E3               	movf	plusw1,w,c
 25042  014DEA  2028               	addwfc	btemp^0,w,c
 25043  014DEC  6E28               	movwf	btemp^0,c
 25044  014DEE  0EFC               	movlw	-4
 25045  014DF0  0060  F0A3  FFE3   	movff	btemp,plusw1
 25046  014DF6                     l8064:
 25047                           
 25048                           ;stkvar	_new_exp @ sp[(-13)+8]
 25049  014DF6  0EFC               	movlw	-4
 25050  014DF8  BEE3               	btfsc	plusw1,7,c
 25051  014DFA  D01B               	goto	l8070
 25052  014DFC  0EFC               	movlw	-4
 25053  014DFE  50E3               	movf	plusw1,w,c
 25054  014E00  E104               	bnz	u6490
 25055  014E02  0EFB               	movlw	-5
 25056  014E04  28E3               	incf	plusw1,w,c
 25057  014E06  A0D8               	btfss	status,0,c
 25058  014E08  D014               	goto	l8070
 25059  014E0A                     u6490:
 25060  014E0A  0EFF               	movlw	255
 25061  014E0C  6E32               	movwf	(btemp+10)^0,c
 25062  014E0E  0E00               	movlw	0
 25063  014E10  6E33               	movwf	(btemp+11)^0,c
 25064                           
 25065                           ;stkvar	_new_exp @ sp[(-13)+8]
 25066  014E12  0EFB               	movlw	-5
 25067  014E14  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25068  014E1A  0EFC               	movlw	-4
 25069  014E1C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25070                           
 25071                           ;stkvar	_b @ sp[(-13)+-4]
 25072  014E22  0EEF               	movlw	-17
 25073  014E24  6AE3               	clrf	plusw1,c
 25074  014E26  0EF0               	movlw	-16
 25075  014E28  6AE3               	clrf	plusw1,c
 25076  014E2A  0EF1               	movlw	-15
 25077  014E2C  6AE3               	clrf	plusw1,c
 25078  014E2E  0EF2               	movlw	-14
 25079  014E30  6AE3               	clrf	plusw1,c
 25080  014E32                     l8070:
 25081                           
 25082                           ;stkvar	_new_exp @ sp[(-13)+8]
 25083  014E32  0EFC               	movlw	-4
 25084  014E34  BEE3               	btfsc	plusw1,7,c
 25085  014E36  D007               	goto	u6500
 25086  014E38  0EFC               	movlw	-4
 25087  014E3A  50E3               	movf	plusw1,w,c
 25088  014E3C  E112               	bnz	l8076
 25089  014E3E  0EFB               	movlw	-5
 25090  014E40  04E3               	decf	plusw1,w,c
 25091  014E42  B0D8               	btfsc	status,0,c
 25092  014E44  D00E               	goto	l8076
 25093  014E46                     u6500:
 25094                           
 25095                           ;stkvar	_new_exp @ sp[(-13)+8]
 25096  014E46  0EFB               	movlw	-5
 25097  014E48  6AE3               	clrf	plusw1,c
 25098  014E4A  0EFC               	movlw	-4
 25099  014E4C  6AE3               	clrf	plusw1,c
 25100                           
 25101                           ;stkvar	_b @ sp[(-13)+-4]
 25102  014E4E  0EEF               	movlw	-17
 25103  014E50  6AE3               	clrf	plusw1,c
 25104  014E52  0EF0               	movlw	-16
 25105  014E54  6AE3               	clrf	plusw1,c
 25106  014E56  0EF1               	movlw	-15
 25107  014E58  6AE3               	clrf	plusw1,c
 25108  014E5A  0EF2               	movlw	-14
 25109  014E5C  6AE3               	clrf	plusw1,c
 25110                           
 25111                           ;stkvar	_sign @ sp[(-13)+12]
 25112  014E5E  0EFF               	movlw	-1
 25113  014E60  6AE3               	clrf	plusw1,c
 25114  014E62                     l8076:
 25115                           
 25116                           ;stkvar	_new_exp @ sp[(-13)+8]
 25117                           ;stkvar	_bexp @ sp[(-13)+11]
 25118  014E62  0EFB               	movlw	-5
 25119  014E64  006F FF8C  F028    	movff	plusw1,btemp
 25120  014E6A  0EFE               	movlw	-2
 25121  014E6C  0060  F0A3  FFE3   	movff	btemp,plusw1
 25122                           
 25123                           ;stkvar	_bexp @ sp[(-13)+11]
 25124  014E72  0EFE               	movlw	-2
 25125  014E74  A0E3               	btfss	plusw1,0,c
 25126  014E76  D009               	goto	l8082
 25127                           
 25128                           ;stkvar	_b @ sp[(-13)+-4]
 25129  014E78  0EF1               	movlw	241
 25130  014E7A  24E1               	addwf	fsr1l,w,c
 25131  014E7C  6ED9               	movwf	fsr2l,c
 25132  014E7E  0EFF               	movlw	255
 25133  014E80  20E2               	addwfc	fsr1h,w,c
 25134  014E82  6EDA               	movwf	fsr2h,c
 25135  014E84  0E00               	movlw	0
 25136  014E86  8EDB               	bsf	plusw2,7,c
 25137  014E88  D008               	goto	l8084
 25138  014E8A                     l8082:
 25139                           
 25140                           ;stkvar	_b @ sp[(-13)+-4]
 25141  014E8A  0EF1               	movlw	241
 25142  014E8C  24E1               	addwf	fsr1l,w,c
 25143  014E8E  6ED9               	movwf	fsr2l,c
 25144  014E90  0EFF               	movlw	255
 25145  014E92  20E2               	addwfc	fsr1h,w,c
 25146  014E94  6EDA               	movwf	fsr2h,c
 25147  014E96  0E7F               	movlw	127
 25148  014E98  16DF               	andwf	indf2,f,c
 25149  014E9A                     l8084:
 25150                           
 25151                           ;stkvar	_b @ sp[(-13)+-4]
 25152  014E9A  0EF2               	movlw	242
 25153  014E9C  24E1               	addwf	fsr1l,w,c
 25154  014E9E  6ED9               	movwf	fsr2l,c
 25155  014EA0  0EFF               	movlw	255
 25156  014EA2  20E2               	addwfc	fsr1h,w,c
 25157  014EA4  6EDA               	movwf	fsr2h,c
 25158                           
 25159                           ;stkvar	_bexp @ sp[(-13)+11]
 25160  014EA6  0EFE               	movlw	-2
 25161  014EA8  006F FF8C  F033    	movff	plusw1,btemp+11
 25162  014EAE  90D8               	bcf	status,0,c
 25163  014EB0  3033               	rrcf	(btemp+11)^0,w,c
 25164  014EB2  6EDF               	movwf	indf2,c
 25165  014EB4  D644               	goto	l7982
 25166  014EB6                     l2949:
 25167                           
 25168                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25169  014EB6  0EEB               	movlw	235
 25170  014EB8  26E1               	addwf	fsr1l,f,c
 25171  014EBA  0EFF               	movlw	255
 25172  014EBC  22E2               	addwfc	fsr1h,f,c
 25173  014EBE  0012               	return		;funcret
 25174  014EC0                     __end_of___fldiv:
 25175                           	opt callstack 0
 25176                           
 25177 ;; *************** function ___flge *****************
 25178 ;; Defined at:
 25179 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25180 ;; Parameters:    Size  Location     Type
 25181 ;;  ff1             4  [STACK] unsigned char 
 25182 ;;  ff2             4  [STACK] unsigned char 
 25183 ;; Auto vars:     Size  Location     Type
 25184 ;;		None
 25185 ;; Return value:  Size  Location     Type
 25186 ;;		None               void
 25187 ;; Registers used:
 25188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25189 ;; Tracked objects:
 25190 ;;		On entry : 0/0
 25191 ;;		On exit  : 0/0
 25192 ;;		Unchanged: 0/0
 25193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25198 ;;Total ram usage:        0 bytes
 25199 ;; Hardware stack levels used:    1
 25200 ;; Hardware stack levels required when called:   15
 25201 ;; This function calls:
 25202 ;;		Nothing
 25203 ;; This function is called by:
 25204 ;;		_main
 25205 ;;		_calc_ror_data
 25206 ;;		_calc_bsoc
 25207 ;;		_efgtoa
 25208 ;; This function uses a reentrant model
 25209 ;;
 25210                           
 25211                           	psect	text99
 25212  0186F0                     __ptext99:
 25213                           	opt callstack 0
 25214  0186F0                     ___flge:
 25215                           	opt callstack 0
 25216                           
 25217                           ;stkvar	_ff1 @ sp[(0)+-4]
 25218                           
 25219                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25220                           ;incstack = 0
 25221 ;; hardware stack exceeded
 25222  0186F0  50E1               	movf	fsr1l,w,c
 25223  0186F2  0FFC               	addlw	-4
 25224  0186F4  6ED9               	movwf	fsr2l,c
 25225  0186F6  50E2               	movf	fsr1h,w,c
 25226  0186F8  6EDA               	movwf	fsr2h,c
 25227  0186FA  0EFF               	movlw	255
 25228  0186FC  22DA               	addwfc	fsr2h,f,c
 25229  0186FE  0E00               	movlw	0
 25230  018700  14DE               	andwf	postinc2,w,c
 25231  018702  6E30               	movwf	(btemp+8)^0,c
 25232  018704  0E00               	movlw	0
 25233  018706  14DE               	andwf	postinc2,w,c
 25234  018708  6E31               	movwf	(btemp+9)^0,c
 25235  01870A  0E80               	movlw	128
 25236  01870C  14DE               	andwf	postinc2,w,c
 25237  01870E  6E32               	movwf	(btemp+10)^0,c
 25238  018710  0E7F               	movlw	127
 25239  018712  14DE               	andwf	postinc2,w,c
 25240  018714  6E33               	movwf	(btemp+11)^0,c
 25241  018716  5030               	movf	(btemp+8)^0,w,c
 25242  018718  1031               	iorwf	(btemp+9)^0,w,c
 25243  01871A  1032               	iorwf	(btemp+10)^0,w,c
 25244  01871C  1033               	iorwf	(btemp+11)^0,w,c
 25245  01871E  A4D8               	btfss	status,2,c
 25246  018720  D008               	goto	l8358
 25247                           
 25248                           ;stkvar	_ff1 @ sp[(0)+-4]
 25249  018722  0EFC               	movlw	-4
 25250  018724  6AE3               	clrf	plusw1,c
 25251  018726  0EFD               	movlw	-3
 25252  018728  6AE3               	clrf	plusw1,c
 25253  01872A  0EFE               	movlw	-2
 25254  01872C  6AE3               	clrf	plusw1,c
 25255  01872E  0EFF               	movlw	-1
 25256  018730  6AE3               	clrf	plusw1,c
 25257  018732                     l8358:
 25258                           
 25259                           ;stkvar	_ff2 @ sp[(0)+-8]
 25260  018732  50E1               	movf	fsr1l,w,c
 25261  018734  0FF8               	addlw	-8
 25262  018736  6ED9               	movwf	fsr2l,c
 25263  018738  50E2               	movf	fsr1h,w,c
 25264  01873A  6EDA               	movwf	fsr2h,c
 25265  01873C  0EFF               	movlw	255
 25266  01873E  22DA               	addwfc	fsr2h,f,c
 25267  018740  0E00               	movlw	0
 25268  018742  14DE               	andwf	postinc2,w,c
 25269  018744  6E30               	movwf	(btemp+8)^0,c
 25270  018746  0E00               	movlw	0
 25271  018748  14DE               	andwf	postinc2,w,c
 25272  01874A  6E31               	movwf	(btemp+9)^0,c
 25273  01874C  0E80               	movlw	128
 25274  01874E  14DE               	andwf	postinc2,w,c
 25275  018750  6E32               	movwf	(btemp+10)^0,c
 25276  018752  0E7F               	movlw	127
 25277  018754  14DE               	andwf	postinc2,w,c
 25278  018756  6E33               	movwf	(btemp+11)^0,c
 25279  018758  5030               	movf	(btemp+8)^0,w,c
 25280  01875A  1031               	iorwf	(btemp+9)^0,w,c
 25281  01875C  1032               	iorwf	(btemp+10)^0,w,c
 25282  01875E  1033               	iorwf	(btemp+11)^0,w,c
 25283  018760  A4D8               	btfss	status,2,c
 25284  018762  D008               	goto	l2630
 25285                           
 25286                           ;stkvar	_ff2 @ sp[(0)+-8]
 25287  018764  0EF8               	movlw	-8
 25288  018766  6AE3               	clrf	plusw1,c
 25289  018768  0EF9               	movlw	-7
 25290  01876A  6AE3               	clrf	plusw1,c
 25291  01876C  0EFA               	movlw	-6
 25292  01876E  6AE3               	clrf	plusw1,c
 25293  018770  0EFB               	movlw	-5
 25294  018772  6AE3               	clrf	plusw1,c
 25295  018774                     l2630:
 25296                           
 25297                           ;stkvar	_ff1 @ sp[(0)+-4]
 25298  018774  0EFF               	movlw	-1
 25299  018776  AEE3               	btfss	plusw1,7,c
 25300  018778  D024               	goto	l8364
 25301                           
 25302                           ;stkvar	_ff1 @ sp[(0)+-4]
 25303  01877A  0E00               	movlw	0
 25304  01877C  6E30               	movwf	(btemp+8)^0,c
 25305  01877E  0E00               	movlw	0
 25306  018780  6E31               	movwf	(btemp+9)^0,c
 25307  018782  0E00               	movlw	0
 25308  018784  6E32               	movwf	(btemp+10)^0,c
 25309  018786  0E80               	movlw	128
 25310  018788  6E33               	movwf	(btemp+11)^0,c
 25311  01878A  0EFC               	movlw	-4
 25312  01878C  50E3               	movf	plusw1,w,c
 25313  01878E  5E30               	subwf	(btemp+8)^0,f,c
 25314  018790  0EFD               	movlw	-3
 25315  018792  50E3               	movf	plusw1,w,c
 25316  018794  5A31               	subwfb	(btemp+9)^0,f,c
 25317  018796  0EFE               	movlw	-2
 25318  018798  50E3               	movf	plusw1,w,c
 25319  01879A  5A32               	subwfb	(btemp+10)^0,f,c
 25320  01879C  0EFF               	movlw	-1
 25321  01879E  50E3               	movf	plusw1,w,c
 25322  0187A0  5A33               	subwfb	(btemp+11)^0,f,c
 25323                           
 25324                           ;stkvar	_ff1 @ sp[(0)+-4]
 25325  0187A2  0EFC               	movlw	-4
 25326  0187A4  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 25327  0187AA  0EFD               	movlw	-3
 25328  0187AC  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 25329  0187B2  0EFE               	movlw	-2
 25330  0187B4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25331  0187BA  0EFF               	movlw	-1
 25332  0187BC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25333  0187C2                     l8364:
 25334                           
 25335                           ;stkvar	_ff2 @ sp[(0)+-8]
 25336  0187C2  0EFB               	movlw	-5
 25337  0187C4  AEE3               	btfss	plusw1,7,c
 25338  0187C6  D024               	goto	l8368
 25339                           
 25340                           ;stkvar	_ff2 @ sp[(0)+-8]
 25341  0187C8  0E00               	movlw	0
 25342  0187CA  6E30               	movwf	(btemp+8)^0,c
 25343  0187CC  0E00               	movlw	0
 25344  0187CE  6E31               	movwf	(btemp+9)^0,c
 25345  0187D0  0E00               	movlw	0
 25346  0187D2  6E32               	movwf	(btemp+10)^0,c
 25347  0187D4  0E80               	movlw	128
 25348  0187D6  6E33               	movwf	(btemp+11)^0,c
 25349  0187D8  0EF8               	movlw	-8
 25350  0187DA  50E3               	movf	plusw1,w,c
 25351  0187DC  5E30               	subwf	(btemp+8)^0,f,c
 25352  0187DE  0EF9               	movlw	-7
 25353  0187E0  50E3               	movf	plusw1,w,c
 25354  0187E2  5A31               	subwfb	(btemp+9)^0,f,c
 25355  0187E4  0EFA               	movlw	-6
 25356  0187E6  50E3               	movf	plusw1,w,c
 25357  0187E8  5A32               	subwfb	(btemp+10)^0,f,c
 25358  0187EA  0EFB               	movlw	-5
 25359  0187EC  50E3               	movf	plusw1,w,c
 25360  0187EE  5A33               	subwfb	(btemp+11)^0,f,c
 25361                           
 25362                           ;stkvar	_ff2 @ sp[(0)+-8]
 25363  0187F0  0EF8               	movlw	-8
 25364  0187F2  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 25365  0187F8  0EF9               	movlw	-7
 25366  0187FA  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 25367  018800  0EFA               	movlw	-6
 25368  018802  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25369  018808  0EFB               	movlw	-5
 25370  01880A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25371  018810                     l8368:
 25372                           
 25373                           ;stkvar	_ff1 @ sp[(0)+-4]
 25374  018810  0EFF               	movlw	-1
 25375  018812  7EE3               	btg	plusw1,7,c
 25376                           
 25377                           ;stkvar	_ff2 @ sp[(0)+-8]
 25378  018814  0EFB               	movlw	-5
 25379  018816  7EE3               	btg	plusw1,7,c
 25380                           
 25381                           ;stkvar	_ff2 @ sp[(0)+-8]
 25382                           ;stkvar	_ff1 @ sp[(0)+-4]
 25383  018818  50E1               	movf	fsr1l,w,c
 25384  01881A  0FFC               	addlw	-4
 25385  01881C  6ED9               	movwf	fsr2l,c
 25386  01881E  50E2               	movf	fsr1h,w,c
 25387  018820  6EDA               	movwf	fsr2h,c
 25388  018822  0EFF               	movlw	255
 25389  018824  22DA               	addwfc	fsr2h,f,c
 25390  018826  0EF8               	movlw	-8
 25391  018828  50E3               	movf	plusw1,w,c
 25392  01882A  5CDE               	subwf	postinc2,w,c
 25393  01882C  0EF9               	movlw	-7
 25394  01882E  50E3               	movf	plusw1,w,c
 25395  018830  58DE               	subwfb	postinc2,w,c
 25396  018832  0EFA               	movlw	-6
 25397  018834  50E3               	movf	plusw1,w,c
 25398  018836  58DE               	subwfb	postinc2,w,c
 25399  018838  0EFB               	movlw	-5
 25400  01883A  50E3               	movf	plusw1,w,c
 25401  01883C  58DE               	subwfb	postinc2,w,c
 25402  01883E  B0D8               	btfsc	status,0,c
 25403  018840  D002               	goto	l8376
 25404  018842  9028               	bcf	btemp& (0+255),0,c
 25405  018844  D001               	goto	l2637
 25406  018846                     l8376:
 25407  018846  8028               	bsf	btemp& (0+255),0,c
 25408  018848                     l2637:
 25409                           
 25410                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25411  018848  0EF8               	movlw	248
 25412  01884A  26E1               	addwf	fsr1l,f,c
 25413  01884C  0EFF               	movlw	255
 25414  01884E  22E2               	addwfc	fsr1h,f,c
 25415  018850  0012               	return		;funcret
 25416  018852                     __end_of___flge:
 25417                           	opt callstack 0
 25418                           
 25419 ;; *************** function _calc_model_data *****************
 25420 ;; Defined at:
 25421 ;;		line 67 in file "mbmc.c"
 25422 ;; Parameters:    Size  Location     Type
 25423 ;;		None
 25424 ;; Auto vars:     Size  Location     Type
 25425 ;;		None
 25426 ;; Return value:  Size  Location     Type
 25427 ;;                  1  [STACK] void 
 25428 ;; Registers used:
 25429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25430 ;; Tracked objects:
 25431 ;;		On entry : 0/0
 25432 ;;		On exit  : 3F/1
 25433 ;;		Unchanged: 0/0
 25434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25439 ;;Total ram usage:        0 bytes
 25440 ;; Hardware stack levels used:    1
 25441 ;; Hardware stack levels required when called:   18
 25442 ;; This function calls:
 25443 ;;		___fladd
 25444 ;;		___flmul
 25445 ;;		___flsub
 25446 ;;		_lp_filter
 25447 ;;		_start_bsoc
 25448 ;;		_stop_bsoc
 25449 ;; This function is called by:
 25450 ;;		_main
 25451 ;; This function uses a reentrant model
 25452 ;;
 25453                           
 25454                           	psect	text100
 25455  015BA6                     __ptext100:
 25456                           	opt callstack 0
 25457  015BA6                     _calc_model_data:
 25458                           	opt callstack 12
 25459                           
 25460                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25461                           
 25462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25463                           ;incstack = 0
 25464  015BA6  EC90  F0DB         	call	_stop_bsoc	;wreg free
 25465                           
 25466                           ; BSR set to: 57
 25467                           ;mbmc.c: 72:  if (!V.calib) {
 25468  015BAA  0102               	movlb	2	; () banked
 25469  015BAC  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 25470  015BAE  A4D8               	btfss	status,2,c
 25471  015BB0  D1C5               	goto	l10720
 25472                           
 25473                           ; BSR set to: 2
 25474                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25475  015BB2  C100  F144         	movff	_C,_C+68	;volatile
 25476  015BB6  C101  F145         	movff	_C+1,_C+69	;volatile
 25477  015BBA  C102  F146         	movff	_C+2,_C+70	;volatile
 25478  015BBE  C103  F147         	movff	_C+3,_C+71	;volatile
 25479                           
 25480                           ; BSR set to: 2
 25481                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25482  015BC2  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 25483  015BC8  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25484  015BCE  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25485  015BD4  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25486  015BDA  0060  F513  FFE6   	movff	_C+68,postinc1
 25487  015BE0  0060  F517  FFE6   	movff	_C+69,postinc1
 25488  015BE6  0060  F51B  FFE6   	movff	_C+70,postinc1
 25489  015BEC  0060  F51F  FFE6   	movff	_C+71,postinc1
 25490  015BF2  EC6D  F0D5         	call	___flsub	;wreg free
 25491  015BF6  0060  F0A0  F16C   	movff	btemp,_C+108	;volatile
 25492  015BFC  0060  F0A4  F16D   	movff	btemp+1,_C+109	;volatile
 25493  015C02  0060  F0A8  F16E   	movff	btemp+2,_C+110	;volatile
 25494  015C08  0060  F0AC  F16F   	movff	btemp+3,_C+111	;volatile
 25495                           
 25496                           ;mbmc.c: 75:   bcror = C.c_bat;
 25497  015C0E  C144  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 25498  015C12  C145  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25499  015C16  C146  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25500  015C1A  C147  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25501                           
 25502                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25503  015C1E  C104  F148         	movff	_C+4,_C+72	;volatile
 25504  015C22  C105  F149         	movff	_C+5,_C+73	;volatile
 25505  015C26  C106  F14A         	movff	_C+6,_C+74	;volatile
 25506  015C2A  C107  F14B         	movff	_C+7,_C+75	;volatile
 25507                           
 25508                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25509  015C2E  C110  F154         	movff	_C+16,_C+84	;volatile
 25510  015C32  C111  F155         	movff	_C+17,_C+85	;volatile
 25511  015C36  C112  F156         	movff	_C+18,_C+86	;volatile
 25512  015C3A  C113  F157         	movff	_C+19,_C+87	;volatile
 25513                           
 25514                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 25515  015C3E  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 25516  015C44  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25517  015C4A  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25518  015C50  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25519  015C56  0060  F553  FFE6   	movff	_C+84,postinc1
 25520  015C5C  0060  F557  FFE6   	movff	_C+85,postinc1
 25521  015C62  0060  F55B  FFE6   	movff	_C+86,postinc1
 25522  015C68  0060  F55F  FFE6   	movff	_C+87,postinc1
 25523  015C6E  EC6D  F0D5         	call	___flsub	;wreg free
 25524  015C72  0060  F0A0  F168   	movff	btemp,_C+104	;volatile
 25525  015C78  0060  F0A4  F169   	movff	btemp+1,_C+105	;volatile
 25526  015C7E  0060  F0A8  F16A   	movff	btemp+2,_C+106	;volatile
 25527  015C84  0060  F0AC  F16B   	movff	btemp+3,_C+107	;volatile
 25528                           
 25529                           ;mbmc.c: 79:   bvror = C.v_bat;
 25530  015C8A  C154  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 25531  015C8E  C155  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25532  015C92  C156  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25533  015C96  C157  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25534                           
 25535                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 25536  015C9A  C114  F150         	movff	_C+20,_C+80	;volatile
 25537  015C9E  C115  F151         	movff	_C+21,_C+81	;volatile
 25538  015CA2  C116  F152         	movff	_C+22,_C+82	;volatile
 25539  015CA6  C117  F153         	movff	_C+23,_C+83	;volatile
 25540                           
 25541                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 25542  015CAA  C108  F14C         	movff	_C+8,_C+76	;volatile
 25543  015CAE  C109  F14D         	movff	_C+9,_C+77	;volatile
 25544  015CB2  C10A  F14E         	movff	_C+10,_C+78	;volatile
 25545  015CB6  C10B  F14F         	movff	_C+11,_C+79	;volatile
 25546                           
 25547                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 25548  015CBA  C130  F164         	movff	_C+48,_C+100	;volatile
 25549  015CBE  C131  F165         	movff	_C+49,_C+101	;volatile
 25550  015CC2  C132  F166         	movff	_C+50,_C+102	;volatile
 25551  015CC6  C133  F167         	movff	_C+51,_C+103	;volatile
 25552                           
 25553                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25554  015CCA  0E01               	movlw	1
 25555  015CCC  6EE6               	movwf	postinc1,c
 25556  015CCE  0E10               	movlw	16
 25557  015CD0  6EE6               	movwf	postinc1,c
 25558  015CD2  0060  F403  FFE6   	movff	_C,postinc1
 25559  015CD8  0060  F407  FFE6   	movff	_C+1,postinc1
 25560  015CDE  0060  F40B  FFE6   	movff	_C+2,postinc1
 25561  015CE4  0060  F40F  FFE6   	movff	_C+3,postinc1
 25562  015CEA  0060  F413  FFE6   	movff	_C+4,postinc1
 25563  015CF0  0060  F417  FFE6   	movff	_C+5,postinc1
 25564  015CF6  0060  F41B  FFE6   	movff	_C+6,postinc1
 25565  015CFC  0060  F41F  FFE6   	movff	_C+7,postinc1
 25566  015D02  EC6D  F0D5         	call	___flsub	;wreg free
 25567  015D06  0060  F0A3  FFE6   	movff	btemp,postinc1
 25568  015D0C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25569  015D12  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25570  015D18  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25571  015D1E  ECE4  F0BE         	call	_lp_filter	;wreg free
 25572  015D22  0060  F0A0  F140   	movff	btemp,_C+64	;volatile
 25573  015D28  0060  F0A4  F141   	movff	btemp+1,_C+65	;volatile
 25574  015D2E  0060  F0A8  F142   	movff	btemp+2,_C+66	;volatile
 25575  015D34  0060  F0AC  F143   	movff	btemp+3,_C+67	;volatile
 25576                           
 25577                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25578  015D3A  0E01               	movlw	1
 25579  015D3C  6EE6               	movwf	postinc1,c
 25580  015D3E  0E11               	movlw	17
 25581  015D40  6EE6               	movwf	postinc1,c
 25582  015D42  0060  F553  FFE6   	movff	_C+84,postinc1
 25583  015D48  0060  F557  FFE6   	movff	_C+85,postinc1
 25584  015D4E  0060  F55B  FFE6   	movff	_C+86,postinc1
 25585  015D54  0060  F55F  FFE6   	movff	_C+87,postinc1
 25586  015D5A  0060  F503  FFE6   	movff	_C+64,postinc1
 25587  015D60  0060  F507  FFE6   	movff	_C+65,postinc1
 25588  015D66  0060  F50B  FFE6   	movff	_C+66,postinc1
 25589  015D6C  0060  F50F  FFE6   	movff	_C+67,postinc1
 25590  015D72  EC0F  F099         	call	___flmul	;wreg free
 25591  015D76  0060  F0A3  FFE6   	movff	btemp,postinc1
 25592  015D7C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25593  015D82  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25594  015D88  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25595  015D8E  ECE4  F0BE         	call	_lp_filter	;wreg free
 25596  015D92  0060  F0A0  F170   	movff	btemp,_C+112	;volatile
 25597  015D98  0060  F0A4  F171   	movff	btemp+1,_C+113	;volatile
 25598  015D9E  0060  F0A8  F172   	movff	btemp+2,_C+114	;volatile
 25599  015DA4  0060  F0AC  F173   	movff	btemp+3,_C+115	;volatile
 25600                           
 25601                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25602  015DAA  0E01               	movlw	1
 25603  015DAC  6EE6               	movwf	postinc1,c
 25604  015DAE  0E12               	movlw	18
 25605  015DB0  6EE6               	movwf	postinc1,c
 25606  015DB2  0060  F543  FFE6   	movff	_C+80,postinc1
 25607  015DB8  0060  F547  FFE6   	movff	_C+81,postinc1
 25608  015DBE  0060  F54B  FFE6   	movff	_C+82,postinc1
 25609  015DC4  0060  F54F  FFE6   	movff	_C+83,postinc1
 25610  015DCA  0060  F523  FFE6   	movff	_C+72,postinc1
 25611  015DD0  0060  F527  FFE6   	movff	_C+73,postinc1
 25612  015DD6  0060  F52B  FFE6   	movff	_C+74,postinc1
 25613  015DDC  0060  F52F  FFE6   	movff	_C+75,postinc1
 25614  015DE2  EC0F  F099         	call	___flmul	;wreg free
 25615  015DE6  0060  F0A3  FFE6   	movff	btemp,postinc1
 25616  015DEC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25617  015DF2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25618  015DF8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25619  015DFE  ECE4  F0BE         	call	_lp_filter	;wreg free
 25620  015E02  0060  F0A0  F178   	movff	btemp,_C+120	;volatile
 25621  015E08  0060  F0A4  F179   	movff	btemp+1,_C+121	;volatile
 25622  015E0E  0060  F0A8  F17A   	movff	btemp+2,_C+122	;volatile
 25623  015E14  0060  F0AC  F17B   	movff	btemp+3,_C+123	;volatile
 25624                           
 25625                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25626  015E1A  0E01               	movlw	1
 25627  015E1C  6EE6               	movwf	postinc1,c
 25628  015E1E  0E13               	movlw	19
 25629  015E20  6EE6               	movwf	postinc1,c
 25630  015E22  0E00               	movlw	0
 25631  015E24  6EE6               	movwf	postinc1,c
 25632  015E26  0E00               	movlw	0
 25633  015E28  6EE6               	movwf	postinc1,c
 25634  015E2A  0E60               	movlw	96
 25635  015E2C  6EE6               	movwf	postinc1,c
 25636  015E2E  0EC1               	movlw	193
 25637  015E30  6EE6               	movwf	postinc1,c
 25638  015E32  0060  F593  FFE6   	movff	_C+100,postinc1
 25639  015E38  0060  F597  FFE6   	movff	_C+101,postinc1
 25640  015E3E  0060  F59B  FFE6   	movff	_C+102,postinc1
 25641  015E44  0060  F59F  FFE6   	movff	_C+103,postinc1
 25642  015E4A  0060  F503  FFE6   	movff	_C+64,postinc1
 25643  015E50  0060  F507  FFE6   	movff	_C+65,postinc1
 25644  015E56  0060  F50B  FFE6   	movff	_C+66,postinc1
 25645  015E5C  0060  F50F  FFE6   	movff	_C+67,postinc1
 25646  015E62  EC0F  F099         	call	___flmul	;wreg free
 25647  015E66  0060  F0A3  FFE6   	movff	btemp,postinc1
 25648  015E6C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25649  015E72  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25650  015E78  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25651  015E7E  EC24  F09D         	call	___fladd	;wreg free
 25652  015E82  0060  F0A3  FFE6   	movff	btemp,postinc1
 25653  015E88  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25654  015E8E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25655  015E94  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25656  015E9A  ECE4  F0BE         	call	_lp_filter	;wreg free
 25657  015E9E  0060  F0A0  F174   	movff	btemp,_C+116	;volatile
 25658  015EA4  0060  F0A4  F175   	movff	btemp+1,_C+117	;volatile
 25659  015EAA  0060  F0A8  F176   	movff	btemp+2,_C+118	;volatile
 25660  015EB0  0060  F0AC  F177   	movff	btemp+3,_C+119	;volatile
 25661                           
 25662                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25663  015EB6  0E01               	movlw	1
 25664  015EB8  6EE6               	movwf	postinc1,c
 25665  015EBA  0E14               	movlw	20
 25666  015EBC  6EE6               	movwf	postinc1,c
 25667  015EBE  0060  F553  FFE6   	movff	_C+84,postinc1
 25668  015EC4  0060  F557  FFE6   	movff	_C+85,postinc1
 25669  015ECA  0060  F55B  FFE6   	movff	_C+86,postinc1
 25670  015ED0  0060  F55F  FFE6   	movff	_C+87,postinc1
 25671  015ED6  0060  F513  FFE6   	movff	_C+68,postinc1
 25672  015EDC  0060  F517  FFE6   	movff	_C+69,postinc1
 25673  015EE2  0060  F51B  FFE6   	movff	_C+70,postinc1
 25674  015EE8  0060  F51F  FFE6   	movff	_C+71,postinc1
 25675  015EEE  EC0F  F099         	call	___flmul	;wreg free
 25676  015EF2  0060  F0A3  FFE6   	movff	btemp,postinc1
 25677  015EF8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25678  015EFE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25679  015F04  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25680  015F0A  ECE4  F0BE         	call	_lp_filter	;wreg free
 25681  015F0E  0060  F0A0  F17C   	movff	btemp,_C+124	;volatile
 25682  015F14  0060  F0A4  F17D   	movff	btemp+1,_C+125	;volatile
 25683  015F1A  0060  F0A8  F17E   	movff	btemp+2,_C+126	;volatile
 25684  015F20  0060  F0AC  F17F   	movff	btemp+3,_C+127	;volatile
 25685                           
 25686                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 25687  015F26  0101               	movlb	1	; () banked
 25688  015F28  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 25689  015F2A  D008               	goto	l10720
 25690                           
 25691                           ; BSR set to: 1
 25692                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 25693  015F2C  0E17               	movlw	23
 25694  015F2E  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 25695  015F30  0EB7               	movlw	183
 25696  015F32  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 25697  015F34  0ED1               	movlw	209
 25698  015F36  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 25699  015F38  0E38               	movlw	56
 25700  015F3A  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 25701  015F3C                     l10720:
 25702                           
 25703                           ;mbmc.c: 94:  start_bsoc();
 25704  015F3C  EC32  F0DA         	call	_start_bsoc	;wreg free
 25705                           
 25706                           ; BSR set to: 57
 25707                           ;mbmc.c: 95:  C.update = 1;
 25708  015F40  0E01               	movlw	1
 25709  015F42  0101               	movlb	1	; () banked
 25710  015F44  6FB0               	movwf	(_C+176)& (0+255),b	;volatile
 25711                           
 25712                           ; BSR set to: 1
 25713                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25714  015F46  0012               	return		;funcret
 25715  015F48                     __end_of_calc_model_data:
 25716                           	opt callstack 0
 25717                           
 25718 ;; *************** function _stop_bsoc *****************
 25719 ;; Defined at:
 25720 ;;		line 114 in file "bsoc.c"
 25721 ;; Parameters:    Size  Location     Type
 25722 ;;		None
 25723 ;; Auto vars:     Size  Location     Type
 25724 ;;		None
 25725 ;; Return value:  Size  Location     Type
 25726 ;;                  1  [STACK] void 
 25727 ;; Registers used:
 25728 ;;		None
 25729 ;; Tracked objects:
 25730 ;;		On entry : 0/0
 25731 ;;		On exit  : 3F/39
 25732 ;;		Unchanged: 0/0
 25733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25738 ;;Total ram usage:        0 bytes
 25739 ;; Hardware stack levels used:    1
 25740 ;; Hardware stack levels required when called:   15
 25741 ;; This function calls:
 25742 ;;		Nothing
 25743 ;; This function is called by:
 25744 ;;		_calc_model_data
 25745 ;; This function uses a reentrant model
 25746 ;;
 25747                           
 25748                           	psect	text101
 25749  01B720                     __ptext101:
 25750                           	opt callstack 0
 25751  01B720                     _stop_bsoc:
 25752                           	opt callstack 14
 25753                           
 25754                           ;bsoc.c: 117:  PIE6bits.TMR3IE = 0;
 25755                           
 25756                           ; BSR set to: 1
 25757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25758                           ;incstack = 0
 25759  01B720  0139               	movlb	57	; () banked
 25760  01B722  9D96               	bcf	150,6,b	;volatile
 25761                           
 25762                           ; BSR set to: 57
 25763                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25764  01B724  0012               	return		;funcret
 25765  01B726                     __end_of_stop_bsoc:
 25766                           	opt callstack 0
 25767                           
 25768 ;; *************** function _start_bsoc *****************
 25769 ;; Defined at:
 25770 ;;		line 105 in file "bsoc.c"
 25771 ;; Parameters:    Size  Location     Type
 25772 ;;		None
 25773 ;; Auto vars:     Size  Location     Type
 25774 ;;		None
 25775 ;; Return value:  Size  Location     Type
 25776 ;;                  1  [STACK] void 
 25777 ;; Registers used:
 25778 ;;		wreg, status,2, status,0, btemp+11
 25779 ;; Tracked objects:
 25780 ;;		On entry : 3C/2
 25781 ;;		On exit  : 3F/39
 25782 ;;		Unchanged: 0/0
 25783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25788 ;;Total ram usage:        0 bytes
 25789 ;; Hardware stack levels used:    1
 25790 ;; Hardware stack levels required when called:   15
 25791 ;; This function calls:
 25792 ;;		Nothing
 25793 ;; This function is called by:
 25794 ;;		_calc_model_data
 25795 ;; This function uses a reentrant model
 25796 ;;
 25797                           
 25798                           	psect	text102
 25799  01B464                     __ptext102:
 25800                           	opt callstack 0
 25801  01B464                     _start_bsoc:
 25802                           	opt callstack 14
 25803                           
 25804                           ;bsoc.c: 108:  PIE6bits.TMR3IE = 1;
 25805                           
 25806                           ; BSR set to: 57
 25807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25808                           ;incstack = 0
 25809  01B464  0139               	movlb	57	; () banked
 25810  01B466  8D96               	bsf	150,6,b	;volatile
 25811                           
 25812                           ; BSR set to: 57
 25813  01B468  A4BE               	btfss	190,2,c	;volatile
 25814  01B46A  D002               	goto	u9310
 25815  01B46C  0E01               	movlw	1
 25816  01B46E  D001               	goto	u9316
 25817  01B470                     u9310:
 25818  01B470  0E00               	movlw	0
 25819  01B472                     u9316:
 25820  01B472  0AFF               	xorlw	255
 25821  01B474  6E33               	movwf	(btemp+11)^0,c
 25822  01B476  4633               	rlncf	(btemp+11)^0,f,c
 25823  01B478  4633               	rlncf	(btemp+11)^0,f,c
 25824  01B47A  50BE               	movf	190,w,c	;volatile
 25825  01B47C  1833               	xorwf	(btemp+11)^0,w,c
 25826  01B47E  0BFB               	andlw	-5
 25827  01B480  1833               	xorwf	(btemp+11)^0,w,c
 25828  01B482  6EBE               	movwf	190,c	;volatile
 25829                           
 25830                           ; BSR set to: 57
 25831                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25832  01B484  0012               	return		;funcret
 25833  01B486                     __end_of_start_bsoc:
 25834                           	opt callstack 0
 25835                           
 25836 ;; *************** function _lp_filter *****************
 25837 ;; Defined at:
 25838 ;;		line 29 in file "mbmc.c"
 25839 ;; Parameters:    Size  Location     Type
 25840 ;;  new             4  [STACK] const float 
 25841 ;;  bn              1  [STACK] const unsigned char 
 25842 ;;  slow            1  [STACK] const char 
 25843 ;; Auto vars:     Size  Location     Type
 25844 ;;  lp_speed        4  [STACK] float 
 25845 ;; Return value:  Size  Location     Type
 25846 ;;                  4  [STACK] float 
 25847 ;; Registers used:
 25848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25849 ;; Tracked objects:
 25850 ;;		On entry : 0/2
 25851 ;;		On exit  : 0/0
 25852 ;;		Unchanged: 0/0
 25853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25858 ;;Total ram usage:        0 bytes
 25859 ;; Hardware stack levels used:    1
 25860 ;; Hardware stack levels required when called:   17
 25861 ;; This function calls:
 25862 ;;		___fladd
 25863 ;;		___flmul
 25864 ;;		___flsub
 25865 ;; This function is called by:
 25866 ;;		_main
 25867 ;;		_convert_adc_data
 25868 ;;		_calc_model_data
 25869 ;; This function uses a reentrant model
 25870 ;;
 25871                           
 25872                           	psect	text103
 25873  017DC8                     __ptext103:
 25874                           	opt callstack 0
 25875  017DC8                     _lp_filter:
 25876                           	opt callstack 0
 25877                           
 25878                           ; BSR set to: 57
 25879                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25880  017DC8  52E6               	movf	postinc1,f,c
 25881  017DCA  52E6               	movf	postinc1,f,c
 25882  017DCC  52E6               	movf	postinc1,f,c
 25883  017DCE  52E6               	movf	postinc1,f,c
 25884                           
 25885                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25886                           ;stkvar	_bn @ sp[(-4)+-5]
 25887                           
 25888                           ;incstack = 0
 25889  017DD0  0EF7               	movlw	-9
 25890  017DD2  006F FF8C  F028    	movff	plusw1,btemp
 25891  017DD8  0E14               	movlw	20
 25892  017DDA  6428               	cpfsgt	btemp^0,c
 25893  017DDC  D011               	goto	l10120
 25894  017DDE                     u9220:
 25895                           
 25896                           ;mbmc.c: 35:   return new;
 25897                           ;stkvar	_new @ sp[(-4)+-4]
 25898  017DDE  0EF8               	movlw	-8
 25899  017DE0  006F FF8C  F028    	movff	plusw1,btemp
 25900  017DE6  0EF9               	movlw	-7
 25901  017DE8  006F FF8C  F029    	movff	plusw1,btemp+1
 25902  017DEE  0EFA               	movlw	-6
 25903  017DF0  006F FF8C  F02A    	movff	plusw1,btemp+2
 25904  017DF6  0EFB               	movlw	-5
 25905  017DF8  006F FF8C  F02B    	movff	plusw1,btemp+3
 25906  017DFE  D0BD               	goto	l1825
 25907  017E00                     l10120:
 25908                           
 25909                           ;mbmc.c: 37:  if (slow == (-1)) {
 25910                           ;stkvar	_slow @ sp[(-4)+-6]
 25911  017E00  0EF6               	movlw	-10
 25912  017E02  28E3               	incf	plusw1,w,c
 25913  017E04  A4D8               	btfss	status,2,c
 25914  017E06  D012               	goto	l10128
 25915                           
 25916                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25917                           ;stkvar	_bn @ sp[(-4)+-5]
 25918  017E08  0EF7               	movlw	-9
 25919  017E0A  50E3               	movf	plusw1,w,c
 25920  017E0C  0D04               	mullw	4
 25921  017E0E  0E00               	movlw	low lp_filter@smooth
 25922  017E10  24F3               	addwf	243,w,c
 25923  017E12  6ED9               	movwf	fsr2l,c
 25924  017E14  0E03               	movlw	high lp_filter@smooth
 25925  017E16  20F4               	addwfc	prodh,w,c
 25926  017E18  6EDA               	movwf	fsr2h,c
 25927  017E1A  0E00               	movlw	0
 25928  017E1C  6EDE               	movwf	postinc2,c
 25929  017E1E  0E00               	movlw	0
 25930  017E20  6EDE               	movwf	postinc2,c
 25931  017E22  0E00               	movlw	0
 25932  017E24  6EDE               	movwf	postinc2,c
 25933  017E26  0E00               	movlw	0
 25934  017E28  6EDD               	movwf	postdec2,c
 25935  017E2A  D7D9               	goto	u9220
 25936  017E2C                     l10128:
 25937                           
 25938                           ;mbmc.c: 42:  if (slow) {
 25939                           ;stkvar	_slow @ sp[(-4)+-6]
 25940  017E2C  0EF6               	movlw	-10
 25941  017E2E  50E3               	movf	plusw1,w,c
 25942  017E30  B4D8               	btfsc	status,2,c
 25943  017E32  D006               	goto	l10132
 25944                           
 25945                           ;mbmc.c: 43:   lp_speed = 0.033;
 25946  017E34  0E02               	movlw	2
 25947  017E36  6E30               	movwf	(btemp+8)^0,c
 25948  017E38  0E2B               	movlw	43
 25949  017E3A  6E31               	movwf	(btemp+9)^0,c
 25950  017E3C  0E07               	movlw	7
 25951  017E3E  D005               	goto	L29
 25952  017E40                     l10132:
 25953                           
 25954                           ;mbmc.c: 45:   lp_speed = 0.066;
 25955  017E40  0E02               	movlw	2
 25956  017E42  6E30               	movwf	(btemp+8)^0,c
 25957  017E44  0E2B               	movlw	43
 25958  017E46  6E31               	movwf	(btemp+9)^0,c
 25959  017E48  0E87               	movlw	135
 25960  017E4A                     L29:
 25961  017E4A  6E32               	movwf	(btemp+10)^0,c
 25962  017E4C  0E3D               	movlw	61
 25963  017E4E  6E33               	movwf	(btemp+11)^0,c
 25964                           
 25965                           ;stkvar	_lp_speed @ sp[(-4)+0]
 25966  017E50  0EFC               	movlw	-4
 25967  017E52  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 25968  017E58  0EFD               	movlw	-3
 25969  017E5A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 25970  017E60  0EFE               	movlw	-2
 25971  017E62  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25972  017E68  0EFF               	movlw	-1
 25973  017E6A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25974                           
 25975                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 25976                           ;stkvar	_bn @ sp[(-4)+-5]
 25977  017E70  0EF7               	movlw	-9
 25978  017E72  50E3               	movf	plusw1,w,c
 25979  017E74  0D04               	mullw	4
 25980  017E76  0E00               	movlw	low lp_filter@smooth
 25981  017E78  24F3               	addwf	243,w,c
 25982  017E7A  6ED9               	movwf	fsr2l,c
 25983  017E7C  0E03               	movlw	high lp_filter@smooth
 25984  017E7E  20F4               	addwfc	prodh,w,c
 25985  017E80  6EDA               	movwf	fsr2h,c
 25986  017E82  006F FF7B FFE6     	movff	postinc2,postinc1
 25987  017E88  006F FF7B FFE6     	movff	postinc2,postinc1
 25988  017E8E  006F FF7B FFE6     	movff	postinc2,postinc1
 25989  017E94  006F FF7B FFE6     	movff	postinc2,postinc1
 25990                           
 25991                           ;stkvar	_lp_speed @ sp[(-8)+0]
 25992  017E9A  0EF8               	movlw	-8
 25993  017E9C  006F FF8F FFE6     	movff	plusw1,postinc1
 25994  017EA2  006F FF8F FFE6     	movff	plusw1,postinc1
 25995  017EA8  006F FF8F FFE6     	movff	plusw1,postinc1
 25996  017EAE  006F FF8F FFE6     	movff	plusw1,postinc1
 25997                           
 25998                           ;stkvar	_bn @ sp[(-12)+-5]
 25999  017EB4  0EEF               	movlw	-17
 26000  017EB6  50E3               	movf	plusw1,w,c
 26001  017EB8  0D04               	mullw	4
 26002  017EBA  0E00               	movlw	low lp_filter@smooth
 26003  017EBC  24F3               	addwf	243,w,c
 26004  017EBE  6ED9               	movwf	fsr2l,c
 26005  017EC0  0E03               	movlw	high lp_filter@smooth
 26006  017EC2  20F4               	addwfc	prodh,w,c
 26007  017EC4  6EDA               	movwf	fsr2h,c
 26008  017EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 26009  017ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 26010  017ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 26011  017ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 26012                           
 26013                           ;stkvar	_new @ sp[(-16)+-4]
 26014  017EDE  0EEC               	movlw	-20
 26015  017EE0  006F FF8F FFE6     	movff	plusw1,postinc1
 26016  017EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 26017  017EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 26018  017EF2  006F FF8F FFE6     	movff	plusw1,postinc1
 26019  017EF8  EC6D  F0D5         	call	___flsub	;wreg free
 26020  017EFC  0060  F0A3  FFE6   	movff	btemp,postinc1
 26021  017F02  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 26022  017F08  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 26023  017F0E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 26024  017F14  EC0F  F099         	call	___flmul	;wreg free
 26025  017F18  0060  F0A3  FFE6   	movff	btemp,postinc1
 26026  017F1E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 26027  017F24  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 26028  017F2A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 26029  017F30  EC24  F09D         	call	___fladd	;wreg free
 26030                           
 26031                           ;stkvar	_bn @ sp[(-4)+-5]
 26032  017F34  0EF7               	movlw	-9
 26033  017F36  50E3               	movf	plusw1,w,c
 26034  017F38  0D04               	mullw	4
 26035  017F3A  0E00               	movlw	low lp_filter@smooth
 26036  017F3C  24F3               	addwf	243,w,c
 26037  017F3E  6ED9               	movwf	fsr2l,c
 26038  017F40  0E03               	movlw	high lp_filter@smooth
 26039  017F42  20F4               	addwfc	prodh,w,c
 26040  017F44  6EDA               	movwf	fsr2h,c
 26041  017F46  0060  F0A3  FFDE   	movff	btemp,postinc2
 26042  017F4C  0060  F0A7  FFDE   	movff	btemp+1,postinc2
 26043  017F52  0060  F0AB  FFDE   	movff	btemp+2,postinc2
 26044  017F58  0060  F0AF  FFDD   	movff	btemp+3,postdec2
 26045  017F5E  52DD               	movf	postdec2,f,c
 26046  017F60  52DD               	movf	postdec2,f,c
 26047  017F62  006F FF78  F028    	movff	postinc2,btemp
 26048  017F68  006F FF78  F029    	movff	postinc2,btemp+1
 26049  017F6E  006F FF78  F02A    	movff	postinc2,btemp+2
 26050  017F74  006F FF78  F02B    	movff	postinc2,btemp+3
 26051  017F7A                     l1825:
 26052                           
 26053                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26054  017F7A  0EF6               	movlw	246
 26055  017F7C  26E1               	addwf	fsr1l,f,c
 26056  017F7E  0EFF               	movlw	255
 26057  017F80  22E2               	addwfc	fsr1h,f,c
 26058  017F82  0012               	return		;funcret
 26059  017F84                     __end_of_lp_filter:
 26060                           	opt callstack 0
 26061                           
 26062 ;; *************** function ___flsub *****************
 26063 ;; Defined at:
 26064 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26065 ;; Parameters:    Size  Location     Type
 26066 ;;  b               4  [STACK] float 
 26067 ;;  a               4  [STACK] float 
 26068 ;; Auto vars:     Size  Location     Type
 26069 ;;		None
 26070 ;; Return value:  Size  Location     Type
 26071 ;;                  4  [STACK] float 
 26072 ;; Registers used:
 26073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26074 ;; Tracked objects:
 26075 ;;		On entry : 0/0
 26076 ;;		On exit  : 0/0
 26077 ;;		Unchanged: 0/0
 26078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26083 ;;Total ram usage:        0 bytes
 26084 ;; Hardware stack levels used:    1
 26085 ;; Hardware stack levels required when called:   16
 26086 ;; This function calls:
 26087 ;;		___fladd
 26088 ;; This function is called by:
 26089 ;;		_conv_raw_result
 26090 ;;		_lp_filter
 26091 ;;		_calc_model_data
 26092 ;;		_calc_ror_data
 26093 ;;		_esr_check
 26094 ;;		_efgtoa
 26095 ;; This function uses a reentrant model
 26096 ;;
 26097                           
 26098                           	psect	text104
 26099  01AADA                     __ptext104:
 26100                           	opt callstack 0
 26101  01AADA                     ___flsub:
 26102                           	opt callstack 0
 26103                           
 26104                           ;stkvar	_a @ sp[(0)+-8]
 26105                           
 26106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26107                           ;incstack = 0
 26108 ;; hardware stack exceeded
 26109  01AADA  0EFB               	movlw	-5
 26110  01AADC  7EE3               	btg	plusw1,7,c
 26111                           
 26112                           ;stkvar	_a @ sp[(0)+-8]
 26113  01AADE  0EF8               	movlw	-8
 26114  01AAE0  006F FF8F FFE6     	movff	plusw1,postinc1
 26115  01AAE6  006F FF8F FFE6     	movff	plusw1,postinc1
 26116  01AAEC  006F FF8F FFE6     	movff	plusw1,postinc1
 26117  01AAF2  006F FF8F FFE6     	movff	plusw1,postinc1
 26118                           
 26119                           ;stkvar	_b @ sp[(-4)+-4]
 26120  01AAF8  0EF8               	movlw	-8
 26121  01AAFA  006F FF8F FFE6     	movff	plusw1,postinc1
 26122  01AB00  006F FF8F FFE6     	movff	plusw1,postinc1
 26123  01AB06  006F FF8F FFE6     	movff	plusw1,postinc1
 26124  01AB0C  006F FF8F FFE6     	movff	plusw1,postinc1
 26125  01AB12  EC24  F09D         	call	___fladd	;wreg free
 26126                           
 26127                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26128  01AB16  0EF8               	movlw	248
 26129  01AB18  26E1               	addwf	fsr1l,f,c
 26130  01AB1A  0EFF               	movlw	255
 26131  01AB1C  22E2               	addwfc	fsr1h,f,c
 26132  01AB1E  0012               	return		;funcret
 26133  01AB20                     __end_of___flsub:
 26134                           	opt callstack 0
 26135                           
 26136 ;; *************** function ___fladd *****************
 26137 ;; Defined at:
 26138 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26139 ;; Parameters:    Size  Location     Type
 26140 ;;  b               4  [STACK] float 
 26141 ;;  a               4  [STACK] float 
 26142 ;; Auto vars:     Size  Location     Type
 26143 ;;  grs             1  [STACK] unsigned char 
 26144 ;;  bexp            1  [STACK] unsigned char 
 26145 ;;  aexp            1  [STACK] unsigned char 
 26146 ;;  signs           1  [STACK] unsigned char 
 26147 ;; Return value:  Size  Location     Type
 26148 ;;                  4  [STACK] unsigned char 
 26149 ;; Registers used:
 26150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26151 ;; Tracked objects:
 26152 ;;		On entry : 0/0
 26153 ;;		On exit  : 0/0
 26154 ;;		Unchanged: 0/0
 26155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26160 ;;Total ram usage:        0 bytes
 26161 ;; Hardware stack levels used:    1
 26162 ;; Hardware stack levels required when called:   15
 26163 ;; This function calls:
 26164 ;;		Nothing
 26165 ;; This function is called by:
 26166 ;;		_main
 26167 ;;		_lp_filter
 26168 ;;		_calc_model_data
 26169 ;;		_calc_bsoc
 26170 ;;		_efgtoa
 26171 ;;		___flsub
 26172 ;; This function uses a reentrant model
 26173 ;;
 26174                           
 26175                           	psect	text105
 26176  013A48                     __ptext105:
 26177                           	opt callstack 0
 26178  013A48                     ___fladd:
 26179                           	opt callstack 0
 26180                           
 26181                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26182  013A48  52E6               	movf	postinc1,f,c
 26183  013A4A  52E6               	movf	postinc1,f,c
 26184  013A4C  52E6               	movf	postinc1,f,c
 26185  013A4E  52E6               	movf	postinc1,f,c
 26186                           
 26187                           ;stkvar	_b @ sp[(-4)+-4]
 26188                           
 26189                           ;incstack = 0
 26190 ;; hardware stack exceeded
 26191  013A50  0EFB               	movlw	251
 26192  013A52  24E1               	addwf	fsr1l,w,c
 26193  013A54  6ED9               	movwf	fsr2l,c
 26194  013A56  0EFF               	movlw	255
 26195  013A58  20E2               	addwfc	fsr1h,w,c
 26196  013A5A  6EDA               	movwf	fsr2h,c
 26197  013A5C  50DF               	movf	indf2,w,c
 26198  013A5E  6E33               	movwf	(btemp+11)^0,c
 26199  013A60  0E80               	movlw	128
 26200  013A62  1633               	andwf	(btemp+11)^0,f,c
 26201                           
 26202                           ;stkvar	_signs @ sp[(-4)+3]
 26203  013A64  0EFF               	movlw	-1
 26204  013A66  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26205                           
 26206                           ;stkvar	_b @ sp[(-4)+-4]
 26207  013A6C  0EFB               	movlw	251
 26208  013A6E  24E1               	addwf	fsr1l,w,c
 26209  013A70  6ED9               	movwf	fsr2l,c
 26210  013A72  0EFF               	movlw	255
 26211  013A74  20E2               	addwfc	fsr1h,w,c
 26212  013A76  6EDA               	movwf	fsr2h,c
 26213  013A78  50DF               	movf	indf2,w,c
 26214  013A7A  6E33               	movwf	(btemp+11)^0,c
 26215  013A7C  90D8               	bcf	status,0,c
 26216  013A7E  3433               	rlcf	(btemp+11)^0,w,c
 26217  013A80  6E32               	movwf	(btemp+10)^0,c
 26218                           
 26219                           ;stkvar	_bexp @ sp[(-4)+1]
 26220  013A82  0EFD               	movlw	-3
 26221  013A84  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26222                           
 26223                           ;stkvar	_b @ sp[(-4)+-4]
 26224  013A8A  0EFA               	movlw	250
 26225  013A8C  24E1               	addwf	fsr1l,w,c
 26226  013A8E  6ED9               	movwf	fsr2l,c
 26227  013A90  0EFF               	movlw	255
 26228  013A92  20E2               	addwfc	fsr1h,w,c
 26229  013A94  6EDA               	movwf	fsr2h,c
 26230  013A96  AEDF               	btfss	indf2,7,c
 26231  013A98  D002               	goto	l7508
 26232                           
 26233                           ;stkvar	_bexp @ sp[(-4)+1]
 26234  013A9A  0EFD               	movlw	-3
 26235  013A9C  80E3               	bsf	plusw1,0,c
 26236  013A9E                     l7508:
 26237                           
 26238                           ;stkvar	_bexp @ sp[(-4)+1]
 26239  013A9E  0EFD               	movlw	-3
 26240  013AA0  50E3               	movf	plusw1,w,c
 26241  013AA2  B4D8               	btfsc	status,2,c
 26242  013AA4  D027               	goto	l7518
 26243                           
 26244                           ;stkvar	_bexp @ sp[(-4)+1]
 26245  013AA6  0EFD               	movlw	-3
 26246  013AA8  28E3               	incf	plusw1,w,c
 26247  013AAA  A4D8               	btfss	status,2,c
 26248  013AAC  D018               	goto	l7514
 26249  013AAE  0E00               	movlw	0
 26250  013AB0  6E30               	movwf	(btemp+8)^0,c
 26251  013AB2  0E00               	movlw	0
 26252  013AB4  6E31               	movwf	(btemp+9)^0,c
 26253  013AB6  0E00               	movlw	0
 26254  013AB8  6E32               	movwf	(btemp+10)^0,c
 26255  013ABA  0E00               	movlw	0
 26256  013ABC  6E33               	movwf	(btemp+11)^0,c
 26257                           
 26258                           ;stkvar	_b @ sp[(-4)+-4]
 26259  013ABE  0EF8               	movlw	-8
 26260  013AC0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26261  013AC6  0EF9               	movlw	-7
 26262  013AC8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26263  013ACE  0EFA               	movlw	-6
 26264  013AD0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26265  013AD6  0EFB               	movlw	-5
 26266  013AD8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26267  013ADE                     l7514:
 26268                           
 26269                           ;stkvar	_b @ sp[(-4)+-4]
 26270  013ADE  0EFA               	movlw	-6
 26271  013AE0  8EE3               	bsf	plusw1,7,c
 26272                           
 26273                           ;stkvar	_b @ sp[(-4)+-4]
 26274  013AE2  0EFB               	movlw	251
 26275  013AE4  24E1               	addwf	fsr1l,w,c
 26276  013AE6  6ED9               	movwf	fsr2l,c
 26277  013AE8  0EFF               	movlw	255
 26278  013AEA  20E2               	addwfc	fsr1h,w,c
 26279  013AEC  6EDA               	movwf	fsr2h,c
 26280  013AEE  0E00               	movlw	0
 26281  013AF0  6EDF               	movwf	indf2,c
 26282  013AF2  D018               	goto	l7520
 26283  013AF4                     l7518:
 26284  013AF4  0E00               	movlw	0
 26285  013AF6  6E30               	movwf	(btemp+8)^0,c
 26286  013AF8  0E00               	movlw	0
 26287  013AFA  6E31               	movwf	(btemp+9)^0,c
 26288  013AFC  0E00               	movlw	0
 26289  013AFE  6E32               	movwf	(btemp+10)^0,c
 26290  013B00  0E00               	movlw	0
 26291  013B02  6E33               	movwf	(btemp+11)^0,c
 26292                           
 26293                           ;stkvar	_b @ sp[(-4)+-4]
 26294  013B04  0EF8               	movlw	-8
 26295  013B06  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26296  013B0C  0EF9               	movlw	-7
 26297  013B0E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26298  013B14  0EFA               	movlw	-6
 26299  013B16  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26300  013B1C  0EFB               	movlw	-5
 26301  013B1E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26302  013B24                     l7520:
 26303                           
 26304                           ;stkvar	_a @ sp[(-4)+-8]
 26305  013B24  0EF7               	movlw	247
 26306  013B26  24E1               	addwf	fsr1l,w,c
 26307  013B28  6ED9               	movwf	fsr2l,c
 26308  013B2A  0EFF               	movlw	255
 26309  013B2C  20E2               	addwfc	fsr1h,w,c
 26310  013B2E  6EDA               	movwf	fsr2h,c
 26311  013B30  50DF               	movf	indf2,w,c
 26312  013B32  6E33               	movwf	(btemp+11)^0,c
 26313  013B34  0E80               	movlw	128
 26314  013B36  1633               	andwf	(btemp+11)^0,f,c
 26315                           
 26316                           ;stkvar	_aexp @ sp[(-4)+2]
 26317  013B38  0EFE               	movlw	-2
 26318  013B3A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26319                           
 26320                           ;stkvar	_signs @ sp[(-4)+3]
 26321                           ;stkvar	_aexp @ sp[(-4)+2]
 26322  013B40  50E1               	movf	fsr1l,w,c
 26323  013B42  0FFE               	addlw	-2
 26324  013B44  6ED9               	movwf	fsr2l,c
 26325  013B46  50E2               	movf	fsr1h,w,c
 26326  013B48  6EDA               	movwf	fsr2h,c
 26327  013B4A  0EFF               	movlw	255
 26328  013B4C  22DA               	addwfc	fsr2h,f,c
 26329  013B4E  0EFF               	movlw	-1
 26330  013B50  50E3               	movf	plusw1,w,c
 26331  013B52  18DE               	xorwf	postinc2,w,c
 26332  013B54  B4D8               	btfsc	status,2,c
 26333  013B56  D002               	goto	l7526
 26334                           
 26335                           ;stkvar	_signs @ sp[(-4)+3]
 26336  013B58  0EFF               	movlw	-1
 26337  013B5A  8CE3               	bsf	plusw1,6,c
 26338  013B5C                     l7526:
 26339                           
 26340                           ;stkvar	_a @ sp[(-4)+-8]
 26341  013B5C  0EF7               	movlw	247
 26342  013B5E  24E1               	addwf	fsr1l,w,c
 26343  013B60  6ED9               	movwf	fsr2l,c
 26344  013B62  0EFF               	movlw	255
 26345  013B64  20E2               	addwfc	fsr1h,w,c
 26346  013B66  6EDA               	movwf	fsr2h,c
 26347  013B68  50DF               	movf	indf2,w,c
 26348  013B6A  6E33               	movwf	(btemp+11)^0,c
 26349  013B6C  90D8               	bcf	status,0,c
 26350  013B6E  3433               	rlcf	(btemp+11)^0,w,c
 26351  013B70  6E32               	movwf	(btemp+10)^0,c
 26352                           
 26353                           ;stkvar	_aexp @ sp[(-4)+2]
 26354  013B72  0EFE               	movlw	-2
 26355  013B74  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26356                           
 26357                           ;stkvar	_a @ sp[(-4)+-8]
 26358  013B7A  0EF6               	movlw	246
 26359  013B7C  24E1               	addwf	fsr1l,w,c
 26360  013B7E  6ED9               	movwf	fsr2l,c
 26361  013B80  0EFF               	movlw	255
 26362  013B82  20E2               	addwfc	fsr1h,w,c
 26363  013B84  6EDA               	movwf	fsr2h,c
 26364  013B86  AEDF               	btfss	indf2,7,c
 26365  013B88  D002               	goto	l7532
 26366                           
 26367                           ;stkvar	_aexp @ sp[(-4)+2]
 26368  013B8A  0EFE               	movlw	-2
 26369  013B8C  80E3               	bsf	plusw1,0,c
 26370  013B8E                     l7532:
 26371                           
 26372                           ;stkvar	_aexp @ sp[(-4)+2]
 26373  013B8E  0EFE               	movlw	-2
 26374  013B90  50E3               	movf	plusw1,w,c
 26375  013B92  B4D8               	btfsc	status,2,c
 26376  013B94  D027               	goto	l7542
 26377                           
 26378                           ;stkvar	_aexp @ sp[(-4)+2]
 26379  013B96  0EFE               	movlw	-2
 26380  013B98  28E3               	incf	plusw1,w,c
 26381  013B9A  A4D8               	btfss	status,2,c
 26382  013B9C  D018               	goto	l7538
 26383  013B9E  0E00               	movlw	0
 26384  013BA0  6E30               	movwf	(btemp+8)^0,c
 26385  013BA2  0E00               	movlw	0
 26386  013BA4  6E31               	movwf	(btemp+9)^0,c
 26387  013BA6  0E00               	movlw	0
 26388  013BA8  6E32               	movwf	(btemp+10)^0,c
 26389  013BAA  0E00               	movlw	0
 26390  013BAC  6E33               	movwf	(btemp+11)^0,c
 26391                           
 26392                           ;stkvar	_a @ sp[(-4)+-8]
 26393  013BAE  0EF4               	movlw	-12
 26394  013BB0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26395  013BB6  0EF5               	movlw	-11
 26396  013BB8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26397  013BBE  0EF6               	movlw	-10
 26398  013BC0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26399  013BC6  0EF7               	movlw	-9
 26400  013BC8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26401  013BCE                     l7538:
 26402                           
 26403                           ;stkvar	_a @ sp[(-4)+-8]
 26404  013BCE  0EF6               	movlw	-10
 26405  013BD0  8EE3               	bsf	plusw1,7,c
 26406                           
 26407                           ;stkvar	_a @ sp[(-4)+-8]
 26408  013BD2  0EF7               	movlw	247
 26409  013BD4  24E1               	addwf	fsr1l,w,c
 26410  013BD6  6ED9               	movwf	fsr2l,c
 26411  013BD8  0EFF               	movlw	255
 26412  013BDA  20E2               	addwfc	fsr1h,w,c
 26413  013BDC  6EDA               	movwf	fsr2h,c
 26414  013BDE  0E00               	movlw	0
 26415  013BE0  6EDF               	movwf	indf2,c
 26416  013BE2  D018               	goto	l7544
 26417  013BE4                     l7542:
 26418  013BE4  0E00               	movlw	0
 26419  013BE6  6E30               	movwf	(btemp+8)^0,c
 26420  013BE8  0E00               	movlw	0
 26421  013BEA  6E31               	movwf	(btemp+9)^0,c
 26422  013BEC  0E00               	movlw	0
 26423  013BEE  6E32               	movwf	(btemp+10)^0,c
 26424  013BF0  0E00               	movlw	0
 26425  013BF2  6E33               	movwf	(btemp+11)^0,c
 26426                           
 26427                           ;stkvar	_a @ sp[(-4)+-8]
 26428  013BF4  0EF4               	movlw	-12
 26429  013BF6  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26430  013BFC  0EF5               	movlw	-11
 26431  013BFE  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26432  013C04  0EF6               	movlw	-10
 26433  013C06  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26434  013C0C  0EF7               	movlw	-9
 26435  013C0E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26436  013C14                     l7544:
 26437                           
 26438                           ;stkvar	_bexp @ sp[(-4)+1]
 26439                           ;stkvar	_aexp @ sp[(-4)+2]
 26440  013C14  50E1               	movf	fsr1l,w,c
 26441  013C16  0FFE               	addlw	-2
 26442  013C18  6ED9               	movwf	fsr2l,c
 26443  013C1A  50E2               	movf	fsr1h,w,c
 26444  013C1C  6EDA               	movwf	fsr2h,c
 26445  013C1E  0EFF               	movlw	255
 26446  013C20  22DA               	addwfc	fsr2h,f,c
 26447  013C22  0EFD               	movlw	-3
 26448  013C24  50E3               	movf	plusw1,w,c
 26449  013C26  5CDE               	subwf	postinc2,w,c
 26450  013C28  B0D8               	btfsc	status,0,c
 26451  013C2A  D0A4               	goto	l7580
 26452                           
 26453                           ;stkvar	_signs @ sp[(-4)+3]
 26454  013C2C  0EFF               	movlw	-1
 26455  013C2E  ACE3               	btfss	plusw1,6,c
 26456  013C30  D002               	goto	l7550
 26457                           
 26458                           ;stkvar	_signs @ sp[(-4)+3]
 26459  013C32  0EFF               	movlw	-1
 26460  013C34  7EE3               	btg	plusw1,7,c
 26461  013C36                     l7550:
 26462                           
 26463                           ;stkvar	_bexp @ sp[(-4)+1]
 26464                           ;stkvar	_grs @ sp[(-4)+0]
 26465  013C36  0EFD               	movlw	-3
 26466  013C38  006F FF8C  F028    	movff	plusw1,btemp
 26467  013C3E  0EFC               	movlw	-4
 26468  013C40  0060  F0A3  FFE3   	movff	btemp,plusw1
 26469                           
 26470                           ;stkvar	_aexp @ sp[(-4)+2]
 26471                           ;stkvar	_bexp @ sp[(-4)+1]
 26472  013C46  0EFE               	movlw	-2
 26473  013C48  006F FF8C  F028    	movff	plusw1,btemp
 26474  013C4E  0EFD               	movlw	-3
 26475  013C50  0060  F0A3  FFE3   	movff	btemp,plusw1
 26476                           
 26477                           ;stkvar	_grs @ sp[(-4)+0]
 26478                           ;stkvar	_aexp @ sp[(-4)+2]
 26479  013C56  0EFC               	movlw	-4
 26480  013C58  006F FF8C  F028    	movff	plusw1,btemp
 26481  013C5E  0EFE               	movlw	-2
 26482  013C60  0060  F0A3  FFE3   	movff	btemp,plusw1
 26483                           
 26484                           ;stkvar	_b @ sp[(-4)+-4]
 26485                           ;stkvar	_grs @ sp[(-4)+0]
 26486  013C66  0EF8               	movlw	-8
 26487  013C68  006F FF8C  F028    	movff	plusw1,btemp
 26488  013C6E  0EFC               	movlw	-4
 26489  013C70  0060  F0A3  FFE3   	movff	btemp,plusw1
 26490                           
 26491                           ;stkvar	_a @ sp[(-4)+-8]
 26492                           ;stkvar	_b @ sp[(-4)+-4]
 26493  013C76  0EF4               	movlw	-12
 26494  013C78  006F FF8C  F028    	movff	plusw1,btemp
 26495  013C7E  0EF8               	movlw	-8
 26496  013C80  0060  F0A3  FFE3   	movff	btemp,plusw1
 26497                           
 26498                           ;stkvar	_grs @ sp[(-4)+0]
 26499                           ;stkvar	_a @ sp[(-4)+-8]
 26500  013C86  0EFC               	movlw	-4
 26501  013C88  006F FF8C  F028    	movff	plusw1,btemp
 26502  013C8E  0EF4               	movlw	-12
 26503  013C90  0060  F0A3  FFE3   	movff	btemp,plusw1
 26504                           
 26505                           ;stkvar	_b @ sp[(-4)+-4]
 26506  013C96  0EF9               	movlw	249
 26507  013C98  24E1               	addwf	fsr1l,w,c
 26508  013C9A  6ED9               	movwf	fsr2l,c
 26509  013C9C  0EFF               	movlw	255
 26510  013C9E  20E2               	addwfc	fsr1h,w,c
 26511  013CA0  6EDA               	movwf	fsr2h,c
 26512  013CA2  50DF               	movf	indf2,w,c
 26513  013CA4  6E33               	movwf	(btemp+11)^0,c
 26514                           
 26515                           ;stkvar	_grs @ sp[(-4)+0]
 26516  013CA6  0EFC               	movlw	-4
 26517  013CA8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26518                           
 26519                           ;stkvar	_a @ sp[(-4)+-8]
 26520  013CAE  0EF5               	movlw	245
 26521  013CB0  24E1               	addwf	fsr1l,w,c
 26522  013CB2  6ED9               	movwf	fsr2l,c
 26523  013CB4  0EFF               	movlw	255
 26524  013CB6  20E2               	addwfc	fsr1h,w,c
 26525  013CB8  6EDA               	movwf	fsr2h,c
 26526                           
 26527                           ;stkvar	_b @ sp[(-4)+-4]
 26528  013CBA  0EF9               	movlw	249
 26529  013CBC  24E1               	addwf	fsr1l,w,c
 26530  013CBE  6EE9               	movwf	fsr0l,c
 26531  013CC0  0EFF               	movlw	255
 26532  013CC2  20E2               	addwfc	fsr1h,w,c
 26533  013CC4  6EEA               	movwf	fsr0h,c
 26534  013CC6  006F FF7F FFEF     	movff	indf2,indf0
 26535                           
 26536                           ;stkvar	_grs @ sp[(-4)+0]
 26537                           ;stkvar	_a @ sp[(-4)+-8]
 26538  013CCC  0EF5               	movlw	245
 26539  013CCE  24E1               	addwf	fsr1l,w,c
 26540  013CD0  6ED9               	movwf	fsr2l,c
 26541  013CD2  0EFF               	movlw	255
 26542  013CD4  20E2               	addwfc	fsr1h,w,c
 26543  013CD6  6EDA               	movwf	fsr2h,c
 26544  013CD8  0EFC               	movlw	-4
 26545  013CDA  006F FF8F FFDF     	movff	plusw1,indf2
 26546                           
 26547                           ;stkvar	_b @ sp[(-4)+-4]
 26548  013CE0  0EFA               	movlw	250
 26549  013CE2  24E1               	addwf	fsr1l,w,c
 26550  013CE4  6ED9               	movwf	fsr2l,c
 26551  013CE6  0EFF               	movlw	255
 26552  013CE8  20E2               	addwfc	fsr1h,w,c
 26553  013CEA  6EDA               	movwf	fsr2h,c
 26554  013CEC  50DF               	movf	indf2,w,c
 26555  013CEE  6E33               	movwf	(btemp+11)^0,c
 26556                           
 26557                           ;stkvar	_grs @ sp[(-4)+0]
 26558  013CF0  0EFC               	movlw	-4
 26559  013CF2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26560                           
 26561                           ;stkvar	_a @ sp[(-4)+-8]
 26562  013CF8  0EF6               	movlw	246
 26563  013CFA  24E1               	addwf	fsr1l,w,c
 26564  013CFC  6ED9               	movwf	fsr2l,c
 26565  013CFE  0EFF               	movlw	255
 26566  013D00  20E2               	addwfc	fsr1h,w,c
 26567  013D02  6EDA               	movwf	fsr2h,c
 26568                           
 26569                           ;stkvar	_b @ sp[(-4)+-4]
 26570  013D04  0EFA               	movlw	250
 26571  013D06  24E1               	addwf	fsr1l,w,c
 26572  013D08  6EE9               	movwf	fsr0l,c
 26573  013D0A  0EFF               	movlw	255
 26574  013D0C  20E2               	addwfc	fsr1h,w,c
 26575  013D0E  6EEA               	movwf	fsr0h,c
 26576  013D10  006F FF7F FFEF     	movff	indf2,indf0
 26577                           
 26578                           ;stkvar	_grs @ sp[(-4)+0]
 26579                           ;stkvar	_a @ sp[(-4)+-8]
 26580  013D16  0EF6               	movlw	246
 26581  013D18  24E1               	addwf	fsr1l,w,c
 26582  013D1A  6ED9               	movwf	fsr2l,c
 26583  013D1C  0EFF               	movlw	255
 26584  013D1E  20E2               	addwfc	fsr1h,w,c
 26585  013D20  6EDA               	movwf	fsr2h,c
 26586  013D22  0EFC               	movlw	-4
 26587  013D24  006F FF8F FFDF     	movff	plusw1,indf2
 26588                           
 26589                           ;stkvar	_b @ sp[(-4)+-4]
 26590  013D2A  0EFB               	movlw	251
 26591  013D2C  24E1               	addwf	fsr1l,w,c
 26592  013D2E  6ED9               	movwf	fsr2l,c
 26593  013D30  0EFF               	movlw	255
 26594  013D32  20E2               	addwfc	fsr1h,w,c
 26595  013D34  6EDA               	movwf	fsr2h,c
 26596  013D36  50DF               	movf	indf2,w,c
 26597  013D38  6E33               	movwf	(btemp+11)^0,c
 26598                           
 26599                           ;stkvar	_grs @ sp[(-4)+0]
 26600  013D3A  0EFC               	movlw	-4
 26601  013D3C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26602                           
 26603                           ;stkvar	_a @ sp[(-4)+-8]
 26604  013D42  0EF7               	movlw	247
 26605  013D44  24E1               	addwf	fsr1l,w,c
 26606  013D46  6ED9               	movwf	fsr2l,c
 26607  013D48  0EFF               	movlw	255
 26608  013D4A  20E2               	addwfc	fsr1h,w,c
 26609  013D4C  6EDA               	movwf	fsr2h,c
 26610                           
 26611                           ;stkvar	_b @ sp[(-4)+-4]
 26612  013D4E  0EFB               	movlw	251
 26613  013D50  24E1               	addwf	fsr1l,w,c
 26614  013D52  6EE9               	movwf	fsr0l,c
 26615  013D54  0EFF               	movlw	255
 26616  013D56  20E2               	addwfc	fsr1h,w,c
 26617  013D58  6EEA               	movwf	fsr0h,c
 26618  013D5A  006F FF7F FFEF     	movff	indf2,indf0
 26619                           
 26620                           ;stkvar	_grs @ sp[(-4)+0]
 26621                           ;stkvar	_a @ sp[(-4)+-8]
 26622  013D60  0EF7               	movlw	247
 26623  013D62  24E1               	addwf	fsr1l,w,c
 26624  013D64  6ED9               	movwf	fsr2l,c
 26625  013D66  0EFF               	movlw	255
 26626  013D68  20E2               	addwfc	fsr1h,w,c
 26627  013D6A  6EDA               	movwf	fsr2h,c
 26628  013D6C  0EFC               	movlw	-4
 26629  013D6E  006F FF8F FFDF     	movff	plusw1,indf2
 26630  013D74                     l7580:
 26631                           
 26632                           ;stkvar	_grs @ sp[(-4)+0]
 26633  013D74  0EFC               	movlw	-4
 26634  013D76  6AE3               	clrf	plusw1,c
 26635                           
 26636                           ;stkvar	_aexp @ sp[(-4)+2]
 26637  013D78  0EFE               	movlw	-2
 26638  013D7A  50E3               	movf	plusw1,w,c
 26639  013D7C  6E32               	movwf	(btemp+10)^0,c
 26640  013D7E  6A33               	clrf	(btemp+11)^0,c
 26641                           
 26642                           ;stkvar	_bexp @ sp[(-4)+1]
 26643  013D80  0EFD               	movlw	-3
 26644  013D82  50E3               	movf	plusw1,w,c
 26645  013D84  5E32               	subwf	(btemp+10)^0,f,c
 26646  013D86  0E00               	movlw	0
 26647  013D88  5A33               	subwfb	(btemp+11)^0,f,c
 26648  013D8A  BE33               	btfsc	(btemp+11)^0,7,c
 26649  013D8C  D062               	goto	l7604
 26650  013D8E  5033               	movf	(btemp+11)^0,w,c
 26651  013D90  E104               	bnz	u5360
 26652  013D92  0E1A               	movlw	26
 26653  013D94  5C32               	subwf	(btemp+10)^0,w,c
 26654  013D96  A0D8               	btfss	status,0,c
 26655  013D98  D05C               	goto	l7604
 26656  013D9A                     u5360:
 26657                           
 26658                           ;stkvar	_b @ sp[(-4)+-4]
 26659  013D9A  0EF8               	movlw	-8
 26660  013D9C  50E3               	movf	plusw1,w,c
 26661  013D9E  E10A               	bnz	u5371
 26662  013DA0  0EF9               	movlw	-7
 26663  013DA2  50E3               	movf	plusw1,w,c
 26664  013DA4  E107               	bnz	u5371
 26665  013DA6  0EFA               	movlw	-6
 26666  013DA8  50E3               	movf	plusw1,w,c
 26667  013DAA  E104               	bnz	u5371
 26668  013DAC  0EFB               	movlw	-5
 26669  013DAE  50E3               	movf	plusw1,w,c
 26670  013DB0  B4D8               	btfsc	status,2,c
 26671  013DB2  D003               	goto	u5370
 26672  013DB4                     u5371:
 26673  013DB4  6A33               	clrf	(btemp+11)^0,c
 26674  013DB6  2A33               	incf	(btemp+11)^0,f,c
 26675  013DB8  D001               	goto	u5388
 26676  013DBA                     u5370:
 26677  013DBA  6A33               	clrf	(btemp+11)^0,c
 26678  013DBC                     u5388:
 26679                           
 26680                           ;stkvar	_grs @ sp[(-4)+0]
 26681  013DBC  0EFC               	movlw	-4
 26682  013DBE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26683                           
 26684                           ;stkvar	_b @ sp[(-4)+-4]
 26685  013DC4  0EF8               	movlw	-8
 26686  013DC6  6AE3               	clrf	plusw1,c
 26687  013DC8  0EF9               	movlw	-7
 26688  013DCA  6AE3               	clrf	plusw1,c
 26689  013DCC  0EFA               	movlw	-6
 26690  013DCE  6AE3               	clrf	plusw1,c
 26691  013DD0  0EFB               	movlw	-5
 26692  013DD2  6AE3               	clrf	plusw1,c
 26693                           
 26694                           ;stkvar	_aexp @ sp[(-4)+2]
 26695                           ;stkvar	_bexp @ sp[(-4)+1]
 26696  013DD4  0EFE               	movlw	-2
 26697  013DD6  006F FF8C  F028    	movff	plusw1,btemp
 26698  013DDC  0EFD               	movlw	-3
 26699  013DDE  0060  F0A3  FFE3   	movff	btemp,plusw1
 26700  013DE4  D042               	goto	u5420
 26701  013DE6                     l7590:
 26702                           
 26703                           ;stkvar	_grs @ sp[(-4)+0]
 26704  013DE6  0EFC               	movlw	-4
 26705  013DE8  A0E3               	btfss	plusw1,0,c
 26706  013DEA  D00D               	goto	l7594
 26707                           
 26708                           ;stkvar	_grs @ sp[(-4)+0]
 26709  013DEC  0EFC               	movlw	-4
 26710  013DEE  006F FF8C  F033    	movff	plusw1,btemp+11
 26711  013DF4  90D8               	bcf	status,0,c
 26712  013DF6  3233               	rrcf	(btemp+11)^0,f,c
 26713  013DF8  0E01               	movlw	1
 26714  013DFA  1233               	iorwf	(btemp+11)^0,f,c
 26715                           
 26716                           ;stkvar	_grs @ sp[(-4)+0]
 26717  013DFC  0EFC               	movlw	-4
 26718  013DFE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26719  013E04  D009               	goto	l7596
 26720  013E06                     l7594:
 26721                           
 26722                           ;stkvar	_grs @ sp[(-4)+0]
 26723  013E06  50E1               	movf	fsr1l,w,c
 26724  013E08  0FFC               	addlw	-4
 26725  013E0A  6ED9               	movwf	fsr2l,c
 26726  013E0C  50E2               	movf	fsr1h,w,c
 26727  013E0E  6EDA               	movwf	fsr2h,c
 26728  013E10  0EFF               	movlw	255
 26729  013E12  22DA               	addwfc	fsr2h,f,c
 26730  013E14  90D8               	bcf	status,0,c
 26731  013E16  32DF               	rrcf	indf2,f,c
 26732  013E18                     l7596:
 26733                           
 26734                           ;stkvar	_b @ sp[(-4)+-4]
 26735  013E18  0EF8               	movlw	-8
 26736  013E1A  A0E3               	btfss	plusw1,0,c
 26737  013E1C  D002               	goto	l7600
 26738                           
 26739                           ;stkvar	_grs @ sp[(-4)+0]
 26740  013E1E  0EFC               	movlw	-4
 26741  013E20  8EE3               	bsf	plusw1,7,c
 26742  013E22                     l7600:
 26743  013E22  0E01               	movlw	1
 26744  013E24  6E33               	movwf	(btemp+11)^0,c
 26745                           
 26746                           ;stkvar	_b @ sp[(-4)+-4]
 26747  013E26  50E1               	movf	fsr1l,w,c
 26748  013E28  0FF8               	addlw	-8
 26749  013E2A  6ED9               	movwf	fsr2l,c
 26750  013E2C  50E2               	movf	fsr1h,w,c
 26751  013E2E  6EDA               	movwf	fsr2h,c
 26752  013E30  0EFF               	movlw	255
 26753  013E32  22DA               	addwfc	fsr2h,f,c
 26754  013E34  2833               	incf	(btemp+11)^0,w,c
 26755  013E36  52DE               	movf	postinc2,f,c
 26756  013E38  D008               	goto	u5410
 26757  013E3A                     u5415:
 26758  013E3A  52DE               	movf	postinc2,f,c
 26759  013E3C  90D8               	bcf	status,0,c
 26760  013E3E  BEDC               	btfsc	preinc2,7,c
 26761  013E40  80D8               	bsf	status,0,c
 26762  013E42  32DD               	rrcf	postdec2,f,c
 26763  013E44  32DD               	rrcf	postdec2,f,c
 26764  013E46  32DD               	rrcf	postdec2,f,c
 26765  013E48  32DE               	rrcf	postinc2,f,c
 26766  013E4A                     u5410:
 26767  013E4A  2EE8               	decfsz	wreg,f,c
 26768  013E4C  D7F6               	goto	u5415
 26769                           
 26770                           ;stkvar	_bexp @ sp[(-4)+1]
 26771  013E4E  0EFD               	movlw	-3
 26772  013E50  2AE3               	incf	plusw1,f,c
 26773  013E52                     l7604:
 26774                           
 26775                           ;stkvar	_aexp @ sp[(-4)+2]
 26776                           ;stkvar	_bexp @ sp[(-4)+1]
 26777  013E52  50E1               	movf	fsr1l,w,c
 26778  013E54  0FFD               	addlw	-3
 26779  013E56  6ED9               	movwf	fsr2l,c
 26780  013E58  50E2               	movf	fsr1h,w,c
 26781  013E5A  6EDA               	movwf	fsr2h,c
 26782  013E5C  0EFF               	movlw	255
 26783  013E5E  22DA               	addwfc	fsr2h,f,c
 26784  013E60  0EFE               	movlw	-2
 26785  013E62  50E3               	movf	plusw1,w,c
 26786  013E64  5CDE               	subwf	postinc2,w,c
 26787  013E66  A0D8               	btfss	status,0,c
 26788  013E68  D7BE               	goto	l7590
 26789  013E6A                     u5420:
 26790                           
 26791                           ;stkvar	_signs @ sp[(-4)+3]
 26792  013E6A  0EFF               	movlw	-1
 26793  013E6C  BCE3               	btfsc	plusw1,6,c
 26794  013E6E  D066               	goto	l7632
 26795                           
 26796                           ;stkvar	_bexp @ sp[(-4)+1]
 26797  013E70  0EFD               	movlw	-3
 26798  013E72  50E3               	movf	plusw1,w,c
 26799  013E74  B4D8               	btfsc	status,2,c
 26800  013E76  D0F2               	goto	u5520
 26801                           
 26802                           ;stkvar	_a @ sp[(-4)+-8]
 26803                           ;stkvar	_b @ sp[(-4)+-4]
 26804  013E78  0EF8               	movlw	-8
 26805  013E7A  50E3               	movf	plusw1,w,c
 26806  013E7C  6E28               	movwf	btemp^0,c
 26807  013E7E  0EF4               	movlw	-12
 26808  013E80  50E3               	movf	plusw1,w,c
 26809  013E82  2628               	addwf	btemp^0,f,c
 26810  013E84  0EF8               	movlw	-8
 26811  013E86  0060  F0A3  FFE3   	movff	btemp,plusw1
 26812  013E8C  0EF9               	movlw	-7
 26813  013E8E  50E3               	movf	plusw1,w,c
 26814  013E90  6E28               	movwf	btemp^0,c
 26815  013E92  0EF5               	movlw	-11
 26816  013E94  50E3               	movf	plusw1,w,c
 26817  013E96  2228               	addwfc	btemp^0,f,c
 26818  013E98  0EF9               	movlw	-7
 26819  013E9A  0060  F0A3  FFE3   	movff	btemp,plusw1
 26820  013EA0  0EFA               	movlw	-6
 26821  013EA2  50E3               	movf	plusw1,w,c
 26822  013EA4  6E28               	movwf	btemp^0,c
 26823  013EA6  0EF6               	movlw	-10
 26824  013EA8  50E3               	movf	plusw1,w,c
 26825  013EAA  2228               	addwfc	btemp^0,f,c
 26826  013EAC  0EFA               	movlw	-6
 26827  013EAE  0060  F0A3  FFE3   	movff	btemp,plusw1
 26828  013EB4  0EFB               	movlw	-5
 26829  013EB6  50E3               	movf	plusw1,w,c
 26830  013EB8  6E28               	movwf	btemp^0,c
 26831  013EBA  0EF7               	movlw	-9
 26832  013EBC  50E3               	movf	plusw1,w,c
 26833  013EBE  2228               	addwfc	btemp^0,f,c
 26834  013EC0  0EFB               	movlw	-5
 26835  013EC2  0060  F0A3  FFE3   	movff	btemp,plusw1
 26836                           
 26837                           ;stkvar	_b @ sp[(-4)+-4]
 26838  013EC8  0EFB               	movlw	-5
 26839  013ECA  A0E3               	btfss	plusw1,0,c
 26840  013ECC  D101               	goto	u5560
 26841                           
 26842                           ;stkvar	_grs @ sp[(-4)+0]
 26843  013ECE  0EFC               	movlw	-4
 26844  013ED0  A0E3               	btfss	plusw1,0,c
 26845  013ED2  D00D               	goto	l7622
 26846                           
 26847                           ;stkvar	_grs @ sp[(-4)+0]
 26848  013ED4  0EFC               	movlw	-4
 26849  013ED6  006F FF8C  F033    	movff	plusw1,btemp+11
 26850  013EDC  90D8               	bcf	status,0,c
 26851  013EDE  3233               	rrcf	(btemp+11)^0,f,c
 26852  013EE0  0E01               	movlw	1
 26853  013EE2  1233               	iorwf	(btemp+11)^0,f,c
 26854                           
 26855                           ;stkvar	_grs @ sp[(-4)+0]
 26856  013EE4  0EFC               	movlw	-4
 26857  013EE6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26858  013EEC  D009               	goto	l7624
 26859  013EEE                     l7622:
 26860                           
 26861                           ;stkvar	_grs @ sp[(-4)+0]
 26862  013EEE  50E1               	movf	fsr1l,w,c
 26863  013EF0  0FFC               	addlw	-4
 26864  013EF2  6ED9               	movwf	fsr2l,c
 26865  013EF4  50E2               	movf	fsr1h,w,c
 26866  013EF6  6EDA               	movwf	fsr2h,c
 26867  013EF8  0EFF               	movlw	255
 26868  013EFA  22DA               	addwfc	fsr2h,f,c
 26869  013EFC  90D8               	bcf	status,0,c
 26870  013EFE  32DF               	rrcf	indf2,f,c
 26871  013F00                     l7624:
 26872                           
 26873                           ;stkvar	_b @ sp[(-4)+-4]
 26874  013F00  0EF8               	movlw	-8
 26875  013F02  A0E3               	btfss	plusw1,0,c
 26876  013F04  D002               	goto	l7628
 26877                           
 26878                           ;stkvar	_grs @ sp[(-4)+0]
 26879  013F06  0EFC               	movlw	-4
 26880  013F08  8EE3               	bsf	plusw1,7,c
 26881  013F0A                     l7628:
 26882  013F0A  0E01               	movlw	1
 26883  013F0C  6E33               	movwf	(btemp+11)^0,c
 26884                           
 26885                           ;stkvar	_b @ sp[(-4)+-4]
 26886  013F0E  50E1               	movf	fsr1l,w,c
 26887  013F10  0FF8               	addlw	-8
 26888  013F12  6ED9               	movwf	fsr2l,c
 26889  013F14  50E2               	movf	fsr1h,w,c
 26890  013F16  6EDA               	movwf	fsr2h,c
 26891  013F18  0EFF               	movlw	255
 26892  013F1A  22DA               	addwfc	fsr2h,f,c
 26893  013F1C  2833               	incf	(btemp+11)^0,w,c
 26894  013F1E  52DE               	movf	postinc2,f,c
 26895  013F20  D008               	goto	u5480
 26896  013F22                     u5485:
 26897  013F22  52DE               	movf	postinc2,f,c
 26898  013F24  90D8               	bcf	status,0,c
 26899  013F26  BEDC               	btfsc	preinc2,7,c
 26900  013F28  80D8               	bsf	status,0,c
 26901  013F2A  32DD               	rrcf	postdec2,f,c
 26902  013F2C  32DD               	rrcf	postdec2,f,c
 26903  013F2E  32DD               	rrcf	postdec2,f,c
 26904  013F30  32DE               	rrcf	postinc2,f,c
 26905  013F32                     u5480:
 26906  013F32  2EE8               	decfsz	wreg,f,c
 26907  013F34  D7F6               	goto	u5485
 26908                           
 26909                           ;stkvar	_bexp @ sp[(-4)+1]
 26910  013F36  0EFD               	movlw	-3
 26911  013F38  2AE3               	incf	plusw1,f,c
 26912  013F3A  D0CA               	goto	u5560
 26913  013F3C                     l7632:
 26914                           
 26915                           ;stkvar	_a @ sp[(-4)+-8]
 26916                           ;stkvar	_b @ sp[(-4)+-4]
 26917  013F3C  50E1               	movf	fsr1l,w,c
 26918  013F3E  0FF8               	addlw	-8
 26919  013F40  6ED9               	movwf	fsr2l,c
 26920  013F42  50E2               	movf	fsr1h,w,c
 26921  013F44  6EDA               	movwf	fsr2h,c
 26922  013F46  0EFF               	movlw	255
 26923  013F48  22DA               	addwfc	fsr2h,f,c
 26924  013F4A  0EF4               	movlw	-12
 26925  013F4C  50E3               	movf	plusw1,w,c
 26926  013F4E  5CDE               	subwf	postinc2,w,c
 26927  013F50  0EF5               	movlw	-11
 26928  013F52  50E3               	movf	plusw1,w,c
 26929  013F54  58DE               	subwfb	postinc2,w,c
 26930  013F56  0EF6               	movlw	-10
 26931  013F58  50E3               	movf	plusw1,w,c
 26932  013F5A  58DE               	subwfb	postinc2,w,c
 26933  013F5C  50DE               	movf	postinc2,w,c
 26934  013F5E  0A80               	xorlw	128
 26935  013F60  6E28               	movwf	btemp^0,c
 26936  013F62  0EF7               	movlw	-9
 26937  013F64  50E3               	movf	plusw1,w,c
 26938  013F66  0A80               	xorlw	128
 26939  013F68  5828               	subwfb	btemp^0,w,c
 26940  013F6A  B0D8               	btfsc	status,0,c
 26941  013F6C  D053               	goto	l7644
 26942                           
 26943                           ;stkvar	_b @ sp[(-4)+-4]
 26944                           ;stkvar	_a @ sp[(-4)+-8]
 26945  013F6E  0EF4               	movlw	-12
 26946  013F70  006F FF8C  F030    	movff	plusw1,btemp+8
 26947  013F76  0EF5               	movlw	-11
 26948  013F78  006F FF8C  F031    	movff	plusw1,btemp+9
 26949  013F7E  0EF6               	movlw	-10
 26950  013F80  006F FF8C  F032    	movff	plusw1,btemp+10
 26951  013F86  0EF7               	movlw	-9
 26952  013F88  006F FF8C  F033    	movff	plusw1,btemp+11
 26953  013F8E  0EF8               	movlw	-8
 26954  013F90  50E3               	movf	plusw1,w,c
 26955  013F92  5E30               	subwf	(btemp+8)^0,f,c
 26956  013F94  0EF9               	movlw	-7
 26957  013F96  50E3               	movf	plusw1,w,c
 26958  013F98  5A31               	subwfb	(btemp+9)^0,f,c
 26959  013F9A  0EFA               	movlw	-6
 26960  013F9C  50E3               	movf	plusw1,w,c
 26961  013F9E  5A32               	subwfb	(btemp+10)^0,f,c
 26962  013FA0  0EFB               	movlw	-5
 26963  013FA2  50E3               	movf	plusw1,w,c
 26964  013FA4  5A33               	subwfb	(btemp+11)^0,f,c
 26965  013FA6  0EFF               	movlw	255
 26966  013FA8  2430               	addwf	(btemp+8)^0,w,c
 26967  013FAA  6E2C               	movwf	(btemp+4)^0,c
 26968  013FAC  0EFF               	movlw	255
 26969  013FAE  2031               	addwfc	(btemp+9)^0,w,c
 26970  013FB0  6E2D               	movwf	(btemp+5)^0,c
 26971  013FB2  0EFF               	movlw	255
 26972  013FB4  2032               	addwfc	(btemp+10)^0,w,c
 26973  013FB6  6E2E               	movwf	(btemp+6)^0,c
 26974  013FB8  0EFF               	movlw	255
 26975  013FBA  2033               	addwfc	(btemp+11)^0,w,c
 26976  013FBC  6E2F               	movwf	(btemp+7)^0,c
 26977                           
 26978                           ;stkvar	_b @ sp[(-4)+-4]
 26979  013FBE  0EF8               	movlw	-8
 26980  013FC0  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 26981  013FC6  0EF9               	movlw	-7
 26982  013FC8  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 26983  013FCE  0EFA               	movlw	-6
 26984  013FD0  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 26985  013FD6  0EFB               	movlw	-5
 26986  013FD8  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 26987                           
 26988                           ;stkvar	_signs @ sp[(-4)+3]
 26989  013FDE  0EFF               	movlw	-1
 26990  013FE0  7EE3               	btg	plusw1,7,c
 26991                           
 26992                           ;stkvar	_grs @ sp[(-4)+0]
 26993  013FE2  0EFC               	movlw	-4
 26994  013FE4  50E3               	movf	plusw1,w,c
 26995  013FE6  0800               	sublw	0
 26996  013FE8  6E33               	movwf	(btemp+11)^0,c
 26997                           
 26998                           ;stkvar	_grs @ sp[(-4)+0]
 26999  013FEA  0EFC               	movlw	-4
 27000  013FEC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27001                           
 27002                           ;stkvar	_grs @ sp[(-4)+0]
 27003  013FF2  0EFC               	movlw	-4
 27004  013FF4  50E3               	movf	plusw1,w,c
 27005  013FF6  A4D8               	btfss	status,2,c
 27006  013FF8  D020               	goto	l7646
 27007                           
 27008                           ;stkvar	_b @ sp[(-4)+-4]
 27009  013FFA  50E1               	movf	fsr1l,w,c
 27010  013FFC  0FF8               	addlw	-8
 27011  013FFE  6ED9               	movwf	fsr2l,c
 27012  014000  50E2               	movf	fsr1h,w,c
 27013  014002  6EDA               	movwf	fsr2h,c
 27014  014004  0EFF               	movlw	255
 27015  014006  22DA               	addwfc	fsr2h,f,c
 27016  014008  2ADE               	incf	postinc2,f,c
 27017  01400A  0E00               	movlw	0
 27018  01400C  22DE               	addwfc	postinc2,f,c
 27019  01400E  22DE               	addwfc	postinc2,f,c
 27020  014010  22DE               	addwfc	postinc2,f,c
 27021  014012  D013               	goto	l7646
 27022  014014                     l7644:
 27023                           
 27024                           ;stkvar	_a @ sp[(-4)+-8]
 27025                           ;stkvar	_b @ sp[(-4)+-4]
 27026  014014  50E1               	movf	fsr1l,w,c
 27027  014016  0FF8               	addlw	-8
 27028  014018  6ED9               	movwf	fsr2l,c
 27029  01401A  50E2               	movf	fsr1h,w,c
 27030  01401C  6EDA               	movwf	fsr2h,c
 27031  01401E  0EFF               	movlw	255
 27032  014020  22DA               	addwfc	fsr2h,f,c
 27033  014022  0EF4               	movlw	-12
 27034  014024  50E3               	movf	plusw1,w,c
 27035  014026  5EDE               	subwf	postinc2,f,c
 27036  014028  0EF5               	movlw	-11
 27037  01402A  50E3               	movf	plusw1,w,c
 27038  01402C  5ADE               	subwfb	postinc2,f,c
 27039  01402E  0EF6               	movlw	-10
 27040  014030  50E3               	movf	plusw1,w,c
 27041  014032  5ADE               	subwfb	postinc2,f,c
 27042  014034  0EF7               	movlw	-9
 27043  014036  50E3               	movf	plusw1,w,c
 27044  014038  5ADE               	subwfb	postinc2,f,c
 27045  01403A                     l7646:
 27046                           
 27047                           ;stkvar	_b @ sp[(-4)+-4]
 27048  01403A  0EF8               	movlw	-8
 27049  01403C  50E3               	movf	plusw1,w,c
 27050  01403E  E145               	bnz	l7668
 27051  014040  0EF9               	movlw	-7
 27052  014042  50E3               	movf	plusw1,w,c
 27053  014044  E142               	bnz	l7668
 27054  014046  0EFA               	movlw	-6
 27055  014048  50E3               	movf	plusw1,w,c
 27056  01404A  E13F               	bnz	l7668
 27057  01404C  0EFB               	movlw	-5
 27058  01404E  50E3               	movf	plusw1,w,c
 27059  014050  A4D8               	btfss	status,2,c
 27060  014052  D03B               	goto	l7668
 27061                           
 27062                           ;stkvar	_grs @ sp[(-4)+0]
 27063  014054  0EFC               	movlw	-4
 27064  014056  50E3               	movf	plusw1,w,c
 27065  014058  A4D8               	btfss	status,2,c
 27066  01405A  D037               	goto	l7668
 27067  01405C                     u5520:
 27068  01405C  0E00               	movlw	0
 27069  01405E  6E28               	movwf	btemp^0,c
 27070  014060  0E00               	movlw	0
 27071  014062  6E29               	movwf	(btemp+1)^0,c
 27072  014064  0E00               	movlw	0
 27073  014066  6E2A               	movwf	(btemp+2)^0,c
 27074  014068  0E00               	movlw	0
 27075  01406A  6E2B               	movwf	(btemp+3)^0,c
 27076  01406C  D0C6               	goto	l2904
 27077  01406E                     l7654:
 27078                           
 27079                           ;stkvar	_b @ sp[(-4)+-4]
 27080  01406E  90D8               	bcf	status,0,c
 27081  014070  0EF8               	movlw	-8
 27082  014072  36E3               	rlcf	plusw1,f,c
 27083  014074  0EF9               	movlw	-7
 27084  014076  36E3               	rlcf	plusw1,f,c
 27085  014078  0EFA               	movlw	-6
 27086  01407A  36E3               	rlcf	plusw1,f,c
 27087  01407C  0EFB               	movlw	-5
 27088  01407E  36E3               	rlcf	plusw1,f,c
 27089                           
 27090                           ;stkvar	_grs @ sp[(-4)+0]
 27091  014080  0EFC               	movlw	-4
 27092  014082  AEE3               	btfss	plusw1,7,c
 27093  014084  D002               	goto	l2916
 27094                           
 27095                           ;stkvar	_b @ sp[(-4)+-4]
 27096  014086  0EF8               	movlw	-8
 27097  014088  80E3               	bsf	plusw1,0,c
 27098  01408A                     l2916:
 27099                           
 27100                           ;stkvar	_grs @ sp[(-4)+0]
 27101  01408A  0EFC               	movlw	-4
 27102  01408C  A0E3               	btfss	plusw1,0,c
 27103  01408E  D00E               	goto	l7662
 27104                           
 27105                           ;stkvar	_grs @ sp[(-4)+0]
 27106  014090  0EFC               	movlw	-4
 27107  014092  006F FF8C  F033    	movff	plusw1,btemp+11
 27108  014098  90D8               	bcf	status,0,c
 27109  01409A  3433               	rlcf	(btemp+11)^0,w,c
 27110  01409C  6E32               	movwf	(btemp+10)^0,c
 27111  01409E  0E01               	movlw	1
 27112  0140A0  1232               	iorwf	(btemp+10)^0,f,c
 27113                           
 27114                           ;stkvar	_grs @ sp[(-4)+0]
 27115  0140A2  0EFC               	movlw	-4
 27116  0140A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27117  0140AA  D009               	goto	l7664
 27118  0140AC                     l7662:
 27119                           
 27120                           ;stkvar	_grs @ sp[(-4)+0]
 27121  0140AC  50E1               	movf	fsr1l,w,c
 27122  0140AE  0FFC               	addlw	-4
 27123  0140B0  6ED9               	movwf	fsr2l,c
 27124  0140B2  50E2               	movf	fsr1h,w,c
 27125  0140B4  6EDA               	movwf	fsr2h,c
 27126  0140B6  0EFF               	movlw	255
 27127  0140B8  22DA               	addwfc	fsr2h,f,c
 27128  0140BA  90D8               	bcf	status,0,c
 27129  0140BC  36DF               	rlcf	indf2,f,c
 27130  0140BE                     l7664:
 27131                           
 27132                           ;stkvar	_bexp @ sp[(-4)+1]
 27133  0140BE  0EFD               	movlw	-3
 27134  0140C0  50E3               	movf	plusw1,w,c
 27135  0140C2  B4D8               	btfsc	status,2,c
 27136  0140C4  D002               	goto	l7668
 27137                           
 27138                           ;stkvar	_bexp @ sp[(-4)+1]
 27139  0140C6  0EFD               	movlw	-3
 27140  0140C8  06E3               	decf	plusw1,f,c
 27141  0140CA                     l7668:
 27142                           
 27143                           ;stkvar	_b @ sp[(-4)+-4]
 27144  0140CA  0EFA               	movlw	-6
 27145  0140CC  AEE3               	btfss	plusw1,7,c
 27146  0140CE  D7CF               	goto	l7654
 27147  0140D0                     u5560:
 27148                           
 27149                           ;stkvar	_aexp @ sp[(-4)+2]
 27150  0140D0  0EFE               	movlw	-2
 27151  0140D2  6AE3               	clrf	plusw1,c
 27152                           
 27153                           ;stkvar	_grs @ sp[(-4)+0]
 27154  0140D4  0EFC               	movlw	-4
 27155  0140D6  AEE3               	btfss	plusw1,7,c
 27156  0140D8  D00F               	goto	l7682
 27157                           
 27158                           ;stkvar	_grs @ sp[(-4)+0]
 27159  0140DA  0EFC               	movlw	-4
 27160  0140DC  006F FF8C  F033    	movff	plusw1,btemp+11
 27161  0140E2  0E7F               	movlw	127
 27162  0140E4  1633               	andwf	(btemp+11)^0,f,c
 27163  0140E6  B4D8               	btfsc	status,2,c
 27164  0140E8  D004               	goto	l7678
 27165  0140EA                     u5580:
 27166                           
 27167                           ;stkvar	_aexp @ sp[(-4)+2]
 27168  0140EA  0EFE               	movlw	-2
 27169  0140EC  6AE3               	clrf	plusw1,c
 27170  0140EE  2AE3               	incf	plusw1,f,c
 27171  0140F0  D003               	goto	l7682
 27172  0140F2                     l7678:
 27173                           
 27174                           ;stkvar	_b @ sp[(-4)+-4]
 27175  0140F2  0EF8               	movlw	-8
 27176  0140F4  B0E3               	btfsc	plusw1,0,c
 27177  0140F6  D7F9               	goto	u5580
 27178  0140F8                     l7682:
 27179                           
 27180                           ;stkvar	_aexp @ sp[(-4)+2]
 27181  0140F8  0EFE               	movlw	-2
 27182  0140FA  50E3               	movf	plusw1,w,c
 27183  0140FC  B4D8               	btfsc	status,2,c
 27184  0140FE  D02B               	goto	l7694
 27185                           
 27186                           ;stkvar	_b @ sp[(-4)+-4]
 27187  014100  50E1               	movf	fsr1l,w,c
 27188  014102  0FF8               	addlw	-8
 27189  014104  6ED9               	movwf	fsr2l,c
 27190  014106  50E2               	movf	fsr1h,w,c
 27191  014108  6EDA               	movwf	fsr2h,c
 27192  01410A  0EFF               	movlw	255
 27193  01410C  22DA               	addwfc	fsr2h,f,c
 27194  01410E  2ADE               	incf	postinc2,f,c
 27195  014110  0E00               	movlw	0
 27196  014112  22DE               	addwfc	postinc2,f,c
 27197  014114  22DE               	addwfc	postinc2,f,c
 27198  014116  22DE               	addwfc	postinc2,f,c
 27199                           
 27200                           ;stkvar	_b @ sp[(-4)+-4]
 27201  014118  0EFB               	movlw	-5
 27202  01411A  A0E3               	btfss	plusw1,0,c
 27203  01411C  D01C               	goto	l7694
 27204  01411E  0E01               	movlw	1
 27205  014120  6E33               	movwf	(btemp+11)^0,c
 27206                           
 27207                           ;stkvar	_b @ sp[(-4)+-4]
 27208  014122  50E1               	movf	fsr1l,w,c
 27209  014124  0FF8               	addlw	-8
 27210  014126  6ED9               	movwf	fsr2l,c
 27211  014128  50E2               	movf	fsr1h,w,c
 27212  01412A  6EDA               	movwf	fsr2h,c
 27213  01412C  0EFF               	movlw	255
 27214  01412E  22DA               	addwfc	fsr2h,f,c
 27215  014130  2833               	incf	(btemp+11)^0,w,c
 27216  014132  52DE               	movf	postinc2,f,c
 27217  014134  D008               	goto	u5620
 27218  014136                     u5625:
 27219  014136  52DE               	movf	postinc2,f,c
 27220  014138  90D8               	bcf	status,0,c
 27221  01413A  BEDC               	btfsc	preinc2,7,c
 27222  01413C  80D8               	bsf	status,0,c
 27223  01413E  32DD               	rrcf	postdec2,f,c
 27224  014140  32DD               	rrcf	postdec2,f,c
 27225  014142  32DD               	rrcf	postdec2,f,c
 27226  014144  32DE               	rrcf	postinc2,f,c
 27227  014146                     u5620:
 27228  014146  2EE8               	decfsz	wreg,f,c
 27229  014148  D7F6               	goto	u5625
 27230                           
 27231                           ;stkvar	_bexp @ sp[(-4)+1]
 27232  01414A  0EFD               	movlw	-3
 27233  01414C  28E3               	incf	plusw1,w,c
 27234  01414E  B4D8               	btfsc	status,2,c
 27235  014150  D002               	goto	l7694
 27236                           
 27237                           ;stkvar	_bexp @ sp[(-4)+1]
 27238  014152  0EFD               	movlw	-3
 27239  014154  2AE3               	incf	plusw1,f,c
 27240  014156                     l7694:
 27241                           
 27242                           ;stkvar	_bexp @ sp[(-4)+1]
 27243  014156  0EFD               	movlw	-3
 27244  014158  28E3               	incf	plusw1,w,c
 27245  01415A  B4D8               	btfsc	status,2,c
 27246  01415C  D004               	goto	u5650
 27247                           
 27248                           ;stkvar	_bexp @ sp[(-4)+1]
 27249  01415E  0EFD               	movlw	-3
 27250  014160  50E3               	movf	plusw1,w,c
 27251  014162  A4D8               	btfss	status,2,c
 27252  014164  D00E               	goto	l7704
 27253  014166                     u5650:
 27254                           
 27255                           ;stkvar	_b @ sp[(-4)+-4]
 27256  014166  0EF8               	movlw	-8
 27257  014168  6AE3               	clrf	plusw1,c
 27258  01416A  0EF9               	movlw	-7
 27259  01416C  6AE3               	clrf	plusw1,c
 27260  01416E  0EFA               	movlw	-6
 27261  014170  6AE3               	clrf	plusw1,c
 27262  014172  0EFB               	movlw	-5
 27263  014174  6AE3               	clrf	plusw1,c
 27264                           
 27265                           ;stkvar	_bexp @ sp[(-4)+1]
 27266  014176  0EFD               	movlw	-3
 27267  014178  50E3               	movf	plusw1,w,c
 27268  01417A  A4D8               	btfss	status,2,c
 27269  01417C  D002               	goto	l7704
 27270                           
 27271                           ;stkvar	_signs @ sp[(-4)+3]
 27272  01417E  0EFF               	movlw	-1
 27273  014180  6AE3               	clrf	plusw1,c
 27274  014182                     l7704:
 27275                           
 27276                           ;stkvar	_bexp @ sp[(-4)+1]
 27277  014182  0EFD               	movlw	-3
 27278  014184  A0E3               	btfss	plusw1,0,c
 27279  014186  D009               	goto	l7708
 27280                           
 27281                           ;stkvar	_b @ sp[(-4)+-4]
 27282  014188  0EFA               	movlw	250
 27283  01418A  24E1               	addwf	fsr1l,w,c
 27284  01418C  6ED9               	movwf	fsr2l,c
 27285  01418E  0EFF               	movlw	255
 27286  014190  20E2               	addwfc	fsr1h,w,c
 27287  014192  6EDA               	movwf	fsr2h,c
 27288  014194  0E00               	movlw	0
 27289  014196  8EDB               	bsf	plusw2,7,c
 27290  014198  D008               	goto	l7710
 27291  01419A                     l7708:
 27292                           
 27293                           ;stkvar	_b @ sp[(-4)+-4]
 27294  01419A  0EFA               	movlw	250
 27295  01419C  24E1               	addwf	fsr1l,w,c
 27296  01419E  6ED9               	movwf	fsr2l,c
 27297  0141A0  0EFF               	movlw	255
 27298  0141A2  20E2               	addwfc	fsr1h,w,c
 27299  0141A4  6EDA               	movwf	fsr2h,c
 27300  0141A6  0E7F               	movlw	127
 27301  0141A8  16DF               	andwf	indf2,f,c
 27302  0141AA                     l7710:
 27303                           
 27304                           ;stkvar	_b @ sp[(-4)+-4]
 27305  0141AA  0EFB               	movlw	251
 27306  0141AC  24E1               	addwf	fsr1l,w,c
 27307  0141AE  6ED9               	movwf	fsr2l,c
 27308  0141B0  0EFF               	movlw	255
 27309  0141B2  20E2               	addwfc	fsr1h,w,c
 27310  0141B4  6EDA               	movwf	fsr2h,c
 27311                           
 27312                           ;stkvar	_bexp @ sp[(-4)+1]
 27313  0141B6  0EFD               	movlw	-3
 27314  0141B8  006F FF8C  F033    	movff	plusw1,btemp+11
 27315  0141BE  90D8               	bcf	status,0,c
 27316  0141C0  3033               	rrcf	(btemp+11)^0,w,c
 27317  0141C2  6EDF               	movwf	indf2,c
 27318                           
 27319                           ;stkvar	_signs @ sp[(-4)+3]
 27320  0141C4  0EFF               	movlw	-1
 27321  0141C6  AEE3               	btfss	plusw1,7,c
 27322  0141C8  D008               	goto	l7716
 27323                           
 27324                           ;stkvar	_b @ sp[(-4)+-4]
 27325  0141CA  0EFB               	movlw	251
 27326  0141CC  24E1               	addwf	fsr1l,w,c
 27327  0141CE  6ED9               	movwf	fsr2l,c
 27328  0141D0  0EFF               	movlw	255
 27329  0141D2  20E2               	addwfc	fsr1h,w,c
 27330  0141D4  6EDA               	movwf	fsr2h,c
 27331  0141D6  0E00               	movlw	0
 27332  0141D8  8EDB               	bsf	plusw2,7,c
 27333  0141DA                     l7716:
 27334                           
 27335                           ;stkvar	_b @ sp[(-4)+-4]
 27336  0141DA  0EF8               	movlw	-8
 27337  0141DC  006F FF8C  F028    	movff	plusw1,btemp
 27338  0141E2  0EF9               	movlw	-7
 27339  0141E4  006F FF8C  F029    	movff	plusw1,btemp+1
 27340  0141EA  0EFA               	movlw	-6
 27341  0141EC  006F FF8C  F02A    	movff	plusw1,btemp+2
 27342  0141F2  0EFB               	movlw	-5
 27343  0141F4  006F FF8C  F02B    	movff	plusw1,btemp+3
 27344  0141FA                     l2904:
 27345                           
 27346                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27347  0141FA  0EF4               	movlw	244
 27348  0141FC  26E1               	addwf	fsr1l,f,c
 27349  0141FE  0EFF               	movlw	255
 27350  014200  22E2               	addwfc	fsr1h,f,c
 27351  014202  0012               	return		;funcret
 27352  014204                     __end_of___fladd:
 27353                           	opt callstack 0
 27354                           
 27355 ;; *************** function ___flmul *****************
 27356 ;; Defined at:
 27357 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27358 ;; Parameters:    Size  Location     Type
 27359 ;;  b               4  [STACK] unsigned char 
 27360 ;;  a               4  [STACK] unsigned char 
 27361 ;; Auto vars:     Size  Location     Type
 27362 ;;  prod            4  [STACK] struct .
 27363 ;;  grs             4  [STACK] unsigned long 
 27364 ;;  temp            2  [STACK] struct .
 27365 ;;  bexp            1  [STACK] unsigned char 
 27366 ;;  aexp            1  [STACK] unsigned char 
 27367 ;;  sign            1  [STACK] unsigned char 
 27368 ;; Return value:  Size  Location     Type
 27369 ;;                  4  [STACK] unsigned char 
 27370 ;; Registers used:
 27371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27372 ;; Tracked objects:
 27373 ;;		On entry : 0/1
 27374 ;;		On exit  : 0/0
 27375 ;;		Unchanged: 0/0
 27376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27381 ;;Total ram usage:        0 bytes
 27382 ;; Hardware stack levels used:    1
 27383 ;; Hardware stack levels required when called:   15
 27384 ;; This function calls:
 27385 ;;		Nothing
 27386 ;; This function is called by:
 27387 ;;		_conv_raw_result
 27388 ;;		_lp_filter
 27389 ;;		_calc_model_data
 27390 ;;		_calc_bsoc
 27391 ;;		_init_bsoc
 27392 ;;		_efgtoa
 27393 ;; This function uses a reentrant model
 27394 ;;
 27395                           
 27396                           	psect	text106
 27397  01321E                     __ptext106:
 27398                           	opt callstack 0
 27399  01321E                     ___flmul:
 27400                           	opt callstack 0
 27401                           
 27402                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27403  01321E  0E0D               	movlw	13
 27404  013220  26E1               	addwf	fsr1l,f,c
 27405  013222  0E00               	movlw	0
 27406  013224  22E2               	addwfc	fsr1h,f,c
 27407                           
 27408                           ;stkvar	_b @ sp[(-13)+-4]
 27409                           
 27410                           ;incstack = 0
 27411 ;; hardware stack exceeded
 27412  013226  0EF2               	movlw	242
 27413  013228  24E1               	addwf	fsr1l,w,c
 27414  01322A  6ED9               	movwf	fsr2l,c
 27415  01322C  0EFF               	movlw	255
 27416  01322E  20E2               	addwfc	fsr1h,w,c
 27417  013230  6EDA               	movwf	fsr2h,c
 27418  013232  50DF               	movf	indf2,w,c
 27419  013234  6E33               	movwf	(btemp+11)^0,c
 27420  013236  0E80               	movlw	128
 27421  013238  1633               	andwf	(btemp+11)^0,f,c
 27422                           
 27423                           ;stkvar	_sign @ sp[(-13)+12]
 27424  01323A  0EFF               	movlw	-1
 27425  01323C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27426                           
 27427                           ;stkvar	_b @ sp[(-13)+-4]
 27428  013242  0EF2               	movlw	242
 27429  013244  24E1               	addwf	fsr1l,w,c
 27430  013246  6ED9               	movwf	fsr2l,c
 27431  013248  0EFF               	movlw	255
 27432  01324A  20E2               	addwfc	fsr1h,w,c
 27433  01324C  6EDA               	movwf	fsr2h,c
 27434  01324E  50DF               	movf	indf2,w,c
 27435  013250  6E33               	movwf	(btemp+11)^0,c
 27436  013252  90D8               	bcf	status,0,c
 27437  013254  3433               	rlcf	(btemp+11)^0,w,c
 27438  013256  6E32               	movwf	(btemp+10)^0,c
 27439                           
 27440                           ;stkvar	_bexp @ sp[(-13)+10]
 27441  013258  0EFD               	movlw	-3
 27442  01325A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27443                           
 27444                           ;stkvar	_b @ sp[(-13)+-4]
 27445  013260  0EF1               	movlw	241
 27446  013262  24E1               	addwf	fsr1l,w,c
 27447  013264  6ED9               	movwf	fsr2l,c
 27448  013266  0EFF               	movlw	255
 27449  013268  20E2               	addwfc	fsr1h,w,c
 27450  01326A  6EDA               	movwf	fsr2h,c
 27451  01326C  AEDF               	btfss	indf2,7,c
 27452  01326E  D002               	goto	l8100
 27453                           
 27454                           ;stkvar	_bexp @ sp[(-13)+10]
 27455  013270  0EFD               	movlw	-3
 27456  013272  80E3               	bsf	plusw1,0,c
 27457  013274                     l8100:
 27458                           
 27459                           ;stkvar	_bexp @ sp[(-13)+10]
 27460  013274  0EFD               	movlw	-3
 27461  013276  50E3               	movf	plusw1,w,c
 27462  013278  B4D8               	btfsc	status,2,c
 27463  01327A  D01F               	goto	l8108
 27464                           
 27465                           ;stkvar	_bexp @ sp[(-13)+10]
 27466  01327C  0EFD               	movlw	-3
 27467  01327E  28E3               	incf	plusw1,w,c
 27468  013280  A4D8               	btfss	status,2,c
 27469  013282  D018               	goto	l8106
 27470  013284  0E00               	movlw	0
 27471  013286  6E30               	movwf	(btemp+8)^0,c
 27472  013288  0E00               	movlw	0
 27473  01328A  6E31               	movwf	(btemp+9)^0,c
 27474  01328C  0E00               	movlw	0
 27475  01328E  6E32               	movwf	(btemp+10)^0,c
 27476  013290  0E00               	movlw	0
 27477  013292  6E33               	movwf	(btemp+11)^0,c
 27478                           
 27479                           ;stkvar	_b @ sp[(-13)+-4]
 27480  013294  0EEF               	movlw	-17
 27481  013296  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27482  01329C  0EF0               	movlw	-16
 27483  01329E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27484  0132A4  0EF1               	movlw	-15
 27485  0132A6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27486  0132AC  0EF2               	movlw	-14
 27487  0132AE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27488  0132B4                     l8106:
 27489                           
 27490                           ;stkvar	_b @ sp[(-13)+-4]
 27491  0132B4  0EF1               	movlw	-15
 27492  0132B6  8EE3               	bsf	plusw1,7,c
 27493  0132B8  D018               	goto	l8110
 27494  0132BA                     l8108:
 27495  0132BA  0E00               	movlw	0
 27496  0132BC  6E30               	movwf	(btemp+8)^0,c
 27497  0132BE  0E00               	movlw	0
 27498  0132C0  6E31               	movwf	(btemp+9)^0,c
 27499  0132C2  0E00               	movlw	0
 27500  0132C4  6E32               	movwf	(btemp+10)^0,c
 27501  0132C6  0E00               	movlw	0
 27502  0132C8  6E33               	movwf	(btemp+11)^0,c
 27503                           
 27504                           ;stkvar	_b @ sp[(-13)+-4]
 27505  0132CA  0EEF               	movlw	-17
 27506  0132CC  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27507  0132D2  0EF0               	movlw	-16
 27508  0132D4  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27509  0132DA  0EF1               	movlw	-15
 27510  0132DC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27511  0132E2  0EF2               	movlw	-14
 27512  0132E4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27513  0132EA                     l8110:
 27514                           
 27515                           ;stkvar	_a @ sp[(-13)+-8]
 27516  0132EA  0EEE               	movlw	238
 27517  0132EC  24E1               	addwf	fsr1l,w,c
 27518  0132EE  6ED9               	movwf	fsr2l,c
 27519  0132F0  0EFF               	movlw	255
 27520  0132F2  20E2               	addwfc	fsr1h,w,c
 27521  0132F4  6EDA               	movwf	fsr2h,c
 27522  0132F6  50DF               	movf	indf2,w,c
 27523  0132F8  6E33               	movwf	(btemp+11)^0,c
 27524  0132FA  0E80               	movlw	128
 27525  0132FC  1633               	andwf	(btemp+11)^0,f,c
 27526                           
 27527                           ;stkvar	_sign @ sp[(-13)+12]
 27528  0132FE  50E1               	movf	fsr1l,w,c
 27529  013300  0FFF               	addlw	-1
 27530  013302  6ED9               	movwf	fsr2l,c
 27531  013304  50E2               	movf	fsr1h,w,c
 27532  013306  6EDA               	movwf	fsr2h,c
 27533  013308  0EFF               	movlw	255
 27534  01330A  22DA               	addwfc	fsr2h,f,c
 27535  01330C  5033               	movf	(btemp+11)^0,w,c
 27536  01330E  1ADF               	xorwf	indf2,f,c
 27537                           
 27538                           ;stkvar	_a @ sp[(-13)+-8]
 27539  013310  0EEE               	movlw	238
 27540  013312  24E1               	addwf	fsr1l,w,c
 27541  013314  6ED9               	movwf	fsr2l,c
 27542  013316  0EFF               	movlw	255
 27543  013318  20E2               	addwfc	fsr1h,w,c
 27544  01331A  6EDA               	movwf	fsr2h,c
 27545  01331C  50DF               	movf	indf2,w,c
 27546  01331E  6E33               	movwf	(btemp+11)^0,c
 27547  013320  90D8               	bcf	status,0,c
 27548  013322  3433               	rlcf	(btemp+11)^0,w,c
 27549  013324  6E32               	movwf	(btemp+10)^0,c
 27550                           
 27551                           ;stkvar	_aexp @ sp[(-13)+11]
 27552  013326  0EFE               	movlw	-2
 27553  013328  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27554                           
 27555                           ;stkvar	_a @ sp[(-13)+-8]
 27556  01332E  0EED               	movlw	237
 27557  013330  24E1               	addwf	fsr1l,w,c
 27558  013332  6ED9               	movwf	fsr2l,c
 27559  013334  0EFF               	movlw	255
 27560  013336  20E2               	addwfc	fsr1h,w,c
 27561  013338  6EDA               	movwf	fsr2h,c
 27562  01333A  AEDF               	btfss	indf2,7,c
 27563  01333C  D002               	goto	l8118
 27564                           
 27565                           ;stkvar	_aexp @ sp[(-13)+11]
 27566  01333E  0EFE               	movlw	-2
 27567  013340  80E3               	bsf	plusw1,0,c
 27568  013342                     l8118:
 27569                           
 27570                           ;stkvar	_aexp @ sp[(-13)+11]
 27571  013342  0EFE               	movlw	-2
 27572  013344  50E3               	movf	plusw1,w,c
 27573  013346  B4D8               	btfsc	status,2,c
 27574  013348  D01F               	goto	l8126
 27575                           
 27576                           ;stkvar	_aexp @ sp[(-13)+11]
 27577  01334A  0EFE               	movlw	-2
 27578  01334C  28E3               	incf	plusw1,w,c
 27579  01334E  A4D8               	btfss	status,2,c
 27580  013350  D018               	goto	l8124
 27581  013352  0E00               	movlw	0
 27582  013354  6E30               	movwf	(btemp+8)^0,c
 27583  013356  0E00               	movlw	0
 27584  013358  6E31               	movwf	(btemp+9)^0,c
 27585  01335A  0E00               	movlw	0
 27586  01335C  6E32               	movwf	(btemp+10)^0,c
 27587  01335E  0E00               	movlw	0
 27588  013360  6E33               	movwf	(btemp+11)^0,c
 27589                           
 27590                           ;stkvar	_a @ sp[(-13)+-8]
 27591  013362  0EEB               	movlw	-21
 27592  013364  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27593  01336A  0EEC               	movlw	-20
 27594  01336C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27595  013372  0EED               	movlw	-19
 27596  013374  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27597  01337A  0EEE               	movlw	-18
 27598  01337C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27599  013382                     l8124:
 27600                           
 27601                           ;stkvar	_a @ sp[(-13)+-8]
 27602  013382  0EED               	movlw	-19
 27603  013384  8EE3               	bsf	plusw1,7,c
 27604  013386  D018               	goto	l8128
 27605  013388                     l8126:
 27606  013388  0E00               	movlw	0
 27607  01338A  6E30               	movwf	(btemp+8)^0,c
 27608  01338C  0E00               	movlw	0
 27609  01338E  6E31               	movwf	(btemp+9)^0,c
 27610  013390  0E00               	movlw	0
 27611  013392  6E32               	movwf	(btemp+10)^0,c
 27612  013394  0E00               	movlw	0
 27613  013396  6E33               	movwf	(btemp+11)^0,c
 27614                           
 27615                           ;stkvar	_a @ sp[(-13)+-8]
 27616  013398  0EEB               	movlw	-21
 27617  01339A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27618  0133A0  0EEC               	movlw	-20
 27619  0133A2  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27620  0133A8  0EED               	movlw	-19
 27621  0133AA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27622  0133B0  0EEE               	movlw	-18
 27623  0133B2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27624  0133B8                     l8128:
 27625                           
 27626                           ;stkvar	_aexp @ sp[(-13)+11]
 27627  0133B8  0EFE               	movlw	-2
 27628  0133BA  50E3               	movf	plusw1,w,c
 27629  0133BC  B4D8               	btfsc	status,2,c
 27630  0133BE  D004               	goto	u6590
 27631                           
 27632                           ;stkvar	_bexp @ sp[(-13)+10]
 27633  0133C0  0EFD               	movlw	-3
 27634  0133C2  50E3               	movf	plusw1,w,c
 27635  0133C4  A4D8               	btfss	status,2,c
 27636  0133C6  D009               	goto	l8136
 27637  0133C8                     u6590:
 27638  0133C8  0E00               	movlw	0
 27639  0133CA  6E28               	movwf	btemp^0,c
 27640  0133CC  0E00               	movlw	0
 27641  0133CE  6E29               	movwf	(btemp+1)^0,c
 27642  0133D0  0E00               	movlw	0
 27643  0133D2  6E2A               	movwf	(btemp+2)^0,c
 27644  0133D4  0E00               	movlw	0
 27645  0133D6  6E2B               	movwf	(btemp+3)^0,c
 27646  0133D8  D332               	goto	l2985
 27647  0133DA                     l8136:
 27648                           
 27649                           ;stkvar	_b @ sp[(-13)+-4]
 27650  0133DA  0EEF               	movlw	-17
 27651  0133DC  006F FF8C  F033    	movff	plusw1,btemp+11
 27652                           
 27653                           ;stkvar	_a @ sp[(-13)+-8]
 27654  0133E2  0EED               	movlw	237
 27655  0133E4  24E1               	addwf	fsr1l,w,c
 27656  0133E6  6ED9               	movwf	fsr2l,c
 27657  0133E8  0EFF               	movlw	255
 27658  0133EA  20E2               	addwfc	fsr1h,w,c
 27659  0133EC  6EDA               	movwf	fsr2h,c
 27660  0133EE  50DF               	movf	indf2,w,c
 27661  0133F0  0233               	mulwf	(btemp+11)^0,c
 27662                           
 27663                           ;stkvar	_temp @ sp[(-13)+8]
 27664  0133F2  0EFB               	movlw	-5
 27665  0133F4  006F FFCF FFE3     	movff	prodl,plusw1
 27666  0133FA  0EFC               	movlw	-4
 27667  0133FC  006F FFD3 FFE3     	movff	prodh,plusw1
 27668                           
 27669                           ;stkvar	_temp @ sp[(-13)+8]
 27670  013402  0EFB               	movlw	-5
 27671  013404  006F FF8C  F033    	movff	plusw1,btemp+11
 27672  01340A  0060  F0CC  F02C   	movff	btemp+11,btemp+4
 27673  013410  6A2D               	clrf	(btemp+5)^0,c
 27674  013412  6A2E               	clrf	(btemp+6)^0,c
 27675  013414  6A2F               	clrf	(btemp+7)^0,c
 27676                           
 27677                           ;stkvar	_grs @ sp[(-13)+4]
 27678  013416  0EF7               	movlw	-9
 27679  013418  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 27680  01341E  0EF8               	movlw	-8
 27681  013420  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 27682  013426  0EF9               	movlw	-7
 27683  013428  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 27684  01342E  0EFA               	movlw	-6
 27685  013430  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 27686                           
 27687                           ;stkvar	_temp @ sp[(-13)+8]
 27688  013436  0EFC               	movlw	252
 27689  013438  24E1               	addwf	fsr1l,w,c
 27690  01343A  6ED9               	movwf	fsr2l,c
 27691  01343C  0EFF               	movlw	255
 27692  01343E  20E2               	addwfc	fsr1h,w,c
 27693  013440  6EDA               	movwf	fsr2h,c
 27694  013442  50DF               	movf	indf2,w,c
 27695  013444  6E33               	movwf	(btemp+11)^0,c
 27696  013446  0060  F0CC  F02C   	movff	btemp+11,btemp+4
 27697  01344C  6A2D               	clrf	(btemp+5)^0,c
 27698  01344E  6A2E               	clrf	(btemp+6)^0,c
 27699  013450  6A2F               	clrf	(btemp+7)^0,c
 27700                           
 27701                           ;stkvar	_prod @ sp[(-13)+0]
 27702  013452  0EF3               	movlw	-13
 27703  013454  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 27704  01345A  0EF4               	movlw	-12
 27705  01345C  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 27706  013462  0EF5               	movlw	-11
 27707  013464  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 27708  01346A  0EF6               	movlw	-10
 27709  01346C  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 27710                           
 27711                           ;stkvar	_b @ sp[(-13)+-4]
 27712  013472  0EF0               	movlw	240
 27713  013474  24E1               	addwf	fsr1l,w,c
 27714  013476  6ED9               	movwf	fsr2l,c
 27715  013478  0EFF               	movlw	255
 27716  01347A  20E2               	addwfc	fsr1h,w,c
 27717  01347C  6EDA               	movwf	fsr2h,c
 27718  01347E  50DF               	movf	indf2,w,c
 27719  013480  6E33               	movwf	(btemp+11)^0,c
 27720                           
 27721                           ;stkvar	_a @ sp[(-13)+-8]
 27722  013482  0EEC               	movlw	236
 27723  013484  24E1               	addwf	fsr1l,w,c
 27724  013486  6ED9               	movwf	fsr2l,c
 27725  013488  0EFF               	movlw	255
 27726  01348A  20E2               	addwfc	fsr1h,w,c
 27727  01348C  6EDA               	movwf	fsr2h,c
 27728  01348E  50DF               	movf	indf2,w,c
 27729  013490  0233               	mulwf	(btemp+11)^0,c
 27730                           
 27731                           ;stkvar	_temp @ sp[(-13)+8]
 27732  013492  0EFB               	movlw	-5
 27733  013494  006F FFCF FFE3     	movff	prodl,plusw1
 27734  01349A  0EFC               	movlw	-4
 27735  01349C  006F FFD3 FFE3     	movff	prodh,plusw1
 27736                           
 27737                           ;stkvar	_grs @ sp[(-13)+4]
 27738  0134A2  50E1               	movf	fsr1l,w,c
 27739  0134A4  0FF7               	addlw	-9
 27740  0134A6  6ED9               	movwf	fsr2l,c
 27741  0134A8  50E2               	movf	fsr1h,w,c
 27742  0134AA  6EDA               	movwf	fsr2h,c
 27743  0134AC  0EFF               	movlw	255
 27744  0134AE  22DA               	addwfc	fsr2h,f,c
 27745                           
 27746                           ;stkvar	_temp @ sp[(-13)+8]
 27747  0134B0  0EFB               	movlw	-5
 27748  0134B2  50E3               	movf	plusw1,w,c
 27749  0134B4  26DE               	addwf	postinc2,f,c
 27750  0134B6  0E00               	movlw	0
 27751  0134B8  22DE               	addwfc	postinc2,f,c
 27752  0134BA  22DE               	addwfc	postinc2,f,c
 27753  0134BC  22DE               	addwfc	postinc2,f,c
 27754                           
 27755                           ;stkvar	_prod @ sp[(-13)+0]
 27756  0134BE  50E1               	movf	fsr1l,w,c
 27757  0134C0  0FF3               	addlw	-13
 27758  0134C2  6ED9               	movwf	fsr2l,c
 27759  0134C4  50E2               	movf	fsr1h,w,c
 27760  0134C6  6EDA               	movwf	fsr2h,c
 27761  0134C8  0EFF               	movlw	255
 27762  0134CA  22DA               	addwfc	fsr2h,f,c
 27763                           
 27764                           ;stkvar	_temp @ sp[(-13)+8]
 27765  0134CC  0EFC               	movlw	252
 27766  0134CE  24E1               	addwf	fsr1l,w,c
 27767  0134D0  6EE9               	movwf	fsr0l,c
 27768  0134D2  0EFF               	movlw	255
 27769  0134D4  20E2               	addwfc	fsr1h,w,c
 27770  0134D6  6EEA               	movwf	fsr0h,c
 27771  0134D8  50EF               	movf	indf0,w,c
 27772  0134DA  26DE               	addwf	postinc2,f,c
 27773  0134DC  0E00               	movlw	0
 27774  0134DE  22DE               	addwfc	postinc2,f,c
 27775  0134E0  22DE               	addwfc	postinc2,f,c
 27776  0134E2  22DE               	addwfc	postinc2,f,c
 27777                           
 27778                           ;stkvar	_b @ sp[(-13)+-4]
 27779  0134E4  0EF1               	movlw	241
 27780  0134E6  24E1               	addwf	fsr1l,w,c
 27781  0134E8  6ED9               	movwf	fsr2l,c
 27782  0134EA  0EFF               	movlw	255
 27783  0134EC  20E2               	addwfc	fsr1h,w,c
 27784  0134EE  6EDA               	movwf	fsr2h,c
 27785  0134F0  50DF               	movf	indf2,w,c
 27786  0134F2  6E33               	movwf	(btemp+11)^0,c
 27787                           
 27788                           ;stkvar	_a @ sp[(-13)+-8]
 27789  0134F4  0EEB               	movlw	-21
 27790  0134F6  50E3               	movf	plusw1,w,c
 27791  0134F8  0233               	mulwf	(btemp+11)^0,c
 27792                           
 27793                           ;stkvar	_temp @ sp[(-13)+8]
 27794  0134FA  0EFB               	movlw	-5
 27795  0134FC  006F FFCF FFE3     	movff	prodl,plusw1
 27796  013502  0EFC               	movlw	-4
 27797  013504  006F FFD3 FFE3     	movff	prodh,plusw1
 27798                           
 27799                           ;stkvar	_grs @ sp[(-13)+4]
 27800  01350A  50E1               	movf	fsr1l,w,c
 27801  01350C  0FF7               	addlw	-9
 27802  01350E  6ED9               	movwf	fsr2l,c
 27803  013510  50E2               	movf	fsr1h,w,c
 27804  013512  6EDA               	movwf	fsr2h,c
 27805  013514  0EFF               	movlw	255
 27806  013516  22DA               	addwfc	fsr2h,f,c
 27807                           
 27808                           ;stkvar	_temp @ sp[(-13)+8]
 27809  013518  0EFB               	movlw	-5
 27810  01351A  50E3               	movf	plusw1,w,c
 27811  01351C  26DE               	addwf	postinc2,f,c
 27812  01351E  0E00               	movlw	0
 27813  013520  22DE               	addwfc	postinc2,f,c
 27814  013522  22DE               	addwfc	postinc2,f,c
 27815  013524  22DE               	addwfc	postinc2,f,c
 27816                           
 27817                           ;stkvar	_prod @ sp[(-13)+0]
 27818  013526  50E1               	movf	fsr1l,w,c
 27819  013528  0FF3               	addlw	-13
 27820  01352A  6ED9               	movwf	fsr2l,c
 27821  01352C  50E2               	movf	fsr1h,w,c
 27822  01352E  6EDA               	movwf	fsr2h,c
 27823  013530  0EFF               	movlw	255
 27824  013532  22DA               	addwfc	fsr2h,f,c
 27825                           
 27826                           ;stkvar	_temp @ sp[(-13)+8]
 27827  013534  0EFC               	movlw	252
 27828  013536  24E1               	addwf	fsr1l,w,c
 27829  013538  6EE9               	movwf	fsr0l,c
 27830  01353A  0EFF               	movlw	255
 27831  01353C  20E2               	addwfc	fsr1h,w,c
 27832  01353E  6EEA               	movwf	fsr0h,c
 27833  013540  50EF               	movf	indf0,w,c
 27834  013542  26DE               	addwf	postinc2,f,c
 27835  013544  0E00               	movlw	0
 27836  013546  22DE               	addwfc	postinc2,f,c
 27837  013548  22DE               	addwfc	postinc2,f,c
 27838  01354A  22DE               	addwfc	postinc2,f,c
 27839                           
 27840                           ;stkvar	_grs @ sp[(-13)+4]
 27841  01354C  50E1               	movf	fsr1l,w,c
 27842  01354E  0FF7               	addlw	-9
 27843  013550  6ED9               	movwf	fsr2l,c
 27844  013552  50E2               	movf	fsr1h,w,c
 27845  013554  6EDA               	movwf	fsr2h,c
 27846  013556  0EFF               	movlw	255
 27847  013558  22DA               	addwfc	fsr2h,f,c
 27848  01355A  0E08               	movlw	8
 27849  01355C                     u6605:
 27850  01355C  90D8               	bcf	status,0,c
 27851  01355E  36DE               	rlcf	postinc2,f,c
 27852  013560  36DE               	rlcf	postinc2,f,c
 27853  013562  36DE               	rlcf	postinc2,f,c
 27854  013564  36DD               	rlcf	postdec2,f,c
 27855  013566  52DD               	movf	postdec2,f,c
 27856  013568  52DD               	movf	postdec2,f,c
 27857  01356A  2EE8               	decfsz	wreg,f,c
 27858  01356C  D7F7               	goto	u6605
 27859                           
 27860                           ;stkvar	_b @ sp[(-13)+-4]
 27861  01356E  0EF0               	movlw	240
 27862  013570  24E1               	addwf	fsr1l,w,c
 27863  013572  6ED9               	movwf	fsr2l,c
 27864  013574  0EFF               	movlw	255
 27865  013576  20E2               	addwfc	fsr1h,w,c
 27866  013578  6EDA               	movwf	fsr2h,c
 27867  01357A  50DF               	movf	indf2,w,c
 27868  01357C  6E33               	movwf	(btemp+11)^0,c
 27869                           
 27870                           ;stkvar	_a @ sp[(-13)+-8]
 27871  01357E  0EEB               	movlw	-21
 27872  013580  50E3               	movf	plusw1,w,c
 27873  013582  0233               	mulwf	(btemp+11)^0,c
 27874                           
 27875                           ;stkvar	_temp @ sp[(-13)+8]
 27876  013584  0EFB               	movlw	-5
 27877  013586  006F FFCF FFE3     	movff	prodl,plusw1
 27878  01358C  0EFC               	movlw	-4
 27879  01358E  006F FFD3 FFE3     	movff	prodh,plusw1
 27880                           
 27881                           ;stkvar	_temp @ sp[(-13)+8]
 27882  013594  0EFB               	movlw	-5
 27883  013596  006F FF8C  F032    	movff	plusw1,btemp+10
 27884  01359C  0EFC               	movlw	-4
 27885  01359E  006F FF8C  F033    	movff	plusw1,btemp+11
 27886                           
 27887                           ;stkvar	_grs @ sp[(-13)+4]
 27888  0135A4  50E1               	movf	fsr1l,w,c
 27889  0135A6  0FF7               	addlw	-9
 27890  0135A8  6ED9               	movwf	fsr2l,c
 27891  0135AA  50E2               	movf	fsr1h,w,c
 27892  0135AC  6EDA               	movwf	fsr2h,c
 27893  0135AE  0EFF               	movlw	255
 27894  0135B0  22DA               	addwfc	fsr2h,f,c
 27895  0135B2  5032               	movf	(btemp+10)^0,w,c
 27896  0135B4  26DE               	addwf	postinc2,f,c
 27897  0135B6  5033               	movf	(btemp+11)^0,w,c
 27898  0135B8  22DE               	addwfc	postinc2,f,c
 27899  0135BA  0E00               	movlw	0
 27900  0135BC  22DE               	addwfc	postinc2,f,c
 27901  0135BE  22DE               	addwfc	postinc2,f,c
 27902                           
 27903                           ;stkvar	_b @ sp[(-13)+-4]
 27904  0135C0  0EEF               	movlw	-17
 27905  0135C2  006F FF8C  F033    	movff	plusw1,btemp+11
 27906                           
 27907                           ;stkvar	_a @ sp[(-13)+-8]
 27908  0135C8  0EEC               	movlw	236
 27909  0135CA  24E1               	addwf	fsr1l,w,c
 27910  0135CC  6ED9               	movwf	fsr2l,c
 27911  0135CE  0EFF               	movlw	255
 27912  0135D0  20E2               	addwfc	fsr1h,w,c
 27913  0135D2  6EDA               	movwf	fsr2h,c
 27914  0135D4  50DF               	movf	indf2,w,c
 27915  0135D6  0233               	mulwf	(btemp+11)^0,c
 27916                           
 27917                           ;stkvar	_temp @ sp[(-13)+8]
 27918  0135D8  0EFB               	movlw	-5
 27919  0135DA  006F FFCF FFE3     	movff	prodl,plusw1
 27920  0135E0  0EFC               	movlw	-4
 27921  0135E2  006F FFD3 FFE3     	movff	prodh,plusw1
 27922                           
 27923                           ;stkvar	_temp @ sp[(-13)+8]
 27924  0135E8  0EFB               	movlw	-5
 27925  0135EA  006F FF8C  F032    	movff	plusw1,btemp+10
 27926  0135F0  0EFC               	movlw	-4
 27927  0135F2  006F FF8C  F033    	movff	plusw1,btemp+11
 27928                           
 27929                           ;stkvar	_grs @ sp[(-13)+4]
 27930  0135F8  50E1               	movf	fsr1l,w,c
 27931  0135FA  0FF7               	addlw	-9
 27932  0135FC  6ED9               	movwf	fsr2l,c
 27933  0135FE  50E2               	movf	fsr1h,w,c
 27934  013600  6EDA               	movwf	fsr2h,c
 27935  013602  0EFF               	movlw	255
 27936  013604  22DA               	addwfc	fsr2h,f,c
 27937  013606  5032               	movf	(btemp+10)^0,w,c
 27938  013608  26DE               	addwf	postinc2,f,c
 27939  01360A  5033               	movf	(btemp+11)^0,w,c
 27940  01360C  22DE               	addwfc	postinc2,f,c
 27941  01360E  0E00               	movlw	0
 27942  013610  22DE               	addwfc	postinc2,f,c
 27943  013612  22DE               	addwfc	postinc2,f,c
 27944                           
 27945                           ;stkvar	_grs @ sp[(-13)+4]
 27946  013614  50E1               	movf	fsr1l,w,c
 27947  013616  0FF7               	addlw	-9
 27948  013618  6ED9               	movwf	fsr2l,c
 27949  01361A  50E2               	movf	fsr1h,w,c
 27950  01361C  6EDA               	movwf	fsr2h,c
 27951  01361E  0EFF               	movlw	255
 27952  013620  22DA               	addwfc	fsr2h,f,c
 27953  013622  0E08               	movlw	8
 27954  013624                     u6615:
 27955  013624  90D8               	bcf	status,0,c
 27956  013626  36DE               	rlcf	postinc2,f,c
 27957  013628  36DE               	rlcf	postinc2,f,c
 27958  01362A  36DE               	rlcf	postinc2,f,c
 27959  01362C  36DD               	rlcf	postdec2,f,c
 27960  01362E  52DD               	movf	postdec2,f,c
 27961  013630  52DD               	movf	postdec2,f,c
 27962  013632  2EE8               	decfsz	wreg,f,c
 27963  013634  D7F7               	goto	u6615
 27964                           
 27965                           ;stkvar	_b @ sp[(-13)+-4]
 27966  013636  0EEF               	movlw	-17
 27967  013638  006F FF8C  F033    	movff	plusw1,btemp+11
 27968                           
 27969                           ;stkvar	_a @ sp[(-13)+-8]
 27970  01363E  0EEB               	movlw	-21
 27971  013640  50E3               	movf	plusw1,w,c
 27972  013642  0233               	mulwf	(btemp+11)^0,c
 27973                           
 27974                           ;stkvar	_temp @ sp[(-13)+8]
 27975  013644  0EFB               	movlw	-5
 27976  013646  006F FFCF FFE3     	movff	prodl,plusw1
 27977  01364C  0EFC               	movlw	-4
 27978  01364E  006F FFD3 FFE3     	movff	prodh,plusw1
 27979                           
 27980                           ;stkvar	_temp @ sp[(-13)+8]
 27981  013654  0EFB               	movlw	-5
 27982  013656  006F FF8C  F032    	movff	plusw1,btemp+10
 27983  01365C  0EFC               	movlw	-4
 27984  01365E  006F FF8C  F033    	movff	plusw1,btemp+11
 27985                           
 27986                           ;stkvar	_grs @ sp[(-13)+4]
 27987  013664  50E1               	movf	fsr1l,w,c
 27988  013666  0FF7               	addlw	-9
 27989  013668  6ED9               	movwf	fsr2l,c
 27990  01366A  50E2               	movf	fsr1h,w,c
 27991  01366C  6EDA               	movwf	fsr2h,c
 27992  01366E  0EFF               	movlw	255
 27993  013670  22DA               	addwfc	fsr2h,f,c
 27994  013672  5032               	movf	(btemp+10)^0,w,c
 27995  013674  26DE               	addwf	postinc2,f,c
 27996  013676  5033               	movf	(btemp+11)^0,w,c
 27997  013678  22DE               	addwfc	postinc2,f,c
 27998  01367A  0E00               	movlw	0
 27999  01367C  22DE               	addwfc	postinc2,f,c
 28000  01367E  22DE               	addwfc	postinc2,f,c
 28001                           
 28002                           ;stkvar	_b @ sp[(-13)+-4]
 28003  013680  0EF0               	movlw	240
 28004  013682  24E1               	addwf	fsr1l,w,c
 28005  013684  6ED9               	movwf	fsr2l,c
 28006  013686  0EFF               	movlw	255
 28007  013688  20E2               	addwfc	fsr1h,w,c
 28008  01368A  6EDA               	movwf	fsr2h,c
 28009  01368C  50DF               	movf	indf2,w,c
 28010  01368E  6E33               	movwf	(btemp+11)^0,c
 28011                           
 28012                           ;stkvar	_a @ sp[(-13)+-8]
 28013  013690  0EED               	movlw	237
 28014  013692  24E1               	addwf	fsr1l,w,c
 28015  013694  6ED9               	movwf	fsr2l,c
 28016  013696  0EFF               	movlw	255
 28017  013698  20E2               	addwfc	fsr1h,w,c
 28018  01369A  6EDA               	movwf	fsr2h,c
 28019  01369C  50DF               	movf	indf2,w,c
 28020  01369E  0233               	mulwf	(btemp+11)^0,c
 28021                           
 28022                           ;stkvar	_temp @ sp[(-13)+8]
 28023  0136A0  0EFB               	movlw	-5
 28024  0136A2  006F FFCF FFE3     	movff	prodl,plusw1
 28025  0136A8  0EFC               	movlw	-4
 28026  0136AA  006F FFD3 FFE3     	movff	prodh,plusw1
 28027                           
 28028                           ;stkvar	_temp @ sp[(-13)+8]
 28029  0136B0  0EFB               	movlw	-5
 28030  0136B2  006F FF8C  F032    	movff	plusw1,btemp+10
 28031  0136B8  0EFC               	movlw	-4
 28032  0136BA  006F FF8C  F033    	movff	plusw1,btemp+11
 28033                           
 28034                           ;stkvar	_prod @ sp[(-13)+0]
 28035  0136C0  50E1               	movf	fsr1l,w,c
 28036  0136C2  0FF3               	addlw	-13
 28037  0136C4  6ED9               	movwf	fsr2l,c
 28038  0136C6  50E2               	movf	fsr1h,w,c
 28039  0136C8  6EDA               	movwf	fsr2h,c
 28040  0136CA  0EFF               	movlw	255
 28041  0136CC  22DA               	addwfc	fsr2h,f,c
 28042  0136CE  5032               	movf	(btemp+10)^0,w,c
 28043  0136D0  26DE               	addwf	postinc2,f,c
 28044  0136D2  5033               	movf	(btemp+11)^0,w,c
 28045  0136D4  22DE               	addwfc	postinc2,f,c
 28046  0136D6  0E00               	movlw	0
 28047  0136D8  22DE               	addwfc	postinc2,f,c
 28048  0136DA  22DE               	addwfc	postinc2,f,c
 28049                           
 28050                           ;stkvar	_b @ sp[(-13)+-4]
 28051  0136DC  0EF1               	movlw	241
 28052  0136DE  24E1               	addwf	fsr1l,w,c
 28053  0136E0  6ED9               	movwf	fsr2l,c
 28054  0136E2  0EFF               	movlw	255
 28055  0136E4  20E2               	addwfc	fsr1h,w,c
 28056  0136E6  6EDA               	movwf	fsr2h,c
 28057  0136E8  50DF               	movf	indf2,w,c
 28058  0136EA  6E33               	movwf	(btemp+11)^0,c
 28059                           
 28060                           ;stkvar	_a @ sp[(-13)+-8]
 28061  0136EC  0EEC               	movlw	236
 28062  0136EE  24E1               	addwf	fsr1l,w,c
 28063  0136F0  6ED9               	movwf	fsr2l,c
 28064  0136F2  0EFF               	movlw	255
 28065  0136F4  20E2               	addwfc	fsr1h,w,c
 28066  0136F6  6EDA               	movwf	fsr2h,c
 28067  0136F8  50DF               	movf	indf2,w,c
 28068  0136FA  0233               	mulwf	(btemp+11)^0,c
 28069                           
 28070                           ;stkvar	_temp @ sp[(-13)+8]
 28071  0136FC  0EFB               	movlw	-5
 28072  0136FE  006F FFCF FFE3     	movff	prodl,plusw1
 28073  013704  0EFC               	movlw	-4
 28074  013706  006F FFD3 FFE3     	movff	prodh,plusw1
 28075                           
 28076                           ;stkvar	_temp @ sp[(-13)+8]
 28077  01370C  0EFB               	movlw	-5
 28078  01370E  006F FF8C  F032    	movff	plusw1,btemp+10
 28079  013714  0EFC               	movlw	-4
 28080  013716  006F FF8C  F033    	movff	plusw1,btemp+11
 28081                           
 28082                           ;stkvar	_prod @ sp[(-13)+0]
 28083  01371C  50E1               	movf	fsr1l,w,c
 28084  01371E  0FF3               	addlw	-13
 28085  013720  6ED9               	movwf	fsr2l,c
 28086  013722  50E2               	movf	fsr1h,w,c
 28087  013724  6EDA               	movwf	fsr2h,c
 28088  013726  0EFF               	movlw	255
 28089  013728  22DA               	addwfc	fsr2h,f,c
 28090  01372A  5032               	movf	(btemp+10)^0,w,c
 28091  01372C  26DE               	addwf	postinc2,f,c
 28092  01372E  5033               	movf	(btemp+11)^0,w,c
 28093  013730  22DE               	addwfc	postinc2,f,c
 28094  013732  0E00               	movlw	0
 28095  013734  22DE               	addwfc	postinc2,f,c
 28096  013736  22DE               	addwfc	postinc2,f,c
 28097                           
 28098                           ;stkvar	_b @ sp[(-13)+-4]
 28099  013738  0EF1               	movlw	241
 28100  01373A  24E1               	addwf	fsr1l,w,c
 28101  01373C  6ED9               	movwf	fsr2l,c
 28102  01373E  0EFF               	movlw	255
 28103  013740  20E2               	addwfc	fsr1h,w,c
 28104  013742  6EDA               	movwf	fsr2h,c
 28105  013744  50DF               	movf	indf2,w,c
 28106  013746  6E33               	movwf	(btemp+11)^0,c
 28107                           
 28108                           ;stkvar	_a @ sp[(-13)+-8]
 28109  013748  0EED               	movlw	237
 28110  01374A  24E1               	addwf	fsr1l,w,c
 28111  01374C  6ED9               	movwf	fsr2l,c
 28112  01374E  0EFF               	movlw	255
 28113  013750  20E2               	addwfc	fsr1h,w,c
 28114  013752  6EDA               	movwf	fsr2h,c
 28115  013754  50DF               	movf	indf2,w,c
 28116  013756  0233               	mulwf	(btemp+11)^0,c
 28117                           
 28118                           ;stkvar	_temp @ sp[(-13)+8]
 28119  013758  0EFB               	movlw	-5
 28120  01375A  006F FFCF FFE3     	movff	prodl,plusw1
 28121  013760  0EFC               	movlw	-4
 28122  013762  006F FFD3 FFE3     	movff	prodh,plusw1
 28123                           
 28124                           ;stkvar	_temp @ sp[(-13)+8]
 28125  013768  0EFB               	movlw	-5
 28126  01376A  006F FF8C  F032    	movff	plusw1,btemp+10
 28127  013770  0EFC               	movlw	-4
 28128  013772  006F FF8C  F033    	movff	plusw1,btemp+11
 28129  013778  5032               	movf	(btemp+10)^0,w,c
 28130  01377A  6E2C               	movwf	(btemp+4)^0,c
 28131  01377C  5033               	movf	(btemp+11)^0,w,c
 28132  01377E  6E2D               	movwf	(btemp+5)^0,c
 28133  013780  6A2E               	clrf	(btemp+6)^0,c
 28134  013782  6A2F               	clrf	(btemp+7)^0,c
 28135  013784  0060  F0B8  F02F   	movff	btemp+6,btemp+7
 28136  01378A  0060  F0B4  F02E   	movff	btemp+5,btemp+6
 28137  013790  0060  F0B0  F02D   	movff	btemp+4,btemp+5
 28138  013796  6A2C               	clrf	(btemp+4)^0,c
 28139                           
 28140                           ;stkvar	_prod @ sp[(-13)+0]
 28141  013798  50E1               	movf	fsr1l,w,c
 28142  01379A  0FF3               	addlw	-13
 28143  01379C  6ED9               	movwf	fsr2l,c
 28144  01379E  50E2               	movf	fsr1h,w,c
 28145  0137A0  6EDA               	movwf	fsr2h,c
 28146  0137A2  0EFF               	movlw	255
 28147  0137A4  22DA               	addwfc	fsr2h,f,c
 28148  0137A6  502C               	movf	(btemp+4)^0,w,c
 28149  0137A8  26DE               	addwf	postinc2,f,c
 28150  0137AA  502D               	movf	(btemp+5)^0,w,c
 28151  0137AC  22DE               	addwfc	postinc2,f,c
 28152  0137AE  502E               	movf	(btemp+6)^0,w,c
 28153  0137B0  22DE               	addwfc	postinc2,f,c
 28154  0137B2  502F               	movf	(btemp+7)^0,w,c
 28155  0137B4  22DE               	addwfc	postinc2,f,c
 28156                           
 28157                           ;stkvar	_prod @ sp[(-13)+0]
 28158  0137B6  50E1               	movf	fsr1l,w,c
 28159  0137B8  0FF3               	addlw	-13
 28160  0137BA  6ED9               	movwf	fsr2l,c
 28161  0137BC  50E2               	movf	fsr1h,w,c
 28162  0137BE  6EDA               	movwf	fsr2h,c
 28163  0137C0  0EFF               	movlw	255
 28164  0137C2  22DA               	addwfc	fsr2h,f,c
 28165                           
 28166                           ;stkvar	_grs @ sp[(-13)+4]
 28167  0137C4  0EFA               	movlw	250
 28168  0137C6  24E1               	addwf	fsr1l,w,c
 28169  0137C8  6EE9               	movwf	fsr0l,c
 28170  0137CA  0EFF               	movlw	255
 28171  0137CC  20E2               	addwfc	fsr1h,w,c
 28172  0137CE  6EEA               	movwf	fsr0h,c
 28173  0137D0  50EF               	movf	indf0,w,c
 28174  0137D2  26DE               	addwf	postinc2,f,c
 28175  0137D4  0E00               	movlw	0
 28176  0137D6  22DE               	addwfc	postinc2,f,c
 28177  0137D8  22DE               	addwfc	postinc2,f,c
 28178  0137DA  22DE               	addwfc	postinc2,f,c
 28179                           
 28180                           ;stkvar	_grs @ sp[(-13)+4]
 28181  0137DC  50E1               	movf	fsr1l,w,c
 28182  0137DE  0FF7               	addlw	-9
 28183  0137E0  6ED9               	movwf	fsr2l,c
 28184  0137E2  50E2               	movf	fsr1h,w,c
 28185  0137E4  6EDA               	movwf	fsr2h,c
 28186  0137E6  0EFF               	movlw	255
 28187  0137E8  22DA               	addwfc	fsr2h,f,c
 28188  0137EA  0E08               	movlw	8
 28189  0137EC                     u6625:
 28190  0137EC  90D8               	bcf	status,0,c
 28191  0137EE  36DE               	rlcf	postinc2,f,c
 28192  0137F0  36DE               	rlcf	postinc2,f,c
 28193  0137F2  36DE               	rlcf	postinc2,f,c
 28194  0137F4  36DD               	rlcf	postdec2,f,c
 28195  0137F6  52DD               	movf	postdec2,f,c
 28196  0137F8  52DD               	movf	postdec2,f,c
 28197  0137FA  2EE8               	decfsz	wreg,f,c
 28198  0137FC  D7F7               	goto	u6625
 28199  0137FE  0E82               	movlw	130
 28200  013800  6E32               	movwf	(btemp+10)^0,c
 28201  013802  0EFF               	movlw	255
 28202  013804  6E33               	movwf	(btemp+11)^0,c
 28203                           
 28204                           ;stkvar	_bexp @ sp[(-13)+10]
 28205  013806  0EFD               	movlw	-3
 28206  013808  50E3               	movf	plusw1,w,c
 28207  01380A  6E30               	movwf	(btemp+8)^0,c
 28208  01380C  6A31               	clrf	(btemp+9)^0,c
 28209                           
 28210                           ;stkvar	_aexp @ sp[(-13)+11]
 28211  01380E  0EFE               	movlw	-2
 28212  013810  50E3               	movf	plusw1,w,c
 28213  013812  2630               	addwf	(btemp+8)^0,f,c
 28214  013814  0E00               	movlw	0
 28215  013816  2231               	addwfc	(btemp+9)^0,f,c
 28216  013818  5032               	movf	(btemp+10)^0,w,c
 28217  01381A  2630               	addwf	(btemp+8)^0,f,c
 28218  01381C  5033               	movf	(btemp+11)^0,w,c
 28219  01381E  2231               	addwfc	(btemp+9)^0,f,c
 28220                           
 28221                           ;stkvar	_temp @ sp[(-13)+8]
 28222  013820  0EFB               	movlw	-5
 28223  013822  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 28224  013828  0EFC               	movlw	-4
 28225  01382A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 28226  013830  D021               	goto	l8198
 28227  013832                     l8188:
 28228                           
 28229                           ;stkvar	_prod @ sp[(-13)+0]
 28230  013832  90D8               	bcf	status,0,c
 28231  013834  0EF3               	movlw	-13
 28232  013836  36E3               	rlcf	plusw1,f,c
 28233  013838  0EF4               	movlw	-12
 28234  01383A  36E3               	rlcf	plusw1,f,c
 28235  01383C  0EF5               	movlw	-11
 28236  01383E  36E3               	rlcf	plusw1,f,c
 28237  013840  0EF6               	movlw	-10
 28238  013842  36E3               	rlcf	plusw1,f,c
 28239                           
 28240                           ;stkvar	_grs @ sp[(-13)+4]
 28241  013844  0EFA               	movlw	-6
 28242  013846  AEE3               	btfss	plusw1,7,c
 28243  013848  D002               	goto	l8194
 28244                           
 28245                           ;stkvar	_prod @ sp[(-13)+0]
 28246  01384A  0EF3               	movlw	-13
 28247  01384C  80E3               	bsf	plusw1,0,c
 28248  01384E                     l8194:
 28249                           
 28250                           ;stkvar	_grs @ sp[(-13)+4]
 28251  01384E  90D8               	bcf	status,0,c
 28252  013850  0EF7               	movlw	-9
 28253  013852  36E3               	rlcf	plusw1,f,c
 28254  013854  0EF8               	movlw	-8
 28255  013856  36E3               	rlcf	plusw1,f,c
 28256  013858  0EF9               	movlw	-7
 28257  01385A  36E3               	rlcf	plusw1,f,c
 28258  01385C  0EFA               	movlw	-6
 28259  01385E  36E3               	rlcf	plusw1,f,c
 28260                           
 28261                           ;stkvar	_temp @ sp[(-13)+8]
 28262  013860  50E1               	movf	fsr1l,w,c
 28263  013862  0FFB               	addlw	-5
 28264  013864  6ED9               	movwf	fsr2l,c
 28265  013866  50E2               	movf	fsr1h,w,c
 28266  013868  6EDA               	movwf	fsr2h,c
 28267  01386A  0EFF               	movlw	255
 28268  01386C  22DA               	addwfc	fsr2h,f,c
 28269  01386E  06DE               	decf	postinc2,f,c
 28270  013870  0E00               	movlw	0
 28271  013872  5ADD               	subwfb	postdec2,f,c
 28272  013874                     l8198:
 28273                           
 28274                           ;stkvar	_prod @ sp[(-13)+0]
 28275  013874  0EF5               	movlw	-11
 28276  013876  AEE3               	btfss	plusw1,7,c
 28277  013878  D7DC               	goto	l8188
 28278                           
 28279                           ;stkvar	_aexp @ sp[(-13)+11]
 28280  01387A  0EFE               	movlw	-2
 28281  01387C  6AE3               	clrf	plusw1,c
 28282                           
 28283                           ;stkvar	_grs @ sp[(-13)+4]
 28284  01387E  0EFA               	movlw	-6
 28285  013880  AEE3               	btfss	plusw1,7,c
 28286  013882  D020               	goto	l8212
 28287                           
 28288                           ;stkvar	_grs @ sp[(-13)+4]
 28289  013884  50E1               	movf	fsr1l,w,c
 28290  013886  0FF7               	addlw	-9
 28291  013888  6ED9               	movwf	fsr2l,c
 28292  01388A  50E2               	movf	fsr1h,w,c
 28293  01388C  6EDA               	movwf	fsr2h,c
 28294  01388E  0EFF               	movlw	255
 28295  013890  22DA               	addwfc	fsr2h,f,c
 28296  013892  0EFF               	movlw	255
 28297  013894  14DE               	andwf	postinc2,w,c
 28298  013896  6E30               	movwf	(btemp+8)^0,c
 28299  013898  0EFF               	movlw	255
 28300  01389A  14DE               	andwf	postinc2,w,c
 28301  01389C  6E31               	movwf	(btemp+9)^0,c
 28302  01389E  0EFF               	movlw	255
 28303  0138A0  14DE               	andwf	postinc2,w,c
 28304  0138A2  6E32               	movwf	(btemp+10)^0,c
 28305  0138A4  0E7F               	movlw	127
 28306  0138A6  14DE               	andwf	postinc2,w,c
 28307  0138A8  6E33               	movwf	(btemp+11)^0,c
 28308  0138AA  5030               	movf	(btemp+8)^0,w,c
 28309  0138AC  1031               	iorwf	(btemp+9)^0,w,c
 28310  0138AE  1032               	iorwf	(btemp+10)^0,w,c
 28311  0138B0  1033               	iorwf	(btemp+11)^0,w,c
 28312  0138B2  B4D8               	btfsc	status,2,c
 28313  0138B4  D004               	goto	l8208
 28314  0138B6                     u6660:
 28315                           
 28316                           ;stkvar	_aexp @ sp[(-13)+11]
 28317  0138B6  0EFE               	movlw	-2
 28318  0138B8  6AE3               	clrf	plusw1,c
 28319  0138BA  2AE3               	incf	plusw1,f,c
 28320  0138BC  D003               	goto	l8212
 28321  0138BE                     l8208:
 28322                           
 28323                           ;stkvar	_prod @ sp[(-13)+0]
 28324  0138BE  0EF3               	movlw	-13
 28325  0138C0  B0E3               	btfsc	plusw1,0,c
 28326  0138C2  D7F9               	goto	u6660
 28327  0138C4                     l8212:
 28328                           
 28329                           ;stkvar	_aexp @ sp[(-13)+11]
 28330  0138C4  0EFE               	movlw	-2
 28331  0138C6  50E3               	movf	plusw1,w,c
 28332  0138C8  B4D8               	btfsc	status,2,c
 28333  0138CA  D036               	goto	l8222
 28334                           
 28335                           ;stkvar	_prod @ sp[(-13)+0]
 28336  0138CC  50E1               	movf	fsr1l,w,c
 28337  0138CE  0FF3               	addlw	-13
 28338  0138D0  6ED9               	movwf	fsr2l,c
 28339  0138D2  50E2               	movf	fsr1h,w,c
 28340  0138D4  6EDA               	movwf	fsr2h,c
 28341  0138D6  0EFF               	movlw	255
 28342  0138D8  22DA               	addwfc	fsr2h,f,c
 28343  0138DA  2ADE               	incf	postinc2,f,c
 28344  0138DC  0E00               	movlw	0
 28345  0138DE  22DE               	addwfc	postinc2,f,c
 28346  0138E0  22DE               	addwfc	postinc2,f,c
 28347  0138E2  22DE               	addwfc	postinc2,f,c
 28348                           
 28349                           ;stkvar	_prod @ sp[(-13)+0]
 28350  0138E4  0EF6               	movlw	-10
 28351  0138E6  A0E3               	btfss	plusw1,0,c
 28352  0138E8  D027               	goto	l8222
 28353  0138EA  0E01               	movlw	1
 28354  0138EC  6E33               	movwf	(btemp+11)^0,c
 28355                           
 28356                           ;stkvar	_prod @ sp[(-13)+0]
 28357  0138EE  50E1               	movf	fsr1l,w,c
 28358  0138F0  0FF3               	addlw	-13
 28359  0138F2  6ED9               	movwf	fsr2l,c
 28360  0138F4  50E2               	movf	fsr1h,w,c
 28361  0138F6  6EDA               	movwf	fsr2h,c
 28362  0138F8  0EFF               	movlw	255
 28363  0138FA  22DA               	addwfc	fsr2h,f,c
 28364  0138FC  2833               	incf	(btemp+11)^0,w,c
 28365  0138FE  52DE               	movf	postinc2,f,c
 28366  013900  D008               	goto	u6700
 28367  013902                     u6705:
 28368  013902  52DE               	movf	postinc2,f,c
 28369  013904  90D8               	bcf	status,0,c
 28370  013906  BEDC               	btfsc	preinc2,7,c
 28371  013908  80D8               	bsf	status,0,c
 28372  01390A  32DD               	rrcf	postdec2,f,c
 28373  01390C  32DD               	rrcf	postdec2,f,c
 28374  01390E  32DD               	rrcf	postdec2,f,c
 28375  013910  32DE               	rrcf	postinc2,f,c
 28376  013912                     u6700:
 28377  013912  2EE8               	decfsz	wreg,f,c
 28378  013914  D7F6               	goto	u6705
 28379                           
 28380                           ;stkvar	_temp @ sp[(-13)+8]
 28381  013916  0EFB               	movlw	-5
 28382  013918  50E3               	movf	plusw1,w,c
 28383  01391A  0F01               	addlw	1
 28384  01391C  6E28               	movwf	btemp^0,c
 28385  01391E  0EFB               	movlw	-5
 28386  013920  0060  F0A3  FFE3   	movff	btemp,plusw1
 28387  013926  6A28               	clrf	btemp^0,c
 28388  013928  0EFC               	movlw	-4
 28389  01392A  50E3               	movf	plusw1,w,c
 28390  01392C  2028               	addwfc	btemp^0,w,c
 28391  01392E  6E28               	movwf	btemp^0,c
 28392  013930  0EFC               	movlw	-4
 28393  013932  0060  F0A3  FFE3   	movff	btemp,plusw1
 28394  013938                     l8222:
 28395                           
 28396                           ;stkvar	_temp @ sp[(-13)+8]
 28397  013938  0EFC               	movlw	-4
 28398  01393A  BEE3               	btfsc	plusw1,7,c
 28399  01393C  D020               	goto	l8226
 28400  01393E  0EFC               	movlw	-4
 28401  013940  50E3               	movf	plusw1,w,c
 28402  013942  E104               	bnz	u6710
 28403  013944  0EFB               	movlw	-5
 28404  013946  28E3               	incf	plusw1,w,c
 28405  013948  A0D8               	btfss	status,0,c
 28406  01394A  D019               	goto	l8226
 28407  01394C                     u6710:
 28408  01394C  0E00               	movlw	0
 28409  01394E  6E30               	movwf	(btemp+8)^0,c
 28410  013950  0E00               	movlw	0
 28411  013952  6E31               	movwf	(btemp+9)^0,c
 28412  013954  0E80               	movlw	128
 28413  013956  6E32               	movwf	(btemp+10)^0,c
 28414  013958  0E7F               	movlw	127
 28415  01395A  6E33               	movwf	(btemp+11)^0,c
 28416                           
 28417                           ;stkvar	_prod @ sp[(-13)+0]
 28418  01395C  0EF3               	movlw	-13
 28419  01395E  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 28420  013964  0EF4               	movlw	-12
 28421  013966  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 28422  01396C  0EF5               	movlw	-11
 28423  01396E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 28424  013974  0EF6               	movlw	-10
 28425  013976  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 28426  01397C  D044               	goto	l8242
 28427  01397E                     l8226:
 28428                           
 28429                           ;stkvar	_temp @ sp[(-13)+8]
 28430  01397E  0EFC               	movlw	-4
 28431  013980  BEE3               	btfsc	plusw1,7,c
 28432  013982  D007               	goto	u6720
 28433  013984  0EFC               	movlw	-4
 28434  013986  50E3               	movf	plusw1,w,c
 28435  013988  E10F               	bnz	l8232
 28436  01398A  0EFB               	movlw	-5
 28437  01398C  04E3               	decf	plusw1,w,c
 28438  01398E  B0D8               	btfsc	status,0,c
 28439  013990  D00B               	goto	l8232
 28440  013992                     u6720:
 28441                           
 28442                           ;stkvar	_prod @ sp[(-13)+0]
 28443  013992  0EF3               	movlw	-13
 28444  013994  6AE3               	clrf	plusw1,c
 28445  013996  0EF4               	movlw	-12
 28446  013998  6AE3               	clrf	plusw1,c
 28447  01399A  0EF5               	movlw	-11
 28448  01399C  6AE3               	clrf	plusw1,c
 28449  01399E  0EF6               	movlw	-10
 28450  0139A0  6AE3               	clrf	plusw1,c
 28451                           
 28452                           ;stkvar	_sign @ sp[(-13)+12]
 28453  0139A2  0EFF               	movlw	-1
 28454  0139A4  6AE3               	clrf	plusw1,c
 28455  0139A6  D02F               	goto	l8242
 28456  0139A8                     l8232:
 28457                           
 28458                           ;stkvar	_temp @ sp[(-13)+8]
 28459                           ;stkvar	_bexp @ sp[(-13)+10]
 28460  0139A8  0EFB               	movlw	-5
 28461  0139AA  006F FF8C  F028    	movff	plusw1,btemp
 28462  0139B0  0EFD               	movlw	-3
 28463  0139B2  0060  F0A3  FFE3   	movff	btemp,plusw1
 28464                           
 28465                           ;stkvar	_prod @ sp[(-13)+0]
 28466  0139B8  50E1               	movf	fsr1l,w,c
 28467  0139BA  0FF3               	addlw	-13
 28468  0139BC  6ED9               	movwf	fsr2l,c
 28469  0139BE  50E2               	movf	fsr1h,w,c
 28470  0139C0  6EDA               	movwf	fsr2h,c
 28471  0139C2  0EFF               	movlw	255
 28472  0139C4  22DA               	addwfc	fsr2h,f,c
 28473  0139C6  0EFF               	movlw	255
 28474  0139C8  16DE               	andwf	postinc2,f,c
 28475  0139CA  0EFF               	movlw	255
 28476  0139CC  16DE               	andwf	postinc2,f,c
 28477  0139CE  0E7F               	movlw	127
 28478  0139D0  16DE               	andwf	postinc2,f,c
 28479  0139D2  0E00               	movlw	0
 28480  0139D4  16DE               	andwf	postinc2,f,c
 28481                           
 28482                           ;stkvar	_bexp @ sp[(-13)+10]
 28483  0139D6  0EFD               	movlw	-3
 28484  0139D8  A0E3               	btfss	plusw1,0,c
 28485  0139DA  D008               	goto	l8240
 28486                           
 28487                           ;stkvar	_prod @ sp[(-13)+0]
 28488  0139DC  0EF5               	movlw	245
 28489  0139DE  24E1               	addwf	fsr1l,w,c
 28490  0139E0  6ED9               	movwf	fsr2l,c
 28491  0139E2  0EFF               	movlw	255
 28492  0139E4  20E2               	addwfc	fsr1h,w,c
 28493  0139E6  6EDA               	movwf	fsr2h,c
 28494  0139E8  0E00               	movlw	0
 28495  0139EA  8EDB               	bsf	plusw2,7,c
 28496  0139EC                     l8240:
 28497                           
 28498                           ;stkvar	_prod @ sp[(-13)+0]
 28499  0139EC  0EF6               	movlw	246
 28500  0139EE  24E1               	addwf	fsr1l,w,c
 28501  0139F0  6ED9               	movwf	fsr2l,c
 28502  0139F2  0EFF               	movlw	255
 28503  0139F4  20E2               	addwfc	fsr1h,w,c
 28504  0139F6  6EDA               	movwf	fsr2h,c
 28505                           
 28506                           ;stkvar	_bexp @ sp[(-13)+10]
 28507  0139F8  0EFD               	movlw	-3
 28508  0139FA  006F FF8C  F033    	movff	plusw1,btemp+11
 28509  013A00  90D8               	bcf	status,0,c
 28510  013A02  3033               	rrcf	(btemp+11)^0,w,c
 28511  013A04  6EDF               	movwf	indf2,c
 28512  013A06                     l8242:
 28513                           
 28514                           ;stkvar	_sign @ sp[(-13)+12]
 28515  013A06  0EFF               	movlw	-1
 28516  013A08  006F FF8C  F033    	movff	plusw1,btemp+11
 28517                           
 28518                           ;stkvar	_prod @ sp[(-13)+0]
 28519  013A0E  0EF6               	movlw	246
 28520  013A10  24E1               	addwf	fsr1l,w,c
 28521  013A12  6ED9               	movwf	fsr2l,c
 28522  013A14  0EFF               	movlw	255
 28523  013A16  20E2               	addwfc	fsr1h,w,c
 28524  013A18  6EDA               	movwf	fsr2h,c
 28525  013A1A  5033               	movf	(btemp+11)^0,w,c
 28526  013A1C  12DF               	iorwf	indf2,f,c
 28527                           
 28528                           ;stkvar	_prod @ sp[(-13)+0]
 28529  013A1E  0EF3               	movlw	-13
 28530  013A20  006F FF8C  F028    	movff	plusw1,btemp
 28531  013A26  0EF4               	movlw	-12
 28532  013A28  006F FF8C  F029    	movff	plusw1,btemp+1
 28533  013A2E  0EF5               	movlw	-11
 28534  013A30  006F FF8C  F02A    	movff	plusw1,btemp+2
 28535  013A36  0EF6               	movlw	-10
 28536  013A38  006F FF8C  F02B    	movff	plusw1,btemp+3
 28537  013A3E                     l2985:
 28538                           
 28539                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28540  013A3E  0EEB               	movlw	235
 28541  013A40  26E1               	addwf	fsr1l,f,c
 28542  013A42  0EFF               	movlw	255
 28543  013A44  22E2               	addwfc	fsr1h,f,c
 28544  013A46  0012               	return		;funcret
 28545  013A48                     __end_of___flmul:
 28546                           	opt callstack 0
 28547                           
 28548 ;; *************** function _SYSTEM_Initialize *****************
 28549 ;; Defined at:
 28550 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28551 ;; Parameters:    Size  Location     Type
 28552 ;;		None
 28553 ;; Auto vars:     Size  Location     Type
 28554 ;;		None
 28555 ;; Return value:  Size  Location     Type
 28556 ;;                  1  [STACK] void 
 28557 ;; Registers used:
 28558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28559 ;; Tracked objects:
 28560 ;;		On entry : 0/0
 28561 ;;		On exit  : 3F/3C
 28562 ;;		Unchanged: 0/0
 28563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28568 ;;Total ram usage:        0 bytes
 28569 ;; Hardware stack levels used:    1
 28570 ;; Hardware stack levels required when called:   17
 28571 ;; This function calls:
 28572 ;;		_ADCC_Initialize
 28573 ;;		_CLKREF_Initialize
 28574 ;;		_DMA1_Initialize
 28575 ;;		_DMA2_Initialize
 28576 ;;		_EXT_INT_Initialize
 28577 ;;		_FVR_Initialize
 28578 ;;		_INTERRUPT_Initialize
 28579 ;;		_OSCILLATOR_Initialize
 28580 ;;		_PIN_MANAGER_Initialize
 28581 ;;		_PMD_Initialize
 28582 ;;		_PWM8_Initialize
 28583 ;;		_SPI1_Initialize
 28584 ;;		_TMR2_Initialize
 28585 ;;		_TMR3_Initialize
 28586 ;;		_TMR5_Initialize
 28587 ;;		_TMR6_Initialize
 28588 ;;		_UART1_Initialize
 28589 ;;		_UART2_Initialize
 28590 ;; This function is called by:
 28591 ;;		_main
 28592 ;; This function uses a reentrant model
 28593 ;;
 28594                           
 28595                           	psect	text107
 28596  01A9BA                     __ptext107:
 28597                           	opt callstack 0
 28598  01A9BA                     _SYSTEM_Initialize:
 28599                           	opt callstack 13
 28600                           
 28601                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28602                           
 28603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28604                           ;incstack = 0
 28605  01A9BA  ECBD  F0D2         	call	_INTERRUPT_Initialize	;wreg free
 28606                           
 28607                           ; BSR set to: 57
 28608                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28609  01A9BE  EC0E  F0DB         	call	_PMD_Initialize	;wreg free
 28610                           
 28611                           ; BSR set to: 57
 28612                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28613  01A9C2  ECF3  F0CF         	call	_PIN_MANAGER_Initialize	;wreg free
 28614                           
 28615                           ; BSR set to: 58
 28616                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28617  01A9C6  EC03  F0DB         	call	_OSCILLATOR_Initialize	;wreg free
 28618                           
 28619                           ; BSR set to: 57
 28620                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28621  01A9CA  EC83  F0DB         	call	_FVR_Initialize	;wreg free
 28622                           
 28623                           ; BSR set to: 62
 28624                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28625  01A9CE  EC53  F0D2         	call	_ADCC_Initialize	;wreg free
 28626                           
 28627                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 28628  01A9D2  ECF8  F0DA         	call	_PWM8_Initialize	;wreg free
 28629                           
 28630                           ; BSR set to: 63
 28631                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 28632  01A9D6  ECE1  F0DA         	call	_TMR2_Initialize	;wreg free
 28633                           
 28634                           ; BSR set to: 57
 28635                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28636  01A9DA  EC5D  F0D7         	call	_EXT_INT_Initialize	;wreg free
 28637                           
 28638                           ; BSR set to: 57
 28639                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28640  01A9DE  EC4A  F0D8         	call	_TMR6_Initialize	;wreg free
 28641                           
 28642                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28643  01A9E2  EC26  F0D5         	call	_TMR3_Initialize	;wreg free
 28644                           
 28645                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28646  01A9E6  ECB3  F0D5         	call	_TMR5_Initialize	;wreg free
 28647                           
 28648                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28649  01A9EA  EC90  F0D5         	call	_UART1_Initialize	;wreg free
 28650                           
 28651                           ; BSR set to: 57
 28652                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28653  01A9EE  EC84  F0D3         	call	_UART2_Initialize	;wreg free
 28654                           
 28655                           ; BSR set to: 57
 28656                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28657  01A9F2  ECED  F0DA         	call	_SPI1_Initialize	;wreg free
 28658                           
 28659                           ; BSR set to: 61
 28660                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28661  01A9F6  ECE0  F0D3         	call	_DMA2_Initialize	;wreg free
 28662                           
 28663                           ; BSR set to: 59
 28664                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28665  01A9FA  EC1E  F0D2         	call	_DMA1_Initialize	;wreg free
 28666                           
 28667                           ; BSR set to: 59
 28668                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28669  01A9FE  EC57  F0DB         	call	_CLKREF_Initialize	;wreg free
 28670                           
 28671                           ; BSR set to: 60
 28672                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28673  01AA02  0012               	return		;funcret
 28674  01AA04                     __end_of_SYSTEM_Initialize:
 28675                           	opt callstack 0
 28676                           
 28677 ;; *************** function _UART2_Initialize *****************
 28678 ;; Defined at:
 28679 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28680 ;; Parameters:    Size  Location     Type
 28681 ;;		None
 28682 ;; Auto vars:     Size  Location     Type
 28683 ;;		None
 28684 ;; Return value:  Size  Location     Type
 28685 ;;                  1  [STACK] void 
 28686 ;; Registers used:
 28687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28688 ;; Tracked objects:
 28689 ;;		On entry : 3F/39
 28690 ;;		On exit  : 3F/39
 28691 ;;		Unchanged: 0/0
 28692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28697 ;;Total ram usage:        0 bytes
 28698 ;; Hardware stack levels used:    1
 28699 ;; Hardware stack levels required when called:   16
 28700 ;; This function calls:
 28701 ;;		_UART2_SetRxInterruptHandler
 28702 ;;		_UART2_SetTxInterruptHandler
 28703 ;; This function is called by:
 28704 ;;		_SYSTEM_Initialize
 28705 ;; This function uses a reentrant model
 28706 ;;
 28707                           
 28708                           	psect	text108
 28709  01A708                     __ptext108:
 28710                           	opt callstack 0
 28711  01A708                     _UART2_Initialize:
 28712                           	opt callstack 13
 28713                           
 28714                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28715                           
 28716                           ; BSR set to: 60
 28717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28718                           ;incstack = 0
 28719  01A708  0139               	movlb	57	; () banked
 28720  01A70A  9596               	bcf	150,2,b	;volatile
 28721                           
 28722                           ; BSR set to: 57
 28723                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 28724  01A70C  0E1E               	movlw	low _UART2_Receive_ISR
 28725  01A70E  6EE6               	movwf	postinc1,c
 28726  01A710  0EB5               	movlw	high _UART2_Receive_ISR
 28727  01A712  6EE6               	movwf	postinc1,c
 28728  01A714  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 28729  01A716  6EE6               	movwf	postinc1,c
 28730  01A718  ECC3  F0D8         	call	_UART2_SetRxInterruptHandler	;wreg free
 28731                           
 28732                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 28733  01A71C  0139               	movlb	57	; () banked
 28734  01A71E  9796               	bcf	150,3,b	;volatile
 28735                           
 28736                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 28737  01A720  0E68               	movlw	low _UART2_Transmit_ISR
 28738  01A722  6EE6               	movwf	postinc1,c
 28739  01A724  0EB0               	movlw	high _UART2_Transmit_ISR
 28740  01A726  6EE6               	movwf	postinc1,c
 28741  01A728  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 28742  01A72A  6EE6               	movwf	postinc1,c
 28743  01A72C  ECAF  F0D8         	call	_UART2_SetTxInterruptHandler	;wreg free
 28744                           
 28745                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 28746  01A730  013D               	movlb	61	; () banked
 28747  01A732  6BD4               	clrf	212,b	;volatile
 28748                           
 28749                           ; BSR set to: 61
 28750                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 28751  01A734  6BD6               	clrf	214,b	;volatile
 28752                           
 28753                           ; BSR set to: 61
 28754                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 28755  01A736  6BD8               	clrf	216,b	;volatile
 28756                           
 28757                           ; BSR set to: 61
 28758                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 28759  01A738  0EB0               	movlw	176
 28760  01A73A  6FDA               	movwf	218,b	;volatile
 28761                           
 28762                           ; BSR set to: 61
 28763                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 28764  01A73C  0E80               	movlw	128
 28765  01A73E  6FDB               	movwf	219,b	;volatile
 28766                           
 28767                           ; BSR set to: 61
 28768                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 28769  01A740  6BDC               	clrf	220,b	;volatile
 28770                           
 28771                           ; BSR set to: 61
 28772                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 28773  01A742  0E82               	movlw	130
 28774  01A744  6FDD               	movwf	221,b	;volatile
 28775                           
 28776                           ; BSR set to: 61
 28777                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 28778  01A746  0E06               	movlw	6
 28779  01A748  6FDE               	movwf	222,b	;volatile
 28780                           
 28781                           ; BSR set to: 61
 28782                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 28783  01A74A  6BDF               	clrf	223,b	;volatile
 28784                           
 28785                           ; BSR set to: 61
 28786                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 28787  01A74C  6BE0               	clrf	224,b	;volatile
 28788                           
 28789                           ; BSR set to: 61
 28790                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 28791  01A74E  6BE1               	clrf	225,b	;volatile
 28792                           
 28793                           ; BSR set to: 61
 28794                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 28795  01A750  6BE2               	clrf	226,b	;volatile
 28796                           
 28797                           ; BSR set to: 61
 28798                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 28799  01A752  6A5B               	clrf	_uart2TxHead^0,c	;volatile
 28800                           
 28801                           ; BSR set to: 61
 28802                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28803  01A754  6A5A               	clrf	_uart2TxTail^0,c	;volatile
 28804                           
 28805                           ; BSR set to: 61
 28806                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28807  01A756  0E40               	movlw	64
 28808  01A758  6E59               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28809                           
 28810                           ; BSR set to: 61
 28811                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28812  01A75A  6A58               	clrf	_uart2RxHead^0,c	;volatile
 28813                           
 28814                           ; BSR set to: 61
 28815                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28816  01A75C  6A57               	clrf	_uart2RxTail^0,c	;volatile
 28817                           
 28818                           ; BSR set to: 61
 28819                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28820  01A75E  6A56               	clrf	_uart2RxCount^0,c	;volatile
 28821                           
 28822                           ; BSR set to: 61
 28823                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28824  01A760  0139               	movlb	57	; () banked
 28825  01A762  8596               	bsf	150,2,b	;volatile
 28826                           
 28827                           ; BSR set to: 57
 28828                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28829  01A764  0012               	return		;funcret
 28830  01A766                     __end_of_UART2_Initialize:
 28831                           	opt callstack 0
 28832                           
 28833 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28834 ;; Defined at:
 28835 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28836 ;; Parameters:    Size  Location     Type
 28837 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28838 ;;		 -> UART2_Transmit_ISR(1), 
 28839 ;; Auto vars:     Size  Location     Type
 28840 ;;		None
 28841 ;; Return value:  Size  Location     Type
 28842 ;;                  1  [STACK] void 
 28843 ;; Registers used:
 28844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28845 ;; Tracked objects:
 28846 ;;		On entry : 3F/39
 28847 ;;		On exit  : 0/0
 28848 ;;		Unchanged: 0/0
 28849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28854 ;;Total ram usage:        0 bytes
 28855 ;; Hardware stack levels used:    1
 28856 ;; Hardware stack levels required when called:   15
 28857 ;; This function calls:
 28858 ;;		Nothing
 28859 ;; This function is called by:
 28860 ;;		_UART2_Initialize
 28861 ;; This function uses a reentrant model
 28862 ;;
 28863                           
 28864                           	psect	text109
 28865  01B15E                     __ptext109:
 28866                           	opt callstack 0
 28867  01B15E                     _UART2_SetTxInterruptHandler:
 28868                           	opt callstack 13
 28869                           
 28870                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28871                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28872                           
 28873                           ; BSR set to: 57
 28874                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28875                           ;incstack = 0
 28876  01B15E  50E1               	movf	fsr1l,w,c
 28877  01B160  0FFD               	addlw	-3
 28878  01B162  6ED9               	movwf	fsr2l,c
 28879  01B164  50E2               	movf	fsr1h,w,c
 28880  01B166  6EDA               	movwf	fsr2h,c
 28881  01B168  0EFF               	movlw	255
 28882  01B16A  22DA               	addwfc	fsr2h,f,c
 28883  01B16C  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 28884  01B172  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 28885  01B178  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 28886                           
 28887                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28888  01B17E  52E5               	movf	postdec1,f,c
 28889  01B180  52E5               	movf	postdec1,f,c
 28890  01B182  52E5               	movf	postdec1,f,c
 28891  01B184  0012               	return		;funcret
 28892  01B186                     __end_of_UART2_SetTxInterruptHandler:
 28893                           	opt callstack 0
 28894                           
 28895 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28896 ;; Defined at:
 28897 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28898 ;; Parameters:    Size  Location     Type
 28899 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28900 ;;		 -> UART2_Receive_ISR(1), 
 28901 ;; Auto vars:     Size  Location     Type
 28902 ;;		None
 28903 ;; Return value:  Size  Location     Type
 28904 ;;                  1  [STACK] void 
 28905 ;; Registers used:
 28906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28907 ;; Tracked objects:
 28908 ;;		On entry : 3F/39
 28909 ;;		On exit  : 0/0
 28910 ;;		Unchanged: 0/0
 28911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28916 ;;Total ram usage:        0 bytes
 28917 ;; Hardware stack levels used:    1
 28918 ;; Hardware stack levels required when called:   15
 28919 ;; This function calls:
 28920 ;;		Nothing
 28921 ;; This function is called by:
 28922 ;;		_UART2_Initialize
 28923 ;; This function uses a reentrant model
 28924 ;;
 28925                           
 28926                           	psect	text110
 28927  01B186                     __ptext110:
 28928                           	opt callstack 0
 28929  01B186                     _UART2_SetRxInterruptHandler:
 28930                           	opt callstack 13
 28931                           
 28932                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28933                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28934                           
 28935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28936                           ;incstack = 0
 28937  01B186  50E1               	movf	fsr1l,w,c
 28938  01B188  0FFD               	addlw	-3
 28939  01B18A  6ED9               	movwf	fsr2l,c
 28940  01B18C  50E2               	movf	fsr1h,w,c
 28941  01B18E  6EDA               	movwf	fsr2h,c
 28942  01B190  0EFF               	movlw	255
 28943  01B192  22DA               	addwfc	fsr2h,f,c
 28944  01B194  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 28945  01B19A  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 28946  01B1A0  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 28947                           
 28948                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28949  01B1A6  52E5               	movf	postdec1,f,c
 28950  01B1A8  52E5               	movf	postdec1,f,c
 28951  01B1AA  52E5               	movf	postdec1,f,c
 28952  01B1AC  0012               	return		;funcret
 28953  01B1AE                     __end_of_UART2_SetRxInterruptHandler:
 28954                           	opt callstack 0
 28955                           
 28956 ;; *************** function _UART1_Initialize *****************
 28957 ;; Defined at:
 28958 ;;		line 75 in file "mcc_generated_files/uart1.c"
 28959 ;; Parameters:    Size  Location     Type
 28960 ;;		None
 28961 ;; Auto vars:     Size  Location     Type
 28962 ;;		None
 28963 ;; Return value:  Size  Location     Type
 28964 ;;                  1  [STACK] void 
 28965 ;; Registers used:
 28966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28967 ;; Tracked objects:
 28968 ;;		On entry : 0/39
 28969 ;;		On exit  : 3F/39
 28970 ;;		Unchanged: 0/0
 28971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28976 ;;Total ram usage:        0 bytes
 28977 ;; Hardware stack levels used:    1
 28978 ;; Hardware stack levels required when called:   16
 28979 ;; This function calls:
 28980 ;;		_UART1_SetRxInterruptHandler
 28981 ;; This function is called by:
 28982 ;;		_SYSTEM_Initialize
 28983 ;; This function uses a reentrant model
 28984 ;;
 28985                           
 28986                           	psect	text111
 28987  01AB20                     __ptext111:
 28988                           	opt callstack 0
 28989  01AB20                     _UART1_Initialize:
 28990                           	opt callstack 13
 28991                           
 28992                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 28993                           
 28994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28995                           ;incstack = 0
 28996  01AB20  0139               	movlb	57	; () banked
 28997  01AB22  9793               	bcf	147,3,b	;volatile
 28998                           
 28999                           ; BSR set to: 57
 29000                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29001  01AB24  0E58               	movlw	low _UART1_Receive_ISR
 29002  01AB26  6EE6               	movwf	postinc1,c
 29003  01AB28  0EB5               	movlw	high _UART1_Receive_ISR
 29004  01AB2A  6EE6               	movwf	postinc1,c
 29005  01AB2C  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29006  01AB2E  6EE6               	movwf	postinc1,c
 29007  01AB30  ECD7  F0D8         	call	_UART1_SetRxInterruptHandler	;wreg free
 29008                           
 29009                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29010  01AB34  013D               	movlb	61	; () banked
 29011  01AB36  6BEC               	clrf	236,b	;volatile
 29012                           
 29013                           ; BSR set to: 61
 29014                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29015  01AB38  6BED               	clrf	237,b	;volatile
 29016                           
 29017                           ; BSR set to: 61
 29018                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29019  01AB3A  6BEE               	clrf	238,b	;volatile
 29020                           
 29021                           ; BSR set to: 61
 29022                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29023  01AB3C  6BEF               	clrf	239,b	;volatile
 29024                           
 29025                           ; BSR set to: 61
 29026                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29027  01AB3E  6BF0               	clrf	240,b	;volatile
 29028                           
 29029                           ; BSR set to: 61
 29030                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29031  01AB40  6BF1               	clrf	241,b	;volatile
 29032                           
 29033                           ; BSR set to: 61
 29034                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29035  01AB42  0EB0               	movlw	176
 29036  01AB44  6FF2               	movwf	242,b	;volatile
 29037                           
 29038                           ; BSR set to: 61
 29039                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29040  01AB46  0E80               	movlw	128
 29041  01AB48  6FF3               	movwf	243,b	;volatile
 29042                           
 29043                           ; BSR set to: 61
 29044                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29045  01AB4A  6BF4               	clrf	244,b	;volatile
 29046                           
 29047                           ; BSR set to: 61
 29048                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29049  01AB4C  0E8A               	movlw	138
 29050  01AB4E  6FF5               	movwf	245,b	;volatile
 29051                           
 29052                           ; BSR set to: 61
 29053                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29054  01AB50  6BF6               	clrf	246,b	;volatile
 29055                           
 29056                           ; BSR set to: 61
 29057                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29058  01AB52  6BF7               	clrf	247,b	;volatile
 29059                           
 29060                           ; BSR set to: 61
 29061                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29062  01AB54  6BF8               	clrf	248,b	;volatile
 29063                           
 29064                           ; BSR set to: 61
 29065                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29066  01AB56  6BF9               	clrf	249,b	;volatile
 29067                           
 29068                           ; BSR set to: 61
 29069                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29070  01AB58  6BFA               	clrf	250,b	;volatile
 29071                           
 29072                           ; BSR set to: 61
 29073                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29074  01AB5A  6A5E               	clrf	_uart1RxHead^0,c	;volatile
 29075                           
 29076                           ; BSR set to: 61
 29077                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29078  01AB5C  6A5D               	clrf	_uart1RxTail^0,c	;volatile
 29079                           
 29080                           ; BSR set to: 61
 29081                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29082  01AB5E  6A5C               	clrf	_uart1RxCount^0,c	;volatile
 29083                           
 29084                           ; BSR set to: 61
 29085                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29086  01AB60  0139               	movlb	57	; () banked
 29087  01AB62  8793               	bsf	147,3,b	;volatile
 29088                           
 29089                           ; BSR set to: 57
 29090                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29091  01AB64  0012               	return		;funcret
 29092  01AB66                     __end_of_UART1_Initialize:
 29093                           	opt callstack 0
 29094                           
 29095 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29096 ;; Defined at:
 29097 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29098 ;; Parameters:    Size  Location     Type
 29099 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29100 ;;		 -> UART1_Receive_ISR(1), 
 29101 ;; Auto vars:     Size  Location     Type
 29102 ;;		None
 29103 ;; Return value:  Size  Location     Type
 29104 ;;                  1  [STACK] void 
 29105 ;; Registers used:
 29106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29107 ;; Tracked objects:
 29108 ;;		On entry : 3F/39
 29109 ;;		On exit  : 0/0
 29110 ;;		Unchanged: 0/0
 29111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29116 ;;Total ram usage:        0 bytes
 29117 ;; Hardware stack levels used:    1
 29118 ;; Hardware stack levels required when called:   15
 29119 ;; This function calls:
 29120 ;;		Nothing
 29121 ;; This function is called by:
 29122 ;;		_UART1_Initialize
 29123 ;; This function uses a reentrant model
 29124 ;;
 29125                           
 29126                           	psect	text112
 29127  01B1AE                     __ptext112:
 29128                           	opt callstack 0
 29129  01B1AE                     _UART1_SetRxInterruptHandler:
 29130                           	opt callstack 13
 29131                           
 29132                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29133                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29134                           
 29135                           ; BSR set to: 57
 29136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29137                           ;incstack = 0
 29138  01B1AE  50E1               	movf	fsr1l,w,c
 29139  01B1B0  0FFD               	addlw	-3
 29140  01B1B2  6ED9               	movwf	fsr2l,c
 29141  01B1B4  50E2               	movf	fsr1h,w,c
 29142  01B1B6  6EDA               	movwf	fsr2h,c
 29143  01B1B8  0EFF               	movlw	255
 29144  01B1BA  22DA               	addwfc	fsr2h,f,c
 29145  01B1BC  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29146  01B1C2  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29147  01B1C8  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29148                           
 29149                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29150  01B1CE  52E5               	movf	postdec1,f,c
 29151  01B1D0  52E5               	movf	postdec1,f,c
 29152  01B1D2  52E5               	movf	postdec1,f,c
 29153  01B1D4  0012               	return		;funcret
 29154  01B1D6                     __end_of_UART1_SetRxInterruptHandler:
 29155                           	opt callstack 0
 29156                           
 29157 ;; *************** function _TMR6_Initialize *****************
 29158 ;; Defined at:
 29159 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29160 ;; Parameters:    Size  Location     Type
 29161 ;;		None
 29162 ;; Auto vars:     Size  Location     Type
 29163 ;;		None
 29164 ;; Return value:  Size  Location     Type
 29165 ;;                  1  [STACK] void 
 29166 ;; Registers used:
 29167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29168 ;; Tracked objects:
 29169 ;;		On entry : 3F/39
 29170 ;;		On exit  : 0/0
 29171 ;;		Unchanged: 0/0
 29172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29177 ;;Total ram usage:        0 bytes
 29178 ;; Hardware stack levels used:    1
 29179 ;; Hardware stack levels required when called:   16
 29180 ;; This function calls:
 29181 ;;		_TMR6_SetInterruptHandler
 29182 ;; This function is called by:
 29183 ;;		_SYSTEM_Initialize
 29184 ;; This function uses a reentrant model
 29185 ;;
 29186                           
 29187                           	psect	text113
 29188  01B094                     __ptext113:
 29189                           	opt callstack 0
 29190  01B094                     _TMR6_Initialize:
 29191                           	opt callstack 13
 29192                           
 29193                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29194                           
 29195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29196                           ;incstack = 0
 29197  01B094  0E01               	movlw	1
 29198  01B096  6E96               	movwf	150,c	;volatile
 29199                           
 29200                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29201  01B098  6A95               	clrf	149,c	;volatile
 29202                           
 29203                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29204  01B09A  6A97               	clrf	151,c	;volatile
 29205                           
 29206                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29207  01B09C  0E7C               	movlw	124
 29208  01B09E  6E93               	movwf	147,c	;volatile
 29209                           
 29210                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29211  01B0A0  6A92               	clrf	146,c	;volatile
 29212                           
 29213                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29214  01B0A2  0139               	movlb	57	; () banked
 29215  01B0A4  91A9               	bcf	169,0,b	;volatile
 29216                           
 29217                           ; BSR set to: 57
 29218                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29219  01B0A6  8199               	bsf	153,0,b	;volatile
 29220                           
 29221                           ; BSR set to: 57
 29222                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29223  01B0A8  0E6C               	movlw	low _TMR6_DefaultInterruptHandler
 29224  01B0AA  6EE6               	movwf	postinc1,c
 29225  01B0AC  0EA9               	movlw	high _TMR6_DefaultInterruptHandler
 29226  01B0AE  6EE6               	movwf	postinc1,c
 29227  01B0B0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29228  01B0B2  6EE6               	movwf	postinc1,c
 29229  01B0B4  ECEB  F0D8         	call	_TMR6_SetInterruptHandler	;wreg free
 29230                           
 29231                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29232  01B0B8  0EE0               	movlw	224
 29233  01B0BA  6E94               	movwf	148,c	;volatile
 29234                           
 29235                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29236  01B0BC  0012               	return		;funcret
 29237  01B0BE                     __end_of_TMR6_Initialize:
 29238                           	opt callstack 0
 29239                           
 29240 ;; *************** function _TMR6_SetInterruptHandler *****************
 29241 ;; Defined at:
 29242 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29243 ;; Parameters:    Size  Location     Type
 29244 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29245 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29246 ;; Auto vars:     Size  Location     Type
 29247 ;;		None
 29248 ;; Return value:  Size  Location     Type
 29249 ;;                  1  [STACK] void 
 29250 ;; Registers used:
 29251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29252 ;; Tracked objects:
 29253 ;;		On entry : 3F/39
 29254 ;;		On exit  : 0/0
 29255 ;;		Unchanged: 0/0
 29256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29261 ;;Total ram usage:        0 bytes
 29262 ;; Hardware stack levels used:    1
 29263 ;; Hardware stack levels required when called:   15
 29264 ;; This function calls:
 29265 ;;		Nothing
 29266 ;; This function is called by:
 29267 ;;		_TMR6_Initialize
 29268 ;; This function uses a reentrant model
 29269 ;;
 29270                           
 29271                           	psect	text114
 29272  01B1D6                     __ptext114:
 29273                           	opt callstack 0
 29274  01B1D6                     _TMR6_SetInterruptHandler:
 29275                           	opt callstack 13
 29276                           
 29277                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29278                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29279                           
 29280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29281                           ;incstack = 0
 29282  01B1D6  50E1               	movf	fsr1l,w,c
 29283  01B1D8  0FFD               	addlw	-3
 29284  01B1DA  6ED9               	movwf	fsr2l,c
 29285  01B1DC  50E2               	movf	fsr1h,w,c
 29286  01B1DE  6EDA               	movwf	fsr2h,c
 29287  01B1E0  0EFF               	movlw	255
 29288  01B1E2  22DA               	addwfc	fsr2h,f,c
 29289  01B1E4  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29290  01B1EA  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29291  01B1F0  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29292                           
 29293                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29294  01B1F6  52E5               	movf	postdec1,f,c
 29295  01B1F8  52E5               	movf	postdec1,f,c
 29296  01B1FA  52E5               	movf	postdec1,f,c
 29297  01B1FC  0012               	return		;funcret
 29298  01B1FE                     __end_of_TMR6_SetInterruptHandler:
 29299                           	opt callstack 0
 29300                           
 29301 ;; *************** function _TMR5_Initialize *****************
 29302 ;; Defined at:
 29303 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 29304 ;; Parameters:    Size  Location     Type
 29305 ;;		None
 29306 ;; Auto vars:     Size  Location     Type
 29307 ;;		None
 29308 ;; Return value:  Size  Location     Type
 29309 ;;                  1  [STACK] void 
 29310 ;; Registers used:
 29311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29312 ;; Tracked objects:
 29313 ;;		On entry : 0/39
 29314 ;;		On exit  : 0/0
 29315 ;;		Unchanged: 0/0
 29316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29321 ;;Total ram usage:        0 bytes
 29322 ;; Hardware stack levels used:    1
 29323 ;; Hardware stack levels required when called:   16
 29324 ;; This function calls:
 29325 ;;		_TMR5_SetInterruptHandler
 29326 ;; This function is called by:
 29327 ;;		_SYSTEM_Initialize
 29328 ;; This function uses a reentrant model
 29329 ;;
 29330                           
 29331                           	psect	text115
 29332  01AB66                     __ptext115:
 29333                           	opt callstack 0
 29334  01AB66                     _TMR5_Initialize:
 29335                           	opt callstack 13
 29336                           
 29337                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 29338                           
 29339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29340                           ;incstack = 0
 29341  01AB66  6A9B               	clrf	155,c	;volatile
 29342                           
 29343                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 29344  01AB68  6A9C               	clrf	156,c	;volatile
 29345                           
 29346                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 29347  01AB6A  0E01               	movlw	1
 29348  01AB6C  6E9D               	movwf	157,c	;volatile
 29349                           
 29350                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 29351  01AB6E  0E63               	movlw	99
 29352  01AB70  6E99               	movwf	153,c	;volatile
 29353                           
 29354                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 29355  01AB72  0EC0               	movlw	192
 29356  01AB74  6E98               	movwf	152,c	;volatile
 29357                           
 29358                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29359  01AB76  5098               	movf	152,w,c	;volatile
 29360  01AB78  006F FE64  F028    	movff	16281,btemp	;volatile
 29361  01AB7E  6A29               	clrf	(btemp+1)^0,c
 29362  01AB80  0060  F0A0  F029   	movff	btemp,btemp+1
 29363  01AB86  6A28               	clrf	btemp^0,c
 29364  01AB88  1028               	iorwf	btemp^0,w,c
 29365  01AB8A  6E50               	movwf	_timer5ReloadVal^0,c	;volatile
 29366  01AB8C  5029               	movf	(btemp+1)^0,w,c
 29367  01AB8E  6E51               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 29368                           
 29369                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 29370  01AB90  0139               	movlb	57	; () banked
 29371  01AB92  9DA8               	bcf	168,6,b	;volatile
 29372                           
 29373                           ; BSR set to: 57
 29374                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 29375  01AB94  8D98               	bsf	152,6,b	;volatile
 29376                           
 29377                           ; BSR set to: 57
 29378                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29379  01AB96  0EEE               	movlw	low _TMR5_DefaultInterruptHandler
 29380  01AB98  6EE6               	movwf	postinc1,c
 29381  01AB9A  0EAE               	movlw	high _TMR5_DefaultInterruptHandler
 29382  01AB9C  6EE6               	movwf	postinc1,c
 29383  01AB9E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29384  01ABA0  6EE6               	movwf	postinc1,c
 29385  01ABA2  ECFF  F0D8         	call	_TMR5_SetInterruptHandler	;wreg free
 29386                           
 29387                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 29388  01ABA6  0E31               	movlw	49
 29389  01ABA8  6E9A               	movwf	154,c	;volatile
 29390                           
 29391                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29392  01ABAA  0012               	return		;funcret
 29393  01ABAC                     __end_of_TMR5_Initialize:
 29394                           	opt callstack 0
 29395                           
 29396 ;; *************** function _TMR5_SetInterruptHandler *****************
 29397 ;; Defined at:
 29398 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 29399 ;; Parameters:    Size  Location     Type
 29400 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29401 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29402 ;; Auto vars:     Size  Location     Type
 29403 ;;		None
 29404 ;; Return value:  Size  Location     Type
 29405 ;;                  1  [STACK] void 
 29406 ;; Registers used:
 29407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29408 ;; Tracked objects:
 29409 ;;		On entry : 3F/39
 29410 ;;		On exit  : 0/0
 29411 ;;		Unchanged: 0/0
 29412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29417 ;;Total ram usage:        0 bytes
 29418 ;; Hardware stack levels used:    1
 29419 ;; Hardware stack levels required when called:   15
 29420 ;; This function calls:
 29421 ;;		Nothing
 29422 ;; This function is called by:
 29423 ;;		_TMR5_Initialize
 29424 ;; This function uses a reentrant model
 29425 ;;
 29426                           
 29427                           	psect	text116
 29428  01B1FE                     __ptext116:
 29429                           	opt callstack 0
 29430  01B1FE                     _TMR5_SetInterruptHandler:
 29431                           	opt callstack 13
 29432                           
 29433                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29434                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29435                           
 29436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29437                           ;incstack = 0
 29438  01B1FE  50E1               	movf	fsr1l,w,c
 29439  01B200  0FFD               	addlw	-3
 29440  01B202  6ED9               	movwf	fsr2l,c
 29441  01B204  50E2               	movf	fsr1h,w,c
 29442  01B206  6EDA               	movwf	fsr2h,c
 29443  01B208  0EFF               	movlw	255
 29444  01B20A  22DA               	addwfc	fsr2h,f,c
 29445  01B20C  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 29446  01B212  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 29447  01B218  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 29448                           
 29449                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29450  01B21E  52E5               	movf	postdec1,f,c
 29451  01B220  52E5               	movf	postdec1,f,c
 29452  01B222  52E5               	movf	postdec1,f,c
 29453  01B224  0012               	return		;funcret
 29454  01B226                     __end_of_TMR5_SetInterruptHandler:
 29455                           	opt callstack 0
 29456                           
 29457 ;; *************** function _TMR3_Initialize *****************
 29458 ;; Defined at:
 29459 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29460 ;; Parameters:    Size  Location     Type
 29461 ;;		None
 29462 ;; Auto vars:     Size  Location     Type
 29463 ;;		None
 29464 ;; Return value:  Size  Location     Type
 29465 ;;                  1  [STACK] void 
 29466 ;; Registers used:
 29467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29468 ;; Tracked objects:
 29469 ;;		On entry : 0/39
 29470 ;;		On exit  : 0/0
 29471 ;;		Unchanged: 0/0
 29472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29477 ;;Total ram usage:        0 bytes
 29478 ;; Hardware stack levels used:    1
 29479 ;; Hardware stack levels required when called:   16
 29480 ;; This function calls:
 29481 ;;		_TMR3_SetInterruptHandler
 29482 ;; This function is called by:
 29483 ;;		_SYSTEM_Initialize
 29484 ;; This function uses a reentrant model
 29485 ;;
 29486                           
 29487                           	psect	text117
 29488  01AA4C                     __ptext117:
 29489                           	opt callstack 0
 29490  01AA4C                     _TMR3_Initialize:
 29491                           	opt callstack 13
 29492                           
 29493                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29494                           
 29495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29496                           ;incstack = 0
 29497  01AA4C  6AA7               	clrf	167,c	;volatile
 29498                           
 29499                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29500  01AA4E  6AA8               	clrf	168,c	;volatile
 29501                           
 29502                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29503  01AA50  0E01               	movlw	1
 29504  01AA52  6EA9               	movwf	169,c	;volatile
 29505                           
 29506                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29507  01AA54  0E3C               	movlw	60
 29508  01AA56  6EA5               	movwf	165,c	;volatile
 29509                           
 29510                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29511  01AA58  0EB0               	movlw	176
 29512  01AA5A  6EA4               	movwf	164,c	;volatile
 29513                           
 29514                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29515  01AA5C  50A4               	movf	164,w,c	;volatile
 29516  01AA5E  006F FE94  F028    	movff	16293,btemp	;volatile
 29517  01AA64  6A29               	clrf	(btemp+1)^0,c
 29518  01AA66  0060  F0A0  F029   	movff	btemp,btemp+1
 29519  01AA6C  6A28               	clrf	btemp^0,c
 29520  01AA6E  1028               	iorwf	btemp^0,w,c
 29521  01AA70  0100               	movlb	0	; () banked
 29522  01AA72  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 29523  01AA74  5029               	movf	(btemp+1)^0,w,c
 29524  01AA76  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 29525                           
 29526                           ; BSR set to: 0
 29527                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29528  01AA78  0139               	movlb	57	; () banked
 29529  01AA7A  9DA6               	bcf	166,6,b	;volatile
 29530                           
 29531                           ; BSR set to: 57
 29532                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29533  01AA7C  8D96               	bsf	150,6,b	;volatile
 29534                           
 29535                           ; BSR set to: 57
 29536                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29537  01AA7E  0E30               	movlw	low _TMR3_DefaultInterruptHandler
 29538  01AA80  6EE6               	movwf	postinc1,c
 29539  01AA82  0EB7               	movlw	high _TMR3_DefaultInterruptHandler
 29540  01AA84  6EE6               	movwf	postinc1,c
 29541  01AA86  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29542  01AA88  6EE6               	movwf	postinc1,c
 29543  01AA8A  EC13  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
 29544                           
 29545                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29546  01AA8E  0E31               	movlw	49
 29547  01AA90  6EA6               	movwf	166,c	;volatile
 29548                           
 29549                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29550  01AA92  0012               	return		;funcret
 29551  01AA94                     __end_of_TMR3_Initialize:
 29552                           	opt callstack 0
 29553                           
 29554 ;; *************** function _TMR3_SetInterruptHandler *****************
 29555 ;; Defined at:
 29556 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29557 ;; Parameters:    Size  Location     Type
 29558 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29559 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29560 ;; Auto vars:     Size  Location     Type
 29561 ;;		None
 29562 ;; Return value:  Size  Location     Type
 29563 ;;                  1  [STACK] void 
 29564 ;; Registers used:
 29565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29566 ;; Tracked objects:
 29567 ;;		On entry : 0/1
 29568 ;;		On exit  : 0/0
 29569 ;;		Unchanged: 0/0
 29570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29575 ;;Total ram usage:        0 bytes
 29576 ;; Hardware stack levels used:    1
 29577 ;; Hardware stack levels required when called:   15
 29578 ;; This function calls:
 29579 ;;		Nothing
 29580 ;; This function is called by:
 29581 ;;		_TMR3_Initialize
 29582 ;;		_init_bsoc
 29583 ;; This function uses a reentrant model
 29584 ;;
 29585                           
 29586                           	psect	text118
 29587  01B226                     __ptext118:
 29588                           	opt callstack 0
 29589  01B226                     _TMR3_SetInterruptHandler:
 29590                           	opt callstack 14
 29591                           
 29592                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29593                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29594                           
 29595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29596                           ;incstack = 0
 29597  01B226  50E1               	movf	fsr1l,w,c
 29598  01B228  0FFD               	addlw	-3
 29599  01B22A  6ED9               	movwf	fsr2l,c
 29600  01B22C  50E2               	movf	fsr1h,w,c
 29601  01B22E  6EDA               	movwf	fsr2h,c
 29602  01B230  0EFF               	movlw	255
 29603  01B232  22DA               	addwfc	fsr2h,f,c
 29604  01B234  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 29605  01B23A  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 29606  01B240  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 29607                           
 29608                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29609  01B246  52E5               	movf	postdec1,f,c
 29610  01B248  52E5               	movf	postdec1,f,c
 29611  01B24A  52E5               	movf	postdec1,f,c
 29612  01B24C  0012               	return		;funcret
 29613  01B24E                     __end_of_TMR3_SetInterruptHandler:
 29614                           	opt callstack 0
 29615                           
 29616 ;; *************** function _TMR2_Initialize *****************
 29617 ;; Defined at:
 29618 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29619 ;; Parameters:    Size  Location     Type
 29620 ;;		None
 29621 ;; Auto vars:     Size  Location     Type
 29622 ;;		None
 29623 ;; Return value:  Size  Location     Type
 29624 ;;                  1  [STACK] void 
 29625 ;; Registers used:
 29626 ;;		wreg, status,2
 29627 ;; Tracked objects:
 29628 ;;		On entry : 3F/3F
 29629 ;;		On exit  : 3F/39
 29630 ;;		Unchanged: 0/0
 29631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29636 ;;Total ram usage:        0 bytes
 29637 ;; Hardware stack levels used:    1
 29638 ;; Hardware stack levels required when called:   15
 29639 ;; This function calls:
 29640 ;;		Nothing
 29641 ;; This function is called by:
 29642 ;;		_SYSTEM_Initialize
 29643 ;; This function uses a reentrant model
 29644 ;;
 29645                           
 29646                           	psect	text119
 29647  01B5C2                     __ptext119:
 29648                           	opt callstack 0
 29649  01B5C2                     _TMR2_Initialize:
 29650                           	opt callstack 14
 29651                           
 29652                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29653                           
 29654                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29655                           ;incstack = 0
 29656  01B5C2  0E01               	movlw	1
 29657  01B5C4  6EAE               	movwf	174,c	;volatile
 29658                           
 29659                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29660  01B5C6  6AAD               	clrf	173,c	;volatile
 29661                           
 29662                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29663  01B5C8  6AAF               	clrf	175,c	;volatile
 29664                           
 29665                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29666  01B5CA  0E63               	movlw	99
 29667  01B5CC  6EAB               	movwf	171,c	;volatile
 29668                           
 29669                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29670  01B5CE  6AAA               	clrf	170,c	;volatile
 29671                           
 29672                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29673  01B5D0  0139               	movlb	57	; () banked
 29674  01B5D2  95A4               	bcf	164,2,b	;volatile
 29675                           
 29676                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29677  01B5D4  0EC0               	movlw	192
 29678  01B5D6  6EAC               	movwf	172,c	;volatile
 29679                           
 29680                           ; BSR set to: 57
 29681                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29682  01B5D8  0012               	return		;funcret
 29683  01B5DA                     __end_of_TMR2_Initialize:
 29684                           	opt callstack 0
 29685                           
 29686 ;; *************** function _SPI1_Initialize *****************
 29687 ;; Defined at:
 29688 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29689 ;; Parameters:    Size  Location     Type
 29690 ;;		None
 29691 ;; Auto vars:     Size  Location     Type
 29692 ;;		None
 29693 ;; Return value:  Size  Location     Type
 29694 ;;                  1  [STACK] void 
 29695 ;; Registers used:
 29696 ;;		wreg, status,2
 29697 ;; Tracked objects:
 29698 ;;		On entry : 3F/39
 29699 ;;		On exit  : 3F/3D
 29700 ;;		Unchanged: 0/0
 29701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29706 ;;Total ram usage:        0 bytes
 29707 ;; Hardware stack levels used:    1
 29708 ;; Hardware stack levels required when called:   15
 29709 ;; This function calls:
 29710 ;;		Nothing
 29711 ;; This function is called by:
 29712 ;;		_SYSTEM_Initialize
 29713 ;; This function uses a reentrant model
 29714 ;;
 29715                           
 29716                           	psect	text120
 29717  01B5DA                     __ptext120:
 29718                           	opt callstack 0
 29719  01B5DA                     _SPI1_Initialize:
 29720                           	opt callstack 14
 29721                           
 29722                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 29723                           
 29724                           ; BSR set to: 57
 29725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29726                           ;incstack = 0
 29727  01B5DA  0E40               	movlw	64
 29728  01B5DC  013D               	movlb	61	; () banked
 29729  01B5DE  6F15               	movwf	21,b	;volatile
 29730                           
 29731                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 29732  01B5E0  0E03               	movlw	3
 29733  01B5E2  6F16               	movwf	22,b	;volatile
 29734                           
 29735                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 29736  01B5E4  0E4F               	movlw	79
 29737  01B5E6  6F19               	movwf	25,b	;volatile
 29738                           
 29739                           ; BSR set to: 61
 29740                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 29741  01B5E8  6B1C               	clrf	28,b	;volatile
 29742                           
 29743                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 29744  01B5EA  0E83               	movlw	131
 29745  01B5EC  6F14               	movwf	20,b	;volatile
 29746                           
 29747                           ; BSR set to: 61
 29748                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29749  01B5EE  0012               	return		;funcret
 29750  01B5F0                     __end_of_SPI1_Initialize:
 29751                           	opt callstack 0
 29752                           
 29753 ;; *************** function _PWM8_Initialize *****************
 29754 ;; Defined at:
 29755 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 29756 ;; Parameters:    Size  Location     Type
 29757 ;;		None
 29758 ;; Auto vars:     Size  Location     Type
 29759 ;;		None
 29760 ;; Return value:  Size  Location     Type
 29761 ;;                  1  [STACK] void 
 29762 ;; Registers used:
 29763 ;;		wreg, status,2
 29764 ;; Tracked objects:
 29765 ;;		On entry : 0/3E
 29766 ;;		On exit  : 3F/3F
 29767 ;;		Unchanged: 0/0
 29768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29773 ;;Total ram usage:        0 bytes
 29774 ;; Hardware stack levels used:    1
 29775 ;; Hardware stack levels required when called:   15
 29776 ;; This function calls:
 29777 ;;		Nothing
 29778 ;; This function is called by:
 29779 ;;		_SYSTEM_Initialize
 29780 ;; This function uses a reentrant model
 29781 ;;
 29782                           
 29783                           	psect	text121
 29784  01B5F0                     __ptext121:
 29785                           	opt callstack 0
 29786  01B5F0                     _PWM8_Initialize:
 29787                           	opt callstack 14
 29788                           
 29789                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 29790                           
 29791                           ; BSR set to: 61
 29792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29793                           ;incstack = 0
 29794  01B5F0  0E80               	movlw	128
 29795  01B5F2  6E62               	movwf	98,c	;volatile
 29796                           
 29797                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 29798  01B5F4  6A61               	clrf	97,c	;volatile
 29799                           
 29800                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 29801  01B5F6  0E40               	movlw	64
 29802  01B5F8  6E60               	movwf	96,c	;volatile
 29803                           
 29804                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29805  01B5FA  013F               	movlb	63	; () banked
 29806  01B5FC  515F               	movf	95,w,b	;volatile
 29807  01B5FE  0B3F               	andlw	-193
 29808  01B600  0940               	iorlw	64
 29809  01B602  6F5F               	movwf	95,b	;volatile
 29810                           
 29811                           ; BSR set to: 63
 29812                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29813  01B604  0012               	return		;funcret
 29814  01B606                     __end_of_PWM8_Initialize:
 29815                           	opt callstack 0
 29816                           
 29817 ;; *************** function _PMD_Initialize *****************
 29818 ;; Defined at:
 29819 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29820 ;; Parameters:    Size  Location     Type
 29821 ;;		None
 29822 ;; Auto vars:     Size  Location     Type
 29823 ;;		None
 29824 ;; Return value:  Size  Location     Type
 29825 ;;                  1  [STACK] void 
 29826 ;; Registers used:
 29827 ;;		None
 29828 ;; Tracked objects:
 29829 ;;		On entry : 3F/39
 29830 ;;		On exit  : 3F/39
 29831 ;;		Unchanged: 0/0
 29832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29837 ;;Total ram usage:        0 bytes
 29838 ;; Hardware stack levels used:    1
 29839 ;; Hardware stack levels required when called:   15
 29840 ;; This function calls:
 29841 ;;		Nothing
 29842 ;; This function is called by:
 29843 ;;		_SYSTEM_Initialize
 29844 ;; This function uses a reentrant model
 29845 ;;
 29846                           
 29847                           	psect	text122
 29848  01B61C                     __ptext122:
 29849                           	opt callstack 0
 29850  01B61C                     _PMD_Initialize:
 29851                           	opt callstack 14
 29852                           
 29853                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29854                           
 29855                           ; BSR set to: 63
 29856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29857                           ;incstack = 0
 29858  01B61C  0139               	movlb	57	; () banked
 29859  01B61E  6BC0               	clrf	192,b	;volatile
 29860                           
 29861                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29862  01B620  6BC1               	clrf	193,b	;volatile
 29863                           
 29864                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29865  01B622  6BC2               	clrf	194,b	;volatile
 29866                           
 29867                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29868  01B624  6BC3               	clrf	195,b	;volatile
 29869                           
 29870                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29871  01B626  6BC4               	clrf	196,b	;volatile
 29872                           
 29873                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29874  01B628  6BC5               	clrf	197,b	;volatile
 29875                           
 29876                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29877  01B62A  6BC6               	clrf	198,b	;volatile
 29878                           
 29879                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29880  01B62C  6BC7               	clrf	199,b	;volatile
 29881                           
 29882                           ; BSR set to: 57
 29883                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29884  01B62E  0012               	return		;funcret
 29885  01B630                     __end_of_PMD_Initialize:
 29886                           	opt callstack 0
 29887                           
 29888 ;; *************** function _PIN_MANAGER_Initialize *****************
 29889 ;; Defined at:
 29890 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29891 ;; Parameters:    Size  Location     Type
 29892 ;;		None
 29893 ;; Auto vars:     Size  Location     Type
 29894 ;;		None
 29895 ;; Return value:  Size  Location     Type
 29896 ;;                  1  [STACK] void 
 29897 ;; Registers used:
 29898 ;;		wreg, status,2
 29899 ;; Tracked objects:
 29900 ;;		On entry : 3F/39
 29901 ;;		On exit  : 3F/3A
 29902 ;;		Unchanged: 0/0
 29903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29908 ;;Total ram usage:        0 bytes
 29909 ;; Hardware stack levels used:    1
 29910 ;; Hardware stack levels required when called:   15
 29911 ;; This function calls:
 29912 ;;		Nothing
 29913 ;; This function is called by:
 29914 ;;		_SYSTEM_Initialize
 29915 ;; This function uses a reentrant model
 29916 ;;
 29917                           
 29918                           	psect	text123
 29919  019FE6                     __ptext123:
 29920                           	opt callstack 0
 29921  019FE6                     _PIN_MANAGER_Initialize:
 29922                           	opt callstack 14
 29923                           
 29924                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29925                           
 29926                           ; BSR set to: 57
 29927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29928                           ;incstack = 0
 29929  019FE6  0E07               	movlw	7
 29930  019FE8  6EBE               	movwf	190,c	;volatile
 29931                           
 29932                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29933  019FEA  0E80               	movlw	128
 29934  019FEC  6EBD               	movwf	189,c	;volatile
 29935                           
 29936                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29937  019FEE  6ABA               	clrf	186,c	;volatile
 29938                           
 29939                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 29940  019FF0  0E20               	movlw	32
 29941  019FF2  6EBF               	movwf	191,c	;volatile
 29942                           
 29943                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29944  019FF4  6ABB               	clrf	187,c	;volatile
 29945                           
 29946                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29947  019FF6  0E07               	movlw	7
 29948  019FF8  6EBC               	movwf	188,c	;volatile
 29949                           
 29950                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29951  019FFA  6AC6               	clrf	198,c	;volatile
 29952                           
 29953                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29954  019FFC  0E0F               	movlw	15
 29955  019FFE  6EC7               	movwf	199,c	;volatile
 29956                           
 29957                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 29958  01A000  68C2               	setf	194,c	;volatile
 29959                           
 29960                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 29961  01A002  0EBF               	movlw	191
 29962  01A004  6EC3               	movwf	195,c	;volatile
 29963                           
 29964                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 29965  01A006  0E90               	movlw	144
 29966  01A008  6EC4               	movwf	196,c	;volatile
 29967                           
 29968                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 29969  01A00A  0E0C               	movlw	12
 29970  01A00C  6EC5               	movwf	197,c	;volatile
 29971                           
 29972                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 29973  01A00E  013A               	movlb	58	; () banked
 29974  01A010  6B70               	clrf	112,b	;volatile
 29975                           
 29976                           ; BSR set to: 58
 29977                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 29978  01A012  6B60               	clrf	96,b	;volatile
 29979                           
 29980                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 29981  01A014  0E3C               	movlw	60
 29982  01A016  6F50               	movwf	80,b	;volatile
 29983                           
 29984                           ; BSR set to: 58
 29985                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 29986  01A018  6B80               	clrf	128,b	;volatile
 29987                           
 29988                           ; BSR set to: 58
 29989                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 29990  01A01A  6B90               	clrf	144,b	;volatile
 29991                           
 29992                           ; BSR set to: 58
 29993                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 29994  01A01C  6940               	setf	64,b	;volatile
 29995                           
 29996                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 29997  01A01E  0E0C               	movlw	12
 29998  01A020  6F71               	movwf	113,b	;volatile
 29999                           
 30000                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30001  01A022  0E0F               	movlw	15
 30002  01A024  6F91               	movwf	145,b	;volatile
 30003                           
 30004                           ; BSR set to: 58
 30005                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30006  01A026  6B81               	clrf	129,b	;volatile
 30007                           
 30008                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30009  01A028  0E83               	movlw	131
 30010  01A02A  6F51               	movwf	81,b	;volatile
 30011                           
 30012                           ; BSR set to: 58
 30013                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30014  01A02C  6B41               	clrf	65,b	;volatile
 30015                           
 30016                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30017  01A02E  0E97               	movlw	151
 30018  01A030  6F61               	movwf	97,b	;volatile
 30019                           
 30020                           ; BSR set to: 58
 30021                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30022  01A032  6B82               	clrf	130,b	;volatile
 30023                           
 30024                           ; BSR set to: 58
 30025                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30026  01A034  6B92               	clrf	146,b	;volatile
 30027                           
 30028                           ; BSR set to: 58
 30029                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30030  01A036  6B42               	clrf	66,b	;volatile
 30031                           
 30032                           ; BSR set to: 58
 30033                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30034  01A038  6B52               	clrf	82,b	;volatile
 30035                           
 30036                           ; BSR set to: 58
 30037                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30038  01A03A  6B62               	clrf	98,b	;volatile
 30039                           
 30040                           ; BSR set to: 58
 30041                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30042  01A03C  6B72               	clrf	114,b	;volatile
 30043                           
 30044                           ; BSR set to: 58
 30045                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30046  01A03E  6943               	setf	67,b	;volatile
 30047                           
 30048                           ; BSR set to: 58
 30049                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30050  01A040  6953               	setf	83,b	;volatile
 30051                           
 30052                           ; BSR set to: 58
 30053                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30054  01A042  6963               	setf	99,b	;volatile
 30055                           
 30056                           ; BSR set to: 58
 30057                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30058  01A044  6973               	setf	115,b	;volatile
 30059                           
 30060                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30061  01A046  0E07               	movlw	7
 30062  01A048  6F83               	movwf	131,b	;volatile
 30063                           
 30064                           ; BSR set to: 58
 30065                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30066  01A04A  6993               	setf	147,b	;volatile
 30067                           
 30068                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30069  01A04C  0E0F               	movlw	15
 30070  01A04E  6FE8               	movwf	232,b	;volatile
 30071                           
 30072                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30073  01A050  0E13               	movlw	19
 30074  01A052  6FDE               	movwf	222,b	;volatile
 30075                           
 30076                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30077  01A054  0E16               	movlw	22
 30078  01A056  6F0E               	movwf	14,b	;volatile
 30079                           
 30080                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30081  01A058  0E1E               	movlw	30
 30082  01A05A  6F13               	movwf	19,b	;volatile
 30083                           
 30084                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30085  01A05C  0E08               	movlw	8
 30086  01A05E  6FC0               	movwf	192,b	;volatile
 30087                           
 30088                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30089  01A060  0E10               	movlw	16
 30090  01A062  6F19               	movwf	25,b	;volatile
 30091                           
 30092                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30093  01A064  0E09               	movlw	9
 30094  01A066  6FC1               	movwf	193,b	;volatile
 30095                           
 30096                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30097  01A068  0E1F               	movlw	31
 30098  01A06A  6F15               	movwf	21,b	;volatile
 30099                           
 30100                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30101  01A06C  0E13               	movlw	19
 30102  01A06E  6F16               	movwf	22,b	;volatile
 30103                           
 30104                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30105  01A070  0E17               	movlw	23
 30106  01A072  6FE5               	movwf	229,b	;volatile
 30107                           
 30108                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30109  01A074  0E14               	movlw	20
 30110  01A076  6FDF               	movwf	223,b	;volatile
 30111                           
 30112                           ; BSR set to: 58
 30113                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30114  01A078  0012               	return		;funcret
 30115  01A07A                     __end_of_PIN_MANAGER_Initialize:
 30116                           	opt callstack 0
 30117                           
 30118 ;; *************** function _OSCILLATOR_Initialize *****************
 30119 ;; Defined at:
 30120 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30121 ;; Parameters:    Size  Location     Type
 30122 ;;		None
 30123 ;; Auto vars:     Size  Location     Type
 30124 ;;		None
 30125 ;; Return value:  Size  Location     Type
 30126 ;;                  1  [STACK] void 
 30127 ;; Registers used:
 30128 ;;		wreg, status,2
 30129 ;; Tracked objects:
 30130 ;;		On entry : 3F/3A
 30131 ;;		On exit  : 3F/39
 30132 ;;		Unchanged: 0/0
 30133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30138 ;;Total ram usage:        0 bytes
 30139 ;; Hardware stack levels used:    1
 30140 ;; Hardware stack levels required when called:   15
 30141 ;; This function calls:
 30142 ;;		Nothing
 30143 ;; This function is called by:
 30144 ;;		_SYSTEM_Initialize
 30145 ;; This function uses a reentrant model
 30146 ;;
 30147                           
 30148                           	psect	text124
 30149  01B606                     __ptext124:
 30150                           	opt callstack 0
 30151  01B606                     _OSCILLATOR_Initialize:
 30152                           	opt callstack 14
 30153                           
 30154                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30155                           
 30156                           ; BSR set to: 58
 30157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30158                           ;incstack = 0
 30159  01B606  0E20               	movlw	32
 30160  01B608  0139               	movlb	57	; () banked
 30161  01B60A  6FD9               	movwf	217,b	;volatile
 30162                           
 30163                           ; BSR set to: 57
 30164                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30165  01B60C  6BDB               	clrf	219,b	;volatile
 30166                           
 30167                           ; BSR set to: 57
 30168                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30169  01B60E  6BDD               	clrf	221,b	;volatile
 30170                           
 30171                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30172  01B610  0E02               	movlw	2
 30173  01B612  6FDF               	movwf	223,b	;volatile
 30174                           
 30175                           ; BSR set to: 57
 30176                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30177  01B614  6BDE               	clrf	222,b	;volatile
 30178  01B616                     l169:
 30179                           
 30180                           ; BSR set to: 57
 30181                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30182  01B616  B1DC               	btfsc	220,0,b	;volatile
 30183  01B618  0012               	return	
 30184  01B61A  D7FD               	goto	l169
 30185  01B61C                     __end_of_OSCILLATOR_Initialize:
 30186                           	opt callstack 0
 30187                           
 30188 ;; *************** function _INTERRUPT_Initialize *****************
 30189 ;; Defined at:
 30190 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30191 ;; Parameters:    Size  Location     Type
 30192 ;;		None
 30193 ;; Auto vars:     Size  Location     Type
 30194 ;;  state           1  [STACK] _Bool 
 30195 ;; Return value:  Size  Location     Type
 30196 ;;                  1  [STACK] void 
 30197 ;; Registers used:
 30198 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30199 ;; Tracked objects:
 30200 ;;		On entry : 0/0
 30201 ;;		On exit  : 3F/39
 30202 ;;		Unchanged: 0/0
 30203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30208 ;;Total ram usage:        0 bytes
 30209 ;; Hardware stack levels used:    1
 30210 ;; Hardware stack levels required when called:   15
 30211 ;; This function calls:
 30212 ;;		Nothing
 30213 ;; This function is called by:
 30214 ;;		_SYSTEM_Initialize
 30215 ;; This function uses a reentrant model
 30216 ;;
 30217                           
 30218                           	psect	text125
 30219  01A57A                     __ptext125:
 30220                           	opt callstack 0
 30221  01A57A                     _INTERRUPT_Initialize:
 30222                           	opt callstack 0
 30223                           
 30224                           ; BSR set to: 57
 30225                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30226  01A57A  52E6               	movf	postinc1,f,c
 30227                           
 30228                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30229                           
 30230                           ;incstack = 0
 30231  01A57C  8AD2               	bsf	210,5,c	;volatile
 30232                           
 30233                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30234  01A57E  AED2               	btfss	16338,7,c	;volatile
 30235  01A580  D003               	goto	u8980
 30236  01A582  6A33               	clrf	(btemp+11)^0,c
 30237  01A584  2A33               	incf	(btemp+11)^0,f,c
 30238  01A586  D001               	goto	u8998
 30239  01A588                     u8980:
 30240  01A588  6A33               	clrf	(btemp+11)^0,c
 30241  01A58A                     u8998:
 30242                           
 30243                           ;stkvar	_state @ sp[(-1)+0]
 30244  01A58A  0EFF               	movlw	-1
 30245  01A58C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 30246                           
 30247                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30248  01A592  9ED2               	bcf	16338,7,c	;volatile
 30249                           
 30250                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30251  01A594  0E55               	movlw	85
 30252  01A596  6ED4               	movwf	212,c	;volatile
 30253                           
 30254                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30255  01A598  0EAA               	movlw	170
 30256  01A59A  6ED4               	movwf	212,c	;volatile
 30257                           
 30258                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30259  01A59C  90D4               	bcf	212,0,c	;volatile
 30260                           
 30261                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30262  01A59E  0138               	movlb	56	; () banked
 30263  01A5A0  6B9F               	clrf	159,b	;volatile
 30264                           
 30265                           ; BSR set to: 56
 30266                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30267  01A5A2  6B9E               	clrf	158,b	;volatile
 30268                           
 30269                           ; BSR set to: 56
 30270                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30271  01A5A4  0E08               	movlw	8
 30272  01A5A6  6F9D               	movwf	157,b	;volatile
 30273                           
 30274                           ; BSR set to: 56
 30275                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30276  01A5A8  0E55               	movlw	85
 30277  01A5AA  6ED4               	movwf	212,c	;volatile
 30278                           
 30279                           ; BSR set to: 56
 30280                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30281  01A5AC  0EAA               	movlw	170
 30282  01A5AE  6ED4               	movwf	212,c	;volatile
 30283                           
 30284                           ; BSR set to: 56
 30285                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30286  01A5B0  80D4               	bsf	212,0,c	;volatile
 30287                           
 30288                           ; BSR set to: 56
 30289                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30290                           ;stkvar	_state @ sp[(-1)+0]
 30291  01A5B2  0EFF               	movlw	-1
 30292  01A5B4  B0E3               	btfsc	plusw1,0,c
 30293  01A5B6  D002               	bra	u9005
 30294  01A5B8  9ED2               	bcf	16338,7,c	;volatile
 30295  01A5BA  D001               	bra	u9006
 30296  01A5BC                     u9005:
 30297  01A5BC  8ED2               	bsf	16338,7,c	;volatile
 30298  01A5BE                     u9006:
 30299                           
 30300                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30301  01A5BE  0139               	movlb	57	; () banked
 30302  01A5C0  8782               	bsf	130,3,b	;volatile
 30303                           
 30304                           ; BSR set to: 57
 30305                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30306  01A5C2  8382               	bsf	130,1,b	;volatile
 30307                           
 30308                           ; BSR set to: 57
 30309                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30310  01A5C4  8182               	bsf	130,0,b	;volatile
 30311                           
 30312                           ; BSR set to: 57
 30313                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30314  01A5C6  8582               	bsf	130,2,b	;volatile
 30315                           
 30316                           ; BSR set to: 57
 30317                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30318  01A5C8  8786               	bsf	134,3,b	;volatile
 30319                           
 30320                           ; BSR set to: 57
 30321                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30322  01A5CA  8586               	bsf	134,2,b	;volatile
 30323                           
 30324                           ; BSR set to: 57
 30325                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30326  01A5CC  8783               	bsf	131,3,b	;volatile
 30327                           
 30328                           ; BSR set to: 57
 30329                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30330  01A5CE  8181               	bsf	129,0,b	;volatile
 30331                           
 30332                           ; BSR set to: 57
 30333                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30334  01A5D0  9185               	bcf	133,0,b	;volatile
 30335                           
 30336                           ; BSR set to: 57
 30337                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30338  01A5D2  8189               	bsf	137,0,b	;volatile
 30339                           
 30340                           ; BSR set to: 57
 30341                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30342  01A5D4  9D88               	bcf	136,6,b	;volatile
 30343                           
 30344                           ; BSR set to: 57
 30345                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 30346  01A5D6  9D86               	bcf	134,6,b	;volatile
 30347                           
 30348                           ; BSR set to: 57
 30349                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 30350  01A5D8  8581               	bsf	129,2,b	;volatile
 30351                           
 30352                           ; BSR set to: 57
 30353                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 30354  01A5DA  8781               	bsf	129,3,b	;volatile
 30355                           
 30356                           ; BSR set to: 57
 30357                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30358  01A5DC  52E5               	movf	postdec1,f,c
 30359  01A5DE  0012               	return		;funcret
 30360  01A5E0                     __end_of_INTERRUPT_Initialize:
 30361                           	opt callstack 0
 30362                           
 30363 ;; *************** function _FVR_Initialize *****************
 30364 ;; Defined at:
 30365 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30366 ;; Parameters:    Size  Location     Type
 30367 ;;		None
 30368 ;; Auto vars:     Size  Location     Type
 30369 ;;		None
 30370 ;; Return value:  Size  Location     Type
 30371 ;;                  1  [STACK] void 
 30372 ;; Registers used:
 30373 ;;		wreg, status,2
 30374 ;; Tracked objects:
 30375 ;;		On entry : 3F/39
 30376 ;;		On exit  : 3F/3E
 30377 ;;		Unchanged: 0/0
 30378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30383 ;;Total ram usage:        0 bytes
 30384 ;; Hardware stack levels used:    1
 30385 ;; Hardware stack levels required when called:   15
 30386 ;; This function calls:
 30387 ;;		Nothing
 30388 ;; This function is called by:
 30389 ;;		_SYSTEM_Initialize
 30390 ;; This function uses a reentrant model
 30391 ;;
 30392                           
 30393                           	psect	text126
 30394  01B706                     __ptext126:
 30395                           	opt callstack 0
 30396  01B706                     _FVR_Initialize:
 30397                           	opt callstack 14
 30398                           
 30399                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30400                           
 30401                           ; BSR set to: 57
 30402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30403                           ;incstack = 0
 30404  01B706  0EAF               	movlw	175
 30405  01B708  013E               	movlb	62	; () banked
 30406  01B70A  6FC1               	movwf	193,b	;volatile
 30407                           
 30408                           ; BSR set to: 62
 30409                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30410  01B70C  0012               	return		;funcret
 30411  01B70E                     __end_of_FVR_Initialize:
 30412                           	opt callstack 0
 30413                           
 30414 ;; *************** function _EXT_INT_Initialize *****************
 30415 ;; Defined at:
 30416 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30417 ;; Parameters:    Size  Location     Type
 30418 ;;		None
 30419 ;; Auto vars:     Size  Location     Type
 30420 ;;		None
 30421 ;; Return value:  Size  Location     Type
 30422 ;;                  1  [STACK] void 
 30423 ;; Registers used:
 30424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30425 ;; Tracked objects:
 30426 ;;		On entry : 3F/39
 30427 ;;		On exit  : 3F/39
 30428 ;;		Unchanged: 0/0
 30429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30434 ;;Total ram usage:        0 bytes
 30435 ;; Hardware stack levels used:    1
 30436 ;; Hardware stack levels required when called:   16
 30437 ;; This function calls:
 30438 ;;		_INT0_SetInterruptHandler
 30439 ;;		_INT1_SetInterruptHandler
 30440 ;; This function is called by:
 30441 ;;		_SYSTEM_Initialize
 30442 ;; This function uses a reentrant model
 30443 ;;
 30444                           
 30445                           	psect	text127
 30446  01AEBA                     __ptext127:
 30447                           	opt callstack 0
 30448  01AEBA                     _EXT_INT_Initialize:
 30449                           	opt callstack 13
 30450                           
 30451                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30452                           
 30453                           ; BSR set to: 62
 30454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30455                           ;incstack = 0
 30456  01AEBA  0139               	movlb	57	; () banked
 30457  01AEBC  91A1               	bcf	161,0,b	;volatile
 30458                           
 30459                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30460  01AEBE  90D2               	bcf	210,0,c	;volatile
 30461                           
 30462                           ; BSR set to: 57
 30463                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30464  01AEC0  0E32               	movlw	low _INT0_DefaultInterruptHandler
 30465  01AEC2  6EE6               	movwf	postinc1,c
 30466  01AEC4  0EB7               	movlw	high _INT0_DefaultInterruptHandler
 30467  01AEC6  6EE6               	movwf	postinc1,c
 30468  01AEC8  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30469  01AECA  6EE6               	movwf	postinc1,c
 30470  01AECC  EC3B  F0D9         	call	_INT0_SetInterruptHandler	;wreg free
 30471                           
 30472                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30473  01AED0  0139               	movlb	57	; () banked
 30474  01AED2  8191               	bsf	145,0,b	;volatile
 30475                           
 30476                           ; BSR set to: 57
 30477                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30478  01AED4  91A5               	bcf	165,0,b	;volatile
 30479                           
 30480                           ; BSR set to: 57
 30481                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30482  01AED6  92D2               	bcf	210,1,c	;volatile
 30483                           
 30484                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30485  01AED8  0E2E               	movlw	low _INT1_DefaultInterruptHandler
 30486  01AEDA  6EE6               	movwf	postinc1,c
 30487  01AEDC  0EB7               	movlw	high _INT1_DefaultInterruptHandler
 30488  01AEDE  6EE6               	movwf	postinc1,c
 30489  01AEE0  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30490  01AEE2  6EE6               	movwf	postinc1,c
 30491  01AEE4  EC27  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
 30492                           
 30493                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30494  01AEE8  0139               	movlb	57	; () banked
 30495  01AEEA  8195               	bsf	149,0,b	;volatile
 30496                           
 30497                           ; BSR set to: 57
 30498                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30499  01AEEC  0012               	return		;funcret
 30500  01AEEE                     __end_of_EXT_INT_Initialize:
 30501                           	opt callstack 0
 30502                           
 30503 ;; *************** function _INT1_SetInterruptHandler *****************
 30504 ;; Defined at:
 30505 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30506 ;; Parameters:    Size  Location     Type
 30507 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30508 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30509 ;; Auto vars:     Size  Location     Type
 30510 ;;		None
 30511 ;; Return value:  Size  Location     Type
 30512 ;;                  1  [STACK] void 
 30513 ;; Registers used:
 30514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30515 ;; Tracked objects:
 30516 ;;		On entry : 3F/39
 30517 ;;		On exit  : 0/0
 30518 ;;		Unchanged: 0/0
 30519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30524 ;;Total ram usage:        0 bytes
 30525 ;; Hardware stack levels used:    1
 30526 ;; Hardware stack levels required when called:   15
 30527 ;; This function calls:
 30528 ;;		Nothing
 30529 ;; This function is called by:
 30530 ;;		_EXT_INT_Initialize
 30531 ;;		_start_switch_handler
 30532 ;; This function uses a reentrant model
 30533 ;;
 30534                           
 30535                           	psect	text128
 30536  01B24E                     __ptext128:
 30537                           	opt callstack 0
 30538  01B24E                     _INT1_SetInterruptHandler:
 30539                           	opt callstack 14
 30540                           
 30541                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30542                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30543                           
 30544                           ; BSR set to: 57
 30545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30546                           ;incstack = 0
 30547  01B24E  50E1               	movf	fsr1l,w,c
 30548  01B250  0FFD               	addlw	-3
 30549  01B252  6ED9               	movwf	fsr2l,c
 30550  01B254  50E2               	movf	fsr1h,w,c
 30551  01B256  6EDA               	movwf	fsr2h,c
 30552  01B258  0EFF               	movlw	255
 30553  01B25A  22DA               	addwfc	fsr2h,f,c
 30554  01B25C  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 30555  01B262  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 30556  01B268  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 30557                           
 30558                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30559  01B26E  52E5               	movf	postdec1,f,c
 30560  01B270  52E5               	movf	postdec1,f,c
 30561  01B272  52E5               	movf	postdec1,f,c
 30562  01B274  0012               	return		;funcret
 30563  01B276                     __end_of_INT1_SetInterruptHandler:
 30564                           	opt callstack 0
 30565                           
 30566 ;; *************** function _INT0_SetInterruptHandler *****************
 30567 ;; Defined at:
 30568 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30569 ;; Parameters:    Size  Location     Type
 30570 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30571 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30572 ;; Auto vars:     Size  Location     Type
 30573 ;;		None
 30574 ;; Return value:  Size  Location     Type
 30575 ;;                  1  [STACK] void 
 30576 ;; Registers used:
 30577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30578 ;; Tracked objects:
 30579 ;;		On entry : 3F/39
 30580 ;;		On exit  : 0/0
 30581 ;;		Unchanged: 0/0
 30582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30587 ;;Total ram usage:        0 bytes
 30588 ;; Hardware stack levels used:    1
 30589 ;; Hardware stack levels required when called:   15
 30590 ;; This function calls:
 30591 ;;		Nothing
 30592 ;; This function is called by:
 30593 ;;		_EXT_INT_Initialize
 30594 ;; This function uses a reentrant model
 30595 ;;
 30596                           
 30597                           	psect	text129
 30598  01B276                     __ptext129:
 30599                           	opt callstack 0
 30600  01B276                     _INT0_SetInterruptHandler:
 30601                           	opt callstack 13
 30602                           
 30603                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30604                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30605                           
 30606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30607                           ;incstack = 0
 30608  01B276  50E1               	movf	fsr1l,w,c
 30609  01B278  0FFD               	addlw	-3
 30610  01B27A  6ED9               	movwf	fsr2l,c
 30611  01B27C  50E2               	movf	fsr1h,w,c
 30612  01B27E  6EDA               	movwf	fsr2h,c
 30613  01B280  0EFF               	movlw	255
 30614  01B282  22DA               	addwfc	fsr2h,f,c
 30615  01B284  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 30616  01B28A  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 30617  01B290  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 30618                           
 30619                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30620  01B296  52E5               	movf	postdec1,f,c
 30621  01B298  52E5               	movf	postdec1,f,c
 30622  01B29A  52E5               	movf	postdec1,f,c
 30623  01B29C  0012               	return		;funcret
 30624  01B29E                     __end_of_INT0_SetInterruptHandler:
 30625                           	opt callstack 0
 30626                           
 30627 ;; *************** function _DMA2_Initialize *****************
 30628 ;; Defined at:
 30629 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30630 ;; Parameters:    Size  Location     Type
 30631 ;;		None
 30632 ;; Auto vars:     Size  Location     Type
 30633 ;;		None
 30634 ;; Return value:  Size  Location     Type
 30635 ;;                  1  [STACK] void 
 30636 ;; Registers used:
 30637 ;;		wreg, status,2
 30638 ;; Tracked objects:
 30639 ;;		On entry : 3F/3D
 30640 ;;		On exit  : 3F/3B
 30641 ;;		Unchanged: 0/0
 30642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30647 ;;Total ram usage:        0 bytes
 30648 ;; Hardware stack levels used:    1
 30649 ;; Hardware stack levels required when called:   15
 30650 ;; This function calls:
 30651 ;;		Nothing
 30652 ;; This function is called by:
 30653 ;;		_SYSTEM_Initialize
 30654 ;; This function uses a reentrant model
 30655 ;;
 30656                           
 30657                           	psect	text130
 30658  01A7C0                     __ptext130:
 30659                           	opt callstack 0
 30660  01A7C0                     _DMA2_Initialize:
 30661                           	opt callstack 14
 30662                           
 30663                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30664                           
 30665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30666                           ;incstack = 0
 30667  01A7C0  0E00               	movlw	0
 30668  01A7C2  013B               	movlb	59	; () banked
 30669  01A7C4  6FD9               	movwf	217,b	;volatile
 30670  01A7C6  0E10               	movlw	16
 30671  01A7C8  6FDA               	movwf	218,b	;volatile
 30672  01A7CA  0E00               	movlw	0
 30673  01A7CC  6FDB               	movwf	219,b	;volatile
 30674                           
 30675                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30676  01A7CE  0E3F               	movlw	63
 30677  01A7D0  6FD1               	movwf	209,b	;volatile
 30678  01A7D2  0EBB               	movlw	187
 30679  01A7D4  6FD0               	movwf	208,b	;volatile
 30680                           
 30681                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30682  01A7D6  0E03               	movlw	3
 30683  01A7D8  6FDD               	movwf	221,b	;volatile
 30684                           
 30685                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30686  01A7DA  0E00               	movlw	0
 30687  01A7DC  6FD8               	movwf	216,b	;volatile
 30688  01A7DE  0E01               	movlw	1
 30689  01A7E0  6FD7               	movwf	215,b	;volatile
 30690                           
 30691                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30692  01A7E2  0E00               	movlw	0
 30693  01A7E4  6FCF               	movwf	207,b	;volatile
 30694  01A7E6  0E01               	movlw	1
 30695  01A7E8  6FCE               	movwf	206,b	;volatile
 30696                           
 30697                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30698  01A7EA  0E1C               	movlw	28
 30699  01A7EC  6FDF               	movwf	223,b	;volatile
 30700                           
 30701                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30702  01A7EE  0E3D               	movlw	61
 30703  01A7F0  6FDE               	movwf	222,b	;volatile
 30704                           
 30705                           ; BSR set to: 59
 30706                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30707  01A7F2  0139               	movlb	57	; () banked
 30708  01A7F4  97A5               	bcf	165,3,b	;volatile
 30709                           
 30710                           ; BSR set to: 57
 30711                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30712  01A7F6  95A5               	bcf	165,2,b	;volatile
 30713                           
 30714                           ; BSR set to: 57
 30715                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30716  01A7F8  9BA5               	bcf	165,5,b	;volatile
 30717                           
 30718                           ; BSR set to: 57
 30719                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 30720  01A7FA  99A5               	bcf	165,4,b	;volatile
 30721                           
 30722                           ; BSR set to: 57
 30723                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 30724  01A7FC  9795               	bcf	149,3,b	;volatile
 30725                           
 30726                           ; BSR set to: 57
 30727                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 30728  01A7FE  9595               	bcf	149,2,b	;volatile
 30729                           
 30730                           ; BSR set to: 57
 30731                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 30732  01A800  9B95               	bcf	149,5,b	;volatile
 30733                           
 30734                           ; BSR set to: 57
 30735                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 30736  01A802  9995               	bcf	149,4,b	;volatile
 30737  01A804  9ED2               	bcf	16338,7,c	;# 
 30738  01A806  0139               	banksel	14831	;# 
 30739  01A808  0E55               	movlw	85	;# 
 30740  01A80A  6FEF               	movwf	14831,b	;# 
 30741  01A80C  0EAA               	movlw	170	;# 
 30742  01A80E  6FEF               	movwf	14831,b	;# 
 30743  01A810  81EF               	bsf	14831,0,b	;# 
 30744  01A812  8ED2               	bsf	16338,7,c	;# 
 30745                           
 30746                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 30747  01A814  013B               	movlb	59	; () banked
 30748  01A816  6BDC               	clrf	220,b	;volatile
 30749                           
 30750                           ; BSR set to: 59
 30751                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30752  01A818  0012               	return		;funcret
 30753  01A81A                     __end_of_DMA2_Initialize:
 30754                           	opt callstack 0
 30755                           
 30756 ;; *************** function _DMA1_Initialize *****************
 30757 ;; Defined at:
 30758 ;;		line 86 in file "mcc_generated_files/dma1.c"
 30759 ;; Parameters:    Size  Location     Type
 30760 ;;		None
 30761 ;; Auto vars:     Size  Location     Type
 30762 ;;		None
 30763 ;; Return value:  Size  Location     Type
 30764 ;;                  1  [STACK] void 
 30765 ;; Registers used:
 30766 ;;		wreg, status,2
 30767 ;; Tracked objects:
 30768 ;;		On entry : 3F/3B
 30769 ;;		On exit  : 3F/3B
 30770 ;;		Unchanged: 0/0
 30771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30776 ;;Total ram usage:        0 bytes
 30777 ;; Hardware stack levels used:    1
 30778 ;; Hardware stack levels required when called:   15
 30779 ;; This function calls:
 30780 ;;		Nothing
 30781 ;; This function is called by:
 30782 ;;		_SYSTEM_Initialize
 30783 ;; This function uses a reentrant model
 30784 ;;
 30785                           
 30786                           	psect	text131
 30787  01A43C                     __ptext131:
 30788                           	opt callstack 0
 30789  01A43C                     _DMA1_Initialize:
 30790                           	opt callstack 14
 30791                           
 30792                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 30793                           
 30794                           ; BSR set to: 59
 30795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30796                           ;incstack = 0
 30797  01A43C  0E00               	movlw	0
 30798  01A43E  013B               	movlb	59	; () banked
 30799  01A440  6FF9               	movwf	249,b	;volatile
 30800  01A442  0E10               	movlw	16
 30801  01A444  6FFA               	movwf	250,b	;volatile
 30802  01A446  0E00               	movlw	0
 30803  01A448  6FFB               	movwf	251,b	;volatile
 30804                           
 30805                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30806  01A44A  0E3D               	movlw	61
 30807  01A44C  6FF1               	movwf	241,b	;volatile
 30808  01A44E  0E11               	movlw	17
 30809  01A450  6FF0               	movwf	240,b	;volatile
 30810                           
 30811                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30812  01A452  0E03               	movlw	3
 30813  01A454  6FFD               	movwf	253,b	;volatile
 30814                           
 30815                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30816  01A456  0E00               	movlw	0
 30817  01A458  6FF8               	movwf	248,b	;volatile
 30818  01A45A  0E01               	movlw	1
 30819  01A45C  6FF7               	movwf	247,b	;volatile
 30820                           
 30821                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30822  01A45E  0E00               	movlw	0
 30823  01A460  6FEF               	movwf	239,b	;volatile
 30824  01A462  0E01               	movlw	1
 30825  01A464  6FEE               	movwf	238,b	;volatile
 30826                           
 30827                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30828  01A466  0E15               	movlw	21
 30829  01A468  6FFF               	movwf	255,b	;volatile
 30830                           
 30831                           ; BSR set to: 59
 30832                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30833  01A46A  6BFE               	clrf	254,b	;volatile
 30834                           
 30835                           ; BSR set to: 59
 30836                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30837  01A46C  0139               	movlb	57	; () banked
 30838  01A46E  93A2               	bcf	162,1,b	;volatile
 30839                           
 30840                           ; BSR set to: 57
 30841                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30842  01A470  91A2               	bcf	162,0,b	;volatile
 30843                           
 30844                           ; BSR set to: 57
 30845                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30846  01A472  97A2               	bcf	162,3,b	;volatile
 30847                           
 30848                           ; BSR set to: 57
 30849                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30850  01A474  95A2               	bcf	162,2,b	;volatile
 30851                           
 30852                           ; BSR set to: 57
 30853                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30854  01A476  8392               	bsf	146,1,b	;volatile
 30855                           
 30856                           ; BSR set to: 57
 30857                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30858  01A478  8192               	bsf	146,0,b	;volatile
 30859                           
 30860                           ; BSR set to: 57
 30861                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30862  01A47A  8792               	bsf	146,3,b	;volatile
 30863                           
 30864                           ; BSR set to: 57
 30865                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30866  01A47C  8592               	bsf	146,2,b	;volatile
 30867                           
 30868                           ; BSR set to: 57
 30869                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30870  01A47E  6BF1               	clrf	241,b	;volatile
 30871                           
 30872                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30873  01A480  0E01               	movlw	1
 30874  01A482  6FF2               	movwf	242,b	;volatile
 30875                           
 30876                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30877  01A484  0E04               	movlw	4
 30878  01A486  6FF3               	movwf	243,b	;volatile
 30879                           
 30880                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30881  01A488  0E02               	movlw	2
 30882  01A48A  6FF4               	movwf	244,b	;volatile
 30883                           
 30884                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30885  01A48C  0E03               	movlw	3
 30886  01A48E  6FF7               	movwf	247,b	;volatile
 30887  01A490  9ED2               	bcf	16338,7,c	;# 
 30888  01A492  0139               	banksel	14831	;# 
 30889  01A494  0E55               	movlw	85	;# 
 30890  01A496  6FEF               	movwf	14831,b	;# 
 30891  01A498  0EAA               	movlw	170	;# 
 30892  01A49A  6FEF               	movwf	14831,b	;# 
 30893  01A49C  81EF               	bsf	14831,0,b	;# 
 30894  01A49E  8ED2               	bsf	16338,7,c	;# 
 30895                           
 30896                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30897  01A4A0  013B               	movlb	59	; () banked
 30898  01A4A2  6BFC               	clrf	252,b	;volatile
 30899                           
 30900                           ; BSR set to: 59
 30901                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30902  01A4A4  0012               	return		;funcret
 30903  01A4A6                     __end_of_DMA1_Initialize:
 30904                           	opt callstack 0
 30905                           
 30906 ;; *************** function _CLKREF_Initialize *****************
 30907 ;; Defined at:
 30908 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30909 ;; Parameters:    Size  Location     Type
 30910 ;;		None
 30911 ;; Auto vars:     Size  Location     Type
 30912 ;;		None
 30913 ;; Return value:  Size  Location     Type
 30914 ;;                  1  [STACK] void 
 30915 ;; Registers used:
 30916 ;;		wreg, status,2
 30917 ;; Tracked objects:
 30918 ;;		On entry : 3F/3B
 30919 ;;		On exit  : 3F/3C
 30920 ;;		Unchanged: 0/0
 30921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30926 ;;Total ram usage:        0 bytes
 30927 ;; Hardware stack levels used:    1
 30928 ;; Hardware stack levels required when called:   15
 30929 ;; This function calls:
 30930 ;;		Nothing
 30931 ;; This function is called by:
 30932 ;;		_SYSTEM_Initialize
 30933 ;; This function uses a reentrant model
 30934 ;;
 30935                           
 30936                           	psect	text132
 30937  01B6AE                     __ptext132:
 30938                           	opt callstack 0
 30939  01B6AE                     _CLKREF_Initialize:
 30940                           	opt callstack 14
 30941                           
 30942                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30943                           
 30944                           ; BSR set to: 59
 30945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30946                           ;incstack = 0
 30947  01B6AE  013C               	movlb	60	; () banked
 30948  01B6B0  6BE6               	clrf	230,b	;volatile
 30949                           
 30950                           ; BSR set to: 60
 30951                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30952  01B6B2  0E94               	movlw	148
 30953  01B6B4  6FE5               	movwf	229,b	;volatile
 30954                           
 30955                           ; BSR set to: 60
 30956                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30957  01B6B6  0012               	return		;funcret
 30958  01B6B8                     __end_of_CLKREF_Initialize:
 30959                           	opt callstack 0
 30960                           
 30961 ;; *************** function _ADCC_Initialize *****************
 30962 ;; Defined at:
 30963 ;;		line 65 in file "mcc_generated_files/adcc.c"
 30964 ;; Parameters:    Size  Location     Type
 30965 ;;		None
 30966 ;; Auto vars:     Size  Location     Type
 30967 ;;		None
 30968 ;; Return value:  Size  Location     Type
 30969 ;;                  1  [STACK] void 
 30970 ;; Registers used:
 30971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30972 ;; Tracked objects:
 30973 ;;		On entry : 3F/3E
 30974 ;;		On exit  : 0/0
 30975 ;;		Unchanged: 0/0
 30976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30981 ;;Total ram usage:        0 bytes
 30982 ;; Hardware stack levels used:    1
 30983 ;; Hardware stack levels required when called:   16
 30984 ;; This function calls:
 30985 ;;		_ADCC_SetADIInterruptHandler
 30986 ;;		_ADCC_SetADTIInterruptHandler
 30987 ;; This function is called by:
 30988 ;;		_SYSTEM_Initialize
 30989 ;; This function uses a reentrant model
 30990 ;;
 30991                           
 30992                           	psect	text133
 30993  01A4A6                     __ptext133:
 30994                           	opt callstack 0
 30995  01A4A6                     _ADCC_Initialize:
 30996                           	opt callstack 13
 30997                           
 30998                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 30999                           
 31000                           ; BSR set to: 60
 31001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31002                           ;incstack = 0
 31003  01A4A6  013E               	movlb	62	; () banked
 31004  01A4A8  6BDE               	clrf	222,b	;volatile
 31005                           
 31006                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31007  01A4AA  6BDF               	clrf	223,b	;volatile
 31008                           
 31009                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31010  01A4AC  6BE0               	clrf	224,b	;volatile
 31011                           
 31012                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31013  01A4AE  6BE1               	clrf	225,b	;volatile
 31014                           
 31015                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31016  01A4B0  6BE4               	clrf	228,b	;volatile
 31017                           
 31018                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31019  01A4B2  6BE5               	clrf	229,b	;volatile
 31020                           
 31021                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31022  01A4B4  6BEA               	clrf	234,b	;volatile
 31023                           
 31024                           ; BSR set to: 62
 31025                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31026  01A4B6  0E40               	movlw	64
 31027  01A4B8  6FEC               	movwf	236,b	;volatile
 31028                           
 31029                           ; BSR set to: 62
 31030                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31031  01A4BA  6BF1               	clrf	241,b	;volatile
 31032                           
 31033                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31034  01A4BC  0E20               	movlw	32
 31035  01A4BE  6FF3               	movwf	243,b	;volatile
 31036                           
 31037                           ; BSR set to: 62
 31038                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31039  01A4C0  6BF4               	clrf	244,b	;volatile
 31040                           
 31041                           ; BSR set to: 62
 31042                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31043  01A4C2  6BF5               	clrf	245,b	;volatile
 31044                           
 31045                           ; BSR set to: 62
 31046                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31047  01A4C4  6BF6               	clrf	246,b	;volatile
 31048                           
 31049                           ; BSR set to: 62
 31050                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31051  01A4C6  6BF7               	clrf	247,b	;volatile
 31052                           
 31053                           ; BSR set to: 62
 31054                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31055  01A4C8  6BF9               	clrf	249,b	;volatile
 31056                           
 31057                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31058  01A4CA  0E5B               	movlw	91
 31059  01A4CC  6FFA               	movwf	250,b	;volatile
 31060                           
 31061                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31062  01A4CE  0E27               	movlw	39
 31063  01A4D0  6FFB               	movwf	251,b	;volatile
 31064                           
 31065                           ; BSR set to: 62
 31066                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31067  01A4D2  6BFC               	clrf	252,b	;volatile
 31068                           
 31069                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31070  01A4D4  0E02               	movlw	2
 31071  01A4D6  6FFD               	movwf	253,b	;volatile
 31072                           
 31073                           ; BSR set to: 62
 31074                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31075  01A4D8  6BFE               	clrf	254,b	;volatile
 31076                           
 31077                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31078  01A4DA  0E07               	movlw	7
 31079  01A4DC  6FFF               	movwf	255,b	;volatile
 31080                           
 31081                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31082  01A4DE  0E84               	movlw	132
 31083  01A4E0  6FF8               	movwf	248,b	;volatile
 31084                           
 31085                           ; BSR set to: 62
 31086                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31087  01A4E2  0139               	movlb	57	; () banked
 31088  01A4E4  95A1               	bcf	161,2,b	;volatile
 31089                           
 31090                           ; BSR set to: 57
 31091                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31092  01A4E6  8591               	bsf	145,2,b	;volatile
 31093                           
 31094                           ; BSR set to: 57
 31095                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31096  01A4E8  0E34               	movlw	low _ADCC_DefaultInterruptHandler
 31097  01A4EA  6EE6               	movwf	postinc1,c
 31098  01A4EC  0EB7               	movlw	high _ADCC_DefaultInterruptHandler
 31099  01A4EE  6EE6               	movwf	postinc1,c
 31100  01A4F0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31101  01A4F2  6EE6               	movwf	postinc1,c
 31102  01A4F4  EC63  F0D9         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31103                           
 31104                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31105  01A4F8  0139               	movlb	57	; () banked
 31106  01A4FA  97A1               	bcf	161,3,b	;volatile
 31107                           
 31108                           ; BSR set to: 57
 31109                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31110  01A4FC  8791               	bsf	145,3,b	;volatile
 31111                           
 31112                           ; BSR set to: 57
 31113                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31114  01A4FE  0E34               	movlw	low _ADCC_DefaultInterruptHandler
 31115  01A500  6EE6               	movwf	postinc1,c
 31116  01A502  0EB7               	movlw	high _ADCC_DefaultInterruptHandler
 31117  01A504  6EE6               	movwf	postinc1,c
 31118  01A506  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31119  01A508  6EE6               	movwf	postinc1,c
 31120  01A50A  EC4F  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31121                           
 31122                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31123  01A50E  0012               	return		;funcret
 31124  01A510                     __end_of_ADCC_Initialize:
 31125                           	opt callstack 0
 31126                           
 31127 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31128 ;; Defined at:
 31129 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31130 ;; Parameters:    Size  Location     Type
 31131 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31132 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31133 ;; Auto vars:     Size  Location     Type
 31134 ;;		None
 31135 ;; Return value:  Size  Location     Type
 31136 ;;                  1  [STACK] void 
 31137 ;; Registers used:
 31138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31139 ;; Tracked objects:
 31140 ;;		On entry : 0/0
 31141 ;;		On exit  : 0/0
 31142 ;;		Unchanged: 0/0
 31143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31148 ;;Total ram usage:        0 bytes
 31149 ;; Hardware stack levels used:    1
 31150 ;; Hardware stack levels required when called:   15
 31151 ;; This function calls:
 31152 ;;		Nothing
 31153 ;; This function is called by:
 31154 ;;		_ADCC_Initialize
 31155 ;;		_start_adc_scan
 31156 ;; This function uses a reentrant model
 31157 ;;
 31158                           
 31159                           	psect	text134
 31160  01B29E                     __ptext134:
 31161                           	opt callstack 0
 31162  01B29E                     _ADCC_SetADTIInterruptHandler:
 31163                           	opt callstack 14
 31164                           
 31165                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31166                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31167                           
 31168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31169                           ;incstack = 0
 31170  01B29E  50E1               	movf	fsr1l,w,c
 31171  01B2A0  0FFD               	addlw	-3
 31172  01B2A2  6ED9               	movwf	fsr2l,c
 31173  01B2A4  50E2               	movf	fsr1h,w,c
 31174  01B2A6  6EDA               	movwf	fsr2h,c
 31175  01B2A8  0EFF               	movlw	255
 31176  01B2AA  22DA               	addwfc	fsr2h,f,c
 31177  01B2AC  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31178  01B2B2  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31179  01B2B8  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31180                           
 31181                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31182  01B2BE  52E5               	movf	postdec1,f,c
 31183  01B2C0  52E5               	movf	postdec1,f,c
 31184  01B2C2  52E5               	movf	postdec1,f,c
 31185  01B2C4  0012               	return		;funcret
 31186  01B2C6                     __end_of_ADCC_SetADTIInterruptHandler:
 31187                           	opt callstack 0
 31188                           
 31189 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31190 ;; Defined at:
 31191 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31192 ;; Parameters:    Size  Location     Type
 31193 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31194 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31195 ;; Auto vars:     Size  Location     Type
 31196 ;;		None
 31197 ;; Return value:  Size  Location     Type
 31198 ;;                  1  [STACK] void 
 31199 ;; Registers used:
 31200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31201 ;; Tracked objects:
 31202 ;;		On entry : 6/0
 31203 ;;		On exit  : 0/0
 31204 ;;		Unchanged: 0/0
 31205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31210 ;;Total ram usage:        0 bytes
 31211 ;; Hardware stack levels used:    1
 31212 ;; Hardware stack levels required when called:   15
 31213 ;; This function calls:
 31214 ;;		Nothing
 31215 ;; This function is called by:
 31216 ;;		_ADCC_Initialize
 31217 ;;		_start_adc_scan
 31218 ;; This function uses a reentrant model
 31219 ;;
 31220                           
 31221                           	psect	text135
 31222  01B2C6                     __ptext135:
 31223                           	opt callstack 0
 31224  01B2C6                     _ADCC_SetADIInterruptHandler:
 31225                           	opt callstack 14
 31226                           
 31227                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31228                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31229                           
 31230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31231                           ;incstack = 0
 31232  01B2C6  50E1               	movf	fsr1l,w,c
 31233  01B2C8  0FFD               	addlw	-3
 31234  01B2CA  6ED9               	movwf	fsr2l,c
 31235  01B2CC  50E2               	movf	fsr1h,w,c
 31236  01B2CE  6EDA               	movwf	fsr2h,c
 31237  01B2D0  0EFF               	movlw	255
 31238  01B2D2  22DA               	addwfc	fsr2h,f,c
 31239  01B2D4  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31240  01B2DA  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31241  01B2E0  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31242                           
 31243                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31244  01B2E6  52E5               	movf	postdec1,f,c
 31245  01B2E8  52E5               	movf	postdec1,f,c
 31246  01B2EA  52E5               	movf	postdec1,f,c
 31247  01B2EC  0012               	return		;funcret
 31248  01B2EE                     __end_of_ADCC_SetADIInterruptHandler:
 31249                           	opt callstack 0
 31250                           
 31251 ;; *************** function _INT1_ISR *****************
 31252 ;; Defined at:
 31253 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31254 ;; Parameters:    Size  Location     Type
 31255 ;;		None
 31256 ;; Auto vars:     Size  Location     Type
 31257 ;;		None
 31258 ;; Return value:  Size  Location     Type
 31259 ;;                  1    wreg      void 
 31260 ;; Registers used:
 31261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31262 ;; Tracked objects:
 31263 ;;		On entry : 0/0
 31264 ;;		On exit  : 0/0
 31265 ;;		Unchanged: 0/0
 31266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31269 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31270 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31271 ;;Total ram usage:        4 bytes
 31272 ;; Hardware stack levels used:    1
 31273 ;; Hardware stack levels required when called:    5
 31274 ;; This function calls:
 31275 ;;		_INT1_CallBack
 31276 ;; This function is called by:
 31277 ;;		Interrupt level 1
 31278 ;; This function uses a non-reentrant model
 31279 ;;
 31280                           
 31281                           	psect	text136
 31282  01AD34                     __ptext136:
 31283                           	opt callstack 0
 31284  01AD34                     _INT1_ISR:
 31285                           	opt callstack 12
 31286                           
 31287                           ;incstack = 0
 31288  01AD34  006F FF60  F007    	movff	status,??_INT1_ISR
 31289  01AD3A  0060  F0A0  F008   	movff	btemp,??_INT1_ISR+1
 31290  01AD40  0060  F0C8  F009   	movff	btemp+10,??_INT1_ISR+2
 31291  01AD46  0060  F0CC  F00A   	movff	btemp+11,??_INT1_ISR+3
 31292  01AD4C  EE16  F0A1         	lfsr	1,___intlo_sp
 31293                           
 31294                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31295  01AD50  0139               	movlb	57	; () banked
 31296  01AD52  91A5               	bcf	165,0,b	;volatile
 31297                           
 31298                           ; BSR set to: 57
 31299                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31300  01AD54  ECD8  F0D9         	call	_INT1_CallBack	;wreg free
 31301  01AD58  0060  F028  F033   	movff	??_INT1_ISR+3,btemp+11
 31302  01AD5E  0060  F024  F032   	movff	??_INT1_ISR+2,btemp+10
 31303  01AD64  0060  F020  F028   	movff	??_INT1_ISR+1,btemp
 31304  01AD6A  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 31305  01AD70  0011               	retfie		f
 31306  01AD72                     __end_of_INT1_ISR:
 31307                           	opt callstack 0
 31308                           
 31309 ;; *************** function _INT1_CallBack *****************
 31310 ;; Defined at:
 31311 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31312 ;; Parameters:    Size  Location     Type
 31313 ;;		None
 31314 ;; Auto vars:     Size  Location     Type
 31315 ;;		None
 31316 ;; Return value:  Size  Location     Type
 31317 ;;                  1  [STACK] void 
 31318 ;; Registers used:
 31319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31320 ;; Tracked objects:
 31321 ;;		On entry : 3F/39
 31322 ;;		On exit  : 0/0
 31323 ;;		Unchanged: 0/0
 31324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31329 ;;Total ram usage:        0 bytes
 31330 ;; Hardware stack levels used:    1
 31331 ;; Hardware stack levels required when called:    4
 31332 ;; This function calls:
 31333 ;;		Absolute function
 31334 ;;		_INT1_DefaultInterruptHandler
 31335 ;;		_switch_handler
 31336 ;; This function is called by:
 31337 ;;		_INT1_ISR
 31338 ;; This function uses a reentrant model
 31339 ;;
 31340                           
 31341                           	psect	text137
 31342  01B3B0                     __ptext137:
 31343                           	opt callstack 0
 31344  01B3B0                     _INT1_CallBack:
 31345                           	opt callstack 12
 31346                           
 31347                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31348                           
 31349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31350                           ;incstack = 0
 31351  01B3B0  0100               	movlb	0	; () banked
 31352  01B3B2  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31353  01B3B4  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31354  01B3B6  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31355  01B3B8  B4D8               	btfsc	status,2,c
 31356  01B3BA  0012               	return	
 31357                           
 31358                           ; BSR set to: 0
 31359                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31360  01B3BC  D801               	call	u961_28
 31361  01B3BE  0012               	return	
 31362  01B3C0                     u961_28:
 31363  01B3C0  0005               	push	
 31364  01B3C2  6EFA               	movwf	pclath,c
 31365  01B3C4  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31366  01B3C6  6EFD               	movwf	tosl,c
 31367  01B3C8  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31368  01B3CA  6EFE               	movwf	tosh,c
 31369  01B3CC  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31370  01B3CE  6EFF               	movwf	tosu,c
 31371  01B3D0  50FA               	movf	pclath,w,c
 31372  01B3D2  0012               	return		;indir
 31373  01B3D4                     __end_of_INT1_CallBack:
 31374                           	opt callstack 0
 31375                           
 31376 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31377 ;; Defined at:
 31378 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31379 ;; Parameters:    Size  Location     Type
 31380 ;;		None
 31381 ;; Auto vars:     Size  Location     Type
 31382 ;;		None
 31383 ;; Return value:  Size  Location     Type
 31384 ;;                  1  [STACK] void 
 31385 ;; Registers used:
 31386 ;;		None
 31387 ;; Tracked objects:
 31388 ;;		On entry : 3F/0
 31389 ;;		On exit  : 0/0
 31390 ;;		Unchanged: 0/0
 31391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31396 ;;Total ram usage:        0 bytes
 31397 ;; Hardware stack levels used:    1
 31398 ;; Hardware stack levels required when called:    3
 31399 ;; This function calls:
 31400 ;;		Nothing
 31401 ;; This function is called by:
 31402 ;;		_EXT_INT_Initialize
 31403 ;;		_INT1_CallBack
 31404 ;; This function uses a reentrant model
 31405 ;;
 31406                           
 31407                           	psect	text138
 31408  01B72E                     __ptext138:
 31409                           	opt callstack 0
 31410  01B72E                     _INT1_DefaultInterruptHandler:
 31411                           	opt callstack 12
 31412                           
 31413                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31414                           
 31415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31416                           ;incstack = 0
 31417  01B72E  0012               	return		;funcret
 31418  01B730                     __end_of_INT1_DefaultInterruptHandler:
 31419                           	opt callstack 0
 31420                           
 31421 ;; *************** function _switch_handler *****************
 31422 ;; Defined at:
 31423 ;;		line 58 in file "dio.c"
 31424 ;; Parameters:    Size  Location     Type
 31425 ;;		None
 31426 ;; Auto vars:     Size  Location     Type
 31427 ;;  i               1  [STACK] unsigned char 
 31428 ;;  sw_value        1  [STACK] unsigned char 
 31429 ;; Return value:  Size  Location     Type
 31430 ;;                  1  [STACK] void 
 31431 ;; Registers used:
 31432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31433 ;; Tracked objects:
 31434 ;;		On entry : 3F/0
 31435 ;;		On exit  : 0/0
 31436 ;;		Unchanged: 0/0
 31437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31442 ;;Total ram usage:        0 bytes
 31443 ;; Hardware stack levels used:    1
 31444 ;; Hardware stack levels required when called:    3
 31445 ;; This function calls:
 31446 ;;		Nothing
 31447 ;; This function is called by:
 31448 ;;		_start_switch_handler
 31449 ;;		_INT1_CallBack
 31450 ;; This function uses a reentrant model
 31451 ;;
 31452                           
 31453                           	psect	text139
 31454  018C44                     __ptext139:
 31455                           	opt callstack 0
 31456  018C44                     _switch_handler:
 31457                           	opt callstack 0
 31458                           
 31459                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31460  018C44  52E6               	movf	postinc1,f,c
 31461  018C46  52E6               	movf	postinc1,f,c
 31462                           
 31463                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31464                           ;stkvar	_i @ sp[(-2)+0]
 31465                           
 31466                           ;incstack = 0
 31467  018C48  0EFE               	movlw	-2
 31468  018C4A  6AE3               	clrf	plusw1,c
 31469  018C4C  9EBD               	bcf	189,7,c	;volatile
 31470  018C4E  9ABF               	bcf	191,5,c	;volatile
 31471                           
 31472                           ;dio.c: 73:  __nop();
 31473  018C50  F000               	nop	
 31474                           
 31475                           ;dio.c: 74:  __nop();
 31476  018C52  F000               	nop	
 31477                           
 31478                           ;dio.c: 75:  __nop();
 31479  018C54  F000               	nop	
 31480  018C56  D019               	goto	l10244
 31481  018C58                     l10232:
 31482                           
 31483                           ;dio.c: 80:    sw_value = PORTFbits.RF3;
 31484  018C58  A6CF               	btfss	207,3,c	;volatile
 31485  018C5A  D011               	goto	u935_20
 31486  018C5C  D00D               	goto	u935_21
 31487  018C5E                     u932_28:
 31488                           
 31489                           ;stkvar	_sw_value @ sp[(-2)+1]
 31490  018C5E  0EFF               	movlw	-1
 31491  018C60  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 31492                           
 31493                           ;dio.c: 81:    break;
 31494  018C66  D027               	goto	l10246
 31495  018C68                     l10234:
 31496                           
 31497                           ;dio.c: 83:    sw_value = PORTFbits.RF2;
 31498  018C68  A4CF               	btfss	207,2,c	;volatile
 31499  018C6A  D009               	goto	u935_20
 31500  018C6C  D005               	goto	u935_21
 31501  018C6E                     l10236:
 31502                           
 31503                           ;dio.c: 86:    sw_value = PORTFbits.RF1;
 31504  018C6E  A2CF               	btfss	207,1,c	;volatile
 31505  018C70  D006               	goto	u935_20
 31506  018C72  D002               	goto	u935_21
 31507  018C74                     l10238:
 31508                           
 31509                           ;dio.c: 89:    sw_value = PORTFbits.RF0;
 31510  018C74  A0CF               	btfss	207,0,c	;volatile
 31511  018C76  D003               	goto	u935_20
 31512  018C78                     u935_21:
 31513  018C78  6A33               	clrf	(btemp+11)^0,c
 31514  018C7A  2A33               	incf	(btemp+11)^0,f,c
 31515  018C7C  D7F0               	goto	u932_28
 31516  018C7E                     u935_20:
 31517  018C7E  6A33               	clrf	(btemp+11)^0,c
 31518  018C80  D7EE               	goto	u932_28
 31519  018C82                     l10240:
 31520                           
 31521                           ;dio.c: 92:    sw_value = 1;
 31522                           ;stkvar	_sw_value @ sp[(-2)+1]
 31523  018C82  0EFF               	movlw	-1
 31524  018C84  6AE3               	clrf	plusw1,c
 31525  018C86  2AE3               	incf	plusw1,f,c
 31526                           
 31527                           ;dio.c: 93:    break;
 31528  018C88  D016               	goto	l10246
 31529  018C8A                     l10244:
 31530                           
 31531                           ;stkvar	_i @ sp[(-2)+0]
 31532  018C8A  0EFE               	movlw	-2
 31533  018C8C  50E3               	movf	plusw1,w,c
 31534  018C8E  6E32               	movwf	(btemp+10)^0,c
 31535  018C90  6A33               	clrf	(btemp+11)^0,c
 31536                           
 31537                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31538                           ; Switch size 1, requested type "simple"
 31539                           ; Number of cases is 1, Range of values is 0 to 0
 31540                           ; switch strategies available:
 31541                           ; Name         Instructions Cycles
 31542                           ; simple_byte            4     3 (average)
 31543                           ;	Chosen strategy is simple_byte
 31544  018C92  5033               	movf	(btemp+11)^0,w,c
 31545  018C94  0A00               	xorlw	0	; case 0
 31546  018C96  A4D8               	btfss	status,2,c
 31547  018C98  D7F4               	goto	l10240
 31548                           
 31549                           ; Switch size 1, requested type "simple"
 31550                           ; Number of cases is 4, Range of values is 0 to 3
 31551                           ; switch strategies available:
 31552                           ; Name         Instructions Cycles
 31553                           ; simple_byte           13     7 (average)
 31554                           ;	Chosen strategy is simple_byte
 31555  018C9A  5032               	movf	(btemp+10)^0,w,c
 31556  018C9C  0A00               	xorlw	0	; case 0
 31557  018C9E  B4D8               	btfsc	status,2,c
 31558  018CA0  D7E9               	goto	l10238
 31559  018CA2  0A01               	xorlw	1	; case 1
 31560  018CA4  B4D8               	btfsc	status,2,c
 31561  018CA6  D7E3               	goto	l10236
 31562  018CA8  0A03               	xorlw	3	; case 2
 31563  018CAA  B4D8               	btfsc	status,2,c
 31564  018CAC  D7DD               	goto	l10234
 31565  018CAE  0A01               	xorlw	1	; case 3
 31566  018CB0  B4D8               	btfsc	status,2,c
 31567  018CB2  D7D2               	goto	l10232
 31568  018CB4  D7E6               	goto	l10240
 31569  018CB6                     l10246:
 31570                           
 31571                           ;dio.c: 97:   if (sw_value) {
 31572                           ;stkvar	_sw_value @ sp[(-2)+1]
 31573  018CB6  0EFF               	movlw	-1
 31574  018CB8  50E3               	movf	plusw1,w,c
 31575  018CBA  B4D8               	btfsc	status,2,c
 31576  018CBC  D018               	goto	l10252
 31577                           
 31578                           ;dio.c: 98:    if (S.button[i].sw == SW_ON) {
 31579                           ;stkvar	_i @ sp[(-2)+0]
 31580  018CBE  0EFE               	movlw	-2
 31581  018CC0  50E3               	movf	plusw1,w,c
 31582  018CC2  0D05               	mullw	5
 31583  018CC4  0EBE               	movlw	low _S
 31584  018CC6  24F3               	addwf	243,w,c
 31585  018CC8  6ED9               	movwf	fsr2l,c
 31586  018CCA  0E02               	movlw	high _S
 31587  018CCC  20F4               	addwfc	prodh,w,c
 31588  018CCE  6EDA               	movwf	fsr2h,c
 31589  018CD0  04DE               	decf	postinc2,w,c
 31590  018CD2  A4D8               	btfss	status,2,c
 31591  018CD4  D049               	goto	l10260
 31592                           
 31593                           ;dio.c: 99:     S.button[i].sw = SW_OFF;
 31594                           ;stkvar	_i @ sp[(-2)+0]
 31595  018CD6  0EFE               	movlw	-2
 31596  018CD8  50E3               	movf	plusw1,w,c
 31597  018CDA  0D05               	mullw	5
 31598  018CDC  0EBE               	movlw	low _S
 31599  018CDE  24F3               	addwf	243,w,c
 31600  018CE0  6ED9               	movwf	fsr2l,c
 31601  018CE2  0E02               	movlw	high _S
 31602  018CE4  20F4               	addwfc	prodh,w,c
 31603  018CE6  6EDA               	movwf	fsr2h,c
 31604  018CE8  0E00               	movlw	0
 31605  018CEA  6EDF               	movwf	indf2,c
 31606  018CEC  D03D               	goto	l10260
 31607  018CEE                     l10252:
 31608                           
 31609                           ;dio.c: 102:    if (S.button[i].sw == SW_OFF) {
 31610                           ;stkvar	_i @ sp[(-2)+0]
 31611  018CEE  0EFE               	movlw	-2
 31612  018CF0  50E3               	movf	plusw1,w,c
 31613  018CF2  0D05               	mullw	5
 31614  018CF4  0EBE               	movlw	low _S
 31615  018CF6  24F3               	addwf	243,w,c
 31616  018CF8  6ED9               	movwf	fsr2l,c
 31617  018CFA  0E02               	movlw	high _S
 31618  018CFC  20F4               	addwfc	prodh,w,c
 31619  018CFE  6EDA               	movwf	fsr2h,c
 31620  018D00  50DF               	movf	indf2,w,c
 31621  018D02  A4D8               	btfss	status,2,c
 31622  018D04  D031               	goto	l10260
 31623                           
 31624                           ;dio.c: 103:     S.button[i].sw = SW_ON;
 31625                           ;stkvar	_i @ sp[(-2)+0]
 31626  018D06  0EFE               	movlw	-2
 31627  018D08  50E3               	movf	plusw1,w,c
 31628  018D0A  0D05               	mullw	5
 31629  018D0C  0EBE               	movlw	low _S
 31630  018D0E  24F3               	addwf	243,w,c
 31631  018D10  6ED9               	movwf	fsr2l,c
 31632  018D12  0E02               	movlw	high _S
 31633  018D14  20F4               	addwfc	prodh,w,c
 31634  018D16  6EDA               	movwf	fsr2h,c
 31635  018D18  0E01               	movlw	1
 31636  018D1A  6EDF               	movwf	indf2,c
 31637                           
 31638                           ;dio.c: 104:     S.button[i].count = V.timerint_count;
 31639  018D1C  EE20  F2BA         	lfsr	2,_V+186	;volatile
 31640                           
 31641                           ;stkvar	_i @ sp[(-2)+0]
 31642  018D20  0EFE               	movlw	-2
 31643  018D22  50E3               	movf	plusw1,w,c
 31644  018D24  0D05               	mullw	5
 31645  018D26  0EBF               	movlw	low (_S+1)
 31646  018D28  24F3               	addwf	243,w,c
 31647  018D2A  6EE9               	movwf	fsr0l,c
 31648  018D2C  0E02               	movlw	high (_S+1)
 31649  018D2E  20F4               	addwfc	prodh,w,c
 31650  018D30  6EEA               	movwf	fsr0h,c
 31651  018D32  006F FF7B FFEE     	movff	postinc2,postinc0
 31652  018D38  006F FF7B FFEE     	movff	postinc2,postinc0
 31653  018D3E  006F FF7B FFEE     	movff	postinc2,postinc0
 31654  018D44  006F FF7B FFEE     	movff	postinc2,postinc0
 31655                           
 31656                           ;dio.c: 105:     S.sw_bitmap |= 1 << i;
 31657                           ;stkvar	_i @ sp[(-2)+0]
 31658  018D4A  0EFE               	movlw	-2
 31659  018D4C  006F FF8C  F033    	movff	plusw1,btemp+11
 31660  018D52  0E01               	movlw	1
 31661  018D54  6E32               	movwf	(btemp+10)^0,c
 31662  018D56  2A33               	incf	(btemp+11)^0,f,c
 31663  018D58  D002               	goto	u939_24
 31664  018D5A                     u939_25:
 31665  018D5A  90D8               	bcf	status,0,c
 31666  018D5C  3632               	rlcf	(btemp+10)^0,f,c
 31667  018D5E                     u939_24:
 31668  018D5E  2E33               	decfsz	(btemp+11)^0,f,c
 31669  018D60  D7FC               	goto	u939_25
 31670  018D62  5032               	movf	(btemp+10)^0,w,c
 31671  018D64  0102               	movlb	2	; () banked
 31672  018D66  13E6               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31673  018D68                     l10260:
 31674                           
 31675                           ;dio.c: 108:  } while (++i < 4);
 31676                           ;stkvar	_i @ sp[(-2)+0]
 31677  018D68  0EFE               	movlw	-2
 31678  018D6A  2AE3               	incf	plusw1,f,c
 31679  018D6C  0EFE               	movlw	-2
 31680  018D6E  006F FF8C  F028    	movff	plusw1,btemp
 31681  018D74  0E03               	movlw	3
 31682  018D76  6428               	cpfsgt	btemp^0,c
 31683  018D78  D788               	goto	l10244
 31684                           
 31685                           ;dio.c: 117:  do { LATDbits.LATD7 = 1; } while(0);
 31686  018D7A  8EBD               	bsf	189,7,c	;volatile
 31687                           
 31688                           ;dio.c: 118:  do { LATFbits.LATF5 = 1; } while(0);
 31689  018D7C  8ABF               	bsf	191,5,c	;volatile
 31690                           
 31691                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31692  018D7E  52E5               	movf	postdec1,f,c
 31693  018D80  52E5               	movf	postdec1,f,c
 31694  018D82  0012               	return		;funcret
 31695  018D84                     __end_of_switch_handler:
 31696                           	opt callstack 0
 31697                           
 31698 ;; *************** function _TMR5_ISR *****************
 31699 ;; Defined at:
 31700 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 31701 ;; Parameters:    Size  Location     Type
 31702 ;;		None
 31703 ;; Auto vars:     Size  Location     Type
 31704 ;;		None
 31705 ;; Return value:  Size  Location     Type
 31706 ;;                  1    wreg      void 
 31707 ;; Registers used:
 31708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 31709 ;; Tracked objects:
 31710 ;;		On entry : 0/0
 31711 ;;		On exit  : 0/0
 31712 ;;		Unchanged: 0/0
 31713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31716 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31717 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31718 ;;Total ram usage:        4 bytes
 31719 ;; Hardware stack levels used:    1
 31720 ;; Hardware stack levels required when called:    5
 31721 ;; This function calls:
 31722 ;;		_TMR5_CallBack
 31723 ;;		_TMR5_WriteTimer
 31724 ;; This function is called by:
 31725 ;;		Interrupt level 1
 31726 ;; This function uses a non-reentrant model
 31727 ;;
 31728                           
 31729                           	psect	text140
 31730  01A81C                     __ptext140:
 31731                           	opt callstack 0
 31732  01A81C                     _TMR5_ISR:
 31733                           	opt callstack 12
 31734                           
 31735                           ;incstack = 0
 31736  01A81C  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 31737  01A822  0060  F0CC  F00E   	movff	btemp+11,??_TMR5_ISR+3
 31738  01A828  EE16  F0A1         	lfsr	1,___intlo_sp
 31739                           
 31740                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 31741  01A82C  0139               	movlb	57	; () banked
 31742  01A82E  9DA8               	bcf	168,6,b	;volatile
 31743                           
 31744                           ; BSR set to: 57
 31745                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 31746  01A830  0060  F143  FFE6   	movff	_timer5ReloadVal,postinc1
 31747  01A836  0060  F147  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31748  01A83C  EC59  F0D6         	call	_TMR5_WriteTimer	;wreg free
 31749                           
 31750                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 31751  01A840  0102               	movlb	2	; () banked
 31752  01A842  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
 31753  01A844  6E0B               	movwf	??_TMR5_ISR^0,c
 31754  01A846  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 31755  01A848  0E05               	movlw	5
 31756  01A84A  260B               	addwf	??_TMR5_ISR^0,f,c
 31757  01A84C  0E00               	movlw	0
 31758  01A84E  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 31759  01A850  4A4E               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31760  01A852  2A4F               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31761  01A854  500B               	movf	??_TMR5_ISR^0,w,c
 31762  01A856  5C4E               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31763  01A858  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 31764  01A85A  584F               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31765  01A85C  A0D8               	btfss	status,0,c
 31766  01A85E  D004               	goto	i1l1017
 31767                           
 31768                           ; BSR set to: 2
 31769                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 31770  01A860  ECEA  F0D9         	call	_TMR5_CallBack	;wreg free
 31771                           
 31772                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 31773  01A864  6A4E               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31774  01A866  6A4F               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31775  01A868                     i1l1017:
 31776  01A868  0060  F038  F033   	movff	??_TMR5_ISR+3,btemp+11
 31777  01A86E  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 31778  01A874  0011               	retfie		f
 31779  01A876                     __end_of_TMR5_ISR:
 31780                           	opt callstack 0
 31781                           
 31782 ;; *************** function _TMR5_WriteTimer *****************
 31783 ;; Defined at:
 31784 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 31785 ;; Parameters:    Size  Location     Type
 31786 ;;  timerVal        2  [STACK] unsigned short 
 31787 ;; Auto vars:     Size  Location     Type
 31788 ;;		None
 31789 ;; Return value:  Size  Location     Type
 31790 ;;                  1  [STACK] void 
 31791 ;; Registers used:
 31792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31793 ;; Tracked objects:
 31794 ;;		On entry : 3F/39
 31795 ;;		On exit  : 0/0
 31796 ;;		Unchanged: 0/0
 31797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31802 ;;Total ram usage:        0 bytes
 31803 ;; Hardware stack levels used:    1
 31804 ;; Hardware stack levels required when called:    3
 31805 ;; This function calls:
 31806 ;;		Nothing
 31807 ;; This function is called by:
 31808 ;;		_TMR5_ISR
 31809 ;; This function uses a reentrant model
 31810 ;;
 31811                           
 31812                           	psect	text141
 31813  01ACB2                     __ptext141:
 31814                           	opt callstack 0
 31815  01ACB2                     _TMR5_WriteTimer:
 31816                           	opt callstack 13
 31817                           
 31818                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 31819                           
 31820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31821                           ;incstack = 0
 31822  01ACB2  A49A               	btfss	154,2,c	;volatile
 31823  01ACB4  D00F               	goto	l10446
 31824                           
 31825                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 31826  01ACB6  909A               	bcf	154,0,c	;volatile
 31827                           
 31828                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 31829                           ;stkvar	_timerVal @ sp[(0)+-2]
 31830  01ACB8  0EFF               	movlw	255
 31831  01ACBA  24E1               	addwf	fsr1l,w,c
 31832  01ACBC  6ED9               	movwf	fsr2l,c
 31833  01ACBE  0EFF               	movlw	255
 31834  01ACC0  20E2               	addwfc	fsr1h,w,c
 31835  01ACC2  6EDA               	movwf	fsr2h,c
 31836  01ACC4  50DF               	movf	indf2,w,c
 31837  01ACC6  6E99               	movwf	153,c	;volatile
 31838                           
 31839                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 31840                           ;stkvar	_timerVal @ sp[(0)+-2]
 31841  01ACC8  0EFE               	movlw	-2
 31842  01ACCA  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31843                           
 31844                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 31845  01ACD0  809A               	bsf	154,0,c	;volatile
 31846                           
 31847                           ;mcc_generated_files/tmr5.c: 142:  } else {
 31848  01ACD2  D00C               	goto	l1000
 31849  01ACD4                     l10446:
 31850                           
 31851                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 31852                           ;stkvar	_timerVal @ sp[(0)+-2]
 31853  01ACD4  0EFF               	movlw	255
 31854  01ACD6  24E1               	addwf	fsr1l,w,c
 31855  01ACD8  6ED9               	movwf	fsr2l,c
 31856  01ACDA  0EFF               	movlw	255
 31857  01ACDC  20E2               	addwfc	fsr1h,w,c
 31858  01ACDE  6EDA               	movwf	fsr2h,c
 31859  01ACE0  50DF               	movf	indf2,w,c
 31860  01ACE2  6E99               	movwf	153,c	;volatile
 31861                           
 31862                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 31863                           ;stkvar	_timerVal @ sp[(0)+-2]
 31864  01ACE4  0EFE               	movlw	-2
 31865  01ACE6  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31866  01ACEC                     l1000:
 31867                           
 31868                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31869  01ACEC  52E5               	movf	postdec1,f,c
 31870  01ACEE  52E5               	movf	postdec1,f,c
 31871  01ACF0  0012               	return		;funcret
 31872  01ACF2                     __end_of_TMR5_WriteTimer:
 31873                           	opt callstack 0
 31874                           
 31875 ;; *************** function _TMR5_CallBack *****************
 31876 ;; Defined at:
 31877 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 31878 ;; Parameters:    Size  Location     Type
 31879 ;;		None
 31880 ;; Auto vars:     Size  Location     Type
 31881 ;;		None
 31882 ;; Return value:  Size  Location     Type
 31883 ;;                  1  [STACK] void 
 31884 ;; Registers used:
 31885 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 31886 ;; Tracked objects:
 31887 ;;		On entry : 3F/2
 31888 ;;		On exit  : 0/0
 31889 ;;		Unchanged: 0/0
 31890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31895 ;;Total ram usage:        0 bytes
 31896 ;; Hardware stack levels used:    1
 31897 ;; Hardware stack levels required when called:    4
 31898 ;; This function calls:
 31899 ;;		Absolute function
 31900 ;;		_TMR5_DefaultInterruptHandler
 31901 ;; This function is called by:
 31902 ;;		_TMR5_ISR
 31903 ;; This function uses a reentrant model
 31904 ;;
 31905                           
 31906                           	psect	text142
 31907  01B3D4                     __ptext142:
 31908                           	opt callstack 0
 31909  01B3D4                     _TMR5_CallBack:
 31910                           	opt callstack 12
 31911                           
 31912                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 31913                           
 31914                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31915                           ;incstack = 0
 31916  01B3D4  0100               	movlb	0	; () banked
 31917  01B3D6  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31918  01B3D8  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31919  01B3DA  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31920  01B3DC  B4D8               	btfsc	status,2,c
 31921  01B3DE  0012               	return	
 31922                           
 31923                           ; BSR set to: 0
 31924                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 31925  01B3E0  D801               	call	u970_28
 31926  01B3E2  0012               	return	
 31927  01B3E4                     u970_28:
 31928  01B3E4  0005               	push	
 31929  01B3E6  6EFA               	movwf	pclath,c
 31930  01B3E8  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31931  01B3EA  6EFD               	movwf	tosl,c
 31932  01B3EC  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31933  01B3EE  6EFE               	movwf	tosh,c
 31934  01B3F0  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31935  01B3F2  6EFF               	movwf	tosu,c
 31936  01B3F4  50FA               	movf	pclath,w,c
 31937  01B3F6  0012               	return		;indir
 31938  01B3F8                     __end_of_TMR5_CallBack:
 31939                           	opt callstack 0
 31940                           
 31941 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31942 ;; Defined at:
 31943 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 31944 ;; Parameters:    Size  Location     Type
 31945 ;;		None
 31946 ;; Auto vars:     Size  Location     Type
 31947 ;;		None
 31948 ;; Return value:  Size  Location     Type
 31949 ;;                  1  [STACK] void 
 31950 ;; Registers used:
 31951 ;;		wreg, status,2, status,0, btemp+11
 31952 ;; Tracked objects:
 31953 ;;		On entry : 3F/0
 31954 ;;		On exit  : 3F/2
 31955 ;;		Unchanged: 0/0
 31956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31961 ;;Total ram usage:        0 bytes
 31962 ;; Hardware stack levels used:    1
 31963 ;; Hardware stack levels required when called:    3
 31964 ;; This function calls:
 31965 ;;		Nothing
 31966 ;; This function is called by:
 31967 ;;		_TMR5_Initialize
 31968 ;;		_TMR5_CallBack
 31969 ;; This function uses a reentrant model
 31970 ;;
 31971                           
 31972                           	psect	text143
 31973  01AEEE                     __ptext143:
 31974                           	opt callstack 0
 31975  01AEEE                     _TMR5_DefaultInterruptHandler:
 31976                           	opt callstack 12
 31977                           
 31978                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 31979                           
 31980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31981                           ;incstack = 0
 31982  01AEEE  A0BE               	btfss	190,0,c	;volatile
 31983  01AEF0  D002               	goto	u904_20
 31984  01AEF2  0E01               	movlw	1
 31985  01AEF4  D001               	goto	u904_26
 31986  01AEF6                     u904_20:
 31987  01AEF6  0E00               	movlw	0
 31988  01AEF8                     u904_26:
 31989  01AEF8  0AFF               	xorlw	255
 31990  01AEFA  6E33               	movwf	(btemp+11)^0,c
 31991  01AEFC  50BE               	movf	190,w,c	;volatile
 31992  01AEFE  1833               	xorwf	(btemp+11)^0,w,c
 31993  01AF00  0BFE               	andlw	-2
 31994  01AF02  1833               	xorwf	(btemp+11)^0,w,c
 31995  01AF04  6EBE               	movwf	190,c	;volatile
 31996                           
 31997                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 31998  01AF06  0E01               	movlw	1
 31999  01AF08  0102               	movlb	2	; () banked
 32000  01AF0A  27BA               	addwf	(_V+186)& (0+255),f,b	;volatile
 32001  01AF0C  0E00               	movlw	0
 32002  01AF0E  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 32003  01AF10  23BC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32004  01AF12  23BD               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32005                           
 32006                           ; BSR set to: 2
 32007                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 32008  01AF14  0E01               	movlw	1
 32009  01AF16  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 32010  01AF18  0E00               	movlw	0
 32011  01AF1A  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32012  01AF1C  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32013  01AF1E  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32014                           
 32015                           ; BSR set to: 2
 32016                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32017  01AF20  0012               	return		;funcret
 32018  01AF22                     __end_of_TMR5_DefaultInterruptHandler:
 32019                           	opt callstack 0
 32020                           
 32021 ;; *************** function _TMR3_ISR *****************
 32022 ;; Defined at:
 32023 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32024 ;; Parameters:    Size  Location     Type
 32025 ;;		None
 32026 ;; Auto vars:     Size  Location     Type
 32027 ;;		None
 32028 ;; Return value:  Size  Location     Type
 32029 ;;                  1    wreg      void 
 32030 ;; Registers used:
 32031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32032 ;; Tracked objects:
 32033 ;;		On entry : 0/0
 32034 ;;		On exit  : 3F/0
 32035 ;;		Unchanged: 0/0
 32036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32039 ;;      Temps:         25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32040 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32041 ;;Total ram usage:       25 bytes
 32042 ;; Hardware stack levels used:    1
 32043 ;; Hardware stack levels required when called:   14
 32044 ;; This function calls:
 32045 ;;		_TMR3_CallBack
 32046 ;;		_TMR3_WriteTimer
 32047 ;; This function is called by:
 32048 ;;		Interrupt level 1
 32049 ;; This function uses a non-reentrant model
 32050 ;;
 32051                           
 32052                           	psect	text144
 32053  018854                     __ptext144:
 32054                           	opt callstack 0
 32055  018854                     _TMR3_ISR:
 32056                           	opt callstack 3
 32057                           
 32058                           ; BSR set to: 2
 32059                           ;incstack = 0
 32060  018854  006F FF60  F00F    	movff	status,??_TMR3_ISR
 32061  01885A  006F FFD8  F010    	movff	tblptrl,??_TMR3_ISR+1
 32062  018860  006F FFDC  F011    	movff	tblptrh,??_TMR3_ISR+2
 32063  018866  006F FFE0  F012    	movff	tblptru,??_TMR3_ISR+3
 32064  01886C  006F FFD4  F013    	movff	tablat,??_TMR3_ISR+4
 32065  018872  0060  F0A0  F014   	movff	btemp,??_TMR3_ISR+5
 32066  018878  0060  F0A4  F015   	movff	btemp+1,??_TMR3_ISR+6
 32067  01887E  0060  F0A8  F016   	movff	btemp+2,??_TMR3_ISR+7
 32068  018884  0060  F0AC  F017   	movff	btemp+3,??_TMR3_ISR+8
 32069  01888A  0060  F0B0  F018   	movff	btemp+4,??_TMR3_ISR+9
 32070  018890  0060  F0B4  F019   	movff	btemp+5,??_TMR3_ISR+10
 32071  018896  0060  F0B8  F01A   	movff	btemp+6,??_TMR3_ISR+11
 32072  01889C  0060  F0BC  F01B   	movff	btemp+7,??_TMR3_ISR+12
 32073  0188A2  0060  F0C0  F01C   	movff	btemp+8,??_TMR3_ISR+13
 32074  0188A8  0060  F0C4  F01D   	movff	btemp+9,??_TMR3_ISR+14
 32075  0188AE  0060  F0C8  F01E   	movff	btemp+10,??_TMR3_ISR+15
 32076  0188B4  0060  F0CC  F01F   	movff	btemp+11,??_TMR3_ISR+16
 32077  0188BA  0060  F0E0  F020   	movff	btemp+16,??_TMR3_ISR+17
 32078  0188C0  0060  F0E4  F021   	movff	btemp+17,??_TMR3_ISR+18
 32079  0188C6  0060  F0E8  F022   	movff	btemp+18,??_TMR3_ISR+19
 32080  0188CC  0060  F0EC  F023   	movff	btemp+19,??_TMR3_ISR+20
 32081  0188D2  0060  F0F0  F024   	movff	btemp+20,??_TMR3_ISR+21
 32082  0188D8  0060  F0F4  F025   	movff	btemp+21,??_TMR3_ISR+22
 32083  0188DE  0060  F0F8  F026   	movff	btemp+22,??_TMR3_ISR+23
 32084  0188E4  0060  F0FC  F027   	movff	btemp+23,??_TMR3_ISR+24
 32085  0188EA  EE16  F0A1         	lfsr	1,___intlo_sp
 32086                           
 32087                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32088  0188EE  0139               	movlb	57	; () banked
 32089  0188F0  9DA6               	bcf	166,6,b	;volatile
 32090                           
 32091                           ; BSR set to: 57
 32092                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32093  0188F2  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 32094  0188F8  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32095  0188FE  EC79  F0D6         	call	_TMR3_WriteTimer	;wreg free
 32096                           
 32097                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32098  018902  0100               	movlb	0	; () banked
 32099  018904  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 32100  018906  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32101  018908  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32102  01890A  E104               	bnz	i1u1211_20
 32103  01890C  0E28               	movlw	40
 32104  01890E  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 32105  018910  A0D8               	btfss	status,0,c
 32106  018912  D005               	goto	i1l1205
 32107  018914                     i1u1211_20:
 32108                           
 32109                           ; BSR set to: 0
 32110                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32111  018914  ECFC  F0D9         	call	_TMR3_CallBack	;wreg free
 32112                           
 32113                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32114  018918  0100               	movlb	0	; () banked
 32115  01891A  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 32116  01891C  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 32117  01891E                     i1l1205:
 32118                           
 32119                           ; BSR set to: 0
 32120  01891E  0060  F09C  F03F   	movff	??_TMR3_ISR+24,btemp+23
 32121  018924  0060  F098  F03E   	movff	??_TMR3_ISR+23,btemp+22
 32122  01892A  0060  F094  F03D   	movff	??_TMR3_ISR+22,btemp+21
 32123  018930  0060  F090  F03C   	movff	??_TMR3_ISR+21,btemp+20
 32124  018936  0060  F08C  F03B   	movff	??_TMR3_ISR+20,btemp+19
 32125  01893C  0060  F088  F03A   	movff	??_TMR3_ISR+19,btemp+18
 32126  018942  0060  F084  F039   	movff	??_TMR3_ISR+18,btemp+17
 32127  018948  0060  F080  F038   	movff	??_TMR3_ISR+17,btemp+16
 32128  01894E  0060  F07C  F033   	movff	??_TMR3_ISR+16,btemp+11
 32129  018954  0060  F078  F032   	movff	??_TMR3_ISR+15,btemp+10
 32130  01895A  0060  F074  F031   	movff	??_TMR3_ISR+14,btemp+9
 32131  018960  0060  F070  F030   	movff	??_TMR3_ISR+13,btemp+8
 32132  018966  0060  F06C  F02F   	movff	??_TMR3_ISR+12,btemp+7
 32133  01896C  0060  F068  F02E   	movff	??_TMR3_ISR+11,btemp+6
 32134  018972  0060  F064  F02D   	movff	??_TMR3_ISR+10,btemp+5
 32135  018978  0060  F060  F02C   	movff	??_TMR3_ISR+9,btemp+4
 32136  01897E  0060  F05C  F02B   	movff	??_TMR3_ISR+8,btemp+3
 32137  018984  0060  F058  F02A   	movff	??_TMR3_ISR+7,btemp+2
 32138  01898A  0060  F054  F029   	movff	??_TMR3_ISR+6,btemp+1
 32139  018990  0060  F050  F028   	movff	??_TMR3_ISR+5,btemp
 32140  018996  0060  F04F  FFF5   	movff	??_TMR3_ISR+4,tablat
 32141  01899C  0060  F04B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32142  0189A2  0060  F047  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32143  0189A8  0060  F043  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32144  0189AE  0060  F03F  FFD8   	movff	??_TMR3_ISR,status
 32145  0189B4  0011               	retfie		f
 32146  0189B6                     __end_of_TMR3_ISR:
 32147                           	opt callstack 0
 32148                           
 32149 ;; *************** function _TMR3_WriteTimer *****************
 32150 ;; Defined at:
 32151 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32152 ;; Parameters:    Size  Location     Type
 32153 ;;  timerVal        2  [STACK] unsigned short 
 32154 ;; Auto vars:     Size  Location     Type
 32155 ;;		None
 32156 ;; Return value:  Size  Location     Type
 32157 ;;                  1  [STACK] void 
 32158 ;; Registers used:
 32159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32160 ;; Tracked objects:
 32161 ;;		On entry : 3F/39
 32162 ;;		On exit  : 0/0
 32163 ;;		Unchanged: 0/0
 32164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32169 ;;Total ram usage:        0 bytes
 32170 ;; Hardware stack levels used:    1
 32171 ;; Hardware stack levels required when called:    3
 32172 ;; This function calls:
 32173 ;;		Nothing
 32174 ;; This function is called by:
 32175 ;;		_TMR3_ISR
 32176 ;; This function uses a reentrant model
 32177 ;;
 32178                           
 32179                           	psect	text145
 32180  01ACF2                     __ptext145:
 32181                           	opt callstack 0
 32182  01ACF2                     _TMR3_WriteTimer:
 32183                           	opt callstack 13
 32184                           
 32185                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32186                           
 32187                           ; BSR set to: 0
 32188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32189                           ;incstack = 0
 32190  01ACF2  A4A6               	btfss	166,2,c	;volatile
 32191  01ACF4  D00F               	goto	l10464
 32192                           
 32193                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32194  01ACF6  90A6               	bcf	166,0,c	;volatile
 32195                           
 32196                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32197                           ;stkvar	_timerVal @ sp[(0)+-2]
 32198  01ACF8  0EFF               	movlw	255
 32199  01ACFA  24E1               	addwf	fsr1l,w,c
 32200  01ACFC  6ED9               	movwf	fsr2l,c
 32201  01ACFE  0EFF               	movlw	255
 32202  01AD00  20E2               	addwfc	fsr1h,w,c
 32203  01AD02  6EDA               	movwf	fsr2h,c
 32204  01AD04  50DF               	movf	indf2,w,c
 32205  01AD06  6EA5               	movwf	165,c	;volatile
 32206                           
 32207                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32208                           ;stkvar	_timerVal @ sp[(0)+-2]
 32209  01AD08  0EFE               	movlw	-2
 32210  01AD0A  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32211                           
 32212                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32213  01AD10  80A6               	bsf	166,0,c	;volatile
 32214                           
 32215                           ;mcc_generated_files/tmr3.c: 141:     }
 32216  01AD12  D00C               	goto	l1188
 32217  01AD14                     l10464:
 32218                           
 32219                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32220                           ;stkvar	_timerVal @ sp[(0)+-2]
 32221  01AD14  0EFF               	movlw	255
 32222  01AD16  24E1               	addwf	fsr1l,w,c
 32223  01AD18  6ED9               	movwf	fsr2l,c
 32224  01AD1A  0EFF               	movlw	255
 32225  01AD1C  20E2               	addwfc	fsr1h,w,c
 32226  01AD1E  6EDA               	movwf	fsr2h,c
 32227  01AD20  50DF               	movf	indf2,w,c
 32228  01AD22  6EA5               	movwf	165,c	;volatile
 32229                           
 32230                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32231                           ;stkvar	_timerVal @ sp[(0)+-2]
 32232  01AD24  0EFE               	movlw	-2
 32233  01AD26  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32234  01AD2C                     l1188:
 32235                           
 32236                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32237  01AD2C  52E5               	movf	postdec1,f,c
 32238  01AD2E  52E5               	movf	postdec1,f,c
 32239  01AD30  0012               	return		;funcret
 32240  01AD32                     __end_of_TMR3_WriteTimer:
 32241                           	opt callstack 0
 32242                           
 32243 ;; *************** function _TMR3_CallBack *****************
 32244 ;; Defined at:
 32245 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32246 ;; Parameters:    Size  Location     Type
 32247 ;;		None
 32248 ;; Auto vars:     Size  Location     Type
 32249 ;;		None
 32250 ;; Return value:  Size  Location     Type
 32251 ;;                  1  [STACK] void 
 32252 ;; Registers used:
 32253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32254 ;; Tracked objects:
 32255 ;;		On entry : 3F/0
 32256 ;;		On exit  : 0/0
 32257 ;;		Unchanged: 0/0
 32258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32263 ;;Total ram usage:        0 bytes
 32264 ;; Hardware stack levels used:    1
 32265 ;; Hardware stack levels required when called:   13
 32266 ;; This function calls:
 32267 ;;		Absolute function
 32268 ;;		_TMR3_DefaultInterruptHandler
 32269 ;;		_calc_bsoc
 32270 ;; This function is called by:
 32271 ;;		_TMR3_ISR
 32272 ;; This function uses a reentrant model
 32273 ;;
 32274                           
 32275                           	psect	text146
 32276  01B3F8                     __ptext146:
 32277                           	opt callstack 0
 32278  01B3F8                     _TMR3_CallBack:
 32279                           	opt callstack 3
 32280                           
 32281                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32282                           
 32283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32284                           ;incstack = 0
 32285  01B3F8  0100               	movlb	0	; () banked
 32286  01B3FA  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32287  01B3FC  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32288  01B3FE  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32289  01B400  B4D8               	btfsc	status,2,c
 32290  01B402  0012               	return	
 32291                           
 32292                           ; BSR set to: 0
 32293                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32294  01B404  D801               	call	u1202_28
 32295  01B406  0012               	return	
 32296  01B408                     u1202_28:
 32297  01B408  0005               	push	
 32298  01B40A  6EFA               	movwf	pclath,c
 32299  01B40C  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32300  01B40E  6EFD               	movwf	tosl,c
 32301  01B410  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32302  01B412  6EFE               	movwf	tosh,c
 32303  01B414  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32304  01B416  6EFF               	movwf	tosu,c
 32305  01B418  50FA               	movf	pclath,w,c
 32306  01B41A  0012               	return		;indir
 32307  01B41C                     __end_of_TMR3_CallBack:
 32308                           	opt callstack 0
 32309                           
 32310 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32311 ;; Defined at:
 32312 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 32313 ;; Parameters:    Size  Location     Type
 32314 ;;		None
 32315 ;; Auto vars:     Size  Location     Type
 32316 ;;		None
 32317 ;; Return value:  Size  Location     Type
 32318 ;;                  1  [STACK] void 
 32319 ;; Registers used:
 32320 ;;		None
 32321 ;; Tracked objects:
 32322 ;;		On entry : 3F/0
 32323 ;;		On exit  : 0/0
 32324 ;;		Unchanged: 0/0
 32325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32330 ;;Total ram usage:        0 bytes
 32331 ;; Hardware stack levels used:    1
 32332 ;; Hardware stack levels required when called:    3
 32333 ;; This function calls:
 32334 ;;		Nothing
 32335 ;; This function is called by:
 32336 ;;		_TMR3_Initialize
 32337 ;;		_TMR3_CallBack
 32338 ;; This function uses a reentrant model
 32339 ;;
 32340                           
 32341                           	psect	text147
 32342  01B730                     __ptext147:
 32343                           	opt callstack 0
 32344  01B730                     _TMR3_DefaultInterruptHandler:
 32345                           	opt callstack 12
 32346                           
 32347                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32348                           
 32349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32350                           ;incstack = 0
 32351  01B730  0012               	return		;funcret
 32352  01B732                     __end_of_TMR3_DefaultInterruptHandler:
 32353                           	opt callstack 0
 32354                           
 32355 ;; *************** function _calc_bsoc *****************
 32356 ;; Defined at:
 32357 ;;		line 39 in file "bsoc.c"
 32358 ;; Parameters:    Size  Location     Type
 32359 ;;		None
 32360 ;; Auto vars:     Size  Location     Type
 32361 ;;  log_ptr         2  [STACK] PTR unsigned char 
 32362 ;;		 -> port_data(512), 
 32363 ;; Return value:  Size  Location     Type
 32364 ;;                  1  [STACK] void 
 32365 ;; Registers used:
 32366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 32367 ;; Tracked objects:
 32368 ;;		On entry : 3F/0
 32369 ;;		On exit  : 3F/1
 32370 ;;		Unchanged: 0/0
 32371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32376 ;;Total ram usage:        0 bytes
 32377 ;; Hardware stack levels used:    1
 32378 ;; Hardware stack levels required when called:   12
 32379 ;; This function calls:
 32380 ;;		_StartTimer
 32381 ;;		___fladd
 32382 ;;		___fldiv
 32383 ;;		___flge
 32384 ;;		___flmul
 32385 ;;		___flneg
 32386 ;;		___fltol
 32387 ;;		_fabsf
 32388 ;;		_port_data_dma_ptr
 32389 ;;		_send_port_data_dma
 32390 ;;		_sprintf
 32391 ;;		_strlen
 32392 ;; This function is called by:
 32393 ;;		_init_bsoc
 32394 ;;		_TMR3_CallBack
 32395 ;; This function uses a reentrant model
 32396 ;;
 32397                           
 32398                           	psect	text148
 32399  014204                     __ptext148:
 32400                           	opt callstack 0
 32401  014204                     _calc_bsoc:
 32402                           	opt callstack 0
 32403                           
 32404                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32405  014204  52E6               	movf	postinc1,f,c
 32406  014206  52E6               	movf	postinc1,f,c
 32407                           
 32408                           ;incstack = 0
 32409                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 44:  do { LATEbits.LATE1 = 1; } while(0);
 32410  014208  82BE               	bsf	190,1,c	;volatile
 32411                           
 32412                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 32413  01420A  0E00               	movlw	0
 32414  01420C  6EE6               	movwf	postinc1,c
 32415  01420E  0E00               	movlw	0
 32416  014210  6EE6               	movwf	postinc1,c
 32417  014212  0E61               	movlw	97
 32418  014214  6EE6               	movwf	postinc1,c
 32419  014216  0E45               	movlw	69
 32420  014218  6EE6               	movwf	postinc1,c
 32421  01421A  0060  F513  FFE6   	movff	_C+68,postinc1
 32422  014220  0060  F517  FFE6   	movff	_C+69,postinc1
 32423  014226  0060  F51B  FFE6   	movff	_C+70,postinc1
 32424  01422C  0060  F51F  FFE6   	movff	_C+71,postinc1
 32425  014232  ECA3  F0A4         	call	___fldiv	;wreg free
 32426  014236  0060  F0A3  FFE6   	movff	btemp,postinc1
 32427  01423C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32428  014242  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32429  014248  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32430  01424E  0060  F633  FFE6   	movff	_C+140,postinc1
 32431  014254  0060  F637  FFE6   	movff	_C+141,postinc1
 32432  01425A  0060  F63B  FFE6   	movff	_C+142,postinc1
 32433  014260  0060  F63F  FFE6   	movff	_C+143,postinc1
 32434  014266  EC24  F09D         	call	___fladd	;wreg free
 32435  01426A  0060  F0A0  F18C   	movff	btemp,_C+140	;volatile
 32436  014270  0060  F0A4  F18D   	movff	btemp+1,_C+141	;volatile
 32437  014276  0060  F0A8  F18E   	movff	btemp+2,_C+142	;volatile
 32438  01427C  0060  F0AC  F18F   	movff	btemp+3,_C+143	;volatile
 32439                           
 32440                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 32441  014282  0060  F633  FFE6   	movff	_C+140,postinc1
 32442  014288  0060  F637  FFE6   	movff	_C+141,postinc1
 32443  01428E  0060  F63B  FFE6   	movff	_C+142,postinc1
 32444  014294  0060  F63F  FFE6   	movff	_C+143,postinc1
 32445  01429A  0060  F623  FFE6   	movff	_C+136,postinc1
 32446  0142A0  0060  F627  FFE6   	movff	_C+137,postinc1
 32447  0142A6  0060  F62B  FFE6   	movff	_C+138,postinc1
 32448  0142AC  0060  F62F  FFE6   	movff	_C+139,postinc1
 32449  0142B2  EC78  F0C3         	call	___flge	;wreg free
 32450  0142B6  B028               	btfsc	btemp& (0+255),0,c
 32451  0142B8  D008               	goto	l12378
 32452                           
 32453                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 32454  0142BA  C188  F18C         	movff	_C+136,_C+140	;volatile
 32455  0142BE  C189  F18D         	movff	_C+137,_C+141	;volatile
 32456  0142C2  C18A  F18E         	movff	_C+138,_C+142	;volatile
 32457  0142C6  C18B  F18F         	movff	_C+139,_C+143	;volatile
 32458  0142CA                     l12378:
 32459                           
 32460                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 32461  0142CA  0ECD               	movlw	205
 32462  0142CC  6EE6               	movwf	postinc1,c
 32463  0142CE  0ECC               	movlw	204
 32464  0142D0  6EE6               	movwf	postinc1,c
 32465  0142D2  0ECC               	movlw	204
 32466  0142D4  6EE6               	movwf	postinc1,c
 32467  0142D6  0E3D               	movlw	61
 32468  0142D8  6EE6               	movwf	postinc1,c
 32469  0142DA  0060  F633  FFE6   	movff	_C+140,postinc1
 32470  0142E0  0060  F637  FFE6   	movff	_C+141,postinc1
 32471  0142E6  0060  F63B  FFE6   	movff	_C+142,postinc1
 32472  0142EC  0060  F63F  FFE6   	movff	_C+143,postinc1
 32473  0142F2  EC78  F0C3         	call	___flge	;wreg free
 32474  0142F6  B028               	btfsc	btemp& (0+255),0,c
 32475  0142F8  D009               	goto	l12382
 32476                           
 32477                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 32478  0142FA  0ECD               	movlw	205
 32479  0142FC  0101               	movlb	1	; () banked
 32480  0142FE  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 32481  014300  0ECC               	movlw	204
 32482  014302  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 32483  014304  0ECC               	movlw	204
 32484  014306  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 32485  014308  0E3D               	movlw	61
 32486  01430A  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 32487  01430C                     l12382:
 32488                           
 32489                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 32490  01430C  0E00               	movlw	0
 32491  01430E  6EE6               	movwf	postinc1,c
 32492  014310  0E00               	movlw	0
 32493  014312  6EE6               	movwf	postinc1,c
 32494  014314  0E61               	movlw	97
 32495  014316  6EE6               	movwf	postinc1,c
 32496  014318  0E45               	movlw	69
 32497  01431A  6EE6               	movwf	postinc1,c
 32498  01431C  0060  F523  FFE6   	movff	_C+72,postinc1
 32499  014322  0060  F527  FFE6   	movff	_C+73,postinc1
 32500  014328  0060  F52B  FFE6   	movff	_C+74,postinc1
 32501  01432E  0060  F52F  FFE6   	movff	_C+75,postinc1
 32502  014334  ECA3  F0A4         	call	___fldiv	;wreg free
 32503  014338  0060  F0A3  FFE6   	movff	btemp,postinc1
 32504  01433E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32505  014344  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32506  01434A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32507  014350  0060  F643  FFE6   	movff	_C+144,postinc1
 32508  014356  0060  F647  FFE6   	movff	_C+145,postinc1
 32509  01435C  0060  F64B  FFE6   	movff	_C+146,postinc1
 32510  014362  0060  F64F  FFE6   	movff	_C+147,postinc1
 32511  014368  EC24  F09D         	call	___fladd	;wreg free
 32512  01436C  0060  F0A0  F190   	movff	btemp,_C+144	;volatile
 32513  014372  0060  F0A4  F191   	movff	btemp+1,_C+145	;volatile
 32514  014378  0060  F0A8  F192   	movff	btemp+2,_C+146	;volatile
 32515  01437E  0060  F0AC  F193   	movff	btemp+3,_C+147	;volatile
 32516                           
 32517                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 32518  014384  0E00               	movlw	0
 32519  014386  6EE6               	movwf	postinc1,c
 32520  014388  0E00               	movlw	0
 32521  01438A  6EE6               	movwf	postinc1,c
 32522  01438C  0E61               	movlw	97
 32523  01438E  6EE6               	movwf	postinc1,c
 32524  014390  0E45               	movlw	69
 32525  014392  6EE6               	movwf	postinc1,c
 32526  014394  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32527  01439A  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32528  0143A0  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32529  0143A6  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32530  0143AC  ECA3  F0A4         	call	___fldiv	;wreg free
 32531  0143B0  0060  F0A3  FFE6   	movff	btemp,postinc1
 32532  0143B6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32533  0143BC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32534  0143C2  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32535  0143C8  0060  F683  FFE6   	movff	_C+160,postinc1
 32536  0143CE  0060  F687  FFE6   	movff	_C+161,postinc1
 32537  0143D4  0060  F68B  FFE6   	movff	_C+162,postinc1
 32538  0143DA  0060  F68F  FFE6   	movff	_C+163,postinc1
 32539  0143E0  EC24  F09D         	call	___fladd	;wreg free
 32540  0143E4  0060  F0A0  F1A0   	movff	btemp,_C+160	;volatile
 32541  0143EA  0060  F0A4  F1A1   	movff	btemp+1,_C+161	;volatile
 32542  0143F0  0060  F0A8  F1A2   	movff	btemp+2,_C+162	;volatile
 32543  0143F6  0060  F0AC  F1A3   	movff	btemp+3,_C+163	;volatile
 32544                           
 32545                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 32546  0143FC  0E00               	movlw	0
 32547  0143FE  6EE6               	movwf	postinc1,c
 32548  014400  0E00               	movlw	0
 32549  014402  6EE6               	movwf	postinc1,c
 32550  014404  0E61               	movlw	97
 32551  014406  6EE6               	movwf	postinc1,c
 32552  014408  0E45               	movlw	69
 32553  01440A  6EE6               	movwf	postinc1,c
 32554  01440C  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32555  014412  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32556  014418  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32557  01441E  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32558  014424  ECA3  F0A4         	call	___fldiv	;wreg free
 32559  014428  0060  F0A3  FFE6   	movff	btemp,postinc1
 32560  01442E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32561  014434  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32562  01443A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32563  014440  0060  F693  FFE6   	movff	_C+164,postinc1
 32564  014446  0060  F697  FFE6   	movff	_C+165,postinc1
 32565  01444C  0060  F69B  FFE6   	movff	_C+166,postinc1
 32566  014452  0060  F69F  FFE6   	movff	_C+167,postinc1
 32567  014458  EC24  F09D         	call	___fladd	;wreg free
 32568  01445C  0060  F0A0  F1A4   	movff	btemp,_C+164	;volatile
 32569  014462  0060  F0A4  F1A5   	movff	btemp+1,_C+165	;volatile
 32570  014468  0060  F0A8  F1A6   	movff	btemp+2,_C+166	;volatile
 32571  01446E  0060  F0AC  F1A7   	movff	btemp+3,_C+167	;volatile
 32572                           
 32573                           ;bsoc.c: 55:  C.loadkw += (C.p_load / 3600.0);
 32574  014474  0E00               	movlw	0
 32575  014476  6EE6               	movwf	postinc1,c
 32576  014478  0E00               	movlw	0
 32577  01447A  6EE6               	movwf	postinc1,c
 32578  01447C  0E61               	movlw	97
 32579  01447E  6EE6               	movwf	postinc1,c
 32580  014480  0E45               	movlw	69
 32581  014482  6EE6               	movwf	postinc1,c
 32582  014484  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32583  01448A  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32584  014490  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32585  014496  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32586  01449C  ECA3  F0A4         	call	___fldiv	;wreg free
 32587  0144A0  0060  F0A3  FFE6   	movff	btemp,postinc1
 32588  0144A6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32589  0144AC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32590  0144B2  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32591  0144B8  0060  F6A3  FFE6   	movff	_C+168,postinc1
 32592  0144BE  0060  F6A7  FFE6   	movff	_C+169,postinc1
 32593  0144C4  0060  F6AB  FFE6   	movff	_C+170,postinc1
 32594  0144CA  0060  F6AF  FFE6   	movff	_C+171,postinc1
 32595  0144D0  EC24  F09D         	call	___fladd	;wreg free
 32596  0144D4  0060  F0A0  F1A8   	movff	btemp,_C+168	;volatile
 32597  0144DA  0060  F0A4  F1A9   	movff	btemp+1,_C+169	;volatile
 32598  0144E0  0060  F0A8  F1AA   	movff	btemp+2,_C+170	;volatile
 32599  0144E6  0060  F0AC  F1AB   	movff	btemp+3,_C+171	;volatile
 32600                           
 32601                           ;bsoc.c: 56:  if (C.p_bat > 0.0)
 32602  0144EC  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32603  0144F2  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32604  0144F8  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32605  0144FE  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32606  014504  0E00               	movlw	0
 32607  014506  6EE6               	movwf	postinc1,c
 32608  014508  0E00               	movlw	0
 32609  01450A  6EE6               	movwf	postinc1,c
 32610  01450C  0E00               	movlw	0
 32611  01450E  6EE6               	movwf	postinc1,c
 32612  014510  0E00               	movlw	0
 32613  014512  6EE6               	movwf	postinc1,c
 32614  014514  EC78  F0C3         	call	___flge	;wreg free
 32615  014518  B028               	btfsc	btemp& (0+255),0,c
 32616  01451A  D03C               	goto	l12394
 32617                           
 32618                           ;bsoc.c: 57:   C.bkwi += (C.p_bat / 3600.0);
 32619  01451C  0E00               	movlw	0
 32620  01451E  6EE6               	movwf	postinc1,c
 32621  014520  0E00               	movlw	0
 32622  014522  6EE6               	movwf	postinc1,c
 32623  014524  0E61               	movlw	97
 32624  014526  6EE6               	movwf	postinc1,c
 32625  014528  0E45               	movlw	69
 32626  01452A  6EE6               	movwf	postinc1,c
 32627  01452C  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32628  014532  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32629  014538  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32630  01453E  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32631  014544  ECA3  F0A4         	call	___fldiv	;wreg free
 32632  014548  0060  F0A3  FFE6   	movff	btemp,postinc1
 32633  01454E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32634  014554  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32635  01455A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32636  014560  0060  F663  FFE6   	movff	_C+152,postinc1
 32637  014566  0060  F667  FFE6   	movff	_C+153,postinc1
 32638  01456C  0060  F66B  FFE6   	movff	_C+154,postinc1
 32639  014572  0060  F66F  FFE6   	movff	_C+155,postinc1
 32640  014578  EC24  F09D         	call	___fladd	;wreg free
 32641  01457C  0060  F0A0  F198   	movff	btemp,_C+152	;volatile
 32642  014582  0060  F0A4  F199   	movff	btemp+1,_C+153	;volatile
 32643  014588  0060  F0A8  F19A   	movff	btemp+2,_C+154	;volatile
 32644  01458E  0060  F0AC  F19B   	movff	btemp+3,_C+155	;volatile
 32645  014594                     l12394:
 32646                           
 32647                           ;bsoc.c: 58:  if (C.p_bat < 0.0)
 32648  014594  0101               	movlb	1	; () banked
 32649  014596  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 32650  014598  D04A               	goto	l12398
 32651                           
 32652                           ; BSR set to: 1
 32653                           ;bsoc.c: 59:   C.bkwo += fabsf(C.p_bat / 3600.0);
 32654  01459A  0E00               	movlw	0
 32655  01459C  6EE6               	movwf	postinc1,c
 32656  01459E  0E00               	movlw	0
 32657  0145A0  6EE6               	movwf	postinc1,c
 32658  0145A2  0E61               	movlw	97
 32659  0145A4  6EE6               	movwf	postinc1,c
 32660  0145A6  0E45               	movlw	69
 32661  0145A8  6EE6               	movwf	postinc1,c
 32662  0145AA  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32663  0145B0  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32664  0145B6  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32665  0145BC  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32666  0145C2  ECA3  F0A4         	call	___fldiv	;wreg free
 32667  0145C6  0060  F0A3  FFE6   	movff	btemp,postinc1
 32668  0145CC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32669  0145D2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32670  0145D8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32671  0145DE  EC01  F0CE         	call	_fabsf	;wreg free
 32672  0145E2  0060  F0A3  FFE6   	movff	btemp,postinc1
 32673  0145E8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32674  0145EE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32675  0145F4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32676  0145FA  0060  F673  FFE6   	movff	_C+156,postinc1
 32677  014600  0060  F677  FFE6   	movff	_C+157,postinc1
 32678  014606  0060  F67B  FFE6   	movff	_C+158,postinc1
 32679  01460C  0060  F67F  FFE6   	movff	_C+159,postinc1
 32680  014612  EC24  F09D         	call	___fladd	;wreg free
 32681  014616  0060  F0A0  F19C   	movff	btemp,_C+156	;volatile
 32682  01461C  0060  F0A4  F19D   	movff	btemp+1,_C+157	;volatile
 32683  014622  0060  F0A8  F19E   	movff	btemp+2,_C+158	;volatile
 32684  014628  0060  F0AC  F19F   	movff	btemp+3,_C+159	;volatile
 32685  01462E                     l12398:
 32686                           
 32687                           ;bsoc.c: 61:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 32688  01462E  0E00               	movlw	0
 32689  014630  6EE6               	movwf	postinc1,c
 32690  014632  0E00               	movlw	0
 32691  014634  6EE6               	movwf	postinc1,c
 32692  014636  0EC8               	movlw	200
 32693  014638  6EE6               	movwf	postinc1,c
 32694  01463A  0E42               	movlw	66
 32695  01463C  6EE6               	movwf	postinc1,c
 32696  01463E  0060  F623  FFE6   	movff	_C+136,postinc1
 32697  014644  0060  F627  FFE6   	movff	_C+137,postinc1
 32698  01464A  0060  F62B  FFE6   	movff	_C+138,postinc1
 32699  014650  0060  F62F  FFE6   	movff	_C+139,postinc1
 32700  014656  0060  F633  FFE6   	movff	_C+140,postinc1
 32701  01465C  0060  F637  FFE6   	movff	_C+141,postinc1
 32702  014662  0060  F63B  FFE6   	movff	_C+142,postinc1
 32703  014668  0060  F63F  FFE6   	movff	_C+143,postinc1
 32704  01466E  ECA3  F0A4         	call	___fldiv	;wreg free
 32705  014672  0060  F0A3  FFE6   	movff	btemp,postinc1
 32706  014678  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32707  01467E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32708  014684  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32709  01468A  EC0F  F099         	call	___flmul	;wreg free
 32710  01468E  0060  F0A3  FFE6   	movff	btemp,postinc1
 32711  014694  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32712  01469A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32713  0146A0  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32714  0146A6  EC07  F0C2         	call	___fltol	;wreg free
 32715  0146AA  0060  F0A0  F032   	movff	btemp,btemp+10
 32716  0146B0  0060  F0A4  F033   	movff	btemp+1,btemp+11
 32717  0146B6  0E01               	movlw	1
 32718  0146B8  2432               	addwf	(btemp+10)^0,w,c
 32719  0146BA  0101               	movlb	1	; () banked
 32720  0146BC  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32721  0146BE  0E00               	movlw	0
 32722  0146C0  2033               	addwfc	(btemp+11)^0,w,c
 32723  0146C2  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32724                           
 32725                           ; BSR set to: 1
 32726                           ;bsoc.c: 62:  if (C.soc > 100)
 32727  0146C4  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
 32728  0146C6  E104               	bnz	u1196_20
 32729  0146C8  0E65               	movlw	101
 32730  0146CA  5DAE               	subwf	(_C+174)& (0+255),w,b	;volatile
 32731  0146CC  A0D8               	btfss	status,0,c
 32732  0146CE  D004               	goto	l12404
 32733  0146D0                     u1196_20:
 32734                           
 32735                           ; BSR set to: 1
 32736                           ;bsoc.c: 63:   C.soc = 100;
 32737  0146D0  0E00               	movlw	0
 32738  0146D2  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32739  0146D4  0E64               	movlw	100
 32740  0146D6  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32741  0146D8                     l12404:
 32742                           
 32743                           ; BSR set to: 1
 32744                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 32745  0146D8  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 32746  0146DA  D043               	goto	l12408
 32747                           
 32748                           ; BSR set to: 1
 32749                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 32750  0146DC  0060  F513  FFE6   	movff	_C+68,postinc1
 32751  0146E2  0060  F517  FFE6   	movff	_C+69,postinc1
 32752  0146E8  0060  F51B  FFE6   	movff	_C+70,postinc1
 32753  0146EE  0060  F51F  FFE6   	movff	_C+71,postinc1
 32754  0146F4  0060  F633  FFE6   	movff	_C+140,postinc1
 32755  0146FA  0060  F637  FFE6   	movff	_C+141,postinc1
 32756  014700  0060  F63B  FFE6   	movff	_C+142,postinc1
 32757  014706  0060  F63F  FFE6   	movff	_C+143,postinc1
 32758  01470C  ECA3  F0A4         	call	___fldiv	;wreg free
 32759  014710  0060  F0A3  FFE6   	movff	btemp,postinc1
 32760  014716  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32761  01471C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32762  014722  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32763  014728  EC02  F0D5         	call	___flneg	;wreg free
 32764  01472C  0060  F0A3  FFE6   	movff	btemp,postinc1
 32765  014732  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32766  014738  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32767  01473E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32768  014744  EC07  F0C2         	call	___fltol	;wreg free
 32769  014748  0060  F0A0  F032   	movff	btemp,btemp+10
 32770  01474E  0060  F0A4  F033   	movff	btemp+1,btemp+11
 32771  014754  0060  F0C8  F1AC   	movff	btemp+10,_C+172	;volatile
 32772  01475A  0060  F0CC  F1AD   	movff	btemp+11,_C+173	;volatile
 32773                           
 32774                           ;bsoc.c: 67:  } else {
 32775  014760  D004               	goto	l12410
 32776  014762                     l12408:
 32777                           
 32778                           ; BSR set to: 1
 32779                           ;bsoc.c: 68:   C.runtime = 120;
 32780  014762  0E00               	movlw	0
 32781  014764  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32782  014766  0E78               	movlw	120
 32783  014768  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32784  01476A                     l12410:
 32785                           
 32786                           ;bsoc.c: 70:  if (C.runtime > 120)
 32787  01476A  0101               	movlb	1	; () banked
 32788  01476C  51AD               	movf	(_C+173)& (0+255),w,b	;volatile
 32789  01476E  E104               	bnz	u1198_20
 32790  014770  0E79               	movlw	121
 32791  014772  5DAC               	subwf	(_C+172)& (0+255),w,b	;volatile
 32792  014774  A0D8               	btfss	status,0,c
 32793  014776  D004               	goto	l12414
 32794  014778                     u1198_20:
 32795                           
 32796                           ; BSR set to: 1
 32797                           ;bsoc.c: 71:   C.runtime = 120;
 32798  014778  0E00               	movlw	0
 32799  01477A  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32800  01477C  0E78               	movlw	120
 32801  01477E  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32802  014780                     l12414:
 32803                           
 32804                           ; BSR set to: 1
 32805                           ;bsoc.c: 73:  V.lowint_count++;
 32806  014780  0E01               	movlw	1
 32807  014782  0102               	movlb	2	; () banked
 32808  014784  27B2               	addwf	(_V+178)& (0+255),f,b	;volatile
 32809  014786  0E00               	movlw	0
 32810  014788  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 32811  01478A  23B4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 32812  01478C  23B5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 32813                           
 32814                           ; BSR set to: 2
 32815                           ;bsoc.c: 75:  if (!log_update_wait++) {
 32816  01478E  2A54               	incf	calc_bsoc@log_update_wait^0,f,c
 32817  014790  0454               	decf	calc_bsoc@log_update_wait^0,w,c
 32818  014792  A4D8               	btfss	status,2,c
 32819  014794  D0CE               	goto	l12426
 32820                           
 32821                           ; BSR set to: 2
 32822                           ;bsoc.c: 76:   log_ptr = port_data_dma_ptr();
 32823  014796  EC5C  F0DB         	call	_port_data_dma_ptr	;wreg free
 32824                           
 32825                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32826  01479A  0EFF               	movlw	-1
 32827  01479C  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 32828  0147A2  0EFE               	movlw	-2
 32829  0147A4  0060  F0A3  FFE3   	movff	btemp,plusw1
 32830                           
 32831                           ;bsoc.c: 77:   sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,
      +                          %4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 32832  0147AA  0060  F613  FFE6   	movff	_C+132,postinc1
 32833  0147B0  0060  F617  FFE6   	movff	_C+133,postinc1
 32834  0147B6  0060  F61B  FFE6   	movff	_C+134,postinc1
 32835  0147BC  0060  F61F  FFE6   	movff	_C+135,postinc1
 32836  0147C2  0060  F6B3  FFE6   	movff	_C+172,postinc1
 32837  0147C8  0060  F6B7  FFE6   	movff	_C+173,postinc1
 32838  0147CE  0060  F6BB  FFE6   	movff	_C+174,postinc1
 32839  0147D4  0060  F6BF  FFE6   	movff	_C+175,postinc1
 32840  0147DA  0060  F643  FFE6   	movff	_C+144,postinc1
 32841  0147E0  0060  F647  FFE6   	movff	_C+145,postinc1
 32842  0147E6  0060  F64B  FFE6   	movff	_C+146,postinc1
 32843  0147EC  0060  F64F  FFE6   	movff	_C+147,postinc1
 32844  0147F2  0060  F633  FFE6   	movff	_C+140,postinc1
 32845  0147F8  0060  F637  FFE6   	movff	_C+141,postinc1
 32846  0147FE  0060  F63B  FFE6   	movff	_C+142,postinc1
 32847  014804  0060  F63F  FFE6   	movff	_C+143,postinc1
 32848  01480A  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32849  014810  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32850  014816  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32851  01481C  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32852  014822  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32853  014828  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32854  01482E  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32855  014834  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32856  01483A  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32857  014840  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32858  014846  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32859  01484C  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32860  014852  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32861  014858  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32862  01485E  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32863  014864  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32864  01486A  0060  F593  FFE6   	movff	_C+100,postinc1
 32865  014870  0060  F597  FFE6   	movff	_C+101,postinc1
 32866  014876  0060  F59B  FFE6   	movff	_C+102,postinc1
 32867  01487C  0060  F59F  FFE6   	movff	_C+103,postinc1
 32868  014882  0060  F533  FFE6   	movff	_C+76,postinc1
 32869  014888  0060  F537  FFE6   	movff	_C+77,postinc1
 32870  01488E  0060  F53B  FFE6   	movff	_C+78,postinc1
 32871  014894  0060  F53F  FFE6   	movff	_C+79,postinc1
 32872  01489A  0060  F543  FFE6   	movff	_C+80,postinc1
 32873  0148A0  0060  F547  FFE6   	movff	_C+81,postinc1
 32874  0148A6  0060  F54B  FFE6   	movff	_C+82,postinc1
 32875  0148AC  0060  F54F  FFE6   	movff	_C+83,postinc1
 32876  0148B2  0060  F553  FFE6   	movff	_C+84,postinc1
 32877  0148B8  0060  F557  FFE6   	movff	_C+85,postinc1
 32878  0148BE  0060  F55B  FFE6   	movff	_C+86,postinc1
 32879  0148C4  0060  F55F  FFE6   	movff	_C+87,postinc1
 32880  0148CA  0060  FA07  FFE6   	movff	_V+129,postinc1
 32881  0148D0  0060  FA0B  FFE6   	movff	_V+130,postinc1
 32882  0148D6  0060  FA0F  FFE6   	movff	_V+131,postinc1
 32883  0148DC  0060  FA13  FFE6   	movff	_V+132,postinc1
 32884  0148E2  0E67               	movlw	low STR_65
 32885  0148E4  6EE6               	movwf	postinc1,c
 32886  0148E6  0EFC               	movlw	high STR_65
 32887  0148E8  6EE6               	movwf	postinc1,c
 32888                           
 32889                           ;stkvar	_log_ptr @ sp[(-56)+0]
 32890  0148EA  0EC8               	movlw	-56
 32891  0148EC  006F FF8F FFE6     	movff	plusw1,postinc1
 32892  0148F2  006F FF8F FFE6     	movff	plusw1,postinc1
 32893  0148F8  0E38               	movlw	56
 32894  0148FA  6EE6               	movwf	postinc1,c
 32895  0148FC  EC10  F0CA         	call	_sprintf	;wreg free
 32896                           
 32897                           ; BSR set to: 0
 32898                           ;bsoc.c: 83:   StartTimer(TMR_DISPLAY, 125);
 32899  014900  0E7D               	movlw	125
 32900  014902  6EE6               	movwf	postinc1,c
 32901  014904  0E00               	movlw	0
 32902  014906  6EE6               	movwf	postinc1,c
 32903  014908  0E0A               	movlw	10
 32904  01490A  6EE6               	movwf	postinc1,c
 32905  01490C  EC19  F0D6         	call	_StartTimer	;wreg free
 32906                           
 32907                           ;bsoc.c: 84:   send_port_data_dma(strlen((char*) log_ptr));
 32908                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32909  014910  0EFE               	movlw	-2
 32910  014912  006F FF8F FFE6     	movff	plusw1,postinc1
 32911  014918  006F FF8F FFE6     	movff	plusw1,postinc1
 32912  01491E  EC56  F0CF         	call	_strlen	;wreg free
 32913  014922  0060  F0A3  FFE6   	movff	btemp,postinc1
 32914  014928  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32915  01492E  EC8D  F0D4         	call	_send_port_data_dma	;wreg free
 32916  014932                     l12426:
 32917                           
 32918                           ;bsoc.c: 86:  if (log_update_wait >= 10)
 32919  014932  0E09               	movlw	9
 32920  014934  6454               	cpfsgt	calc_bsoc@log_update_wait^0,c
 32921  014936  D001               	goto	l2007
 32922                           
 32923                           ;bsoc.c: 87:   log_update_wait = 0;
 32924  014938  6A54               	clrf	calc_bsoc@log_update_wait^0,c
 32925  01493A                     l2007:
 32926                           
 32927                           ;bsoc.c: 89:  C.update = 0;
 32928  01493A  0101               	movlb	1	; () banked
 32929  01493C  6BB0               	clrf	(_C+176)& (0+255),b	;volatile
 32930                           
 32931                           ; BSR set to: 1
 32932                           
 32933                           ;bsoc.c: 91:  do { LATEbits.LATE1 = 0; } while(0);
 32934  01493E  92BE               	bcf	190,1,c	;volatile
 32935                           
 32936                           ; BSR set to: 1
 32937                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 32938  014940  52E5               	movf	postdec1,f,c
 32939  014942  52E5               	movf	postdec1,f,c
 32940  014944  0012               	return		;funcret
 32941  014946                     __end_of_calc_bsoc:
 32942                           	opt callstack 0
 32943                           
 32944 ;; *************** function _send_port_data_dma *****************
 32945 ;; Defined at:
 32946 ;;		line 258 in file "eadog.c"
 32947 ;; Parameters:    Size  Location     Type
 32948 ;;  dsize           2  [STACK] unsigned short 
 32949 ;; Auto vars:     Size  Location     Type
 32950 ;;		None
 32951 ;; Return value:  Size  Location     Type
 32952 ;;                  1  [STACK] void 
 32953 ;; Registers used:
 32954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 32955 ;; Tracked objects:
 32956 ;;		On entry : 0/0
 32957 ;;		On exit  : 3F/3B
 32958 ;;		Unchanged: 0/0
 32959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32964 ;;Total ram usage:        0 bytes
 32965 ;; Hardware stack levels used:    1
 32966 ;; Hardware stack levels required when called:    3
 32967 ;; This function calls:
 32968 ;;		Nothing
 32969 ;; This function is called by:
 32970 ;;		_calc_bsoc
 32971 ;; This function uses a reentrant model
 32972 ;;
 32973                           
 32974                           	psect	text149
 32975  01A91A                     __ptext149:
 32976                           	opt callstack 0
 32977  01A91A                     _send_port_data_dma:
 32978                           	opt callstack 11
 32979                           
 32980                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 32981                           ;stkvar	_dsize @ sp[(0)+-2]
 32982                           
 32983                           ; BSR set to: 1
 32984                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32985                           ;incstack = 0
 32986  01A91A  0EFE               	movlw	-2
 32987  01A91C  04E3               	decf	plusw1,w,c
 32988  01A91E  0EFF               	movlw	-1
 32989  01A920  006F FF8C  F028    	movff	plusw1,btemp
 32990  01A926  0E02               	movlw	2
 32991  01A928  5A28               	subwfb	btemp^0,f,c
 32992  01A92A  A0D8               	btfss	status,0,c
 32993  01A92C  D00C               	goto	l9552
 32994                           
 32995                           ;eadog.c: 261:   dsize = 512;
 32996  01A92E  0E00               	movlw	0
 32997  01A930  6E32               	movwf	(btemp+10)^0,c
 32998  01A932  0E02               	movlw	2
 32999  01A934  6E33               	movwf	(btemp+11)^0,c
 33000                           
 33001                           ;stkvar	_dsize @ sp[(0)+-2]
 33002  01A936  0EFE               	movlw	-2
 33003  01A938  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 33004  01A93E  0EFF               	movlw	-1
 33005  01A940  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 33006  01A946                     l9552:
 33007                           
 33008                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 33009  01A946  013B               	movlb	59	; () banked
 33010  01A948  9FDC               	bcf	220,7,b	;volatile
 33011                           
 33012                           ; BSR set to: 59
 33013                           ;eadog.c: 264:  DMA2SSZ = dsize;
 33014                           ;stkvar	_dsize @ sp[(0)+-2]
 33015  01A94A  0EFE               	movlw	-2
 33016  01A94C  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 33017  01A952  0EFF               	movlw	-1
 33018  01A954  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 33019                           
 33020                           ; BSR set to: 59
 33021                           ;eadog.c: 265:  DMA2DSZ = 1;
 33022  01A95A  0E00               	movlw	0
 33023  01A95C  6FCF               	movwf	207,b	;volatile
 33024  01A95E  0E01               	movlw	1
 33025  01A960  6FCE               	movwf	206,b	;volatile
 33026                           
 33027                           ; BSR set to: 59
 33028                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 33029  01A962  8FDC               	bsf	220,7,b	;volatile
 33030                           
 33031                           ; BSR set to: 59
 33032                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 33033  01A964  8DDC               	bsf	220,6,b	;volatile
 33034                           
 33035                           ; BSR set to: 59
 33036                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33037  01A966  52E5               	movf	postdec1,f,c
 33038  01A968  52E5               	movf	postdec1,f,c
 33039  01A96A  0012               	return		;funcret
 33040  01A96C                     __end_of_send_port_data_dma:
 33041                           	opt callstack 0
 33042                           
 33043 ;; *************** function _port_data_dma_ptr *****************
 33044 ;; Defined at:
 33045 ;;		line 273 in file "eadog.c"
 33046 ;; Parameters:    Size  Location     Type
 33047 ;;		None
 33048 ;; Auto vars:     Size  Location     Type
 33049 ;;		None
 33050 ;; Return value:  Size  Location     Type
 33051 ;;                  2  [STACK] PTR unsigned char 
 33052 ;; Registers used:
 33053 ;;		wreg, status,2, status,0, btemp, btemp+1
 33054 ;; Tracked objects:
 33055 ;;		On entry : 3F/2
 33056 ;;		On exit  : 0/0
 33057 ;;		Unchanged: 0/0
 33058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33063 ;;Total ram usage:        0 bytes
 33064 ;; Hardware stack levels used:    1
 33065 ;; Hardware stack levels required when called:    3
 33066 ;; This function calls:
 33067 ;;		Nothing
 33068 ;; This function is called by:
 33069 ;;		_calc_bsoc
 33070 ;; This function uses a reentrant model
 33071 ;;
 33072                           
 33073                           	psect	text150
 33074  01B6B8                     __ptext150:
 33075                           	opt callstack 0
 33076  01B6B8                     _port_data_dma_ptr:
 33077                           	opt callstack 11
 33078                           
 33079                           ;eadog.c: 275:  return port_data;
 33080                           
 33081                           ; BSR set to: 59
 33082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33083                           ;incstack = 0
 33084  01B6B8  0EFF               	movlw	low _port_data
 33085  01B6BA  6E28               	movwf	btemp^0,c
 33086  01B6BC  0E05               	movlw	high _port_data
 33087  01B6BE  6E29               	movwf	(btemp+1)^0,c
 33088                           
 33089                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33090  01B6C0  0012               	return		;funcret
 33091  01B6C2                     __end_of_port_data_dma_ptr:
 33092                           	opt callstack 0
 33093                           
 33094 ;; *************** function _INT0_ISR *****************
 33095 ;; Defined at:
 33096 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33097 ;; Parameters:    Size  Location     Type
 33098 ;;		None
 33099 ;; Auto vars:     Size  Location     Type
 33100 ;;		None
 33101 ;; Return value:  Size  Location     Type
 33102 ;;                  1    wreg      void 
 33103 ;; Registers used:
 33104 ;;		wreg, status,2, status,0, pclath, tosl
 33105 ;; Tracked objects:
 33106 ;;		On entry : 0/0
 33107 ;;		On exit  : 0/0
 33108 ;;		Unchanged: 0/0
 33109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33114 ;;Total ram usage:        0 bytes
 33115 ;; Hardware stack levels used:    1
 33116 ;; Hardware stack levels required when called:    2
 33117 ;; This function calls:
 33118 ;;		_INT0_CallBack
 33119 ;; This function is called by:
 33120 ;;		Interrupt level 2
 33121 ;; This function uses a non-reentrant model
 33122 ;;
 33123                           
 33124                           	psect	text151
 33125  01B690                     __ptext151:
 33126                           	opt callstack 0
 33127  01B690                     _INT0_ISR:
 33128                           	opt callstack 3
 33129                           
 33130                           ;incstack = 0
 33131  01B690  EE14  F142         	lfsr	1,___inthi_sp
 33132                           
 33133                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33134  01B694  0139               	movlb	57	; () banked
 33135  01B696  91A1               	bcf	161,0,b	;volatile
 33136                           
 33137                           ; BSR set to: 57
 33138                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33139  01B698  EC0E  F0DA         	call	_INT0_CallBack	;wreg free
 33140  01B69C  0011               	retfie		f
 33141  01B69E                     __end_of_INT0_ISR:
 33142                           	opt callstack 0
 33143                           
 33144 ;; *************** function _INT0_CallBack *****************
 33145 ;; Defined at:
 33146 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33147 ;; Parameters:    Size  Location     Type
 33148 ;;		None
 33149 ;; Auto vars:     Size  Location     Type
 33150 ;;		None
 33151 ;; Return value:  Size  Location     Type
 33152 ;;                  1  [STACK] void 
 33153 ;; Registers used:
 33154 ;;		wreg, status,2, status,0, pclath, tosl
 33155 ;; Tracked objects:
 33156 ;;		On entry : 3F/39
 33157 ;;		On exit  : 0/0
 33158 ;;		Unchanged: 0/0
 33159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33164 ;;Total ram usage:        0 bytes
 33165 ;; Hardware stack levels used:    1
 33166 ;; Hardware stack levels required when called:    1
 33167 ;; This function calls:
 33168 ;;		Absolute function
 33169 ;;		_INT0_DefaultInterruptHandler
 33170 ;; This function is called by:
 33171 ;;		_INT0_ISR
 33172 ;; This function uses a reentrant model
 33173 ;;
 33174                           
 33175                           	psect	text152
 33176  01B41C                     __ptext152:
 33177                           	opt callstack 0
 33178  01B41C                     _INT0_CallBack:
 33179                           	opt callstack 3
 33180                           
 33181                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33182                           
 33183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33184                           ;incstack = 0
 33185  01B41C  0100               	movlb	0	; () banked
 33186  01B41E  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33187  01B420  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33188  01B422  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33189  01B424  B4D8               	btfsc	status,2,c
 33190  01B426  0012               	return	
 33191                           
 33192                           ; BSR set to: 0
 33193                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 33194  01B428  D801               	call	u959_48
 33195  01B42A  0012               	return	
 33196  01B42C                     u959_48:
 33197  01B42C  0005               	push	
 33198  01B42E  6EFA               	movwf	pclath,c
 33199  01B430  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33200  01B432  6EFD               	movwf	tosl,c
 33201  01B434  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33202  01B436  6EFE               	movwf	tosh,c
 33203  01B438  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33204  01B43A  6EFF               	movwf	tosu,c
 33205  01B43C  50FA               	movf	pclath,w,c
 33206  01B43E  0012               	return		;indir
 33207  01B440                     __end_of_INT0_CallBack:
 33208                           	opt callstack 0
 33209                           
 33210 ;; *************** function _INT0_DefaultInterruptHandler *****************
 33211 ;; Defined at:
 33212 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 33213 ;; Parameters:    Size  Location     Type
 33214 ;;		None
 33215 ;; Auto vars:     Size  Location     Type
 33216 ;;		None
 33217 ;; Return value:  Size  Location     Type
 33218 ;;                  1  [STACK] void 
 33219 ;; Registers used:
 33220 ;;		None
 33221 ;; Tracked objects:
 33222 ;;		On entry : 3F/0
 33223 ;;		On exit  : 0/0
 33224 ;;		Unchanged: 0/0
 33225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33230 ;;Total ram usage:        0 bytes
 33231 ;; Hardware stack levels used:    1
 33232 ;; This function calls:
 33233 ;;		Nothing
 33234 ;; This function is called by:
 33235 ;;		_EXT_INT_Initialize
 33236 ;;		_INT0_CallBack
 33237 ;; This function uses a reentrant model
 33238 ;;
 33239                           
 33240                           	psect	text153
 33241  01B732                     __ptext153:
 33242                           	opt callstack 0
 33243  01B732                     _INT0_DefaultInterruptHandler:
 33244                           	opt callstack 3
 33245                           
 33246                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33247                           
 33248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33249                           ;incstack = 0
 33250  01B732  0012               	return		;funcret
 33251  01B734                     __end_of_INT0_DefaultInterruptHandler:
 33252                           	opt callstack 0
 33253                           
 33254 ;; *************** function _Default_ISR *****************
 33255 ;; Defined at:
 33256 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 33257 ;; Parameters:    Size  Location     Type
 33258 ;;		None
 33259 ;; Auto vars:     Size  Location     Type
 33260 ;;		None
 33261 ;; Return value:  Size  Location     Type
 33262 ;;                  1    wreg      void 
 33263 ;; Registers used:
 33264 ;;		None
 33265 ;; Tracked objects:
 33266 ;;		On entry : 0/0
 33267 ;;		On exit  : 0/0
 33268 ;;		Unchanged: 0/0
 33269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33274 ;;Total ram usage:        0 bytes
 33275 ;; Hardware stack levels used:    1
 33276 ;; This function calls:
 33277 ;;		Nothing
 33278 ;; This function is called by:
 33279 ;;		Interrupt level 2
 33280 ;; This function uses a non-reentrant model
 33281 ;;
 33282                           
 33283                           	psect	text154
 33284  01B728                     __ptext154:
 33285                           	opt callstack 0
 33286  01B728                     _Default_ISR:
 33287                           	opt callstack 5
 33288                           
 33289                           ;incstack = 0
 33290  01B728  EE14  F142         	lfsr	1,___inthi_sp
 33291  01B72C  0011               	retfie		f
 33292  01B72E                     __end_of_Default_ISR:
 33293                           	opt callstack 0
 33294                           
 33295 ;; *************** function _ADCC_ISR *****************
 33296 ;; Defined at:
 33297 ;;		line 314 in file "mcc_generated_files/adcc.c"
 33298 ;; Parameters:    Size  Location     Type
 33299 ;;		None
 33300 ;; Auto vars:     Size  Location     Type
 33301 ;;		None
 33302 ;; Return value:  Size  Location     Type
 33303 ;;                  1    wreg      void 
 33304 ;; Registers used:
 33305 ;;		wreg, status,2, status,0, pclath, tosl
 33306 ;; Tracked objects:
 33307 ;;		On entry : 0/0
 33308 ;;		On exit  : 0/0
 33309 ;;		Unchanged: 0/0
 33310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33315 ;;Total ram usage:        0 bytes
 33316 ;; Hardware stack levels used:    1
 33317 ;; Hardware stack levels required when called:    1
 33318 ;; This function calls:
 33319 ;;		Absolute function
 33320 ;;		_ADCC_DefaultInterruptHandler
 33321 ;;		_adc_int_handler
 33322 ;; This function is called by:
 33323 ;;		Interrupt level 2
 33324 ;; This function uses a non-reentrant model
 33325 ;;
 33326                           
 33327                           	psect	text155
 33328  01B03C                     __ptext155:
 33329                           	opt callstack 0
 33330  01B03C                     _ADCC_ISR:
 33331                           	opt callstack 4
 33332                           
 33333                           ;incstack = 0
 33334  01B03C  EE14  F142         	lfsr	1,___inthi_sp
 33335                           
 33336                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 33337  01B040  0139               	movlb	57	; () banked
 33338  01B042  95A1               	bcf	161,2,b	;volatile
 33339                           
 33340                           ; BSR set to: 57
 33341                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 33342  01B044  0100               	movlb	0	; () banked
 33343  01B046  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33344  01B048  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33345  01B04A  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33346  01B04C  B4D8               	btfsc	status,2,c
 33347  01B04E  0011               	retfie		f
 33348                           
 33349                           ; BSR set to: 0
 33350                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 33351  01B050  D801               	call	i2u1002_48
 33352  01B052  0011               	retfie		f
 33353  01B054                     i2u1002_48:
 33354  01B054  0005               	push	
 33355  01B056  6EFA               	movwf	pclath,c
 33356  01B058  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33357  01B05A  6EFD               	movwf	tosl,c
 33358  01B05C  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33359  01B05E  6EFE               	movwf	tosh,c
 33360  01B060  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33361  01B062  6EFF               	movwf	tosu,c
 33362  01B064  50FA               	movf	pclath,w,c
 33363  01B066  0012               	return		;indir
 33364  01B068                     __end_of_ADCC_ISR:
 33365                           	opt callstack 0
 33366                           
 33367 ;; *************** function _adc_int_t_handler *****************
 33368 ;; Defined at:
 33369 ;;		line 143 in file "daq.c"
 33370 ;; Parameters:    Size  Location     Type
 33371 ;;		None
 33372 ;; Auto vars:     Size  Location     Type
 33373 ;;		None
 33374 ;; Return value:  Size  Location     Type
 33375 ;;                  1  [STACK] void 
 33376 ;; Registers used:
 33377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 33378 ;; Tracked objects:
 33379 ;;		On entry : 3F/0
 33380 ;;		On exit  : 1/0
 33381 ;;		Unchanged: 0/0
 33382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33387 ;;Total ram usage:        0 bytes
 33388 ;; Hardware stack levels used:    1
 33389 ;; Hardware stack levels required when called:    1
 33390 ;; This function calls:
 33391 ;;		_ADCC_DischargeSampleCapacitor
 33392 ;;		_ADCC_StartConversion
 33393 ;; This function is called by:
 33394 ;;		_start_adc_scan
 33395 ;;		_ADCC_ThresholdISR
 33396 ;; This function uses a reentrant model
 33397 ;;
 33398                           
 33399                           	psect	text156
 33400  01A3BE                     __ptext156:
 33401                           	opt callstack 0
 33402  01A3BE                     _adc_int_t_handler:
 33403                           	opt callstack 3
 33404                           
 33405                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 33406                           
 33407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33408                           ;incstack = 0
 33409  01A3BE  013E               	movlb	62	; () banked
 33410  01A3C0  51E6               	movf	230,w,b	;volatile
 33411  01A3C2  006F FB9C  F028    	movff	16103,btemp	;volatile
 33412  01A3C8  6A29               	clrf	(btemp+1)^0,c
 33413  01A3CA  0060  F0A0  F029   	movff	btemp,btemp+1
 33414  01A3D0  6A28               	clrf	btemp^0,c
 33415  01A3D2  2628               	addwf	btemp^0,f,c
 33416  01A3D4  0E00               	movlw	0
 33417  01A3D6  2229               	addwfc	(btemp+1)^0,f,c
 33418  01A3D8  0100               	movlb	0	; () banked
 33419  01A3DA  51EA               	movf	(_R+36)& (0+255),w,b	;volatile
 33420  01A3DC  0D02               	mullw	2
 33421  01A3DE  50F3               	movf	243,w,c
 33422  01A3E0  0FC6               	addlw	low _R
 33423  01A3E2  6ED9               	movwf	fsr2l,c
 33424  01A3E4  6ADA               	clrf	fsr2h,c
 33425  01A3E6  0060  F0A3  FFDE   	movff	btemp,postinc2
 33426  01A3EC  0060  F0A7  FFDD   	movff	btemp+1,postdec2
 33427  01A3F2                     l10826:
 33428                           
 33429                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 33430  01A3F2  0100               	movlb	0	; () banked
 33431  01A3F4  2BEA               	incf	(_R+36)& (0+255),f,b	;volatile
 33432  01A3F6  0E0D               	movlw	13
 33433  01A3F8  65EA               	cpfsgt	(_R+36)& (0+255),b	;volatile
 33434  01A3FA  D003               	goto	l10832
 33435                           
 33436                           ; BSR set to: 0
 33437                           ;daq.c: 151:    R.done = 1;
 33438  01A3FC  0E01               	movlw	1
 33439  01A3FE  6FED               	movwf	(_R+39)& (0+255),b	;volatile
 33440  01A400  0012               	return	
 33441  01A402                     l10832:
 33442                           
 33443                           ; BSR set to: 0
 33444                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 33445  01A402  0060  F3A8  F033   	movff	_R+36,btemp+11	;volatile
 33446  01A408  EE20  F0EB         	lfsr	2,_R+37	;volatile
 33447  01A40C  006F FF78  F030    	movff	postinc2,btemp+8
 33448  01A412  006F FF74  F031    	movff	postdec2,btemp+9
 33449  01A418  2A33               	incf	(btemp+11)^0,f,c
 33450  01A41A  D003               	goto	u999_44
 33451  01A41C                     u999_45:
 33452  01A41C  90D8               	bcf	status,0,c
 33453  01A41E  3231               	rrcf	(btemp+9)^0,f,c
 33454  01A420  3230               	rrcf	(btemp+8)^0,f,c
 33455  01A422                     u999_44:
 33456  01A422  2E33               	decfsz	(btemp+11)^0,f,c
 33457  01A424  D7FB               	goto	u999_45
 33458  01A426  A030               	btfss	(btemp+8)^0,0,c
 33459  01A428  D7E4               	goto	l10826
 33460                           
 33461                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 33462  01A42A  EC73  F0DB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 33463                           
 33464                           ; BSR set to: 62
 33465                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 33466  01A42E  0100               	movlb	0	; () banked
 33467  01A430  51EA               	movf	(_R+36)& (0+255),w,b	;volatile
 33468  01A432  0B0F               	andlw	15
 33469  01A434  6EE6               	movwf	postinc1,c
 33470  01A436  EC18  F0DB         	call	_ADCC_StartConversion	;wreg free
 33471                           
 33472                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33473  01A43A  0012               	return		;funcret
 33474  01A43C                     __end_of_adc_int_t_handler:
 33475                           	opt callstack 0
 33476                           
 33477 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 33478 ;; Defined at:
 33479 ;;		line 339 in file "mcc_generated_files/adcc.c"
 33480 ;; Parameters:    Size  Location     Type
 33481 ;;		None
 33482 ;; Auto vars:     Size  Location     Type
 33483 ;;		None
 33484 ;; Return value:  Size  Location     Type
 33485 ;;                  1  [STACK] void 
 33486 ;; Registers used:
 33487 ;;		None
 33488 ;; Tracked objects:
 33489 ;;		On entry : 3F/0
 33490 ;;		On exit  : 0/0
 33491 ;;		Unchanged: 0/0
 33492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33497 ;;Total ram usage:        0 bytes
 33498 ;; Hardware stack levels used:    1
 33499 ;; This function calls:
 33500 ;;		Nothing
 33501 ;; This function is called by:
 33502 ;;		_ADCC_Initialize
 33503 ;;		_ADCC_ISR
 33504 ;;		_ADCC_ThresholdISR
 33505 ;; This function uses a reentrant model
 33506 ;;
 33507                           
 33508                           	psect	text157
 33509  01B734                     __ptext157:
 33510                           	opt callstack 0
 33511  01B734                     _ADCC_DefaultInterruptHandler:
 33512                           	opt callstack 4
 33513                           
 33514                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33515                           
 33516                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33517                           ;incstack = 0
 33518  01B734  0012               	return		;funcret
 33519  01B736                     __end_of_ADCC_DefaultInterruptHandler:
 33520                           	opt callstack 0
 33521                           
 33522 ;; *************** function _adc_int_handler *****************
 33523 ;; Defined at:
 33524 ;;		line 133 in file "daq.c"
 33525 ;; Parameters:    Size  Location     Type
 33526 ;;		None
 33527 ;; Auto vars:     Size  Location     Type
 33528 ;;		None
 33529 ;; Return value:  Size  Location     Type
 33530 ;;                  1  [STACK] void 
 33531 ;; Registers used:
 33532 ;;		None
 33533 ;; Tracked objects:
 33534 ;;		On entry : 3F/0
 33535 ;;		On exit  : 0/0
 33536 ;;		Unchanged: 0/0
 33537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33542 ;;Total ram usage:        0 bytes
 33543 ;; Hardware stack levels used:    1
 33544 ;; This function calls:
 33545 ;;		Nothing
 33546 ;; This function is called by:
 33547 ;;		_start_adc_scan
 33548 ;;		_ADCC_ISR
 33549 ;; This function uses a reentrant model
 33550 ;;
 33551                           
 33552                           	psect	text158
 33553  01B736                     __ptext158:
 33554                           	opt callstack 0
 33555  01B736                     _adc_int_handler:
 33556                           	opt callstack 4
 33557                           
 33558                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33559                           
 33560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33561                           ;incstack = 0
 33562  01B736  0012               	return		;funcret
 33563  01B738                     __end_of_adc_int_handler:
 33564                           	opt callstack 0
 33565                           
 33566 ;; *************** function _ADCC_ThresholdISR *****************
 33567 ;; Defined at:
 33568 ;;		line 327 in file "mcc_generated_files/adcc.c"
 33569 ;; Parameters:    Size  Location     Type
 33570 ;;		None
 33571 ;; Auto vars:     Size  Location     Type
 33572 ;;		None
 33573 ;; Return value:  Size  Location     Type
 33574 ;;                  1    wreg      void 
 33575 ;; Registers used:
 33576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 33577 ;; Tracked objects:
 33578 ;;		On entry : 0/0
 33579 ;;		On exit  : 0/0
 33580 ;;		Unchanged: 0/0
 33581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33584 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33585 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33586 ;;Total ram usage:        5 bytes
 33587 ;; Hardware stack levels used:    1
 33588 ;; Hardware stack levels required when called:    2
 33589 ;; This function calls:
 33590 ;;		Absolute function
 33591 ;;		_ADCC_DefaultInterruptHandler
 33592 ;;		_adc_int_t_handler
 33593 ;; This function is called by:
 33594 ;;		Interrupt level 2
 33595 ;; This function uses a non-reentrant model
 33596 ;;
 33597                           
 33598                           	psect	text159
 33599  01A510                     __ptext159:
 33600                           	opt callstack 0
 33601  01A510                     _ADCC_ThresholdISR:
 33602                           	opt callstack 3
 33603                           
 33604                           ;incstack = 0
 33605  01A510  0060  F0A0  F001   	movff	btemp,??_ADCC_ThresholdISR
 33606  01A516  0060  F0A4  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 33607  01A51C  0060  F0C0  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 33608  01A522  0060  F0C4  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 33609  01A528  0060  F0CC  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 33610  01A52E  EE14  F142         	lfsr	1,___inthi_sp
 33611                           
 33612                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 33613  01A532  0139               	movlb	57	; () banked
 33614  01A534  97A1               	bcf	161,3,b	;volatile
 33615                           
 33616                           ; BSR set to: 57
 33617                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 33618  01A536  0100               	movlb	0	; () banked
 33619  01A538  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33620  01A53A  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33621  01A53C  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33622  01A53E  B4D8               	btfsc	status,2,c
 33623  01A540  D00C               	goto	i2u1004_49
 33624                           
 33625                           ; BSR set to: 0
 33626                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 33627  01A542  D801               	call	i2u1004_48
 33628  01A544  D00A               	goto	i2u1004_49
 33629  01A546                     i2u1004_48:
 33630  01A546  0005               	push	
 33631  01A548  6EFA               	movwf	pclath,c
 33632  01A54A  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33633  01A54C  6EFD               	movwf	tosl,c
 33634  01A54E  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33635  01A550  6EFE               	movwf	tosh,c
 33636  01A552  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33637  01A554  6EFF               	movwf	tosu,c
 33638  01A556  50FA               	movf	pclath,w,c
 33639  01A558  0012               	return		;indir
 33640  01A55A                     i2u1004_49:
 33641  01A55A  0060  F014  F033   	movff	??_ADCC_ThresholdISR+4,btemp+11
 33642  01A560  0060  F010  F031   	movff	??_ADCC_ThresholdISR+3,btemp+9
 33643  01A566  0060  F00C  F030   	movff	??_ADCC_ThresholdISR+2,btemp+8
 33644  01A56C  0060  F008  F029   	movff	??_ADCC_ThresholdISR+1,btemp+1
 33645  01A572  0060  F004  F028   	movff	??_ADCC_ThresholdISR,btemp
 33646  01A578  0011               	retfie		f
 33647  01A57A                     __end_of_ADCC_ThresholdISR:
 33648                           	opt callstack 0
 33649                           
 33650 ;; *************** function _UART1_rx_vect_isr *****************
 33651 ;; Defined at:
 33652 ;;		line 181 in file "mcc_generated_files/uart1.c"
 33653 ;; Parameters:    Size  Location     Type
 33654 ;;		None
 33655 ;; Auto vars:     Size  Location     Type
 33656 ;;		None
 33657 ;; Return value:  Size  Location     Type
 33658 ;;                  1    wreg      void 
 33659 ;; Registers used:
 33660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33661 ;; Tracked objects:
 33662 ;;		On entry : 0/0
 33663 ;;		On exit  : 0/0
 33664 ;;		Unchanged: 0/0
 33665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33670 ;;Total ram usage:        0 bytes
 33671 ;; Hardware stack levels used:    1
 33672 ;; Hardware stack levels required when called:    1
 33673 ;; This function calls:
 33674 ;;		Absolute function
 33675 ;;		_UART1_Receive_ISR
 33676 ;; This function is called by:
 33677 ;;		Interrupt level 2
 33678 ;; This function uses a non-reentrant model
 33679 ;;
 33680                           
 33681                           	psect	text160
 33682  01B2F0                     __ptext160:
 33683                           	opt callstack 0
 33684  01B2F0                     _UART1_rx_vect_isr:
 33685                           	opt callstack 4
 33686                           
 33687                           ;incstack = 0
 33688  01B2F0  EE14  F142         	lfsr	1,___inthi_sp
 33689                           
 33690                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 33691  01B2F4  0100               	movlb	0	; () banked
 33692  01B2F6  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33693  01B2F8  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33694  01B2FA  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33695  01B2FC  B4D8               	btfsc	status,2,c
 33696  01B2FE  0011               	retfie		f
 33697                           
 33698                           ; BSR set to: 0
 33699                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 33700  01B300  D801               	call	i2u1006_48
 33701  01B302  0011               	retfie		f
 33702  01B304                     i2u1006_48:
 33703  01B304  0005               	push	
 33704  01B306  6EFA               	movwf	pclath,c
 33705  01B308  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33706  01B30A  6EFD               	movwf	tosl,c
 33707  01B30C  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33708  01B30E  6EFE               	movwf	tosh,c
 33709  01B310  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33710  01B312  6EFF               	movwf	tosu,c
 33711  01B314  50FA               	movf	pclath,w,c
 33712  01B316  0012               	return		;indir
 33713  01B318                     __end_of_UART1_rx_vect_isr:
 33714                           	opt callstack 0
 33715                           
 33716 ;; *************** function _UART1_Receive_ISR *****************
 33717 ;; Defined at:
 33718 ;;		line 192 in file "mcc_generated_files/uart1.c"
 33719 ;; Parameters:    Size  Location     Type
 33720 ;;		None
 33721 ;; Auto vars:     Size  Location     Type
 33722 ;;		None
 33723 ;; Return value:  Size  Location     Type
 33724 ;;                  1  [STACK] void 
 33725 ;; Registers used:
 33726 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33727 ;; Tracked objects:
 33728 ;;		On entry : 3F/0
 33729 ;;		On exit  : 0/0
 33730 ;;		Unchanged: 0/0
 33731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33736 ;;Total ram usage:        0 bytes
 33737 ;; Hardware stack levels used:    1
 33738 ;; This function calls:
 33739 ;;		Nothing
 33740 ;; This function is called by:
 33741 ;;		_UART1_Initialize
 33742 ;;		_UART1_rx_vect_isr
 33743 ;; This function uses a reentrant model
 33744 ;;
 33745                           
 33746                           	psect	text161
 33747  01B558                     __ptext161:
 33748                           	opt callstack 0
 33749  01B558                     _UART1_Receive_ISR:
 33750                           	opt callstack 4
 33751                           
 33752                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 33753                           
 33754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33755                           ;incstack = 0
 33756  01B558  505E               	movf	_uart1RxHead^0,w,c
 33757  01B55A  0F6C               	addlw	low _uart1RxBuffer
 33758  01B55C  6ED9               	movwf	fsr2l,c
 33759  01B55E  6ADA               	clrf	fsr2h,c
 33760  01B560  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 33761  01B566  2A5E               	incf	_uart1RxHead^0,f,c	;volatile
 33762                           
 33763                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 33764  01B568  0E07               	movlw	7
 33765  01B56A  645E               	cpfsgt	_uart1RxHead^0,c
 33766  01B56C  D001               	goto	l10408
 33767                           
 33768                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 33769  01B56E  6A5E               	clrf	_uart1RxHead^0,c	;volatile
 33770  01B570                     l10408:
 33771                           
 33772                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 33773  01B570  2A5C               	incf	_uart1RxCount^0,f,c	;volatile
 33774                           
 33775                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33776  01B572  0012               	return		;funcret
 33777  01B574                     __end_of_UART1_Receive_ISR:
 33778                           	opt callstack 0
 33779                           
 33780 ;; *************** function _UART2_tx_vect_isr *****************
 33781 ;; Defined at:
 33782 ;;		line 195 in file "mcc_generated_files/uart2.c"
 33783 ;; Parameters:    Size  Location     Type
 33784 ;;		None
 33785 ;; Auto vars:     Size  Location     Type
 33786 ;;		None
 33787 ;; Return value:  Size  Location     Type
 33788 ;;                  1    wreg      void 
 33789 ;; Registers used:
 33790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33791 ;; Tracked objects:
 33792 ;;		On entry : 0/0
 33793 ;;		On exit  : 0/0
 33794 ;;		Unchanged: 0/0
 33795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33800 ;;Total ram usage:        0 bytes
 33801 ;; Hardware stack levels used:    1
 33802 ;; Hardware stack levels required when called:    1
 33803 ;; This function calls:
 33804 ;;		Absolute function
 33805 ;;		_UART2_Transmit_ISR
 33806 ;; This function is called by:
 33807 ;;		Interrupt level 2
 33808 ;; This function uses a non-reentrant model
 33809 ;;
 33810                           
 33811                           	psect	text162
 33812  01B318                     __ptext162:
 33813                           	opt callstack 0
 33814  01B318                     _UART2_tx_vect_isr:
 33815                           	opt callstack 4
 33816                           
 33817                           ;incstack = 0
 33818  01B318  EE14  F142         	lfsr	1,___inthi_sp
 33819                           
 33820                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 33821  01B31C  0100               	movlb	0	; () banked
 33822  01B31E  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33823  01B320  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33824  01B322  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33825  01B324  B4D8               	btfsc	status,2,c
 33826  01B326  0011               	retfie		f
 33827                           
 33828                           ; BSR set to: 0
 33829                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 33830  01B328  D801               	call	i2u1008_48
 33831  01B32A  0011               	retfie		f
 33832  01B32C                     i2u1008_48:
 33833  01B32C  0005               	push	
 33834  01B32E  6EFA               	movwf	pclath,c
 33835  01B330  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33836  01B332  6EFD               	movwf	tosl,c
 33837  01B334  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33838  01B336  6EFE               	movwf	tosh,c
 33839  01B338  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33840  01B33A  6EFF               	movwf	tosu,c
 33841  01B33C  50FA               	movf	pclath,w,c
 33842  01B33E  0012               	return		;indir
 33843  01B340                     __end_of_UART2_tx_vect_isr:
 33844                           	opt callstack 0
 33845                           
 33846 ;; *************** function _UART2_Transmit_ISR *****************
 33847 ;; Defined at:
 33848 ;;		line 213 in file "mcc_generated_files/uart2.c"
 33849 ;; Parameters:    Size  Location     Type
 33850 ;;		None
 33851 ;; Auto vars:     Size  Location     Type
 33852 ;;		None
 33853 ;; Return value:  Size  Location     Type
 33854 ;;                  1  [STACK] void 
 33855 ;; Registers used:
 33856 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33857 ;; Tracked objects:
 33858 ;;		On entry : 3F/0
 33859 ;;		On exit  : 3B/39
 33860 ;;		Unchanged: 0/0
 33861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33866 ;;Total ram usage:        0 bytes
 33867 ;; Hardware stack levels used:    1
 33868 ;; This function calls:
 33869 ;;		Nothing
 33870 ;; This function is called by:
 33871 ;;		_UART2_Initialize
 33872 ;;		_UART2_tx_vect_isr
 33873 ;; This function uses a reentrant model
 33874 ;;
 33875                           
 33876                           	psect	text163
 33877  01B068                     __ptext163:
 33878                           	opt callstack 0
 33879  01B068                     _UART2_Transmit_ISR:
 33880                           	opt callstack 4
 33881                           
 33882                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 33883                           
 33884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33885                           ;incstack = 0
 33886  01B068  0E40               	movlw	64
 33887  01B06A  6059               	cpfslt	_uart2TxBufferRemaining^0,c
 33888  01B06C  D010               	goto	l673
 33889                           
 33890                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 33891  01B06E  0E54               	movlw	low _uart2TxBuffer
 33892  01B070  245A               	addwf	_uart2TxTail^0,w,c	;volatile
 33893  01B072  6ED9               	movwf	fsr2l,c
 33894  01B074  6ADA               	clrf	fsr2h,c
 33895  01B076  0E03               	movlw	high _uart2TxBuffer
 33896  01B078  22DA               	addwfc	fsr2h,f,c
 33897  01B07A  50DF               	movf	indf2,w,c
 33898  01B07C  013D               	movlb	61	; () banked
 33899  01B07E  6FD2               	movwf	210,b	;volatile
 33900                           
 33901                           ; BSR set to: 61
 33902  01B080  2A5A               	incf	_uart2TxTail^0,f,c	;volatile
 33903                           
 33904                           ; BSR set to: 61
 33905                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 33906  01B082  0E3F               	movlw	63
 33907  01B084  645A               	cpfsgt	_uart2TxTail^0,c
 33908  01B086  D001               	goto	l10420
 33909                           
 33910                           ; BSR set to: 61
 33911                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 33912  01B088  6A5A               	clrf	_uart2TxTail^0,c	;volatile
 33913  01B08A                     l10420:
 33914                           
 33915                           ; BSR set to: 61
 33916                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 33917  01B08A  2A59               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 33918                           
 33919                           ;mcc_generated_files/uart2.c: 224:     }
 33920  01B08C  0012               	return	
 33921  01B08E                     l673:
 33922                           
 33923                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 33924  01B08E  0139               	movlb	57	; () banked
 33925  01B090  9796               	bcf	150,3,b	;volatile
 33926                           
 33927                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33928  01B092  0012               	return		;funcret
 33929  01B094                     __end_of_UART2_Transmit_ISR:
 33930                           	opt callstack 0
 33931                           
 33932 ;; *************** function _UART2_rx_vect_isr *****************
 33933 ;; Defined at:
 33934 ;;		line 203 in file "mcc_generated_files/uart2.c"
 33935 ;; Parameters:    Size  Location     Type
 33936 ;;		None
 33937 ;; Auto vars:     Size  Location     Type
 33938 ;;		None
 33939 ;; Return value:  Size  Location     Type
 33940 ;;                  1    wreg      void 
 33941 ;; Registers used:
 33942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33943 ;; Tracked objects:
 33944 ;;		On entry : 0/0
 33945 ;;		On exit  : 0/0
 33946 ;;		Unchanged: 0/0
 33947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33952 ;;Total ram usage:        0 bytes
 33953 ;; Hardware stack levels used:    1
 33954 ;; Hardware stack levels required when called:    1
 33955 ;; This function calls:
 33956 ;;		Absolute function
 33957 ;;		_UART2_Receive_ISR
 33958 ;; This function is called by:
 33959 ;;		Interrupt level 2
 33960 ;; This function uses a non-reentrant model
 33961 ;;
 33962                           
 33963                           	psect	text164
 33964  01B340                     __ptext164:
 33965                           	opt callstack 0
 33966  01B340                     _UART2_rx_vect_isr:
 33967                           	opt callstack 4
 33968                           
 33969                           ;incstack = 0
 33970  01B340  EE14  F142         	lfsr	1,___inthi_sp
 33971                           
 33972                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 33973  01B344  0100               	movlb	0	; () banked
 33974  01B346  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33975  01B348  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33976  01B34A  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33977  01B34C  B4D8               	btfsc	status,2,c
 33978  01B34E  0011               	retfie		f
 33979                           
 33980                           ; BSR set to: 0
 33981                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 33982  01B350  D801               	call	i2u1010_48
 33983  01B352  0011               	retfie		f
 33984  01B354                     i2u1010_48:
 33985  01B354  0005               	push	
 33986  01B356  6EFA               	movwf	pclath,c
 33987  01B358  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33988  01B35A  6EFD               	movwf	tosl,c
 33989  01B35C  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33990  01B35E  6EFE               	movwf	tosh,c
 33991  01B360  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33992  01B362  6EFF               	movwf	tosu,c
 33993  01B364  50FA               	movf	pclath,w,c
 33994  01B366  0012               	return		;indir
 33995  01B368                     __end_of_UART2_rx_vect_isr:
 33996                           	opt callstack 0
 33997                           
 33998 ;; *************** function _UART2_Receive_ISR *****************
 33999 ;; Defined at:
 34000 ;;		line 233 in file "mcc_generated_files/uart2.c"
 34001 ;; Parameters:    Size  Location     Type
 34002 ;;		None
 34003 ;; Auto vars:     Size  Location     Type
 34004 ;;		None
 34005 ;; Return value:  Size  Location     Type
 34006 ;;                  1  [STACK] void 
 34007 ;; Registers used:
 34008 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34009 ;; Tracked objects:
 34010 ;;		On entry : 3F/0
 34011 ;;		On exit  : 0/0
 34012 ;;		Unchanged: 0/0
 34013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34018 ;;Total ram usage:        0 bytes
 34019 ;; Hardware stack levels used:    1
 34020 ;; This function calls:
 34021 ;;		Nothing
 34022 ;; This function is called by:
 34023 ;;		_UART2_Initialize
 34024 ;;		_UART2_rx_vect_isr
 34025 ;; This function uses a reentrant model
 34026 ;;
 34027                           
 34028                           	psect	text165
 34029  01B51E                     __ptext165:
 34030                           	opt callstack 0
 34031  01B51E                     _UART2_Receive_ISR:
 34032                           	opt callstack 4
 34033                           
 34034                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 34035                           
 34036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34037                           ;incstack = 0
 34038  01B51E  0E00               	movlw	low _uart2RxBuffer
 34039  01B520  2458               	addwf	_uart2RxHead^0,w,c	;volatile
 34040  01B522  6ED9               	movwf	fsr2l,c
 34041  01B524  6ADA               	clrf	fsr2h,c
 34042  01B526  0E05               	movlw	high _uart2RxBuffer
 34043  01B528  22DA               	addwfc	fsr2h,f,c
 34044  01B52A  006F F743 FFDF     	movff	15824,indf2	;volatile
 34045  01B530  2A58               	incf	_uart2RxHead^0,f,c	;volatile
 34046                           
 34047                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34048  01B532  2858               	incf	_uart2RxHead^0,w,c
 34049  01B534  B4D8               	btfsc	status,2,c
 34050                           
 34051                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34052  01B536  6A58               	clrf	_uart2RxHead^0,c	;volatile
 34053                           
 34054                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34055  01B538  2A56               	incf	_uart2RxCount^0,f,c	;volatile
 34056                           
 34057                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34058  01B53A  0012               	return		;funcret
 34059  01B53C                     __end_of_UART2_Receive_ISR:
 34060                           	opt callstack 0
 34061                           
 34062 ;; *************** function _TMR6_ISR *****************
 34063 ;; Defined at:
 34064 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34065 ;; Parameters:    Size  Location     Type
 34066 ;;		None
 34067 ;; Auto vars:     Size  Location     Type
 34068 ;;		None
 34069 ;; Return value:  Size  Location     Type
 34070 ;;                  1    wreg      void 
 34071 ;; Registers used:
 34072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34073 ;; Tracked objects:
 34074 ;;		On entry : 0/0
 34075 ;;		On exit  : 0/0
 34076 ;;		Unchanged: 0/0
 34077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34082 ;;Total ram usage:        1 bytes
 34083 ;; Hardware stack levels used:    1
 34084 ;; Hardware stack levels required when called:    2
 34085 ;; This function calls:
 34086 ;;		_TMR6_CallBack
 34087 ;; This function is called by:
 34088 ;;		Interrupt level 2
 34089 ;; This function uses a non-reentrant model
 34090 ;;
 34091                           
 34092                           	psect	text166
 34093  01B590                     __ptext166:
 34094                           	opt callstack 0
 34095  01B590                     _TMR6_ISR:
 34096                           	opt callstack 3
 34097                           
 34098                           ;incstack = 0
 34099  01B590  0060  F0A0  F006   	movff	btemp,??_TMR6_ISR
 34100  01B596  EE14  F142         	lfsr	1,___inthi_sp
 34101                           
 34102                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34103  01B59A  0139               	movlb	57	; () banked
 34104  01B59C  91A9               	bcf	169,0,b	;volatile
 34105                           
 34106                           ; BSR set to: 57
 34107                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34108  01B59E  EC20  F0DA         	call	_TMR6_CallBack	;wreg free
 34109  01B5A2  0060  F018  F028   	movff	??_TMR6_ISR,btemp
 34110  01B5A8  0011               	retfie		f
 34111  01B5AA                     __end_of_TMR6_ISR:
 34112                           	opt callstack 0
 34113                           
 34114 ;; *************** function _TMR6_CallBack *****************
 34115 ;; Defined at:
 34116 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34117 ;; Parameters:    Size  Location     Type
 34118 ;;		None
 34119 ;; Auto vars:     Size  Location     Type
 34120 ;;		None
 34121 ;; Return value:  Size  Location     Type
 34122 ;;                  1  [STACK] void 
 34123 ;; Registers used:
 34124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34125 ;; Tracked objects:
 34126 ;;		On entry : 3F/39
 34127 ;;		On exit  : 0/0
 34128 ;;		Unchanged: 0/0
 34129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34134 ;;Total ram usage:        0 bytes
 34135 ;; Hardware stack levels used:    1
 34136 ;; Hardware stack levels required when called:    1
 34137 ;; This function calls:
 34138 ;;		Absolute function
 34139 ;;		_TMR6_DefaultInterruptHandler
 34140 ;; This function is called by:
 34141 ;;		_TMR6_ISR
 34142 ;; This function uses a reentrant model
 34143 ;;
 34144                           
 34145                           	psect	text167
 34146  01B440                     __ptext167:
 34147                           	opt callstack 0
 34148  01B440                     _TMR6_CallBack:
 34149                           	opt callstack 3
 34150                           
 34151                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34152                           
 34153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34154                           ;incstack = 0
 34155  01B440  0100               	movlb	0	; () banked
 34156  01B442  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34157  01B444  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34158  01B446  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34159  01B448  B4D8               	btfsc	status,2,c
 34160  01B44A  0012               	return	
 34161                           
 34162                           ; BSR set to: 0
 34163                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34164  01B44C  D801               	call	u967_48
 34165  01B44E  0012               	return	
 34166  01B450                     u967_48:
 34167  01B450  0005               	push	
 34168  01B452  6EFA               	movwf	pclath,c
 34169  01B454  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34170  01B456  6EFD               	movwf	tosl,c
 34171  01B458  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34172  01B45A  6EFE               	movwf	tosh,c
 34173  01B45C  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34174  01B45E  6EFF               	movwf	tosu,c
 34175  01B460  50FA               	movf	pclath,w,c
 34176  01B462  0012               	return		;indir
 34177  01B464                     __end_of_TMR6_CallBack:
 34178                           	opt callstack 0
 34179                           
 34180 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 34181 ;; Defined at:
 34182 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 34183 ;; Parameters:    Size  Location     Type
 34184 ;;		None
 34185 ;; Auto vars:     Size  Location     Type
 34186 ;;  i               1  [STACK] unsigned char 
 34187 ;; Return value:  Size  Location     Type
 34188 ;;                  1  [STACK] void 
 34189 ;; Registers used:
 34190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 34191 ;; Tracked objects:
 34192 ;;		On entry : 3F/0
 34193 ;;		On exit  : 0/0
 34194 ;;		Unchanged: 0/0
 34195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34200 ;;Total ram usage:        0 bytes
 34201 ;; Hardware stack levels used:    1
 34202 ;; This function calls:
 34203 ;;		Nothing
 34204 ;; This function is called by:
 34205 ;;		_TMR6_Initialize
 34206 ;;		_TMR6_CallBack
 34207 ;; This function uses a reentrant model
 34208 ;;
 34209                           
 34210                           	psect	text168
 34211  01A96C                     __ptext168:
 34212                           	opt callstack 0
 34213  01A96C                     _TMR6_DefaultInterruptHandler:
 34214                           	opt callstack 0
 34215                           
 34216                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34217  01A96C  52E6               	movf	postinc1,f,c
 34218                           
 34219                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 34220                           ;stkvar	_i @ sp[(-1)+0]
 34221                           
 34222                           ;incstack = 0
 34223  01A96E  0EFF               	movlw	-1
 34224  01A970  6AE3               	clrf	plusw1,c
 34225  01A972                     l9992:
 34226                           
 34227                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 34228                           ;stkvar	_i @ sp[(-1)+0]
 34229  01A972  0EFF               	movlw	-1
 34230  01A974  50E3               	movf	plusw1,w,c
 34231  01A976  0D02               	mullw	2
 34232  01A978  0E94               	movlw	low _tickCount
 34233  01A97A  24F3               	addwf	243,w,c
 34234  01A97C  6ED9               	movwf	fsr2l,c
 34235  01A97E  0E03               	movlw	high _tickCount
 34236  01A980  20F4               	addwfc	prodh,w,c
 34237  01A982  6EDA               	movwf	fsr2h,c
 34238  01A984  50DE               	movf	postinc2,w,c
 34239  01A986  10DE               	iorwf	postinc2,w,c
 34240  01A988  B4D8               	btfsc	status,2,c
 34241  01A98A  D00C               	goto	l9996
 34242                           
 34243                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 34244                           ;stkvar	_i @ sp[(-1)+0]
 34245  01A98C  0EFF               	movlw	-1
 34246  01A98E  50E3               	movf	plusw1,w,c
 34247  01A990  0D02               	mullw	2
 34248  01A992  0E94               	movlw	low _tickCount
 34249  01A994  24F3               	addwf	243,w,c
 34250  01A996  6ED9               	movwf	fsr2l,c
 34251  01A998  0E03               	movlw	high _tickCount
 34252  01A99A  20F4               	addwfc	prodh,w,c
 34253  01A99C  6EDA               	movwf	fsr2h,c
 34254  01A99E  06DE               	decf	postinc2,f,c
 34255  01A9A0  0E00               	movlw	0
 34256  01A9A2  5ADD               	subwfb	postdec2,f,c
 34257  01A9A4                     l9996:
 34258                           
 34259                           ;mcc_generated_files/tmr6.c: 207:  }
 34260                           ;stkvar	_i @ sp[(-1)+0]
 34261  01A9A4  0EFF               	movlw	-1
 34262  01A9A6  2AE3               	incf	plusw1,f,c
 34263                           
 34264                           ;stkvar	_i @ sp[(-1)+0]
 34265  01A9A8  0EFF               	movlw	-1
 34266  01A9AA  006F FF8C  F028    	movff	plusw1,btemp
 34267  01A9B0  0E0C               	movlw	12
 34268  01A9B2  6428               	cpfsgt	btemp^0,c
 34269  01A9B4  D7DE               	goto	l9992
 34270                           
 34271                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34272  01A9B6  52E5               	movf	postdec1,f,c
 34273  01A9B8  0012               	return		;funcret
 34274  01A9BA                     __end_of_TMR6_DefaultInterruptHandler:
 34275                           	opt callstack 0
 34276                           
 34277 ;; *************** function _DMA1_DMASCNT_ISR *****************
 34278 ;; Defined at:
 34279 ;;		line 126 in file "mcc_generated_files/dma1.c"
 34280 ;; Parameters:    Size  Location     Type
 34281 ;;		None
 34282 ;; Auto vars:     Size  Location     Type
 34283 ;;		None
 34284 ;; Return value:  Size  Location     Type
 34285 ;;                  1    wreg      void 
 34286 ;; Registers used:
 34287 ;;		None
 34288 ;; Tracked objects:
 34289 ;;		On entry : 0/0
 34290 ;;		On exit  : 3F/0
 34291 ;;		Unchanged: 0/0
 34292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34297 ;;Total ram usage:        0 bytes
 34298 ;; Hardware stack levels used:    1
 34299 ;; This function calls:
 34300 ;;		Nothing
 34301 ;; This function is called by:
 34302 ;;		Interrupt level 2
 34303 ;; This function uses a non-reentrant model
 34304 ;;
 34305                           
 34306                           	psect	text169
 34307  01B6A0                     __ptext169:
 34308                           	opt callstack 0
 34309  01B6A0                     _DMA1_DMASCNT_ISR:
 34310                           	opt callstack 5
 34311                           
 34312                           ;incstack = 0
 34313  01B6A0  EE14  F142         	lfsr	1,___inthi_sp
 34314                           
 34315                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 34316  01B6A4  0139               	movlb	57	; () banked
 34317  01B6A6  91A2               	bcf	162,0,b	;volatile
 34318                           
 34319                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 34320  01B6A8  0100               	movlb	0	; () banked
 34321  01B6AA  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 34322                           
 34323                           ; BSR set to: 0
 34324  01B6AC  0011               	retfie		f
 34325  01B6AE                     __end_of_DMA1_DMASCNT_ISR:
 34326                           	opt callstack 0
 34327                           
 34328 ;; *************** function _DMA1_DMADCNT_ISR *****************
 34329 ;; Defined at:
 34330 ;;		line 134 in file "mcc_generated_files/dma1.c"
 34331 ;; Parameters:    Size  Location     Type
 34332 ;;		None
 34333 ;; Auto vars:     Size  Location     Type
 34334 ;;		None
 34335 ;; Return value:  Size  Location     Type
 34336 ;;                  1    wreg      void 
 34337 ;; Registers used:
 34338 ;;		None
 34339 ;; Tracked objects:
 34340 ;;		On entry : 0/0
 34341 ;;		On exit  : 3F/39
 34342 ;;		Unchanged: 0/0
 34343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34348 ;;Total ram usage:        0 bytes
 34349 ;; Hardware stack levels used:    1
 34350 ;; This function calls:
 34351 ;;		Nothing
 34352 ;; This function is called by:
 34353 ;;		Interrupt level 2
 34354 ;; This function uses a non-reentrant model
 34355 ;;
 34356                           
 34357                           	psect	text170
 34358  01B6C4                     __ptext170:
 34359                           	opt callstack 0
 34360  01B6C4                     _DMA1_DMADCNT_ISR:
 34361                           	opt callstack 5
 34362                           
 34363                           ; BSR set to: 0
 34364                           ;incstack = 0
 34365  01B6C4  EE14  F142         	lfsr	1,___inthi_sp
 34366                           
 34367                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 34368  01B6C8  0139               	movlb	57	; () banked
 34369  01B6CA  93A2               	bcf	162,1,b	;volatile
 34370                           
 34371                           ; BSR set to: 57
 34372  01B6CC  0011               	retfie		f
 34373  01B6CE                     __end_of_DMA1_DMADCNT_ISR:
 34374                           	opt callstack 0
 34375                           
 34376 ;; *************** function _DMA1_DMAA_ISR *****************
 34377 ;; Defined at:
 34378 ;;		line 144 in file "mcc_generated_files/dma1.c"
 34379 ;; Parameters:    Size  Location     Type
 34380 ;;		None
 34381 ;; Auto vars:     Size  Location     Type
 34382 ;;		None
 34383 ;; Return value:  Size  Location     Type
 34384 ;;                  1    wreg      void 
 34385 ;; Registers used:
 34386 ;;		None
 34387 ;; Tracked objects:
 34388 ;;		On entry : 0/0
 34389 ;;		On exit  : 3F/39
 34390 ;;		Unchanged: 0/0
 34391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34396 ;;Total ram usage:        0 bytes
 34397 ;; Hardware stack levels used:    1
 34398 ;; This function calls:
 34399 ;;		Nothing
 34400 ;; This function is called by:
 34401 ;;		Interrupt level 2
 34402 ;; This function uses a non-reentrant model
 34403 ;;
 34404                           
 34405                           	psect	text171
 34406  01B6D0                     __ptext171:
 34407                           	opt callstack 0
 34408  01B6D0                     _DMA1_DMAA_ISR:
 34409                           	opt callstack 5
 34410                           
 34411                           ; BSR set to: 57
 34412                           ;incstack = 0
 34413  01B6D0  EE14  F142         	lfsr	1,___inthi_sp
 34414                           
 34415                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 34416  01B6D4  0139               	movlb	57	; () banked
 34417  01B6D6  97A2               	bcf	162,3,b	;volatile
 34418                           
 34419                           ; BSR set to: 57
 34420  01B6D8  0011               	retfie		f
 34421  01B6DA                     __end_of_DMA1_DMAA_ISR:
 34422                           	opt callstack 0
 34423                           
 34424 ;; *************** function _DMA1_DMAOR_ISR *****************
 34425 ;; Defined at:
 34426 ;;		line 155 in file "mcc_generated_files/dma1.c"
 34427 ;; Parameters:    Size  Location     Type
 34428 ;;		None
 34429 ;; Auto vars:     Size  Location     Type
 34430 ;;		None
 34431 ;; Return value:  Size  Location     Type
 34432 ;;                  1    wreg      void 
 34433 ;; Registers used:
 34434 ;;		None
 34435 ;; Tracked objects:
 34436 ;;		On entry : 0/0
 34437 ;;		On exit  : 3F/39
 34438 ;;		Unchanged: 0/0
 34439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34444 ;;Total ram usage:        0 bytes
 34445 ;; Hardware stack levels used:    1
 34446 ;; This function calls:
 34447 ;;		Nothing
 34448 ;; This function is called by:
 34449 ;;		Interrupt level 2
 34450 ;; This function uses a non-reentrant model
 34451 ;;
 34452                           
 34453                           	psect	text172
 34454  01B6DC                     __ptext172:
 34455                           	opt callstack 0
 34456  01B6DC                     _DMA1_DMAOR_ISR:
 34457                           	opt callstack 5
 34458                           
 34459                           ; BSR set to: 57
 34460                           ;incstack = 0
 34461  01B6DC  EE14  F142         	lfsr	1,___inthi_sp
 34462                           
 34463                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 34464  01B6E0  0139               	movlb	57	; () banked
 34465  01B6E2  95A2               	bcf	162,2,b	;volatile
 34466                           
 34467                           ; BSR set to: 57
 34468  01B6E4  0011               	retfie		f
 34469  01B6E6                     __end_of_DMA1_DMAOR_ISR:
 34470                           	opt callstack 0
 34471                           
 34472                           ;
 34473                           ; Interrupt Vector Table @ 0x8
 34474                           ;
 34475                           
 34476                           	psect	ivt0x8
 34477  000008                     __pivt0x8:
 34478                           	opt callstack 0
 34479  000008                     ivt0x8_base:
 34480                           	opt callstack 0
 34481                           
 34482                           ; Vector 0 : SWINT
 34483  000008  6DCA               	dw	_Default_ISR shr (0+2)
 34484                           
 34485                           ; Vector 1 : HLVD
 34486  00000A  6DCA               	dw	_Default_ISR shr (0+2)
 34487                           
 34488                           ; Vector 2 : OSF
 34489  00000C  6DCA               	dw	_Default_ISR shr (0+2)
 34490                           
 34491                           ; Vector 3 : CSW
 34492  00000E  6DCA               	dw	_Default_ISR shr (0+2)
 34493                           
 34494                           ; Vector 4 : NVM
 34495  000010  6DCA               	dw	_Default_ISR shr (0+2)
 34496                           
 34497                           ; Vector 5 : SCAN
 34498  000012  6DCA               	dw	_Default_ISR shr (0+2)
 34499                           
 34500                           ; Vector 6 : CRC
 34501  000014  6DCA               	dw	_Default_ISR shr (0+2)
 34502                           
 34503                           ; Vector 7 : IOC
 34504  000016  6DCA               	dw	_Default_ISR shr (0+2)
 34505                           
 34506                           ; Vector 8 : INT0
 34507  000018  6DA4               	dw	_INT0_ISR shr (0+2)
 34508                           
 34509                           ; Vector 9 : ZCD
 34510  00001A  6DCA               	dw	_Default_ISR shr (0+2)
 34511                           
 34512                           ; Vector 10 : AD
 34513  00001C  6C0F               	dw	_ADCC_ISR shr (0+2)
 34514                           
 34515                           ; Vector 11 : ADT
 34516  00001E  6944               	dw	_ADCC_ThresholdISR shr (0+2)
 34517                           
 34518                           ; Vector 12 : CMP1
 34519  000020  6DCA               	dw	_Default_ISR shr (0+2)
 34520                           
 34521                           ; Vector 13 : SMT1
 34522  000022  6DCA               	dw	_Default_ISR shr (0+2)
 34523                           
 34524                           ; Vector 14 : SMT1PRA
 34525  000024  6DCA               	dw	_Default_ISR shr (0+2)
 34526                           
 34527                           ; Vector 15 : SMT1PRW
 34528  000026  6DCA               	dw	_Default_ISR shr (0+2)
 34529                           
 34530                           ; Vector 16 : DMA1SCNT
 34531  000028  6DA8               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 34532                           
 34533                           ; Vector 17 : DMA1DCNT
 34534  00002A  6DB1               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 34535                           
 34536                           ; Vector 18 : DMA1OR
 34537  00002C  6DB7               	dw	_DMA1_DMAOR_ISR shr (0+2)
 34538                           
 34539                           ; Vector 19 : DMA1A
 34540  00002E  6DB4               	dw	_DMA1_DMAA_ISR shr (0+2)
 34541                           
 34542                           ; Vector 20 : SPI1RX
 34543  000030  6DCA               	dw	_Default_ISR shr (0+2)
 34544                           
 34545                           ; Vector 21 : SPI1TX
 34546  000032  6DCA               	dw	_Default_ISR shr (0+2)
 34547                           
 34548                           ; Vector 22 : SPI1
 34549  000034  6DCA               	dw	_Default_ISR shr (0+2)
 34550                           
 34551                           ; Vector 23 : I2C1RX
 34552  000036  6DCA               	dw	_Default_ISR shr (0+2)
 34553                           
 34554                           ; Vector 24 : I2C1TX
 34555  000038  6DCA               	dw	_Default_ISR shr (0+2)
 34556                           
 34557                           ; Vector 25 : I2C1
 34558  00003A  6DCA               	dw	_Default_ISR shr (0+2)
 34559                           
 34560                           ; Vector 26 : I2C1E
 34561  00003C  6DCA               	dw	_Default_ISR shr (0+2)
 34562                           
 34563                           ; Vector 27 : U1RX
 34564  00003E  6CBC               	dw	_UART1_rx_vect_isr shr (0+2)
 34565                           
 34566                           ; Vector 28 : U1TX
 34567  000040  6DCA               	dw	_Default_ISR shr (0+2)
 34568                           
 34569                           ; Vector 29 : U1E
 34570  000042  6DCA               	dw	_Default_ISR shr (0+2)
 34571                           
 34572                           ; Vector 30 : U1
 34573  000044  6DCA               	dw	_Default_ISR shr (0+2)
 34574                           
 34575                           ; Vector 31 : TMR0
 34576  000046  6DCA               	dw	_Default_ISR shr (0+2)
 34577                           
 34578                           ; Vector 32 : TMR1
 34579  000048  6DCA               	dw	_Default_ISR shr (0+2)
 34580                           
 34581                           ; Vector 33 : TMR1G
 34582  00004A  6DCA               	dw	_Default_ISR shr (0+2)
 34583                           
 34584                           ; Vector 34 : TMR2
 34585  00004C  6DCA               	dw	_Default_ISR shr (0+2)
 34586                           
 34587                           ; Vector 35 : CCP1
 34588  00004E  6DCA               	dw	_Default_ISR shr (0+2)
 34589                           
 34590                           ; Vector 36 : Undefined
 34591  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 34592                           
 34593                           ; Vector 37 : NCO1
 34594  000052  6DCA               	dw	_Default_ISR shr (0+2)
 34595                           
 34596                           ; Vector 38 : CWG1
 34597  000054  6DCA               	dw	_Default_ISR shr (0+2)
 34598                           
 34599                           ; Vector 39 : CLC1
 34600  000056  6DCA               	dw	_Default_ISR shr (0+2)
 34601                           
 34602                           ; Vector 40 : INT1
 34603  000058  6B4D               	dw	_INT1_ISR shr (0+2)
 34604                           
 34605                           ; Vector 41 : CMP2
 34606  00005A  6DCA               	dw	_Default_ISR shr (0+2)
 34607                           
 34608                           ; Vector 42 : DMA2SCNT
 34609  00005C  6DCA               	dw	_Default_ISR shr (0+2)
 34610                           
 34611                           ; Vector 43 : DMA2DCNT
 34612  00005E  6DCA               	dw	_Default_ISR shr (0+2)
 34613                           
 34614                           ; Vector 44 : DMA2OR
 34615  000060  6DCA               	dw	_Default_ISR shr (0+2)
 34616                           
 34617                           ; Vector 45 : DMA2A
 34618  000062  6DCA               	dw	_Default_ISR shr (0+2)
 34619                           
 34620                           ; Vector 46 : I2C2RX
 34621  000064  6DCA               	dw	_Default_ISR shr (0+2)
 34622                           
 34623                           ; Vector 47 : I2C2TX
 34624  000066  6DCA               	dw	_Default_ISR shr (0+2)
 34625                           
 34626                           ; Vector 48 : I2C2
 34627  000068  6DCA               	dw	_Default_ISR shr (0+2)
 34628                           
 34629                           ; Vector 49 : I2C2E
 34630  00006A  6DCA               	dw	_Default_ISR shr (0+2)
 34631                           
 34632                           ; Vector 50 : U2RX
 34633  00006C  6CD0               	dw	_UART2_rx_vect_isr shr (0+2)
 34634                           
 34635                           ; Vector 51 : U2TX
 34636  00006E  6CC6               	dw	_UART2_tx_vect_isr shr (0+2)
 34637                           
 34638                           ; Vector 52 : U2E
 34639  000070  6DCA               	dw	_Default_ISR shr (0+2)
 34640                           
 34641                           ; Vector 53 : U2
 34642  000072  6DCA               	dw	_Default_ISR shr (0+2)
 34643                           
 34644                           ; Vector 54 : TMR3
 34645  000074  6215               	dw	_TMR3_ISR shr (0+2)
 34646                           
 34647                           ; Vector 55 : TMR3G
 34648  000076  6DCA               	dw	_Default_ISR shr (0+2)
 34649                           
 34650                           ; Vector 56 : TMR4
 34651  000078  6DCA               	dw	_Default_ISR shr (0+2)
 34652                           
 34653                           ; Vector 57 : CCP2
 34654  00007A  6DCA               	dw	_Default_ISR shr (0+2)
 34655                           
 34656                           ; Vector 58 : Undefined
 34657  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 34658                           
 34659                           ; Vector 59 : CWG2
 34660  00007E  6DCA               	dw	_Default_ISR shr (0+2)
 34661                           
 34662                           ; Vector 60 : CLC2
 34663  000080  6DCA               	dw	_Default_ISR shr (0+2)
 34664                           
 34665                           ; Vector 61 : INT2
 34666  000082  6DCA               	dw	_Default_ISR shr (0+2)
 34667                           
 34668                           ; Vector 62 : Undefined
 34669  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 34670                           
 34671                           ; Vector 63 : Undefined
 34672  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 34673                           
 34674                           ; Vector 64 : Undefined
 34675  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 34676                           
 34677                           ; Vector 65 : Undefined
 34678  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 34679                           
 34680                           ; Vector 66 : Undefined
 34681  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 34682                           
 34683                           ; Vector 67 : Undefined
 34684  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 34685                           
 34686                           ; Vector 68 : Undefined
 34687  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 34688                           
 34689                           ; Vector 69 : Undefined
 34690  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 34691                           
 34692                           ; Vector 70 : TMR5
 34693  000094  6A07               	dw	_TMR5_ISR shr (0+2)
 34694                           
 34695                           ; Vector 71 : TMR5G
 34696  000096  6DCA               	dw	_Default_ISR shr (0+2)
 34697                           
 34698                           ; Vector 72 : TMR6
 34699  000098  6D64               	dw	_TMR6_ISR shr (0+2)
 34700                           
 34701                           ; Vector 73 : CCP3
 34702  00009A  6DCA               	dw	_Default_ISR shr (0+2)
 34703                           
 34704                           ; Vector 74 : CWG3
 34705  00009C  6DCA               	dw	_Default_ISR shr (0+2)
 34706                           
 34707                           ; Vector 75 : CLC3
 34708  00009E  6DCA               	dw	_Default_ISR shr (0+2)
 34709                           
 34710                           ; Vector 76 : Undefined
 34711  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 34712                           
 34713                           ; Vector 77 : Undefined
 34714  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 34715                           
 34716                           ; Vector 78 : Undefined
 34717  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 34718                           
 34719                           ; Vector 79 : Undefined
 34720  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 34721                           
 34722                           ; Vector 80 : CCP4
 34723  0000A8  6DCA               	dw	_Default_ISR shr (0+2)
 34724                           
 34725                           ; Vector 81 : CLC4
 34726  0000AA  6DCA               	dw	_Default_ISR shr (0+2)
 34727  0000AC                     ivt0x8_undefint:
 34728                           	opt callstack 0
 34729  0000AC  00FF               	reset	
 34730                           
 34731                           	psect	text173
 34732  000000                     __ptext173:
 34733                           	opt callstack 0
 34734                           
 34735                           	psect	rparam
 34736  0000                     
 34737                           	psect	temp
 34738  000028                     btemp:
 34739                           	opt callstack 0
 34740  000028                     	ds	32
 34741  0000                     wtemp0	set	btemp
 34742  0000                     wtemp1	set	btemp+2
 34743  0000                     wtemp2	set	btemp+4
 34744  0000                     wtemp3	set	btemp+6
 34745  0000                     wtemp4	set	btemp+8
 34746  0000                     wtemp5	set	btemp+10
 34747  0000                     wtemp8	set	btemp+1
 34748  0000                     ttemp0	set	btemp
 34749  0000                     ttemp1	set	btemp+3
 34750  0000                     ttemp2	set	btemp+6
 34751  0000                     ttemp3	set	btemp+9
 34752  0000                     ttemp5	set	btemp+1
 34753  0000                     ttemp6	set	btemp+4
 34754  0000                     ttemp7	set	btemp+8
 34755  0000                     ltemp0	set	btemp
 34756  0000                     ltemp1	set	btemp+4
 34757  0000                     ltemp2	set	btemp+8
 34758  0000                     lltemp0	set	btemp
 34759  0000                     lltemp1	set	btemp+8
 34760  0000                     lltemp2	set	btemp+16
 34761  0000                     lltemp3	set	btemp+24
 34762                           tosu	equ	0x3FFF
 34763                           tosh	equ	0x3FFE
 34764                           tosl	equ	0x3FFD
 34765                           stkptr	equ	0x3FFC
 34766                           pclatu	equ	0x3FFB
 34767                           pclath	equ	0x3FFA
 34768                           pcl	equ	0x3FF9
 34769                           tblptru	equ	0x3FF8
 34770                           tblptrh	equ	0x3FF7
 34771                           tblptrl	equ	0x3FF6
 34772                           tablat	equ	0x3FF5
 34773                           prodh	equ	0x3FF4
 34774                           prodl	equ	0x3FF3
 34775                           indf0	equ	0x3FEF
 34776                           postinc0	equ	0x3FEE
 34777                           postdec0	equ	0x3FED
 34778                           preinc0	equ	0x3FEC
 34779                           plusw0	equ	0x3FEB
 34780                           fsr0h	equ	0x3FEA
 34781                           fsr0l	equ	0x3FE9
 34782                           wreg	equ	0x3FE8
 34783                           indf1	equ	0x3FE7
 34784                           postinc1	equ	0x3FE6
 34785                           postdec1	equ	0x3FE5
 34786                           preinc1	equ	0x3FE4
 34787                           plusw1	equ	0x3FE3
 34788                           fsr1h	equ	0x3FE2
 34789                           fsr1l	equ	0x3FE1
 34790                           bsr	equ	0x3FE0
 34791                           indf2	equ	0x3FDF
 34792                           postinc2	equ	0x3FDE
 34793                           postdec2	equ	0x3FDD
 34794                           preinc2	equ	0x3FDC
 34795                           plusw2	equ	0x3FDB
 34796                           fsr2h	equ	0x3FDA
 34797                           fsr2l	equ	0x3FD9
 34798                           status	equ	0x3FD8


Data Sizes:
    Strings     919
    Constant    492
    Data        1003
    BSS         1299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     39      62
    BANK0           160      0     156
    BANK1           256      0     255
    BANK2           256      0     231
    BANK3           256      0     254
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6027_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[190]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4491tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[190]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[190]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0  373854
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35480
                                             14 COMRAM    25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35390
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35390
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     3E2      69       12.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FE      11       99.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9C       5       97.5%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     27      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     543      58        0.0%
DATA                 0      0     925       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 21 00:48:06 2019

                     _SPI1_Exchange8bit B4A6                __end_of_set_display_info B500  
                                     _C 0100                                       _D 07FF  
                                     _H 00F5                                       _P 009E  
                                     _R 00C6                                       _S 02BE  
                                     _T FB4B                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler B226            __end_of_start_switch_handler B4A6  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC53                  __end_of_FVR_Initialize B70E  
                           __CFG_LVP$ON 000000                                     l169 B616  
                                   l807 B4B4                                     l673 B08E  
                                   _GIE 01FE97                                     _abs AA94  
                                   _pad 90EE                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize B5C2                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack B41C                       _update_adc_result AD72  
                         __CFG_BBEN$OFF 000000                   __size_of_Volts_to_SOC 0092  
                         _INT1_CallBack B3B0                            __CFG_ZCD$OFF 000000  
                                  l1000 ACEC                                    l2110 914A  
                                  l2007 493A                                    l2130 544A  
                                  l2210 0B1A                                    l1322 12A2  
                                  l2051 6B9C                                    l1340 18DA  
                                  l1350 1AFA                                    l1351 1CFC  
                                  l3025 7BBE                                    l1338 18D4  
                       _timer3ReloadVal 00C4                                    l1188 AD2C  
                                  l1356 2232                                    l1348 1974  
                                  l1437 A770                                    l2166 123A  
                                  l2334 3214                                    l1712 B4FC  
                                  l3056 AAD4                                    l3048 8110  
                                  l2248 6C8A                                    l2195 066A  
                                  l3156 8FCC                                    l2284 5830  
                                  l2269 62F8                                    l1581 A196  
                                  l2630 8774                                    l1655 ADC8  
                                  l3087 7348                                    l3423 77A8  
                                  l1672 930E                                    l1664 7864  
                                  l1825 7F7A                                    l1577 9DFE  
                                  l1665 79C0                                    l2626 9A82  
                                  l3451 A330                                    l1596 AE32  
                                  l2637 8848                                    l1774 5366  
                                  l3438 A3B4                                    l1934 A22A  
                  _ADCC_StartConversion B630                                    l1943 9628  
                                  l2904 41FA                                    l2664 8576  
                                  l1866 9822                                    l2916 408A  
                                  l8100 3274                                    l2949 4EB6  
                                  l8110 32EA                                    l8030 4CF0  
                                  l8022 4CBE                                    l8014 4C58  
                                  l8006 4C22                                    l8040 4D32  
                                  l8016 4C6A                                    l8024 4CC2  
                                  l2985 3A3E                                    l8106 32B4  
                                  l8050 4D7C                                    l8212 38C4  
                                  l8124 3382                                    l8108 32BA  
                                  l8036 4D0C                                    l8222 3938  
                                  l8126 3388                                    l8118 3342  
                                  l8070 4E32                                    l8054 4D82  
                                  l9110 7234                                    l8240 39EC  
                                  l8232 39A8                                    l8208 38BE  
                                  l8136 33DA                                    l8128 33B8  
                                  l7600 3E22                                    l7520 3B24  
                                  l8064 4DF6                                    l9104 71BA  
                                  l8312 9008                                    l8242 3A06  
                                  l8226 397E                                    l7514 3ADE  
                                  l8082 4E8A                                    l9114 729C  
                                  l9106 71D2                                    l8410 84E2  
                                  l7604 3E52                                    l7532 3B8E  
                                  l7508 3A9E                                    l8084 4E9A  
                                  l8076 4E62                                    l9124 7338  
                                  l9108 71F6                                    l8316 9020  
                                  l8308 8FF6                                    l8420 8524  
                                  l8412 84FE                                    l9140 761A  
                                  l7710 41AA                                    l7622 3EEE  
                                  l7550 3C36                                    l7542 3BE4  
                                  l7526 3B5C                                    l7518 3AF4  
                                  l8262 89DA                                    l8334 90D4  
                                  l8326 90A0                                    l8350 9A80  
                                  l8342 9A0A                                    l9142 7686  
                                  l7704 4182                                    l7624 3F00  
                                  l7632 3F3C                                    l7544 3C14  
                                  l7480 9ED2                                    l8194 384E  
                                  l7538 3BCE                                    l9090 711A  
                                  l7482 9EF4                                    l8274 8A10  
                                  l8346 9A4C                                    l8418 850E  
                                  l8434 8168                                    l8188 3832  
                                  l7716 41DA                                    l7708 419A  
                                  l7644 4014                                    l7628 3F0A  
                                  l7580 3D74                                    l8364 87C2  
                                  l8268 89F0                                    l7820 6184  
                                  l8198 3874                                    l7662 40AC  
                                  l7654 406E                                    l7646 403A  
                                  l7590 3DE6                                    l8358 8732  
                                  l7750 AAC4                                    l7830 628A  
                                  l7822 61D4                                    l7806 6066  
                                  l8446 823A                                    l7664 40BE  
                                  l8376 8846                                    l8368 8810  
                                  l9600 7AEA                                    l9088 70F8  
                                  l8296 8AEA                                    l8288 8AB6  
                                  l8384 AA22                                    l7682 40F8  
                                  l7594 3E06                                    l9602 7B08  
                                  l8482 A90A                                    l9098 718E  
                                  l8394 8460                                    l7826 621C  
                                  l8466 8BEA                                    l8458 8B3E  
                                  l7668 40CA                                    l7596 3E18  
                                  l9612 7B3C                                    l9604 7B1E  
                                  l7924 74E4                                    l7916 7438  
                                  l7908 73B0                                    l7764 80AE  
                                  l7694 4156                                    l7678 40F2  
                                  l7950 49DC                                    l9622 7B9E  
                                  l7870 6F14                                    l7774 8108  
                                  l9552 A946                                    l7944 499C  
                                  l7864 6EC0                                    l7768 80B2  
                                  l7792 A3A4                                    l7848 A320  
                                  l9544 B022                                    l7970 4ABA  
                                  l7954 49F2                                    l9394 B156  
                                  l9482 AE3C                                    l7964 4A7A  
                                  l7956 4A22                                    l9580 7A0E  
                                  l7876 6F5A                                    l7982 4B3E  
                                  l7974 4AD0                                    l9590 7A88  
                                  l7976 4B00                                    l9592 7A9E  
                                  l7888 702C                                    l9594 7ABC  
                                  l7996 4B92                                    l7988 4B78  
                                  l9588 7A7A                                    STR_1 FF50  
                                  STR_2 FFA2                                    STR_3 FFD0  
                                  STR_4 FF1D                                    STR_5 FDF0  
                                  STR_6 FDF0                                    STR_7 FDF0  
                                  STR_8 FF0B                                    STR_9 FD08  
                                  l9992 A972                                    l9996 A9A4  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6000 A2DE  
                                  u6010 A2E0                                    u5220 9F22  
                                  u6100 6F54                                    u6030 AFD6  
                                  u6110 6F86                                    u6040 AFD8  
                                  u6200 7400                                    u5410 3E4A  
                                  u6130 7064                                    u6210 7432  
                                  u5250 AFA6                                    _T6PR 003F93  
                                  u5227 9F14                                    u5420 3E6A  
                                  u6060 6EBA                                    u6220 7464  
                                  u5260 AFA8                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u6150 70B6  
                                  u7110 8272                                    _PMD2 0039C2  
                                  u5415 3E3A                                    _PMD3 0039C3  
                                  u5520 405C                                    u5360 3D9A  
                                  u6400 4CEA                                    u6080 6F10  
                                  u6240 751C                                    u7040 852C  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u5370 3DBA                                    u7130 8B38  
                                  _PMD6 0039C6                                    u5371 3DB4  
                                  u6091 6F1A                                    _PMD7 0039C7  
                                  u5620 4146                                    u6500 4E46  
                                  u6260 756E                                    u6180 73AA  
                                  u7060 8556                                    u7140 8B6A  
                                  u5700 AF78                                    u7071 8128  
                                  u5560 40D0                                    u5480 3F32  
                                  u6440 4D74                                    u7080 8162  
                                  u7160 8C22                                    u5625 4136  
                                  u5650 4166                                    u5810 8100  
                                  u7090 8194                                    u6700 3912  
                                  u5580 40EA                                    u5388 3DBC  
                                  u7180 A8E6                                    u5820 8102  
                                  u9005 A5BC                                    u6605 355C  
                                  u5485 3F22                                    u5805 80E2  
                                  u9006 A5BE                                    u6710 394C  
                                  u7190 A906                                    u5750 AAA8  
                                  u6615 3624                                    u6720 3992  
                                  u6480 4DD0                                    u9200 51FC  
                                  u5760 8032                                    u8400 76B4  
                                  u6705 3902                                    u6625 37EC  
                                  u6490 4E0A                                    u9114 4F0C  
                                  u8330 718A                                    u5930 612A  
                                  u5850 A362                                    u5690 AF76  
                                  u9115 4F06                                    u5915 6084  
                                  u6660 38B6                                    u9220 7DDE  
                                  u6900 9A7C                                    u5916 608A  
                                  u5860 A364                                    u6485 4DC0  
                                  u5765 8028                                    u5917 6098  
                                  u6590 33C8                                    u9310 B470  
                                  u9134 4F2E                                    u8350 72E2  
                                  u5950 6202                                    u9135 4F28  
                                  u5935 6120                                    u8407 76A6  
                                  u9055 B65C                                    u8360 72E4  
                                  u6840 904C                                    u5880 5FFE  
                                  u8440 774E                                    u9056 B65E  
                                  u9065 B64C                                    u9154 5104  
                                  u6770 8A3C                                    u5890 604A  
                                  u8450 777C                                    u9066 B64E  
                                  u9155 50FE                                    u5955 61F8  
                                  u9316 B472                                    u6860 90C0  
                                  u5980 ABE4                                    u9420 A1D0  
                                  u5885 5FF4                                    u8445 7748  
                                  u9174 51D2                                    u9094 4EDC  
                                  u6790 8AD6                                    u5990 ABE6  
                                  u9175 51CC                                    u9095 4ED6  
                                  u8447 773A                                    u6960 AA1E  
                                  u8457 776E                                    u9194 51F4  
                                  u6970 8440                                    u9450 A216  
                                  u9195 51EE                                    u6980 8454  
                                  u6990 848E                                    u9438 A1D2  
                                  u6975 8436                                    _PLLR 01CEE0  
                                  u8835 AC20                                    u6995 8484  
                                  u8940 7B32                                    u9468 A218  
                                  u8980 A588                                    u8998 A58A  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR B068                           __CFG_FCMEN$ON 000000  
                                  _dbuf 03AE                                    _cp_h FC63  
                                  _cp_l FC5F                                    _atoi 70DE  
                                  _ctoa A22E                                    _main 1244  
                                  _dtoa 536C                                    _nanf A6A6  
                                  _seed 01F7                                    _prec 004A  
                                  _nout 00C0                                    _spin FBDB  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 6BA0  
                                  btemp 0028                                    _utoa 62B4  
                                  _xtoa 57EC                  __end_of_check_adc_scan B6F6  
                         ___fpclassifyf 7F84                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0050               __end_of_SPI1_Exchange8bit B4C4  
             __size_of_clear_hid_pflags 0024                         _TMR3_Initialize AA4C  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr B2F0  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0001  
                      __end_of_INT0_ISR B69E                        __end_of_INT1_ISR AD72  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 9E06  
         __end_of_OSCILLATOR_Initialize B61C                                   l10120 7E00  
                                 l10042 4EC2                                   l10132 7E40  
                                 l10070 511C                                   l10062 50EA  
                                 l10240 8C82                                   l10232 8C58  
                                 l10128 7E2C                                   l10048 4EF2  
                                 l10208 AD92                                   l10234 8C68  
                                 l10082 5298                                   l10074 51B8  
                                 l10058 5010                                   l10420 B08A  
                                 l10260 8D68                                   l10252 8CEE  
                                 l10236 8C6E                                   l10244 8C8A  
                                 l12012 59EC                                   l12020 5A72  
                                 l10238 8C74                                   l10246 8CB6  
                                 l10166 ADDE                                   l10408 B570  
                                 l10088 5334                                   l10096 5346  
                                 l12112 268A                                   l10600 690E  
                                 l10272 A1E4                                   l10344 A082  
                                 l12130 280E                                   l12122 2722  
                                 l10610 694A                                   l12036 5B5C  
                                 l10348 A0EA                                   l10446 ACD4  
                                 l11406 8EE2                                   l11422 9F9C  
                                 l12222 300A                                   l12134 2862  
                                 l12070 2354                                   l10622 699C  
                                 l10606 693E                                   l10464 AD14  
                                 l10720 5F3C                                   l10560 83E8  
                                 l11432 9142                                   l12208 2E8E  
                                 l12072 238E                                   l10616 6974  
                                 l12410 476A                                   l11418 9F5E  
                                 l11442 91DA                                   l11434 9154  
                                 l11530 5484                                   l11522 543A  
                                 l11602 0146                                   l12242 319C  
                                 l12154 2A74                                   l12146 29BC  
                                 l12074 23A4                                   l12306 9CDC  
                                 l10642 6A1C                                   l10634 69F6  
                                 l10626 69A8                                   l12404 46D8  
                                 l11428 911A                                   l11612 01EA  
                                 l11620 0258                                   l12236 3142  
                                 l12092 24D6                                   l12252 31C0  
                                 l12308 9D1E                                   l12414 4780  
                                 l11438 9190                                   l11534 54A2  
                                 l11710 06F0                                   l11630 02FC  
                                 l11614 0216                                   l12246 31A0  
                                 l12158 2AA8                                   l12094 2510  
                                 l11470 674A                                   l10726 9536  
                                 l10574 98E4                                   l10832 A402  
                                 l12408 4762                                   l11544 56B4  
                                 l11448 993C                                   l11800 0EA2  
                                 l11616 022C                                   l12096 2526  
                                 l11464 668C                                   l10680 9B8E  
                                 l10664 6B64                                   l10568 983E  
                                 l10826 A3F2                                   l12426 4932  
                                 l11706 06B8                                   l11650 0406  
                                 l12178 2C08                                   l12338 9226  
                                 l10666 6B8C                                   l10738 9592  
                                 l11564 5766                                   l11812 0F3A  
                                 l11740 0A48                                   l11716 077A  
                                 l11652 0470                                   l11900 6CC0  
                                 l12188 2CB6                                   l11484 6862  
                                 l11476 67B4                                   l12292 9E5E  
                                 l12524 7834                                   l10676 9B50  
                                 l10596 68FA                                   l10748 9602  
                                 PRLOCK 0039EF                                   l12382 430C  
                                 l10766 ACAA                                   l11750 0B34  
                                 l11726 0926                                   l11646 0396  
                                 l11638 032A                                   l11582 00AC  
                                 l12198 2DD8                                   l10598 690A  
                                 l11496 A24C                                   l11568 57A2  
                                 l11680 0594                                   l11672 057C  
                                 l11656 04D2                                   l11904 6CFC  
                                 l12704 17A0                                   l12712 18DE  
                                 l12394 4594                                   l12378 42CA  
                                 l11498 A278                                   l11826 0FD6  
                                 l11690 0602                                   l11674 058E  
                                 l11594 00F0                                   l11922 6E1E  
                                 l11914 6DB6                                   l12538 795C  
                                 l12714 190C                                   l11828 0FF0  
                                 l11764 0C32                                   l11748 0B12  
                                 l11668 0554                                   l11908 6D2C  
                                 l12804 21E2                                   l12644 146E  
                                 l12398 462E                                   l11838 1092  
                                 l11918 6DE2                                   l12750 1F40  
                                 l12734 1966                                   l12726 1940  
                                 l11864 119A                                   l11848 10E2  
                                 l11776 0CBA                                   l11784 0D24  
                                 l11792 0D90                                   l11688 05F6  
                                 l11944 6344                                   l11936 62E8  
                                 l12808 2208                                   l12760 20BC  
                                 l12592 12AA                                   l11954 653A  
                                 l12818 225E                                   l12746 1EDE  
                                 l12762 20E6                                   l12594 12BC  
                                 l12586 1284                                   l11884 6C0C  
                                 l12780 215C                                   l12692 16C6  
                                 l12588 128C                                   l11982 585A  
                                 l12790 219A                                   l11976 5820  
                                 l12776 2138                                   l11996 58F6  
                                 l11988 5896                                   l12796 21AC  
                                 l12798 21C4                         __end_of___aodiv 70DE  
                          _Volts_to_SOC A07A                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4204  
                                 _ADCLK 003EFF                         __end_of___aomod 7592  
                                 _ADPCH 003EF1                         __end_of___fldiv 4EC0  
                                 _ADREF 003EFD                         __end_of___awdiv 8B04  
                       __end_of___flneg AA4C                                   STR_10 FD35  
                                 STR_11 FD4B                                   STR_12 FF2E  
                                 STR_21 FF61                                   STR_13 FF3F  
                                 STR_14 FF72                                   STR_30 FEE5  
                                 STR_22 FE99                                   STR_23 FEBF  
                                 STR_31 FE27                                   STR_15 FD61  
                                 STR_40 FF83                                   STR_24 FEAC  
                                 STR_32 FE3A                                   STR_16 FD1F  
                                 STR_41 FF83                                   STR_25 FE60  
                                 STR_33 FE4D                                   STR_17 FCBC  
                         __CFG_WDTE$OFF 000000                                   STR_42 FF61  
                                 STR_50 FFBD                                   STR_26 FE86  
                                 STR_34 FD9E                                   STR_18 FCD6  
                                 STR_51 FFBD                                   STR_43 FFFB  
                                 STR_19 FF83                                   STR_27 FE73  
                                 STR_35 FDDA                                   STR_44 FFF8  
                                 STR_52 FF93                                   STR_28 FEF8  
                                 STR_36 FD8A                         __end_of___awmod 90EE  
                                 STR_53 FF93                                   STR_29 FED2  
                                 STR_37 FD76                                   STR_54 FF93  
                                 STR_70 FFDA                                   STR_46 FFB1  
                                 STR_38 FDB2                                   STR_71 FFE2  
                                 STR_47 FFC7                                   STR_39 FDC6  
                                 STR_55 FCF0                                   STR_64 FCBB  
                                 STR_80 FFEF                                   STR_48 FE01  
                                 _ADRPT 003EEC                                   STR_49 FE01  
                                 STR_57 FE14                                   STR_65 FC67  
                                 STR_90 FFF2                                   STR_74 FFE9  
                                 STR_66 FFD6                                   STR_58 FDEE  
                                 STR_83 FFEC                                   STR_67 FFDE  
                                 STR_76 FFE9                                   STR_85 FFEC  
                                 STR_93 FFF5                                   STR_78 FFEF  
                                 STR_95 FFF5                                   STR_88 FFF2  
                       __end_of___flmul 3A48                                   STR_97 FFE6  
                                 STR_99 FFE6                         __end_of___flsub AB20  
                       __end_of___fltol 8580                                   u12100 79AE  
                                 u10350 8ED6                                   u10430 99B6  
                                 u11150 10B8                                   u11310 62CE  
                                 u10600 56C8                                   u10520 539C  
                                 u10370 8F52                                   u10530 539E  
                                 u11170 116E                                   u11090 0EE4  
                                 u11250 6D22                                   u10611 56F8  
                       __end_of___lodiv 829A                                   u10620 570E  
                                 u11180 1170                                   u10700 00DA  
                                 u11260 6D68                                   u11500 5A8E  
                                 u11420 58EE                                   u10621 570C  
                                 u10437 99A8                                   u11341 657C  
                                 u10630 5722                                   u10550 540E  
                                 u11350 6592                                   u11430 5942  
                                 u12150 158C                                   u11351 6590  
                                 u11511 5ABE                                   u10640 5726  
                                 u11360 65A6                                   u11520 5AD4  
                                 u11440 5944                                   u11600 23EC  
                                 u11521 5AD2                                   u10570 5420  
                                 u10730 0194                                   u11290 6E44  
                                 u11370 65AA                                   u11530 5AE8  
                                 u11610 23EE                                   u10490 68D6  
                                 u12090 79AC                                   u12250 2128  
                                 u12170 17CE                                   _U1P1H 003DED  
                                 u11267 6D5A                                   u10660 573C  
                                 u10820 050E                                   u10740 0196  
                                 u11540 5AEC                                   u11460 59A2  
                                 u11620 2414                                   u12260 2142  
                                 _U1P2H 003DEF                                   u10590 5470  
                                 u11470 59A4                                   u11390 5806  
                                 u12270 2154                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u10920 0648                                   u11720 2776  
                                 u12256 212A                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10850 0562  
                                 u10770 02A6                                   u11490 5A6E  
                                 u11650 256E                                   u12266 2144  
                                 _U1P3L 003DF0                                   u10780 02A8  
                                 u11740 28EA                                   u11660 2570  
                                 u12276 2156                                   u11670 2596  
                                 _U2P1L 003DD4                                   u11495 5A50  
                                 u10880 05C6                                   u11840 2EE2  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11770 2B62                                   _U2P3L 003DD8  
                                 u11860 3092                                   u11780 2B64  
                                 u10990 0A18                                   _T5CLK 003F9D  
                                 u11880 9E3E                         __end_of___lomod 8C44  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00AB  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0006  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result ADAC                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR B728  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 89B6                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A876  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR B5AA  
                          _DMA1CON1bits 003BFD                                   _fabsf 9C02  
                                 _flags 004C                __size_of_calc_model_data 03A2  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
                                 _fputc 8EB2              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha ABF0                                   _fputs 9F4E  
                       __end_of_isdigit AFE2                         __end_of_ivln2_h FC5F  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand AE86  
                                 _width 0048                                   _putch B574  
                       __end_of_islower AF82                         __end_of_isspace A91A  
              _INT1_SetInterruptHandler B24E                         __end_of_isupper AFB2  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0028                                   ltemp1 002C  
                                 ltemp2 0030                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0028                                   ttemp1 002B  
                                 ttemp2 002E                                   ttemp3 0031  
                                 ttemp5 0029                                   ttemp6 002C  
                                 ttemp7 0030                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler B1D6             _UART1_SetRxInterruptHandler B1AE  
                                 wtemp0 0028                                   wtemp1 002A  
                                 wtemp2 002C                                   wtemp3 002E  
                                 wtemp4 0030                                   wtemp5 0032  
                                 wtemp8 0029                         __end_of_sprintf 952A  
                       __end_of_tolower A3BE                         __end_of_strncmp 77B2  
                       __end_of_toupper A33A               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr B318                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize AB66                   __end_of_ringBufS_init B136  
                       __initialization 9312                       _UART2_rx_vect_isr B340  
                          __end_of_cp_h FC67                            __end_of_cp_l FC63  
                          __end_of_atoi 7352                            __end_of_ctoa A2B6  
                          __end_of_main 2272                            __end_of_dtoa 57EC  
                          __end_of_nanf A708                            __end_of_spin FC53  
                          __end_of_stoa 6E5E                            __end_of_utoa 65F4  
                          __end_of_xtoa 5BA6                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0001                 __end_of_TMR2_Initialize B5DA  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button ACB2  
              _TMR5_SetInterruptHandler B1FE                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A2  
                     _port_data_dma_ptr B6B8                      esr_check@esr_state 0052  
                   ??_UART2_rx_vect_isr 0006                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize B094                         _PWM8_Initialize B5F0  
                      _UART1_Initialize AB20                       _UART2_tx_vect_isr B318  
                    _UART2_Transmit_ISR B068                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan A5E0                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue ABF0                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0001  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1017 A868  
                                _RB6PPS 003A0E                                  i1l1205 891E  
                  _start_switch_handler B486                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize AA94  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright B680                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u904_20 AEF6  
                                u904_26 AEF8                                  u932_28 8C5E  
                                u935_20 8C7E                                  u935_21 8C78  
                                u961_28 B3C0                                  u970_28 B3E4  
                                u939_24 8D5E                                  u939_25 8D5A  
                  __size_of_hid_display 0102                                  u967_48 B450  
                                u959_48 B42C                                  u999_44 A422  
                                u999_45 A41C                        __end_of___xxtofl 7BC8  
 __end_of_ADCC_DischargeSampleCapacitor B6EE  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor B6E6                __end_of_send_lcd_cmd_dma A8C8  
                       _TMR3_WriteTimer ACF2                     ??_UART2_tx_vect_isr 0006  
             __end_of_UART2_rx_vect_isr B368              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize B6AE                        _UART2_Initialize A708  
                                _WaitMs AE1A                         _conv_raw_result 4EC0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 86F0                                  ___fleq 99C8  
                     _ADCC_ThresholdISR A510                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush A10C                                  _efgtoa 0000  
                                _floorf 5F48                      ?_ADCC_ThresholdISR 0001  
                                _memset 65F4                    __size_of_help_button 0038  
                                clear_0 93A6                                  clear_1 93BA  
                                clear_2 93CC                                  clear_3 93D8  
                                clear_4 93E4                                  clear_5 93F0  
                                clear_6 93FC                                  clear_7 9408  
             __end_of_port_data_dma_ptr B6C2                                  _printf A644  
                    _eaDogM_WriteString 9E06                                  _strcpy 98F4  
                             ?_ADCC_ISR 0001                                  _strlen 9EAC  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize A4A6                          _PMD_Initialize B61C  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr B340  
                                lltemp0 0028                                  lltemp1 0030  
                                lltemp2 0038                                  lltemp3 0040  
                   ??_ADCC_ThresholdISR 0001                  __end_of_start_adc_scan A644  
                          __mediumconst FA7A                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay A7C0                        __end_of_spinners 98F4  
                      __end_of_vfprintf 9D5C                              _StartTimer AC32  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize ABAC  
                     _SYSTEM_Initialize A9BA                              __accesstop 0060  
               __end_of__initialization 941A                               ?_INT0_ISR 0001  
                             ?_INT1_ISR 0001                    __end_of_display_help B706  
                  __end_of_display_info B6FE               __end_of_CLKREF_Initialize B6B8  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer ACB2                   _set_temp_display_help B662  
                      _clear_hid_pflags B38C                   __end_of_TMR3_CallBack B41C  
             __end_of_ADCC_ThresholdISR A57A                      __size_of_calc_bsoc 0742  
                __end_of_ringBufS_flush A19E                          __pcstackCOMRAM 0001  
                            ___inthi_sp 1142                              ___intlo_sp 18A1  
                          __pidataBANK0 ADE4                            __pidataBANK1 962C  
                          __pidataBANK2 9A8C             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf 9CB0                               ?_TMR3_ISR 0001  
                             ?_TMR5_ISR 0001                               ?_TMR6_ISR 0001  
                        ivt0x8_undefint 00AC                           __end_of_fputc 8FD6  
                         __end_of_fputs 9FE6                           __end_of_srand AEBA  
                 __end_of_TMR5_CallBack B3F8                           __end_of_putch B58E  
               __end_of_PWM8_Initialize B606                 __end_of_TMR6_Initialize B0BE  
                     _adc_int_t_handler A3BE                  __end_of_PMD_Initialize B630  
                            __end_of_bp FC5B                              ??_ADCC_ISR 0001  
                 __end_of_TMR6_CallBack B464             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0054                  __size_of_calc_ror_data 0174  
                         _DMA1_DMAA_ISR B6D0                   TMR3_ISR@CountCallBack 00C2  
                        _clear_adc_scan B70E                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00B7  
             __end_of_SYSTEM_Initialize AA04                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer AD32  
                            __pbssBANK0 0060                              __pbssBANK1 01F7  
                            __pbssBANK2 02BE                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 77B2                 __end_of_conv_raw_result 536C  
                    __size_of_esr_check 02C0                   _INT0_InterruptHandler 00BD  
                            ??_INT0_ISR 0001                              ??_INT1_ISR 0007  
                     __end_of_TimerDone B15E                        _DMA1_DMADCNT_ISR B6C4  
                    __size_of_init_bsoc 0170              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma AF22                   __end_of_wait_lcd_done B558  
      __end_of_TMR3_SetInterruptHandler B24E                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler B1FE                              ??_TMR3_ISR 000F  
               __end_of_ADCC_Initialize A510                              ??_TMR5_ISR 000B  
             __end_of_adc_int_t_handler A43C                              ??_TMR6_ISR 0006  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler B2C6   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler B29E                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR B558                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan B714  
                               u1202_28 B408                          ?_DMA1_DMAA_ISR 0001  
                      _DMA1_DMASCNT_ISR B6A0                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               u1196_20 46D0                                 u1198_20 4778  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0001  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 4946  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch B010  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer ACF2  
               __size_of_switch_handler 0140                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one B662              __end_of_set_load_relay_two B652  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 829A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim B5AA                                 __Lparam 0000  
              __end_of_UART1_Initialize AB66                       __end_of_hid_input A22E  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 6E5E  
                               ___fladd 3A48                                 ___aomod 7352  
                               ___fldiv 4946                                 ___awdiv 89B6  
                               ___flneg AA04                                 ___awmod 8FD6  
                               ___flmul 321E                                 ___flsub AADA  
                               ___fltol 840E                                 ___lodiv 811A  
                               ___lomod 8B04               __end_of_UART1_Receive_ISR B574  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 980E                                 __pcinit 9312  
              __end_of_mode_lamp_bright B68E                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand B672  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B368                                 __ptext2 B486  
                               __ptext3 AE86                                 __ptext4 980E  
                               __ptext5 AF22                                 __ptext6 9724  
                               __ptext7 B0BE                                 __ptext8 B0E6  
                               __ptext9 B4A6                       __end_of_esr_check 6BA0  
                     _UART2_Receive_ISR B51E                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize B606  
                          __size_of_abs 0046                                 us616999 70C8  
                               us712999 8284                                 us627999 7580  
                          __size_of_pad 0114                                 us717999 8C34  
                     __end_of_init_bsoc 86F0                                 _isalpha ABAC  
                               _isdigit AFB2                                 _ivln2_h FC5B  
                             _T3CONbits 003FA6                                 _mode_sw 0055  
                     __end_of_lp_filter 7F84                                 _islower AF52  
                               _isspace A8C8                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize A766  
                               _isupper AF82              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9420                                 _tolower A33A  
                 __size_of_display_help 0008                                 _utctime 0096  
                 __size_of_display_info 0008                                 _strncmp 7592  
                               _toupper A2B6                    end_of_initialization 941A  
             __size_of_convert_adc_data 00B8                      _check_enter_button AC72  
                             i1u1211_20 8914     __end_of_UART2_SetRxInterruptHandler B1AE  
           _UART2_SetRxInterruptHandler B186                               i2u1010_48 B354  
                             i2u1002_48 B054                               i2u1004_48 A546  
                             i2u1004_49 A55A                               i2u1006_48 B304  
                             i2u1008_48 B32C                       __end_of_set_vterm B4E2  
                     __end_of_vfpfcnvrt 321E                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd B720               __end_of_UART2_Receive_ISR B53C  
                        wdtdelay@dcount 009A                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0007                   _INT1_InterruptHandler 00BA  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc B726  
              _TMR3_SetInterruptHandler B226                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler B1D6                            _display_help B6FE  
                 _TMR5_InterruptHandler 00A5                            _display_info B6F6  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B3B0  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler B2EE  
           _ADCC_SetADIInterruptHandler B2C6                              _update_lcd 9202  
                       _calc_model_data 5BA6                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc B368  
                       _DMA1_Initialize A43C                              _start_bsoc B464  
                       _SPI1_Initialize B5DA                   __end_of_get_vterm_ptr B010  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs AE50            __end_of_INTERRUPT_Initialize A5E0  
                            _vterm_dump 8D84                          __end_of___flge 8852  
                        __end_of___fleq 9A8C    __end_of_INT0_DefaultInterruptHandler B734  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler B732  
            __size_of_UART1_Receive_ISR 001C                         _DMA2_Initialize A7C0  
                         __pidataBIGRAM 7BC8                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 62B4             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 68E0  
                        __end_of_printf A6A6                __end_of_DMA1_DMADCNT_ISR B6CE  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack B440  
                        __end_of_strcpy 99C8                          __end_of_strlen 9F4E  
                   start_initialization 9312    __end_of_TMR5_DefaultInterruptHandler AF22  
 __size_of_TMR5_DefaultInterruptHandler 0034            _TMR5_DefaultInterruptHandler AEEE  
       __size_of_PIN_MANAGER_Initialize 0094                             __end_of_abs AADA  
                 __end_of_INT1_CallBack B3D4               __size_of_set_display_info 001E  
                           __end_of_pad 9202                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B10E                          _switch_handler 8C44  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 811A  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR B6AE  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR B6DC  
                   __end_of_hid_display 962C              __end_of_send_port_data_dma A96C  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone B136  
                         _ringBufS_init B10E                             __pdataBANK0 00C6  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize AEEE                 __end_of_calc_model_data 5F48  
                   __end_of_help_button ADE4         __end_of_eaDogM_WriteStringAtPos AE86  
                   __end_of_BVSOC_TABLE FB4B                    calc_model_data@bcror 008E  
                           __pbssBIGRAM 07FF                 __end_of_DMA1_Initialize A4A6  
                  calc_model_data@bvror 0092                             __pbssCOMRAM 0048  
      __end_of_INT0_SetInterruptHandler B29E                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 8D84  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize B5F0  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FBDB                        _convert_adc_data 9B4A  
                             _calc_bsoc 4204               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9724                  __end_of_DMA1_DMAOR_ISR B6E6  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize A81A                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize 9FE6                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set B71A                           __pmediumconst FA7A  
                             __ptext100 5BA6                               __ptext101 B720  
                             __ptext110 B186                               __ptext102 B464  
                             __ptext111 AB20                               __ptext103 7DC8  
                             __ptext120 B5DA                               __ptext112 B1AE  
                             __ptext104 AADA                               __ptext121 B5F0  
                             __ptext113 B094                               __ptext105 3A48  
                             __ptext130 A7C0                               __ptext122 B61C  
                             __ptext114 B1D6                               __ptext106 321E  
                             __ptext131 A43C                               __ptext123 9FE6  
                             __ptext115 AB66                               __ptext107 A9BA  
                             __ptext140 A81C                               __ptext132 B6AE  
                             __ptext124 B606                               __ptext116 B1FE  
                             __ptext108 A708                               __ptext141 ACB2  
                             __ptext133 A4A6                               __ptext125 A57A  
                             __ptext117 AA4C                               __ptext109 B15E  
                             __ptext150 B6B8                               __ptext142 B3D4  
                             __ptext134 B29E                               __ptext126 B706  
                             __ptext118 B226                               __ptext151 B690  
                             __ptext143 AEEE                               __ptext135 B2C6  
                             __ptext127 AEBA                               __ptext119 B5C2  
                             __ptext160 B2F0                               __ptext152 B41C  
                             __ptext144 8854                               __ptext136 AD34  
                             __ptext128 B24E                               __ptext161 B558  
                             __ptext153 B732                               __ptext145 ACF2  
                             __ptext137 B3B0                               __ptext129 B276  
                             __ptext170 B6C4                               __ptext162 B318  
                             __ptext154 B728                               __ptext146 B3F8  
                             __ptext138 B72E                               __ptext171 B6D0  
                             __ptext163 B068                               __ptext155 B03C  
                             __ptext147 B730                               __ptext139 8C44  
                             __ptext172 B6DC                               __ptext164 B340  
                             __ptext156 A3BE                               __ptext148 4204  
                             __ptext173 0000                               __ptext165 B51E  
                             __ptext157 B734                               __ptext149 A91A  
                             __ptext166 B590                               __ptext158 B736  
                             __ptext167 B440                               __ptext159 A510  
                             __ptext168 A96C                               __ptext169 B6A0  
                             _hid_input A19E                      __end_of_StartTimer AC72  
                    _set_load_relay_one B652                      _set_load_relay_two B642  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR B03C  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 68E0                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 8580  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 7DC8                             _hid_display 952A  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize A57A                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0001  
                              _INT0_ISR B690                                _INT1_ISR AD34  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0394                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack B3F8                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0046  
                             _set_vterm B4C4                     __size_of_update_lcd 0110  
                           _help_button ADAC                                _TMR3_ISR 8854  
                           _BVSOC_TABLE FA7B                                _TMR5_ISR A81C  
                              _TMR6_ISR B590                               _port_data 05FF  
                   __size_of_static_soc 0024                               _vfpfcnvrt 2272  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack B3D4                              _ADCON0bits 003EF8  
                    __end_of_check_help 79C4                               _start_lcd B71A  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack B440                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc B720  
                      _set_display_info B4E2                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 9326                               copy_data1 934C  
                             copy_data2 936E                               copy_data3 9390  
              _INT0_SetInterruptHandler B276                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler B186             _UART2_SetTxInterruptHandler B15E  
                          _uart1RxCount 005C                            _uart2RxCount 0056  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done B53C                            _send_lcd_cmd B0E6  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler B736  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140                      __end_of_get_switch B03C  
                 __end_of_DMA1_DMAA_ISR B6DA                      ___fpclassifyf@F463 0082  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 79C4                       ?_DMA1_DMADCNT_ISR 0001  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand B680                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0007                                __ptext10 B10E  
                              __ptext11 8580                                __ptext20 B6E6  
                              __ptext12 A07A                                __ptext21 B70E  
                              __ptext13 952A                                __ptext30 9420  
                              __ptext22 B6EE                                __ptext14 A19E  
                              __ptext31 AFE2                                __ptext23 B642  
                              __ptext15 B010                                __ptext40 B71A  
                              __ptext32 AE1A                                __ptext24 B652  
                              __ptext16 68E0                                __ptext41 A10C  
                              __ptext33 9202                                __ptext25 B672  
                              __ptext17 AD72                                __ptext50 62B4  
                              __ptext42 65F4                                __ptext34 AE50  
                              __ptext26 9B4A                                __ptext18 A5E0  
                              __ptext51 8B04                                __ptext43 A644  
                              __ptext35 A876                                __ptext27 B38C  
                              __ptext19 B630                                __ptext60 7F84  
                              __ptext52 811A                                __ptext44 9CB0  
                              __ptext36 B53C                                __ptext28 77B2  
                              __ptext61 840E                                __ptext53 7592  
                              __ptext45 2272                                __ptext37 A766  
                              __ptext29 8D84                                __ptext70 A22E  
                              __ptext62 AA04                                __ptext54 6BA0  
                              __ptext46 57EC                                __ptext38 9E06  
                              __ptext71 90EE                                __ptext63 99C8  
                              __ptext55 0000                                __ptext47 A2B6  
                              __ptext39 B714                                __ptext80 B4C4  
                              __ptext72 9EAC                                __ptext64 8FD6  
                              __ptext56 A33A                                __ptext48 AF52  
                              __ptext81 B662                                __ptext73 9F4E  
                              __ptext65 89B6                                __ptext57 AF82  
                              __ptext49 ABAC                                __ptext90 B6FE  
                              __ptext82 B4E2                                __ptext74 8EB2  
                              __ptext66 536C                                __ptext58 98F4  
                              __ptext91 AC72                                __ptext83 B5AA  
                              __ptext75 B574                                __ptext67 AA94  
                              __ptext59 5F48                                __ptext92 829A  
                              __ptext84 B680                                __ptext76 9D5C  
                              __ptext68 7352                                __ptext93 9C02  
                              __ptext85 ABF0                                __ptext77 70DE  
                              __ptext69 6E5E                                __ptext94 4EC0  
                              __ptext86 ADAC                                __ptext78 A8C8  
                              __ptext95 A6A6                                __ptext87 B136  
                              __ptext79 AFB2                                __ptext96 B500  
                              __ptext88 AC32                                __ptext97 79C4  
                              __ptext89 B6F6                                __ptext98 4946  
                              __ptext99 86F0                        __size_of_isupper 0030  
                              us1120999 6BB2                                us1051999 5386  
                              us1132999 631A                                us1141999 586C  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 9D5C                    __end_of_Volts_to_SOC A10C  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 102E                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0001                   __end_of_init_port_dma AF52  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00AE                               stoa@F1166 00EE  
                    ??_DMA1_DMASCNT_ISR 0007            __end_of_ADCC_StartConversion B642  
                              _spi_link 0060                                _wdtdelay A766  
            __end_of_UART2_Transmit_ISR B094                                _spinners 980E  
                              _vfprintf 9CB0                __end_of_convert_adc_data 9C02  
            __end_of_PWM8_LoadDutyValue AC32    __end_of_TMR3_DefaultInterruptHandler B732  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler B730  
  __end_of_INT1_DefaultInterruptHandler B730   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler B72E                      _send_port_data_dma A91A  
                         ??_Default_ISR 0001                             _uart1RxHead 005E  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0058  
                           _uart1RxTail 005D                          _get_raw_result B500  
                           _uart2TxHead 005B                             _uart2RxTail 0057  
                             spinners@s 0074                             _uart2TxTail 005A  
                          _wait_lcd_set B714                        Volts_to_SOC@slot 0053  
                    _EXT_INT_Initialize AEBA    __end_of_TMR6_DefaultInterruptHandler A9BA  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler A96C  
  __end_of_ADCC_DefaultInterruptHandler B736   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler B734                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long B0BE  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help B672  
                 __end_of_calc_ror_data 840E                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 9EAC                   __end_of_mode_lamp_dim B5C2  
               __end_of_adc_int_handler B738                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 9312  
                _uart2TxBufferRemaining 0059                      __end_of_static_soc B38C  
                    __end_of_start_bsoc B486                          _FVR_Initialize B706  
                __end_of_get_raw_result B51E                        _send_lcd_cmd_dma A876  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 004E  
      __end_of_INT1_SetInterruptHandler B276               __size_of_UART1_Initialize 0046  
                      ??_DMA1_DMAOR_ISR 0007               __end_of_send_lcd_cmd_long B0E6  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR B72E  
        __end_of_PIN_MANAGER_Initialize A07A               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 8EB2                 _eaDogM_WriteStringAtPos AE50  
                         _get_vterm_ptr AFE2                          _check_adc_scan B6EE  
             __size_of_UART2_Initialize 005E  
