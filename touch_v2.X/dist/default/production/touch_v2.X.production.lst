

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 22 07:56:30 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=4,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=4,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=4,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=4,class=CODE,delta=1
   149                           	psect	text128,global,reloc=4,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=4,class=CODE,delta=1
   154                           	psect	text133,global,reloc=4,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=4,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=4,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=4,class=CODE,delta=1
   166                           	psect	text145,global,reloc=4,class=CODE,delta=1
   167                           	psect	text146,global,reloc=4,class=CODE,delta=1
   168                           	psect	text147,global,reloc=4,class=CODE,delta=1
   169                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   170                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   171                           	psect	text148,global,reloc=4,class=CODE,delta=1
   172                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   173                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   174  0000                     
   175                           ; Version 2.10
   176                           ; Generated 31/07/2019 GMT
   177                           ; 
   178                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   179                           ; All rights reserved.
   180                           ; 
   181                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   182                           ; 
   183                           ; Redistribution and use in source and binary forms, with or without modification, are
   184                           ; permitted provided that the following conditions are met:
   185                           ; 
   186                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   187                           ;        conditions and the following disclaimer.
   188                           ; 
   189                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   190                           ;        of conditions and the following disclaimer in the documentation and/or other
   191                           ;        materials provided with the distribution.
   192                           ; 
   193                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   194                           ;        software without specific prior written permission.
   195                           ; 
   196                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   197                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   198                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   199                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   200                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   201                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   202                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   203                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   204                           ; 
   205                           ; 
   206                           ; Code-generator required, PIC18F57K42 Definitions
   207                           ; 
   208                           ; SFR Addresses
   209  0000                     
   210 ;;_mode	offset	0
   211 ;;_channel	offset=-1 (param)
   212 ;;_s	offset=-2 (param)
   213 ;;_cmd	offset=-1 (param)
   214 ;;_cmd	offset=-1 (param)
   215 ;;_data	offset=-1 (param)
   216 ;;__this	offset=-2 (param)
   217 ;;_cmd	offset=-1 (param)
   218 ;;_i	offset	0
   219 ;;_lp_speed	offset	0
   220 ;;_new	offset=-4 (param)
   221 ;;_bn	offset=-5 (param)
   222 ;;_slow	offset=-6 (param)
   223 ;;_chan	offset=-1 (param)
   224 ;;_to_what	offset=-2 (param)
   225 ;;_u	offset	0
   226 ;;_s	offset=-2 (param)
   227 ;;_index	offset=-1 (param)
   228 ;;_arg	offset	0
   229 ;;_exp	offset	4
   230 ;;_sign	offset=-1 (param)
   231 ;;_val	offset=-5 (param)
   232 ;;_flipper	offset=-1 (param)
   233 ;;_f	offset	0
   234 ;;_ap	offset	6
   235 ;;_s	offset=-3 (param)
   236 ;;_fmt	offset=-5 (param)
   237 ;;_line	offset=-1 (param)
   238 ;;_vterm	offset=-2 (param)
   239 ;;_numMilliseconds	offset=-2 (param)
   240 ;;_vterm	offset=-1 (param)
   241 ;;_r	offset=-1 (param)
   242 ;;_c	offset=-2 (param)
   243 ;;_strPtr	offset=-4 (param)
   244 ;;_strPtr	offset=-1 (param)
   245 ;;_delay	offset=-4 (param)
   246 ;;_strPtr	offset=-2 (param)
   247 ;;__this	offset=-2 (param)
   248 ;;_clearBuffer	offset=-3 (param)
   249 ;;_s	offset	0
   250 ;;_k	offset	2
   251 ;;_dest	offset=-2 (param)
   252 ;;_c	offset=-4 (param)
   253 ;;_n	offset=-6 (param)
   254 ;;_ap	offset	0
   255 ;;_fmt	offset=-3 (param)
   256 ;;_cfmt	offset	0
   257 ;;_fp	offset=-2 (param)
   258 ;;_fmt	offset=-4 (param)
   259 ;;_ap	offset=-6 (param)
   260 ;;_vfpfcnvrt$4315	offset	0
   261 ;;_vfpfcnvrt$4326	offset	2
   262 ;;_vfpfcnvrt$4314	offset	4
   263 ;;_llu	offset	6
   264 ;;_ll	offset	14
   265 ;;_f	offset	22
   266 ;;_ct	offset	26
   267 ;;_cp	offset	29
   268 ;;_c	offset	31
   269 ;;_fp	offset=-2 (param)
   270 ;;_fmt	offset=-4 (param)
   271 ;;_ap	offset=-6 (param)
   272 ;;_xtoa$4300	offset	0
   273 ;;_xtoa$4299	offset	2
   274 ;;_n	offset	4
   275 ;;_c	offset	12
   276 ;;_i	offset	14
   277 ;;_w	offset	16
   278 ;;_p	offset	18
   279 ;;_fp	offset=-2 (param)
   280 ;;_d	offset=-10 (param)
   281 ;;_x	offset=-11 (param)
   282 ;;_toupper$4984	offset	0
   283 ;;_c	offset=-2 (param)
   284 ;;_c	offset=-2 (param)
   285 ;;_c	offset=-2 (param)
   286 ;;_n	offset	0
   287 ;;_i	offset	8
   288 ;;_w	offset	10
   289 ;;_p	offset	12
   290 ;;_fp	offset=-2 (param)
   291 ;;_d	offset=-10 (param)
   292 ;;_counter	offset	0
   293 ;;_dividend	offset=-8 (param)
   294 ;;_divisor	offset=-16 (param)
   295 ;;_quotient	offset	0
   296 ;;_counter	offset	8
   297 ;;_dividend	offset=-8 (param)
   298 ;;_divisor	offset=-16 (param)
   299 ;;_r	offset	0
   300 ;;_l	offset	2
   301 ;;__l	offset=-2 (param)
   302 ;;__r	offset=-4 (param)
   303 ;;_n	offset=-6 (param)
   304 ;;_nuls	offset	0
   305 ;;_l	offset	7
   306 ;;_p	offset	9
   307 ;;_cp	offset	11
   308 ;;_w	offset	13
   309 ;;_i	offset	15
   310 ;;_fp	offset=-2 (param)
   311 ;;_s	offset=-4 (param)
   312 ;;_efgtoa$4272	offset	0
   313 ;;_efgtoa$4271	offset	2
   314 ;;_efgtoa$4270	offset	4
   315 ;;_efgtoa$4266	offset	6
   316 ;;_efgtoa$4262	offset	8
   317 ;;_efgtoa$4261	offset	10
   318 ;;_u	offset	12
   319 ;;_g	offset	16
   320 ;;_l	offset	20
   321 ;;_h	offset	24
   322 ;;_ou	offset	28
   323 ;;_n	offset	32
   324 ;;_e	offset	34
   325 ;;_i	offset	36
   326 ;;_w	offset	38
   327 ;;_p	offset	40
   328 ;;_sign	offset	42
   329 ;;_d	offset	44
   330 ;;_ne	offset	46
   331 ;;_m	offset	48
   332 ;;_pp	offset	50
   333 ;;_t	offset	52
   334 ;;_mode	offset	54
   335 ;;_nmode	offset	55
   336 ;;_fp	offset=-2 (param)
   337 ;;_f	offset=-6 (param)
   338 ;;_c	offset=-7 (param)
   339 ;;_tolower$4969	offset	0
   340 ;;_c	offset=-2 (param)
   341 ;;_c	offset=-2 (param)
   342 ;;_d	offset	0
   343 ;;_s	offset	2
   344 ;;_dest	offset=-2 (param)
   345 ;;_src	offset=-4 (param)
   346 ;;_u	offset	0
   347 ;;_m	offset	4
   348 ;;_e	offset	8
   349 ;;_x	offset=-4 (param)
   350 ;;_u	offset	0
   351 ;;_e	offset	4
   352 ;;_x	offset=-4 (param)
   353 ;;_exp1	offset	0
   354 ;;_sign1	offset	1
   355 ;;_f1	offset=-4 (param)
   356 ;;_b	offset=-4 (param)
   357 ;;_a	offset=-8 (param)
   358 ;;_grs	offset	0
   359 ;;_bexp	offset	1
   360 ;;_aexp	offset	2
   361 ;;_signs	offset	3
   362 ;;_b	offset=-4 (param)
   363 ;;_a	offset=-8 (param)
   364 ;;_f1	offset=-4 (param)
   365 ;;_prod	offset	0
   366 ;;_grs	offset	4
   367 ;;_temp	offset	8
   368 ;;_bexp	offset	10
   369 ;;_aexp	offset	11
   370 ;;_sign	offset	12
   371 ;;_b	offset=-4 (param)
   372 ;;_a	offset=-8 (param)
   373 ;;_ff1	offset=-4 (param)
   374 ;;_ff2	offset=-8 (param)
   375 ;;_ff1	offset=-4 (param)
   376 ;;_ff2	offset=-8 (param)
   377 ;;_grs	offset	0
   378 ;;_rem	offset	4
   379 ;;_new_exp	offset	8
   380 ;;_aexp	offset	10
   381 ;;_bexp	offset	11
   382 ;;_sign	offset	12
   383 ;;_b	offset=-4 (param)
   384 ;;_a	offset=-8 (param)
   385 ;;_sign	offset	0
   386 ;;_counter	offset	1
   387 ;;_dividend	offset=-2 (param)
   388 ;;_divisor	offset=-4 (param)
   389 ;;_quotient	offset	0
   390 ;;_sign	offset	2
   391 ;;_counter	offset	3
   392 ;;_dividend	offset=-2 (param)
   393 ;;_divisor	offset=-4 (param)
   394 ;;_dtoa$4238	offset	0
   395 ;;_n	offset	2
   396 ;;_i	offset	10
   397 ;;_s	offset	12
   398 ;;_w	offset	14
   399 ;;_p	offset	16
   400 ;;_fp	offset=-2 (param)
   401 ;;_d	offset=-10 (param)
   402 ;;_a	offset=-2 (param)
   403 ;;_sign	offset	0
   404 ;;_counter	offset	1
   405 ;;_dividend	offset=-8 (param)
   406 ;;_divisor	offset=-16 (param)
   407 ;;_quotient	offset	0
   408 ;;_sign	offset	8
   409 ;;_counter	offset	9
   410 ;;_dividend	offset=-8 (param)
   411 ;;_divisor	offset=-16 (param)
   412 ;;_w	offset	0
   413 ;;_fp	offset=-2 (param)
   414 ;;_c	offset=-3 (param)
   415 ;;_w	offset	0
   416 ;;_i	offset	2
   417 ;;_fp	offset=-2 (param)
   418 ;;_buf	offset=-4 (param)
   419 ;;_p	offset=-6 (param)
   420 ;;_a	offset	0
   421 ;;_s	offset=-2 (param)
   422 ;;_i	offset	0
   423 ;;_c	offset	2
   424 ;;_s	offset=-2 (param)
   425 ;;_fp	offset=-4 (param)
   426 ;;_c	offset=-2 (param)
   427 ;;_fp	offset=-4 (param)
   428 ;;_c	offset=-1 (param)
   429 ;;__this	offset=-2 (param)
   430 ;;_c	offset=-3 (param)
   431 ;;_atoi$4822	offset	0
   432 ;;_atoi$4820	offset	2
   433 ;;_atoi$4821	offset	4
   434 ;;_n	offset	5
   435 ;;_neg	offset	7
   436 ;;_s	offset=-2 (param)
   437 ;;_isspace$4860	offset	0
   438 ;;_c	offset=-2 (param)
   439 ;;_c	offset=-2 (param)
   440 ;;_vterm	offset=-1 (param)
   441 ;;_new_response_info	offset=-1 (param)
   442 ;;_new_response_info	offset=-1 (param)
   443 ;;_level	offset=-2 (param)
   444 ;;_dutyValue	offset=-2 (param)
   445 ;;_timer	offset=-1 (param)
   446 ;;_timer	offset=-1 (param)
   447 ;;_count	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_InterruptHandler	offset=-3 (param)
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_state	offset	0
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_InterruptHandler	offset=-3 (param)
   458 ;;_InterruptHandler	offset=-3 (param)
   459 ;;_timerVal	offset=-2 (param)
   460 ;;_channel	offset=-1 (param)
   461 ;;_i	offset	0
   462                           
   463                           	psect	idataBANK0
   464  01867C                     __pidataBANK0:
   465                           	opt callstack 0
   466                           
   467                           ;initializer for _R
   468  01867C  0000               	dw	0
   469  01867E  0000               	dw	0
   470  018680  0000               	dw	0
   471  018682  0000               	dw	0
   472  018684  0000               	dw	0
   473  018686  0000               	dw	0
   474  018688  0000               	dw	0
   475  01868A  0000               	dw	0
   476  01868C  0000               	dw	0
   477  01868E  0000               	dw	0
   478  018690  0000               	dw	0
   479  018692  0000               	dw	0
   480  018694  0000               	dw	0
   481  018696  0000               	dw	0
   482  018698  0000               	dw	0
   483  01869A  0000               	dw	0
   484  01869C  0F5B               	dw	3931
   485  01869E  0F88               	dw	3976
   486  0186A0  00                 	db	0
   487  0186A1  0000               	dw	0
   488  0186A3  00                 	db	0
   489                           
   490                           ;initializer for stoa@F1166
   491  0186A4  28                 	db	40
   492  0186A5  6E                 	db	110
   493  0186A6  75                 	db	117
   494  0186A7  6C                 	db	108
   495  0186A8  6C                 	db	108
   496  0186A9  29                 	db	41
   497  0186AA  00                 	db	0
   498                           
   499                           ;initializer for _port_data
   500  0186AB  FF                 	db	255
   501  0186AC  00                 	db	0
   502  0186AD  FF                 	db	255
   503  0186AE  00                 	db	0
   504  0186AF  FF                 	db	255
   505  0186B0  00                 	db	0
   506  0186B1  FF                 	db	255
   507  0186B2  00                 	db	0
   508  0186B3  FF                 	db	255
   509  0186B4  00                 	db	0
   510  0186B5  FF                 	db	255
   511  0186B6  00                 	db	0
   512  0186B7  FF                 	db	255
   513  0186B8  00                 	db	0
   514  0186B9  FF                 	db	255
   515  0186BA  00                 	db	0
   516                           
   517                           	psect	idataBANK1
   518  017552                     __pidataBANK1:
   519                           	opt callstack 0
   520                           
   521                           ;initializer for _V
   522  017552  00                 	db	0
   523  017553  00                 	db	0
   524  017554  00                 	db	0
   525  017555  00                 	db	0
   526  017556  00                 	db	0
   527  017557  00                 	db	0
   528  017558  00                 	db	0
   529  017559  00                 	db	0
   530  01755A  00                 	db	0
   531  01755B  00                 	db	0
   532  01755C  00                 	db	0
   533  01755D  00                 	db	0
   534  01755E  00                 	db	0
   535  01755F  00                 	db	0
   536  017560  00                 	db	0
   537  017561  00                 	db	0
   538  017562  00                 	db	0
   539  017563  00                 	db	0
   540  017564  00                 	db	0
   541  017565  00                 	db	0
   542  017566  00                 	db	0
   543  017567  00                 	db	0
   544  017568  00                 	db	0
   545  017569  00                 	db	0
   546  01756A  00                 	db	0
   547  01756B  00                 	db	0
   548  01756C  00                 	db	0
   549  01756D  00                 	db	0
   550  01756E  00                 	db	0
   551  01756F  00                 	db	0
   552  017570  00                 	db	0
   553  017571  00                 	db	0
   554  017572  00                 	db	0
   555  017573  00                 	db	0
   556  017574  00                 	db	0
   557  017575  00                 	db	0
   558  017576  00                 	db	0
   559  017577  00                 	db	0
   560  017578  00                 	db	0
   561  017579  00                 	db	0
   562  01757A  00                 	db	0
   563  01757B  00                 	db	0
   564  01757C  00                 	db	0
   565  01757D  00                 	db	0
   566  01757E  00                 	db	0
   567  01757F  00                 	db	0
   568  017580  00                 	db	0
   569  017581  00                 	db	0
   570  017582  00                 	db	0
   571  017583  00                 	db	0
   572  017584  00                 	db	0
   573  017585  00                 	db	0
   574  017586  00                 	db	0
   575  017587  00                 	db	0
   576  017588  00                 	db	0
   577  017589  00                 	db	0
   578  01758A  00                 	db	0
   579  01758B  00                 	db	0
   580  01758C  00                 	db	0
   581  01758D  00                 	db	0
   582  01758E  00                 	db	0
   583  01758F  00                 	db	0
   584  017590  00                 	db	0
   585  017591  00                 	db	0
   586  017592  00                 	db	0
   587  017593  00                 	db	0
   588  017594  00                 	db	0
   589  017595  00                 	db	0
   590  017596  00                 	db	0
   591  017597  00                 	db	0
   592  017598  00                 	db	0
   593  017599  00                 	db	0
   594  01759A  00                 	db	0
   595  01759B  00                 	db	0
   596  01759C  00                 	db	0
   597  01759D  00                 	db	0
   598  01759E  00                 	db	0
   599  01759F  00                 	db	0
   600  0175A0  00                 	db	0
   601  0175A1  00                 	db	0
   602  0175A2  00                 	db	0
   603  0175A3  00                 	db	0
   604  0175A4  00                 	db	0
   605  0175A5  00                 	db	0
   606  0175A6  00                 	db	0
   607  0175A7  00                 	db	0
   608  0175A8  00                 	db	0
   609  0175A9  00                 	db	0
   610  0175AA  00                 	db	0
   611  0175AB  00                 	db	0
   612  0175AC  00                 	db	0
   613  0175AD  00                 	db	0
   614  0175AE  00                 	db	0
   615  0175AF  00                 	db	0
   616  0175B0  00                 	db	0
   617  0175B1  00                 	db	0
   618  0175B2  00                 	db	0
   619  0175B3  00                 	db	0
   620  0175B4  00                 	db	0
   621  0175B5  00                 	db	0
   622  0175B6  00                 	db	0
   623  0175B7  00                 	db	0
   624  0175B8  00                 	db	0
   625  0175B9  00                 	db	0
   626  0175BA  00                 	db	0
   627  0175BB  00                 	db	0
   628  0175BC  00                 	db	0
   629  0175BD  00                 	db	0
   630  0175BE  00                 	db	0
   631  0175BF  00                 	db	0
   632  0175C0  00                 	db	0
   633  0175C1  00                 	db	0
   634  0175C2  00                 	db	0
   635  0175C3  00                 	db	0
   636  0175C4  00                 	db	0
   637  0175C5  00                 	db	0
   638  0175C6  00                 	db	0
   639  0175C7  00                 	db	0
   640  0175C8  00                 	db	0
   641  0175C9  00                 	db	0
   642  0175CA  00                 	db	0
   643  0175CB  00                 	db	0
   644  0175CC  00                 	db	0
   645  0175CD  00                 	db	0
   646  0175CE  00                 	db	0
   647  0175CF  00                 	db	0
   648  0175D0  00                 	db	0
   649  0175D1  00                 	db	0
   650  0175D2  00                 	db	0
   651  0175D3  0000               	dw	0
   652  0175D5  0000               	dw	0
   653  0175D7  0000               	dw	0
   654  0175D9  0000               	dw	0
   655  0175DB  00                 	db	0
   656  0175DC  00                 	db	0
   657  0175DD  00                 	db	0
   658  0175DE  00                 	db	0
   659  0175DF  00                 	db	0
   660  0175E0  00                 	db	0
   661  0175E1  0000               	dw	0
   662  0175E3  0000               	dw	0
   663  0175E5  0000               	dw	0
   664  0175E7  0000               	dw	0
   665  0175E9  0000               	dw	0
   666  0175EB  0000               	dw	0
   667  0175ED  00                 	db	0
   668  0175EE  00                 	db	0
   669  0175EF  00                 	db	0
   670  0175F0  00                 	db	0
   671  0175F1  00                 	db	0
   672  0175F2  00                 	db	0
   673  0175F3  00                 	db	0
   674  0175F4  00                 	db	0
   675  0175F5  00                 	db	0
   676  0175F6  00                 	db	0
   677  0175F7  0000               	dw	0
   678  0175F9  0000               	dw	0
   679  0175FB  2D                 	db	45
   680  0175FC  00                 	db	0
   681  0175FD  0000               	dw	0
   682  0175FF  0000               	dw	0
   683  017601  0000               	dw	0
   684  017603  0000               	dw	0
   685  017605  0000               	dw	0
   686  017607  0000               	dw	0
   687  017609  0000               	dw	0
   688  01760B  0000               	dw	0
   689  01760D  00                 	db	0
   690  01760E  00                 	db	0
   691  01760F  00                 	db	0
   692  017610  00                 	db	0
   693  017611  00                 	db	0
   694  017612  00                 	db	0
   695  017613  00                 	db	0
   696  017614  00                 	db	0
   697  017615  00                 	db	0
   698  017616  00                 	db	0
   699  017617  00                 	db	0
   700  017618  00                 	db	0
   701  017619  00                 	db	0
   702  01761A  00                 	db	0
   703  01761B  00                 	db	0
   704  01761C  00                 	db	0
   705                           
   706                           	psect	mediumconst
   707  00FE50                     __pmediumconst:
   708                           	opt callstack 0
   709  00FE50  00                 	db	0
   710  00FE51                     _T:
   711                           	opt callstack 0
   712  00FE51  63                 	db	99
   713  00FE52  6F                 	db	111
   714  00FE53  6D                 	db	109
   715  00FE54  6D                 	db	109
   716  00FE55  61                 	db	97
   717  00FE56  6E                 	db	110
   718  00FE57  64                 	db	100
   719  00FE58  73                 	db	115
   720  00FE59  20                 	db	32
   721  00FE5A  31                 	db	49
   722  00FE5B  00                 	db	0
   723  00FE5C  00                 	db	0
   724  00FE5D  00                 	db	0
   725  00FE5E  00                 	db	0
   726  00FE5F  00                 	db	0
   727  00FE60  00                 	db	0
   728  00FE61  00                 	db	0
   729  00FE62  00                 	db	0
   730  00FE63  64                 	db	100
   731  00FE64  69                 	db	105
   732  00FE65  73                 	db	115
   733  00FE66  70                 	db	112
   734  00FE67  6C                 	db	108
   735  00FE68  61                 	db	97
   736  00FE69  79                 	db	121
   737  00FE6A  73                 	db	115
   738  00FE6B  20                 	db	32
   739  00FE6C  31                 	db	49
   740  00FE6D  00                 	db	0
   741  00FE6E  00                 	db	0
   742  00FE6F  00                 	db	0
   743  00FE70  00                 	db	0
   744  00FE71  00                 	db	0
   745  00FE72  00                 	db	0
   746  00FE73  00                 	db	0
   747  00FE74  00                 	db	0
   748  00FE75  63                 	db	99
   749  00FE76  6F                 	db	111
   750  00FE77  6D                 	db	109
   751  00FE78  6D                 	db	109
   752  00FE79  61                 	db	97
   753  00FE7A  6E                 	db	110
   754  00FE7B  64                 	db	100
   755  00FE7C  73                 	db	115
   756  00FE7D  20                 	db	32
   757  00FE7E  32                 	db	50
   758  00FE7F  00                 	db	0
   759  00FE80  00                 	db	0
   760  00FE81  00                 	db	0
   761  00FE82  00                 	db	0
   762  00FE83  00                 	db	0
   763  00FE84  00                 	db	0
   764  00FE85  00                 	db	0
   765  00FE86  00                 	db	0
   766  00FE87  64                 	db	100
   767  00FE88  69                 	db	105
   768  00FE89  73                 	db	115
   769  00FE8A  70                 	db	112
   770  00FE8B  6C                 	db	108
   771  00FE8C  61                 	db	97
   772  00FE8D  79                 	db	121
   773  00FE8E  73                 	db	115
   774  00FE8F  20                 	db	32
   775  00FE90  32                 	db	50
   776  00FE91  00                 	db	0
   777  00FE92  00                 	db	0
   778  00FE93  00                 	db	0
   779  00FE94  00                 	db	0
   780  00FE95  00                 	db	0
   781  00FE96  00                 	db	0
   782  00FE97  00                 	db	0
   783  00FE98  00                 	db	0
   784  00FE99  63                 	db	99
   785  00FE9A  6F                 	db	111
   786  00FE9B  6D                 	db	109
   787  00FE9C  6D                 	db	109
   788  00FE9D  61                 	db	97
   789  00FE9E  6E                 	db	110
   790  00FE9F  64                 	db	100
   791  00FEA0  73                 	db	115
   792  00FEA1  20                 	db	32
   793  00FEA2  33                 	db	51
   794  00FEA3  00                 	db	0
   795  00FEA4  00                 	db	0
   796  00FEA5  00                 	db	0
   797  00FEA6  00                 	db	0
   798  00FEA7  00                 	db	0
   799  00FEA8  00                 	db	0
   800  00FEA9  00                 	db	0
   801  00FEAA  00                 	db	0
   802  00FEAB  64                 	db	100
   803  00FEAC  69                 	db	105
   804  00FEAD  73                 	db	115
   805  00FEAE  70                 	db	112
   806  00FEAF  6C                 	db	108
   807  00FEB0  61                 	db	97
   808  00FEB1  79                 	db	121
   809  00FEB2  73                 	db	115
   810  00FEB3  20                 	db	32
   811  00FEB4  33                 	db	51
   812  00FEB5  00                 	db	0
   813  00FEB6  00                 	db	0
   814  00FEB7  00                 	db	0
   815  00FEB8  00                 	db	0
   816  00FEB9  00                 	db	0
   817  00FEBA  00                 	db	0
   818  00FEBB  00                 	db	0
   819  00FEBC  00                 	db	0
   820  00FEBD  63                 	db	99
   821  00FEBE  6F                 	db	111
   822  00FEBF  6D                 	db	109
   823  00FEC0  6D                 	db	109
   824  00FEC1  61                 	db	97
   825  00FEC2  6E                 	db	110
   826  00FEC3  64                 	db	100
   827  00FEC4  73                 	db	115
   828  00FEC5  20                 	db	32
   829  00FEC6  34                 	db	52
   830  00FEC7  00                 	db	0
   831  00FEC8  00                 	db	0
   832  00FEC9  00                 	db	0
   833  00FECA  00                 	db	0
   834  00FECB  00                 	db	0
   835  00FECC  00                 	db	0
   836  00FECD  00                 	db	0
   837  00FECE  00                 	db	0
   838  00FECF  64                 	db	100
   839  00FED0  69                 	db	105
   840  00FED1  73                 	db	115
   841  00FED2  70                 	db	112
   842  00FED3  6C                 	db	108
   843  00FED4  61                 	db	97
   844  00FED5  79                 	db	121
   845  00FED6  73                 	db	115
   846  00FED7  20                 	db	32
   847  00FED8  34                 	db	52
   848  00FED9  00                 	db	0
   849  00FEDA  00                 	db	0
   850  00FEDB  00                 	db	0
   851  00FEDC  00                 	db	0
   852  00FEDD  00                 	db	0
   853  00FEDE  00                 	db	0
   854  00FEDF  00                 	db	0
   855  00FEE0  00                 	db	0
   856  00FEE1                     __end_of_T:
   857                           	opt callstack 0
   858  0000                     _IVTADL	set	14493
   859  0000                     _IVTADH	set	14494
   860  0000                     _IVTADU	set	14495
   861  0000                     _PIR4bits	set	14756
   862  0000                     _PIE8bits	set	14744
   863  0000                     _PIR8bits	set	14760
   864  0000                     _SCANPR	set	14839
   865  0000                     _DMA2PR	set	14836
   866  0000                     _DMA1PR	set	14835
   867  0000                     _MAINPR	set	14834
   868  0000                     _ISRPR	set	14833
   869  0000                     _PIE2bits	set	14738
   870  0000                     _PIR2bits	set	14754
   871  0000                     _PIE9bits	set	14745
   872  0000                     _PIR9bits	set	14761
   873  0000                     _PIE6bits	set	14742
   874  0000                     _PIE3bits	set	14739
   875  0000                     _PMD7	set	14791
   876  0000                     _PMD6	set	14790
   877  0000                     _PMD5	set	14789
   878  0000                     _PMD4	set	14788
   879  0000                     _PMD3	set	14787
   880  0000                     _PMD2	set	14786
   881  0000                     _PMD1	set	14785
   882  0000                     _PMD0	set	14784
   883  0000                     _OSCTUNE	set	14814
   884  0000                     _OSCFRQ	set	14815
   885  0000                     _OSCEN	set	14813
   886  0000                     _OSCCON3	set	14811
   887  0000                     _OSCCON1	set	14809
   888  0000                     _IPR8bits	set	14728
   889  0000                     _IPR9bits	set	14729
   890  0000                     _IPR5bits	set	14725
   891  0000                     _IPR1bits	set	14721
   892  0000                     _IPR3bits	set	14723
   893  0000                     _IPR6bits	set	14726
   894  0000                     _IPR2bits	set	14722
   895  0000                     _PIE5bits	set	14741
   896  0000                     _PIE1bits	set	14737
   897  0000                     _PIR5bits	set	14757
   898  0000                     _PIR1bits	set	14753
   899  0000                     _PLLR	set	118496
   900  0000                     _SPI1SDIPPS	set	15071
   901  0000                     _U1RXPPS	set	15077
   902  0000                     _RC6PPS	set	14870
   903  0000                     _RC5PPS	set	14869
   904  0000                     _INT1PPS	set	15041
   905  0000                     _RD1PPS	set	14873
   906  0000                     _INT0PPS	set	15040
   907  0000                     _RC3PPS	set	14867
   908  0000                     _RB6PPS	set	14862
   909  0000                     _SPI1SCKPPS	set	15070
   910  0000                     _U2RXPPS	set	15080
   911  0000                     _SLRCONF	set	14995
   912  0000                     _SLRCONE	set	14979
   913  0000                     _SLRCOND	set	14963
   914  0000                     _SLRCONC	set	14947
   915  0000                     _SLRCONB	set	14931
   916  0000                     _SLRCONA	set	14915
   917  0000                     _ODCOND	set	14962
   918  0000                     _ODCONC	set	14946
   919  0000                     _ODCONB	set	14930
   920  0000                     _ODCONA	set	14914
   921  0000                     _ODCONF	set	14994
   922  0000                     _ODCONE	set	14978
   923  0000                     _WPUC	set	14945
   924  0000                     _WPUA	set	14913
   925  0000                     _WPUB	set	14929
   926  0000                     _WPUE	set	14977
   927  0000                     _WPUF	set	14993
   928  0000                     _WPUD	set	14961
   929  0000                     _ANSELA	set	14912
   930  0000                     _ANSELF	set	14992
   931  0000                     _ANSELE	set	14976
   932  0000                     _ANSELB	set	14928
   933  0000                     _ANSELC	set	14944
   934  0000                     _ANSELD	set	14960
   935  0000                     _DMA2SSA	set	15321
   936  0000                     _DMA1SSA	set	15353
   937  0000                     _DMA2DSZ	set	15310
   938  0000                     _DMA2SSZ	set	15319
   939  0000                     _DMA2DSA	set	15312
   940  0000                     _DMA1DSZ	set	15342
   941  0000                     _DMA1SSZ	set	15351
   942  0000                     _DMA1DSA	set	15344
   943  0000                     _DMA1CON0bits	set	15356
   944  0000                     _DMA1CON1bits	set	15357
   945  0000                     _DMA2CON0	set	15324
   946  0000                     _DMA2AIRQ	set	15326
   947  0000                     _DMA2SIRQ	set	15327
   948  0000                     _DMA2CON1	set	15325
   949  0000                     _DMA1CON0	set	15356
   950  0000                     _DMA1AIRQ	set	15358
   951  0000                     _DMA1SIRQ	set	15359
   952  0000                     _DMA1CON1	set	15357
   953  0000                     _CLKRCON	set	15589
   954  0000                     _CLKRCLK	set	15590
   955  0000                     _SPI1INTFbits	set	15642
   956  0000                     _SPI1RXB	set	15632
   957  0000                     _SPI1TXB	set	15633
   958  0000                     _SPI1TCNTL	set	15634
   959  0000                     _SPI1CON0	set	15636
   960  0000                     _SPI1CLK	set	15644
   961  0000                     _SPI1BAUD	set	15641
   962  0000                     _SPI1CON2	set	15638
   963  0000                     _SPI1CON1	set	15637
   964  0000                     _U2RXB	set	15824
   965  0000                     _U2TXB	set	15826
   966  0000                     _U2ERRIE	set	15842
   967  0000                     _U2ERRIR	set	15841
   968  0000                     _U2UIR	set	15840
   969  0000                     _U2FIFO	set	15839
   970  0000                     _U2BRGH	set	15838
   971  0000                     _U2BRGL	set	15837
   972  0000                     _U2CON2	set	15836
   973  0000                     _U2CON1	set	15835
   974  0000                     _U2CON0	set	15834
   975  0000                     _U2P3L	set	15832
   976  0000                     _U2P2L	set	15830
   977  0000                     _U2P1L	set	15828
   978  0000                     _U1RXB	set	15848
   979  0000                     _U1TXB	set	15850
   980  0000                     _U1ERRIE	set	15866
   981  0000                     _U1ERRIR	set	15865
   982  0000                     _U1UIR	set	15864
   983  0000                     _U1FIFO	set	15863
   984  0000                     _U1BRGH	set	15862
   985  0000                     _U1BRGL	set	15861
   986  0000                     _U1CON2	set	15860
   987  0000                     _U1CON1	set	15859
   988  0000                     _U1CON0	set	15858
   989  0000                     _U1P3H	set	15857
   990  0000                     _U1P3L	set	15856
   991  0000                     _U1P2H	set	15855
   992  0000                     _U1P2L	set	15854
   993  0000                     _U1P1H	set	15853
   994  0000                     _U1P1L	set	15852
   995  0000                     _FVRCON	set	16065
   996  0000                     _ADFLTRL	set	16102
   997  0000                     _ADFLTRH	set	16103
   998  0000                     _ADCON0bits	set	16120
   999  0000                     _ADCON0	set	16120
  1000  0000                     _ADCLK	set	16127
  1001  0000                     _ADACT	set	16126
  1002  0000                     _ADREF	set	16125
  1003  0000                     _ADSTAT	set	16124
  1004  0000                     _ADCON3	set	16123
  1005  0000                     _ADCON2	set	16122
  1006  0000                     _ADCON1	set	16121
  1007  0000                     _ADPREH	set	16119
  1008  0000                     _ADPREL	set	16118
  1009  0000                     _ADCAP	set	16117
  1010  0000                     _ADACQH	set	16116
  1011  0000                     _ADACQL	set	16115
  1012  0000                     _ADPCH	set	16113
  1013  0000                     _ADRPT	set	16108
  1014  0000                     _ADACCU	set	16106
  1015  0000                     _ADSTPTH	set	16101
  1016  0000                     _ADSTPTL	set	16100
  1017  0000                     _ADUTHH	set	16097
  1018  0000                     _ADUTHL	set	16096
  1019  0000                     _ADLTHH	set	16095
  1020  0000                     _ADLTHL	set	16094
  1021  0000                     _CCPTMRS1bits	set	16223
  1022  0000                     _LATCbits	set	16316
  1023  0000                     _LATDbits	set	16317
  1024  0000                     _PORTBbits	set	16331
  1025  0000                     _T2CON	set	16300
  1026  0000                     _T2TMR	set	16298
  1027  0000                     _T2PR	set	16299
  1028  0000                     _T2RST	set	16303
  1029  0000                     _T2HLT	set	16301
  1030  0000                     _T2CLKCON	set	16302
  1031  0000                     _PWM8DCL	set	16224
  1032  0000                     _PWM8DCH	set	16225
  1033  0000                     _PWM8CON	set	16226
  1034  0000                     _LATEbits	set	16318
  1035  0000                     _T5CONbits	set	16282
  1036  0000                     _T5CON	set	16282
  1037  0000                     _TMR5L	set	16280
  1038  0000                     _TMR5H	set	16281
  1039  0000                     _T5CLK	set	16285
  1040  0000                     _T5GATE	set	16284
  1041  0000                     _T5GCON	set	16283
  1042  0000                     _T6CON	set	16276
  1043  0000                     _T6TMR	set	16274
  1044  0000                     _T6PR	set	16275
  1045  0000                     _T6RST	set	16279
  1046  0000                     _T6HLT	set	16277
  1047  0000                     _T6CLKCON	set	16278
  1048  0000                     _TRISD	set	16325
  1049  0000                     _TRISC	set	16324
  1050  0000                     _TRISB	set	16323
  1051  0000                     _TRISA	set	16322
  1052  0000                     _TRISF	set	16327
  1053  0000                     _TRISE	set	16326
  1054  0000                     _LATC	set	16316
  1055  0000                     _LATB	set	16315
  1056  0000                     _LATF	set	16319
  1057  0000                     _LATA	set	16314
  1058  0000                     _LATD	set	16317
  1059  0000                     _LATE	set	16318
  1060  0000                     _IVTLOCKbits	set	16340
  1061  0000                     _IVTLOCK	set	16340
  1062  0000                     _INTCON0bits	set	16338
  1063  0000                     _GIE	set	130711
  1064  00FEE1                     
  1065                           ; BSR set to: 57
  1066  00FEE1  20                 	db	32
  1067  00FEE2  4D                 	db	77	;'M'
  1068  00FEE3  65                 	db	101	;'e'
  1069  00FEE4  73                 	db	115	;'s'
  1070  00FEE5  67                 	db	103	;'g'
  1071  00FEE6  20                 	db	32
  1072  00FEE7  25                 	db	37
  1073  00FEE8  64                 	db	100	;'d'
  1074  00FEE9  20                 	db	32
  1075  00FEEA  53                 	db	83	;'S'
  1076  00FEEB  74                 	db	116	;'t'
  1077  00FEEC  61                 	db	97	;'a'
  1078  00FEED  63                 	db	99	;'c'
  1079  00FEEE  6B                 	db	107	;'k'
  1080  00FEEF  20                 	db	32
  1081  00FEF0  25                 	db	37
  1082  00FEF1  64                 	db	100	;'d'
  1083  00FEF2  20                 	db	32
  1084  00FEF3  20                 	db	32
  1085  00FEF4  20                 	db	32
  1086  00FEF5  20                 	db	32
  1087  00FEF6  20                 	db	32
  1088  00FEF7  20                 	db	32
  1089  00FEF8  00                 	db	0
  1090  00FEF9                     STR_27:
  1091                           
  1092                           ; BSR set to: 57
  1093  00FEF9  20                 	db	32
  1094  00FEFA  20                 	db	32
  1095  00FEFB  20                 	db	32
  1096  00FEFC  20                 	db	32
  1097  00FEFD  20                 	db	32
  1098  00FEFE  20                 	db	32
  1099  00FEFF  20                 	db	32
  1100  00FF00  20                 	db	32
  1101  00FF01  20                 	db	32
  1102  00FF02  20                 	db	32
  1103  00FF03  20                 	db	32
  1104  00FF04  20                 	db	32
  1105  00FF05  20                 	db	32
  1106  00FF06  20                 	db	32
  1107  00FF07  20                 	db	32
  1108  00FF08  20                 	db	32
  1109  00FF09  20                 	db	32
  1110  00FF0A  20                 	db	32
  1111  00FF0B  00                 	db	0
  1112  00FF0C                     STR_17:
  1113                           
  1114                           ; BSR set to: 57
  1115  00FF0C  48                 	db	72	;'H'
  1116  00FF0D  45                 	db	69	;'E'
  1117  00FF0E  4C                 	db	76	;'L'
  1118  00FF0F  50                 	db	80	;'P'
  1119  00FF10  20                 	db	32
  1120  00FF11  25                 	db	37
  1121  00FF12  73                 	db	115	;'s'
  1122  00FF13  20                 	db	32
  1123  00FF14  20                 	db	32
  1124  00FF15  20                 	db	32
  1125  00FF16  20                 	db	32
  1126  00FF17  20                 	db	32
  1127  00FF18  20                 	db	32
  1128  00FF19  20                 	db	32
  1129  00FF1A  20                 	db	32
  1130  00FF1B  20                 	db	32
  1131  00FF1C  20                 	db	32
  1132  00FF1D  20                 	db	32
  1133  00FF1E  00                 	db	0
  1134  00FF1F                     
  1135                           ; BSR set to: 57
  1136  00FF1F  44                 	db	68	;'D'
  1137  00FF20  49                 	db	73	;'I'
  1138  00FF21  53                 	db	83	;'S'
  1139  00FF22  50                 	db	80	;'P'
  1140  00FF23  4C                 	db	76	;'L'
  1141  00FF24  41                 	db	65	;'A'
  1142  00FF25  59                 	db	89	;'Y'
  1143  00FF26  20                 	db	32
  1144  00FF27  25                 	db	37
  1145  00FF28  73                 	db	115	;'s'
  1146  00FF29  20                 	db	32
  1147  00FF2A  20                 	db	32
  1148  00FF2B  20                 	db	32
  1149  00FF2C  20                 	db	32
  1150  00FF2D  20                 	db	32
  1151  00FF2E  20                 	db	32
  1152  00FF2F  20                 	db	32
  1153  00FF30  20                 	db	32
  1154  00FF31  00                 	db	0
  1155  00FF32                     STR_11:
  1156                           
  1157                           ; BSR set to: 57
  1158  00FF32  25                 	db	37
  1159  00FF33  64                 	db	100	;'d'
  1160  00FF34  20                 	db	32
  1161  00FF35  25                 	db	37
  1162  00FF36  32                 	db	50	;'2'
  1163  00FF37  2E                 	db	46
  1164  00FF38  34                 	db	52	;'4'
  1165  00FF39  66                 	db	102	;'f'
  1166  00FF3A  2C                 	db	44
  1167  00FF3B  20                 	db	32
  1168  00FF3C  25                 	db	37
  1169  00FF3D  6C                 	db	108	;'l'
  1170  00FF3E  75                 	db	117	;'u'
  1171  00FF3F  20                 	db	32
  1172  00FF40  20                 	db	32
  1173  00FF41  20                 	db	32
  1174  00FF42  23                 	db	35
  1175  00FF43  00                 	db	0
  1176  00FF44                     STR_8:
  1177                           
  1178                           ; BSR set to: 57
  1179  00FF44  20                 	db	32
  1180  00FF45  56                 	db	86	;'V'
  1181  00FF46  54                 	db	84	;'T'
  1182  00FF47  45                 	db	69	;'E'
  1183  00FF48  52                 	db	82	;'R'
  1184  00FF49  4D                 	db	77	;'M'
  1185  00FF4A  20                 	db	32
  1186  00FF4B  23                 	db	35
  1187  00FF4C  32                 	db	50	;'2'
  1188  00FF4D  20                 	db	32
  1189  00FF4E  20                 	db	32
  1190  00FF4F  20                 	db	32
  1191  00FF50  20                 	db	32
  1192  00FF51  20                 	db	32
  1193  00FF52  20                 	db	32
  1194  00FF53  20                 	db	32
  1195  00FF54  00                 	db	0
  1196  00FF55                     STR_4:
  1197                           
  1198                           ; BSR set to: 57
  1199  00FF55  20                 	db	32
  1200  00FF56  4E                 	db	78	;'N'
  1201  00FF57  53                 	db	83	;'S'
  1202  00FF58  41                 	db	65	;'A'
  1203  00FF59  53                 	db	83	;'S'
  1204  00FF5A  50                 	db	80	;'P'
  1205  00FF5B  4F                 	db	79	;'O'
  1206  00FF5C  4F                 	db	79	;'O'
  1207  00FF5D  4B                 	db	75	;'K'
  1208  00FF5E  20                 	db	32
  1209  00FF5F  20                 	db	32
  1210  00FF60  20                 	db	32
  1211  00FF61  20                 	db	32
  1212  00FF62  20                 	db	32
  1213  00FF63  20                 	db	32
  1214  00FF64  20                 	db	32
  1215  00FF65  00                 	db	0
  1216  00FF66                     STR_1:
  1217                           
  1218                           ; BSR set to: 57
  1219  00FF66  20                 	db	32
  1220  00FF67  4D                 	db	77	;'M'
  1221  00FF68  42                 	db	66	;'B'
  1222  00FF69  4D                 	db	77	;'M'
  1223  00FF6A  43                 	db	67	;'C'
  1224  00FF6B  20                 	db	32
  1225  00FF6C  53                 	db	83	;'S'
  1226  00FF6D  4F                 	db	79	;'O'
  1227  00FF6E  4C                 	db	76	;'L'
  1228  00FF6F  41                 	db	65	;'A'
  1229  00FF70  52                 	db	82	;'R'
  1230  00FF71  4D                 	db	77	;'M'
  1231  00FF72  4F                 	db	79	;'O'
  1232  00FF73  4E                 	db	78	;'N'
  1233  00FF74  20                 	db	32
  1234  00FF75  20                 	db	32
  1235  00FF76  00                 	db	0
  1236  00FF77                     STR_5:
  1237                           
  1238                           ; BSR set to: 57
  1239  00FF77  20                 	db	32
  1240  00FF78  53                 	db	83	;'S'
  1241  00FF79  45                 	db	69	;'E'
  1242  00FF7A  51                 	db	81	;'Q'
  1243  00FF7B  55                 	db	85	;'U'
  1244  00FF7C  45                 	db	69	;'E'
  1245  00FF7D  4E                 	db	78	;'N'
  1246  00FF7E  43                 	db	67	;'C'
  1247  00FF7F  45                 	db	69	;'E'
  1248  00FF80  20                 	db	32
  1249  00FF81  54                 	db	84	;'T'
  1250  00FF82  45                 	db	69	;'E'
  1251  00FF83  53                 	db	83	;'S'
  1252  00FF84  54                 	db	84	;'T'
  1253  00FF85  20                 	db	32
  1254  00FF86  20                 	db	32
  1255  00FF87  00                 	db	0
  1256  00FF88                     STR_21:
  1257                           
  1258                           ; BSR set to: 57
  1259  00FF88  76                 	db	118	;'v'
  1260  00FF89  74                 	db	116	;'t'
  1261  00FF8A  65                 	db	101	;'e'
  1262  00FF8B  72                 	db	114	;'r'
  1263  00FF8C  6D                 	db	109	;'m'
  1264  00FF8D  20                 	db	32
  1265  00FF8E  25                 	db	37
  1266  00FF8F  78                 	db	120	;'x'
  1267  00FF90  3A                 	db	58	;':'
  1268  00FF91  25                 	db	37
  1269  00FF92  78                 	db	120	;'x'
  1270  00FF93  20                 	db	32
  1271  00FF94  20                 	db	32
  1272  00FF95  20                 	db	32
  1273  00FF96  00                 	db	0
  1274  00FF97                     STR_2:
  1275                           
  1276                           ; BSR set to: 57
  1277  00FF97  20                 	db	32
  1278  00FF98  56                 	db	86	;'V'
  1279  00FF99  65                 	db	101	;'e'
  1280  00FF9A  72                 	db	114	;'r'
  1281  00FF9B  73                 	db	115	;'s'
  1282  00FF9C  69                 	db	105	;'i'
  1283  00FF9D  6F                 	db	111	;'o'
  1284  00FF9E  6E                 	db	110	;'n'
  1285  00FF9F  20                 	db	32
  1286  00FFA0  25                 	db	37
  1287  00FFA1  73                 	db	115	;'s'
  1288  00FFA2  20                 	db	32
  1289  00FFA3  20                 	db	32
  1290  00FFA4  20                 	db	32
  1291  00FFA5  00                 	db	0
  1292  00FFA6                     STR_9:
  1293                           
  1294                           ; BSR set to: 57
  1295  00FFA6  25                 	db	37
  1296  00FFA7  64                 	db	100	;'d'
  1297  00FFA8  20                 	db	32
  1298  00FFA9  25                 	db	37
  1299  00FFAA  32                 	db	50	;'2'
  1300  00FFAB  2E                 	db	46
  1301  00FFAC  34                 	db	52	;'4'
  1302  00FFAD  66                 	db	102	;'f'
  1303  00FFAE  20                 	db	32
  1304  00FFAF  20                 	db	32
  1305  00FFB0  20                 	db	32
  1306  00FFB1  23                 	db	35
  1307  00FFB2  00                 	db	0
  1308  00FFB3                     STR_15:
  1309                           
  1310                           ; BSR set to: 57
  1311  00FFB3  4E                 	db	78	;'N'
  1312  00FFB4  6F                 	db	111	;'o'
  1313  00FFB5  76                 	db	118	;'v'
  1314  00FFB6  20                 	db	32
  1315  00FFB7  32                 	db	50	;'2'
  1316  00FFB8  31                 	db	49	;'1'
  1317  00FFB9  20                 	db	32
  1318  00FFBA  32                 	db	50	;'2'
  1319  00FFBB  30                 	db	48	;'0'
  1320  00FFBC  31                 	db	49	;'1'
  1321  00FFBD  39                 	db	57	;'9'
  1322  00FFBE  00                 	db	0
  1323  00FFBF                     STR_19:
  1324                           
  1325                           ; BSR set to: 57
  1326  00FFBF  25                 	db	37
  1327  00FFC0  73                 	db	115	;'s'
  1328  00FFC1  20                 	db	32
  1329  00FFC2  20                 	db	32
  1330  00FFC3  20                 	db	32
  1331  00FFC4  20                 	db	32
  1332  00FFC5  20                 	db	32
  1333  00FFC6  20                 	db	32
  1334  00FFC7  20                 	db	32
  1335  00FFC8  00                 	db	0
  1336  00FFC9                     STR_16:
  1337                           
  1338                           ; BSR set to: 57
  1339  00FFC9  32                 	db	50	;'2'
  1340  00FFCA  33                 	db	51	;'3'
  1341  00FFCB  3A                 	db	58	;':'
  1342  00FFCC  35                 	db	53	;'5'
  1343  00FFCD  35                 	db	53	;'5'
  1344  00FFCE  3A                 	db	58	;':'
  1345  00FFCF  31                 	db	49	;'1'
  1346  00FFD0  30                 	db	48	;'0'
  1347  00FFD1  00                 	db	0
  1348  00FFD2                     STR_3:
  1349                           
  1350                           ; BSR set to: 57
  1351  00FFD2  30                 	db	48	;'0'
  1352  00FFD3  2E                 	db	46
  1353  00FFD4  39                 	db	57	;'9'
  1354  00FFD5  35                 	db	53	;'5'
  1355  00FFD6  00                 	db	0
  1356  00FFD7                     STR_34:
  1357                           
  1358                           ; BSR set to: 57
  1359  00FFD7  49                 	db	73	;'I'
  1360  00FFD8  4E                 	db	78	;'N'
  1361  00FFD9  46                 	db	70	;'F'
  1362  00FFDA  00                 	db	0
  1363  00FFDB                     STR_38:
  1364                           
  1365                           ; BSR set to: 57
  1366  00FFDB  4E                 	db	78	;'N'
  1367  00FFDC  41                 	db	65	;'A'
  1368  00FFDD  4E                 	db	78	;'N'
  1369  00FFDE  00                 	db	0
  1370  00FFDF                     STR_35:
  1371                           
  1372                           ; BSR set to: 57
  1373  00FFDF  69                 	db	105	;'i'
  1374  00FFE0  6E                 	db	110	;'n'
  1375  00FFE1  66                 	db	102	;'f'
  1376  00FFE2  00                 	db	0
  1377  00FFE3                     STR_39:
  1378                           
  1379                           ; BSR set to: 57
  1380  00FFE3  6E                 	db	110	;'n'
  1381  00FFE4  61                 	db	97	;'a'
  1382  00FFE5  6E                 	db	110	;'n'
  1383  00FFE6  00                 	db	0
  1384  00FFE7                     STR_65:
  1385                           
  1386                           ; BSR set to: 57
  1387  00FFE7  6C                 	db	108	;'l'
  1388  00FFE8  58                 	db	88	;'X'
  1389  00FFE9  00                 	db	0
  1390  00FFEA                     STR_42:
  1391                           
  1392                           ; BSR set to: 57
  1393  00FFEA  6C                 	db	108	;'l'
  1394  00FFEB  64                 	db	100	;'d'
  1395  00FFEC  00                 	db	0
  1396  00FFED                     STR_51:
  1397                           
  1398                           ; BSR set to: 57
  1399  00FFED  6C                 	db	108	;'l'
  1400  00FFEE  66                 	db	102	;'f'
  1401  00FFEF  00                 	db	0
  1402  00FFF0                     STR_46:
  1403                           
  1404                           ; BSR set to: 57
  1405  00FFF0  6C                 	db	108	;'l'
  1406  00FFF1  69                 	db	105	;'i'
  1407  00FFF2  00                 	db	0
  1408  00FFF3                     STR_56:
  1409                           
  1410                           ; BSR set to: 57
  1411  00FFF3  6C                 	db	108	;'l'
  1412  00FFF4  75                 	db	117	;'u'
  1413  00FFF5  00                 	db	0
  1414  00FFF6                     STR_61:
  1415                           
  1416                           ; BSR set to: 57
  1417  00FFF6  6C                 	db	108	;'l'
  1418  00FFF7  78                 	db	120	;'x'
  1419  00FFF8  00                 	db	0
  1420  00FFF9                     STR_13:
  1421                           
  1422                           ; BSR set to: 57
  1423  00FFF9  25                 	db	37
  1424  00FFFA  63                 	db	99	;'c'
  1425  00FFFB  00                 	db	0
  1426  00FFFC                     STR_12:
  1427                           
  1428                           ; BSR set to: 57
  1429  00FFFC  25                 	db	37
  1430  00FFFD  73                 	db	115	;'s'
  1431  00FFFE  00                 	db	0
  1432  0000                     
  1433                           ; #config settings
  1434  00FFFF  00                 	db	0	; dummy byte at the end
  1435  0000                     
  1436                           	psect	cinit
  1437  01761E                     __pcinit:
  1438                           	opt callstack 0
  1439  01761E                     start_initialization:
  1440                           	opt callstack 0
  1441  01761E                     __initialization:
  1442                           	opt callstack 0
  1443                           
  1444                           ; Initialize objects allocated to BANK1 (203 bytes)
  1445                           ; load TBLPTR registers with __pidataBANK1
  1446  01761E  0E52               	movlw	low __pidataBANK1
  1447  017620  6EF6               	movwf	tblptrl,c
  1448  017622  0E75               	movlw	high __pidataBANK1
  1449  017624  6EF7               	movwf	tblptrh,c
  1450  017626  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1451  017628  6EF8               	movwf	tblptru,c
  1452  01762A  EE00  F100         	lfsr	0,__pdataBANK1
  1453  01762E  EE20 F0CB          	lfsr	2,203
  1454  017632                     copy_data0:
  1455  017632  0009               	tblrd		*+
  1456  017634  006F FFD7 FFEE     	movff	tablat,postinc0
  1457  01763A  50DD               	movf	postdec2,w,c
  1458  01763C  50D9               	movf	fsr2l,w,c
  1459  01763E  E1F9               	bnz	copy_data0
  1460                           
  1461                           ; Initialize objects allocated to BANK0 (63 bytes)
  1462                           ; load TBLPTR registers with __pidataBANK0
  1463  017640  0E7C               	movlw	low __pidataBANK0
  1464  017642  6EF6               	movwf	tblptrl,c
  1465  017644  0E86               	movlw	high __pidataBANK0
  1466  017646  6EF7               	movwf	tblptrh,c
  1467  017648  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1468  01764A  6EF8               	movwf	tblptru,c
  1469  01764C  EE00  F0A5         	lfsr	0,__pdataBANK0
  1470  017650  EE20 F03F          	lfsr	2,63
  1471  017654                     copy_data1:
  1472  017654  0009               	tblrd		*+
  1473  017656  006F FFD7 FFEE     	movff	tablat,postinc0
  1474  01765C  50DD               	movf	postdec2,w,c
  1475  01765E  50D9               	movf	fsr2l,w,c
  1476  017660  E1F9               	bnz	copy_data1
  1477                           
  1478                           ; Clear objects allocated to BANK7 (255 bytes)
  1479  017662  EE01  F300         	lfsr	0,__pbssBANK7
  1480  017666  EE20 F0FF          	lfsr	2,255
  1481  01766A                     clear_0:
  1482  01766A  6AEE               	clrf	postinc0,c
  1483  01766C  50DD               	movf	postdec2,w,c
  1484  01766E  50D9               	movf	fsr2l,w,c
  1485  017670  E1FC               	bnz	clear_0
  1486  017672  50DA               	movf	fsr2h,w,c
  1487  017674  E1FA               	bnz	clear_0
  1488                           
  1489                           ; Clear objects allocated to BANK6 (255 bytes)
  1490  017676  EE01  F200         	lfsr	0,__pbssBANK6
  1491  01767A  EE20 F0FF          	lfsr	2,255
  1492  01767E                     clear_1:
  1493  01767E  6AEE               	clrf	postinc0,c
  1494  017680  50DD               	movf	postdec2,w,c
  1495  017682  50D9               	movf	fsr2l,w,c
  1496  017684  E1FC               	bnz	clear_1
  1497  017686  50DA               	movf	fsr2h,w,c
  1498  017688  E1FA               	bnz	clear_1
  1499                           
  1500                           ; Clear objects allocated to BANK5 (218 bytes)
  1501  01768A  EE01  F100         	lfsr	0,__pbssBANK5
  1502  01768E  0EDA               	movlw	218
  1503  017690                     clear_2:
  1504  017690  6AEE               	clrf	postinc0,c
  1505  017692  06E8               	decf	wreg,f,c
  1506  017694  E1FD               	bnz	clear_2
  1507                           
  1508                           ; Clear objects allocated to BANK4 (67 bytes)
  1509  017696  EE01  F000         	lfsr	0,__pbssBANK4
  1510  01769A  0E43               	movlw	67
  1511  01769C                     clear_3:
  1512  01769C  6AEE               	clrf	postinc0,c
  1513  01769E  06E8               	decf	wreg,f,c
  1514  0176A0  E1FD               	bnz	clear_3
  1515                           
  1516                           ; Clear objects allocated to BANK3 (195 bytes)
  1517  0176A2  EE00  F300         	lfsr	0,__pbssBANK3
  1518  0176A6  0EC3               	movlw	195
  1519  0176A8                     clear_4:
  1520  0176A8  6AEE               	clrf	postinc0,c
  1521  0176AA  06E8               	decf	wreg,f,c
  1522  0176AC  E1FD               	bnz	clear_4
  1523                           
  1524                           ; Clear objects allocated to BANK2 (252 bytes)
  1525  0176AE  EE00  F200         	lfsr	0,__pbssBANK2
  1526  0176B2  0EFC               	movlw	252
  1527  0176B4                     clear_5:
  1528  0176B4  6AEE               	clrf	postinc0,c
  1529  0176B6  06E8               	decf	wreg,f,c
  1530  0176B8  E1FD               	bnz	clear_5
  1531                           
  1532                           ; Clear objects allocated to BANK0 (69 bytes)
  1533  0176BA  EE00  F060         	lfsr	0,__pbssBANK0
  1534  0176BE  0E45               	movlw	69
  1535  0176C0                     clear_6:
  1536  0176C0  6AEE               	clrf	postinc0,c
  1537  0176C2  06E8               	decf	wreg,f,c
  1538  0176C4  E1FD               	bnz	clear_6
  1539                           
  1540                           ; Clear objects allocated to COMRAM (50 bytes)
  1541  0176C6  EE00  F001         	lfsr	0,__pbssCOMRAM
  1542  0176CA  0E32               	movlw	50
  1543  0176CC                     clear_7:
  1544  0176CC  6AEE               	clrf	postinc0,c
  1545  0176CE  06E8               	decf	wreg,f,c
  1546  0176D0  E1FD               	bnz	clear_7
  1547                           
  1548                           ;
  1549                           ; Setup IVTBASE
  1550                           ;
  1551  0176D2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1552  0176D4  6ED5               	movwf	213,c
  1553  0176D6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1554  0176D8  6ED6               	movwf	214,c
  1555  0176DA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1556  0176DC  6ED7               	movwf	215,c
  1557  0176DE                     end_of_initialization:
  1558                           	opt callstack 0
  1559  0176DE                     __end_of__initialization:
  1560                           	opt callstack 0
  1561  0176DE  0100               	movlb	0
  1562  0176E0  EFAB  F0A0         	goto	_main	;jump to C main() function
  1563                           
  1564                           	psect	bssCOMRAM
  1565  000001                     __pbssCOMRAM:
  1566                           	opt callstack 0
  1567  000001                     _TMR6_InterruptHandler:
  1568                           	opt callstack 0
  1569  000001                     	ds	3
  1570  000004                     _ADCC_ADTI_InterruptHandler:
  1571                           	opt callstack 0
  1572  000004                     	ds	3
  1573  000007                     _ADCC_ADI_InterruptHandler:
  1574                           	opt callstack 0
  1575  000007                     	ds	3
  1576  00000A                     _UART1_TxInterruptHandler:
  1577                           	opt callstack 0
  1578  00000A                     	ds	3
  1579  00000D                     _UART1_RxInterruptHandler:
  1580                           	opt callstack 0
  1581  00000D                     	ds	3
  1582  000010                     _UART2_TxInterruptHandler:
  1583                           	opt callstack 0
  1584  000010                     	ds	3
  1585  000013                     _UART2_RxInterruptHandler:
  1586                           	opt callstack 0
  1587  000013                     	ds	3
  1588  000016                     _INT1_InterruptHandler:
  1589                           	opt callstack 0
  1590  000016                     	ds	3
  1591  000019                     _INT0_InterruptHandler:
  1592                           	opt callstack 0
  1593  000019                     	ds	3
  1594  00001C                     _width:
  1595                           	opt callstack 0
  1596  00001C                     	ds	2
  1597  00001E                     _prec:
  1598                           	opt callstack 0
  1599  00001E                     	ds	2
  1600  000020                     _flags:
  1601                           	opt callstack 0
  1602  000020                     	ds	2
  1603  000022                     TMR5_ISR@CountCallBack:
  1604                           	opt callstack 0
  1605  000022                     	ds	2
  1606  000024                     _timer5ReloadVal:
  1607                           	opt callstack 0
  1608  000024                     	ds	2
  1609  000026                     _mode_sw:
  1610                           	opt callstack 0
  1611  000026                     	ds	1
  1612  000027                     _uart2RxCount:
  1613                           	opt callstack 0
  1614  000027                     	ds	1
  1615  000028                     _uart2RxTail:
  1616                           	opt callstack 0
  1617  000028                     	ds	1
  1618  000029                     _uart2RxHead:
  1619                           	opt callstack 0
  1620  000029                     	ds	1
  1621  00002A                     _uart2TxBufferRemaining:
  1622                           	opt callstack 0
  1623  00002A                     	ds	1
  1624  00002B                     _uart2TxTail:
  1625                           	opt callstack 0
  1626  00002B                     	ds	1
  1627  00002C                     _uart2TxHead:
  1628                           	opt callstack 0
  1629  00002C                     	ds	1
  1630  00002D                     _uart1RxCount:
  1631                           	opt callstack 0
  1632  00002D                     	ds	1
  1633  00002E                     _uart1RxTail:
  1634                           	opt callstack 0
  1635  00002E                     	ds	1
  1636  00002F                     _uart1RxHead:
  1637                           	opt callstack 0
  1638  00002F                     	ds	1
  1639  000030                     _uart1TxBufferRemaining:
  1640                           	opt callstack 0
  1641  000030                     	ds	1
  1642  000031                     _uart1TxTail:
  1643                           	opt callstack 0
  1644  000031                     	ds	1
  1645  000032                     _uart1TxHead:
  1646                           	opt callstack 0
  1647  000032                     	ds	1
  1648                           
  1649                           	psect	bssBANK0
  1650  000060                     __pbssBANK0:
  1651                           	opt callstack 0
  1652  000060                     _tickCount:
  1653                           	opt callstack 0
  1654  000060                     	ds	24
  1655  000078                     _spi_link:
  1656                           	opt callstack 0
  1657  000078                     	ds	12
  1658  000084                     floorf@F524:
  1659                           	opt callstack 0
  1660  000084                     	ds	4
  1661  000088                     ___fpclassifyf@F463:
  1662                           	opt callstack 0
  1663  000088                     	ds	4
  1664  00008C                     _utctime:
  1665                           	opt callstack 0
  1666  00008C                     	ds	4
  1667  000090                     wdtdelay@dcount:
  1668                           	opt callstack 0
  1669  000090                     	ds	4
  1670  000094                     _P:
  1671                           	opt callstack 0
  1672  000094                     	ds	4
  1673  000098                     _TMR5_InterruptHandler:
  1674                           	opt callstack 0
  1675  000098                     	ds	3
  1676  00009B                     _nout:
  1677                           	opt callstack 0
  1678  00009B                     	ds	2
  1679  00009D                     _seed:
  1680                           	opt callstack 0
  1681  00009D                     	ds	8
  1682                           
  1683                           	psect	dataBANK0
  1684  0000A5                     __pdataBANK0:
  1685                           	opt callstack 0
  1686  0000A5                     _R:
  1687                           	opt callstack 0
  1688  0000A5                     	ds	40
  1689  0000CD                     stoa@F1166:
  1690                           	opt callstack 0
  1691  0000CD                     	ds	7
  1692  0000D4                     _port_data:
  1693                           	opt callstack 0
  1694  0000D4                     	ds	16
  1695                           
  1696                           	psect	dataBANK1
  1697  000100                     __pdataBANK1:
  1698                           	opt callstack 0
  1699  000100                     _V:
  1700                           	opt callstack 0
  1701  000100                     	ds	203
  1702                           
  1703                           	psect	bssBANK2
  1704  000200                     __pbssBANK2:
  1705                           	opt callstack 0
  1706  000200                     _C:
  1707                           	opt callstack 0
  1708  000200                     	ds	108
  1709  00026C                     lp_filter@smooth:
  1710                           	opt callstack 0
  1711  00026C                     	ds	64
  1712  0002AC                     _dbuf:
  1713                           	opt callstack 0
  1714  0002AC                     	ds	80
  1715                           
  1716                           	psect	bssBANK3
  1717  000300                     __pbssBANK3:
  1718                           	opt callstack 0
  1719  000300                     _uart2TxBuffer:
  1720                           	opt callstack 0
  1721  000300                     	ds	64
  1722  000340                     _uart1TxBuffer:
  1723                           	opt callstack 0
  1724  000340                     	ds	64
  1725  000380                     _ring_buf1:
  1726                           	opt callstack 0
  1727  000380                     	ds	67
  1728                           
  1729                           	psect	bssBANK4
  1730  000400                     __pbssBANK4:
  1731                           	opt callstack 0
  1732  000400                     _ring_buf2:
  1733                           	opt callstack 0
  1734  000400                     	ds	67
  1735                           
  1736                           	psect	bssBANK5
  1737  000500                     __pbssBANK5:
  1738                           	opt callstack 0
  1739  000500                     _D:
  1740                           	opt callstack 0
  1741  000500                     	ds	218
  1742                           
  1743                           	psect	bssBANK6
  1744  000600                     __pbssBANK6:
  1745                           	opt callstack 0
  1746  000600                     _uart1RxBuffer:
  1747                           	opt callstack 0
  1748  000600                     	ds	255
  1749                           
  1750                           	psect	bssBANK7
  1751  000700                     __pbssBANK7:
  1752                           	opt callstack 0
  1753  000700                     _uart2RxBuffer:
  1754                           	opt callstack 0
  1755  000700                     	ds	255
  1756                           
  1757                           	psect	cstackBANK0
  1758  0000E4                     __pcstackBANK0:
  1759                           	opt callstack 0
  1760  0000E4                     ??_INT1_ISR:
  1761                           
  1762                           ; 1 bytes @ 0x0
  1763  0000E4                     	ds	2
  1764  0000E6                     ??_TMR5_ISR:
  1765                           
  1766                           ; 1 bytes @ 0x2
  1767  0000E6                     	ds	4
  1768                           
  1769                           	psect	cstackCOMRAM
  1770  000053                     __pcstackCOMRAM:
  1771                           	opt callstack 0
  1772  000053                     ??_ADCC_ThresholdISR:
  1773  000053                     
  1774                           ; 1 bytes @ 0x0
  1775  000053                     	ds	5
  1776  000058                     ??_TMR6_ISR:
  1777                           
  1778                           ; 1 bytes @ 0x5
  1779  000058                     	ds	1
  1780  000059                     
  1781                           ; 1 bytes @ 0x6
  1782 ;;
  1783 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1784 ;;
  1785 ;; *************** function _main *****************
  1786 ;; Defined at:
  1787 ;;		line 157 in file "main.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  mode            1  [STACK] enum E17005
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1  [STACK] void 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 1/1
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels required when called:   19
  1807 ;; This function calls:
  1808 ;;		_SYSTEM_Initialize
  1809 ;;		_StartTimer
  1810 ;;		_TimerDone
  1811 ;;		_WaitMs
  1812 ;;		_check_adc_scan
  1813 ;;		_check_help
  1814 ;;		_clear_adc_scan
  1815 ;;		_convert_adc_data
  1816 ;;		_eaDogM_WriteCommand
  1817 ;;		_get_raw_result
  1818 ;;		_get_vterm_ptr
  1819 ;;		_init_display
  1820 ;;		_mode_lamp_dim
  1821 ;;		_set_display_info
  1822 ;;		_set_vterm
  1823 ;;		_sprintf
  1824 ;;		_srand
  1825 ;;		_start_adc_scan
  1826 ;;		_start_switch_handler
  1827 ;;		_update_lcd
  1828 ;; This function is called by:
  1829 ;;		Startup code after reset
  1830 ;; This function uses a reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text0
  1834  014156                     __ptext0:
  1835                           	opt callstack 0
  1836  014156                     _main:
  1837                           	opt callstack 0
  1838                           
  1839                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1840  014156  52E6               	movf	postinc1,f,c
  1841                           
  1842                           ;main.c: 159:  UI_STATES mode;;main.c: 162:  SYSTEM_Initialize();
  1843                           
  1844                           ;incstack = 0
  1845  014158  EC50  F0C2         	call	_SYSTEM_Initialize	;wreg free
  1846                           
  1847                           ; BSR set to: 60
  1848                           ;main.c: 165:  (INTCON0bits.GIEH = 1);
  1849  01415C  8ED2               	bsf	210,7,c	;volatile
  1850                           
  1851                           ; BSR set to: 60
  1852                           ;main.c: 168:  (INTCON0bits.GIEL = 1);
  1853  01415E  8CD2               	bsf	210,6,c	;volatile
  1854                           
  1855                           ; BSR set to: 60
  1856                           ;main.c: 170:  V.ui_state = UI_STATE_INIT;
  1857  014160  0101               	movlb	1	; () banked
  1858  014162  6B00               	clrf	_V& (0+255),b	;volatile
  1859                           
  1860                           ; BSR set to: 1
  1861                           ;main.c: 175:  WaitMs(300);
  1862  014164  0E2C               	movlw	44
  1863  014166  6EE6               	movwf	postinc1,c
  1864  014168  0E01               	movlw	1
  1865  01416A  6EE6               	movwf	postinc1,c
  1866  01416C  EC98  F0C3         	call	_WaitMs	;wreg free
  1867                           
  1868                           ;main.c: 176:  if (PORTBbits.RB0) {
  1869  014170  A0CB               	btfss	203,0,c	;volatile
  1870  014172  D004               	goto	l10374
  1871                           
  1872                           ;main.c: 177:   mode = UI_STATE_HOST;
  1873                           ;stkvar	_mode @ sp[(-1)+0]
  1874  014174  0EFF               	movlw	-1
  1875  014176  6AE3               	clrf	plusw1,c
  1876  014178  2AE3               	incf	plusw1,f,c
  1877                           
  1878                           ;main.c: 178:  } else {
  1879  01417A  D004               	goto	l10376
  1880  01417C                     l10374:
  1881                           
  1882                           ;main.c: 179:   mode = UI_STATE_LOG;
  1883                           ;stkvar	_mode @ sp[(-1)+0]
  1884  01417C  0EFF               	movlw	-1
  1885  01417E  6AE3               	clrf	plusw1,c
  1886  014180  80E3               	bsf	plusw1,0,c
  1887  014182  82E3               	bsf	plusw1,1,c	;indir
  1888  014184                     l10376:
  1889                           
  1890                           ;main.c: 182:  if (mode == UI_STATE_HOST) {
  1891                           ;stkvar	_mode @ sp[(-1)+0]
  1892  014184  0EFF               	movlw	-1
  1893  014186  04E3               	decf	plusw1,w,c
  1894  014188  A4D8               	btfss	status,2,c
  1895  01418A  D007               	goto	l1244
  1896                           
  1897                           ;main.c: 183:   do { LATDbits.LATD0 = 1; } while(0);
  1898  01418C  80BD               	bsf	189,0,c	;volatile
  1899                           
  1900                           ;main.c: 184:   V.mode_pwm = 70;
  1901  01418E  0E00               	movlw	0
  1902  014190  0101               	movlb	1	; () banked
  1903  014192  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1904  014194  0E46               	movlw	70
  1905  014196  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1906                           
  1907                           ;main.c: 185:  } else {
  1908  014198  D004               	goto	l10380
  1909  01419A                     l1244:
  1910  01419A  90BD               	bcf	189,0,c	;volatile
  1911                           
  1912                           ;main.c: 187:   V.mode_pwm = 0;
  1913  01419C  0101               	movlb	1	; () banked
  1914  01419E  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1915  0141A0  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1916  0141A2                     l10380:
  1917                           
  1918                           ; BSR set to: 1
  1919                           ;main.c: 189:  mode_lamp_dim(V.mode_pwm);
  1920  0141A2  0060  F657  FFE6   	movff	_V+149,postinc1
  1921  0141A8  0060  F65B  FFE6   	movff	_V+150,postinc1
  1922  0141AE  EC19  F0C7         	call	_mode_lamp_dim	;wreg free
  1923  0141B2  D0D0               	goto	l10424
  1924  0141B4                     l10382:
  1925                           
  1926                           ; BSR set to: 1
  1927                           ;main.c: 200:    init_display();
  1928  0141B4  ECCA  F0B9         	call	_init_display	;wreg free
  1929                           
  1930                           ; BSR set to: 61
  1931                           ;main.c: 201:    eaDogM_WriteCommand(0b00001100);
  1932  0141B8  0E0C               	movlw	12
  1933  0141BA  6EE6               	movwf	postinc1,c
  1934  0141BC  EC6D  F0C7         	call	_eaDogM_WriteCommand	;wreg free
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;main.c: 203:    V.ui_state = mode;
  1938                           ;stkvar	_mode @ sp[(-1)+0]
  1939  0141C0  0EFF               	movlw	-1
  1940  0141C2  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;main.c: 204:    srand(1957);
  1944  0141C8  0EA5               	movlw	165
  1945  0141CA  6EE6               	movwf	postinc1,c
  1946  0141CC  0E07               	movlw	7
  1947  0141CE  6EE6               	movwf	postinc1,c
  1948  0141D0  ECCE  F0C3         	call	_srand	;wreg free
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;main.c: 205:    set_vterm(0);
  1952  0141D4  0E00               	movlw	0
  1953  0141D6  6EE6               	movwf	postinc1,c
  1954  0141D8  ECE3  F0C6         	call	_set_vterm	;wreg free
  1955                           
  1956                           ; BSR set to: 5
  1957                           ;main.c: 206:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1958  0141DC  0E66               	movlw	low STR_1
  1959  0141DE  6EE6               	movwf	postinc1,c
  1960  0141E0  0EFF               	movlw	high STR_1
  1961  0141E2  6EE6               	movwf	postinc1,c
  1962  0141E4  0E00               	movlw	0
  1963  0141E6  6EE6               	movwf	postinc1,c
  1964  0141E8  0E00               	movlw	0
  1965  0141EA  6EE6               	movwf	postinc1,c
  1966  0141EC  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  1967  0141F0  0060  F0CF  FFE6   	movff	btemp,postinc1
  1968  0141F6  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  1969  0141FC  0E04               	movlw	4
  1970  0141FE  6EE6               	movwf	postinc1,c
  1971  014200  EC45  F0B9         	call	_sprintf	;wreg free
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;main.c: 207:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.95");
  1975  014204  0ED2               	movlw	low STR_3
  1976  014206  6EE6               	movwf	postinc1,c
  1977  014208  0EFF               	movlw	high STR_3
  1978  01420A  6EE6               	movwf	postinc1,c
  1979  01420C  0E97               	movlw	low STR_2
  1980  01420E  6EE6               	movwf	postinc1,c
  1981  014210  0EFF               	movlw	high STR_2
  1982  014212  6EE6               	movwf	postinc1,c
  1983  014214  0E00               	movlw	0
  1984  014216  6EE6               	movwf	postinc1,c
  1985  014218  0E01               	movlw	1
  1986  01421A  6EE6               	movwf	postinc1,c
  1987  01421C  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  1988  014220  0060  F0CF  FFE6   	movff	btemp,postinc1
  1989  014226  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  1990  01422C  0E06               	movlw	6
  1991  01422E  6EE6               	movwf	postinc1,c
  1992  014230  EC45  F0B9         	call	_sprintf	;wreg free
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;main.c: 208:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1996  014234  0E55               	movlw	low STR_4
  1997  014236  6EE6               	movwf	postinc1,c
  1998  014238  0EFF               	movlw	high STR_4
  1999  01423A  6EE6               	movwf	postinc1,c
  2000  01423C  0E00               	movlw	0
  2001  01423E  6EE6               	movwf	postinc1,c
  2002  014240  0E02               	movlw	2
  2003  014242  6EE6               	movwf	postinc1,c
  2004  014244  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  2005  014248  0060  F0CF  FFE6   	movff	btemp,postinc1
  2006  01424E  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  2007  014254  0E04               	movlw	4
  2008  014256  6EE6               	movwf	postinc1,c
  2009  014258  EC45  F0B9         	call	_sprintf	;wreg free
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;main.c: 209:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2013  01425C  0E77               	movlw	low STR_5
  2014  01425E  6EE6               	movwf	postinc1,c
  2015  014260  0EFF               	movlw	high STR_5
  2016  014262  6EE6               	movwf	postinc1,c
  2017  014264  0E02               	movlw	2
  2018  014266  6EE6               	movwf	postinc1,c
  2019  014268  0E00               	movlw	0
  2020  01426A  6EE6               	movwf	postinc1,c
  2021  01426C  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  2022  014270  0060  F0CF  FFE6   	movff	btemp,postinc1
  2023  014276  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  2024  01427C  0E04               	movlw	4
  2025  01427E  6EE6               	movwf	postinc1,c
  2026  014280  EC45  F0B9         	call	_sprintf	;wreg free
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;main.c: 210:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.95");
  2030  014284  0ED2               	movlw	low STR_3
  2031  014286  6EE6               	movwf	postinc1,c
  2032  014288  0EFF               	movlw	high STR_3
  2033  01428A  6EE6               	movwf	postinc1,c
  2034  01428C  0E97               	movlw	low STR_2
  2035  01428E  6EE6               	movwf	postinc1,c
  2036  014290  0EFF               	movlw	high STR_2
  2037  014292  6EE6               	movwf	postinc1,c
  2038  014294  0E02               	movlw	2
  2039  014296  6EE6               	movwf	postinc1,c
  2040  014298  0E01               	movlw	1
  2041  01429A  6EE6               	movwf	postinc1,c
  2042  01429C  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  2043  0142A0  0060  F0CF  FFE6   	movff	btemp,postinc1
  2044  0142A6  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  2045  0142AC  0E06               	movlw	6
  2046  0142AE  6EE6               	movwf	postinc1,c
  2047  0142B0  EC45  F0B9         	call	_sprintf	;wreg free
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;main.c: 211:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2051  0142B4  0E44               	movlw	low STR_8
  2052  0142B6  6EE6               	movwf	postinc1,c
  2053  0142B8  0EFF               	movlw	high STR_8
  2054  0142BA  6EE6               	movwf	postinc1,c
  2055  0142BC  0E02               	movlw	2
  2056  0142BE  6EE6               	movwf	postinc1,c
  2057  0142C0  0E02               	movlw	2
  2058  0142C2  6EE6               	movwf	postinc1,c
  2059  0142C4  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  2060  0142C8  0060  F0CF  FFE6   	movff	btemp,postinc1
  2061  0142CE  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  2062  0142D4  0E04               	movlw	4
  2063  0142D6  6EE6               	movwf	postinc1,c
  2064  0142D8  EC45  F0B9         	call	_sprintf	;wreg free
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;main.c: 212:    update_lcd(0);
  2068  0142DC  0E00               	movlw	0
  2069  0142DE  6EE6               	movwf	postinc1,c
  2070  0142E0  ECBE  F0B8         	call	_update_lcd	;wreg free
  2071                           
  2072                           ;main.c: 213:    WaitMs(3000);
  2073  0142E4  0EB8               	movlw	184
  2074  0142E6  6EE6               	movwf	postinc1,c
  2075  0142E8  0E0B               	movlw	11
  2076  0142EA  6EE6               	movwf	postinc1,c
  2077  0142EC  EC98  F0C3         	call	_WaitMs	;wreg free
  2078                           
  2079                           ;main.c: 214:    StartTimer(TMR_DISPLAY, 250);
  2080  0142F0  0EFA               	movlw	250
  2081  0142F2  6EE6               	movwf	postinc1,c
  2082  0142F4  0E00               	movlw	0
  2083  0142F6  6EE6               	movwf	postinc1,c
  2084  0142F8  0E0A               	movlw	10
  2085  0142FA  6EE6               	movwf	postinc1,c
  2086  0142FC  EC5E  F0C3         	call	_StartTimer	;wreg free
  2087                           
  2088                           ;main.c: 215:    StartTimer(TMR_ADC, 500);
  2089  014300  0EF4               	movlw	244
  2090  014302  6EE6               	movwf	postinc1,c
  2091  014304  0E01               	movlw	1
  2092  014306  6EE6               	movwf	postinc1,c
  2093  014308  0E01               	movlw	1
  2094  01430A  6EE6               	movwf	postinc1,c
  2095  01430C  EC5E  F0C3         	call	_StartTimer	;wreg free
  2096                           
  2097                           ;main.c: 216:    StartTimer(TMR_INFO, 3000);
  2098  014310  0EB8               	movlw	184
  2099  014312  6EE6               	movwf	postinc1,c
  2100  014314  0E0B               	movlw	11
  2101  014316  6EE6               	movwf	postinc1,c
  2102  014318  0E07               	movlw	7
  2103  01431A  6EE6               	movwf	postinc1,c
  2104  01431C  EC5E  F0C3         	call	_StartTimer	;wreg free
  2105                           
  2106                           ;main.c: 217:    StartTimer(TMR_FLIPPER, 1500);
  2107  014320  0EDC               	movlw	220
  2108  014322  6EE6               	movwf	postinc1,c
  2109  014324  0E05               	movlw	5
  2110  014326  6EE6               	movwf	postinc1,c
  2111  014328  0E0B               	movlw	11
  2112  01432A  6EE6               	movwf	postinc1,c
  2113  01432C  EC5E  F0C3         	call	_StartTimer	;wreg free
  2114                           
  2115                           ;main.c: 218:    StartTimer(TMR_HELPDIS, 3000);
  2116  014330  0EB8               	movlw	184
  2117  014332  6EE6               	movwf	postinc1,c
  2118  014334  0E0B               	movlw	11
  2119  014336  6EE6               	movwf	postinc1,c
  2120  014338  0E09               	movlw	9
  2121  01433A  6EE6               	movwf	postinc1,c
  2122  01433C  EC5E  F0C3         	call	_StartTimer	;wreg free
  2123                           
  2124                           ;main.c: 220:    start_adc_scan();
  2125  014340  EC17  F0C0         	call	_start_adc_scan	;wreg free
  2126                           
  2127                           ;main.c: 221:    start_switch_handler();
  2128  014344  ECF1  F0C6         	call	_start_switch_handler	;wreg free
  2129                           
  2130                           ;main.c: 223:    break;
  2131  014348  D01C               	goto	l10426
  2132  01434A                     l1252:
  2133                           
  2134                           ; BSR set to: 1
  2135                           ;main.c: 229:    P.SYSTEM_STABLE = 1;
  2136  01434A  0100               	movlb	0	; () banked
  2137  01434C  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  2138                           
  2139                           ;main.c: 230:    break;
  2140  01434E  D019               	goto	l10426
  2141  014350                     l1254:
  2142                           
  2143                           ; BSR set to: 1
  2144                           ;main.c: 233:    V.ui_state = UI_STATE_INIT;
  2145  014350  6B00               	clrf	_V& (0+255),b	;volatile
  2146                           
  2147                           ;main.c: 234:    break;
  2148  014352  D017               	goto	l10426
  2149  014354                     l10424:
  2150  014354  0101               	movlb	1	; () banked
  2151  014356  5100               	movf	_V& (0+255),w,b	;volatile
  2152  014358  6E3D               	movwf	(btemp+10)^0,c
  2153  01435A  6A3E               	clrf	(btemp+11)^0,c
  2154                           
  2155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2156                           ; Switch size 1, requested type "simple"
  2157                           ; Number of cases is 1, Range of values is 0 to 0
  2158                           ; switch strategies available:
  2159                           ; Name         Instructions Cycles
  2160                           ; simple_byte            4     3 (average)
  2161                           ;	Chosen strategy is simple_byte
  2162  01435C  503E               	movf	(btemp+11)^0,w,c
  2163  01435E  0A00               	xorlw	0	; case 0
  2164  014360  A4D8               	btfss	status,2,c
  2165  014362  D7F6               	goto	l1254
  2166                           
  2167                           ; BSR set to: 1
  2168                           ; Switch size 1, requested type "simple"
  2169                           ; Number of cases is 5, Range of values is 0 to 5
  2170                           ; switch strategies available:
  2171                           ; Name         Instructions Cycles
  2172                           ; simple_byte           16     9 (average)
  2173                           ;	Chosen strategy is simple_byte
  2174  014364  503D               	movf	(btemp+10)^0,w,c
  2175  014366  0A00               	xorlw	0	; case 0
  2176  014368  B4D8               	btfsc	status,2,c
  2177  01436A  D724               	goto	l10382
  2178  01436C  0A01               	xorlw	1	; case 1
  2179  01436E  B4D8               	btfsc	status,2,c
  2180  014370  D008               	goto	l10426
  2181  014372  0A02               	xorlw	2	; case 3
  2182  014374  B4D8               	btfsc	status,2,c
  2183  014376  D005               	goto	l10426
  2184  014378  0A07               	xorlw	7	; case 4
  2185  01437A  B4D8               	btfsc	status,2,c
  2186  01437C  D7E6               	goto	l1252
  2187  01437E  0A01               	xorlw	1	; case 5
  2188  014380  D7E7               	goto	l1254
  2189  014382                     l10426:
  2190                           
  2191                           ;main.c: 237:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2192  014382  0E01               	movlw	1
  2193  014384  6EE6               	movwf	postinc1,c
  2194  014386  EC33  F0C6         	call	_TimerDone	;wreg free
  2195  01438A  5033               	movf	btemp^0,w,c
  2196  01438C  B4D8               	btfsc	status,2,c
  2197  01438E  D013               	goto	l10438
  2198  014390  ECAD  F0C7         	call	_check_adc_scan	;wreg free
  2199  014394  5033               	movf	btemp^0,w,c
  2200  014396  B4D8               	btfsc	status,2,c
  2201  014398  D00E               	goto	l10438
  2202                           
  2203                           ;main.c: 241:    convert_adc_data();
  2204  01439A  EC08  F0BF         	call	_convert_adc_data	;wreg free
  2205                           
  2206                           ;main.c: 245:    clear_adc_scan();
  2207  01439E  ECB5  F0C7         	call	_clear_adc_scan	;wreg free
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;main.c: 246:    start_adc_scan();
  2211  0143A2  EC17  F0C0         	call	_start_adc_scan	;wreg free
  2212                           
  2213                           ;main.c: 247:    StartTimer(TMR_ADC, 500);
  2214  0143A6  0EF4               	movlw	244
  2215  0143A8  6EE6               	movwf	postinc1,c
  2216  0143AA  0E01               	movlw	1
  2217  0143AC  6EE6               	movwf	postinc1,c
  2218  0143AE  0E01               	movlw	1
  2219  0143B0  6EE6               	movwf	postinc1,c
  2220  0143B2  EC5E  F0C3         	call	_StartTimer	;wreg free
  2221  0143B6                     l10438:
  2222                           
  2223                           ;main.c: 254:   if (TimerDone(TMR_DISPLAY)) {
  2224                           
  2225                           ;main.c: 250:   if (V.ticks) {
  2226  0143B6  0E0A               	movlw	10
  2227  0143B8  6EE6               	movwf	postinc1,c
  2228  0143BA  EC33  F0C6         	call	_TimerDone	;wreg free
  2229  0143BE  5033               	movf	btemp^0,w,c
  2230  0143C0  B4D8               	btfsc	status,2,c
  2231  0143C2  D0A1               	goto	l10456
  2232                           
  2233                           ;main.c: 255:    if (TimerDone(TMR_HELPDIS)) {
  2234  0143C4  0E09               	movlw	9
  2235  0143C6  6EE6               	movwf	postinc1,c
  2236  0143C8  EC33  F0C6         	call	_TimerDone	;wreg free
  2237  0143CC  5033               	movf	btemp^0,w,c
  2238  0143CE  B4D8               	btfsc	status,2,c
  2239  0143D0  D004               	goto	l10446
  2240                           
  2241                           ;main.c: 256:     set_display_info(DIS_STR);
  2242  0143D2  0E00               	movlw	0
  2243  0143D4  6EE6               	movwf	postinc1,c
  2244  0143D6  ECA8  F0C6         	call	_set_display_info	;wreg free
  2245  0143DA                     l10446:
  2246                           
  2247                           ;main.c: 258:    sprintf(get_vterm_ptr(0, 0), "%d %2.4f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2248  0143DA  0060  F803  FFE6   	movff	_C,postinc1
  2249  0143E0  0060  F807  FFE6   	movff	_C+1,postinc1
  2250  0143E6  0060  F80B  FFE6   	movff	_C+2,postinc1
  2251  0143EC  0060  F80F  FFE6   	movff	_C+3,postinc1
  2252  0143F2  0E00               	movlw	0
  2253  0143F4  6EE6               	movwf	postinc1,c
  2254  0143F6  EC99  F0C6         	call	_get_raw_result	;wreg free
  2255  0143FA  0060  F0CF  FFE6   	movff	btemp,postinc1
  2256  014400  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  2257  014406  0EA6               	movlw	low STR_9
  2258  014408  6EE6               	movwf	postinc1,c
  2259  01440A  0EFF               	movlw	high STR_9
  2260  01440C  6EE6               	movwf	postinc1,c
  2261  01440E  0E00               	movlw	0
  2262  014410  6EE6               	movwf	postinc1,c
  2263  014412  0E00               	movlw	0
  2264  014414  6EE6               	movwf	postinc1,c
  2265  014416  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  2266  01441A  0060  F0CF  FFE6   	movff	btemp,postinc1
  2267  014420  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  2268  014426  0E0A               	movlw	10
  2269  014428  6EE6               	movwf	postinc1,c
  2270  01442A  EC45  F0B9         	call	_sprintf	;wreg free
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;main.c: 259:    sprintf(get_vterm_ptr(1, 0), "%d %2.4f   #", get_raw_result(C_PV), C.ca
      +                          lc[C_PV]);
  2274  01442E  0060  F813  FFE6   	movff	_C+4,postinc1
  2275  014434  0060  F817  FFE6   	movff	_C+5,postinc1
  2276  01443A  0060  F81B  FFE6   	movff	_C+6,postinc1
  2277  014440  0060  F81F  FFE6   	movff	_C+7,postinc1
  2278  014446  0E01               	movlw	1
  2279  014448  6EE6               	movwf	postinc1,c
  2280  01444A  EC99  F0C6         	call	_get_raw_result	;wreg free
  2281  01444E  0060  F0CF  FFE6   	movff	btemp,postinc1
  2282  014454  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  2283  01445A  0EA6               	movlw	low STR_9
  2284  01445C  6EE6               	movwf	postinc1,c
  2285  01445E  0EFF               	movlw	high STR_9
  2286  014460  6EE6               	movwf	postinc1,c
  2287  014462  0E00               	movlw	0
  2288  014464  6EE6               	movwf	postinc1,c
  2289  014466  0E01               	movlw	1
  2290  014468  6EE6               	movwf	postinc1,c
  2291  01446A  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  2292  01446E  0060  F0CF  FFE6   	movff	btemp,postinc1
  2293  014474  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  2294  01447A  0E0A               	movlw	10
  2295  01447C  6EE6               	movwf	postinc1,c
  2296  01447E  EC45  F0B9         	call	_sprintf	;wreg free
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;main.c: 260:    sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %lu   #", get_raw_result(V_CC),
      +                           C.calc[V_CC], V.timerint_count);
  2300  014482  0060  F6DF  FFE6   	movff	_V+183,postinc1
  2301  014488  0060  F6E3  FFE6   	movff	_V+184,postinc1
  2302  01448E  0060  F6E7  FFE6   	movff	_V+185,postinc1
  2303  014494  0060  F6EB  FFE6   	movff	_V+186,postinc1
  2304  01449A  0060  F823  FFE6   	movff	_C+8,postinc1
  2305  0144A0  0060  F827  FFE6   	movff	_C+9,postinc1
  2306  0144A6  0060  F82B  FFE6   	movff	_C+10,postinc1
  2307  0144AC  0060  F82F  FFE6   	movff	_C+11,postinc1
  2308  0144B2  0E02               	movlw	2
  2309  0144B4  6EE6               	movwf	postinc1,c
  2310  0144B6  EC99  F0C6         	call	_get_raw_result	;wreg free
  2311  0144BA  0060  F0CF  FFE6   	movff	btemp,postinc1
  2312  0144C0  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  2313  0144C6  0E32               	movlw	low STR_11
  2314  0144C8  6EE6               	movwf	postinc1,c
  2315  0144CA  0EFF               	movlw	high STR_11
  2316  0144CC  6EE6               	movwf	postinc1,c
  2317  0144CE  0E00               	movlw	0
  2318  0144D0  6EE6               	movwf	postinc1,c
  2319  0144D2  0E02               	movlw	2
  2320  0144D4  6EE6               	movwf	postinc1,c
  2321  0144D6  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  2322  0144DA  0060  F0CF  FFE6   	movff	btemp,postinc1
  2323  0144E0  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  2324  0144E6  0E0E               	movlw	14
  2325  0144E8  6EE6               	movwf	postinc1,c
  2326  0144EA  EC45  F0B9         	call	_sprintf	;wreg free
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;main.c: 261:    StartTimer(TMR_DISPLAY, 250);
  2330  0144EE  0EFA               	movlw	250
  2331  0144F0  6EE6               	movwf	postinc1,c
  2332  0144F2  0E00               	movlw	0
  2333  0144F4  6EE6               	movwf	postinc1,c
  2334  0144F6  0E0A               	movlw	10
  2335  0144F8  6EE6               	movwf	postinc1,c
  2336  0144FA  EC5E  F0C3         	call	_StartTimer	;wreg free
  2337                           
  2338                           ;main.c: 262:    update_lcd(0);
  2339  0144FE  0E00               	movlw	0
  2340  014500  6EE6               	movwf	postinc1,c
  2341  014502  ECBE  F0B8         	call	_update_lcd	;wreg free
  2342  014506                     l10456:
  2343                           
  2344                           ;main.c: 268:   check_help(V.flipper);
  2345  014506  0101               	movlb	1	; () banked
  2346  014508  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2347  01450A  6EE6               	movwf	postinc1,c
  2348  01450C  EC58  F0AF         	call	_check_help	;wreg free
  2349                           
  2350                           ;main.c: 273:   if (V.set_sequ) {
  2351  014510  0101               	movlb	1	; () banked
  2352  014512  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2353  014514  D71F               	goto	l10424
  2354                           
  2355                           ; BSR set to: 1
  2356                           ;main.c: 274:    if (TimerDone(TMR_INFO)) {
  2357  014516  0E07               	movlw	7
  2358  014518  6EE6               	movwf	postinc1,c
  2359  01451A  EC33  F0C6         	call	_TimerDone	;wreg free
  2360  01451E  5033               	movf	btemp^0,w,c
  2361  014520  B4D8               	btfsc	status,2,c
  2362  014522  D00B               	goto	l10468
  2363                           
  2364                           ;main.c: 275:     V.set_sequ = 0;
  2365  014524  0101               	movlb	1	; () banked
  2366  014526  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2367                           
  2368                           ; BSR set to: 1
  2369                           ;main.c: 276:     set_vterm(0);
  2370  014528  0E00               	movlw	0
  2371  01452A  6EE6               	movwf	postinc1,c
  2372  01452C  ECE3  F0C6         	call	_set_vterm	;wreg free
  2373                           
  2374                           ; BSR set to: 5
  2375                           ;main.c: 277:     update_lcd(0);
  2376  014530  0E00               	movlw	0
  2377  014532  6EE6               	movwf	postinc1,c
  2378  014534  ECBE  F0B8         	call	_update_lcd	;wreg free
  2379                           
  2380                           ;main.c: 278:    } else {
  2381  014538  D70D               	goto	l10424
  2382  01453A                     l10468:
  2383                           
  2384                           ;main.c: 279:     set_vterm(2);
  2385  01453A  0E02               	movlw	2
  2386  01453C  6EE6               	movwf	postinc1,c
  2387  01453E  ECE3  F0C6         	call	_set_vterm	;wreg free
  2388                           
  2389                           ; BSR set to: 5
  2390                           ;main.c: 280:     update_lcd(2);
  2391  014542  0E02               	movlw	2
  2392  014544  6EE6               	movwf	postinc1,c
  2393  014546  ECBE  F0B8         	call	_update_lcd	;wreg free
  2394  01454A  D704               	goto	l10424
  2395  01454C                     __end_of_main:
  2396                           	opt callstack 0
  2397                           
  2398 ;; *************** function _start_switch_handler *****************
  2399 ;; Defined at:
  2400 ;;		line 69 in file "mbmc.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1  [STACK] void 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  2409 ;; Tracked objects:
  2410 ;;		On entry : 1/0
  2411 ;;		On exit  : 3F/39
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    7
  2421 ;; This function calls:
  2422 ;;		_INT1_SetInterruptHandler
  2423 ;; This function is called by:
  2424 ;;		_main
  2425 ;; This function uses a reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text1
  2429  018DE2                     __ptext1:
  2430                           	opt callstack 0
  2431  018DE2                     _start_switch_handler:
  2432                           	opt callstack 23
  2433                           
  2434                           ;mbmc.c: 71:  (PIE5bits.INT1IE = 0);
  2435                           
  2436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2437                           ;incstack = 0
  2438  018DE2  0139               	movlb	57	; () banked
  2439  018DE4  9195               	bcf	149,0,b	;volatile
  2440                           
  2441                           ; BSR set to: 57
  2442                           ;mbmc.c: 72:  INT1_SetInterruptHandler(switch_handler);
  2443  018DE6  0EB6               	movlw	low _switch_handler
  2444  018DE8  6EE6               	movwf	postinc1,c
  2445  018DEA  0E85               	movlw	high _switch_handler
  2446  018DEC  6EE6               	movwf	postinc1,c
  2447  018DEE  0E01               	movlw	low (_switch_handler shr (0+16))
  2448  018DF0  6EE6               	movwf	postinc1,c
  2449  018DF2  EC6B  F0C5         	call	_INT1_SetInterruptHandler	;wreg free
  2450                           
  2451                           ;mbmc.c: 73:  (PIE5bits.INT1IE = 1);
  2452  018DF6  0139               	movlb	57	; () banked
  2453  018DF8  8195               	bsf	149,0,b	;volatile
  2454                           
  2455                           ; BSR set to: 57
  2456                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2457  018DFA  0012               	return		;funcret
  2458  018DFC                     __end_of_start_switch_handler:
  2459                           	opt callstack 0
  2460                           
  2461 ;; *************** function _start_adc_scan *****************
  2462 ;; Defined at:
  2463 ;;		line 33 in file "daq.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1  [STACK] _Bool 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/1
  2474 ;;		On exit  : 1/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    7
  2484 ;; This function calls:
  2485 ;;		_ADCC_DischargeSampleCapacitor
  2486 ;;		_ADCC_SetADIInterruptHandler
  2487 ;;		_ADCC_SetADTIInterruptHandler
  2488 ;;		_ADCC_StartConversion
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;; This function uses a reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text2
  2495  01802E                     __ptext2:
  2496                           	opt callstack 0
  2497  01802E                     _start_adc_scan:
  2498                           	opt callstack 23
  2499                           
  2500                           ;daq.c: 35:  if (R.done)
  2501                           
  2502                           ; BSR set to: 57
  2503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2504                           ;incstack = 0
  2505  01802E  0100               	movlb	0	; () banked
  2506  018030  51CC               	movf	(_R+39)& (0+255),w,b	;volatile
  2507  018032  A4D8               	btfss	status,2,c
  2508  018034  0012               	return	
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;daq.c: 38:  R.scan_index = 0;
  2512  018036  6BC9               	clrf	(_R+36)& (0+255),b	;volatile
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2516  018038  013A               	movlb	58	; () banked
  2517  01803A  5140               	movf	64,w,b	;volatile
  2518  01803C  006E F940  F033    	movff	14928,btemp	;volatile
  2519  018042  6A34               	clrf	(btemp+1)^0,c
  2520  018044  0060  F0CC  F034   	movff	btemp,btemp+1
  2521  01804A  6A33               	clrf	btemp^0,c
  2522  01804C  2633               	addwf	btemp^0,f,c
  2523  01804E  0E00               	movlw	0
  2524  018050  2234               	addwfc	(btemp+1)^0,f,c
  2525  018052  0E77               	movlw	119
  2526  018054  1433               	andwf	btemp^0,w,c
  2527  018056  0100               	movlb	0	; () banked
  2528  018058  6FCA               	movwf	(_R+37)& (0+255),b	;volatile
  2529  01805A  0E3C               	movlw	60
  2530  01805C  1434               	andwf	(btemp+1)^0,w,c
  2531  01805E  6FCB               	movwf	(_R+38)& (0+255),b	;volatile
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2535  018060  0E88               	movlw	low _adc_int_handler
  2536  018062  6EE6               	movwf	postinc1,c
  2537  018064  0E8F               	movlw	high _adc_int_handler
  2538  018066  6EE6               	movwf	postinc1,c
  2539  018068  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2540  01806A  6EE6               	movwf	postinc1,c
  2541  01806C  ECA7  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2542                           
  2543                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2544  018070  0E92               	movlw	low _adc_int_t_handler
  2545  018072  6EE6               	movwf	postinc1,c
  2546  018074  0E7D               	movlw	high _adc_int_t_handler
  2547  018076  6EE6               	movwf	postinc1,c
  2548  018078  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2549  01807A  6EE6               	movwf	postinc1,c
  2550  01807C  EC93  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2551                           
  2552                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2553  018080  ECA1  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2554                           
  2555                           ; BSR set to: 62
  2556                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2557  018084  0100               	movlb	0	; () banked
  2558  018086  51C9               	movf	(_R+36)& (0+255),w,b	;volatile
  2559  018088  0B0F               	andlw	15
  2560  01808A  6EE6               	movwf	postinc1,c
  2561  01808C  EC5C  F0C7         	call	_ADCC_StartConversion	;wreg free
  2562                           
  2563                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2564  018090  0012               	return		;funcret
  2565  018092                     __end_of_start_adc_scan:
  2566                           	opt callstack 0
  2567                           
  2568 ;; *************** function _ADCC_StartConversion *****************
  2569 ;; Defined at:
  2570 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  channel         1  [STACK] enum E16136
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1  [STACK] void 
  2577 ;; Registers used:
  2578 ;;		fsr1l, fsr1h
  2579 ;; Tracked objects:
  2580 ;;		On entry : 3F/0
  2581 ;;		On exit  : 3F/3E
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2588 ;;Total ram usage:        0 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    6
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_start_adc_scan
  2595 ;;		_adc_int_t_handler
  2596 ;; This function uses a reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text3
  2600  018EB8                     __ptext3:
  2601                           	opt callstack 0
  2602  018EB8                     _ADCC_StartConversion:
  2603                           	opt callstack 6
  2604                           
  2605                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2606                           ;stkvar	_channel @ sp[(0)+-1]
  2607                           
  2608                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2609                           ;incstack = 0
  2610  018EB8  0EFF               	movlw	-1
  2611  018EBA  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2612                           
  2613                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2614  018EC0  013E               	movlb	62	; () banked
  2615  018EC2  8FF8               	bsf	248,7,b	;volatile
  2616                           
  2617                           ; BSR set to: 62
  2618                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2619  018EC4  81F8               	bsf	248,0,b	;volatile
  2620                           
  2621                           ; BSR set to: 62
  2622                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2623  018EC6  52E5               	movf	postdec1,f,c
  2624  018EC8  0012               	return		;funcret
  2625  018ECA                     __end_of_ADCC_StartConversion:
  2626                           	opt callstack 0
  2627                           
  2628 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2629 ;; Defined at:
  2630 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1  [STACK] void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 3F/3E
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    6
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_start_adc_scan
  2655 ;;		_adc_int_t_handler
  2656 ;; This function uses a reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text4
  2660  018F42                     __ptext4:
  2661                           	opt callstack 0
  2662  018F42                     _ADCC_DischargeSampleCapacitor:
  2663                           	opt callstack 6
  2664                           
  2665                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2666                           
  2667                           ; BSR set to: 62
  2668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2669                           ;incstack = 0
  2670  018F42  0E3B               	movlw	59
  2671  018F44  013E               	movlb	62	; () banked
  2672  018F46  6FF1               	movwf	241,b	;volatile
  2673                           
  2674                           ; BSR set to: 62
  2675                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2676  018F48  0012               	return		;funcret
  2677  018F4A                     __end_of_ADCC_DischargeSampleCapacitor:
  2678                           	opt callstack 0
  2679                           
  2680 ;; *************** function _srand *****************
  2681 ;; Defined at:
  2682 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  s               2  [STACK] unsigned int 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1  [STACK] void 
  2689 ;; Registers used:
  2690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2691 ;; Tracked objects:
  2692 ;;		On entry : 3F/0
  2693 ;;		On exit  : 3F/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    6
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_main
  2707 ;; This function uses a reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text5
  2711  01879C                     __ptext5:
  2712                           	opt callstack 0
  2713  01879C                     _srand:
  2714                           	opt callstack 24
  2715                           
  2716                           ;stkvar	_s @ sp[(0)+-2]
  2717                           
  2718                           ; BSR set to: 62
  2719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2720                           ;incstack = 0
  2721  01879C  0EFE               	movlw	-2
  2722  01879E  50E3               	movf	plusw1,w,c
  2723  0187A0  0FFF               	addlw	255
  2724  0187A2  6E3D               	movwf	(btemp+10)^0,c
  2725  0187A4  0EFF               	movlw	-1
  2726  0187A6  006F FF8C  F03E    	movff	plusw1,btemp+11
  2727  0187AC  0EFF               	movlw	255
  2728  0187AE  223E               	addwfc	(btemp+11)^0,f,c
  2729  0187B0  0060  F0F4  F09D   	movff	btemp+10,_seed
  2730  0187B6  0060  F0F8  F09E   	movff	btemp+11,_seed+1
  2731  0187BC  0100               	movlb	0	; () banked
  2732  0187BE  6B9F               	clrf	(_seed+2)& (0+255),b
  2733  0187C0  6BA0               	clrf	(_seed+3)& (0+255),b
  2734  0187C2  6BA1               	clrf	(_seed+4)& (0+255),b
  2735  0187C4  6BA2               	clrf	(_seed+5)& (0+255),b
  2736  0187C6  6BA3               	clrf	(_seed+6)& (0+255),b
  2737  0187C8  6BA4               	clrf	(_seed+7)& (0+255),b
  2738                           
  2739                           ; BSR set to: 0
  2740                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2741  0187CA  52E5               	movf	postdec1,f,c
  2742  0187CC  52E5               	movf	postdec1,f,c
  2743  0187CE  0012               	return		;funcret
  2744  0187D0                     __end_of_srand:
  2745                           	opt callstack 0
  2746                           
  2747 ;; *************** function _init_display *****************
  2748 ;; Defined at:
  2749 ;;		line 37 in file "eadog.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;		None
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;		None
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1  [STACK] void 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/1
  2760 ;;		On exit  : 3F/3D
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2767 ;;Total ram usage:        0 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:    8
  2770 ;; This function calls:
  2771 ;;		_ringBufS_init
  2772 ;;		_send_lcd_cmd
  2773 ;;		_send_lcd_cmd_long
  2774 ;;		_wdtdelay
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text6
  2781  017394                     __ptext6:
  2782                           	opt callstack 0
  2783  017394                     _init_display:
  2784                           	opt callstack 22
  2785                           
  2786                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2787                           
  2788                           ; BSR set to: 0
  2789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2790                           ;incstack = 0
  2791  017394  0E80               	movlw	low _ring_buf1
  2792  017396  0100               	movlb	0	; () banked
  2793  017398  6F7E               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2794  01739A  0E03               	movlw	high _ring_buf1
  2795  01739C  6F7F               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2796                           
  2797                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2798  01739E  0E00               	movlw	low _ring_buf2
  2799  0173A0  6F7C               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2800  0173A2  0E04               	movlw	high _ring_buf2
  2801  0173A4  6F7D               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2805  0173A6  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  2806  0173AC  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  2807  0173B2  ECDF  F0C4         	call	_ringBufS_init	;wreg free
  2808                           
  2809                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2810  0173B6  0060  F1F3  FFE6   	movff	_spi_link+4,postinc1
  2811  0173BC  0060  F1F7  FFE6   	movff	_spi_link+5,postinc1
  2812  0173C2  ECDF  F0C4         	call	_ringBufS_init	;wreg free
  2813                           
  2814                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2815  0173C6  84BE               	bsf	190,2,c	;volatile
  2816  0173C8  84BC               	bsf	188,2,c	;volatile
  2817                           
  2818                           ;eadog.c: 46:  wdtdelay(350000);
  2819  0173CA  0E30               	movlw	48
  2820  0173CC  6EE6               	movwf	postinc1,c
  2821  0173CE  0E57               	movlw	87
  2822  0173D0  6EE6               	movwf	postinc1,c
  2823  0173D2  0E05               	movlw	5
  2824  0173D4  6EE6               	movwf	postinc1,c
  2825  0173D6  0E00               	movlw	0
  2826  0173D8  6EE6               	movwf	postinc1,c
  2827  0173DA  EC3A  F0C1         	call	_wdtdelay	;wreg free
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2831  0173DE  0E39               	movlw	57
  2832  0173E0  6EE6               	movwf	postinc1,c
  2833  0173E2  ECCB  F0C4         	call	_send_lcd_cmd	;wreg free
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2837  0173E6  0E1D               	movlw	29
  2838  0173E8  6EE6               	movwf	postinc1,c
  2839  0173EA  ECCB  F0C4         	call	_send_lcd_cmd	;wreg free
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2843  0173EE  0E50               	movlw	80
  2844  0173F0  6EE6               	movwf	postinc1,c
  2845  0173F2  ECCB  F0C4         	call	_send_lcd_cmd	;wreg free
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2849  0173F6  0E6C               	movlw	108
  2850  0173F8  6EE6               	movwf	postinc1,c
  2851  0173FA  ECCB  F0C4         	call	_send_lcd_cmd	;wreg free
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2855  0173FE  0E76               	movlw	118
  2856  017400  6EE6               	movwf	postinc1,c
  2857  017402  ECCB  F0C4         	call	_send_lcd_cmd	;wreg free
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2861  017406  0E38               	movlw	56
  2862  017408  6EE6               	movwf	postinc1,c
  2863  01740A  ECB7  F0C4         	call	_send_lcd_cmd_long	;wreg free
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2867  01740E  0E0F               	movlw	15
  2868  017410  6EE6               	movwf	postinc1,c
  2869  017412  ECCB  F0C4         	call	_send_lcd_cmd	;wreg free
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2873  017416  0E01               	movlw	1
  2874  017418  6EE6               	movwf	postinc1,c
  2875  01741A  ECB7  F0C4         	call	_send_lcd_cmd_long	;wreg free
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2879  01741E  0E02               	movlw	2
  2880  017420  6EE6               	movwf	postinc1,c
  2881  017422  ECCB  F0C4         	call	_send_lcd_cmd	;wreg free
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2885  017426  0E06               	movlw	6
  2886  017428  6EE6               	movwf	postinc1,c
  2887  01742A  ECCB  F0C4         	call	_send_lcd_cmd	;wreg free
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;eadog.c: 57:  wdtdelay(30);
  2891  01742E  0E1E               	movlw	30
  2892  017430  6EE6               	movwf	postinc1,c
  2893  017432  0E00               	movlw	0
  2894  017434  6EE6               	movwf	postinc1,c
  2895  017436  0E00               	movlw	0
  2896  017438  6EE6               	movwf	postinc1,c
  2897  01743A  0E00               	movlw	0
  2898  01743C  6EE6               	movwf	postinc1,c
  2899  01743E  EC3A  F0C1         	call	_wdtdelay	;wreg free
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2903  017442  0E02               	movlw	2
  2904  017444  013D               	movlb	61	; () banked
  2905  017446  6F16               	movwf	22,b	;volatile
  2906                           
  2907                           ; BSR set to: 61
  2908                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2909  017448  0E40               	movlw	64
  2910  01744A  6F15               	movwf	21,b	;volatile
  2911                           
  2912                           ; BSR set to: 61
  2913                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2914  01744C  0E83               	movlw	131
  2915  01744E  6F14               	movwf	20,b	;volatile
  2916                           
  2917                           ; BSR set to: 61
  2918                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2919  017450  931A               	bcf	26,1,b	;volatile
  2920                           
  2921                           ; BSR set to: 61
  2922                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2923  017452  0E3F               	movlw	-193
  2924  017454  013B               	movlb	59	; () banked
  2925  017456  17FD               	andwf	253,f,b	;volatile
  2926                           
  2927                           ; BSR set to: 59
  2928                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2929  017458  9BFD               	bcf	253,5,b	;volatile
  2930                           
  2931                           ; BSR set to: 59
  2932                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2933  01745A  51FD               	movf	253,w,b	;volatile
  2934  01745C  0BF9               	andlw	-7
  2935  01745E  0902               	iorlw	2
  2936  017460  6FFD               	movwf	253,b	;volatile
  2937                           
  2938                           ; BSR set to: 59
  2939                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2940  017462  0EE7               	movlw	-25
  2941  017464  17FD               	andwf	253,f,b	;volatile
  2942                           
  2943                           ; BSR set to: 59
  2944                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2945  017466  81FD               	bsf	253,0,b	;volatile
  2946                           
  2947                           ; BSR set to: 59
  2948                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2949  017468  0E80               	movlw	low _ring_buf1
  2950  01746A  6FF9               	movwf	249,b	;volatile
  2951  01746C  0E03               	movlw	high _ring_buf1
  2952  01746E  6FFA               	movwf	250,b	;volatile
  2953  017470  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2954  017472  6FFB               	movwf	251,b	;volatile
  2955                           
  2956                           ; BSR set to: 59
  2957                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2958  017474  9BFC               	bcf	252,5,b	;volatile
  2959                           
  2960                           ; BSR set to: 59
  2961                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2962  017476  013D               	movlb	61	; () banked
  2963  017478  831A               	bsf	26,1,b	;volatile
  2964                           
  2965                           ; BSR set to: 61
  2966                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2967  01747A  94BE               	bcf	190,2,c	;volatile
  2968                           
  2969                           ; BSR set to: 61
  2970                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2971  01747C  0012               	return		;funcret
  2972  01747E                     __end_of_init_display:
  2973                           	opt callstack 0
  2974                           
  2975 ;; *************** function _send_lcd_cmd_long *****************
  2976 ;; Defined at:
  2977 ;;		line 114 in file "eadog.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  cmd             1  [STACK] const unsigned char 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1  [STACK] void 
  2984 ;; Registers used:
  2985 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2986 ;; Tracked objects:
  2987 ;;		On entry : 3F/0
  2988 ;;		On exit  : 3F/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    7
  2998 ;; This function calls:
  2999 ;;		_SPI1_Exchange8bit
  3000 ;;		_wdtdelay
  3001 ;; This function is called by:
  3002 ;;		_init_display
  3003 ;; This function uses a reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text7
  3007  01896E                     __ptext7:
  3008                           	opt callstack 0
  3009  01896E                     _send_lcd_cmd_long:
  3010                           	opt callstack 22
  3011                           
  3012                           ; BSR set to: 61
  3013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3014                           ;incstack = 0
  3015                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3016  01896E  92BC               	bcf	188,1,c	;volatile
  3017                           
  3018                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3019  018970  94BC               	bcf	188,2,c	;volatile
  3020                           
  3021                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3022                           ;stkvar	_cmd @ sp[(0)+-1]
  3023  018972  0EFF               	movlw	-1
  3024  018974  50E3               	movf	plusw1,w,c
  3025  018976  6EE6               	movwf	postinc1,c
  3026  018978  EC8A  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  3027                           
  3028                           ; BSR set to: 57
  3029                           ;eadog.c: 119:  wdtdelay(800);
  3030  01897C  0E20               	movlw	32
  3031  01897E  6EE6               	movwf	postinc1,c
  3032  018980  0E03               	movlw	3
  3033  018982  6EE6               	movwf	postinc1,c
  3034  018984  0E00               	movlw	0
  3035  018986  6EE6               	movwf	postinc1,c
  3036  018988  0E00               	movlw	0
  3037  01898A  6EE6               	movwf	postinc1,c
  3038  01898C  EC3A  F0C1         	call	_wdtdelay	;wreg free
  3039                           
  3040                           ; BSR set to: 0
  3041  018990  82BC               	bsf	188,1,c	;volatile
  3042                           
  3043                           ; BSR set to: 0
  3044                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3045  018992  52E5               	movf	postdec1,f,c
  3046  018994  0012               	return		;funcret
  3047  018996                     __end_of_send_lcd_cmd_long:
  3048                           	opt callstack 0
  3049                           
  3050 ;; *************** function _send_lcd_cmd *****************
  3051 ;; Defined at:
  3052 ;;		line 102 in file "eadog.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  cmd             1  [STACK] const unsigned char 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1  [STACK] void 
  3059 ;; Registers used:
  3060 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3061 ;; Tracked objects:
  3062 ;;		On entry : 3F/0
  3063 ;;		On exit  : 3F/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    7
  3073 ;; This function calls:
  3074 ;;		_SPI1_Exchange8bit
  3075 ;;		_wdtdelay
  3076 ;; This function is called by:
  3077 ;;		_init_display
  3078 ;; This function uses a reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text8
  3082  018996                     __ptext8:
  3083                           	opt callstack 0
  3084  018996                     _send_lcd_cmd:
  3085                           	opt callstack 22
  3086                           
  3087                           ; BSR set to: 0
  3088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3089                           ;incstack = 0
  3090                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3091  018996  92BC               	bcf	188,1,c	;volatile
  3092                           
  3093                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3094  018998  94BC               	bcf	188,2,c	;volatile
  3095                           
  3096                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3097                           ;stkvar	_cmd @ sp[(0)+-1]
  3098  01899A  0EFF               	movlw	-1
  3099  01899C  50E3               	movf	plusw1,w,c
  3100  01899E  6EE6               	movwf	postinc1,c
  3101  0189A0  EC8A  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  3102                           
  3103                           ; BSR set to: 57
  3104                           ;eadog.c: 107:  wdtdelay(30);
  3105  0189A4  0E1E               	movlw	30
  3106  0189A6  6EE6               	movwf	postinc1,c
  3107  0189A8  0E00               	movlw	0
  3108  0189AA  6EE6               	movwf	postinc1,c
  3109  0189AC  0E00               	movlw	0
  3110  0189AE  6EE6               	movwf	postinc1,c
  3111  0189B0  0E00               	movlw	0
  3112  0189B2  6EE6               	movwf	postinc1,c
  3113  0189B4  EC3A  F0C1         	call	_wdtdelay	;wreg free
  3114                           
  3115                           ; BSR set to: 0
  3116  0189B8  82BC               	bsf	188,1,c	;volatile
  3117                           
  3118                           ; BSR set to: 0
  3119                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3120  0189BA  52E5               	movf	postdec1,f,c
  3121  0189BC  0012               	return		;funcret
  3122  0189BE                     __end_of_send_lcd_cmd:
  3123                           	opt callstack 0
  3124                           
  3125 ;; *************** function _SPI1_Exchange8bit *****************
  3126 ;; Defined at:
  3127 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  data            1  [STACK] unsigned char 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1  [STACK] unsigned char 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 3F/39
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3145 ;;Total ram usage:        0 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    6
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_send_lcd_cmd
  3152 ;;		_send_lcd_cmd_long
  3153 ;; This function uses a reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text9
  3157  018D14                     __ptext9:
  3158                           	opt callstack 0
  3159  018D14                     _SPI1_Exchange8bit:
  3160                           	opt callstack 22
  3161                           
  3162                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3163                           
  3164                           ; BSR set to: 0
  3165                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3166                           ;incstack = 0
  3167  018D14  0E01               	movlw	1
  3168  018D16  013D               	movlb	61	; () banked
  3169  018D18  6F12               	movwf	18,b	;volatile
  3170                           
  3171                           ; BSR set to: 61
  3172                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3173                           ;stkvar	_data @ sp[(0)+-1]
  3174  018D1A  0EFF               	movlw	-1
  3175  018D1C  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3176  018D22                     l835:
  3177                           
  3178                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3179  018D22  0139               	movlb	57	; () banked
  3180  018D24  A9A2               	btfss	162,4,b	;volatile
  3181  018D26  D7FD               	goto	l835
  3182                           
  3183                           ; BSR set to: 57
  3184                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3185  018D28  006F F440  F033    	movff	15632,btemp	;volatile
  3186                           
  3187                           ; BSR set to: 57
  3188                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3189  018D2E  52E5               	movf	postdec1,f,c
  3190  018D30  0012               	return		;funcret
  3191  018D32                     __end_of_SPI1_Exchange8bit:
  3192                           	opt callstack 0
  3193                           
  3194 ;; *************** function _ringBufS_init *****************
  3195 ;; Defined at:
  3196 ;;		line 22 in file "ringbufs.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  _this           2  [STACK] PTR volatile struct ring
  3199 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1  [STACK] void 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    7
  3218 ;; This function calls:
  3219 ;;		_memset
  3220 ;; This function is called by:
  3221 ;;		_init_display
  3222 ;; This function uses a reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text10
  3226  0189BE                     __ptext10:
  3227                           	opt callstack 0
  3228  0189BE                     _ringBufS_init:
  3229                           	opt callstack 22
  3230                           
  3231                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3232                           
  3233                           ; BSR set to: 57
  3234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3235                           ;incstack = 0
  3236  0189BE  0E43               	movlw	67
  3237  0189C0  6EE6               	movwf	postinc1,c
  3238  0189C2  0E00               	movlw	0
  3239  0189C4  6EE6               	movwf	postinc1,c
  3240  0189C6  0E00               	movlw	0
  3241  0189C8  6EE6               	movwf	postinc1,c
  3242  0189CA  0E00               	movlw	0
  3243  0189CC  6EE6               	movwf	postinc1,c
  3244                           
  3245                           ;stkvar	__this @ sp[(-4)+-2]
  3246  0189CE  0EFA               	movlw	-6
  3247  0189D0  006F FF8F FFE6     	movff	plusw1,postinc1
  3248  0189D6  006F FF8F FFE6     	movff	plusw1,postinc1
  3249  0189DC  ECD9  F0A7         	call	_memset	;wreg free
  3250                           
  3251                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3252  0189E0  52E5               	movf	postdec1,f,c
  3253  0189E2  52E5               	movf	postdec1,f,c
  3254  0189E4  0012               	return		;funcret
  3255  0189E6                     __end_of_ringBufS_init:
  3256                           	opt callstack 0
  3257                           
  3258 ;; *************** function _eaDogM_WriteCommand *****************
  3259 ;; Defined at:
  3260 ;;		line 160 in file "eadog.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  cmd             1  [STACK] const unsigned char 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1  [STACK] void 
  3267 ;; Registers used:
  3268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3269 ;; Tracked objects:
  3270 ;;		On entry : 3F/3D
  3271 ;;		On exit  : 3F/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:   16
  3281 ;; This function calls:
  3282 ;;		_send_lcd_cmd_dma
  3283 ;; This function is called by:
  3284 ;;		_main
  3285 ;; This function uses a reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text11
  3289  018EDA                     __ptext11:
  3290                           	opt callstack 0
  3291  018EDA                     _eaDogM_WriteCommand:
  3292                           	opt callstack 14
  3293                           
  3294                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3295                           ;stkvar	_cmd @ sp[(0)+-1]
  3296                           
  3297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3298                           ;incstack = 0
  3299  018EDA  0EFF               	movlw	-1
  3300  018EDC  50E3               	movf	plusw1,w,c
  3301  018EDE  6EE6               	movwf	postinc1,c
  3302  018EE0  EC94  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  3303                           
  3304                           ; BSR set to: 0
  3305                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3306  018EE4  52E5               	movf	postdec1,f,c
  3307  018EE6  0012               	return		;funcret
  3308  018EE8                     __end_of_eaDogM_WriteCommand:
  3309                           	opt callstack 0
  3310                           
  3311 ;; *************** function _convert_adc_data *****************
  3312 ;; Defined at:
  3313 ;;		line 41 in file "mbmc.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  i               1  [STACK] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1  [STACK] void 
  3320 ;; Registers used:
  3321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/39
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3331 ;;Total ram usage:        0 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    9
  3334 ;; This function calls:
  3335 ;;		_conv_raw_result
  3336 ;;		_lp_filter
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text12
  3343  017E10                     __ptext12:
  3344                           	opt callstack 0
  3345  017E10                     _convert_adc_data:
  3346                           	opt callstack 0
  3347                           
  3348                           ; BSR set to: 0
  3349                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3350  017E10  52E6               	movf	postinc1,f,c
  3351                           
  3352                           ;mbmc.c: 43:  uint8_t i = 0;
  3353                           ;stkvar	_i @ sp[(-1)+0]
  3354                           
  3355                           ;incstack = 0
  3356  017E12  0EFF               	movlw	-1
  3357  017E14  6AE3               	clrf	plusw1,c
  3358  017E16                     l8972:
  3359                           
  3360                           ;mbmc.c: 47:   C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  3361  017E16  0E01               	movlw	1
  3362  017E18  6EE6               	movwf	postinc1,c
  3363                           
  3364                           ;stkvar	_i @ sp[(-2)+0]
  3365  017E1A  0EFE               	movlw	-2
  3366  017E1C  50E3               	movf	plusw1,w,c
  3367  017E1E  6EE6               	movwf	postinc1,c
  3368  017E20  0E01               	movlw	1
  3369  017E22  6EE6               	movwf	postinc1,c
  3370                           
  3371                           ;stkvar	_i @ sp[(-4)+0]
  3372  017E24  0EFC               	movlw	-4
  3373  017E26  50E3               	movf	plusw1,w,c
  3374  017E28  6EE6               	movwf	postinc1,c
  3375  017E2A  ECEB  F098         	call	_conv_raw_result	;wreg free
  3376  017E2E  0060  F0CF  FFE6   	movff	btemp,postinc1
  3377  017E34  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3378  017E3A  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3379  017E40  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3380  017E46  EC63  F0B1         	call	_lp_filter	;wreg free
  3381                           
  3382                           ;stkvar	_i @ sp[(-1)+0]
  3383  017E4A  0EFF               	movlw	-1
  3384  017E4C  50E3               	movf	plusw1,w,c
  3385  017E4E  0D04               	mullw	4
  3386  017E50  0E00               	movlw	low _C
  3387  017E52  24F3               	addwf	243,w,c
  3388  017E54  6ED9               	movwf	fsr2l,c
  3389  017E56  0E02               	movlw	high _C
  3390  017E58  20F4               	addwfc	prodh,w,c
  3391  017E5A  6EDA               	movwf	fsr2h,c
  3392  017E5C  0060  F0CF  FFDE   	movff	btemp,postinc2
  3393  017E62  0060  F0D3  FFDE   	movff	btemp+1,postinc2
  3394  017E68  0060  F0D7  FFDE   	movff	btemp+2,postinc2
  3395  017E6E  0060  F0DB  FFDE   	movff	btemp+3,postinc2
  3396                           
  3397                           ;mbmc.c: 51:  } while (++i < 16);
  3398                           ;stkvar	_i @ sp[(-1)+0]
  3399  017E74  0EFF               	movlw	-1
  3400  017E76  2AE3               	incf	plusw1,f,c
  3401  017E78  0EFF               	movlw	-1
  3402  017E7A  006F FF8C  F033    	movff	plusw1,btemp
  3403  017E80  0E0F               	movlw	15
  3404  017E82  6433               	cpfsgt	btemp^0,c
  3405  017E84  D7C8               	goto	l8972
  3406                           
  3407                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3408  017E86  52E5               	movf	postdec1,f,c
  3409  017E88  0012               	return		;funcret
  3410  017E8A                     __end_of_convert_adc_data:
  3411                           	opt callstack 0
  3412                           
  3413 ;; *************** function _lp_filter *****************
  3414 ;; Defined at:
  3415 ;;		line 19 in file "mbmc.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  new             4  [STACK] const float 
  3418 ;;  bn              1  [STACK] const unsigned char 
  3419 ;;  slow            1  [STACK] const char 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  lp_speed        4  [STACK] float 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  4  [STACK] float 
  3424 ;; Registers used:
  3425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/39
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3435 ;;Total ram usage:        0 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    8
  3438 ;; This function calls:
  3439 ;;		___fladd
  3440 ;;		___flmul
  3441 ;;		___flsub
  3442 ;; This function is called by:
  3443 ;;		_convert_adc_data
  3444 ;; This function uses a reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text13
  3448  0162C6                     __ptext13:
  3449                           	opt callstack 0
  3450  0162C6                     _lp_filter:
  3451                           	opt callstack 0
  3452                           
  3453                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3454  0162C6  52E6               	movf	postinc1,f,c
  3455  0162C8  52E6               	movf	postinc1,f,c
  3456  0162CA  52E6               	movf	postinc1,f,c
  3457  0162CC  52E6               	movf	postinc1,f,c
  3458                           
  3459                           ;mbmc.c: 19: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 20: {;mbmc.c: 21:  static float smooth[16];;mbmc.c: 22:  float lp_speed;;mbmc.c: 24: 
      +                           if (bn >= 16)
  3460                           ;stkvar	_bn @ sp[(-4)+-5]
  3461                           
  3462                           ;incstack = 0
  3463  0162CE  0EF7               	movlw	-9
  3464  0162D0  006F FF8C  F033    	movff	plusw1,btemp
  3465  0162D6  0E0F               	movlw	15
  3466  0162D8  6433               	cpfsgt	btemp^0,c
  3467  0162DA  D011               	goto	l8762
  3468  0162DC                     u8610:
  3469                           
  3470                           ;mbmc.c: 25:   return new;
  3471                           ;stkvar	_new @ sp[(-4)+-4]
  3472  0162DC  0EF8               	movlw	-8
  3473  0162DE  006F FF8C  F033    	movff	plusw1,btemp
  3474  0162E4  0EF9               	movlw	-7
  3475  0162E6  006F FF8C  F034    	movff	plusw1,btemp+1
  3476  0162EC  0EFA               	movlw	-6
  3477  0162EE  006F FF8C  F035    	movff	plusw1,btemp+2
  3478  0162F4  0EFB               	movlw	-5
  3479  0162F6  006F FF8C  F036    	movff	plusw1,btemp+3
  3480  0162FC  D0BF               	goto	l1699
  3481  0162FE                     l8762:
  3482                           
  3483                           ;mbmc.c: 27:  if (slow == (-1)) {
  3484                           ;stkvar	_slow @ sp[(-4)+-6]
  3485  0162FE  0EF6               	movlw	-10
  3486  016300  28E3               	incf	plusw1,w,c
  3487  016302  A4D8               	btfss	status,2,c
  3488  016304  D012               	goto	l8770
  3489                           
  3490                           ;mbmc.c: 28:   smooth[bn] = 0.0;
  3491                           ;stkvar	_bn @ sp[(-4)+-5]
  3492  016306  0EF7               	movlw	-9
  3493  016308  50E3               	movf	plusw1,w,c
  3494  01630A  0D04               	mullw	4
  3495  01630C  0E6C               	movlw	low lp_filter@smooth
  3496  01630E  24F3               	addwf	243,w,c
  3497  016310  6ED9               	movwf	fsr2l,c
  3498  016312  0E02               	movlw	high lp_filter@smooth
  3499  016314  20F4               	addwfc	prodh,w,c
  3500  016316  6EDA               	movwf	fsr2h,c
  3501  016318  0E00               	movlw	0
  3502  01631A  6EDE               	movwf	postinc2,c
  3503  01631C  0E00               	movlw	0
  3504  01631E  6EDE               	movwf	postinc2,c
  3505  016320  0E00               	movlw	0
  3506  016322  6EDE               	movwf	postinc2,c
  3507  016324  0E00               	movlw	0
  3508  016326  6EDD               	movwf	postdec2,c
  3509  016328  D7D9               	goto	u8610
  3510  01632A                     l8770:
  3511                           
  3512                           ;mbmc.c: 32:  if (slow) {
  3513                           ;stkvar	_slow @ sp[(-4)+-6]
  3514  01632A  0EF6               	movlw	-10
  3515  01632C  50E3               	movf	plusw1,w,c
  3516  01632E  B4D8               	btfsc	status,2,c
  3517  016330  D008               	goto	l8774
  3518                           
  3519                           ;mbmc.c: 33:   lp_speed = 0.066;
  3520  016332  0E02               	movlw	2
  3521  016334  6E3B               	movwf	(btemp+8)^0,c
  3522  016336  0E2B               	movlw	43
  3523  016338  6E3C               	movwf	(btemp+9)^0,c
  3524  01633A  0E87               	movlw	135
  3525  01633C  6E3D               	movwf	(btemp+10)^0,c
  3526  01633E  0E3D               	movlw	61
  3527  016340  D007               	goto	L1
  3528  016342                     l8774:
  3529                           
  3530                           ;mbmc.c: 35:   lp_speed = 0.125;
  3531  016342  0E00               	movlw	0
  3532  016344  6E3B               	movwf	(btemp+8)^0,c
  3533  016346  0E00               	movlw	0
  3534  016348  6E3C               	movwf	(btemp+9)^0,c
  3535  01634A  0E00               	movlw	0
  3536  01634C  6E3D               	movwf	(btemp+10)^0,c
  3537  01634E  0E3E               	movlw	62
  3538  016350                     L1:
  3539  016350  6E3E               	movwf	(btemp+11)^0,c
  3540                           
  3541                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3542  016352  0EFC               	movlw	-4
  3543  016354  0060  F0EF  FFE3   	movff	btemp+8,plusw1
  3544  01635A  0EFD               	movlw	-3
  3545  01635C  0060  F0F3  FFE3   	movff	btemp+9,plusw1
  3546  016362  0EFE               	movlw	-2
  3547  016364  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  3548  01636A  0EFF               	movlw	-1
  3549  01636C  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  3550                           
  3551                           ;mbmc.c: 38:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3552                           ;stkvar	_bn @ sp[(-4)+-5]
  3553  016372  0EF7               	movlw	-9
  3554  016374  50E3               	movf	plusw1,w,c
  3555  016376  0D04               	mullw	4
  3556  016378  0E6C               	movlw	low lp_filter@smooth
  3557  01637A  24F3               	addwf	243,w,c
  3558  01637C  6ED9               	movwf	fsr2l,c
  3559  01637E  0E02               	movlw	high lp_filter@smooth
  3560  016380  20F4               	addwfc	prodh,w,c
  3561  016382  6EDA               	movwf	fsr2h,c
  3562  016384  006F FF7B FFE6     	movff	postinc2,postinc1
  3563  01638A  006F FF7B FFE6     	movff	postinc2,postinc1
  3564  016390  006F FF7B FFE6     	movff	postinc2,postinc1
  3565  016396  006F FF7B FFE6     	movff	postinc2,postinc1
  3566                           
  3567                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3568  01639C  0EF8               	movlw	-8
  3569  01639E  006F FF8F FFE6     	movff	plusw1,postinc1
  3570  0163A4  006F FF8F FFE6     	movff	plusw1,postinc1
  3571  0163AA  006F FF8F FFE6     	movff	plusw1,postinc1
  3572  0163B0  006F FF8F FFE6     	movff	plusw1,postinc1
  3573                           
  3574                           ;stkvar	_bn @ sp[(-12)+-5]
  3575  0163B6  0EEF               	movlw	-17
  3576  0163B8  50E3               	movf	plusw1,w,c
  3577  0163BA  0D04               	mullw	4
  3578  0163BC  0E6C               	movlw	low lp_filter@smooth
  3579  0163BE  24F3               	addwf	243,w,c
  3580  0163C0  6ED9               	movwf	fsr2l,c
  3581  0163C2  0E02               	movlw	high lp_filter@smooth
  3582  0163C4  20F4               	addwfc	prodh,w,c
  3583  0163C6  6EDA               	movwf	fsr2h,c
  3584  0163C8  006F FF7B FFE6     	movff	postinc2,postinc1
  3585  0163CE  006F FF7B FFE6     	movff	postinc2,postinc1
  3586  0163D4  006F FF7B FFE6     	movff	postinc2,postinc1
  3587  0163DA  006F FF7B FFE6     	movff	postinc2,postinc1
  3588                           
  3589                           ;stkvar	_new @ sp[(-16)+-4]
  3590  0163E0  0EEC               	movlw	-20
  3591  0163E2  006F FF8F FFE6     	movff	plusw1,postinc1
  3592  0163E8  006F FF8F FFE6     	movff	plusw1,postinc1
  3593  0163EE  006F FF8F FFE6     	movff	plusw1,postinc1
  3594  0163F4  006F FF8F FFE6     	movff	plusw1,postinc1
  3595  0163FA  EC0A  F0C2         	call	___flsub	;wreg free
  3596  0163FE  0060  F0CF  FFE6   	movff	btemp,postinc1
  3597  016404  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3598  01640A  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3599  016410  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3600  016416  ECF8  F090         	call	___flmul	;wreg free
  3601  01641A  0060  F0CF  FFE6   	movff	btemp,postinc1
  3602  016420  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3603  016426  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3604  01642C  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3605  016432  EC0D  F095         	call	___fladd	;wreg free
  3606                           
  3607                           ;stkvar	_bn @ sp[(-4)+-5]
  3608  016436  0EF7               	movlw	-9
  3609  016438  50E3               	movf	plusw1,w,c
  3610  01643A  0D04               	mullw	4
  3611  01643C  0E6C               	movlw	low lp_filter@smooth
  3612  01643E  24F3               	addwf	243,w,c
  3613  016440  6ED9               	movwf	fsr2l,c
  3614  016442  0E02               	movlw	high lp_filter@smooth
  3615  016444  20F4               	addwfc	prodh,w,c
  3616  016446  6EDA               	movwf	fsr2h,c
  3617  016448  0060  F0CF  FFDE   	movff	btemp,postinc2
  3618  01644E  0060  F0D3  FFDE   	movff	btemp+1,postinc2
  3619  016454  0060  F0D7  FFDE   	movff	btemp+2,postinc2
  3620  01645A  0060  F0DB  FFDD   	movff	btemp+3,postdec2
  3621  016460  52DD               	movf	postdec2,f,c
  3622  016462  52DD               	movf	postdec2,f,c
  3623  016464  006F FF78  F033    	movff	postinc2,btemp
  3624  01646A  006F FF78  F034    	movff	postinc2,btemp+1
  3625  016470  006F FF78  F035    	movff	postinc2,btemp+2
  3626  016476  006F FF78  F036    	movff	postinc2,btemp+3
  3627  01647C                     l1699:
  3628                           
  3629                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3630  01647C  0EF6               	movlw	246
  3631  01647E  26E1               	addwf	fsr1l,f,c
  3632  016480  0EFF               	movlw	255
  3633  016482  22E2               	addwfc	fsr1h,f,c
  3634  016484  0012               	return		;funcret
  3635  016486                     __end_of_lp_filter:
  3636                           	opt callstack 0
  3637                           
  3638 ;; *************** function _conv_raw_result *****************
  3639 ;; Defined at:
  3640 ;;		line 80 in file "daq.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  chan            1  [STACK] const enum E16136
  3643 ;;  to_what         1  [STACK] const enum E16198
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  4  [STACK] float 
  3648 ;; Registers used:
  3649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/39
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3659 ;;Total ram usage:        0 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    8
  3662 ;; This function calls:
  3663 ;;		___fldiv
  3664 ;;		___flmul
  3665 ;;		___flsub
  3666 ;;		___xxtofl
  3667 ;;		_get_raw_result
  3668 ;;		_nanf
  3669 ;; This function is called by:
  3670 ;;		_convert_adc_data
  3671 ;; This function uses a reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text14
  3675  0131D6                     __ptext14:
  3676                           	opt callstack 0
  3677  0131D6                     _conv_raw_result:
  3678                           	opt callstack 21
  3679                           
  3680                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 82:  if (!(0b0011110001110111 >> chan & 0x1))
  3681                           ;stkvar	_chan @ sp[(0)+-1]
  3682                           
  3683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3684                           ;incstack = 0
  3685  0131D6  0EFF               	movlw	-1
  3686  0131D8  006F FF8C  F03E    	movff	plusw1,btemp+11
  3687  0131DE  0E77               	movlw	119
  3688  0131E0  6E3B               	movwf	(btemp+8)^0,c
  3689  0131E2  0E3C               	movlw	60
  3690  0131E4  6E3C               	movwf	(btemp+9)^0,c
  3691  0131E6  2A3E               	incf	(btemp+11)^0,f,c
  3692  0131E8  D003               	goto	u8494
  3693  0131EA                     u8495:
  3694  0131EA  343C               	rlcf	(btemp+9)^0,w,c
  3695  0131EC  323C               	rrcf	(btemp+9)^0,f,c
  3696  0131EE  323B               	rrcf	(btemp+8)^0,f,c
  3697  0131F0                     u8494:
  3698  0131F0  2E3E               	decfsz	(btemp+11)^0,f,c
  3699  0131F2  D7FB               	goto	u8495
  3700  0131F4  B03B               	btfsc	(btemp+8)^0,0,c
  3701  0131F6  D29F               	goto	l8746
  3702                           
  3703                           ;daq.c: 83:   return nanf("");
  3704  0131F8  0E0B               	movlw	low (STR_27+18)
  3705  0131FA  6EE6               	movwf	postinc1,c
  3706  0131FC  0EFF               	movlw	high (STR_27+18)
  3707  0131FE  6EE6               	movwf	postinc1,c
  3708  013200  EC7B  F0C0         	call	_nanf	;wreg free
  3709  013204  D2A8               	goto	l1650
  3710  013206                     l8698:
  3711                           
  3712                           ;daq.c: 87:   if (0b0000000000000011 >> chan & 0x1) {
  3713                           ;stkvar	_chan @ sp[(0)+-1]
  3714  013206  0EFF               	movlw	-1
  3715  013208  006F FF8C  F03E    	movff	plusw1,btemp+11
  3716  01320E  0E03               	movlw	3
  3717  013210  6E3B               	movwf	(btemp+8)^0,c
  3718  013212  0E00               	movlw	0
  3719  013214  6E3C               	movwf	(btemp+9)^0,c
  3720  013216  2A3E               	incf	(btemp+11)^0,f,c
  3721  013218  D003               	goto	u8514
  3722  01321A                     u8515:
  3723  01321A  343C               	rlcf	(btemp+9)^0,w,c
  3724  01321C  323C               	rrcf	(btemp+9)^0,f,c
  3725  01321E  323B               	rrcf	(btemp+8)^0,f,c
  3726  013220                     u8514:
  3727  013220  2E3E               	decfsz	(btemp+11)^0,f,c
  3728  013222  D7FB               	goto	u8515
  3729  013224  A03B               	btfss	(btemp+8)^0,0,c
  3730  013226  D117               	goto	l8712
  3731                           
  3732                           ;daq.c: 88:    if (0b0000000000000001 >> chan & 0x1) {
  3733                           ;stkvar	_chan @ sp[(0)+-1]
  3734  013228  0EFF               	movlw	-1
  3735  01322A  006F FF8C  F03E    	movff	plusw1,btemp+11
  3736  013230  0E01               	movlw	1
  3737  013232  6E3B               	movwf	(btemp+8)^0,c
  3738  013234  0E00               	movlw	0
  3739  013236  6E3C               	movwf	(btemp+9)^0,c
  3740  013238  2A3E               	incf	(btemp+11)^0,f,c
  3741  01323A  D003               	goto	u8534
  3742  01323C                     u8535:
  3743  01323C  343C               	rlcf	(btemp+9)^0,w,c
  3744  01323E  323C               	rrcf	(btemp+9)^0,f,c
  3745  013240  323B               	rrcf	(btemp+8)^0,f,c
  3746  013242                     u8534:
  3747  013242  2E3E               	decfsz	(btemp+11)^0,f,c
  3748  013244  D7FB               	goto	u8535
  3749  013246  A03B               	btfss	(btemp+8)^0,0,c
  3750  013248  D083               	goto	l8708
  3751                           
  3752                           ;daq.c: 89:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 143.85/
      +                          1000.0;
  3753  01324A  0E00               	movlw	0
  3754  01324C  6EE6               	movwf	postinc1,c
  3755  01324E  0E00               	movlw	0
  3756  013250  6EE6               	movwf	postinc1,c
  3757  013252  0E7A               	movlw	122
  3758  013254  6EE6               	movwf	postinc1,c
  3759  013256  0E44               	movlw	68
  3760  013258  6EE6               	movwf	postinc1,c
  3761  01325A  0E9A               	movlw	154
  3762  01325C  6EE6               	movwf	postinc1,c
  3763  01325E  0ED9               	movlw	217
  3764  013260  6EE6               	movwf	postinc1,c
  3765  013262  0E0F               	movlw	15
  3766  013264  6EE6               	movwf	postinc1,c
  3767  013266  0E43               	movlw	67
  3768  013268  6EE6               	movwf	postinc1,c
  3769  01326A  0060  F314  F03B   	movff	_R+32,btemp+8	;volatile
  3770  013270  0060  F318  F03C   	movff	_R+33,btemp+9	;volatile
  3771  013276  0E00               	movlw	0
  3772  013278  BE3C               	btfsc	(btemp+9)^0,7,c
  3773  01327A  0EFF               	movlw	255
  3774  01327C  6E3D               	movwf	(btemp+10)^0,c
  3775  01327E  6E3E               	movwf	(btemp+11)^0,c
  3776  013280  0060  F0EF  FFE6   	movff	btemp+8,postinc1
  3777  013286  0060  F0F3  FFE6   	movff	btemp+9,postinc1
  3778  01328C  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  3779  013292  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  3780  013298  0E01               	movlw	1
  3781  01329A  6EE6               	movwf	postinc1,c
  3782  01329C  EC61  F0B0         	call	___xxtofl	;wreg free
  3783  0132A0  0060  F0CF  FFE6   	movff	btemp,postinc1
  3784  0132A6  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3785  0132AC  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3786  0132B2  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3787                           
  3788                           ;stkvar	_chan @ sp[(-12)+-1]
  3789  0132B8  0EF3               	movlw	-13
  3790  0132BA  50E3               	movf	plusw1,w,c
  3791  0132BC  6EE6               	movwf	postinc1,c
  3792  0132BE  EC99  F0C6         	call	_get_raw_result	;wreg free
  3793  0132C2  0060  F0CC  F03D   	movff	btemp,btemp+10
  3794  0132C8  0060  F0D0  F03E   	movff	btemp+1,btemp+11
  3795  0132CE  503D               	movf	(btemp+10)^0,w,c
  3796  0132D0  6E37               	movwf	(btemp+4)^0,c
  3797  0132D2  503E               	movf	(btemp+11)^0,w,c
  3798  0132D4  6E38               	movwf	(btemp+5)^0,c
  3799  0132D6  6A39               	clrf	(btemp+6)^0,c
  3800  0132D8  6A3A               	clrf	(btemp+7)^0,c
  3801  0132DA  0060  F0DF  FFE6   	movff	btemp+4,postinc1
  3802  0132E0  0060  F0E3  FFE6   	movff	btemp+5,postinc1
  3803  0132E6  0060  F0E7  FFE6   	movff	btemp+6,postinc1
  3804  0132EC  0060  F0EB  FFE6   	movff	btemp+7,postinc1
  3805  0132F2  0E00               	movlw	0
  3806  0132F4  6EE6               	movwf	postinc1,c
  3807  0132F6  EC61  F0B0         	call	___xxtofl	;wreg free
  3808  0132FA  0060  F0CF  FFE6   	movff	btemp,postinc1
  3809  013300  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3810  013306  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3811  01330C  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3812  013312  EC0A  F0C2         	call	___flsub	;wreg free
  3813  013316  0060  F0CF  FFE6   	movff	btemp,postinc1
  3814  01331C  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3815  013322  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3816  013328  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3817  01332E  ECF8  F090         	call	___flmul	;wreg free
  3818  013332  0060  F0CF  FFE6   	movff	btemp,postinc1
  3819  013338  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3820  01333E  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3821  013344  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3822  01334A  ECAE  F09B         	call	___fldiv	;wreg free
  3823  01334E  D203               	goto	l1650
  3824  013350                     l8708:
  3825                           
  3826                           ;daq.c: 91:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 60.1/10
      +                          00.0;
  3827  013350  0E00               	movlw	0
  3828  013352  6EE6               	movwf	postinc1,c
  3829  013354  0E00               	movlw	0
  3830  013356  6EE6               	movwf	postinc1,c
  3831  013358  0E7A               	movlw	122
  3832  01335A  6EE6               	movwf	postinc1,c
  3833  01335C  0E44               	movlw	68
  3834  01335E  6EE6               	movwf	postinc1,c
  3835  013360  0E66               	movlw	102
  3836  013362  6EE6               	movwf	postinc1,c
  3837  013364  0E66               	movlw	102
  3838  013366  6EE6               	movwf	postinc1,c
  3839  013368  0E70               	movlw	112
  3840  01336A  6EE6               	movwf	postinc1,c
  3841  01336C  0E42               	movlw	66
  3842  01336E  6EE6               	movwf	postinc1,c
  3843  013370  0060  F31C  F03B   	movff	_R+34,btemp+8	;volatile
  3844  013376  0060  F320  F03C   	movff	_R+35,btemp+9	;volatile
  3845  01337C  0E00               	movlw	0
  3846  01337E  BE3C               	btfsc	(btemp+9)^0,7,c
  3847  013380  0EFF               	movlw	255
  3848  013382  6E3D               	movwf	(btemp+10)^0,c
  3849  013384  6E3E               	movwf	(btemp+11)^0,c
  3850  013386  0060  F0EF  FFE6   	movff	btemp+8,postinc1
  3851  01338C  0060  F0F3  FFE6   	movff	btemp+9,postinc1
  3852  013392  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  3853  013398  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  3854  01339E  0E01               	movlw	1
  3855  0133A0  6EE6               	movwf	postinc1,c
  3856  0133A2  EC61  F0B0         	call	___xxtofl	;wreg free
  3857  0133A6  0060  F0CF  FFE6   	movff	btemp,postinc1
  3858  0133AC  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3859  0133B2  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3860  0133B8  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3861                           
  3862                           ;stkvar	_chan @ sp[(-12)+-1]
  3863  0133BE  0EF3               	movlw	-13
  3864  0133C0  50E3               	movf	plusw1,w,c
  3865  0133C2  6EE6               	movwf	postinc1,c
  3866  0133C4  EC99  F0C6         	call	_get_raw_result	;wreg free
  3867  0133C8  0060  F0CC  F03D   	movff	btemp,btemp+10
  3868  0133CE  0060  F0D0  F03E   	movff	btemp+1,btemp+11
  3869  0133D4  503D               	movf	(btemp+10)^0,w,c
  3870  0133D6  6E37               	movwf	(btemp+4)^0,c
  3871  0133D8  503E               	movf	(btemp+11)^0,w,c
  3872  0133DA  6E38               	movwf	(btemp+5)^0,c
  3873  0133DC  6A39               	clrf	(btemp+6)^0,c
  3874  0133DE  6A3A               	clrf	(btemp+7)^0,c
  3875  0133E0  0060  F0DF  FFE6   	movff	btemp+4,postinc1
  3876  0133E6  0060  F0E3  FFE6   	movff	btemp+5,postinc1
  3877  0133EC  0060  F0E7  FFE6   	movff	btemp+6,postinc1
  3878  0133F2  0060  F0EB  FFE6   	movff	btemp+7,postinc1
  3879  0133F8  0E00               	movlw	0
  3880  0133FA  6EE6               	movwf	postinc1,c
  3881  0133FC  EC61  F0B0         	call	___xxtofl	;wreg free
  3882  013400  0060  F0CF  FFE6   	movff	btemp,postinc1
  3883  013406  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3884  01340C  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3885  013412  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3886  013418  EC0A  F0C2         	call	___flsub	;wreg free
  3887  01341C  0060  F0CF  FFE6   	movff	btemp,postinc1
  3888  013422  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3889  013428  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3890  01342E  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3891  013434  ECF8  F090         	call	___flmul	;wreg free
  3892  013438  0060  F0CF  FFE6   	movff	btemp,postinc1
  3893  01343E  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3894  013444  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3895  01344A  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3896  013450  ECAE  F09B         	call	___fldiv	;wreg free
  3897  013454  D180               	goto	l1650
  3898  013456                     l8712:
  3899                           
  3900                           ;daq.c: 94:    if (0b0000100000000000 >> chan & 0x1) {
  3901                           ;stkvar	_chan @ sp[(0)+-1]
  3902  013456  0EFF               	movlw	-1
  3903  013458  006F FF8C  F03E    	movff	plusw1,btemp+11
  3904  01345E  0E00               	movlw	0
  3905  013460  6E3B               	movwf	(btemp+8)^0,c
  3906  013462  0E08               	movlw	8
  3907  013464  6E3C               	movwf	(btemp+9)^0,c
  3908  013466  2A3E               	incf	(btemp+11)^0,f,c
  3909  013468  D003               	goto	u8554
  3910  01346A                     u8555:
  3911  01346A  343C               	rlcf	(btemp+9)^0,w,c
  3912  01346C  323C               	rrcf	(btemp+9)^0,f,c
  3913  01346E  323B               	rrcf	(btemp+8)^0,f,c
  3914  013470                     u8554:
  3915  013470  2E3E               	decfsz	(btemp+11)^0,f,c
  3916  013472  D7FB               	goto	u8555
  3917  013474  A03B               	btfss	(btemp+8)^0,0,c
  3918  013476  D008               	goto	l8720
  3919                           
  3920                           ;daq.c: 95:     return 25.0;
  3921  013478  0E00               	movlw	0
  3922  01347A  6E33               	movwf	btemp^0,c
  3923  01347C  0E00               	movlw	0
  3924  01347E  6E34               	movwf	(btemp+1)^0,c
  3925  013480  0EC8               	movlw	200
  3926  013482  6E35               	movwf	(btemp+2)^0,c
  3927  013484  0E41               	movlw	65
  3928  013486  D155               	goto	L2
  3929  013488                     l8720:
  3930                           
  3931                           ;daq.c: 97:     return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  3932  013488  0E00               	movlw	0
  3933  01348A  6EE6               	movwf	postinc1,c
  3934  01348C  0E00               	movlw	0
  3935  01348E  6EE6               	movwf	postinc1,c
  3936  013490  0E7A               	movlw	122
  3937  013492  6EE6               	movwf	postinc1,c
  3938  013494  0E44               	movlw	68
  3939  013496  6EE6               	movwf	postinc1,c
  3940  013498  0E00               	movlw	0
  3941  01349A  6EE6               	movwf	postinc1,c
  3942  01349C  0E00               	movlw	0
  3943  01349E  6EE6               	movwf	postinc1,c
  3944  0134A0  0E00               	movlw	0
  3945  0134A2  6EE6               	movwf	postinc1,c
  3946  0134A4  0E40               	movlw	64
  3947  0134A6  6EE6               	movwf	postinc1,c
  3948  0134A8  0E61               	movlw	97
  3949  0134AA  6EE6               	movwf	postinc1,c
  3950  0134AC  0E03               	movlw	3
  3951  0134AE  6EE6               	movwf	postinc1,c
  3952  0134B0  0E04               	movlw	4
  3953  0134B2  6EE6               	movwf	postinc1,c
  3954  0134B4  0E41               	movlw	65
  3955  0134B6  6EE6               	movwf	postinc1,c
  3956                           
  3957                           ;stkvar	_chan @ sp[(-12)+-1]
  3958  0134B8  0EF3               	movlw	-13
  3959  0134BA  50E3               	movf	plusw1,w,c
  3960  0134BC  6EE6               	movwf	postinc1,c
  3961  0134BE  EC99  F0C6         	call	_get_raw_result	;wreg free
  3962  0134C2  0060  F0CC  F03D   	movff	btemp,btemp+10
  3963  0134C8  0060  F0D0  F03E   	movff	btemp+1,btemp+11
  3964  0134CE  503D               	movf	(btemp+10)^0,w,c
  3965  0134D0  6E37               	movwf	(btemp+4)^0,c
  3966  0134D2  503E               	movf	(btemp+11)^0,w,c
  3967  0134D4  6E38               	movwf	(btemp+5)^0,c
  3968  0134D6  6A39               	clrf	(btemp+6)^0,c
  3969  0134D8  6A3A               	clrf	(btemp+7)^0,c
  3970  0134DA  0060  F0DF  FFE6   	movff	btemp+4,postinc1
  3971  0134E0  0060  F0E3  FFE6   	movff	btemp+5,postinc1
  3972  0134E6  0060  F0E7  FFE6   	movff	btemp+6,postinc1
  3973  0134EC  0060  F0EB  FFE6   	movff	btemp+7,postinc1
  3974  0134F2  0E00               	movlw	0
  3975  0134F4  6EE6               	movwf	postinc1,c
  3976  0134F6  EC61  F0B0         	call	___xxtofl	;wreg free
  3977  0134FA  0060  F0CF  FFE6   	movff	btemp,postinc1
  3978  013500  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3979  013506  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3980  01350C  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3981  013512  ECF8  F090         	call	___flmul	;wreg free
  3982  013516  0060  F0CF  FFE6   	movff	btemp,postinc1
  3983  01351C  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3984  013522  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3985  013528  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3986  01352E  ECAE  F09B         	call	___fldiv	;wreg free
  3987  013532  0060  F0CF  FFE6   	movff	btemp,postinc1
  3988  013538  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  3989  01353E  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  3990  013544  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  3991  01354A  ECAE  F09B         	call	___fldiv	;wreg free
  3992  01354E  D103               	goto	l1650
  3993  013550                     l8724:
  3994                           
  3995                           ;daq.c: 102:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  3996                           ;stkvar	_chan @ sp[(0)+-1]
  3997  013550  0EFF               	movlw	-1
  3998  013552  006F FF8C  F03E    	movff	plusw1,btemp+11
  3999  013558  0E03               	movlw	3
  4000  01355A  6E3B               	movwf	(btemp+8)^0,c
  4001  01355C  0E00               	movlw	0
  4002  01355E  6E3C               	movwf	(btemp+9)^0,c
  4003  013560  2A3E               	incf	(btemp+11)^0,f,c
  4004  013562  D003               	goto	u8574
  4005  013564                     u8575:
  4006  013564  343C               	rlcf	(btemp+9)^0,w,c
  4007  013566  323C               	rrcf	(btemp+9)^0,f,c
  4008  013568  323B               	rrcf	(btemp+8)^0,f,c
  4009  01356A                     u8574:
  4010  01356A  2E3E               	decfsz	(btemp+11)^0,f,c
  4011  01356C  D7FB               	goto	u8575
  4012  01356E  B03B               	btfsc	(btemp+8)^0,0,c
  4013  013570  D011               	goto	u8600
  4014                           
  4015                           ;stkvar	_chan @ sp[(0)+-1]
  4016  013572  0EFF               	movlw	-1
  4017  013574  006F FF8C  F03E    	movff	plusw1,btemp+11
  4018  01357A  0E00               	movlw	0
  4019  01357C  6E3B               	movwf	(btemp+8)^0,c
  4020  01357E  0E08               	movlw	8
  4021  013580  6E3C               	movwf	(btemp+9)^0,c
  4022  013582  2A3E               	incf	(btemp+11)^0,f,c
  4023  013584  D003               	goto	u8594
  4024  013586                     u8595:
  4025  013586  343C               	rlcf	(btemp+9)^0,w,c
  4026  013588  323C               	rrcf	(btemp+9)^0,f,c
  4027  01358A  323B               	rrcf	(btemp+8)^0,f,c
  4028  01358C                     u8594:
  4029  01358C  2E3E               	decfsz	(btemp+11)^0,f,c
  4030  01358E  D7FB               	goto	u8595
  4031  013590  A03B               	btfss	(btemp+8)^0,0,c
  4032  013592  D064               	goto	l8732
  4033  013594                     u8600:
  4034                           
  4035                           ;daq.c: 103:    return((float) get_raw_result(chan) * 1.25/2.0) / 1000.0;
  4036  013594  0E00               	movlw	0
  4037  013596  6EE6               	movwf	postinc1,c
  4038  013598  0E00               	movlw	0
  4039  01359A  6EE6               	movwf	postinc1,c
  4040  01359C  0E7A               	movlw	122
  4041  01359E  6EE6               	movwf	postinc1,c
  4042  0135A0  0E44               	movlw	68
  4043  0135A2  6EE6               	movwf	postinc1,c
  4044  0135A4  0E00               	movlw	0
  4045  0135A6  6EE6               	movwf	postinc1,c
  4046  0135A8  0E00               	movlw	0
  4047  0135AA  6EE6               	movwf	postinc1,c
  4048  0135AC  0E00               	movlw	0
  4049  0135AE  6EE6               	movwf	postinc1,c
  4050  0135B0  0E40               	movlw	64
  4051  0135B2  6EE6               	movwf	postinc1,c
  4052  0135B4  0E00               	movlw	0
  4053  0135B6  6EE6               	movwf	postinc1,c
  4054  0135B8  0E00               	movlw	0
  4055  0135BA  6EE6               	movwf	postinc1,c
  4056  0135BC  0EA0               	movlw	160
  4057  0135BE  6EE6               	movwf	postinc1,c
  4058  0135C0  0E3F               	movlw	63
  4059  0135C2  6EE6               	movwf	postinc1,c
  4060                           
  4061                           ;stkvar	_chan @ sp[(-12)+-1]
  4062  0135C4  0EF3               	movlw	-13
  4063  0135C6  50E3               	movf	plusw1,w,c
  4064  0135C8  6EE6               	movwf	postinc1,c
  4065  0135CA  EC99  F0C6         	call	_get_raw_result	;wreg free
  4066  0135CE  0060  F0CC  F03D   	movff	btemp,btemp+10
  4067  0135D4  0060  F0D0  F03E   	movff	btemp+1,btemp+11
  4068  0135DA  503D               	movf	(btemp+10)^0,w,c
  4069  0135DC  6E37               	movwf	(btemp+4)^0,c
  4070  0135DE  503E               	movf	(btemp+11)^0,w,c
  4071  0135E0  6E38               	movwf	(btemp+5)^0,c
  4072  0135E2  6A39               	clrf	(btemp+6)^0,c
  4073  0135E4  6A3A               	clrf	(btemp+7)^0,c
  4074  0135E6  0060  F0DF  FFE6   	movff	btemp+4,postinc1
  4075  0135EC  0060  F0E3  FFE6   	movff	btemp+5,postinc1
  4076  0135F2  0060  F0E7  FFE6   	movff	btemp+6,postinc1
  4077  0135F8  0060  F0EB  FFE6   	movff	btemp+7,postinc1
  4078  0135FE  0E00               	movlw	0
  4079  013600  6EE6               	movwf	postinc1,c
  4080  013602  EC61  F0B0         	call	___xxtofl	;wreg free
  4081  013606  0060  F0CF  FFE6   	movff	btemp,postinc1
  4082  01360C  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  4083  013612  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  4084  013618  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  4085  01361E  ECF8  F090         	call	___flmul	;wreg free
  4086  013622  0060  F0CF  FFE6   	movff	btemp,postinc1
  4087  013628  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  4088  01362E  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  4089  013634  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  4090  01363A  ECAE  F09B         	call	___fldiv	;wreg free
  4091  01363E  0060  F0CF  FFE6   	movff	btemp,postinc1
  4092  013644  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  4093  01364A  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  4094  013650  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  4095  013656  ECAE  F09B         	call	___fldiv	;wreg free
  4096  01365A  D07D               	goto	l1650
  4097  01365C                     l8732:
  4098                           
  4099                           ;daq.c: 105:   return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  4100  01365C  0E00               	movlw	0
  4101  01365E  6EE6               	movwf	postinc1,c
  4102  013660  0E00               	movlw	0
  4103  013662  6EE6               	movwf	postinc1,c
  4104  013664  0E7A               	movlw	122
  4105  013666  6EE6               	movwf	postinc1,c
  4106  013668  0E44               	movlw	68
  4107  01366A  6EE6               	movwf	postinc1,c
  4108  01366C  0E00               	movlw	0
  4109  01366E  6EE6               	movwf	postinc1,c
  4110  013670  0E00               	movlw	0
  4111  013672  6EE6               	movwf	postinc1,c
  4112  013674  0E00               	movlw	0
  4113  013676  6EE6               	movwf	postinc1,c
  4114  013678  0E40               	movlw	64
  4115  01367A  6EE6               	movwf	postinc1,c
  4116  01367C  0E61               	movlw	97
  4117  01367E  6EE6               	movwf	postinc1,c
  4118  013680  0E03               	movlw	3
  4119  013682  6EE6               	movwf	postinc1,c
  4120  013684  0E04               	movlw	4
  4121  013686  6EE6               	movwf	postinc1,c
  4122  013688  0E41               	movlw	65
  4123  01368A  6EE6               	movwf	postinc1,c
  4124                           
  4125                           ;stkvar	_chan @ sp[(-12)+-1]
  4126  01368C  0EF3               	movlw	-13
  4127  01368E  50E3               	movf	plusw1,w,c
  4128  013690  6EE6               	movwf	postinc1,c
  4129  013692  EC99  F0C6         	call	_get_raw_result	;wreg free
  4130  013696  0060  F0CC  F03D   	movff	btemp,btemp+10
  4131  01369C  0060  F0D0  F03E   	movff	btemp+1,btemp+11
  4132  0136A2  503D               	movf	(btemp+10)^0,w,c
  4133  0136A4  6E37               	movwf	(btemp+4)^0,c
  4134  0136A6  503E               	movf	(btemp+11)^0,w,c
  4135  0136A8  6E38               	movwf	(btemp+5)^0,c
  4136  0136AA  6A39               	clrf	(btemp+6)^0,c
  4137  0136AC  6A3A               	clrf	(btemp+7)^0,c
  4138  0136AE  0060  F0DF  FFE6   	movff	btemp+4,postinc1
  4139  0136B4  0060  F0E3  FFE6   	movff	btemp+5,postinc1
  4140  0136BA  0060  F0E7  FFE6   	movff	btemp+6,postinc1
  4141  0136C0  0060  F0EB  FFE6   	movff	btemp+7,postinc1
  4142  0136C6  0E00               	movlw	0
  4143  0136C8  6EE6               	movwf	postinc1,c
  4144  0136CA  EC61  F0B0         	call	___xxtofl	;wreg free
  4145  0136CE  0060  F0CF  FFE6   	movff	btemp,postinc1
  4146  0136D4  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  4147  0136DA  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  4148  0136E0  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  4149  0136E6  ECF8  F090         	call	___flmul	;wreg free
  4150  0136EA  0060  F0CF  FFE6   	movff	btemp,postinc1
  4151  0136F0  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  4152  0136F6  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  4153  0136FC  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  4154  013702  ECAE  F09B         	call	___fldiv	;wreg free
  4155  013706  0060  F0CF  FFE6   	movff	btemp,postinc1
  4156  01370C  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  4157  013712  0060  F0D7  FFE6   	movff	btemp+2,postinc1
  4158  013718  0060  F0DB  FFE6   	movff	btemp+3,postinc1
  4159  01371E  ECAE  F09B         	call	___fldiv	;wreg free
  4160  013722  D019               	goto	l1650
  4161  013724                     l8738:
  4162                           
  4163                           ;daq.c: 108:   return 0.0;
  4164  013724  0E00               	movlw	0
  4165  013726  6E33               	movwf	btemp^0,c
  4166  013728  0E00               	movlw	0
  4167  01372A  6E34               	movwf	(btemp+1)^0,c
  4168  01372C  0E00               	movlw	0
  4169  01372E  6E35               	movwf	(btemp+2)^0,c
  4170  013730  0E00               	movlw	0
  4171  013732                     L2:
  4172  013732  6E36               	movwf	(btemp+3)^0,c
  4173  013734  D010               	goto	l1650
  4174  013736                     l8746:
  4175                           
  4176                           ;stkvar	_to_what @ sp[(0)+-2]
  4177  013736  0EFE               	movlw	-2
  4178  013738  50E3               	movf	plusw1,w,c
  4179  01373A  6E3D               	movwf	(btemp+10)^0,c
  4180  01373C  6A3E               	clrf	(btemp+11)^0,c
  4181                           
  4182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4183                           ; Switch size 1, requested type "simple"
  4184                           ; Number of cases is 1, Range of values is 0 to 0
  4185                           ; switch strategies available:
  4186                           ; Name         Instructions Cycles
  4187                           ; simple_byte            4     3 (average)
  4188                           ;	Chosen strategy is simple_byte
  4189  01373E  503E               	movf	(btemp+11)^0,w,c
  4190  013740  0A00               	xorlw	0	; case 0
  4191  013742  A4D8               	btfss	status,2,c
  4192  013744  D7EF               	goto	l8738
  4193                           
  4194                           ; Switch size 1, requested type "simple"
  4195                           ; Number of cases is 2, Range of values is 0 to 1
  4196                           ; switch strategies available:
  4197                           ; Name         Instructions Cycles
  4198                           ; simple_byte            7     4 (average)
  4199                           ;	Chosen strategy is simple_byte
  4200  013746  503D               	movf	(btemp+10)^0,w,c
  4201  013748  0A00               	xorlw	0	; case 0
  4202  01374A  B4D8               	btfsc	status,2,c
  4203  01374C  D55C               	goto	l8698
  4204  01374E  0A01               	xorlw	1	; case 1
  4205  013750  B4D8               	btfsc	status,2,c
  4206  013752  D6FE               	goto	l8724
  4207  013754  D7E7               	goto	l8738
  4208  013756                     l1650:
  4209                           
  4210                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4211  013756  52E5               	movf	postdec1,f,c
  4212  013758  52E5               	movf	postdec1,f,c
  4213  01375A  0012               	return		;funcret
  4214  01375C                     __end_of_conv_raw_result:
  4215                           	opt callstack 0
  4216                           
  4217 ;; *************** function _nanf *****************
  4218 ;; Defined at:
  4219 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  s               2  [STACK] PTR const unsigned char 
  4222 ;;		 -> STR_33(1), 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  u               4  [STACK] struct .
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  4  [STACK] float 
  4227 ;; Registers used:
  4228 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/39
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4238 ;;Total ram usage:        0 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    6
  4241 ;; This function calls:
  4242 ;;		Nothing
  4243 ;; This function is called by:
  4244 ;;		_conv_raw_result
  4245 ;; This function uses a reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text15
  4249  0180F6                     __ptext15:
  4250                           	opt callstack 0
  4251  0180F6                     _nanf:
  4252                           	opt callstack 0
  4253                           
  4254                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4255  0180F6  52E6               	movf	postinc1,f,c
  4256  0180F8  52E6               	movf	postinc1,f,c
  4257  0180FA  52E6               	movf	postinc1,f,c
  4258  0180FC  52E6               	movf	postinc1,f,c
  4259                           
  4260                           ;incstack = 0
  4261  0180FE  0EFF               	movlw	255
  4262  018100  6E3B               	movwf	(btemp+8)^0,c
  4263  018102  0EFF               	movlw	255
  4264  018104  6E3C               	movwf	(btemp+9)^0,c
  4265  018106  0EFF               	movlw	255
  4266  018108  6E3D               	movwf	(btemp+10)^0,c
  4267  01810A  0E7F               	movlw	127
  4268  01810C  6E3E               	movwf	(btemp+11)^0,c
  4269                           
  4270                           ;stkvar	_u @ sp[(-4)+0]
  4271  01810E  0EFC               	movlw	-4
  4272  018110  0060  F0EF  FFE3   	movff	btemp+8,plusw1
  4273  018116  0EFD               	movlw	-3
  4274  018118  0060  F0F3  FFE3   	movff	btemp+9,plusw1
  4275  01811E  0EFE               	movlw	-2
  4276  018120  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  4277  018126  0EFF               	movlw	-1
  4278  018128  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  4279                           
  4280                           ;stkvar	_u @ sp[(-4)+0]
  4281  01812E  0EFC               	movlw	-4
  4282  018130  006F FF8C  F033    	movff	plusw1,btemp
  4283  018136  0EFD               	movlw	-3
  4284  018138  006F FF8C  F034    	movff	plusw1,btemp+1
  4285  01813E  0EFE               	movlw	-2
  4286  018140  006F FF8C  F035    	movff	plusw1,btemp+2
  4287  018146  0EFF               	movlw	-1
  4288  018148  006F FF8C  F036    	movff	plusw1,btemp+3
  4289                           
  4290                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4291  01814E  0EFA               	movlw	250
  4292  018150  26E1               	addwf	fsr1l,f,c
  4293  018152  0EFF               	movlw	255
  4294  018154  22E2               	addwfc	fsr1h,f,c
  4295  018156  0012               	return		;funcret
  4296  018158                     __end_of_nanf:
  4297                           	opt callstack 0
  4298                           
  4299 ;; *************** function _get_raw_result *****************
  4300 ;; Defined at:
  4301 ;;		line 72 in file "daq.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  index           1  [STACK] const enum E16136
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  2  [STACK] unsigned short 
  4308 ;; Registers used:
  4309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/39
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    6
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_main
  4326 ;;		_conv_raw_result
  4327 ;; This function uses a reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text16
  4331  018D32                     __ptext16:
  4332                           	opt callstack 0
  4333  018D32                     _get_raw_result:
  4334                           	opt callstack 24
  4335                           
  4336                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4337                           ;stkvar	_index @ sp[(0)+-1]
  4338                           
  4339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4340                           ;incstack = 0
  4341  018D32  0EFF               	movlw	-1
  4342  018D34  50E3               	movf	plusw1,w,c
  4343  018D36  0D02               	mullw	2
  4344  018D38  50F3               	movf	243,w,c
  4345  018D3A  0FA5               	addlw	low _R
  4346  018D3C  6ED9               	movwf	fsr2l,c
  4347  018D3E  6ADA               	clrf	fsr2h,c
  4348  018D40  006F FF78  F033    	movff	postinc2,btemp
  4349  018D46  006F FF74  F034    	movff	postdec2,btemp+1
  4350                           
  4351                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4352  018D4C  52E5               	movf	postdec1,f,c
  4353  018D4E  0012               	return		;funcret
  4354  018D50                     __end_of_get_raw_result:
  4355                           	opt callstack 0
  4356                           
  4357 ;; *************** function ___xxtofl *****************
  4358 ;; Defined at:
  4359 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  sign            1  [STACK] unsigned char 
  4362 ;;  val             4  [STACK] long 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  arg             4  [STACK] unsigned long 
  4365 ;;  exp             1  [STACK] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  4  [STACK] unsigned char 
  4368 ;; Registers used:
  4369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/39
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4379 ;;Total ram usage:        0 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    6
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_conv_raw_result
  4386 ;; This function uses a reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text17
  4390  0160C2                     __ptext17:
  4391                           	opt callstack 0
  4392  0160C2                     ___xxtofl:
  4393                           	opt callstack 0
  4394                           
  4395                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4396  0160C2  0E05               	movlw	5
  4397  0160C4  26E1               	addwf	fsr1l,f,c
  4398  0160C6  0E00               	movlw	0
  4399  0160C8  22E2               	addwfc	fsr1h,f,c
  4400                           
  4401                           ;stkvar	_sign @ sp[(-5)+-1]
  4402                           
  4403                           ;incstack = 0
  4404  0160CA  0EFA               	movlw	-6
  4405  0160CC  50E3               	movf	plusw1,w,c
  4406  0160CE  B4D8               	btfsc	status,2,c
  4407  0160D0  D01D               	goto	l8172
  4408                           
  4409                           ;stkvar	_val @ sp[(-5)+-5]
  4410  0160D2  0EF9               	movlw	-7
  4411  0160D4  AEE3               	btfss	plusw1,7,c
  4412  0160D6  D01A               	goto	l8172
  4413                           
  4414                           ;stkvar	_val @ sp[(-5)+-5]
  4415  0160D8  0EF6               	movlw	-10
  4416  0160DA  006F FF8C  F03B    	movff	plusw1,btemp+8
  4417  0160E0  0EF7               	movlw	-9
  4418  0160E2  006F FF8C  F03C    	movff	plusw1,btemp+9
  4419  0160E8  0EF8               	movlw	-8
  4420  0160EA  006F FF8C  F03D    	movff	plusw1,btemp+10
  4421  0160F0  0EF9               	movlw	-7
  4422  0160F2  006F FF8C  F03E    	movff	plusw1,btemp+11
  4423  0160F8  1E3B               	comf	(btemp+8)^0,f,c
  4424  0160FA  1E3C               	comf	(btemp+9)^0,f,c
  4425  0160FC  1E3D               	comf	(btemp+10)^0,f,c
  4426  0160FE  1E3E               	comf	(btemp+11)^0,f,c
  4427  016100  2A3B               	incf	(btemp+8)^0,f,c
  4428  016102  0E00               	movlw	0
  4429  016104  223C               	addwfc	(btemp+9)^0,f,c
  4430  016106  223D               	addwfc	(btemp+10)^0,f,c
  4431  016108  223E               	addwfc	(btemp+11)^0,f,c
  4432  01610A  D010               	goto	L3
  4433  01610C                     l8172:
  4434                           
  4435                           ;stkvar	_val @ sp[(-5)+-5]
  4436  01610C  0EF6               	movlw	-10
  4437  01610E  006F FF8C  F03B    	movff	plusw1,btemp+8
  4438  016114  0EF7               	movlw	-9
  4439  016116  006F FF8C  F03C    	movff	plusw1,btemp+9
  4440  01611C  0EF8               	movlw	-8
  4441  01611E  006F FF8C  F03D    	movff	plusw1,btemp+10
  4442  016124  0EF9               	movlw	-7
  4443  016126  006F FF8C  F03E    	movff	plusw1,btemp+11
  4444  01612C                     L3:
  4445                           
  4446                           ;stkvar	_arg @ sp[(-5)+0]
  4447  01612C  0EFB               	movlw	-5
  4448  01612E  0060  F0EF  FFE3   	movff	btemp+8,plusw1
  4449  016134  0EFC               	movlw	-4
  4450  016136  0060  F0F3  FFE3   	movff	btemp+9,plusw1
  4451  01613C  0EFD               	movlw	-3
  4452  01613E  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  4453  016144  0EFE               	movlw	-2
  4454  016146  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  4455                           
  4456                           ;stkvar	_val @ sp[(-5)+-5]
  4457  01614C  0EF6               	movlw	-10
  4458  01614E  50E3               	movf	plusw1,w,c
  4459  016150  E113               	bnz	l8180
  4460  016152  0EF7               	movlw	-9
  4461  016154  50E3               	movf	plusw1,w,c
  4462  016156  E110               	bnz	l8180
  4463  016158  0EF8               	movlw	-8
  4464  01615A  50E3               	movf	plusw1,w,c
  4465  01615C  E10D               	bnz	l8180
  4466  01615E  0EF9               	movlw	-7
  4467  016160  50E3               	movf	plusw1,w,c
  4468  016162  A4D8               	btfss	status,2,c
  4469  016164  D009               	goto	l8180
  4470  016166  0E00               	movlw	0
  4471  016168  6E33               	movwf	btemp^0,c
  4472  01616A  0E00               	movlw	0
  4473  01616C  6E34               	movwf	(btemp+1)^0,c
  4474  01616E  0E00               	movlw	0
  4475  016170  6E35               	movwf	(btemp+2)^0,c
  4476  016172  0E00               	movlw	0
  4477  016174  6E36               	movwf	(btemp+3)^0,c
  4478  016176  D0A2               	goto	l2683
  4479  016178                     l8180:
  4480  016178  0E96               	movlw	150
  4481  01617A  6E3E               	movwf	(btemp+11)^0,c
  4482                           
  4483                           ;stkvar	_exp @ sp[(-5)+4]
  4484  01617C  0EFF               	movlw	-1
  4485  01617E  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  4486  016184  D00B               	goto	l8184
  4487  016186                     l8182:
  4488                           
  4489                           ;stkvar	_exp @ sp[(-5)+4]
  4490  016186  0EFF               	movlw	-1
  4491  016188  2AE3               	incf	plusw1,f,c
  4492                           
  4493                           ;stkvar	_arg @ sp[(-5)+0]
  4494  01618A  90D8               	bcf	status,0,c
  4495  01618C  0EFE               	movlw	-2
  4496  01618E  32E3               	rrcf	plusw1,f,c
  4497  016190  0EFD               	movlw	-3
  4498  016192  32E3               	rrcf	plusw1,f,c
  4499  016194  0EFC               	movlw	-4
  4500  016196  32E3               	rrcf	plusw1,f,c
  4501  016198  0EFB               	movlw	-5
  4502  01619A  32E3               	rrcf	plusw1,f,c
  4503  01619C                     l8184:
  4504                           
  4505                           ;stkvar	_arg @ sp[(-5)+0]
  4506  01619C  50E1               	movf	fsr1l,w,c
  4507  01619E  0FFB               	addlw	-5
  4508  0161A0  6ED9               	movwf	fsr2l,c
  4509  0161A2  50E2               	movf	fsr1h,w,c
  4510  0161A4  6EDA               	movwf	fsr2h,c
  4511  0161A6  0EFF               	movlw	255
  4512  0161A8  22DA               	addwfc	fsr2h,f,c
  4513  0161AA  52DE               	movf	postinc2,f,c
  4514  0161AC  52DE               	movf	postinc2,f,c
  4515  0161AE  52DE               	movf	postinc2,f,c
  4516  0161B0  0EFE               	movlw	254
  4517  0161B2  14DD               	andwf	postdec2,w,c
  4518  0161B4  B4D8               	btfsc	status,2,c
  4519  0161B6  D018               	goto	l8192
  4520  0161B8  D7E6               	goto	l8182
  4521  0161BA                     l8186:
  4522                           
  4523                           ;stkvar	_exp @ sp[(-5)+4]
  4524  0161BA  0EFF               	movlw	-1
  4525  0161BC  2AE3               	incf	plusw1,f,c
  4526                           
  4527                           ;stkvar	_arg @ sp[(-5)+0]
  4528  0161BE  50E1               	movf	fsr1l,w,c
  4529  0161C0  0FFB               	addlw	-5
  4530  0161C2  6ED9               	movwf	fsr2l,c
  4531  0161C4  50E2               	movf	fsr1h,w,c
  4532  0161C6  6EDA               	movwf	fsr2h,c
  4533  0161C8  0EFF               	movlw	255
  4534  0161CA  22DA               	addwfc	fsr2h,f,c
  4535  0161CC  2ADE               	incf	postinc2,f,c
  4536  0161CE  0E00               	movlw	0
  4537  0161D0  22DE               	addwfc	postinc2,f,c
  4538  0161D2  22DE               	addwfc	postinc2,f,c
  4539  0161D4  22DE               	addwfc	postinc2,f,c
  4540                           
  4541                           ;stkvar	_arg @ sp[(-5)+0]
  4542  0161D6  90D8               	bcf	status,0,c
  4543  0161D8  0EFE               	movlw	-2
  4544  0161DA  32E3               	rrcf	plusw1,f,c
  4545  0161DC  0EFD               	movlw	-3
  4546  0161DE  32E3               	rrcf	plusw1,f,c
  4547  0161E0  0EFC               	movlw	-4
  4548  0161E2  32E3               	rrcf	plusw1,f,c
  4549  0161E4  0EFB               	movlw	-5
  4550  0161E6  32E3               	rrcf	plusw1,f,c
  4551  0161E8                     l8192:
  4552                           
  4553                           ;stkvar	_arg @ sp[(-5)+0]
  4554  0161E8  50E1               	movf	fsr1l,w,c
  4555  0161EA  0FFB               	addlw	-5
  4556  0161EC  6ED9               	movwf	fsr2l,c
  4557  0161EE  50E2               	movf	fsr1h,w,c
  4558  0161F0  6EDA               	movwf	fsr2h,c
  4559  0161F2  0EFF               	movlw	255
  4560  0161F4  22DA               	addwfc	fsr2h,f,c
  4561  0161F6  52DE               	movf	postinc2,f,c
  4562  0161F8  52DE               	movf	postinc2,f,c
  4563  0161FA  52DE               	movf	postinc2,f,c
  4564  0161FC  0EFF               	movlw	255
  4565  0161FE  14DD               	andwf	postdec2,w,c
  4566  016200  B4D8               	btfsc	status,2,c
  4567  016202  D00C               	goto	l8196
  4568  016204  D7DA               	goto	l8186
  4569  016206                     l8194:
  4570                           
  4571                           ;stkvar	_exp @ sp[(-5)+4]
  4572  016206  0EFF               	movlw	-1
  4573  016208  06E3               	decf	plusw1,f,c
  4574                           
  4575                           ;stkvar	_arg @ sp[(-5)+0]
  4576  01620A  90D8               	bcf	status,0,c
  4577  01620C  0EFB               	movlw	-5
  4578  01620E  36E3               	rlcf	plusw1,f,c
  4579  016210  0EFC               	movlw	-4
  4580  016212  36E3               	rlcf	plusw1,f,c
  4581  016214  0EFD               	movlw	-3
  4582  016216  36E3               	rlcf	plusw1,f,c
  4583  016218  0EFE               	movlw	-2
  4584  01621A  36E3               	rlcf	plusw1,f,c
  4585  01621C                     l8196:
  4586                           
  4587                           ;stkvar	_arg @ sp[(-5)+0]
  4588  01621C  0EFD               	movlw	-3
  4589  01621E  BEE3               	btfsc	plusw1,7,c
  4590  016220  D007               	goto	u8320
  4591                           
  4592                           ;stkvar	_exp @ sp[(-5)+4]
  4593  016222  0EFF               	movlw	-1
  4594  016224  006F FF8C  F033    	movff	plusw1,btemp
  4595  01622A  0E02               	movlw	2
  4596  01622C  6033               	cpfslt	btemp^0,c
  4597  01622E  D7EB               	goto	l8194
  4598  016230                     u8320:
  4599                           
  4600                           ;stkvar	_exp @ sp[(-5)+4]
  4601  016230  0EFF               	movlw	-1
  4602  016232  B0E3               	btfsc	plusw1,0,c
  4603  016234  D002               	goto	l8204
  4604                           
  4605                           ;stkvar	_arg @ sp[(-5)+0]
  4606  016236  0EFD               	movlw	-3
  4607  016238  9EE3               	bcf	plusw1,7,c
  4608  01623A                     l8204:
  4609                           
  4610                           ;stkvar	_exp @ sp[(-5)+4]
  4611  01623A  50E1               	movf	fsr1l,w,c
  4612  01623C  0FFF               	addlw	-1
  4613  01623E  6ED9               	movwf	fsr2l,c
  4614  016240  50E2               	movf	fsr1h,w,c
  4615  016242  6EDA               	movwf	fsr2h,c
  4616  016244  0EFF               	movlw	255
  4617  016246  22DA               	addwfc	fsr2h,f,c
  4618  016248  90D8               	bcf	status,0,c
  4619  01624A  32DF               	rrcf	indf2,f,c
  4620                           
  4621                           ;stkvar	_exp @ sp[(-5)+4]
  4622  01624C  0EFF               	movlw	-1
  4623  01624E  006F FF8C  F03E    	movff	plusw1,btemp+11
  4624  016254  0060  F0F8  F037   	movff	btemp+11,btemp+4
  4625  01625A  6A38               	clrf	(btemp+5)^0,c
  4626  01625C  6A39               	clrf	(btemp+6)^0,c
  4627  01625E  6A3A               	clrf	(btemp+7)^0,c
  4628  016260  0060  F0DC  F03A   	movff	btemp+4,btemp+7
  4629  016266  6A39               	clrf	(btemp+6)^0,c
  4630  016268  6A38               	clrf	(btemp+5)^0,c
  4631  01626A  6A37               	clrf	(btemp+4)^0,c
  4632                           
  4633                           ;stkvar	_arg @ sp[(-5)+0]
  4634  01626C  50E1               	movf	fsr1l,w,c
  4635  01626E  0FFB               	addlw	-5
  4636  016270  6ED9               	movwf	fsr2l,c
  4637  016272  50E2               	movf	fsr1h,w,c
  4638  016274  6EDA               	movwf	fsr2h,c
  4639  016276  0EFF               	movlw	255
  4640  016278  22DA               	addwfc	fsr2h,f,c
  4641  01627A  5037               	movf	(btemp+4)^0,w,c
  4642  01627C  12DE               	iorwf	postinc2,f,c
  4643  01627E  5038               	movf	(btemp+5)^0,w,c
  4644  016280  12DE               	iorwf	postinc2,f,c
  4645  016282  5039               	movf	(btemp+6)^0,w,c
  4646  016284  12DE               	iorwf	postinc2,f,c
  4647  016286  503A               	movf	(btemp+7)^0,w,c
  4648  016288  12DE               	iorwf	postinc2,f,c
  4649                           
  4650                           ;stkvar	_sign @ sp[(-5)+-1]
  4651  01628A  0EFA               	movlw	-6
  4652  01628C  50E3               	movf	plusw1,w,c
  4653  01628E  B4D8               	btfsc	status,2,c
  4654  016290  D005               	goto	l8214
  4655                           
  4656                           ;stkvar	_val @ sp[(-5)+-5]
  4657  016292  0EF9               	movlw	-7
  4658  016294  AEE3               	btfss	plusw1,7,c
  4659  016296  D002               	goto	l8214
  4660                           
  4661                           ;stkvar	_arg @ sp[(-5)+0]
  4662  016298  0EFE               	movlw	-2
  4663  01629A  8EE3               	bsf	plusw1,7,c
  4664  01629C                     l8214:
  4665                           
  4666                           ;stkvar	_arg @ sp[(-5)+0]
  4667  01629C  0EFB               	movlw	-5
  4668  01629E  006F FF8C  F033    	movff	plusw1,btemp
  4669  0162A4  0EFC               	movlw	-4
  4670  0162A6  006F FF8C  F034    	movff	plusw1,btemp+1
  4671  0162AC  0EFD               	movlw	-3
  4672  0162AE  006F FF8C  F035    	movff	plusw1,btemp+2
  4673  0162B4  0EFE               	movlw	-2
  4674  0162B6  006F FF8C  F036    	movff	plusw1,btemp+3
  4675  0162BC                     l2683:
  4676                           
  4677                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4678  0162BC  0EF6               	movlw	246
  4679  0162BE  26E1               	addwf	fsr1l,f,c
  4680  0162C0  0EFF               	movlw	255
  4681  0162C2  22E2               	addwfc	fsr1h,f,c
  4682  0162C4  0012               	return		;funcret
  4683  0162C6                     __end_of___xxtofl:
  4684                           	opt callstack 0
  4685                           
  4686 ;; *************** function _clear_adc_scan *****************
  4687 ;; Defined at:
  4688 ;;		line 64 in file "daq.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;		None
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1  [STACK] void 
  4695 ;; Registers used:
  4696 ;;		None
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/39
  4699 ;;		On exit  : 3F/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4706 ;;Total ram usage:        0 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    6
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_main
  4713 ;; This function uses a reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text18
  4717  018F6A                     __ptext18:
  4718                           	opt callstack 0
  4719  018F6A                     _clear_adc_scan:
  4720                           	opt callstack 24
  4721                           
  4722                           ;daq.c: 66:  R.done = 0;
  4723                           
  4724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4725                           ;incstack = 0
  4726  018F6A  0100               	movlb	0	; () banked
  4727  018F6C  6BCC               	clrf	(_R+39)& (0+255),b	;volatile
  4728                           
  4729                           ; BSR set to: 0
  4730                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4731  018F6E  0012               	return		;funcret
  4732  018F70                     __end_of_clear_adc_scan:
  4733                           	opt callstack 0
  4734                           
  4735 ;; *************** function _check_help *****************
  4736 ;; Defined at:
  4737 ;;		line 40 in file "mconfig.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  flipper         1  [STACK] const _Bool 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1  [STACK] void 
  4744 ;; Registers used:
  4745 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4746 ;; Tracked objects:
  4747 ;;		On entry : 3F/1
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4755 ;;Total ram usage:        0 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:   18
  4758 ;; This function calls:
  4759 ;;		_StartTimer
  4760 ;;		_TimerDone
  4761 ;;		_display_help
  4762 ;;		_display_info
  4763 ;;		_get_vterm_ptr
  4764 ;;		_help_button
  4765 ;;		_mode_lamp_bright
  4766 ;;		_mode_lamp_dim
  4767 ;;		_set_display_info
  4768 ;;		_set_temp_display_help
  4769 ;;		_set_vterm
  4770 ;;		_sprintf
  4771 ;;		_update_lcd
  4772 ;;		_vterm_dump
  4773 ;; This function is called by:
  4774 ;;		_main
  4775 ;; This function uses a reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text19
  4779  015EB0                     __ptext19:
  4780                           	opt callstack 0
  4781  015EB0                     _check_help:
  4782                           	opt callstack 12
  4783                           
  4784                           ;mconfig.c: 40: void check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if
      +                           (help_button() && display_info() != DIS_HELP) {
  4785                           
  4786                           ; BSR set to: 0
  4787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4788                           ;incstack = 0
  4789  015EB0  EC7C  F0C3         	call	_help_button	;wreg free
  4790  015EB4  5033               	movf	btemp^0,w,c
  4791  015EB6  B4D8               	btfsc	status,2,c
  4792  015EB8  D0D0               	goto	l10330
  4793  015EBA  ECA5  F0C7         	call	_display_info	;wreg free
  4794  015EBE  0433               	decf	btemp^0,w,c
  4795  015EC0  B4D8               	btfsc	status,2,c
  4796  015EC2  D0CB               	goto	l10330
  4797                           
  4798                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4799  015EC4  0EDC               	movlw	220
  4800  015EC6  6EE6               	movwf	postinc1,c
  4801  015EC8  0E05               	movlw	5
  4802  015ECA  6EE6               	movwf	postinc1,c
  4803  015ECC  0E0B               	movlw	11
  4804  015ECE  6EE6               	movwf	postinc1,c
  4805  015ED0  EC5E  F0C3         	call	_StartTimer	;wreg free
  4806                           
  4807                           ;mconfig.c: 47:   if (V.debug)
  4808  015ED4  0101               	movlb	1	; () banked
  4809  015ED6  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4810                           
  4811                           ; BSR set to: 1
  4812                           ;mconfig.c: 48:    vterm_dump();
  4813  015ED8  EC7F  F0B6         	call	_vterm_dump	;wreg free
  4814                           
  4815                           ;mconfig.c: 50:   set_vterm(1);
  4816  015EDC  0E01               	movlw	1
  4817  015EDE  6EE6               	movwf	postinc1,c
  4818  015EE0  ECE3  F0C6         	call	_set_vterm	;wreg free
  4819                           
  4820                           ; BSR set to: 5
  4821                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4822  015EE4  ECA5  F0C7         	call	_display_info	;wreg free
  4823  015EE8  5033               	movf	btemp^0,w,c
  4824  015EEA  6EE6               	movwf	postinc1,c
  4825  015EEC  EC65  F0C7         	call	_set_temp_display_help	;wreg free
  4826                           
  4827                           ; BSR set to: 1
  4828                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4829  015EF0  0E01               	movlw	1
  4830  015EF2  6EE6               	movwf	postinc1,c
  4831  015EF4  ECA8  F0C6         	call	_set_display_info	;wreg free
  4832                           
  4833                           ;mconfig.c: 53:   if (flipper) {
  4834                           ;stkvar	_flipper @ sp[(0)+-1]
  4835  015EF8  0EFF               	movlw	-1
  4836  015EFA  50E3               	movf	plusw1,w,c
  4837  015EFC  B4D8               	btfsc	status,2,c
  4838  015EFE  D019               	goto	l10318
  4839                           
  4840                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4841  015F00  0EB3               	movlw	low STR_15
  4842  015F02  6EE6               	movwf	postinc1,c
  4843  015F04  0EFF               	movlw	high STR_15
  4844  015F06  6EE6               	movwf	postinc1,c
  4845  015F08  0E0C               	movlw	low STR_17
  4846  015F0A  6EE6               	movwf	postinc1,c
  4847  015F0C  0EFF               	movlw	high STR_17
  4848  015F0E  6EE6               	movwf	postinc1,c
  4849  015F10  0E01               	movlw	1
  4850  015F12  6EE6               	movwf	postinc1,c
  4851  015F14  0E00               	movlw	0
  4852  015F16  6EE6               	movwf	postinc1,c
  4853  015F18  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  4854  015F1C  0060  F0CF  FFE6   	movff	btemp,postinc1
  4855  015F22  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  4856  015F28  0E06               	movlw	6
  4857  015F2A  6EE6               	movwf	postinc1,c
  4858  015F2C  EC45  F0B9         	call	_sprintf	;wreg free
  4859                           
  4860                           ;mconfig.c: 55:   } else {
  4861  015F30  D018               	goto	l1556
  4862  015F32                     l10318:
  4863                           
  4864                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4865  015F32  0EC9               	movlw	low STR_16
  4866  015F34  6EE6               	movwf	postinc1,c
  4867  015F36  0EFF               	movlw	high STR_16
  4868  015F38  6EE6               	movwf	postinc1,c
  4869  015F3A  0E0C               	movlw	low STR_17
  4870  015F3C  6EE6               	movwf	postinc1,c
  4871  015F3E  0EFF               	movlw	high STR_17
  4872  015F40  6EE6               	movwf	postinc1,c
  4873  015F42  0E01               	movlw	1
  4874  015F44  6EE6               	movwf	postinc1,c
  4875  015F46  0E00               	movlw	0
  4876  015F48  6EE6               	movwf	postinc1,c
  4877  015F4A  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  4878  015F4E  0060  F0CF  FFE6   	movff	btemp,postinc1
  4879  015F54  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  4880  015F5A  0E06               	movlw	6
  4881  015F5C  6EE6               	movwf	postinc1,c
  4882  015F5E  EC45  F0B9         	call	_sprintf	;wreg free
  4883  015F62                     l1556:
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4887  015F62  0101               	movlb	1	; () banked
  4888  015F64  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4889  015F66  32E8               	rrcf	wreg,f,c
  4890  015F68  32E8               	rrcf	wreg,f,c
  4891  015F6A  0B03               	andlw	3
  4892  015F6C  0D24               	mullw	36
  4893  015F6E  0E12               	movlw	18
  4894  015F70  26F3               	addwf	243,f,c
  4895  015F72  0E00               	movlw	0
  4896  015F74  22F4               	addwfc	244,f,c
  4897  015F76  0E51               	movlw	low _T
  4898  015F78  6E3D               	movwf	(btemp+10)^0,c
  4899  015F7A  0EFE               	movlw	high _T
  4900  015F7C  6E3E               	movwf	(btemp+11)^0,c
  4901  015F7E  50F3               	movf	243,w,c
  4902  015F80  263D               	addwf	(btemp+10)^0,f,c
  4903  015F82  50F4               	movf	244,w,c
  4904  015F84  223E               	addwfc	(btemp+11)^0,f,c
  4905  015F86  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  4906  015F8C  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  4907  015F92  0EBF               	movlw	low STR_19
  4908  015F94  6EE6               	movwf	postinc1,c
  4909  015F96  0EFF               	movlw	high STR_19
  4910  015F98  6EE6               	movwf	postinc1,c
  4911  015F9A  0E01               	movlw	1
  4912  015F9C  6EE6               	movwf	postinc1,c
  4913  015F9E  0E01               	movlw	1
  4914  015FA0  6EE6               	movwf	postinc1,c
  4915  015FA2  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  4916  015FA6  0060  F0CF  FFE6   	movff	btemp,postinc1
  4917  015FAC  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  4918  015FB2  0E06               	movlw	6
  4919  015FB4  6EE6               	movwf	postinc1,c
  4920  015FB6  EC45  F0B9         	call	_sprintf	;wreg free
  4921                           
  4922                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4923  015FBA  0101               	movlb	1	; () banked
  4924  015FBC  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4925  015FBE  32E8               	rrcf	wreg,f,c
  4926  015FC0  32E8               	rrcf	wreg,f,c
  4927  015FC2  0B03               	andlw	3
  4928  015FC4  0D24               	mullw	36
  4929  015FC6  0E51               	movlw	low _T
  4930  015FC8  6E3D               	movwf	(btemp+10)^0,c
  4931  015FCA  0EFE               	movlw	high _T
  4932  015FCC  6E3E               	movwf	(btemp+11)^0,c
  4933  015FCE  50F3               	movf	243,w,c
  4934  015FD0  263D               	addwf	(btemp+10)^0,f,c
  4935  015FD2  50F4               	movf	244,w,c
  4936  015FD4  223E               	addwfc	(btemp+11)^0,f,c
  4937  015FD6  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  4938  015FDC  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  4939  015FE2  0EBF               	movlw	low STR_19
  4940  015FE4  6EE6               	movwf	postinc1,c
  4941  015FE6  0EFF               	movlw	high STR_19
  4942  015FE8  6EE6               	movwf	postinc1,c
  4943  015FEA  0E01               	movlw	1
  4944  015FEC  6EE6               	movwf	postinc1,c
  4945  015FEE  0E02               	movlw	2
  4946  015FF0  6EE6               	movwf	postinc1,c
  4947  015FF2  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  4948  015FF6  0060  F0CF  FFE6   	movff	btemp,postinc1
  4949  015FFC  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  4950  016002  0E06               	movlw	6
  4951  016004  6EE6               	movwf	postinc1,c
  4952  016006  EC45  F0B9         	call	_sprintf	;wreg free
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;mconfig.c: 60:   V.help_id++;
  4956  01600A  EE20  F19B         	lfsr	2,_V+155	;volatile
  4957  01600E  38DF               	swapf	223,w,c
  4958  016010  6E3E               	movwf	(btemp+11)^0,c
  4959  016012  323E               	rrcf	(btemp+11)^0,f,c
  4960  016014  303E               	rrcf	(btemp+11)^0,w,c
  4961  016016  0B03               	andlw	3
  4962  016018  6E3E               	movwf	(btemp+11)^0,c
  4963  01601A  2A3E               	incf	(btemp+11)^0,f,c
  4964  01601C  3A3E               	swapf	(btemp+11)^0,f,c
  4965  01601E  363E               	rlcf	(btemp+11)^0,f,c
  4966  016020  363E               	rlcf	(btemp+11)^0,f,c
  4967  016022  50DF               	movf	223,w,c
  4968  016024  183E               	xorwf	(btemp+11)^0,w,c
  4969  016026  0B3F               	andlw	-193
  4970  016028  183E               	xorwf	(btemp+11)^0,w,c
  4971  01602A  6EDF               	movwf	223,c
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  4975  01602C  0EB8               	movlw	184
  4976  01602E  6EE6               	movwf	postinc1,c
  4977  016030  0E0B               	movlw	11
  4978  016032  6EE6               	movwf	postinc1,c
  4979  016034  0E09               	movlw	9
  4980  016036  6EE6               	movwf	postinc1,c
  4981  016038  EC5E  F0C3         	call	_StartTimer	;wreg free
  4982                           
  4983                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  4984  01603C  0EB8               	movlw	184
  4985  01603E  6EE6               	movwf	postinc1,c
  4986  016040  0E0B               	movlw	11
  4987  016042  6EE6               	movwf	postinc1,c
  4988  016044  0E07               	movlw	7
  4989  016046  6EE6               	movwf	postinc1,c
  4990  016048  EC5E  F0C3         	call	_StartTimer	;wreg free
  4991                           
  4992                           ;mconfig.c: 63:   mode_lamp_bright();
  4993  01604C  EC74  F0C7         	call	_mode_lamp_bright	;wreg free
  4994                           
  4995                           ;mconfig.c: 64:   update_lcd(1);
  4996  016050  0E01               	movlw	1
  4997  016052  6EE6               	movwf	postinc1,c
  4998  016054  ECBE  F0B8         	call	_update_lcd	;wreg free
  4999                           
  5000                           ;mconfig.c: 65:  } else {
  5001  016058  D032               	goto	l1560
  5002  01605A                     l10330:
  5003                           
  5004                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  5005  01605A  0E09               	movlw	9
  5006  01605C  6EE6               	movwf	postinc1,c
  5007  01605E  EC33  F0C6         	call	_TimerDone	;wreg free
  5008  016062  5033               	movf	btemp^0,w,c
  5009  016064  B4D8               	btfsc	status,2,c
  5010  016066  D02B               	goto	l1560
  5011                           
  5012                           ;mconfig.c: 67:    set_vterm(0);
  5013  016068  0E00               	movlw	0
  5014  01606A  6EE6               	movwf	postinc1,c
  5015  01606C  ECE3  F0C6         	call	_set_vterm	;wreg free
  5016                           
  5017                           ; BSR set to: 5
  5018                           ;mconfig.c: 68:    V.help = 0;
  5019  016070  0101               	movlb	1	; () banked
  5020  016072  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  5021                           
  5022                           ; BSR set to: 1
  5023                           ;mconfig.c: 69:    set_display_info(display_help());
  5024  016074  ECA9  F0C7         	call	_display_help	;wreg free
  5025  016078  5033               	movf	btemp^0,w,c
  5026  01607A  6EE6               	movwf	postinc1,c
  5027  01607C  ECA8  F0C6         	call	_set_display_info	;wreg free
  5028                           
  5029                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  5030  016080  0060  F657  FFE6   	movff	_V+149,postinc1
  5031  016086  0060  F65B  FFE6   	movff	_V+150,postinc1
  5032  01608C  EC19  F0C7         	call	_mode_lamp_dim	;wreg free
  5033                           
  5034                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  5035  016090  0E0B               	movlw	11
  5036  016092  6EE6               	movwf	postinc1,c
  5037  016094  EC33  F0C6         	call	_TimerDone	;wreg free
  5038  016098  5033               	movf	btemp^0,w,c
  5039  01609A  B4D8               	btfsc	status,2,c
  5040  01609C  D010               	goto	l1560
  5041                           
  5042                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  5043  01609E  0101               	movlb	1	; () banked
  5044  0160A0  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5045  0160A2  A4D8               	btfss	status,2,c
  5046  0160A4  D002               	goto	u10720
  5047  0160A6  0E01               	movlw	1
  5048  0160A8  D001               	goto	u10730
  5049  0160AA                     u10720:
  5050  0160AA  0E00               	movlw	0
  5051  0160AC                     u10730:
  5052  0160AC  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5053                           
  5054                           ; BSR set to: 1
  5055                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  5056  0160AE  0EDC               	movlw	220
  5057  0160B0  6EE6               	movwf	postinc1,c
  5058  0160B2  0E05               	movlw	5
  5059  0160B4  6EE6               	movwf	postinc1,c
  5060  0160B6  0E0B               	movlw	11
  5061  0160B8  6EE6               	movwf	postinc1,c
  5062  0160BA  EC5E  F0C3         	call	_StartTimer	;wreg free
  5063  0160BE                     l1560:
  5064                           
  5065                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5066  0160BE  52E5               	movf	postdec1,f,c
  5067  0160C0  0012               	return		;funcret
  5068  0160C2                     __end_of_check_help:
  5069                           	opt callstack 0
  5070                           
  5071 ;; *************** function _vterm_dump *****************
  5072 ;; Defined at:
  5073 ;;		line 118 in file "mconfig.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;		None
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1  [STACK] void 
  5080 ;; Registers used:
  5081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5082 ;; Tracked objects:
  5083 ;;		On entry : 3F/1
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5091 ;;Total ram usage:        0 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:   17
  5094 ;; This function calls:
  5095 ;;		_WaitMs
  5096 ;;		_eaDogM_WriteStringAtPos
  5097 ;;		_get_vterm_ptr
  5098 ;;		_sprintf
  5099 ;;		_wait_lcd_done
  5100 ;; This function is called by:
  5101 ;;		_check_help
  5102 ;; This function uses a reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text20
  5106  016CFE                     __ptext20:
  5107                           	opt callstack 0
  5108  016CFE                     _vterm_dump:
  5109                           	opt callstack 12
  5110                           
  5111                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5112                           
  5113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5114                           ;incstack = 0
  5115  016CFE  0E01               	movlw	1
  5116  016D00  6EE6               	movwf	postinc1,c
  5117  016D02  0E00               	movlw	0
  5118  016D04  6EE6               	movwf	postinc1,c
  5119  016D06  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  5120  016D0A  0060  F0CF  FFE6   	movff	btemp,postinc1
  5121  016D10  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  5122  016D16  0E00               	movlw	0
  5123  016D18  6EE6               	movwf	postinc1,c
  5124  016D1A  0E00               	movlw	0
  5125  016D1C  6EE6               	movwf	postinc1,c
  5126  016D1E  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  5127  016D22  0060  F0CF  FFE6   	movff	btemp,postinc1
  5128  016D28  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  5129  016D2E  0E88               	movlw	low STR_21
  5130  016D30  6EE6               	movwf	postinc1,c
  5131  016D32  0EFF               	movlw	high STR_21
  5132  016D34  6EE6               	movwf	postinc1,c
  5133  016D36  0E01               	movlw	low (_V+1)
  5134  016D38  6EE6               	movwf	postinc1,c
  5135  016D3A  0E01               	movlw	high (_V+1)
  5136  016D3C  6EE6               	movwf	postinc1,c
  5137  016D3E  0E08               	movlw	8
  5138  016D40  6EE6               	movwf	postinc1,c
  5139  016D42  EC45  F0B9         	call	_sprintf	;wreg free
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;mconfig.c: 121:  wait_lcd_done();
  5143  016D46  ECD5  F0C6         	call	_wait_lcd_done	;wreg free
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5147  016D4A  0E01               	movlw	low (_V+1)
  5148  016D4C  6EE6               	movwf	postinc1,c
  5149  016D4E  0E01               	movlw	high (_V+1)
  5150  016D50  6EE6               	movwf	postinc1,c
  5151  016D52  0E00               	movlw	0
  5152  016D54  6EE6               	movwf	postinc1,c
  5153  016D56  0E00               	movlw	0
  5154  016D58  6EE6               	movwf	postinc1,c
  5155  016D5A  ECB3  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5156                           
  5157                           ; BSR set to: 59
  5158                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5159  016D5E  0E01               	movlw	1
  5160  016D60  6EE6               	movwf	postinc1,c
  5161  016D62  0E01               	movlw	1
  5162  016D64  6EE6               	movwf	postinc1,c
  5163  016D66  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  5164  016D6A  0060  F0CF  FFE6   	movff	btemp,postinc1
  5165  016D70  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  5166  016D76  0E00               	movlw	0
  5167  016D78  6EE6               	movwf	postinc1,c
  5168  016D7A  0E01               	movlw	1
  5169  016D7C  6EE6               	movwf	postinc1,c
  5170  016D7E  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  5171  016D82  0060  F0CF  FFE6   	movff	btemp,postinc1
  5172  016D88  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  5173  016D8E  0E88               	movlw	low STR_21
  5174  016D90  6EE6               	movwf	postinc1,c
  5175  016D92  0EFF               	movlw	high STR_21
  5176  016D94  6EE6               	movwf	postinc1,c
  5177  016D96  0E01               	movlw	low (_V+1)
  5178  016D98  6EE6               	movwf	postinc1,c
  5179  016D9A  0E01               	movlw	high (_V+1)
  5180  016D9C  6EE6               	movwf	postinc1,c
  5181  016D9E  0E08               	movlw	8
  5182  016DA0  6EE6               	movwf	postinc1,c
  5183  016DA2  EC45  F0B9         	call	_sprintf	;wreg free
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;mconfig.c: 124:  wait_lcd_done();
  5187  016DA6  ECD5  F0C6         	call	_wait_lcd_done	;wreg free
  5188                           
  5189                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5190  016DAA  0E01               	movlw	low (_V+1)
  5191  016DAC  6EE6               	movwf	postinc1,c
  5192  016DAE  0E01               	movlw	high (_V+1)
  5193  016DB0  6EE6               	movwf	postinc1,c
  5194  016DB2  0E00               	movlw	0
  5195  016DB4  6EE6               	movwf	postinc1,c
  5196  016DB6  0E01               	movlw	1
  5197  016DB8  6EE6               	movwf	postinc1,c
  5198  016DBA  ECB3  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5199                           
  5200                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5201  016DBE  0E01               	movlw	1
  5202  016DC0  6EE6               	movwf	postinc1,c
  5203  016DC2  0E02               	movlw	2
  5204  016DC4  6EE6               	movwf	postinc1,c
  5205  016DC6  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  5206  016DCA  0060  F0CF  FFE6   	movff	btemp,postinc1
  5207  016DD0  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  5208  016DD6  0E00               	movlw	0
  5209  016DD8  6EE6               	movwf	postinc1,c
  5210  016DDA  0E02               	movlw	2
  5211  016DDC  6EE6               	movwf	postinc1,c
  5212  016DDE  EC4A  F0C4         	call	_get_vterm_ptr	;wreg free
  5213  016DE2  0060  F0CF  FFE6   	movff	btemp,postinc1
  5214  016DE8  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  5215  016DEE  0E88               	movlw	low STR_21
  5216  016DF0  6EE6               	movwf	postinc1,c
  5217  016DF2  0EFF               	movlw	high STR_21
  5218  016DF4  6EE6               	movwf	postinc1,c
  5219  016DF6  0E01               	movlw	low (_V+1)
  5220  016DF8  6EE6               	movwf	postinc1,c
  5221  016DFA  0E01               	movlw	high (_V+1)
  5222  016DFC  6EE6               	movwf	postinc1,c
  5223  016DFE  0E08               	movlw	8
  5224  016E00  6EE6               	movwf	postinc1,c
  5225  016E02  EC45  F0B9         	call	_sprintf	;wreg free
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;mconfig.c: 127:  wait_lcd_done();
  5229  016E06  ECD5  F0C6         	call	_wait_lcd_done	;wreg free
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5233  016E0A  0E01               	movlw	low (_V+1)
  5234  016E0C  6EE6               	movwf	postinc1,c
  5235  016E0E  0E01               	movlw	high (_V+1)
  5236  016E10  6EE6               	movwf	postinc1,c
  5237  016E12  0E00               	movlw	0
  5238  016E14  6EE6               	movwf	postinc1,c
  5239  016E16  0E02               	movlw	2
  5240  016E18  6EE6               	movwf	postinc1,c
  5241  016E1A  ECB3  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5242                           
  5243                           ; BSR set to: 59
  5244                           ;mconfig.c: 129:  WaitMs(3000);
  5245  016E1E  0EB8               	movlw	184
  5246  016E20  6EE6               	movwf	postinc1,c
  5247  016E22  0E0B               	movlw	11
  5248  016E24  6EE6               	movwf	postinc1,c
  5249  016E26  EC98  F0C3         	call	_WaitMs	;wreg free
  5250                           
  5251                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5252  016E2A  0012               	return		;funcret
  5253  016E2C                     __end_of_vterm_dump:
  5254                           	opt callstack 0
  5255                           
  5256 ;; *************** function _sprintf *****************
  5257 ;; Defined at:
  5258 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  s               2  [STACK] PTR unsigned char 
  5261 ;;		 -> D.lcd(216), D(218), V(203), 
  5262 ;;  fmt             2  [STACK] PTR const unsigned char 
  5263 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5264 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5265 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5266 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5267 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
  5268 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5269 ;;		 -> STR_1(17), 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;  f               6  [STACK] struct _IO_FILE
  5272 ;;  ap              2  [STACK] PTR void [1]
  5273 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5274 ;;  ret             2    0        int 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  2  [STACK] int 
  5277 ;; Registers used:
  5278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/5
  5281 ;;		On exit  : 3F/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5288 ;;Total ram usage:        0 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:   14
  5291 ;; This function calls:
  5292 ;;		_vfprintf
  5293 ;; This function is called by:
  5294 ;;		_main
  5295 ;;		_check_help
  5296 ;;		_vterm_dump
  5297 ;; This function uses a reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text21
  5301  01728A                     __ptext21:
  5302                           	opt callstack 0
  5303  01728A                     _sprintf:
  5304                           	opt callstack 0
  5305                           
  5306                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5307  01728A  0E08               	movlw	8
  5308  01728C  26E1               	addwf	fsr1l,f,c
  5309  01728E  0E00               	movlw	0
  5310  017290  22E2               	addwfc	fsr1h,f,c
  5311                           
  5312                           ;incstack = 0
  5313  017292  0EFE               	movlw	254
  5314  017294  6E3D               	movwf	(btemp+10)^0,c
  5315  017296  0EFF               	movlw	255
  5316  017298  6E3E               	movwf	(btemp+11)^0,c
  5317                           
  5318                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5319  01729A  0EF5               	movlw	245
  5320  01729C  24E1               	addwf	fsr1l,w,c
  5321  01729E  6E3B               	movwf	(btemp+8)^0,c
  5322  0172A0  0EFF               	movlw	255
  5323  0172A2  20E2               	addwfc	fsr1h,w,c
  5324  0172A4  6E3C               	movwf	(btemp+9)^0,c
  5325  0172A6  503D               	movf	(btemp+10)^0,w,c
  5326  0172A8  263B               	addwf	(btemp+8)^0,f,c
  5327  0172AA  503E               	movf	(btemp+11)^0,w,c
  5328  0172AC  223C               	addwfc	(btemp+9)^0,f,c
  5329                           
  5330                           ;stkvar	_ap @ sp[(-8)+6]
  5331  0172AE  0EFF               	movlw	-1
  5332  0172B0  0060  F0F3  FFE3   	movff	btemp+9,plusw1
  5333  0172B6  0EFE               	movlw	-2
  5334  0172B8  0060  F0EF  FFE3   	movff	btemp+8,plusw1
  5335                           
  5336                           ;stkvar	_s @ sp[(-8)+-3]
  5337  0172BE  0EF5               	movlw	-11
  5338  0172C0  006F FF8C  F03D    	movff	plusw1,btemp+10
  5339  0172C6  0EF6               	movlw	-10
  5340  0172C8  006F FF8C  F03E    	movff	plusw1,btemp+11
  5341                           
  5342                           ;stkvar	_f @ sp[(-8)+0]
  5343  0172CE  0EF9               	movlw	-7
  5344  0172D0  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  5345  0172D6  0EF8               	movlw	-8
  5346  0172D8  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  5347                           
  5348                           ;stkvar	_f @ sp[(-8)+0]
  5349  0172DE  0EFA               	movlw	250
  5350  0172E0  24E1               	addwf	fsr1l,w,c
  5351  0172E2  6ED9               	movwf	fsr2l,c
  5352  0172E4  0EFF               	movlw	255
  5353  0172E6  20E2               	addwfc	fsr1h,w,c
  5354  0172E8  6EDA               	movwf	fsr2h,c
  5355  0172EA  0E00               	movlw	0
  5356  0172EC  6EDE               	movwf	postinc2,c
  5357  0172EE  0E00               	movlw	0
  5358  0172F0  6EDD               	movwf	postdec2,c
  5359                           
  5360                           ;stkvar	_f @ sp[(-8)+0]
  5361  0172F2  0EFC               	movlw	252
  5362  0172F4  24E1               	addwf	fsr1l,w,c
  5363  0172F6  6ED9               	movwf	fsr2l,c
  5364  0172F8  0EFF               	movlw	255
  5365  0172FA  20E2               	addwfc	fsr1h,w,c
  5366  0172FC  6EDA               	movwf	fsr2h,c
  5367  0172FE  0E00               	movlw	0
  5368  017300  6EDE               	movwf	postinc2,c
  5369  017302  0E00               	movlw	0
  5370  017304  6EDD               	movwf	postdec2,c
  5371                           
  5372                           ;stkvar	_ap @ sp[(-8)+6]
  5373  017306  0EFE               	movlw	254
  5374  017308  24E1               	addwf	fsr1l,w,c
  5375  01730A  6E33               	movwf	btemp^0,c
  5376  01730C  0EFF               	movlw	255
  5377  01730E  20E2               	addwfc	fsr1h,w,c
  5378  017310  6E34               	movwf	(btemp+1)^0,c
  5379  017312  0060  F0CF  FFE6   	movff	btemp,postinc1
  5380  017318  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  5381                           
  5382                           ;stkvar	_fmt @ sp[(-10)+-5]
  5383  01731E  0EF1               	movlw	-15
  5384  017320  006F FF8F FFE6     	movff	plusw1,postinc1
  5385  017326  006F FF8F FFE6     	movff	plusw1,postinc1
  5386                           
  5387                           ;stkvar	_f @ sp[(-12)+0]
  5388  01732C  0EF4               	movlw	244
  5389  01732E  24E1               	addwf	fsr1l,w,c
  5390  017330  6E33               	movwf	btemp^0,c
  5391  017332  0EFF               	movlw	255
  5392  017334  20E2               	addwfc	fsr1h,w,c
  5393  017336  6E34               	movwf	(btemp+1)^0,c
  5394  017338  0060  F0CF  FFE6   	movff	btemp,postinc1
  5395  01733E  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  5396  017344  ECD4  F0BB         	call	_vfprintf	;wreg free
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;stkvar	_f @ sp[(-8)+0]
  5400  017348  0EFA               	movlw	250
  5401  01734A  24E1               	addwf	fsr1l,w,c
  5402  01734C  6ED9               	movwf	fsr2l,c
  5403  01734E  0EFF               	movlw	255
  5404  017350  20E2               	addwfc	fsr1h,w,c
  5405  017352  6EDA               	movwf	fsr2h,c
  5406  017354  006F FF78  F03D    	movff	postinc2,btemp+10
  5407  01735A  006F FF74  F03E    	movff	postdec2,btemp+11
  5408                           
  5409                           ;stkvar	_s @ sp[(-8)+-3]
  5410  017360  0EF5               	movlw	-11
  5411  017362  006F FF8C  F03B    	movff	plusw1,btemp+8
  5412  017368  0EF6               	movlw	-10
  5413  01736A  006F FF8C  F03C    	movff	plusw1,btemp+9
  5414  017370  503D               	movf	(btemp+10)^0,w,c
  5415  017372  243B               	addwf	(btemp+8)^0,w,c
  5416  017374  6ED9               	movwf	fsr2l,c
  5417  017376  503E               	movf	(btemp+11)^0,w,c
  5418  017378  203C               	addwfc	(btemp+9)^0,w,c
  5419  01737A  6EDA               	movwf	fsr2h,c
  5420  01737C  0E00               	movlw	0
  5421  01737E  6EDF               	movwf	indf2,c
  5422                           
  5423                           ; BSR set to: 0
  5424                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, args
      +                          ize = 4, vargsize = 0
  5425  017380  0EF8               	movlw	248
  5426  017382  26E1               	addwf	fsr1l,f,c
  5427  017384  0EFF               	movlw	255
  5428  017386  22E2               	addwfc	fsr1h,f,c
  5429  017388  52E5               	movf	postdec1,f,c
  5430  01738A  50E7               	movf	indf1,w,c
  5431  01738C  5EE1               	subwf	fsr1l,f,c
  5432  01738E  0E00               	movlw	0
  5433  017390  5AE2               	subwfb	fsr1h,f,c
  5434  017392  0012               	return		;funcret
  5435  017394                     __end_of_sprintf:
  5436                           	opt callstack 0
  5437                           
  5438 ;; *************** function _get_vterm_ptr *****************
  5439 ;; Defined at:
  5440 ;;		line 113 in file "mconfig.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  line            1  [STACK] const unsigned char 
  5443 ;;  vterm           1  [STACK] const unsigned char 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;		None
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  2  [STACK] PTR unsigned char 
  5448 ;; Registers used:
  5449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/5
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5459 ;;Total ram usage:        0 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:    6
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_main
  5466 ;;		_check_help
  5467 ;;		_vterm_dump
  5468 ;; This function uses a reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text22
  5472  018894                     __ptext22:
  5473                           	opt callstack 0
  5474  018894                     _get_vterm_ptr:
  5475                           	opt callstack 24
  5476                           
  5477                           ;mconfig.c: 113: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 114: {;mconfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5478                           ;stkvar	_vterm @ sp[(0)+-2]
  5479                           
  5480                           ; BSR set to: 0
  5481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5482                           ;incstack = 0
  5483  018894  0EFE               	movlw	-2
  5484  018896  50E3               	movf	plusw1,w,c
  5485  018898  0B03               	andlw	3
  5486  01889A  0D36               	mullw	54
  5487  01889C  0E00               	movlw	low _D
  5488  01889E  6E33               	movwf	btemp^0,c
  5489  0188A0  0E05               	movlw	high _D
  5490  0188A2  6E34               	movwf	(btemp+1)^0,c
  5491  0188A4  50F3               	movf	243,w,c
  5492  0188A6  2633               	addwf	btemp^0,f,c
  5493  0188A8  50F4               	movf	244,w,c
  5494  0188AA  2234               	addwfc	(btemp+1)^0,f,c
  5495                           
  5496                           ;stkvar	_line @ sp[(0)+-1]
  5497  0188AC  0EFF               	movlw	-1
  5498  0188AE  50E3               	movf	plusw1,w,c
  5499  0188B0  0B03               	andlw	3
  5500  0188B2  0D12               	mullw	18
  5501  0188B4  50F3               	movf	243,w,c
  5502  0188B6  2633               	addwf	btemp^0,f,c
  5503  0188B8  50F4               	movf	244,w,c
  5504  0188BA  2234               	addwfc	(btemp+1)^0,f,c
  5505                           
  5506                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5507  0188BC  52E5               	movf	postdec1,f,c
  5508  0188BE  52E5               	movf	postdec1,f,c
  5509  0188C0  0012               	return		;funcret
  5510  0188C2                     __end_of_get_vterm_ptr:
  5511                           	opt callstack 0
  5512                           
  5513 ;; *************** function _WaitMs *****************
  5514 ;; Defined at:
  5515 ;;		line 32 in file "timers.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  numMilliseco    2  [STACK] const unsigned short 
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1  [STACK] void 
  5522 ;; Registers used:
  5523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5524 ;; Tracked objects:
  5525 ;;		On entry : 1/1
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5533 ;;Total ram usage:        0 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; Hardware stack levels required when called:    7
  5536 ;; This function calls:
  5537 ;;		_StartTimer
  5538 ;;		_TimerDone
  5539 ;; This function is called by:
  5540 ;;		_main
  5541 ;;		_vterm_dump
  5542 ;; This function uses a reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text23
  5546  018730                     __ptext23:
  5547                           	opt callstack 0
  5548  018730                     _WaitMs:
  5549                           	opt callstack 21
  5550                           
  5551                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5552                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5553                           
  5554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5555                           ;incstack = 0
  5556  018730  0EFE               	movlw	-2
  5557  018732  006F FF8F FFE6     	movff	plusw1,postinc1
  5558  018738  006F FF8F FFE6     	movff	plusw1,postinc1
  5559  01873E  0E00               	movlw	0
  5560  018740  6EE6               	movwf	postinc1,c
  5561  018742  EC5E  F0C3         	call	_StartTimer	;wreg free
  5562                           
  5563                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5564  018746  D005               	goto	l8134
  5565  018748                     l1486:
  5566                           
  5567                           ;timers.c: 36:   __nop();
  5568  018748  F000               	nop	
  5569                           
  5570                           ;timers.c: 37:   __nop();
  5571  01874A  F000               	nop	
  5572                           
  5573                           ;timers.c: 38:   __nop();
  5574  01874C  F000               	nop	
  5575                           
  5576                           ;timers.c: 39:   __nop();
  5577  01874E  F000               	nop	
  5578  018750  0004               	clrwdt		;# 
  5579  018752                     l8134:
  5580                           
  5581                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5582  018752  0E00               	movlw	0
  5583  018754  6EE6               	movwf	postinc1,c
  5584  018756  EC33  F0C6         	call	_TimerDone	;wreg free
  5585  01875A  5033               	movf	btemp^0,w,c
  5586  01875C  B4D8               	btfsc	status,2,c
  5587  01875E  D7F4               	goto	l1486
  5588                           
  5589                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5590  018760  52E5               	movf	postdec1,f,c
  5591  018762  52E5               	movf	postdec1,f,c
  5592  018764  0012               	return		;funcret
  5593  018766                     __end_of_WaitMs:
  5594                           	opt callstack 0
  5595                           
  5596 ;; *************** function _update_lcd *****************
  5597 ;; Defined at:
  5598 ;;		line 82 in file "mconfig.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;  vterm           1  [STACK] unsigned char 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;		None
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  1  [STACK] unsigned char 
  5605 ;; Registers used:
  5606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 1/1
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5616 ;;Total ram usage:        0 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:   17
  5619 ;; This function calls:
  5620 ;;		_eaDogM_WriteStringAtPos
  5621 ;;		_wait_lcd_done
  5622 ;; This function is called by:
  5623 ;;		_main
  5624 ;;		_check_help
  5625 ;; This function uses a reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text24
  5629  01717C                     __ptext24:
  5630                           	opt callstack 0
  5631  01717C                     _update_lcd:
  5632                           	opt callstack 13
  5633                           
  5634                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5635                           ;stkvar	_vterm @ sp[(0)+-1]
  5636                           
  5637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5638                           ;incstack = 0
  5639  01717C  0EFF               	movlw	-1
  5640  01717E  006F FF8C  F033    	movff	plusw1,btemp
  5641  017184  0E03               	movlw	3
  5642  017186  1633               	andwf	btemp^0,f,c
  5643  017188  0EFF               	movlw	-1
  5644  01718A  0060  F0CF  FFE3   	movff	btemp,plusw1
  5645                           
  5646                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5647  017190  0105               	movlb	5	; () banked
  5648  017192  A1D8               	btfss	(_D+216)& (0+255),0,b
  5649  017194  D004               	goto	l10202
  5650                           
  5651                           ; BSR set to: 5
  5652                           ;stkvar	_vterm @ sp[(0)+-1]
  5653  017196  0EFF               	movlw	-1
  5654  017198  50E3               	movf	plusw1,w,c
  5655  01719A  B4D8               	btfsc	status,2,c
  5656  01719C  D074               	goto	l1564
  5657  01719E                     l10202:
  5658                           
  5659                           ; BSR set to: 5
  5660                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5661                           ;stkvar	_vterm @ sp[(0)+-1]
  5662  01719E  0EFF               	movlw	-1
  5663  0171A0  50E3               	movf	plusw1,w,c
  5664  0171A2  0D36               	mullw	54
  5665  0171A4  0E10               	movlw	low (_D+16)
  5666  0171A6  24F3               	addwf	243,w,c
  5667  0171A8  6ED9               	movwf	fsr2l,c
  5668  0171AA  0E05               	movlw	high (_D+16)
  5669  0171AC  20F4               	addwfc	prodh,w,c
  5670  0171AE  6EDA               	movwf	fsr2h,c
  5671  0171B0  0E00               	movlw	0
  5672  0171B2  6EDF               	movwf	indf2,c
  5673                           
  5674                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5675                           ;stkvar	_vterm @ sp[(0)+-1]
  5676  0171B4  0EFF               	movlw	-1
  5677  0171B6  50E3               	movf	plusw1,w,c
  5678  0171B8  0D36               	mullw	54
  5679  0171BA  0E22               	movlw	low (_D+34)
  5680  0171BC  24F3               	addwf	243,w,c
  5681  0171BE  6ED9               	movwf	fsr2l,c
  5682  0171C0  0E05               	movlw	high (_D+34)
  5683  0171C2  20F4               	addwfc	prodh,w,c
  5684  0171C4  6EDA               	movwf	fsr2h,c
  5685  0171C6  0E00               	movlw	0
  5686  0171C8  6EDF               	movwf	indf2,c
  5687                           
  5688                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5689                           ;stkvar	_vterm @ sp[(0)+-1]
  5690  0171CA  0EFF               	movlw	-1
  5691  0171CC  50E3               	movf	plusw1,w,c
  5692  0171CE  0D36               	mullw	54
  5693  0171D0  0E34               	movlw	low (_D+52)
  5694  0171D2  24F3               	addwf	243,w,c
  5695  0171D4  6ED9               	movwf	fsr2l,c
  5696  0171D6  0E05               	movlw	high (_D+52)
  5697  0171D8  20F4               	addwfc	prodh,w,c
  5698  0171DA  6EDA               	movwf	fsr2h,c
  5699  0171DC  0E00               	movlw	0
  5700  0171DE  6EDF               	movwf	indf2,c
  5701                           
  5702                           ; BSR set to: 5
  5703                           ;mconfig.c: 92:  wait_lcd_done();
  5704  0171E0  ECD5  F0C6         	call	_wait_lcd_done	;wreg free
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5708                           ;stkvar	_vterm @ sp[(0)+-1]
  5709  0171E4  0EFF               	movlw	-1
  5710  0171E6  50E3               	movf	plusw1,w,c
  5711  0171E8  0D36               	mullw	54
  5712  0171EA  0E00               	movlw	low _D
  5713  0171EC  6E3D               	movwf	(btemp+10)^0,c
  5714  0171EE  0E05               	movlw	high _D
  5715  0171F0  6E3E               	movwf	(btemp+11)^0,c
  5716  0171F2  50F3               	movf	243,w,c
  5717  0171F4  263D               	addwf	(btemp+10)^0,f,c
  5718  0171F6  50F4               	movf	244,w,c
  5719  0171F8  223E               	addwfc	(btemp+11)^0,f,c
  5720  0171FA  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  5721  017200  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  5722  017206  0E00               	movlw	0
  5723  017208  6EE6               	movwf	postinc1,c
  5724  01720A  0E00               	movlw	0
  5725  01720C  6EE6               	movwf	postinc1,c
  5726  01720E  ECB3  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5727                           
  5728                           ; BSR set to: 59
  5729                           ;mconfig.c: 94:  wait_lcd_done();
  5730  017212  ECD5  F0C6         	call	_wait_lcd_done	;wreg free
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5734                           ;stkvar	_vterm @ sp[(0)+-1]
  5735  017216  0EFF               	movlw	-1
  5736  017218  50E3               	movf	plusw1,w,c
  5737  01721A  0D36               	mullw	54
  5738  01721C  0E00               	movlw	low _D
  5739  01721E  6E3D               	movwf	(btemp+10)^0,c
  5740  017220  0E05               	movlw	high _D
  5741  017222  6E3E               	movwf	(btemp+11)^0,c
  5742  017224  0E12               	movlw	18
  5743  017226  263D               	addwf	(btemp+10)^0,f,c
  5744  017228  0E00               	movlw	0
  5745  01722A  223E               	addwfc	(btemp+11)^0,f,c
  5746  01722C  50F3               	movf	243,w,c
  5747  01722E  263D               	addwf	(btemp+10)^0,f,c
  5748  017230  50F4               	movf	244,w,c
  5749  017232  223E               	addwfc	(btemp+11)^0,f,c
  5750  017234  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  5751  01723A  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  5752  017240  0E00               	movlw	0
  5753  017242  6EE6               	movwf	postinc1,c
  5754  017244  0E01               	movlw	1
  5755  017246  6EE6               	movwf	postinc1,c
  5756  017248  ECB3  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5757                           
  5758                           ; BSR set to: 59
  5759                           ;mconfig.c: 96:  wait_lcd_done();
  5760  01724C  ECD5  F0C6         	call	_wait_lcd_done	;wreg free
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5764                           ;stkvar	_vterm @ sp[(0)+-1]
  5765  017250  0EFF               	movlw	-1
  5766  017252  50E3               	movf	plusw1,w,c
  5767  017254  0D36               	mullw	54
  5768  017256  0E00               	movlw	low _D
  5769  017258  6E3D               	movwf	(btemp+10)^0,c
  5770  01725A  0E05               	movlw	high _D
  5771  01725C  6E3E               	movwf	(btemp+11)^0,c
  5772  01725E  0E24               	movlw	36
  5773  017260  263D               	addwf	(btemp+10)^0,f,c
  5774  017262  0E00               	movlw	0
  5775  017264  223E               	addwfc	(btemp+11)^0,f,c
  5776  017266  50F3               	movf	243,w,c
  5777  017268  263D               	addwf	(btemp+10)^0,f,c
  5778  01726A  50F4               	movf	244,w,c
  5779  01726C  223E               	addwfc	(btemp+11)^0,f,c
  5780  01726E  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  5781  017274  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  5782  01727A  0E00               	movlw	0
  5783  01727C  6EE6               	movwf	postinc1,c
  5784  01727E  0E02               	movlw	2
  5785  017280  6EE6               	movwf	postinc1,c
  5786  017282  ECB3  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5787  017286                     l1564:
  5788                           
  5789                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5790  017286  52E5               	movf	postdec1,f,c
  5791  017288  0012               	return		;funcret
  5792  01728A                     __end_of_update_lcd:
  5793                           	opt callstack 0
  5794                           
  5795 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5796 ;; Defined at:
  5797 ;;		line 252 in file "eadog.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  r               1  [STACK] const unsigned char 
  5800 ;;  c               1  [STACK] const unsigned char 
  5801 ;;  strPtr          2  [STACK] PTR unsigned char 
  5802 ;;		 -> D.lcd(216), D(218), V(203), 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;		None
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  1  [STACK] void 
  5807 ;; Registers used:
  5808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5809 ;; Tracked objects:
  5810 ;;		On entry : 3F/0
  5811 ;;		On exit  : 3F/3B
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5818 ;;Total ram usage:        0 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:   16
  5821 ;; This function calls:
  5822 ;;		_eaDogM_WriteString
  5823 ;;		_send_lcd_cmd_dma
  5824 ;; This function is called by:
  5825 ;;		_update_lcd
  5826 ;;		_vterm_dump
  5827 ;; This function uses a reentrant model
  5828 ;;
  5829                           
  5830                           	psect	text25
  5831  018766                     __ptext25:
  5832                           	opt callstack 0
  5833  018766                     _eaDogM_WriteStringAtPos:
  5834                           	opt callstack 13
  5835                           
  5836                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5837                           ;stkvar	_c @ sp[(0)+-2]
  5838                           
  5839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5840                           ;incstack = 0
  5841  018766  0EFE               	movlw	-2
  5842  018768  006F FF8C  F03E    	movff	plusw1,btemp+11
  5843                           
  5844                           ;stkvar	_r @ sp[(0)+-1]
  5845  01876E  0EFF               	movlw	-1
  5846  018770  50E3               	movf	plusw1,w,c
  5847  018772  0D10               	mullw	16
  5848  018774  50F3               	movf	243,w,c
  5849  018776  243E               	addwf	(btemp+11)^0,w,c
  5850  018778  0F80               	addlw	128
  5851  01877A  6EE6               	movwf	postinc1,c
  5852  01877C  EC94  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  5853                           
  5854                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5855                           ;stkvar	_strPtr @ sp[(0)+-4]
  5856  018780  0EFC               	movlw	-4
  5857  018782  006F FF8F FFE6     	movff	plusw1,postinc1
  5858  018788  006F FF8F FFE6     	movff	plusw1,postinc1
  5859  01878E  EC7F  F0BC         	call	_eaDogM_WriteString	;wreg free
  5860                           
  5861                           ; BSR set to: 59
  5862                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5863  018792  52E5               	movf	postdec1,f,c
  5864  018794  52E5               	movf	postdec1,f,c
  5865  018796  52E5               	movf	postdec1,f,c
  5866  018798  52E5               	movf	postdec1,f,c
  5867  01879A  0012               	return		;funcret
  5868  01879C                     __end_of_eaDogM_WriteStringAtPos:
  5869                           	opt callstack 0
  5870                           
  5871 ;; *************** function _send_lcd_cmd_dma *****************
  5872 ;; Defined at:
  5873 ;;		line 205 in file "eadog.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  strPtr          1  [STACK] unsigned char 
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;		None
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1  [STACK] void 
  5880 ;; Registers used:
  5881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/3D
  5884 ;;		On exit  : 3F/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5891 ;;Total ram usage:        0 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:   15
  5894 ;; This function calls:
  5895 ;;		_printf
  5896 ;;		_ringBufS_flush
  5897 ;;		_start_lcd
  5898 ;;		_wait_lcd_done
  5899 ;;		_wait_lcd_set
  5900 ;; This function is called by:
  5901 ;;		_eaDogM_WriteCommand
  5902 ;;		_eaDogM_WriteStringAtPos
  5903 ;; This function uses a reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text26
  5907  018328                     __ptext26:
  5908                           	opt callstack 0
  5909  018328                     _send_lcd_cmd_dma:
  5910                           	opt callstack 13
  5911                           
  5912                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5913                           
  5914                           ; BSR set to: 59
  5915                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5916                           ;incstack = 0
  5917  018328  ECB8  F0C7         	call	_wait_lcd_set	;wreg free
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5921  01832C  0E00               	movlw	0
  5922  01832E  6EE6               	movwf	postinc1,c
  5923  018330  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  5924  018336  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  5925  01833C  EC6F  F0BD         	call	_ringBufS_flush	;wreg free
  5926  018340  92BC               	bcf	188,1,c	;volatile
  5927  018342  94BC               	bcf	188,2,c	;volatile
  5928                           
  5929                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5930  018344  013B               	movlb	59	; () banked
  5931  018346  9FFC               	bcf	252,7,b	;volatile
  5932                           
  5933                           ; BSR set to: 59
  5934                           ;eadog.c: 214:  DMA1SSZ = 1;
  5935  018348  0E00               	movlw	0
  5936  01834A  6FF8               	movwf	248,b	;volatile
  5937  01834C  0E01               	movlw	1
  5938  01834E  6FF7               	movwf	247,b	;volatile
  5939                           
  5940                           ; BSR set to: 59
  5941                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5942  018350  8FFC               	bsf	252,7,b	;volatile
  5943                           
  5944                           ; BSR set to: 59
  5945                           ;eadog.c: 216:  printf("%c", strPtr);
  5946                           ;stkvar	_strPtr @ sp[(0)+-1]
  5947  018352  0EFF               	movlw	-1
  5948  018354  50E3               	movf	plusw1,w,c
  5949  018356  6EE6               	movwf	postinc1,c
  5950  018358  0E00               	movlw	0
  5951  01835A  6EE6               	movwf	postinc1,c
  5952  01835C  0EF9               	movlw	low STR_13
  5953  01835E  6EE6               	movwf	postinc1,c
  5954  018360  0EFF               	movlw	high STR_13
  5955  018362  6EE6               	movwf	postinc1,c
  5956  018364  0E04               	movlw	4
  5957  018366  6EE6               	movwf	postinc1,c
  5958  018368  ECAC  F0C0         	call	_printf	;wreg free
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;eadog.c: 217:  start_lcd();
  5962  01836C  ECBB  F0C7         	call	_start_lcd	;wreg free
  5963                           
  5964                           ; BSR set to: 59
  5965                           ;eadog.c: 218:  wait_lcd_done();
  5966  018370  ECD5  F0C6         	call	_wait_lcd_done	;wreg free
  5967                           
  5968                           ; BSR set to: 0
  5969  018374  82BC               	bsf	188,1,c	;volatile
  5970                           
  5971                           ; BSR set to: 0
  5972                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5973  018376  52E5               	movf	postdec1,f,c
  5974  018378  0012               	return		;funcret
  5975  01837A                     __end_of_send_lcd_cmd_dma:
  5976                           	opt callstack 0
  5977                           
  5978 ;; *************** function _wait_lcd_done *****************
  5979 ;; Defined at:
  5980 ;;		line 141 in file "eadog.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1  [STACK] void 
  5987 ;; Registers used:
  5988 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 3F/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5998 ;;Total ram usage:        0 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    7
  6001 ;; This function calls:
  6002 ;;		_wdtdelay
  6003 ;; This function is called by:
  6004 ;;		_send_lcd_cmd_dma
  6005 ;;		_update_lcd
  6006 ;;		_vterm_dump
  6007 ;; This function uses a reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text27
  6011  018DAA                     __ptext27:
  6012                           	opt callstack 0
  6013  018DAA                     _wait_lcd_done:
  6014                           	opt callstack 22
  6015                           
  6016                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  6017                           
  6018                           ; BSR set to: 0
  6019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6020                           ;incstack = 0
  6021  018DAA  0100               	movlb	0	; () banked
  6022  018DAC  B778               	btfsc	_spi_link& (0+255),3,b	;volatile
  6023  018DAE  D7FD               	goto	_wait_lcd_done
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;eadog.c: 144:  wdtdelay(50);
  6027  018DB0  0E32               	movlw	50
  6028  018DB2  6EE6               	movwf	postinc1,c
  6029  018DB4  0E00               	movlw	0
  6030  018DB6  6EE6               	movwf	postinc1,c
  6031  018DB8  0E00               	movlw	0
  6032  018DBA  6EE6               	movwf	postinc1,c
  6033  018DBC  0E00               	movlw	0
  6034  018DBE  6EE6               	movwf	postinc1,c
  6035  018DC0  EC3A  F0C1         	call	_wdtdelay	;wreg free
  6036                           
  6037                           ; BSR set to: 0
  6038                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6039  018DC4  0012               	return		;funcret
  6040  018DC6                     __end_of_wait_lcd_done:
  6041                           	opt callstack 0
  6042                           
  6043 ;; *************** function _wdtdelay *****************
  6044 ;; Defined at:
  6045 ;;		line 22 in file "eadog.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  delay           4  [STACK] const unsigned long 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1  [STACK] void 
  6052 ;; Registers used:
  6053 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 3F/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6063 ;;Total ram usage:        0 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    6
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_init_display
  6070 ;;		_send_lcd_cmd
  6071 ;;		_send_lcd_cmd_long
  6072 ;;		_wait_lcd_done
  6073 ;; This function uses a reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text28
  6077  018274                     __ptext28:
  6078                           	opt callstack 0
  6079  018274                     _wdtdelay:
  6080                           	opt callstack 22
  6081                           
  6082                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6083                           
  6084                           ; BSR set to: 0
  6085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6086                           ;incstack = 0
  6087  018274  0100               	movlb	0	; () banked
  6088  018276  6B90               	clrf	wdtdelay@dcount& (0+255),b
  6089  018278  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6090  01827A  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6091  01827C  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6092  01827E                     l1331:
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;eadog.c: 27:   __nop();
  6096  01827E  F000               	nop	
  6097  018280  0004               	clrwdt		;# 
  6098                           
  6099                           ;eadog.c: 29:  };
  6100  018282  0E01               	movlw	1
  6101  018284  0100               	movlb	0	; () banked
  6102  018286  2790               	addwf	wdtdelay@dcount& (0+255),f,b
  6103  018288  0E00               	movlw	0
  6104  01828A  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6105  01828C  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6106  01828E  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;stkvar	_delay @ sp[(0)+-4]
  6110  018290  0EFC               	movlw	-4
  6111  018292  006F FF8C  F033    	movff	plusw1,btemp
  6112  018298  5190               	movf	wdtdelay@dcount& (0+255),w,b
  6113  01829A  5C33               	subwf	btemp^0,w,c
  6114  01829C  0EFD               	movlw	-3
  6115  01829E  006F FF8C  F033    	movff	plusw1,btemp
  6116  0182A4  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6117  0182A6  5833               	subwfb	btemp^0,w,c
  6118  0182A8  0EFE               	movlw	-2
  6119  0182AA  006F FF8C  F033    	movff	plusw1,btemp
  6120  0182B0  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6121  0182B2  5833               	subwfb	btemp^0,w,c
  6122  0182B4  0EFF               	movlw	-1
  6123  0182B6  006F FF8C  F033    	movff	plusw1,btemp
  6124  0182BC  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6125  0182BE  5833               	subwfb	btemp^0,w,c
  6126  0182C0  B0D8               	btfsc	status,0,c
  6127  0182C2  D7DD               	goto	l1331
  6128                           
  6129                           ; BSR set to: 0
  6130                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6131  0182C4  52E5               	movf	postdec1,f,c
  6132  0182C6  52E5               	movf	postdec1,f,c
  6133  0182C8  52E5               	movf	postdec1,f,c
  6134  0182CA  52E5               	movf	postdec1,f,c
  6135  0182CC  0012               	return		;funcret
  6136  0182CE                     __end_of_wdtdelay:
  6137                           	opt callstack 0
  6138                           
  6139 ;; *************** function _eaDogM_WriteString *****************
  6140 ;; Defined at:
  6141 ;;		line 184 in file "eadog.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;  strPtr          2  [STACK] PTR unsigned char 
  6144 ;;		 -> D.lcd(216), D(218), V(203), 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;		None
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1  [STACK] void 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6151 ;; Tracked objects:
  6152 ;;		On entry : 3F/0
  6153 ;;		On exit  : 3F/3B
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6160 ;;Total ram usage:        0 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:   15
  6163 ;; This function calls:
  6164 ;;		_printf
  6165 ;;		_ringBufS_flush
  6166 ;;		_start_lcd
  6167 ;;		_strlen
  6168 ;;		_wait_lcd_set
  6169 ;; This function is called by:
  6170 ;;		_eaDogM_WriteStringAtPos
  6171 ;; This function uses a reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text29
  6175  0178FE                     __ptext29:
  6176                           	opt callstack 0
  6177  0178FE                     _eaDogM_WriteString:
  6178                           	opt callstack 13
  6179                           
  6180                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6181                           
  6182                           ; BSR set to: 0
  6183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6184                           ;incstack = 0
  6185  0178FE  ECB8  F0C7         	call	_wait_lcd_set	;wreg free
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6189  017902  0E00               	movlw	0
  6190  017904  6EE6               	movwf	postinc1,c
  6191  017906  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  6192  01790C  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  6193  017912  EC6F  F0BD         	call	_ringBufS_flush	;wreg free
  6194  017916  94BC               	bcf	188,2,c	;volatile
  6195                           
  6196                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6197                           ;stkvar	_strPtr @ sp[(0)+-2]
  6198  017918  0EFE               	movlw	-2
  6199  01791A  006F FF8F FFE6     	movff	plusw1,postinc1
  6200  017920  006F FF8F FFE6     	movff	plusw1,postinc1
  6201  017926  ECD2  F0BC         	call	_strlen	;wreg free
  6202  01792A  5034               	movf	(btemp+1)^0,w,c
  6203  01792C  E104               	bnz	u10630
  6204  01792E  0E41               	movlw	65
  6205  017930  5C33               	subwf	btemp^0,w,c
  6206  017932  A0D8               	btfss	status,0,c
  6207  017934  D010               	goto	l10168
  6208  017936                     u10630:
  6209                           
  6210                           ;stkvar	_strPtr @ sp[(0)+-2]
  6211  017936  0EFE               	movlw	-2
  6212  017938  006F FF8C  F03D    	movff	plusw1,btemp+10
  6213  01793E  0EFF               	movlw	-1
  6214  017940  006F FF8C  F03E    	movff	plusw1,btemp+11
  6215  017946  0E40               	movlw	64
  6216  017948  243D               	addwf	(btemp+10)^0,w,c
  6217  01794A  6ED9               	movwf	fsr2l,c
  6218  01794C  0E00               	movlw	0
  6219  01794E  203E               	addwfc	(btemp+11)^0,w,c
  6220  017950  6EDA               	movwf	fsr2h,c
  6221  017952  0E00               	movlw	0
  6222  017954  6EDF               	movwf	indf2,c
  6223  017956                     l10168:
  6224                           
  6225                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6226  017956  013B               	movlb	59	; () banked
  6227  017958  9FFC               	bcf	252,7,b	;volatile
  6228                           
  6229                           ; BSR set to: 59
  6230                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6231                           ;stkvar	_strPtr @ sp[(0)+-2]
  6232  01795A  0EFE               	movlw	-2
  6233  01795C  006F FF8F FFE6     	movff	plusw1,postinc1
  6234  017962  006F FF8F FFE6     	movff	plusw1,postinc1
  6235  017968  ECD2  F0BC         	call	_strlen	;wreg free
  6236  01796C  0060  F0CF  FBF7   	movff	btemp,15351	;volatile
  6237  017972  0060  F0D3  FBF8   	movff	btemp+1,15352	;volatile
  6238                           
  6239                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6240  017978  013B               	movlb	59	; () banked
  6241  01797A  8FFC               	bsf	252,7,b	;volatile
  6242                           
  6243                           ; BSR set to: 59
  6244                           ;eadog.c: 195:  printf("%s", strPtr);
  6245                           ;stkvar	_strPtr @ sp[(0)+-2]
  6246  01797C  0EFE               	movlw	-2
  6247  01797E  006F FF8F FFE6     	movff	plusw1,postinc1
  6248  017984  006F FF8F FFE6     	movff	plusw1,postinc1
  6249  01798A  0EFC               	movlw	low STR_12
  6250  01798C  6EE6               	movwf	postinc1,c
  6251  01798E  0EFF               	movlw	high STR_12
  6252  017990  6EE6               	movwf	postinc1,c
  6253  017992  0E04               	movlw	4
  6254  017994  6EE6               	movwf	postinc1,c
  6255  017996  ECAC  F0C0         	call	_printf	;wreg free
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;eadog.c: 196:  start_lcd();
  6259  01799A  ECBB  F0C7         	call	_start_lcd	;wreg free
  6260                           
  6261                           ; BSR set to: 59
  6262                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6263  01799E  52E5               	movf	postdec1,f,c
  6264  0179A0  52E5               	movf	postdec1,f,c
  6265  0179A2  0012               	return		;funcret
  6266  0179A4                     __end_of_eaDogM_WriteString:
  6267                           	opt callstack 0
  6268                           
  6269 ;; *************** function _wait_lcd_set *****************
  6270 ;; Defined at:
  6271 ;;		line 131 in file "eadog.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;		None
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1  [STACK] void 
  6278 ;; Registers used:
  6279 ;;		None
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/3D
  6282 ;;		On exit  : 3F/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6289 ;;Total ram usage:        0 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    6
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_eaDogM_WriteString
  6296 ;;		_send_lcd_cmd_dma
  6297 ;; This function uses a reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text30
  6301  018F70                     __ptext30:
  6302                           	opt callstack 0
  6303  018F70                     _wait_lcd_set:
  6304                           	opt callstack 21
  6305                           
  6306                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6307                           
  6308                           ; BSR set to: 59
  6309                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6310                           ;incstack = 0
  6311  018F70  0100               	movlb	0	; () banked
  6312  018F72  8778               	bsf	_spi_link& (0+255),3,b	;volatile
  6313                           
  6314                           ; BSR set to: 0
  6315                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6316  018F74  0012               	return		;funcret
  6317  018F76                     __end_of_wait_lcd_set:
  6318                           	opt callstack 0
  6319                           
  6320 ;; *************** function _start_lcd *****************
  6321 ;; Defined at:
  6322 ;;		line 126 in file "eadog.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;		None
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;		None
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  1  [STACK] void 
  6329 ;; Registers used:
  6330 ;;		None
  6331 ;; Tracked objects:
  6332 ;;		On entry : 3F/0
  6333 ;;		On exit  : 3F/3B
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6340 ;;Total ram usage:        0 bytes
  6341 ;; Hardware stack levels used:    1
  6342 ;; Hardware stack levels required when called:    6
  6343 ;; This function calls:
  6344 ;;		Nothing
  6345 ;; This function is called by:
  6346 ;;		_eaDogM_WriteString
  6347 ;;		_send_lcd_cmd_dma
  6348 ;; This function uses a reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text31
  6352  018F76                     __ptext31:
  6353                           	opt callstack 0
  6354  018F76                     _start_lcd:
  6355                           	opt callstack 21
  6356                           
  6357                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6358                           
  6359                           ; BSR set to: 0
  6360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6361                           ;incstack = 0
  6362  018F76  013B               	movlb	59	; () banked
  6363  018F78  8DFC               	bsf	252,6,b	;volatile
  6364                           
  6365                           ; BSR set to: 59
  6366                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6367  018F7A  0012               	return		;funcret
  6368  018F7C                     __end_of_start_lcd:
  6369                           	opt callstack 0
  6370                           
  6371 ;; *************** function _ringBufS_flush *****************
  6372 ;; Defined at:
  6373 ;;		line 76 in file "ringbufs.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6376 ;;		 -> ring_buf1(67), 
  6377 ;;  clearBuffer     1  [STACK] const char 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1  [STACK] void 
  6382 ;; Registers used:
  6383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6384 ;; Tracked objects:
  6385 ;;		On entry : 3F/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6393 ;;Total ram usage:        0 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; Hardware stack levels required when called:    7
  6396 ;; This function calls:
  6397 ;;		_memset
  6398 ;; This function is called by:
  6399 ;;		_eaDogM_WriteString
  6400 ;;		_send_lcd_cmd_dma
  6401 ;; This function uses a reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text32
  6405  017ADE                     __ptext32:
  6406                           	opt callstack 0
  6407  017ADE                     _ringBufS_flush:
  6408                           	opt callstack 20
  6409                           
  6410                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6411                           ;stkvar	__this @ sp[(0)+-2]
  6412                           
  6413                           ; BSR set to: 59
  6414                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6415                           ;incstack = 0
  6416  017ADE  0EFE               	movlw	-2
  6417  017AE0  006F FF8C  F03D    	movff	plusw1,btemp+10
  6418  017AE6  0EFF               	movlw	-1
  6419  017AE8  006F FF8C  F03E    	movff	plusw1,btemp+11
  6420  017AEE  0E42               	movlw	66
  6421  017AF0  243D               	addwf	(btemp+10)^0,w,c
  6422  017AF2  6ED9               	movwf	fsr2l,c
  6423  017AF4  0E00               	movlw	0
  6424  017AF6  203E               	addwfc	(btemp+11)^0,w,c
  6425  017AF8  6EDA               	movwf	fsr2h,c
  6426  017AFA  0E00               	movlw	0
  6427  017AFC  6EDF               	movwf	indf2,c
  6428                           
  6429                           ;ringbufs.c: 79:  _this->head = 0;
  6430                           ;stkvar	__this @ sp[(0)+-2]
  6431  017AFE  0EFE               	movlw	-2
  6432  017B00  006F FF8C  F03D    	movff	plusw1,btemp+10
  6433  017B06  0EFF               	movlw	-1
  6434  017B08  006F FF8C  F03E    	movff	plusw1,btemp+11
  6435  017B0E  0E40               	movlw	64
  6436  017B10  243D               	addwf	(btemp+10)^0,w,c
  6437  017B12  6ED9               	movwf	fsr2l,c
  6438  017B14  0E00               	movlw	0
  6439  017B16  203E               	addwfc	(btemp+11)^0,w,c
  6440  017B18  6EDA               	movwf	fsr2h,c
  6441  017B1A  0E00               	movlw	0
  6442  017B1C  6EDF               	movwf	indf2,c
  6443                           
  6444                           ;ringbufs.c: 80:  _this->tail = 0;
  6445                           ;stkvar	__this @ sp[(0)+-2]
  6446  017B1E  0EFE               	movlw	-2
  6447  017B20  006F FF8C  F03D    	movff	plusw1,btemp+10
  6448  017B26  0EFF               	movlw	-1
  6449  017B28  006F FF8C  F03E    	movff	plusw1,btemp+11
  6450  017B2E  0E41               	movlw	65
  6451  017B30  243D               	addwf	(btemp+10)^0,w,c
  6452  017B32  6ED9               	movwf	fsr2l,c
  6453  017B34  0E00               	movlw	0
  6454  017B36  203E               	addwfc	(btemp+11)^0,w,c
  6455  017B38  6EDA               	movwf	fsr2h,c
  6456  017B3A  0E00               	movlw	0
  6457  017B3C  6EDF               	movwf	indf2,c
  6458                           
  6459                           ;ringbufs.c: 81:  if (clearBuffer) {
  6460                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6461  017B3E  0EFD               	movlw	-3
  6462  017B40  50E3               	movf	plusw1,w,c
  6463  017B42  B4D8               	btfsc	status,2,c
  6464  017B44  D011               	goto	l1471
  6465                           
  6466                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6467  017B46  0E40               	movlw	64
  6468  017B48  6EE6               	movwf	postinc1,c
  6469  017B4A  0E00               	movlw	0
  6470  017B4C  6EE6               	movwf	postinc1,c
  6471  017B4E  0E00               	movlw	0
  6472  017B50  6EE6               	movwf	postinc1,c
  6473  017B52  0E00               	movlw	0
  6474  017B54  6EE6               	movwf	postinc1,c
  6475                           
  6476                           ;stkvar	__this @ sp[(-4)+-2]
  6477  017B56  0EFA               	movlw	-6
  6478  017B58  006F FF8F FFE6     	movff	plusw1,postinc1
  6479  017B5E  006F FF8F FFE6     	movff	plusw1,postinc1
  6480  017B64  ECD9  F0A7         	call	_memset	;wreg free
  6481  017B68                     l1471:
  6482                           
  6483                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6484  017B68  52E5               	movf	postdec1,f,c
  6485  017B6A  52E5               	movf	postdec1,f,c
  6486  017B6C  52E5               	movf	postdec1,f,c
  6487  017B6E  0012               	return		;funcret
  6488  017B70                     __end_of_ringBufS_flush:
  6489                           	opt callstack 0
  6490                           
  6491 ;; *************** function _memset *****************
  6492 ;; Defined at:
  6493 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  dest            2  [STACK] PTR void 
  6496 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6497 ;;  c               2  [STACK] int 
  6498 ;;  n               2  [STACK] unsigned int 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  s               2  [STACK] PTR unsigned char 
  6501 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6502 ;;  k               2  [STACK] unsigned int 
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  2  [STACK] PTR void 
  6505 ;; Registers used:
  6506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6516 ;;Total ram usage:        0 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:    6
  6519 ;; This function calls:
  6520 ;;		Nothing
  6521 ;; This function is called by:
  6522 ;;		_ringBufS_init
  6523 ;;		_ringBufS_flush
  6524 ;; This function uses a reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text33
  6528  014FB2                     __ptext33:
  6529                           	opt callstack 0
  6530  014FB2                     _memset:
  6531                           	opt callstack 0
  6532                           
  6533                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6534  014FB2  52E6               	movf	postinc1,f,c
  6535  014FB4  52E6               	movf	postinc1,f,c
  6536  014FB6  52E6               	movf	postinc1,f,c
  6537  014FB8  52E6               	movf	postinc1,f,c
  6538                           
  6539                           ;stkvar	_dest @ sp[(-4)+-2]
  6540                           
  6541                           ;incstack = 0
  6542  014FBA  0EFA               	movlw	-6
  6543  014FBC  006F FF8C  F03D    	movff	plusw1,btemp+10
  6544  014FC2  0EFB               	movlw	-5
  6545  014FC4  006F FF8C  F03E    	movff	plusw1,btemp+11
  6546                           
  6547                           ;stkvar	_s @ sp[(-4)+0]
  6548  014FCA  0EFD               	movlw	-3
  6549  014FCC  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  6550  014FD2  0EFC               	movlw	-4
  6551  014FD4  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  6552                           
  6553                           ;stkvar	_n @ sp[(-4)+-6]
  6554  014FDA  0EF6               	movlw	-10
  6555  014FDC  006F FF8C  F033    	movff	plusw1,btemp
  6556  014FE2  0EF7               	movlw	-9
  6557  014FE4  50E3               	movf	plusw1,w,c
  6558  014FE6  1033               	iorwf	btemp^0,w,c
  6559  014FE8  B4D8               	btfsc	status,2,c
  6560  014FEA  D154               	goto	u10600
  6561                           
  6562                           ;stkvar	_c @ sp[(-4)+-4]
  6563                           ;stkvar	_s @ sp[(-4)+0]
  6564  014FEC  0EFC               	movlw	-4
  6565  014FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
  6566  014FF4  0EFD               	movlw	-3
  6567  014FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
  6568  014FFC  0EF8               	movlw	-8
  6569  014FFE  006F FF8F FFDF     	movff	plusw1,indf2
  6570                           
  6571                           ;stkvar	_c @ sp[(-4)+-4]
  6572                           ;stkvar	_n @ sp[(-4)+-6]
  6573                           ;stkvar	_s @ sp[(-4)+0]
  6574  015004  0EFC               	movlw	-4
  6575  015006  006F FF8C  F03D    	movff	plusw1,btemp+10
  6576  01500C  0EFD               	movlw	-3
  6577  01500E  006F FF8C  F03E    	movff	plusw1,btemp+11
  6578  015014  0EF6               	movlw	-10
  6579  015016  50E3               	movf	plusw1,w,c
  6580  015018  263D               	addwf	(btemp+10)^0,f,c
  6581  01501A  0EF7               	movlw	-9
  6582  01501C  50E3               	movf	plusw1,w,c
  6583  01501E  223E               	addwfc	(btemp+11)^0,f,c
  6584  015020  0EFF               	movlw	255
  6585  015022  243D               	addwf	(btemp+10)^0,w,c
  6586  015024  6ED9               	movwf	fsr2l,c
  6587  015026  0EFF               	movlw	255
  6588  015028  203E               	addwfc	(btemp+11)^0,w,c
  6589  01502A  6EDA               	movwf	fsr2h,c
  6590  01502C  0EF8               	movlw	-8
  6591  01502E  006F FF8F FFDF     	movff	plusw1,indf2
  6592                           
  6593                           ;stkvar	_n @ sp[(-4)+-6]
  6594  015034  0EF7               	movlw	-9
  6595  015036  50E3               	movf	plusw1,w,c
  6596  015038  E108               	bnz	l10084
  6597  01503A  0EF6               	movlw	-10
  6598  01503C  006F FF8C  F033    	movff	plusw1,btemp
  6599  015042  0E03               	movlw	3
  6600  015044  5E33               	subwf	btemp^0,f,c
  6601  015046  A0D8               	btfss	status,0,c
  6602  015048  D125               	goto	u10600
  6603  01504A                     l10084:
  6604                           
  6605                           ;stkvar	_c @ sp[(-4)+-4]
  6606                           ;stkvar	_s @ sp[(-4)+0]
  6607  01504A  0EFC               	movlw	-4
  6608  01504C  006F FF8C  F03D    	movff	plusw1,btemp+10
  6609  015052  0EFD               	movlw	-3
  6610  015054  006F FF8C  F03E    	movff	plusw1,btemp+11
  6611  01505A  0E01               	movlw	1
  6612  01505C  243D               	addwf	(btemp+10)^0,w,c
  6613  01505E  6ED9               	movwf	fsr2l,c
  6614  015060  0E00               	movlw	0
  6615  015062  203E               	addwfc	(btemp+11)^0,w,c
  6616  015064  6EDA               	movwf	fsr2h,c
  6617  015066  0EF8               	movlw	-8
  6618  015068  006F FF8F FFDF     	movff	plusw1,indf2
  6619                           
  6620                           ;stkvar	_c @ sp[(-4)+-4]
  6621                           ;stkvar	_s @ sp[(-4)+0]
  6622  01506E  0EFC               	movlw	-4
  6623  015070  006F FF8C  F03D    	movff	plusw1,btemp+10
  6624  015076  0EFD               	movlw	-3
  6625  015078  006F FF8C  F03E    	movff	plusw1,btemp+11
  6626  01507E  0E02               	movlw	2
  6627  015080  243D               	addwf	(btemp+10)^0,w,c
  6628  015082  6ED9               	movwf	fsr2l,c
  6629  015084  0E00               	movlw	0
  6630  015086  203E               	addwfc	(btemp+11)^0,w,c
  6631  015088  6EDA               	movwf	fsr2h,c
  6632  01508A  0EF8               	movlw	-8
  6633  01508C  006F FF8F FFDF     	movff	plusw1,indf2
  6634                           
  6635                           ;stkvar	_c @ sp[(-4)+-4]
  6636                           ;stkvar	_n @ sp[(-4)+-6]
  6637                           ;stkvar	_s @ sp[(-4)+0]
  6638  015092  0EFC               	movlw	-4
  6639  015094  006F FF8C  F03D    	movff	plusw1,btemp+10
  6640  01509A  0EFD               	movlw	-3
  6641  01509C  006F FF8C  F03E    	movff	plusw1,btemp+11
  6642  0150A2  0EF6               	movlw	-10
  6643  0150A4  50E3               	movf	plusw1,w,c
  6644  0150A6  263D               	addwf	(btemp+10)^0,f,c
  6645  0150A8  0EF7               	movlw	-9
  6646  0150AA  50E3               	movf	plusw1,w,c
  6647  0150AC  223E               	addwfc	(btemp+11)^0,f,c
  6648  0150AE  0EFE               	movlw	254
  6649  0150B0  243D               	addwf	(btemp+10)^0,w,c
  6650  0150B2  6ED9               	movwf	fsr2l,c
  6651  0150B4  0EFF               	movlw	255
  6652  0150B6  203E               	addwfc	(btemp+11)^0,w,c
  6653  0150B8  6EDA               	movwf	fsr2h,c
  6654  0150BA  0EF8               	movlw	-8
  6655  0150BC  006F FF8F FFDF     	movff	plusw1,indf2
  6656                           
  6657                           ;stkvar	_c @ sp[(-4)+-4]
  6658                           ;stkvar	_n @ sp[(-4)+-6]
  6659                           ;stkvar	_s @ sp[(-4)+0]
  6660  0150C2  0EFC               	movlw	-4
  6661  0150C4  006F FF8C  F03D    	movff	plusw1,btemp+10
  6662  0150CA  0EFD               	movlw	-3
  6663  0150CC  006F FF8C  F03E    	movff	plusw1,btemp+11
  6664  0150D2  0EF6               	movlw	-10
  6665  0150D4  50E3               	movf	plusw1,w,c
  6666  0150D6  263D               	addwf	(btemp+10)^0,f,c
  6667  0150D8  0EF7               	movlw	-9
  6668  0150DA  50E3               	movf	plusw1,w,c
  6669  0150DC  223E               	addwfc	(btemp+11)^0,f,c
  6670  0150DE  0EFD               	movlw	253
  6671  0150E0  243D               	addwf	(btemp+10)^0,w,c
  6672  0150E2  6ED9               	movwf	fsr2l,c
  6673  0150E4  0EFF               	movlw	255
  6674  0150E6  203E               	addwfc	(btemp+11)^0,w,c
  6675  0150E8  6EDA               	movwf	fsr2h,c
  6676  0150EA  0EF8               	movlw	-8
  6677  0150EC  006F FF8F FFDF     	movff	plusw1,indf2
  6678                           
  6679                           ;stkvar	_n @ sp[(-4)+-6]
  6680  0150F2  0EF7               	movlw	-9
  6681  0150F4  50E3               	movf	plusw1,w,c
  6682  0150F6  E108               	bnz	l10090
  6683  0150F8  0EF6               	movlw	-10
  6684  0150FA  006F FF8C  F033    	movff	plusw1,btemp
  6685  015100  0E07               	movlw	7
  6686  015102  5E33               	subwf	btemp^0,f,c
  6687  015104  A0D8               	btfss	status,0,c
  6688  015106  D0C6               	goto	u10600
  6689  015108                     l10090:
  6690                           
  6691                           ;stkvar	_c @ sp[(-4)+-4]
  6692                           ;stkvar	_s @ sp[(-4)+0]
  6693  015108  0EFC               	movlw	-4
  6694  01510A  006F FF8C  F03D    	movff	plusw1,btemp+10
  6695  015110  0EFD               	movlw	-3
  6696  015112  006F FF8C  F03E    	movff	plusw1,btemp+11
  6697  015118  0E03               	movlw	3
  6698  01511A  243D               	addwf	(btemp+10)^0,w,c
  6699  01511C  6ED9               	movwf	fsr2l,c
  6700  01511E  0E00               	movlw	0
  6701  015120  203E               	addwfc	(btemp+11)^0,w,c
  6702  015122  6EDA               	movwf	fsr2h,c
  6703  015124  0EF8               	movlw	-8
  6704  015126  006F FF8F FFDF     	movff	plusw1,indf2
  6705                           
  6706                           ;stkvar	_c @ sp[(-4)+-4]
  6707                           ;stkvar	_n @ sp[(-4)+-6]
  6708                           ;stkvar	_s @ sp[(-4)+0]
  6709  01512C  0EFC               	movlw	-4
  6710  01512E  006F FF8C  F03D    	movff	plusw1,btemp+10
  6711  015134  0EFD               	movlw	-3
  6712  015136  006F FF8C  F03E    	movff	plusw1,btemp+11
  6713  01513C  0EF6               	movlw	-10
  6714  01513E  50E3               	movf	plusw1,w,c
  6715  015140  263D               	addwf	(btemp+10)^0,f,c
  6716  015142  0EF7               	movlw	-9
  6717  015144  50E3               	movf	plusw1,w,c
  6718  015146  223E               	addwfc	(btemp+11)^0,f,c
  6719  015148  0EFC               	movlw	252
  6720  01514A  243D               	addwf	(btemp+10)^0,w,c
  6721  01514C  6ED9               	movwf	fsr2l,c
  6722  01514E  0EFF               	movlw	255
  6723  015150  203E               	addwfc	(btemp+11)^0,w,c
  6724  015152  6EDA               	movwf	fsr2h,c
  6725  015154  0EF8               	movlw	-8
  6726  015156  006F FF8F FFDF     	movff	plusw1,indf2
  6727                           
  6728                           ;stkvar	_n @ sp[(-4)+-6]
  6729  01515C  0EF7               	movlw	-9
  6730  01515E  50E3               	movf	plusw1,w,c
  6731  015160  E108               	bnz	l10096
  6732  015162  0EF6               	movlw	-10
  6733  015164  006F FF8C  F033    	movff	plusw1,btemp
  6734  01516A  0E09               	movlw	9
  6735  01516C  5E33               	subwf	btemp^0,f,c
  6736  01516E  A0D8               	btfss	status,0,c
  6737  015170  D091               	goto	u10600
  6738  015172                     l10096:
  6739                           
  6740                           ;stkvar	_s @ sp[(-4)+0]
  6741  015172  0EFC               	movlw	-4
  6742  015174  006F FF8C  F03D    	movff	plusw1,btemp+10
  6743  01517A  1E3D               	comf	(btemp+10)^0,f,c
  6744  01517C  0EFD               	movlw	-3
  6745  01517E  006F FF8C  F03E    	movff	plusw1,btemp+11
  6746  015184  1E3E               	comf	(btemp+11)^0,f,c
  6747  015186  2A3D               	incf	(btemp+10)^0,f,c
  6748  015188  B4D8               	btfsc	status,2,c
  6749  01518A  2A3E               	incf	(btemp+11)^0,f,c
  6750  01518C  0E03               	movlw	3
  6751  01518E  163D               	andwf	(btemp+10)^0,f,c
  6752  015190  0E00               	movlw	0
  6753  015192  163E               	andwf	(btemp+11)^0,f,c
  6754                           
  6755                           ;stkvar	_k @ sp[(-4)+2]
  6756  015194  0EFE               	movlw	-2
  6757  015196  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  6758  01519C  0EFF               	movlw	-1
  6759  01519E  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  6760                           
  6761                           ;stkvar	_k @ sp[(-4)+2]
  6762                           ;stkvar	_s @ sp[(-4)+0]
  6763  0151A4  0EFC               	movlw	-4
  6764  0151A6  50E3               	movf	plusw1,w,c
  6765  0151A8  6E33               	movwf	btemp^0,c
  6766  0151AA  0EFE               	movlw	-2
  6767  0151AC  50E3               	movf	plusw1,w,c
  6768  0151AE  2633               	addwf	btemp^0,f,c
  6769  0151B0  0EFC               	movlw	-4
  6770  0151B2  0060  F0CF  FFE3   	movff	btemp,plusw1
  6771  0151B8  0EFD               	movlw	-3
  6772  0151BA  50E3               	movf	plusw1,w,c
  6773  0151BC  6E33               	movwf	btemp^0,c
  6774  0151BE  0EFF               	movlw	-1
  6775  0151C0  50E3               	movf	plusw1,w,c
  6776  0151C2  2233               	addwfc	btemp^0,f,c
  6777  0151C4  0EFD               	movlw	-3
  6778  0151C6  0060  F0CF  FFE3   	movff	btemp,plusw1
  6779                           
  6780                           ;stkvar	_k @ sp[(-4)+2]
  6781                           ;stkvar	_n @ sp[(-4)+-6]
  6782  0151CC  0EF6               	movlw	-10
  6783  0151CE  50E3               	movf	plusw1,w,c
  6784  0151D0  6E33               	movwf	btemp^0,c
  6785  0151D2  0EFE               	movlw	-2
  6786  0151D4  50E3               	movf	plusw1,w,c
  6787  0151D6  5E33               	subwf	btemp^0,f,c
  6788  0151D8  0EF6               	movlw	-10
  6789  0151DA  0060  F0CF  FFE3   	movff	btemp,plusw1
  6790  0151E0  0EF7               	movlw	-9
  6791  0151E2  50E3               	movf	plusw1,w,c
  6792  0151E4  6E33               	movwf	btemp^0,c
  6793  0151E6  0EFF               	movlw	-1
  6794  0151E8  50E3               	movf	plusw1,w,c
  6795  0151EA  5A33               	subwfb	btemp^0,f,c
  6796  0151EC  0EF7               	movlw	-9
  6797  0151EE  0060  F0CF  FFE3   	movff	btemp,plusw1
  6798  0151F4  0EFC               	movlw	252
  6799  0151F6  6E3D               	movwf	(btemp+10)^0,c
  6800  0151F8  0EFF               	movlw	255
  6801  0151FA  6E3E               	movwf	(btemp+11)^0,c
  6802                           
  6803                           ;stkvar	_n @ sp[(-4)+-6]
  6804  0151FC  0EF6               	movlw	-10
  6805  0151FE  006F FF8C  F033    	movff	plusw1,btemp
  6806  015204  503D               	movf	(btemp+10)^0,w,c
  6807  015206  1633               	andwf	btemp^0,f,c
  6808  015208  0EF6               	movlw	-10
  6809  01520A  0060  F0CF  FFE3   	movff	btemp,plusw1
  6810  015210  0EF7               	movlw	-9
  6811  015212  006F FF8C  F033    	movff	plusw1,btemp
  6812  015218  503E               	movf	(btemp+11)^0,w,c
  6813  01521A  1633               	andwf	btemp^0,f,c
  6814  01521C  0EF7               	movlw	-9
  6815  01521E  D02E               	goto	L4
  6816  015220                     l10104:
  6817                           
  6818                           ;stkvar	_c @ sp[(-4)+-4]
  6819                           ;stkvar	_s @ sp[(-4)+0]
  6820  015220  0EFC               	movlw	-4
  6821  015222  006F FF8F FFD9     	movff	plusw1,fsr2l
  6822  015228  0EFD               	movlw	-3
  6823  01522A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6824  015230  0EF8               	movlw	-8
  6825  015232  006F FF8F FFDF     	movff	plusw1,indf2
  6826                           
  6827                           ;stkvar	_n @ sp[(-4)+-6]
  6828  015238  0EF6               	movlw	-10
  6829  01523A  006F FF8C  F033    	movff	plusw1,btemp
  6830  015240  0E01               	movlw	1
  6831  015242  5E33               	subwf	btemp^0,f,c
  6832  015244  0EF6               	movlw	-10
  6833  015246  0060  F0CF  FFE3   	movff	btemp,plusw1
  6834  01524C  0EF7               	movlw	-9
  6835  01524E  006F FF8C  F033    	movff	plusw1,btemp
  6836  015254  0E00               	movlw	0
  6837  015256  5A33               	subwfb	btemp^0,f,c
  6838  015258  0EF7               	movlw	-9
  6839  01525A  0060  F0CF  FFE3   	movff	btemp,plusw1
  6840                           
  6841                           ;stkvar	_s @ sp[(-4)+0]
  6842  015260  0EFC               	movlw	-4
  6843  015262  50E3               	movf	plusw1,w,c
  6844  015264  0F01               	addlw	1
  6845  015266  6E33               	movwf	btemp^0,c
  6846  015268  0EFC               	movlw	-4
  6847  01526A  0060  F0CF  FFE3   	movff	btemp,plusw1
  6848  015270  6A33               	clrf	btemp^0,c
  6849  015272  0EFD               	movlw	-3
  6850  015274  50E3               	movf	plusw1,w,c
  6851  015276  2033               	addwfc	btemp^0,w,c
  6852  015278  6E33               	movwf	btemp^0,c
  6853  01527A  0EFD               	movlw	-3
  6854  01527C                     L4:
  6855  01527C  0060  F0CF  FFE3   	movff	btemp,plusw1
  6856                           
  6857                           ;stkvar	_n @ sp[(-4)+-6]
  6858  015282  0EF6               	movlw	-10
  6859  015284  006F FF8C  F033    	movff	plusw1,btemp
  6860  01528A  0EF7               	movlw	-9
  6861  01528C  50E3               	movf	plusw1,w,c
  6862  01528E  1033               	iorwf	btemp^0,w,c
  6863  015290  A4D8               	btfss	status,2,c
  6864  015292  D7C6               	goto	l10104
  6865  015294                     u10600:
  6866                           
  6867                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6868  015294  0EF6               	movlw	246
  6869  015296  26E1               	addwf	fsr1l,f,c
  6870  015298  0EFF               	movlw	255
  6871  01529A  22E2               	addwfc	fsr1h,f,c
  6872  01529C  0012               	return		;funcret
  6873  01529E                     __end_of_memset:
  6874                           	opt callstack 0
  6875                           
  6876 ;; *************** function _printf *****************
  6877 ;; Defined at:
  6878 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  fmt             2  [STACK] PTR const unsigned char 
  6881 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  ap              2  [STACK] PTR void [1]
  6884 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6885 ;;  ret             2    0        int 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  2  [STACK] int 
  6888 ;; Registers used:
  6889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6890 ;; Tracked objects:
  6891 ;;		On entry : 3F/3B
  6892 ;;		On exit  : 3F/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6899 ;;Total ram usage:        0 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; Hardware stack levels required when called:   14
  6902 ;; This function calls:
  6903 ;;		_vfprintf
  6904 ;; This function is called by:
  6905 ;;		_eaDogM_WriteString
  6906 ;;		_send_lcd_cmd_dma
  6907 ;; This function uses a reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text34
  6911  018158                     __ptext34:
  6912                           	opt callstack 0
  6913  018158                     _printf:
  6914                           	opt callstack 0
  6915                           
  6916                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6917  018158  52E6               	movf	postinc1,f,c
  6918  01815A  52E6               	movf	postinc1,f,c
  6919                           
  6920                           ;stkvar	?_printf @ sp[(-2)+-3]
  6921                           
  6922                           ;incstack = 0
  6923  01815C  0EFB               	movlw	251
  6924  01815E  24E1               	addwf	fsr1l,w,c
  6925  018160  6E3D               	movwf	(btemp+10)^0,c
  6926  018162  0EFF               	movlw	255
  6927  018164  20E2               	addwfc	fsr1h,w,c
  6928  018166  6E3E               	movwf	(btemp+11)^0,c
  6929                           
  6930                           ;stkvar	_ap @ sp[(-2)+0]
  6931  018168  0EFF               	movlw	-1
  6932  01816A  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  6933  018170  0EFE               	movlw	-2
  6934  018172  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  6935                           
  6936                           ;stkvar	_ap @ sp[(-2)+0]
  6937  018178  0EFE               	movlw	254
  6938  01817A  24E1               	addwf	fsr1l,w,c
  6939  01817C  6E33               	movwf	btemp^0,c
  6940  01817E  0EFF               	movlw	255
  6941  018180  20E2               	addwfc	fsr1h,w,c
  6942  018182  6E34               	movwf	(btemp+1)^0,c
  6943  018184  0060  F0CF  FFE6   	movff	btemp,postinc1
  6944  01818A  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  6945                           
  6946                           ;stkvar	_fmt @ sp[(-4)+-3]
  6947  018190  0EF9               	movlw	-7
  6948  018192  006F FF8F FFE6     	movff	plusw1,postinc1
  6949  018198  006F FF8F FFE6     	movff	plusw1,postinc1
  6950  01819E  0E00               	movlw	0
  6951  0181A0  6EE6               	movwf	postinc1,c
  6952  0181A2  0E00               	movlw	0
  6953  0181A4  6EE6               	movwf	postinc1,c
  6954  0181A6  ECD4  F0BB         	call	_vfprintf	;wreg free
  6955                           
  6956                           ; BSR set to: 0
  6957                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6958  0181AA  52E5               	movf	postdec1,f,c
  6959  0181AC  52E5               	movf	postdec1,f,c
  6960  0181AE  52E5               	movf	postdec1,f,c
  6961  0181B0  50E7               	movf	indf1,w,c
  6962  0181B2  5EE1               	subwf	fsr1l,f,c
  6963  0181B4  0E00               	movlw	0
  6964  0181B6  5AE2               	subwfb	fsr1h,f,c
  6965  0181B8  0012               	return		;funcret
  6966  0181BA                     __end_of_printf:
  6967                           	opt callstack 0
  6968                           
  6969 ;; *************** function _vfprintf *****************
  6970 ;; Defined at:
  6971 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6974 ;;		 -> f(6), NULL(0), 
  6975 ;;  fmt             2  [STACK] PTR const unsigned char 
  6976 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6977 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6978 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6979 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6980 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6981 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  6982 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6983 ;;  ap              2  [STACK] PTR PTR void 
  6984 ;;		 -> ap(2), ap(2), 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;  cfmt            2  [STACK] PTR unsigned char 
  6987 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6988 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6989 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6990 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6991 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6992 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  6993 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6994 ;; Return value:  Size  Location     Type
  6995 ;;                  2  [STACK] int 
  6996 ;; Registers used:
  6997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6998 ;; Tracked objects:
  6999 ;;		On entry : 0/5
  7000 ;;		On exit  : 3F/0
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7007 ;;Total ram usage:        0 bytes
  7008 ;; Hardware stack levels used:    1
  7009 ;; Hardware stack levels required when called:   13
  7010 ;; This function calls:
  7011 ;;		_vfpfcnvrt
  7012 ;; This function is called by:
  7013 ;;		_sprintf
  7014 ;;		_printf
  7015 ;; This function uses a reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text35
  7019  0177A8                     __ptext35:
  7020                           	opt callstack 0
  7021  0177A8                     _vfprintf:
  7022                           	opt callstack 0
  7023                           
  7024                           ; BSR set to: 0
  7025                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7026  0177A8  52E6               	movf	postinc1,f,c
  7027  0177AA  52E6               	movf	postinc1,f,c
  7028                           
  7029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7030                           ;stkvar	_fmt @ sp[(-2)+-4]
  7031                           
  7032                           ;incstack = 0
  7033  0177AC  0EFA               	movlw	-6
  7034  0177AE  006F FF8C  F03D    	movff	plusw1,btemp+10
  7035  0177B4  0EFB               	movlw	-5
  7036  0177B6  006F FF8C  F03E    	movff	plusw1,btemp+11
  7037                           
  7038                           ;stkvar	_cfmt @ sp[(-2)+0]
  7039  0177BC  0EFF               	movlw	-1
  7040  0177BE  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  7041  0177C4  0EFE               	movlw	-2
  7042  0177C6  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  7043                           
  7044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7045  0177CC  0100               	movlb	0	; () banked
  7046  0177CE  6B9B               	clrf	_nout& (0+255),b
  7047  0177D0  6B9C               	clrf	(_nout+1)& (0+255),b
  7048                           
  7049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7050  0177D2  D021               	goto	l10118
  7051  0177D4                     l10116:
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7055                           ;stkvar	_ap @ sp[(-2)+-6]
  7056  0177D4  0EF8               	movlw	-8
  7057  0177D6  006F FF8F FFE6     	movff	plusw1,postinc1
  7058  0177DC  006F FF8F FFE6     	movff	plusw1,postinc1
  7059                           
  7060                           ;stkvar	_cfmt @ sp[(-4)+0]
  7061  0177E2  0EFC               	movlw	252
  7062  0177E4  24E1               	addwf	fsr1l,w,c
  7063  0177E6  6E33               	movwf	btemp^0,c
  7064  0177E8  0EFF               	movlw	255
  7065  0177EA  20E2               	addwfc	fsr1h,w,c
  7066  0177EC  6E34               	movwf	(btemp+1)^0,c
  7067  0177EE  0060  F0CF  FFE6   	movff	btemp,postinc1
  7068  0177F4  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  7069                           
  7070                           ;stkvar	_fp @ sp[(-6)+-2]
  7071  0177FA  0EF8               	movlw	-8
  7072  0177FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7073  017802  006F FF8F FFE6     	movff	plusw1,postinc1
  7074  017808  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7075  01780C  5033               	movf	btemp^0,w,c
  7076  01780E  0100               	movlb	0	; () banked
  7077  017810  279B               	addwf	_nout& (0+255),f,b
  7078  017812  5034               	movf	(btemp+1)^0,w,c
  7079  017814  239C               	addwfc	(_nout+1)& (0+255),f,b
  7080  017816                     l10118:
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7084                           ;stkvar	_cfmt @ sp[(-2)+0]
  7085  017816  50E1               	movf	fsr1l,w,c
  7086  017818  0FFE               	addlw	-2
  7087  01781A  6ED9               	movwf	fsr2l,c
  7088  01781C  50E2               	movf	fsr1h,w,c
  7089  01781E  6EDA               	movwf	fsr2h,c
  7090  017820  0EFF               	movlw	255
  7091  017822  22DA               	addwfc	fsr2h,f,c
  7092  017824  006F FF7B FFF6     	movff	postinc2,tblptrl
  7093  01782A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7094  017830                     	if	0	;tblptru may be non-zero
  7095  017830                     	endif
  7096  017830                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7097  017830  0E00               	movlw	low (__mediumconst shr (0+16))
  7098  017832  6EF8               	movwf	tblptru,c
  7099  017834                     	endif
  7100  017834  0008               	tblrd		*
  7101  017836  50F5               	movf	tablat,w,c
  7102  017838  0900               	iorlw	0
  7103  01783A  A4D8               	btfss	status,2,c
  7104  01783C  D7CB               	goto	l10116
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7108  01783E  0060  F26C  F033   	movff	_nout,btemp
  7109  017844  0060  F270  F034   	movff	_nout+1,btemp+1
  7110                           
  7111                           ; BSR set to: 0
  7112                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7113  01784A  0EF8               	movlw	248
  7114  01784C  26E1               	addwf	fsr1l,f,c
  7115  01784E  0EFF               	movlw	255
  7116  017850  22E2               	addwfc	fsr1h,f,c
  7117  017852  0012               	return		;funcret
  7118  017854                     __end_of_vfprintf:
  7119                           	opt callstack 0
  7120                           
  7121 ;; *************** function _vfpfcnvrt *****************
  7122 ;; Defined at:
  7123 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7126 ;;		 -> f(6), NULL(0), 
  7127 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7128 ;;		 -> cfmt(2), 
  7129 ;;  ap              2  [STACK] PTR PTR void 
  7130 ;;		 -> ap(2), ap(2), 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;  llu             8  [STACK] unsigned long long 
  7133 ;;  ll              8  [STACK] long long 
  7134 ;;  f               4  [STACK] long long 
  7135 ;;  ct              3  [STACK] unsigned char [3]
  7136 ;;  vp              3    0        PTR void 
  7137 ;;  cp              2  [STACK] PTR unsigned char 
  7138 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  7139 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7140 ;;		 -> STR_3(5), V(203), 
  7141 ;;  i               2    0        int 
  7142 ;;  done            2    0        int 
  7143 ;;  c               1  [STACK] unsigned char 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  2  [STACK] int 
  7146 ;; Registers used:
  7147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7157 ;;Total ram usage:        0 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; Hardware stack levels required when called:   12
  7160 ;; This function calls:
  7161 ;;		_atoi
  7162 ;;		_ctoa
  7163 ;;		_dtoa
  7164 ;;		_efgtoa
  7165 ;;		_fputc
  7166 ;;		_isdigit
  7167 ;;		_isupper
  7168 ;;		_stoa
  7169 ;;		_strncmp
  7170 ;;		_tolower
  7171 ;;		_utoa
  7172 ;;		_xtoa
  7173 ;; This function is called by:
  7174 ;;		_vfprintf
  7175 ;; This function uses a reentrant model
  7176 ;;
  7177                           
  7178                           	psect	text36
  7179  011244                     __ptext36:
  7180                           	opt callstack 0
  7181  011244                     _vfpfcnvrt:
  7182                           	opt callstack 0
  7183                           
  7184                           ; BSR set to: 0
  7185                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7186  011244  0E20               	movlw	32
  7187  011246  26E1               	addwf	fsr1l,f,c
  7188  011248  0E00               	movlw	0
  7189  01124A  22E2               	addwfc	fsr1h,f,c
  7190                           
  7191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7192                           ;stkvar	_fmt @ sp[(-32)+-4]
  7193                           
  7194                           ;incstack = 0
  7195  01124C  0EDC               	movlw	-36
  7196  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7197  011254  0EDD               	movlw	-35
  7198  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7199  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7200  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7201  011268                     	if	0	;tblptru may be non-zero
  7202  011268                     	endif
  7203  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7204  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7205  01126A  6EF8               	movwf	tblptru,c
  7206  01126C                     	endif
  7207  01126C  0008               	tblrd		*
  7208  01126E  50F5               	movf	tablat,w,c
  7209  011270  0A25               	xorlw	37
  7210  011272  A4D8               	btfss	status,2,c
  7211  011274  EFC9  F090         	goto	l10062
  7212                           
  7213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7214                           ;stkvar	_fmt @ sp[(-32)+-4]
  7215  011278  0EDC               	movlw	-36
  7216  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7217  011280  0EDD               	movlw	-35
  7218  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7219  011288  2ADE               	incf	postinc2,f,c
  7220  01128A  0E00               	movlw	0
  7221  01128C  22DD               	addwfc	postdec2,f,c
  7222                           
  7223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7224  01128E  6A1C               	clrf	_width^0,c
  7225  011290  6A1D               	clrf	(_width+1)^0,c
  7226  011292  6A20               	clrf	_flags^0,c
  7227  011294  6A21               	clrf	(_flags+1)^0,c
  7228                           
  7229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7230  011296  681E               	setf	_prec^0,c
  7231  011298  681F               	setf	(_prec+1)^0,c
  7232                           
  7233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7234                           ;stkvar	_fmt @ sp[(-32)+-4]
  7235  01129A  0EDC               	movlw	-36
  7236  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7237  0112A2  0EDD               	movlw	-35
  7238  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7239  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7240  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7241  0112B6                     	if	0	;tblptru may be non-zero
  7242  0112B6                     	endif
  7243  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7244  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7245  0112B8  6EF8               	movwf	tblptru,c
  7246  0112BA                     	endif
  7247  0112BA  0008               	tblrd		*
  7248  0112BC  50F5               	movf	tablat,w,c
  7249  0112BE  0A2A               	xorlw	42
  7250  0112C0  A4D8               	btfss	status,2,c
  7251  0112C2  D031               	goto	l9880
  7252                           
  7253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7254                           ;stkvar	_fmt @ sp[(-32)+-4]
  7255  0112C4  0EDC               	movlw	-36
  7256  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7257  0112CC  0EDD               	movlw	-35
  7258  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7259  0112D4  2ADE               	incf	postinc2,f,c
  7260  0112D6  0E00               	movlw	0
  7261  0112D8  22DD               	addwfc	postdec2,f,c
  7262                           
  7263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7264                           ;stkvar	_ap @ sp[(-32)+-6]
  7265  0112DA  0EDA               	movlw	-38
  7266  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7267  0112E2  0EDB               	movlw	-37
  7268  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7269  0112EA  0E02               	movlw	2
  7270  0112EC  5EDE               	subwf	postinc2,f,c
  7271  0112EE  0E00               	movlw	0
  7272  0112F0  5ADD               	subwfb	postdec2,f,c
  7273  0112F2  006F FF78  F03D    	movff	postinc2,btemp+10
  7274  0112F8  006F FF74  F03E    	movff	postdec2,btemp+11
  7275  0112FE  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
  7276  011304  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
  7277  01130A  006F FF78  F01C    	movff	postinc2,_width
  7278  011310  006F FF74  F01D    	movff	postdec2,_width+1
  7279                           
  7280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7281  011316  AE1D               	btfss	(_width+1)^0,7,c
  7282  011318  D066               	goto	u10300
  7283                           
  7284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7285  01131A  8020               	bsf	_flags^0,0,c
  7286                           
  7287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7288  01131C  6C1C               	negf	_width^0,c
  7289  01131E  1E1D               	comf	(_width+1)^0,f,c
  7290  011320  B0D8               	btfsc	status,0,c
  7291  011322  2A1D               	incf	(_width+1)^0,f,c
  7292  011324  D060               	goto	u10300
  7293  011326                     l9880:
  7294                           
  7295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7296                           ;stkvar	_fmt @ sp[(-32)+-4]
  7297  011326  0EDC               	movlw	-36
  7298  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7299  01132E  0EDD               	movlw	-35
  7300  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7301  011336  006F FF78  F03D    	movff	postinc2,btemp+10
  7302  01133C  006F FF74  F03E    	movff	postdec2,btemp+11
  7303  011342  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  7304  011348  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  7305  01134E  ECEE  F0AB         	call	_atoi	;wreg free
  7306  011352  0060  F0CC  F01C   	movff	btemp,_width
  7307  011358  0060  F0D0  F01D   	movff	btemp+1,_width+1
  7308                           
  7309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7310  01135E  D00B               	goto	l9884
  7311  011360                     l9882:
  7312                           
  7313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7314                           ;stkvar	_fmt @ sp[(-32)+-4]
  7315  011360  0EDC               	movlw	-36
  7316  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7317  011368  0EDD               	movlw	-35
  7318  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7319  011370  2ADE               	incf	postinc2,f,c
  7320  011372  0E00               	movlw	0
  7321  011374  22DD               	addwfc	postdec2,f,c
  7322  011376                     l9884:
  7323  011376  0ED0               	movlw	208
  7324  011378  6E3D               	movwf	(btemp+10)^0,c
  7325  01137A  0EFF               	movlw	255
  7326  01137C  6E3E               	movwf	(btemp+11)^0,c
  7327                           
  7328                           ;stkvar	_fmt @ sp[(-32)+-4]
  7329  01137E  0EDC               	movlw	-36
  7330  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7331  011386  0EDD               	movlw	-35
  7332  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7333  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7334  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7335  01139A                     	if	0	;tblptru may be non-zero
  7336  01139A                     	endif
  7337  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7338  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7339  01139C  6EF8               	movwf	tblptru,c
  7340  01139E                     	endif
  7341  01139E  0008               	tblrd		*
  7342  0113A0  50F5               	movf	tablat,w,c
  7343  0113A2  6E3B               	movwf	(btemp+8)^0,c
  7344  0113A4  6A3C               	clrf	(btemp+9)^0,c
  7345  0113A6  503D               	movf	(btemp+10)^0,w,c
  7346  0113A8  263B               	addwf	(btemp+8)^0,f,c
  7347  0113AA  503E               	movf	(btemp+11)^0,w,c
  7348  0113AC  223C               	addwfc	(btemp+9)^0,f,c
  7349  0113AE  503C               	movf	(btemp+9)^0,w,c
  7350  0113B0  E106               	bnz	u10280
  7351  0113B2  0E0A               	movlw	10
  7352  0113B4  5C3B               	subwf	(btemp+8)^0,w,c
  7353  0113B6  B0D8               	btfsc	status,0,c
  7354  0113B8  D002               	goto	u10280
  7355  0113BA  0E01               	movlw	1
  7356  0113BC  D001               	goto	u10290
  7357  0113BE                     u10280:
  7358  0113BE  0E00               	movlw	0
  7359  0113C0                     u10290:
  7360  0113C0  6E3D               	movwf	(btemp+10)^0,c
  7361  0113C2  6A3E               	clrf	(btemp+11)^0,c
  7362                           
  7363                           ;stkvar	_vfpfcnvrt$4314 @ sp[(-32)+4]
  7364  0113C4  0EE4               	movlw	-28
  7365  0113C6  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  7366  0113CC  0EE5               	movlw	-27
  7367  0113CE  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  7368                           
  7369                           ;stkvar	_vfpfcnvrt$4314 @ sp[(-32)+4]
  7370  0113D4  0EE4               	movlw	-28
  7371  0113D6  006F FF8C  F033    	movff	plusw1,btemp
  7372  0113DC  0EE5               	movlw	-27
  7373  0113DE  50E3               	movf	plusw1,w,c
  7374  0113E0  1033               	iorwf	btemp^0,w,c
  7375  0113E2  A4D8               	btfss	status,2,c
  7376  0113E4  D7BD               	goto	l9882
  7377  0113E6                     u10300:
  7378                           
  7379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7380                           ;stkvar	_fmt @ sp[(-32)+-4]
  7381  0113E6  0EDC               	movlw	-36
  7382  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7383  0113EE  0EDD               	movlw	-35
  7384  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7385  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7386  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7387  011402                     	if	0	;tblptru may be non-zero
  7388  011402                     	endif
  7389  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7390  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7391  011404  6EF8               	movwf	tblptru,c
  7392  011406                     	endif
  7393  011406  0008               	tblrd		*
  7394  011408  50F5               	movf	tablat,w,c
  7395  01140A  0A2E               	xorlw	46
  7396  01140C  A4D8               	btfss	status,2,c
  7397  01140E  D0AC               	goto	u10350
  7398                           
  7399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7400  011410  6A1E               	clrf	_prec^0,c
  7401  011412  6A1F               	clrf	(_prec+1)^0,c
  7402                           
  7403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7404                           ;stkvar	_fmt @ sp[(-32)+-4]
  7405  011414  0EDC               	movlw	-36
  7406  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7407  01141C  0EDD               	movlw	-35
  7408  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7409  011424  2ADE               	incf	postinc2,f,c
  7410  011426  0E00               	movlw	0
  7411  011428  22DD               	addwfc	postdec2,f,c
  7412                           
  7413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7414                           ;stkvar	_fmt @ sp[(-32)+-4]
  7415  01142A  0EDC               	movlw	-36
  7416  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7417  011432  0EDD               	movlw	-35
  7418  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7419  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7420  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7421  011446                     	if	0	;tblptru may be non-zero
  7422  011446                     	endif
  7423  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7424  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7425  011448  6EF8               	movwf	tblptru,c
  7426  01144A                     	endif
  7427  01144A  0008               	tblrd		*
  7428  01144C  50F5               	movf	tablat,w,c
  7429  01144E  0A2A               	xorlw	42
  7430  011450  A4D8               	btfss	status,2,c
  7431  011452  D02A               	goto	l9902
  7432                           
  7433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7434                           ;stkvar	_fmt @ sp[(-32)+-4]
  7435  011454  0EDC               	movlw	-36
  7436  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7437  01145C  0EDD               	movlw	-35
  7438  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7439  011464  2ADE               	incf	postinc2,f,c
  7440  011466  0E00               	movlw	0
  7441  011468  22DD               	addwfc	postdec2,f,c
  7442                           
  7443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7444                           ;stkvar	_ap @ sp[(-32)+-6]
  7445  01146A  0EDA               	movlw	-38
  7446  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7447  011472  0EDB               	movlw	-37
  7448  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7449  01147A  0E02               	movlw	2
  7450  01147C  5EDE               	subwf	postinc2,f,c
  7451  01147E  0E00               	movlw	0
  7452  011480  5ADD               	subwfb	postdec2,f,c
  7453  011482  006F FF78  F03D    	movff	postinc2,btemp+10
  7454  011488  006F FF74  F03E    	movff	postdec2,btemp+11
  7455  01148E  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
  7456  011494  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
  7457  01149A  006F FF78  F01E    	movff	postinc2,_prec
  7458  0114A0  006F FF74  F01F    	movff	postdec2,_prec+1
  7459                           
  7460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7461  0114A6  D060               	goto	u10350
  7462  0114A8                     l9902:
  7463                           
  7464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7465                           ;stkvar	_fmt @ sp[(-32)+-4]
  7466  0114A8  0EDC               	movlw	-36
  7467  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7468  0114B0  0EDD               	movlw	-35
  7469  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7470  0114B8  006F FF78  F03D    	movff	postinc2,btemp+10
  7471  0114BE  006F FF74  F03E    	movff	postdec2,btemp+11
  7472  0114C4  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  7473  0114CA  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  7474  0114D0  ECEE  F0AB         	call	_atoi	;wreg free
  7475  0114D4  0060  F0CC  F01E   	movff	btemp,_prec
  7476  0114DA  0060  F0D0  F01F   	movff	btemp+1,_prec+1
  7477                           
  7478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7479  0114E0  D00B               	goto	l9906
  7480  0114E2                     l9904:
  7481                           
  7482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7483                           ;stkvar	_fmt @ sp[(-32)+-4]
  7484  0114E2  0EDC               	movlw	-36
  7485  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7486  0114EA  0EDD               	movlw	-35
  7487  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7488  0114F2  2ADE               	incf	postinc2,f,c
  7489  0114F4  0E00               	movlw	0
  7490  0114F6  22DD               	addwfc	postdec2,f,c
  7491  0114F8                     l9906:
  7492  0114F8  0ED0               	movlw	208
  7493  0114FA  6E3D               	movwf	(btemp+10)^0,c
  7494  0114FC  0EFF               	movlw	255
  7495  0114FE  6E3E               	movwf	(btemp+11)^0,c
  7496                           
  7497                           ;stkvar	_fmt @ sp[(-32)+-4]
  7498  011500  0EDC               	movlw	-36
  7499  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7500  011508  0EDD               	movlw	-35
  7501  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7502  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7503  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7504  01151C                     	if	0	;tblptru may be non-zero
  7505  01151C                     	endif
  7506  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7507  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7508  01151E  6EF8               	movwf	tblptru,c
  7509  011520                     	endif
  7510  011520  0008               	tblrd		*
  7511  011522  50F5               	movf	tablat,w,c
  7512  011524  6E3B               	movwf	(btemp+8)^0,c
  7513  011526  6A3C               	clrf	(btemp+9)^0,c
  7514  011528  503D               	movf	(btemp+10)^0,w,c
  7515  01152A  263B               	addwf	(btemp+8)^0,f,c
  7516  01152C  503E               	movf	(btemp+11)^0,w,c
  7517  01152E  223C               	addwfc	(btemp+9)^0,f,c
  7518  011530  503C               	movf	(btemp+9)^0,w,c
  7519  011532  E106               	bnz	u10330
  7520  011534  0E0A               	movlw	10
  7521  011536  5C3B               	subwf	(btemp+8)^0,w,c
  7522  011538  B0D8               	btfsc	status,0,c
  7523  01153A  D002               	goto	u10330
  7524  01153C  0E01               	movlw	1
  7525  01153E  D001               	goto	u10340
  7526  011540                     u10330:
  7527  011540  0E00               	movlw	0
  7528  011542                     u10340:
  7529  011542  6E3D               	movwf	(btemp+10)^0,c
  7530  011544  6A3E               	clrf	(btemp+11)^0,c
  7531                           
  7532                           ;stkvar	_vfpfcnvrt$4315 @ sp[(-32)+0]
  7533  011546  0EE0               	movlw	-32
  7534  011548  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  7535  01154E  0EE1               	movlw	-31
  7536  011550  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  7537                           
  7538                           ;stkvar	_vfpfcnvrt$4315 @ sp[(-32)+0]
  7539  011556  0EE0               	movlw	-32
  7540  011558  006F FF8C  F033    	movff	plusw1,btemp
  7541  01155E  0EE1               	movlw	-31
  7542  011560  50E3               	movf	plusw1,w,c
  7543  011562  1033               	iorwf	btemp^0,w,c
  7544  011564  A4D8               	btfss	status,2,c
  7545  011566  D7BD               	goto	l9904
  7546  011568                     u10350:
  7547                           
  7548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7549                           ;stkvar	_fmt @ sp[(-32)+-4]
  7550  011568  0EDC               	movlw	-36
  7551  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7552  011570  0EDD               	movlw	-35
  7553  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7554  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7555  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7556  011584                     	if	0	;tblptru may be non-zero
  7557  011584                     	endif
  7558  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7559  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7560  011586  6EF8               	movwf	tblptru,c
  7561  011588                     	endif
  7562  011588  0008               	tblrd		*
  7563  01158A  50F5               	movf	tablat,w,c
  7564  01158C  6EE6               	movwf	postinc1,c
  7565  01158E  0E00               	movlw	0
  7566  011590  6EE6               	movwf	postinc1,c
  7567  011592  EC87  F0BE         	call	_tolower	;wreg free
  7568                           
  7569                           ;stkvar	_ct @ sp[(-32)+26]
  7570  011596  0EFA               	movlw	-6
  7571  011598  0060  F0CF  FFE3   	movff	btemp,plusw1
  7572                           
  7573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7574                           ;stkvar	_ct @ sp[(-32)+26]
  7575  01159E  0EFA               	movlw	-6
  7576  0115A0  50E3               	movf	plusw1,w,c
  7577  0115A2  B4D8               	btfsc	status,2,c
  7578  0115A4  D05B               	goto	l9922
  7579                           
  7580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7581                           ;stkvar	_ct @ sp[(-32)+26]
  7582  0115A6  0EFB               	movlw	251
  7583  0115A8  24E1               	addwf	fsr1l,w,c
  7584  0115AA  6ED9               	movwf	fsr2l,c
  7585  0115AC  0EFF               	movlw	255
  7586  0115AE  20E2               	addwfc	fsr1h,w,c
  7587  0115B0  6EDA               	movwf	fsr2h,c
  7588                           
  7589                           ;stkvar	_fmt @ sp[(-32)+-4]
  7590  0115B2  0EDC               	movlw	-36
  7591  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7592  0115BA  0EDD               	movlw	-35
  7593  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7594  0115C2  006F FFB8  F03D    	movff	postinc0,btemp+10
  7595  0115C8  006F FFB4  F03E    	movff	postdec0,btemp+11
  7596  0115CE  0E01               	movlw	1
  7597  0115D0  263D               	addwf	(btemp+10)^0,f,c
  7598  0115D2  0E00               	movlw	0
  7599  0115D4  223E               	addwfc	(btemp+11)^0,f,c
  7600  0115D6  0060  F0F7  FFF6   	movff	btemp+10,tblptrl
  7601  0115DC  0060  F0FB  FFF7   	movff	btemp+11,tblptrh
  7602  0115E2                     	if	0	;tblptru may be non-zero
  7603  0115E2                     	endif
  7604  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7605  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7606  0115E4  6EF8               	movwf	tblptru,c
  7607  0115E6                     	endif
  7608  0115E6  0008               	tblrd		*
  7609  0115E8  50F5               	movf	tablat,w,c
  7610  0115EA  6EE6               	movwf	postinc1,c
  7611  0115EC  0E00               	movlw	0
  7612  0115EE  6EE6               	movwf	postinc1,c
  7613  0115F0  EC87  F0BE         	call	_tolower	;wreg free
  7614  0115F4  5033               	movf	btemp^0,w,c
  7615  0115F6  6EDF               	movwf	indf2,c
  7616                           
  7617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7618                           ;stkvar	_ct @ sp[(-32)+26]
  7619  0115F8  0EFB               	movlw	251
  7620  0115FA  24E1               	addwf	fsr1l,w,c
  7621  0115FC  6ED9               	movwf	fsr2l,c
  7622  0115FE  0EFF               	movlw	255
  7623  011600  20E2               	addwfc	fsr1h,w,c
  7624  011602  6EDA               	movwf	fsr2h,c
  7625  011604  50DF               	movf	indf2,w,c
  7626  011606  B4D8               	btfsc	status,2,c
  7627  011608  D029               	goto	l9922
  7628                           
  7629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7630                           ;stkvar	_ct @ sp[(-32)+26]
  7631  01160A  0EFC               	movlw	252
  7632  01160C  24E1               	addwf	fsr1l,w,c
  7633  01160E  6ED9               	movwf	fsr2l,c
  7634  011610  0EFF               	movlw	255
  7635  011612  20E2               	addwfc	fsr1h,w,c
  7636  011614  6EDA               	movwf	fsr2h,c
  7637                           
  7638                           ;stkvar	_fmt @ sp[(-32)+-4]
  7639  011616  0EDC               	movlw	-36
  7640  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7641  01161E  0EDD               	movlw	-35
  7642  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7643  011626  006F FFB8  F03D    	movff	postinc0,btemp+10
  7644  01162C  006F FFB4  F03E    	movff	postdec0,btemp+11
  7645  011632  0E02               	movlw	2
  7646  011634  263D               	addwf	(btemp+10)^0,f,c
  7647  011636  0E00               	movlw	0
  7648  011638  223E               	addwfc	(btemp+11)^0,f,c
  7649  01163A  0060  F0F7  FFF6   	movff	btemp+10,tblptrl
  7650  011640  0060  F0FB  FFF7   	movff	btemp+11,tblptrh
  7651  011646                     	if	0	;tblptru may be non-zero
  7652  011646                     	endif
  7653  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7654  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7655  011648  6EF8               	movwf	tblptru,c
  7656  01164A                     	endif
  7657  01164A  0008               	tblrd		*
  7658  01164C  50F5               	movf	tablat,w,c
  7659  01164E  6EE6               	movwf	postinc1,c
  7660  011650  0E00               	movlw	0
  7661  011652  6EE6               	movwf	postinc1,c
  7662  011654  EC87  F0BE         	call	_tolower	;wreg free
  7663  011658  5033               	movf	btemp^0,w,c
  7664  01165A  6EDF               	movwf	indf2,c
  7665  01165C                     l9922:
  7666                           
  7667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7668                           ;stkvar	_fmt @ sp[(-32)+-4]
  7669  01165C  0EDC               	movlw	-36
  7670  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7671  011664  0EDD               	movlw	-35
  7672  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7673  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7674  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7675  011678                     	if	0	;tblptru may be non-zero
  7676  011678                     	endif
  7677  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7678  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7679  01167A  6EF8               	movwf	tblptru,c
  7680  01167C                     	endif
  7681  01167C  0008               	tblrd		*
  7682  01167E  50F5               	movf	tablat,w,c
  7683  011680  0A63               	xorlw	99
  7684  011682  A4D8               	btfss	status,2,c
  7685  011684  D037               	goto	l9932
  7686                           
  7687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7688                           ;stkvar	_fmt @ sp[(-32)+-4]
  7689  011686  0EDC               	movlw	-36
  7690  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7691  01168E  0EDD               	movlw	-35
  7692  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7693  011696  2ADE               	incf	postinc2,f,c
  7694  011698  0E00               	movlw	0
  7695  01169A  22DD               	addwfc	postdec2,f,c
  7696                           
  7697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7698                           ;stkvar	_ap @ sp[(-32)+-6]
  7699  01169C  0EDA               	movlw	-38
  7700  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7701  0116A4  0EDB               	movlw	-37
  7702  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7703  0116AC  0E02               	movlw	2
  7704  0116AE  5EDE               	subwf	postinc2,f,c
  7705  0116B0  0E00               	movlw	0
  7706  0116B2  5ADD               	subwfb	postdec2,f,c
  7707  0116B4  006F FF78  F03D    	movff	postinc2,btemp+10
  7708  0116BA  006F FF74  F03E    	movff	postdec2,btemp+11
  7709  0116C0  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
  7710  0116C6  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
  7711  0116CC  50DF               	movf	indf2,w,c
  7712  0116CE  6E3E               	movwf	(btemp+11)^0,c
  7713                           
  7714                           ;stkvar	_c @ sp[(-32)+31]
  7715  0116D0  0EFF               	movlw	-1
  7716  0116D2  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  7717                           
  7718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7719                           ;stkvar	_c @ sp[(-32)+31]
  7720  0116D8  0EFF               	movlw	-1
  7721  0116DA  50E3               	movf	plusw1,w,c
  7722  0116DC  6EE6               	movwf	postinc1,c
  7723                           
  7724                           ;stkvar	_fp @ sp[(-33)+-2]
  7725  0116DE  0EDD               	movlw	-35
  7726  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7727  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7728  0116EC  EC01  F0BE         	call	_ctoa	;wreg free
  7729  0116F0  EFF3  F090         	goto	l1992
  7730  0116F4                     l9932:
  7731                           
  7732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7733                           ;stkvar	_fmt @ sp[(-32)+-4]
  7734  0116F4  0EDC               	movlw	-36
  7735  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7736  0116FC  0EDD               	movlw	-35
  7737  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7738  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
  7739  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7740  011710                     	if	0	;tblptru may be non-zero
  7741  011710                     	endif
  7742  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7743  011710  0E00               	movlw	low (__mediumconst shr (0+16))
  7744  011712  6EF8               	movwf	tblptru,c
  7745  011714                     	endif
  7746  011714  0008               	tblrd		*
  7747  011716  50F5               	movf	tablat,w,c
  7748  011718  0A64               	xorlw	100
  7749  01171A  B4D8               	btfsc	status,2,c
  7750  01171C  D015               	goto	u10400
  7751                           
  7752                           ;stkvar	_fmt @ sp[(-32)+-4]
  7753  01171E  0EDC               	movlw	-36
  7754  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
  7755  011726  0EDD               	movlw	-35
  7756  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
  7757  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7758  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
  7759  01173A                     	if	0	;tblptru may be non-zero
  7760  01173A                     	endif
  7761  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7762  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
  7763  01173C  6EF8               	movwf	tblptru,c
  7764  01173E                     	endif
  7765  01173E  0008               	tblrd		*
  7766  011740  50F5               	movf	tablat,w,c
  7767  011742  0A69               	xorlw	105
  7768  011744  A4D8               	btfss	status,2,c
  7769  011746  D076               	goto	l9944
  7770  011748                     u10400:
  7771                           
  7772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7773                           ;stkvar	_fmt @ sp[(-32)+-4]
  7774  011748  0EDC               	movlw	-36
  7775  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7776  011750  0EDD               	movlw	-35
  7777  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
  7778  011758  2ADE               	incf	postinc2,f,c
  7779  01175A  0E00               	movlw	0
  7780  01175C  22DD               	addwfc	postdec2,f,c
  7781                           
  7782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7783                           ;stkvar	_ap @ sp[(-32)+-6]
  7784  01175E  0EDA               	movlw	-38
  7785  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
  7786  011766  0EDB               	movlw	-37
  7787  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
  7788  01176E  0E02               	movlw	2
  7789  011770  5EDE               	subwf	postinc2,f,c
  7790  011772  0E00               	movlw	0
  7791  011774  5ADD               	subwfb	postdec2,f,c
  7792  011776  006F FF78  F03D    	movff	postinc2,btemp+10
  7793  01177C  006F FF74  F03E    	movff	postdec2,btemp+11
  7794  011782  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
  7795  011788  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
  7796  01178E  006F FF78  F03D    	movff	postinc2,btemp+10
  7797  011794  006F FF74  F03E    	movff	postdec2,btemp+11
  7798                           
  7799                           ;stkvar	_ll @ sp[(-32)+14]
  7800  01179A  0EEE               	movlw	-18
  7801  01179C  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  7802  0117A2  0EEF               	movlw	-17
  7803  0117A4  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  7804  0117AA  6A33               	clrf	btemp^0,c
  7805  0117AC  BEE3               	btfsc	plusw1,7,c
  7806  0117AE  6833               	setf	btemp^0,c
  7807  0117B0  0EF0               	movlw	-16
  7808  0117B2  0060  F0CF  FFE3   	movff	btemp,plusw1
  7809  0117B8  0EF1               	movlw	-15
  7810  0117BA  0060  F0CF  FFE3   	movff	btemp,plusw1
  7811  0117C0  0EF2               	movlw	-14
  7812  0117C2  0060  F0CF  FFE3   	movff	btemp,plusw1
  7813  0117C8  0EF3               	movlw	-13
  7814  0117CA  0060  F0CF  FFE3   	movff	btemp,plusw1
  7815  0117D0  0EF4               	movlw	-12
  7816  0117D2  0060  F0CF  FFE3   	movff	btemp,plusw1
  7817  0117D8  0EF5               	movlw	-11
  7818  0117DA  0060  F0CF  FFE3   	movff	btemp,plusw1
  7819  0117E0                     l9940:
  7820                           
  7821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7822                           ;stkvar	_ll @ sp[(-32)+14]
  7823  0117E0  50E1               	movf	fsr1l,w,c
  7824  0117E2  0FEE               	addlw	-18
  7825  0117E4  6ED9               	movwf	fsr2l,c
  7826  0117E6  50E2               	movf	fsr1h,w,c
  7827  0117E8  6EDA               	movwf	fsr2h,c
  7828  0117EA  0EFF               	movlw	255
  7829  0117EC  22DA               	addwfc	fsr2h,f,c
  7830  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  7831  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  7832  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  7833  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  7834  011806  006F FF7B FFE6     	movff	postinc2,postinc1
  7835  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
  7836  011812  006F FF7B FFE6     	movff	postinc2,postinc1
  7837  011818  006F FF7B FFE6     	movff	postinc2,postinc1
  7838                           
  7839                           ;stkvar	_fp @ sp[(-40)+-2]
  7840  01181E  0ED6               	movlw	-42
  7841  011820  006F FF8F FFE6     	movff	plusw1,postinc1
  7842  011826  006F FF8F FFE6     	movff	plusw1,postinc1
  7843  01182C  EC6B  F09E         	call	_dtoa	;wreg free
  7844  011830  EFF3  F090         	goto	l1992
  7845  011834                     l9944:
  7846                           
  7847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  7848  011834  0E02               	movlw	2
  7849  011836  6EE6               	movwf	postinc1,c
  7850  011838  0E00               	movlw	0
  7851  01183A  6EE6               	movwf	postinc1,c
  7852  01183C  0EEA               	movlw	low STR_42
  7853  01183E  6EE6               	movwf	postinc1,c
  7854  011840  0EFF               	movlw	high STR_42
  7855  011842  6EE6               	movwf	postinc1,c
  7856                           
  7857                           ;stkvar	_fmt @ sp[(-36)+-4]
  7858  011844  0ED8               	movlw	-40
  7859  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
  7860  01184C  0ED9               	movlw	-39
  7861  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7862  011854  006F FF78  F03D    	movff	postinc2,btemp+10
  7863  01185A  006F FF74  F03E    	movff	postdec2,btemp+11
  7864  011860  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  7865  011866  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  7866  01186C  EC48  F0AE         	call	_strncmp	;wreg free
  7867  011870  5033               	movf	btemp^0,w,c
  7868  011872  1034               	iorwf	(btemp+1)^0,w,c
  7869  011874  B4D8               	btfsc	status,2,c
  7870  011876  D022               	goto	u10420
  7871  011878  0E02               	movlw	2
  7872  01187A  6EE6               	movwf	postinc1,c
  7873  01187C  0E00               	movlw	0
  7874  01187E  6EE6               	movwf	postinc1,c
  7875  011880  0EF0               	movlw	low STR_46
  7876  011882  6EE6               	movwf	postinc1,c
  7877  011884  0EFF               	movlw	high STR_46
  7878  011886  6EE6               	movwf	postinc1,c
  7879                           
  7880                           ;stkvar	_fmt @ sp[(-36)+-4]
  7881  011888  0ED8               	movlw	-40
  7882  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7883  011890  0ED9               	movlw	-39
  7884  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
  7885  011898  006F FF78  F03D    	movff	postinc2,btemp+10
  7886  01189E  006F FF74  F03E    	movff	postdec2,btemp+11
  7887  0118A4  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  7888  0118AA  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  7889  0118B0  EC48  F0AE         	call	_strncmp	;wreg free
  7890  0118B4  5033               	movf	btemp^0,w,c
  7891  0118B6  1034               	iorwf	(btemp+1)^0,w,c
  7892  0118B8  A4D8               	btfss	status,2,c
  7893  0118BA  D069               	goto	l9956
  7894  0118BC                     u10420:
  7895                           
  7896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  7897                           ;stkvar	_fmt @ sp[(-32)+-4]
  7898  0118BC  0EDC               	movlw	-36
  7899  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7900  0118C4  0EDD               	movlw	-35
  7901  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7902  0118CC  0E02               	movlw	2
  7903  0118CE  26DE               	addwf	postinc2,f,c
  7904  0118D0  0E00               	movlw	0
  7905  0118D2  22DD               	addwfc	postdec2,f,c
  7906                           
  7907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  7908                           ;stkvar	_ap @ sp[(-32)+-6]
  7909  0118D4  0EDA               	movlw	-38
  7910  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7911  0118DC  0EDB               	movlw	-37
  7912  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7913  0118E4  0E04               	movlw	4
  7914  0118E6  5EDE               	subwf	postinc2,f,c
  7915  0118E8  0E00               	movlw	0
  7916  0118EA  5ADD               	subwfb	postdec2,f,c
  7917  0118EC  006F FF78  F03D    	movff	postinc2,btemp+10
  7918  0118F2  006F FF74  F03E    	movff	postdec2,btemp+11
  7919  0118F8  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
  7920  0118FE  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
  7921  011904  006F FF78  F03B    	movff	postinc2,btemp+8
  7922  01190A  006F FF78  F03C    	movff	postinc2,btemp+9
  7923  011910  006F FF78  F03D    	movff	postinc2,btemp+10
  7924  011916  006F FF78  F03E    	movff	postinc2,btemp+11
  7925  01191C  0060  F0EC  F043   	movff	btemp+8,btemp+16
  7926  011922  0060  F0F0  F044   	movff	btemp+9,btemp+17
  7927  011928  0060  F0F4  F045   	movff	btemp+10,btemp+18
  7928  01192E  0060  F0F8  F046   	movff	btemp+11,btemp+19
  7929  011934  6A47               	clrf	(btemp+20)^0,c
  7930  011936  BE46               	btfsc	(btemp+19)^0,7,c
  7931  011938  6847               	setf	(btemp+20)^0,c
  7932  01193A  0060  F11C  F048   	movff	btemp+20,btemp+21
  7933  011940  0060  F11C  F049   	movff	btemp+20,btemp+22
  7934  011946  0060  F11C  F04A   	movff	btemp+20,btemp+23
  7935                           
  7936                           ;stkvar	_ll @ sp[(-32)+14]
  7937  01194C  0EEE               	movlw	-18
  7938  01194E  0060  F10F  FFE3   	movff	btemp+16,plusw1
  7939  011954  0EEF               	movlw	-17
  7940  011956  0060  F113  FFE3   	movff	btemp+17,plusw1
  7941  01195C  0EF0               	movlw	-16
  7942  01195E  0060  F117  FFE3   	movff	btemp+18,plusw1
  7943  011964  0EF1               	movlw	-15
  7944  011966  0060  F11B  FFE3   	movff	btemp+19,plusw1
  7945  01196C  0EF2               	movlw	-14
  7946  01196E  0060  F11F  FFE3   	movff	btemp+20,plusw1
  7947  011974  0EF3               	movlw	-13
  7948  011976  0060  F123  FFE3   	movff	btemp+21,plusw1
  7949  01197C  0EF4               	movlw	-12
  7950  01197E  0060  F127  FFE3   	movff	btemp+22,plusw1
  7951  011984  0EF5               	movlw	-11
  7952  011986  0060  F12B  FFE3   	movff	btemp+23,plusw1
  7953  01198C  D729               	goto	l9940
  7954  01198E                     l9956:
  7955                           
  7956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7957                           ;stkvar	_ct @ sp[(-32)+26]
  7958  01198E  0EFA               	movlw	-6
  7959  011990  006F FF8C  F033    	movff	plusw1,btemp
  7960  011996  0E66               	movlw	102
  7961  011998  1833               	xorwf	btemp^0,w,c
  7962  01199A  A4D8               	btfss	status,2,c
  7963  01199C  D06E               	goto	l9968
  7964                           
  7965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7966                           ;stkvar	_fmt @ sp[(-32)+-4]
  7967  01199E  0EDC               	movlw	-36
  7968  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7969  0119A6  0EDD               	movlw	-35
  7970  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7971  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
  7972  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
  7973  0119BA                     	if	0	;tblptru may be non-zero
  7974  0119BA                     	endif
  7975  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7976  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
  7977  0119BC  6EF8               	movwf	tblptru,c
  7978  0119BE                     	endif
  7979                           
  7980                           ;stkvar	_c @ sp[(-32)+31]
  7981  0119BE  0008               	tblrd		*
  7982  0119C0  0EFF               	movlw	-1
  7983  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
  7984                           
  7985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7986                           ;stkvar	_fmt @ sp[(-32)+-4]
  7987  0119C8  0EDC               	movlw	-36
  7988  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7989  0119D0  0EDD               	movlw	-35
  7990  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7991  0119D8  2ADE               	incf	postinc2,f,c
  7992  0119DA  0E00               	movlw	0
  7993  0119DC  22DD               	addwfc	postdec2,f,c
  7994                           
  7995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7996                           ;stkvar	_ap @ sp[(-32)+-6]
  7997  0119DE  0EDA               	movlw	-38
  7998  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7999  0119E6  0EDB               	movlw	-37
  8000  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8001  0119EE  0E04               	movlw	4
  8002  0119F0  5EDE               	subwf	postinc2,f,c
  8003  0119F2  0E00               	movlw	0
  8004  0119F4  5ADD               	subwfb	postdec2,f,c
  8005  0119F6  006F FF78  F03D    	movff	postinc2,btemp+10
  8006  0119FC  006F FF74  F03E    	movff	postdec2,btemp+11
  8007  011A02  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
  8008  011A08  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
  8009  011A0E  006F FF78  F03B    	movff	postinc2,btemp+8
  8010  011A14  006F FF78  F03C    	movff	postinc2,btemp+9
  8011  011A1A  006F FF78  F03D    	movff	postinc2,btemp+10
  8012  011A20  006F FF78  F03E    	movff	postinc2,btemp+11
  8013                           
  8014                           ;stkvar	_f @ sp[(-32)+22]
  8015  011A26  0EF6               	movlw	-10
  8016  011A28  0060  F0EF  FFE3   	movff	btemp+8,plusw1
  8017  011A2E  0EF7               	movlw	-9
  8018  011A30  0060  F0F3  FFE3   	movff	btemp+9,plusw1
  8019  011A36  0EF8               	movlw	-8
  8020  011A38  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  8021  011A3E  0EF9               	movlw	-7
  8022  011A40  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  8023  011A46                     l9964:
  8024                           
  8025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8026                           ;stkvar	_c @ sp[(-32)+31]
  8027  011A46  0EFF               	movlw	-1
  8028  011A48  50E3               	movf	plusw1,w,c
  8029  011A4A  6EE6               	movwf	postinc1,c
  8030                           
  8031                           ;stkvar	_f @ sp[(-33)+22]
  8032  011A4C  0EF5               	movlw	-11
  8033  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
  8034  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
  8035  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
  8036  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
  8037                           
  8038                           ;stkvar	_fp @ sp[(-37)+-2]
  8039  011A66  0ED9               	movlw	-39
  8040  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
  8041  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
  8042  011A74  EC00  F080         	call	_efgtoa	;wreg free
  8043  011A78  D3B6               	goto	l1992
  8044  011A7A                     l9968:
  8045                           
  8046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8047  011A7A  0E02               	movlw	2
  8048  011A7C  6EE6               	movwf	postinc1,c
  8049  011A7E  0E00               	movlw	0
  8050  011A80  6EE6               	movwf	postinc1,c
  8051  011A82  0EED               	movlw	low STR_51
  8052  011A84  6EE6               	movwf	postinc1,c
  8053  011A86  0EFF               	movlw	high STR_51
  8054  011A88  6EE6               	movwf	postinc1,c
  8055                           
  8056                           ;stkvar	_ct @ sp[(-36)+26]
  8057  011A8A  0EF6               	movlw	246
  8058  011A8C  24E1               	addwf	fsr1l,w,c
  8059  011A8E  6E33               	movwf	btemp^0,c
  8060  011A90  0EFF               	movlw	255
  8061  011A92  20E2               	addwfc	fsr1h,w,c
  8062  011A94  6E34               	movwf	(btemp+1)^0,c
  8063  011A96  0060  F0CF  FFE6   	movff	btemp,postinc1
  8064  011A9C  0060  F0D3  FFE6   	movff	btemp+1,postinc1
  8065  011AA2  EC48  F0AE         	call	_strncmp	;wreg free
  8066  011AA6  5033               	movf	btemp^0,w,c
  8067  011AA8  1034               	iorwf	(btemp+1)^0,w,c
  8068  011AAA  A4D8               	btfss	status,2,c
  8069  011AAC  D096               	goto	l9988
  8070                           
  8071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8072                           ;stkvar	_fmt @ sp[(-32)+-4]
  8073  011AAE  0EDC               	movlw	-36
  8074  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8075  011AB6  0EDD               	movlw	-35
  8076  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8077  011ABE  006F FF78  F03D    	movff	postinc2,btemp+10
  8078  011AC4  006F FF74  F03E    	movff	postdec2,btemp+11
  8079  011ACA  0E01               	movlw	1
  8080  011ACC  263D               	addwf	(btemp+10)^0,f,c
  8081  011ACE  0E00               	movlw	0
  8082  011AD0  223E               	addwfc	(btemp+11)^0,f,c
  8083  011AD2  0060  F0F7  FFF6   	movff	btemp+10,tblptrl
  8084  011AD8  0060  F0FB  FFF7   	movff	btemp+11,tblptrh
  8085  011ADE                     	if	0	;tblptru may be non-zero
  8086  011ADE                     	endif
  8087  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8088  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
  8089  011AE0  6EF8               	movwf	tblptru,c
  8090  011AE2                     	endif
  8091                           
  8092                           ;stkvar	_c @ sp[(-32)+31]
  8093  011AE2  0008               	tblrd		*
  8094  011AE4  0EFF               	movlw	-1
  8095  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
  8096  011AEC  0EBF               	movlw	191
  8097  011AEE  6E3D               	movwf	(btemp+10)^0,c
  8098  011AF0  0EFF               	movlw	255
  8099  011AF2  6E3E               	movwf	(btemp+11)^0,c
  8100                           
  8101                           ;stkvar	_fmt @ sp[(-32)+-4]
  8102  011AF4  0EDC               	movlw	-36
  8103  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8104  011AFC  0EDD               	movlw	-35
  8105  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8106  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
  8107  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8108  011B10                     	if	0	;tblptru may be non-zero
  8109  011B10                     	endif
  8110  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8111  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
  8112  011B12  6EF8               	movwf	tblptru,c
  8113  011B14                     	endif
  8114  011B14  0008               	tblrd		*
  8115  011B16  50F5               	movf	tablat,w,c
  8116  011B18  6E3B               	movwf	(btemp+8)^0,c
  8117  011B1A  6A3C               	clrf	(btemp+9)^0,c
  8118  011B1C  503D               	movf	(btemp+10)^0,w,c
  8119  011B1E  263B               	addwf	(btemp+8)^0,f,c
  8120  011B20  503E               	movf	(btemp+11)^0,w,c
  8121  011B22  223C               	addwfc	(btemp+9)^0,f,c
  8122  011B24  503C               	movf	(btemp+9)^0,w,c
  8123  011B26  E106               	bnz	u10450
  8124  011B28  0E1A               	movlw	26
  8125  011B2A  5C3B               	subwf	(btemp+8)^0,w,c
  8126  011B2C  B0D8               	btfsc	status,0,c
  8127  011B2E  D002               	goto	u10450
  8128  011B30  0E01               	movlw	1
  8129  011B32  D001               	goto	u10460
  8130  011B34                     u10450:
  8131  011B34  0E00               	movlw	0
  8132  011B36                     u10460:
  8133  011B36  6E3D               	movwf	(btemp+10)^0,c
  8134  011B38  6A3E               	clrf	(btemp+11)^0,c
  8135                           
  8136                           ;stkvar	_vfpfcnvrt$4326 @ sp[(-32)+2]
  8137  011B3A  0EE2               	movlw	-30
  8138  011B3C  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  8139  011B42  0EE3               	movlw	-29
  8140  011B44  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  8141                           
  8142                           ;stkvar	_vfpfcnvrt$4326 @ sp[(-32)+2]
  8143  011B4A  0EE2               	movlw	-30
  8144  011B4C  006F FF8C  F033    	movff	plusw1,btemp
  8145  011B52  0EE3               	movlw	-29
  8146  011B54  50E3               	movf	plusw1,w,c
  8147  011B56  1033               	iorwf	btemp^0,w,c
  8148                           
  8149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8150                           ;stkvar	_ap @ sp[(-32)+-6]
  8151                           
  8152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8153                           
  8154                           ;stkvar	_f @ sp[(-32)+22]
  8155                           
  8156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8157                           ;stkvar	_ap @ sp[(-32)+-6]
  8158  011B58  0EDA               	movlw	-38
  8159  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8160  011B60  0EDB               	movlw	-37
  8161  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
  8162  011B68  0E04               	movlw	4
  8163  011B6A  5EDE               	subwf	postinc2,f,c
  8164  011B6C  0E00               	movlw	0
  8165  011B6E  5ADD               	subwfb	postdec2,f,c
  8166  011B70  006F FF78  F03D    	movff	postinc2,btemp+10
  8167  011B76  006F FF74  F03E    	movff	postdec2,btemp+11
  8168  011B7C  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
  8169  011B82  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
  8170  011B88  006F FF78  F03B    	movff	postinc2,btemp+8
  8171  011B8E  006F FF78  F03C    	movff	postinc2,btemp+9
  8172  011B94  006F FF78  F03D    	movff	postinc2,btemp+10
  8173  011B9A  006F FF78  F03E    	movff	postinc2,btemp+11
  8174                           
  8175                           ;stkvar	_f @ sp[(-32)+22]
  8176  011BA0  0EF6               	movlw	-10
  8177  011BA2  0060  F0EF  FFE3   	movff	btemp+8,plusw1
  8178  011BA8  0EF7               	movlw	-9
  8179  011BAA  0060  F0F3  FFE3   	movff	btemp+9,plusw1
  8180  011BB0  0EF8               	movlw	-8
  8181  011BB2  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  8182  011BB8  0EF9               	movlw	-7
  8183  011BBA  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  8184                           
  8185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8186                           ;stkvar	_fmt @ sp[(-32)+-4]
  8187  011BC0  0EDC               	movlw	-36
  8188  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8189  011BC8  0EDD               	movlw	-35
  8190  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8191  011BD0  0E02               	movlw	2
  8192  011BD2  26DE               	addwf	postinc2,f,c
  8193  011BD4  0E00               	movlw	0
  8194  011BD6  22DD               	addwfc	postdec2,f,c
  8195  011BD8  D736               	goto	l9964
  8196  011BDA                     l9988:
  8197                           
  8198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8199                           ;stkvar	_fmt @ sp[(-32)+-4]
  8200  011BDA  0EDC               	movlw	-36
  8201  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8202  011BE2  0EDD               	movlw	-35
  8203  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8204  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8205  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8206  011BF6                     	if	0	;tblptru may be non-zero
  8207  011BF6                     	endif
  8208  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8209  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
  8210  011BF8  6EF8               	movwf	tblptru,c
  8211  011BFA                     	endif
  8212  011BFA  0008               	tblrd		*
  8213  011BFC  50F5               	movf	tablat,w,c
  8214  011BFE  0A73               	xorlw	115
  8215  011C00  A4D8               	btfss	status,2,c
  8216  011C02  D042               	goto	l9998
  8217                           
  8218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8219                           ;stkvar	_fmt @ sp[(-32)+-4]
  8220  011C04  0EDC               	movlw	-36
  8221  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8222  011C0C  0EDD               	movlw	-35
  8223  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8224  011C14  2ADE               	incf	postinc2,f,c
  8225  011C16  0E00               	movlw	0
  8226  011C18  22DD               	addwfc	postdec2,f,c
  8227                           
  8228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8229                           ;stkvar	_ap @ sp[(-32)+-6]
  8230  011C1A  0EDA               	movlw	-38
  8231  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8232  011C22  0EDB               	movlw	-37
  8233  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
  8234  011C2A  0E02               	movlw	2
  8235  011C2C  5EDE               	subwf	postinc2,f,c
  8236  011C2E  0E00               	movlw	0
  8237  011C30  5ADD               	subwfb	postdec2,f,c
  8238  011C32  006F FF78  F03D    	movff	postinc2,btemp+10
  8239  011C38  006F FF74  F03E    	movff	postdec2,btemp+11
  8240  011C3E  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
  8241  011C44  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
  8242  011C4A  006F FF78  F03D    	movff	postinc2,btemp+10
  8243  011C50  006F FF74  F03E    	movff	postdec2,btemp+11
  8244                           
  8245                           ;stkvar	_cp @ sp[(-32)+29]
  8246  011C56  0EFE               	movlw	-2
  8247  011C58  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  8248  011C5E  0EFD               	movlw	-3
  8249  011C60  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  8250                           
  8251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8252                           ;stkvar	_cp @ sp[(-32)+29]
  8253  011C66  0EFD               	movlw	-3
  8254  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
  8255  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
  8256                           
  8257                           ;stkvar	_fp @ sp[(-34)+-2]
  8258  011C74  0EDC               	movlw	-36
  8259  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
  8260  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
  8261  011C82  EC4F  F0A9         	call	_stoa	;wreg free
  8262  011C86  D2AF               	goto	l1992
  8263  011C88                     l9998:
  8264                           
  8265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  8266                           ;stkvar	_fmt @ sp[(-32)+-4]
  8267  011C88  0EDC               	movlw	-36
  8268  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8269  011C90  0EDD               	movlw	-35
  8270  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
  8271  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
  8272  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8273  011CA4                     	if	0	;tblptru may be non-zero
  8274  011CA4                     	endif
  8275  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8276  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
  8277  011CA6  6EF8               	movwf	tblptru,c
  8278  011CA8                     	endif
  8279  011CA8  0008               	tblrd		*
  8280  011CAA  50F5               	movf	tablat,w,c
  8281  011CAC  0A75               	xorlw	117
  8282  011CAE  A4D8               	btfss	status,2,c
  8283  011CB0  D07C               	goto	l10008
  8284                           
  8285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  8286                           ;stkvar	_fmt @ sp[(-32)+-4]
  8287  011CB2  0EDC               	movlw	-36
  8288  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8289  011CBA  0EDD               	movlw	-35
  8290  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8291  011CC2  2ADE               	incf	postinc2,f,c
  8292  011CC4  0E00               	movlw	0
  8293  011CC6  22DD               	addwfc	postdec2,f,c
  8294                           
  8295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8296                           ;stkvar	_ap @ sp[(-32)+-6]
  8297  011CC8  0EDA               	movlw	-38
  8298  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8299  011CD0  0EDB               	movlw	-37
  8300  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8301  011CD8  0E02               	movlw	2
  8302  011CDA  5EDE               	subwf	postinc2,f,c
  8303  011CDC  0E00               	movlw	0
  8304  011CDE  5ADD               	subwfb	postdec2,f,c
  8305  011CE0  006F FF78  F03D    	movff	postinc2,btemp+10
  8306  011CE6  006F FF74  F03E    	movff	postdec2,btemp+11
  8307  011CEC  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
  8308  011CF2  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
  8309  011CF8  006F FF78  F03D    	movff	postinc2,btemp+10
  8310  011CFE  006F FF74  F03E    	movff	postdec2,btemp+11
  8311  011D04  503D               	movf	(btemp+10)^0,w,c
  8312  011D06  6E43               	movwf	(btemp+16)^0,c
  8313  011D08  503E               	movf	(btemp+11)^0,w,c
  8314  011D0A  6E44               	movwf	(btemp+17)^0,c
  8315  011D0C  6A45               	clrf	(btemp+18)^0,c
  8316  011D0E  6A46               	clrf	(btemp+19)^0,c
  8317  011D10  6A47               	clrf	(btemp+20)^0,c
  8318  011D12  6A48               	clrf	(btemp+21)^0,c
  8319  011D14  6A49               	clrf	(btemp+22)^0,c
  8320  011D16  6A4A               	clrf	(btemp+23)^0,c
  8321                           
  8322                           ;stkvar	_llu @ sp[(-32)+6]
  8323  011D18  0EE6               	movlw	-26
  8324  011D1A  0060  F10F  FFE3   	movff	btemp+16,plusw1
  8325  011D20  0EE7               	movlw	-25
  8326  011D22  0060  F113  FFE3   	movff	btemp+17,plusw1
  8327  011D28  0EE8               	movlw	-24
  8328  011D2A  0060  F117  FFE3   	movff	btemp+18,plusw1
  8329  011D30  0EE9               	movlw	-23
  8330  011D32  0060  F11B  FFE3   	movff	btemp+19,plusw1
  8331  011D38  0EEA               	movlw	-22
  8332  011D3A  0060  F11F  FFE3   	movff	btemp+20,plusw1
  8333  011D40  0EEB               	movlw	-21
  8334  011D42  0060  F123  FFE3   	movff	btemp+21,plusw1
  8335  011D48  0EEC               	movlw	-20
  8336  011D4A  0060  F127  FFE3   	movff	btemp+22,plusw1
  8337  011D50  0EED               	movlw	-19
  8338  011D52  0060  F12B  FFE3   	movff	btemp+23,plusw1
  8339                           
  8340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
  8341                           ;stkvar	_llu @ sp[(-32)+6]
  8342  011D58  50E1               	movf	fsr1l,w,c
  8343  011D5A  0FE6               	addlw	-26
  8344  011D5C  6ED9               	movwf	fsr2l,c
  8345  011D5E  50E2               	movf	fsr1h,w,c
  8346  011D60  6EDA               	movwf	fsr2h,c
  8347  011D62  0EFF               	movlw	255
  8348  011D64  22DA               	addwfc	fsr2h,f,c
  8349  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  8350  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  8351  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  8352  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
  8353  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  8354  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  8355  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  8356  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  8357                           
  8358                           ;stkvar	_fp @ sp[(-40)+-2]
  8359  011D96  0ED6               	movlw	-42
  8360  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
  8361  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
  8362  011DA4  EC39  F0A6         	call	_utoa	;wreg free
  8363  011DA8  D21E               	goto	l1992
  8364  011DAA                     l10008:
  8365                           
  8366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  8367  011DAA  0E02               	movlw	2
  8368  011DAC  6EE6               	movwf	postinc1,c
  8369  011DAE  0E00               	movlw	0
  8370  011DB0  6EE6               	movwf	postinc1,c
  8371  011DB2  0EF3               	movlw	low STR_56
  8372  011DB4  6EE6               	movwf	postinc1,c
  8373  011DB6  0EFF               	movlw	high STR_56
  8374  011DB8  6EE6               	movwf	postinc1,c
  8375                           
  8376                           ;stkvar	_fmt @ sp[(-36)+-4]
  8377  011DBA  0ED8               	movlw	-40
  8378  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8379  011DC2  0ED9               	movlw	-39
  8380  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8381  011DCA  006F FF78  F03D    	movff	postinc2,btemp+10
  8382  011DD0  006F FF74  F03E    	movff	postdec2,btemp+11
  8383  011DD6  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  8384  011DDC  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  8385  011DE2  EC48  F0AE         	call	_strncmp	;wreg free
  8386  011DE6  5033               	movf	btemp^0,w,c
  8387  011DE8  1034               	iorwf	(btemp+1)^0,w,c
  8388  011DEA  A4D8               	btfss	status,2,c
  8389  011DEC  D039               	goto	l10018
  8390                           
  8391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  8392                           ;stkvar	_fmt @ sp[(-32)+-4]
  8393  011DEE  0EDC               	movlw	-36
  8394  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8395  011DF6  0EDD               	movlw	-35
  8396  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8397  011DFE  0E02               	movlw	2
  8398  011E00  26DE               	addwf	postinc2,f,c
  8399  011E02  0E00               	movlw	0
  8400  011E04  22DD               	addwfc	postdec2,f,c
  8401                           
  8402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8403                           ;stkvar	_ap @ sp[(-32)+-6]
  8404  011E06  0EDA               	movlw	-38
  8405  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
  8406  011E0E  0EDB               	movlw	-37
  8407  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
  8408  011E16  0E04               	movlw	4
  8409  011E18  5EDE               	subwf	postinc2,f,c
  8410  011E1A  0E00               	movlw	0
  8411  011E1C  5ADD               	subwfb	postdec2,f,c
  8412  011E1E  006F FF78  F03D    	movff	postinc2,btemp+10
  8413  011E24  006F FF74  F03E    	movff	postdec2,btemp+11
  8414  011E2A  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
  8415  011E30  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
  8416  011E36  006F FF78  F03B    	movff	postinc2,btemp+8
  8417  011E3C  006F FF78  F03C    	movff	postinc2,btemp+9
  8418  011E42  006F FF78  F03D    	movff	postinc2,btemp+10
  8419  011E48  006F FF78  F03E    	movff	postinc2,btemp+11
  8420  011E4E  503B               	movf	(btemp+8)^0,w,c
  8421  011E50  6E43               	movwf	(btemp+16)^0,c
  8422  011E52  503C               	movf	(btemp+9)^0,w,c
  8423  011E54  6E44               	movwf	(btemp+17)^0,c
  8424  011E56  503D               	movf	(btemp+10)^0,w,c
  8425  011E58  6E45               	movwf	(btemp+18)^0,c
  8426  011E5A  503E               	movf	(btemp+11)^0,w,c
  8427  011E5C  6E46               	movwf	(btemp+19)^0,c
  8428  011E5E  D758               	goto	L5
  8429  011E60                     l10018:
  8430                           
  8431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8432                           ;stkvar	_fmt @ sp[(-32)+-4]
  8433  011E60  0EDC               	movlw	-36
  8434  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8435  011E68  0EDD               	movlw	-35
  8436  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8437  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
  8438  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
  8439  011E7C                     	if	0	;tblptru may be non-zero
  8440  011E7C                     	endif
  8441  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8442  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
  8443  011E7E  6EF8               	movwf	tblptru,c
  8444  011E80                     	endif
  8445  011E80  0008               	tblrd		*
  8446  011E82  50F5               	movf	tablat,w,c
  8447  011E84  0A78               	xorlw	120
  8448  011E86  B4D8               	btfsc	status,2,c
  8449  011E88  D015               	goto	u10520
  8450                           
  8451                           ;stkvar	_fmt @ sp[(-32)+-4]
  8452  011E8A  0EDC               	movlw	-36
  8453  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8454  011E92  0EDD               	movlw	-35
  8455  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
  8456  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8457  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8458  011EA6                     	if	0	;tblptru may be non-zero
  8459  011EA6                     	endif
  8460  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8461  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
  8462  011EA8  6EF8               	movwf	tblptru,c
  8463  011EAA                     	endif
  8464  011EAA  0008               	tblrd		*
  8465  011EAC  50F5               	movf	tablat,w,c
  8466  011EAE  0A58               	xorlw	88
  8467  011EB0  A4D8               	btfss	status,2,c
  8468  011EB2  D094               	goto	l10032
  8469  011EB4                     u10520:
  8470                           
  8471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8472                           ;stkvar	_fmt @ sp[(-32)+-4]
  8473  011EB4  0EDC               	movlw	-36
  8474  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8475  011EBC  0EDD               	movlw	-35
  8476  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8477  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
  8478  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
  8479  011ED0                     	if	0	;tblptru may be non-zero
  8480  011ED0                     	endif
  8481  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8482  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
  8483  011ED2  6EF8               	movwf	tblptru,c
  8484  011ED4                     	endif
  8485                           
  8486                           ;stkvar	_c @ sp[(-32)+31]
  8487  011ED4  0008               	tblrd		*
  8488  011ED6  0EFF               	movlw	-1
  8489  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
  8490                           
  8491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8492                           ;stkvar	_fmt @ sp[(-32)+-4]
  8493  011EDE  0EDC               	movlw	-36
  8494  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8495  011EE6  0EDD               	movlw	-35
  8496  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8497  011EEE  2ADE               	incf	postinc2,f,c
  8498  011EF0  0E00               	movlw	0
  8499  011EF2  22DD               	addwfc	postdec2,f,c
  8500                           
  8501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8502                           ;stkvar	_ap @ sp[(-32)+-6]
  8503  011EF4  0EDA               	movlw	-38
  8504  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8505  011EFC  0EDB               	movlw	-37
  8506  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8507  011F04  0E02               	movlw	2
  8508  011F06  5EDE               	subwf	postinc2,f,c
  8509  011F08  0E00               	movlw	0
  8510  011F0A  5ADD               	subwfb	postdec2,f,c
  8511  011F0C  006F FF78  F03D    	movff	postinc2,btemp+10
  8512  011F12  006F FF74  F03E    	movff	postdec2,btemp+11
  8513  011F18  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
  8514  011F1E  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
  8515  011F24  006F FF78  F03D    	movff	postinc2,btemp+10
  8516  011F2A  006F FF74  F03E    	movff	postdec2,btemp+11
  8517  011F30  503D               	movf	(btemp+10)^0,w,c
  8518  011F32  6E43               	movwf	(btemp+16)^0,c
  8519  011F34  503E               	movf	(btemp+11)^0,w,c
  8520  011F36  6E44               	movwf	(btemp+17)^0,c
  8521  011F38  6A45               	clrf	(btemp+18)^0,c
  8522  011F3A  6A46               	clrf	(btemp+19)^0,c
  8523  011F3C  6A47               	clrf	(btemp+20)^0,c
  8524  011F3E  6A48               	clrf	(btemp+21)^0,c
  8525  011F40  6A49               	clrf	(btemp+22)^0,c
  8526  011F42  6A4A               	clrf	(btemp+23)^0,c
  8527                           
  8528                           ;stkvar	_llu @ sp[(-32)+6]
  8529  011F44  0EE6               	movlw	-26
  8530  011F46  0060  F10F  FFE3   	movff	btemp+16,plusw1
  8531  011F4C  0EE7               	movlw	-25
  8532  011F4E  0060  F113  FFE3   	movff	btemp+17,plusw1
  8533  011F54  0EE8               	movlw	-24
  8534  011F56  0060  F117  FFE3   	movff	btemp+18,plusw1
  8535  011F5C  0EE9               	movlw	-23
  8536  011F5E  0060  F11B  FFE3   	movff	btemp+19,plusw1
  8537  011F64  0EEA               	movlw	-22
  8538  011F66  0060  F11F  FFE3   	movff	btemp+20,plusw1
  8539  011F6C  0EEB               	movlw	-21
  8540  011F6E  0060  F123  FFE3   	movff	btemp+21,plusw1
  8541  011F74  0EEC               	movlw	-20
  8542  011F76  0060  F127  FFE3   	movff	btemp+22,plusw1
  8543  011F7C  0EED               	movlw	-19
  8544  011F7E  0060  F12B  FFE3   	movff	btemp+23,plusw1
  8545                           
  8546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8547                           ;stkvar	_c @ sp[(-32)+31]
  8548  011F84  0EFF               	movlw	-1
  8549  011F86  50E3               	movf	plusw1,w,c
  8550  011F88  6EE6               	movwf	postinc1,c
  8551                           
  8552                           ;stkvar	_llu @ sp[(-33)+6]
  8553  011F8A  50E1               	movf	fsr1l,w,c
  8554  011F8C  0FE5               	addlw	-27
  8555  011F8E  6ED9               	movwf	fsr2l,c
  8556  011F90  50E2               	movf	fsr1h,w,c
  8557  011F92  6EDA               	movwf	fsr2h,c
  8558  011F94  0EFF               	movlw	255
  8559  011F96  22DA               	addwfc	fsr2h,f,c
  8560  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
  8561  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  8562  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
  8563  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  8564  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  8565  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  8566  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  8567  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  8568                           
  8569                           ;stkvar	_fp @ sp[(-41)+-2]
  8570  011FC8  0ED5               	movlw	-43
  8571  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
  8572  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
  8573  011FD6  ECA6  F0A2         	call	_xtoa	;wreg free
  8574  011FDA  D105               	goto	l1992
  8575  011FDC                     l10032:
  8576                           
  8577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  8578  011FDC  0E02               	movlw	2
  8579  011FDE  6EE6               	movwf	postinc1,c
  8580  011FE0  0E00               	movlw	0
  8581  011FE2  6EE6               	movwf	postinc1,c
  8582  011FE4  0EF6               	movlw	low STR_61
  8583  011FE6  6EE6               	movwf	postinc1,c
  8584  011FE8  0EFF               	movlw	high STR_61
  8585  011FEA  6EE6               	movwf	postinc1,c
  8586                           
  8587                           ;stkvar	_fmt @ sp[(-36)+-4]
  8588  011FEC  0ED8               	movlw	-40
  8589  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8590  011FF4  0ED9               	movlw	-39
  8591  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8592  011FFC  006F FF78  F03D    	movff	postinc2,btemp+10
  8593  012002  006F FF74  F03E    	movff	postdec2,btemp+11
  8594  012008  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  8595  01200E  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  8596  012014  EC48  F0AE         	call	_strncmp	;wreg free
  8597  012018  5033               	movf	btemp^0,w,c
  8598  01201A  1034               	iorwf	(btemp+1)^0,w,c
  8599  01201C  B4D8               	btfsc	status,2,c
  8600  01201E  D022               	goto	u10540
  8601  012020  0E02               	movlw	2
  8602  012022  6EE6               	movwf	postinc1,c
  8603  012024  0E00               	movlw	0
  8604  012026  6EE6               	movwf	postinc1,c
  8605  012028  0EE7               	movlw	low STR_65
  8606  01202A  6EE6               	movwf	postinc1,c
  8607  01202C  0EFF               	movlw	high STR_65
  8608  01202E  6EE6               	movwf	postinc1,c
  8609                           
  8610                           ;stkvar	_fmt @ sp[(-36)+-4]
  8611  012030  0ED8               	movlw	-40
  8612  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
  8613  012038  0ED9               	movlw	-39
  8614  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8615  012040  006F FF78  F03D    	movff	postinc2,btemp+10
  8616  012046  006F FF74  F03E    	movff	postdec2,btemp+11
  8617  01204C  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  8618  012052  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  8619  012058  EC48  F0AE         	call	_strncmp	;wreg free
  8620  01205C  5033               	movf	btemp^0,w,c
  8621  01205E  1034               	iorwf	(btemp+1)^0,w,c
  8622  012060  A4D8               	btfss	status,2,c
  8623  012062  D058               	goto	l10046
  8624  012064                     u10540:
  8625                           
  8626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  8627                           ;stkvar	_fmt @ sp[(-32)+-4]
  8628  012064  0EDC               	movlw	-36
  8629  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
  8630  01206C  0EDD               	movlw	-35
  8631  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8632  012074  006F FF78  F03D    	movff	postinc2,btemp+10
  8633  01207A  006F FF74  F03E    	movff	postdec2,btemp+11
  8634  012080  0E01               	movlw	1
  8635  012082  263D               	addwf	(btemp+10)^0,f,c
  8636  012084  0E00               	movlw	0
  8637  012086  223E               	addwfc	(btemp+11)^0,f,c
  8638  012088  0060  F0F7  FFF6   	movff	btemp+10,tblptrl
  8639  01208E  0060  F0FB  FFF7   	movff	btemp+11,tblptrh
  8640  012094                     	if	0	;tblptru may be non-zero
  8641  012094                     	endif
  8642  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8643  012094  0E00               	movlw	low (__mediumconst shr (0+16))
  8644  012096  6EF8               	movwf	tblptru,c
  8645  012098                     	endif
  8646                           
  8647                           ;stkvar	_c @ sp[(-32)+31]
  8648  012098  0008               	tblrd		*
  8649  01209A  0EFF               	movlw	-1
  8650  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
  8651                           
  8652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  8653                           ;stkvar	_fmt @ sp[(-32)+-4]
  8654  0120A2  0EDC               	movlw	-36
  8655  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8656  0120AA  0EDD               	movlw	-35
  8657  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8658  0120B2  0E02               	movlw	2
  8659  0120B4  26DE               	addwf	postinc2,f,c
  8660  0120B6  0E00               	movlw	0
  8661  0120B8  22DD               	addwfc	postdec2,f,c
  8662                           
  8663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8664                           ;stkvar	_ap @ sp[(-32)+-6]
  8665  0120BA  0EDA               	movlw	-38
  8666  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8667  0120C2  0EDB               	movlw	-37
  8668  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8669  0120CA  0E04               	movlw	4
  8670  0120CC  5EDE               	subwf	postinc2,f,c
  8671  0120CE  0E00               	movlw	0
  8672  0120D0  5ADD               	subwfb	postdec2,f,c
  8673  0120D2  006F FF78  F03D    	movff	postinc2,btemp+10
  8674  0120D8  006F FF74  F03E    	movff	postdec2,btemp+11
  8675  0120DE  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
  8676  0120E4  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
  8677  0120EA  006F FF78  F03B    	movff	postinc2,btemp+8
  8678  0120F0  006F FF78  F03C    	movff	postinc2,btemp+9
  8679  0120F6  006F FF78  F03D    	movff	postinc2,btemp+10
  8680  0120FC  006F FF78  F03E    	movff	postinc2,btemp+11
  8681  012102  503B               	movf	(btemp+8)^0,w,c
  8682  012104  6E43               	movwf	(btemp+16)^0,c
  8683  012106  503C               	movf	(btemp+9)^0,w,c
  8684  012108  6E44               	movwf	(btemp+17)^0,c
  8685  01210A  503D               	movf	(btemp+10)^0,w,c
  8686  01210C  6E45               	movwf	(btemp+18)^0,c
  8687  01210E  503E               	movf	(btemp+11)^0,w,c
  8688  012110  6E46               	movwf	(btemp+19)^0,c
  8689  012112  D714               	goto	L6
  8690  012114                     l10046:
  8691                           
  8692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8693                           ;stkvar	_fmt @ sp[(-32)+-4]
  8694  012114  0EDC               	movlw	-36
  8695  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
  8696  01211C  0EDD               	movlw	-35
  8697  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8698  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
  8699  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8700  012130                     	if	0	;tblptru may be non-zero
  8701  012130                     	endif
  8702  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8703  012130  0E00               	movlw	low (__mediumconst shr (0+16))
  8704  012132  6EF8               	movwf	tblptru,c
  8705  012134                     	endif
  8706  012134  0008               	tblrd		*
  8707  012136  50F5               	movf	tablat,w,c
  8708  012138  0A25               	xorlw	37
  8709  01213A  A4D8               	btfss	status,2,c
  8710  01213C  D01A               	goto	l10056
  8711                           
  8712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8713                           ;stkvar	_fmt @ sp[(-32)+-4]
  8714  01213E  0EDC               	movlw	-36
  8715  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
  8716  012146  0EDD               	movlw	-35
  8717  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
  8718  01214E  2ADE               	incf	postinc2,f,c
  8719  012150  0E00               	movlw	0
  8720  012152  22DD               	addwfc	postdec2,f,c
  8721                           
  8722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8723                           ;stkvar	_fp @ sp[(-32)+-2]
  8724  012154  0EDE               	movlw	-34
  8725  012156  006F FF8F FFE6     	movff	plusw1,postinc1
  8726  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
  8727  012162  0E25               	movlw	37
  8728  012164  6EE6               	movwf	postinc1,c
  8729  012166  0E00               	movlw	0
  8730  012168  6EE6               	movwf	postinc1,c
  8731  01216A  EC16  F0B7         	call	_fputc	;wreg free
  8732  01216E                     l10052:
  8733                           
  8734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8735  01216E  0E01               	movlw	1
  8736  012170  D00C               	goto	L7
  8737  012172                     l10056:
  8738                           
  8739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8740                           ;stkvar	_fmt @ sp[(-32)+-4]
  8741  012172  0EDC               	movlw	-36
  8742  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
  8743  01217A  0EDD               	movlw	-35
  8744  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8745  012182  2ADE               	incf	postinc2,f,c
  8746  012184  0E00               	movlw	0
  8747  012186  22DD               	addwfc	postdec2,f,c
  8748                           
  8749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8750  012188  0E00               	movlw	0
  8751  01218A                     L7:
  8752  01218A  6E33               	movwf	btemp^0,c
  8753  01218C  0E00               	movlw	0
  8754  01218E  6E34               	movwf	(btemp+1)^0,c
  8755  012190  D02A               	goto	l1992
  8756  012192                     l10062:
  8757                           
  8758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8759                           ;stkvar	_fp @ sp[(-32)+-2]
  8760  012192  0EDE               	movlw	-34
  8761  012194  006F FF8F FFE6     	movff	plusw1,postinc1
  8762  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
  8763                           
  8764                           ;stkvar	_fmt @ sp[(-34)+-4]
  8765  0121A0  0EDA               	movlw	-38
  8766  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8767  0121A8  0EDB               	movlw	-37
  8768  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8769  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
  8770  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
  8771  0121BC                     	if	0	;tblptru may be non-zero
  8772  0121BC                     	endif
  8773  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8774  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8775  0121BE  6EF8               	movwf	tblptru,c
  8776  0121C0                     	endif
  8777  0121C0  0008               	tblrd		*
  8778  0121C2  50F5               	movf	tablat,w,c
  8779  0121C4  6EE6               	movwf	postinc1,c
  8780  0121C6  0E00               	movlw	0
  8781  0121C8  6EE6               	movwf	postinc1,c
  8782  0121CA  EC16  F0B7         	call	_fputc	;wreg free
  8783                           
  8784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8785                           ;stkvar	_fmt @ sp[(-32)+-4]
  8786  0121CE  0EDC               	movlw	-36
  8787  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8788  0121D6  0EDD               	movlw	-35
  8789  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8790  0121DE  2ADE               	incf	postinc2,f,c
  8791  0121E0  0E00               	movlw	0
  8792  0121E2  22DD               	addwfc	postdec2,f,c
  8793  0121E4  D7C4               	goto	l10052
  8794  0121E6                     l1992:
  8795                           
  8796                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8797  0121E6  0EDA               	movlw	218
  8798  0121E8  26E1               	addwf	fsr1l,f,c
  8799  0121EA  0EFF               	movlw	255
  8800  0121EC  22E2               	addwfc	fsr1h,f,c
  8801  0121EE  0012               	return		;funcret
  8802  0121F0                     __end_of_vfpfcnvrt:
  8803                           	opt callstack 0
  8804                           
  8805 ;; *************** function _xtoa *****************
  8806 ;; Defined at:
  8807 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8808 ;; Parameters:    Size  Location     Type
  8809 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8810 ;;		 -> f(6), NULL(0), 
  8811 ;;  d               8  [STACK] unsigned long long 
  8812 ;;  x               1  [STACK] unsigned char 
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;  n               8  [STACK] unsigned long long 
  8815 ;;  c               2  [STACK] int 
  8816 ;;  i               2  [STACK] int 
  8817 ;;  w               2  [STACK] int 
  8818 ;;  p               2  [STACK] int 
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  2  [STACK] int 
  8821 ;; Registers used:
  8822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8832 ;;Total ram usage:        0 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; Hardware stack levels required when called:   11
  8835 ;; This function calls:
  8836 ;;		_isalpha
  8837 ;;		_isupper
  8838 ;;		_pad
  8839 ;;		_toupper
  8840 ;; This function is called by:
  8841 ;;		_vfpfcnvrt
  8842 ;; This function uses a reentrant model
  8843 ;;
  8844                           
  8845                           	psect	text37
  8846  01454C                     __ptext37:
  8847                           	opt callstack 0
  8848  01454C                     _xtoa:
  8849                           	opt callstack 0
  8850                           
  8851                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8852  01454C  0E14               	movlw	20
  8853  01454E  26E1               	addwf	fsr1l,f,c
  8854  014550  0E00               	movlw	0
  8855  014552  22E2               	addwfc	fsr1h,f,c
  8856                           
  8857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8858                           
  8859                           ;incstack = 0
  8860  014554  AE1F               	btfss	(_prec+1)^0,7,c
  8861                           
  8862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8863  014556  9220               	bcf	_flags^0,1,c
  8864                           
  8865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8866  014558  BE1F               	btfsc	(_prec+1)^0,7,c
  8867  01455A  D005               	goto	u10080
  8868  01455C  501F               	movf	(_prec+1)^0,w,c
  8869  01455E  E110               	bnz	l9798
  8870  014560  041E               	decf	_prec^0,w,c
  8871  014562  B0D8               	btfsc	status,0,c
  8872  014564  D00D               	goto	l9798
  8873  014566                     u10080:
  8874  014566  0E01               	movlw	1
  8875  014568  6E3D               	movwf	(btemp+10)^0,c
  8876  01456A  0E00               	movlw	0
  8877  01456C  6E3E               	movwf	(btemp+11)^0,c
  8878                           
  8879                           ;stkvar	_p @ sp[(-20)+18]
  8880  01456E  0EFE               	movlw	-2
  8881  014570  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  8882  014576  0EFF               	movlw	-1
  8883  014578  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  8884  01457E  D008               	goto	l1942
  8885  014580                     l9798:
  8886                           
  8887                           ;stkvar	_p @ sp[(-20)+18]
  8888  014580  0EFE               	movlw	-2
  8889  014582  0060  F07B  FFE3   	movff	_prec,plusw1
  8890  014588  0EFF               	movlw	-1
  8891  01458A  0060  F07F  FFE3   	movff	_prec+1,plusw1
  8892  014590                     l1942:
  8893                           
  8894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8895                           ;stkvar	_w @ sp[(-20)+16]
  8896  014590  0EFC               	movlw	-4
  8897  014592  0060  F073  FFE3   	movff	_width,plusw1
  8898  014598  0EFD               	movlw	-3
  8899  01459A  0060  F077  FFE3   	movff	_width+1,plusw1
  8900                           
  8901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8902  0145A0  A820               	btfss	_flags^0,4,c
  8903  0145A2  D00B               	goto	l9804
  8904                           
  8905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8906                           ;stkvar	_w @ sp[(-20)+16]
  8907  0145A4  50E1               	movf	fsr1l,w,c
  8908  0145A6  0FFC               	addlw	-4
  8909  0145A8  6ED9               	movwf	fsr2l,c
  8910  0145AA  50E2               	movf	fsr1h,w,c
  8911  0145AC  6EDA               	movwf	fsr2h,c
  8912  0145AE  0EFF               	movlw	255
  8913  0145B0  22DA               	addwfc	fsr2h,f,c
  8914  0145B2  0EFE               	movlw	254
  8915  0145B4  26DE               	addwf	postinc2,f,c
  8916  0145B6  0EFF               	movlw	255
  8917  0145B8  22DD               	addwfc	postdec2,f,c
  8918  0145BA                     l9804:
  8919                           
  8920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8921                           ;stkvar	_d @ sp[(-20)+-10]
  8922  0145BA  0EE2               	movlw	226
  8923  0145BC  24E1               	addwf	fsr1l,w,c
  8924  0145BE  6ED9               	movwf	fsr2l,c
  8925  0145C0  0EFF               	movlw	255
  8926  0145C2  20E2               	addwfc	fsr1h,w,c
  8927  0145C4  6EDA               	movwf	fsr2h,c
  8928                           
  8929                           ;stkvar	_n @ sp[(-20)+4]
  8930  0145C6  0E08               	movlw	8
  8931  0145C8  6E33               	movwf	btemp^0,c
  8932  0145CA  0EF0               	movlw	-16
  8933  0145CC                     us1010999:
  8934  0145CC  006F FF7B FFE3     	movff	postinc2,plusw1
  8935  0145D2  28E8               	incf	wreg,w,c
  8936  0145D4  2E33               	decfsz	btemp^0,f,c
  8937  0145D6  D7FA               	bra	us1010999
  8938                           
  8939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8940  0145D8  0E4F               	movlw	79
  8941  0145DA  6E3D               	movwf	(btemp+10)^0,c
  8942  0145DC  0E00               	movlw	0
  8943  0145DE  6E3E               	movwf	(btemp+11)^0,c
  8944                           
  8945                           ;stkvar	_i @ sp[(-20)+14]
  8946  0145E0  0EFA               	movlw	-6
  8947  0145E2  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  8948  0145E8  0EFB               	movlw	-5
  8949  0145EA  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  8950                           
  8951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8952  0145F0  0102               	movlb	2	; () banked
  8953  0145F2  6BFB               	clrf	(_dbuf+79)& (0+255),b
  8954                           
  8955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8956  0145F4  D0EE               	goto	l9842
  8957  0145F6                     l9810:
  8958                           
  8959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8960                           ;stkvar	_i @ sp[(-20)+14]
  8961  0145F6  50E1               	movf	fsr1l,w,c
  8962  0145F8  0FFA               	addlw	-6
  8963  0145FA  6ED9               	movwf	fsr2l,c
  8964  0145FC  50E2               	movf	fsr1h,w,c
  8965  0145FE  6EDA               	movwf	fsr2h,c
  8966  014600  0EFF               	movlw	255
  8967  014602  22DA               	addwfc	fsr2h,f,c
  8968  014604  06DE               	decf	postinc2,f,c
  8969  014606  0E00               	movlw	0
  8970  014608  5ADD               	subwfb	postdec2,f,c
  8971                           
  8972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8973                           ;stkvar	_n @ sp[(-20)+4]
  8974  01460A  0EF0               	movlw	-16
  8975  01460C  006F FF8C  F03D    	movff	plusw1,btemp+10
  8976  014612  0EF1               	movlw	-15
  8977  014614  006F FF8C  F03E    	movff	plusw1,btemp+11
  8978  01461A  0E0F               	movlw	15
  8979  01461C  163D               	andwf	(btemp+10)^0,f,c
  8980  01461E  0E00               	movlw	0
  8981  014620  163E               	andwf	(btemp+11)^0,f,c
  8982                           
  8983                           ;stkvar	_c @ sp[(-20)+12]
  8984  014622  0EF8               	movlw	-8
  8985  014624  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  8986  01462A  0EF9               	movlw	-7
  8987  01462C  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  8988                           
  8989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8990                           ;stkvar	_c @ sp[(-20)+12]
  8991  014632  0EF9               	movlw	-7
  8992  014634  BEE3               	btfsc	plusw1,7,c
  8993  014636  D00F               	goto	l9818
  8994  014638  0EF9               	movlw	-7
  8995  01463A  50E3               	movf	plusw1,w,c
  8996  01463C  E108               	bnz	u10110
  8997  01463E  0EF8               	movlw	-8
  8998  014640  006F FF8C  F033    	movff	plusw1,btemp
  8999  014646  0E0A               	movlw	10
  9000  014648  5E33               	subwf	btemp^0,f,c
  9001  01464A  A0D8               	btfss	status,0,c
  9002  01464C  D004               	goto	l9818
  9003  01464E                     u10110:
  9004                           
  9005                           ;stkvar	_c @ sp[(-20)+12]
  9006  01464E  0EF8               	movlw	-8
  9007  014650  50E3               	movf	plusw1,w,c
  9008  014652  0F57               	addlw	87
  9009  014654  D003               	goto	L8
  9010  014656                     l9818:
  9011                           
  9012                           ;stkvar	_c @ sp[(-20)+12]
  9013  014656  0EF8               	movlw	-8
  9014  014658  50E3               	movf	plusw1,w,c
  9015  01465A  0F30               	addlw	48
  9016  01465C                     L8:
  9017  01465C  6E3D               	movwf	(btemp+10)^0,c
  9018  01465E  0EF9               	movlw	-7
  9019  014660  006F FF8C  F03E    	movff	plusw1,btemp+11
  9020  014666  0E00               	movlw	0
  9021  014668  223E               	addwfc	(btemp+11)^0,f,c
  9022                           
  9023                           ;stkvar	_c @ sp[(-20)+12]
  9024  01466A  0EF8               	movlw	-8
  9025  01466C  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  9026  014672  0EF9               	movlw	-7
  9027  014674  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  9028  01467A  0EBF               	movlw	191
  9029  01467C  6E3D               	movwf	(btemp+10)^0,c
  9030  01467E  0EFF               	movlw	255
  9031  014680  6E3E               	movwf	(btemp+11)^0,c
  9032                           
  9033                           ;stkvar	_x @ sp[(-20)+-11]
  9034  014682  0EE1               	movlw	-31
  9035  014684  50E3               	movf	plusw1,w,c
  9036  014686  6E3B               	movwf	(btemp+8)^0,c
  9037  014688  6A3C               	clrf	(btemp+9)^0,c
  9038  01468A  503D               	movf	(btemp+10)^0,w,c
  9039  01468C  263B               	addwf	(btemp+8)^0,f,c
  9040  01468E  503E               	movf	(btemp+11)^0,w,c
  9041  014690  223C               	addwfc	(btemp+9)^0,f,c
  9042  014692  503C               	movf	(btemp+9)^0,w,c
  9043  014694  E106               	bnz	u10120
  9044  014696  0E1A               	movlw	26
  9045  014698  5C3B               	subwf	(btemp+8)^0,w,c
  9046  01469A  B0D8               	btfsc	status,0,c
  9047  01469C  D002               	goto	u10120
  9048  01469E  0E01               	movlw	1
  9049  0146A0  D001               	goto	u10130
  9050  0146A2                     u10120:
  9051  0146A2  0E00               	movlw	0
  9052  0146A4                     u10130:
  9053  0146A4  6E3D               	movwf	(btemp+10)^0,c
  9054  0146A6  6A3E               	clrf	(btemp+11)^0,c
  9055                           
  9056                           ;stkvar	_xtoa$4299 @ sp[(-20)+2]
  9057  0146A8  0EEE               	movlw	-18
  9058  0146AA  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  9059  0146B0  0EEF               	movlw	-17
  9060  0146B2  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  9061                           
  9062                           ;stkvar	_xtoa$4299 @ sp[(-20)+2]
  9063  0146B8  0EEE               	movlw	-18
  9064  0146BA  006F FF8C  F033    	movff	plusw1,btemp
  9065  0146C0  0EEF               	movlw	-17
  9066  0146C2  50E3               	movf	plusw1,w,c
  9067  0146C4  1033               	iorwf	btemp^0,w,c
  9068  0146C6  B4D8               	btfsc	status,2,c
  9069  0146C8  D041               	goto	l9834
  9070  0146CA  0E9F               	movlw	159
  9071  0146CC  6E3D               	movwf	(btemp+10)^0,c
  9072  0146CE  0EFF               	movlw	255
  9073  0146D0  6E3E               	movwf	(btemp+11)^0,c
  9074                           
  9075                           ;stkvar	_c @ sp[(-20)+12]
  9076  0146D2  0EF8               	movlw	-8
  9077  0146D4  006F FF8C  F03B    	movff	plusw1,btemp+8
  9078  0146DA  0EF9               	movlw	-7
  9079  0146DC  006F FF8C  F03C    	movff	plusw1,btemp+9
  9080  0146E2  0E20               	movlw	32
  9081  0146E4  123B               	iorwf	(btemp+8)^0,f,c
  9082  0146E6  0E00               	movlw	0
  9083  0146E8  123C               	iorwf	(btemp+9)^0,f,c
  9084  0146EA  503D               	movf	(btemp+10)^0,w,c
  9085  0146EC  263B               	addwf	(btemp+8)^0,f,c
  9086  0146EE  503E               	movf	(btemp+11)^0,w,c
  9087  0146F0  223C               	addwfc	(btemp+9)^0,f,c
  9088  0146F2  503C               	movf	(btemp+9)^0,w,c
  9089  0146F4  E106               	bnz	u10150
  9090  0146F6  0E1A               	movlw	26
  9091  0146F8  5C3B               	subwf	(btemp+8)^0,w,c
  9092  0146FA  B0D8               	btfsc	status,0,c
  9093  0146FC  D002               	goto	u10150
  9094  0146FE  0E01               	movlw	1
  9095  014700  D001               	goto	u10160
  9096  014702                     u10150:
  9097  014702  0E00               	movlw	0
  9098  014704                     u10160:
  9099  014704  6E3D               	movwf	(btemp+10)^0,c
  9100  014706  6A3E               	clrf	(btemp+11)^0,c
  9101                           
  9102                           ;stkvar	_xtoa$4300 @ sp[(-20)+0]
  9103  014708  0EEC               	movlw	-20
  9104  01470A  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  9105  014710  0EED               	movlw	-19
  9106  014712  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  9107                           
  9108                           ;stkvar	_xtoa$4300 @ sp[(-20)+0]
  9109  014718  0EEC               	movlw	-20
  9110  01471A  006F FF8C  F033    	movff	plusw1,btemp
  9111  014720  0EED               	movlw	-19
  9112  014722  50E3               	movf	plusw1,w,c
  9113  014724  1033               	iorwf	btemp^0,w,c
  9114  014726  B4D8               	btfsc	status,2,c
  9115  014728  D011               	goto	l9834
  9116                           
  9117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9118                           ;stkvar	_c @ sp[(-20)+12]
  9119  01472A  0EF8               	movlw	-8
  9120  01472C  006F FF8F FFE6     	movff	plusw1,postinc1
  9121  014732  006F FF8F FFE6     	movff	plusw1,postinc1
  9122  014738  EC45  F0BE         	call	_toupper	;wreg free
  9123                           
  9124                           ;stkvar	_c @ sp[(-20)+12]
  9125  01473C  0EF8               	movlw	-8
  9126  01473E  0060  F0CF  FFE3   	movff	btemp,plusw1
  9127  014744  0EF9               	movlw	-7
  9128  014746  0060  F0D3  FFE3   	movff	btemp+1,plusw1
  9129  01474C                     l9834:
  9130                           
  9131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9132                           ;stkvar	_c @ sp[(-20)+12]
  9133                           ;stkvar	_i @ sp[(-20)+14]
  9134  01474C  0EFA               	movlw	-6
  9135  01474E  006F FF8C  F03D    	movff	plusw1,btemp+10
  9136  014754  0EFB               	movlw	-5
  9137  014756  006F FF8C  F03E    	movff	plusw1,btemp+11
  9138  01475C  0EAC               	movlw	low _dbuf
  9139  01475E  243D               	addwf	(btemp+10)^0,w,c
  9140  014760  6ED9               	movwf	fsr2l,c
  9141  014762  0E02               	movlw	high _dbuf
  9142  014764  203E               	addwfc	(btemp+11)^0,w,c
  9143  014766  6EDA               	movwf	fsr2h,c
  9144  014768  0EF8               	movlw	-8
  9145  01476A  006F FF8F FFDF     	movff	plusw1,indf2
  9146                           
  9147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9148                           ;stkvar	_p @ sp[(-20)+18]
  9149  014770  50E1               	movf	fsr1l,w,c
  9150  014772  0FFE               	addlw	-2
  9151  014774  6ED9               	movwf	fsr2l,c
  9152  014776  50E2               	movf	fsr1h,w,c
  9153  014778  6EDA               	movwf	fsr2h,c
  9154  01477A  0EFF               	movlw	255
  9155  01477C  22DA               	addwfc	fsr2h,f,c
  9156  01477E  06DE               	decf	postinc2,f,c
  9157  014780  0E00               	movlw	0
  9158  014782  5ADD               	subwfb	postdec2,f,c
  9159                           
  9160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9161                           ;stkvar	_w @ sp[(-20)+16]
  9162  014784  50E1               	movf	fsr1l,w,c
  9163  014786  0FFC               	addlw	-4
  9164  014788  6ED9               	movwf	fsr2l,c
  9165  01478A  50E2               	movf	fsr1h,w,c
  9166  01478C  6EDA               	movwf	fsr2h,c
  9167  01478E  0EFF               	movlw	255
  9168  014790  22DA               	addwfc	fsr2h,f,c
  9169  014792  06DE               	decf	postinc2,f,c
  9170  014794  0E00               	movlw	0
  9171  014796  5ADD               	subwfb	postdec2,f,c
  9172                           
  9173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9174  014798  0E04               	movlw	4
  9175  01479A  6E3E               	movwf	(btemp+11)^0,c
  9176                           
  9177                           ;stkvar	_n @ sp[(-20)+4]
  9178  01479C  50E1               	movf	fsr1l,w,c
  9179  01479E  0FF0               	addlw	-16
  9180  0147A0  6ED9               	movwf	fsr2l,c
  9181  0147A2  50E2               	movf	fsr1h,w,c
  9182  0147A4  6EDA               	movwf	fsr2h,c
  9183  0147A6  0EFF               	movlw	255
  9184  0147A8  22DA               	addwfc	fsr2h,f,c
  9185  0147AA  283E               	incf	(btemp+11)^0,w,c
  9186  0147AC  52DE               	movf	postinc2,f,c
  9187  0147AE  D00F               	goto	u10180
  9188  0147B0                     u10185:
  9189  0147B0  52DE               	movf	postinc2,f,c
  9190  0147B2  52DE               	movf	postinc2,f,c
  9191  0147B4  52DE               	movf	postinc2,f,c
  9192  0147B6  52DE               	movf	postinc2,f,c
  9193  0147B8  52DE               	movf	postinc2,f,c
  9194  0147BA  52DE               	movf	postinc2,f,c
  9195  0147BC  90D8               	bcf	status,0,c
  9196  0147BE  32DD               	rrcf	postdec2,f,c
  9197  0147C0  32DD               	rrcf	postdec2,f,c
  9198  0147C2  32DD               	rrcf	postdec2,f,c
  9199  0147C4  32DD               	rrcf	postdec2,f,c
  9200  0147C6  32DD               	rrcf	postdec2,f,c
  9201  0147C8  32DD               	rrcf	postdec2,f,c
  9202  0147CA  32DD               	rrcf	postdec2,f,c
  9203  0147CC  32DE               	rrcf	postinc2,f,c
  9204  0147CE                     u10180:
  9205  0147CE  2EE8               	decfsz	wreg,f,c
  9206  0147D0  D7EF               	goto	u10185
  9207  0147D2                     l9842:
  9208                           
  9209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9210                           ;stkvar	_i @ sp[(-20)+14]
  9211  0147D2  0EFB               	movlw	-5
  9212  0147D4  BEE3               	btfsc	plusw1,7,c
  9213  0147D6  D03A               	goto	u10230
  9214  0147D8  0EFB               	movlw	-5
  9215  0147DA  50E3               	movf	plusw1,w,c
  9216  0147DC  E108               	bnz	u10190
  9217  0147DE  0EFA               	movlw	-6
  9218  0147E0  006F FF8C  F033    	movff	plusw1,btemp
  9219  0147E6  0E02               	movlw	2
  9220  0147E8  5E33               	subwf	btemp^0,f,c
  9221  0147EA  A0D8               	btfss	status,0,c
  9222  0147EC  D02F               	goto	u10230
  9223  0147EE                     u10190:
  9224                           
  9225                           ;stkvar	_n @ sp[(-20)+4]
  9226  0147EE  0EF0               	movlw	-16
  9227  0147F0  50E3               	movf	plusw1,w,c
  9228  0147F2  E115               	bnz	u10201
  9229  0147F4  0EF1               	movlw	-15
  9230  0147F6  50E3               	movf	plusw1,w,c
  9231  0147F8  E112               	bnz	u10201
  9232  0147FA  0EF2               	movlw	-14
  9233  0147FC  50E3               	movf	plusw1,w,c
  9234  0147FE  E10F               	bnz	u10201
  9235  014800  0EF3               	movlw	-13
  9236  014802  50E3               	movf	plusw1,w,c
  9237  014804  E10C               	bnz	u10201
  9238  014806  0EF4               	movlw	-12
  9239  014808  50E3               	movf	plusw1,w,c
  9240  01480A  E109               	bnz	u10201
  9241  01480C  0EF5               	movlw	-11
  9242  01480E  50E3               	movf	plusw1,w,c
  9243  014810  E106               	bnz	u10201
  9244  014812  0EF6               	movlw	-10
  9245  014814  50E3               	movf	plusw1,w,c
  9246  014816  E103               	bnz	u10201
  9247  014818  0EF7               	movlw	-9
  9248  01481A  50E3               	movf	plusw1,w,c
  9249  01481C  A4D8               	btfss	status,2,c
  9250  01481E                     u10201:
  9251  01481E  D6EB               	goto	l9810
  9252                           
  9253                           ;stkvar	_p @ sp[(-20)+18]
  9254  014820  0EFF               	movlw	-1
  9255  014822  BEE3               	btfsc	plusw1,7,c
  9256  014824  D007               	goto	u10210
  9257  014826  0EFF               	movlw	-1
  9258  014828  50E3               	movf	plusw1,w,c
  9259  01482A  E103               	bnz	u10211
  9260  01482C  0EFE               	movlw	-2
  9261  01482E  04E3               	decf	plusw1,w,c
  9262  014830  B0D8               	btfsc	status,0,c
  9263  014832                     u10211:
  9264  014832  D6E1               	goto	l9810
  9265  014834                     u10210:
  9266                           
  9267                           ;stkvar	_w @ sp[(-20)+16]
  9268  014834  0EFD               	movlw	-3
  9269  014836  BEE3               	btfsc	plusw1,7,c
  9270  014838  D009               	goto	u10230
  9271  01483A  0EFD               	movlw	-3
  9272  01483C  50E3               	movf	plusw1,w,c
  9273  01483E  E104               	bnz	u10220
  9274  014840  0EFC               	movlw	-4
  9275  014842  04E3               	decf	plusw1,w,c
  9276  014844  A0D8               	btfss	status,0,c
  9277  014846  D002               	goto	u10230
  9278  014848                     u10220:
  9279  014848  B220               	btfsc	_flags^0,1,c
  9280  01484A  D6D5               	goto	l9810
  9281  01484C                     u10230:
  9282                           
  9283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9284  01484C  A820               	btfss	_flags^0,4,c
  9285  01484E  D036               	goto	l9858
  9286                           
  9287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9288                           ;stkvar	_i @ sp[(-20)+14]
  9289  014850  50E1               	movf	fsr1l,w,c
  9290  014852  0FFA               	addlw	-6
  9291  014854  6ED9               	movwf	fsr2l,c
  9292  014856  50E2               	movf	fsr1h,w,c
  9293  014858  6EDA               	movwf	fsr2h,c
  9294  01485A  0EFF               	movlw	255
  9295  01485C  22DA               	addwfc	fsr2h,f,c
  9296  01485E  06DE               	decf	postinc2,f,c
  9297  014860  0E00               	movlw	0
  9298  014862  5ADD               	subwfb	postdec2,f,c
  9299                           
  9300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9301                           ;stkvar	_x @ sp[(-20)+-11]
  9302                           ;stkvar	_i @ sp[(-20)+14]
  9303  014864  0EFA               	movlw	-6
  9304  014866  006F FF8C  F03D    	movff	plusw1,btemp+10
  9305  01486C  0EFB               	movlw	-5
  9306  01486E  006F FF8C  F03E    	movff	plusw1,btemp+11
  9307  014874  0EAC               	movlw	low _dbuf
  9308  014876  243D               	addwf	(btemp+10)^0,w,c
  9309  014878  6ED9               	movwf	fsr2l,c
  9310  01487A  0E02               	movlw	high _dbuf
  9311  01487C  203E               	addwfc	(btemp+11)^0,w,c
  9312  01487E  6EDA               	movwf	fsr2h,c
  9313  014880  0EE1               	movlw	-31
  9314  014882  006F FF8F FFDF     	movff	plusw1,indf2
  9315                           
  9316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9317                           ;stkvar	_i @ sp[(-20)+14]
  9318  014888  50E1               	movf	fsr1l,w,c
  9319  01488A  0FFA               	addlw	-6
  9320  01488C  6ED9               	movwf	fsr2l,c
  9321  01488E  50E2               	movf	fsr1h,w,c
  9322  014890  6EDA               	movwf	fsr2h,c
  9323  014892  0EFF               	movlw	255
  9324  014894  22DA               	addwfc	fsr2h,f,c
  9325  014896  06DE               	decf	postinc2,f,c
  9326  014898  0E00               	movlw	0
  9327  01489A  5ADD               	subwfb	postdec2,f,c
  9328                           
  9329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9330                           ;stkvar	_i @ sp[(-20)+14]
  9331  01489C  0EFA               	movlw	-6
  9332  01489E  006F FF8C  F03D    	movff	plusw1,btemp+10
  9333  0148A4  0EFB               	movlw	-5
  9334  0148A6  006F FF8C  F03E    	movff	plusw1,btemp+11
  9335  0148AC  0EAC               	movlw	low _dbuf
  9336  0148AE  243D               	addwf	(btemp+10)^0,w,c
  9337  0148B0  6ED9               	movwf	fsr2l,c
  9338  0148B2  0E02               	movlw	high _dbuf
  9339  0148B4  203E               	addwfc	(btemp+11)^0,w,c
  9340  0148B6  6EDA               	movwf	fsr2h,c
  9341  0148B8  0E30               	movlw	48
  9342  0148BA  6EDF               	movwf	indf2,c
  9343  0148BC                     l9858:
  9344                           
  9345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9346                           ;stkvar	_w @ sp[(-20)+16]
  9347  0148BC  0EFC               	movlw	-4
  9348  0148BE  006F FF8F FFE6     	movff	plusw1,postinc1
  9349  0148C4  006F FF8F FFE6     	movff	plusw1,postinc1
  9350                           
  9351                           ;stkvar	_i @ sp[(-22)+14]
  9352  0148CA  0EAC               	movlw	low _dbuf
  9353  0148CC  6E3D               	movwf	(btemp+10)^0,c
  9354  0148CE  0E02               	movlw	high _dbuf
  9355  0148D0  6E3E               	movwf	(btemp+11)^0,c
  9356  0148D2  0EF8               	movlw	-8
  9357  0148D4  50E3               	movf	plusw1,w,c
  9358  0148D6  263D               	addwf	(btemp+10)^0,f,c
  9359  0148D8  0EF9               	movlw	-7
  9360  0148DA  50E3               	movf	plusw1,w,c
  9361  0148DC  223E               	addwfc	(btemp+11)^0,f,c
  9362  0148DE  0060  F0F7  FFE6   	movff	btemp+10,postinc1
  9363  0148E4  0060  F0FB  FFE6   	movff	btemp+11,postinc1
  9364                           
  9365                           ;stkvar	_fp @ sp[(-24)+-2]
  9366  0148EA  0EE6               	movlw	-26
  9367  0148EC  006F FF8F FFE6     	movff	plusw1,postinc1
  9368  0148F2  006F FF8F FFE6     	movff	plusw1,postinc1
  9369  0148F8  EC34  F0B8         	call	_pad	;wreg free
  9370                           
  9371                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9372  0148FC  0EE1               	movlw	225
  9373  0148FE  26E1               	addwf	fsr1l,f,c
  9374  014900  0EFF               	movlw	255
  9375  014902  22E2               	addwfc	fsr1h,f,c
  9376  014904  0012               	return		;funcret
  9377  014906                     __end_of_xtoa:
  9378                           	opt callstack 0
  9379                           
  9380 ;; *************** function _toupper *****************
  9381 ;; Defined at:
  9382 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;  c               2  [STACK] int 
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;		None
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  2  [STACK] int 
  9389 ;; Registers used:
  9390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9391 ;; Tracked objects:
  9392 ;;		On entry : 0/2
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9400 ;;Total ram usage:        0 bytes
  9401 ;; Hardware stack levels used:    1
  9402 ;; Hardware stack levels required when called:    7
  9403 ;; This function calls:
  9404 ;;		_islower
  9405 ;; This function is called by:
  9406 ;;		_xtoa
  9407 ;; This function uses a reentrant model
  9408 ;;
  9409                           
  9410                           	psect	text38
  9411  017C8A                     __ptext38:
  9412                           	opt callstack 0
  9413  017C8A                     _toupper:
  9414                           	opt callstack 0
  9415                           
  9416                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9417  017C8A  52E6               	movf	postinc1,f,c
  9418  017C8C  52E6               	movf	postinc1,f,c
  9419                           
  9420                           ;stkvar	_c @ sp[(-2)+-2]
  9421                           
  9422                           ;incstack = 0
  9423  017C8E  0EFC               	movlw	-4
  9424  017C90  50E3               	movf	plusw1,w,c
  9425  017C92  0F9F               	addlw	159
  9426  017C94  6E3D               	movwf	(btemp+10)^0,c
  9427  017C96  0EFD               	movlw	-3
  9428  017C98  006F FF8C  F03E    	movff	plusw1,btemp+11
  9429  017C9E  0EFF               	movlw	255
  9430  017CA0  223E               	addwfc	(btemp+11)^0,f,c
  9431  017CA2  503E               	movf	(btemp+11)^0,w,c
  9432  017CA4  E106               	bnz	u5410
  9433  017CA6  0E1A               	movlw	26
  9434  017CA8  5C3D               	subwf	(btemp+10)^0,w,c
  9435  017CAA  B0D8               	btfsc	status,0,c
  9436  017CAC  D002               	goto	u5410
  9437  017CAE  0E01               	movlw	1
  9438  017CB0  D001               	goto	u5420
  9439  017CB2                     u5410:
  9440  017CB2  0E00               	movlw	0
  9441  017CB4                     u5420:
  9442  017CB4  6E3D               	movwf	(btemp+10)^0,c
  9443  017CB6  6A3E               	clrf	(btemp+11)^0,c
  9444                           
  9445                           ;stkvar	_toupper$4984 @ sp[(-2)+0]
  9446  017CB8  0EFE               	movlw	-2
  9447  017CBA  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  9448  017CC0  0EFF               	movlw	-1
  9449  017CC2  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  9450                           
  9451                           ;stkvar	_toupper$4984 @ sp[(-2)+0]
  9452  017CC8  0EFE               	movlw	-2
  9453  017CCA  006F FF8C  F033    	movff	plusw1,btemp
  9454  017CD0  0EFF               	movlw	-1
  9455  017CD2  50E3               	movf	plusw1,w,c
  9456  017CD4  1033               	iorwf	btemp^0,w,c
  9457  017CD6  B4D8               	btfsc	status,2,c
  9458  017CD8  D00D               	goto	l6498
  9459                           
  9460                           ;stkvar	_c @ sp[(-2)+-2]
  9461  017CDA  0EFC               	movlw	-4
  9462  017CDC  006F FF8C  F033    	movff	plusw1,btemp
  9463  017CE2  0EFD               	movlw	-3
  9464  017CE4  006F FF8C  F034    	movff	plusw1,btemp+1
  9465  017CEA  0E5F               	movlw	95
  9466  017CEC  1633               	andwf	btemp^0,f,c
  9467  017CEE  0E00               	movlw	0
  9468  017CF0  1634               	andwf	(btemp+1)^0,f,c
  9469  017CF2  D008               	goto	l2883
  9470  017CF4                     l6498:
  9471                           
  9472                           ;stkvar	_c @ sp[(-2)+-2]
  9473  017CF4  0EFC               	movlw	-4
  9474  017CF6  006F FF8C  F033    	movff	plusw1,btemp
  9475  017CFC  0EFD               	movlw	-3
  9476  017CFE  006F FF8C  F034    	movff	plusw1,btemp+1
  9477  017D04                     l2883:
  9478                           
  9479                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9480  017D04  52E5               	movf	postdec1,f,c
  9481  017D06  52E5               	movf	postdec1,f,c
  9482  017D08  52E5               	movf	postdec1,f,c
  9483  017D0A  52E5               	movf	postdec1,f,c
  9484  017D0C  0012               	return		;funcret
  9485  017D0E                     __end_of_toupper:
  9486                           	opt callstack 0
  9487                           
  9488 ;; *************** function _islower *****************
  9489 ;; Defined at:
  9490 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  c               2  [STACK] int 
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;		None
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  2  [STACK] int 
  9497 ;; Registers used:
  9498 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9508 ;;Total ram usage:        0 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:    6
  9511 ;; This function calls:
  9512 ;;		Nothing
  9513 ;; This function is called by:
  9514 ;;		_toupper
  9515 ;; This function uses a reentrant model
  9516 ;;
  9517                           
  9518                           	psect	text39
  9519  018804                     __ptext39:
  9520                           	opt callstack 0
  9521  018804                     _islower:
  9522                           	opt callstack 16
  9523                           
  9524                           ;stkvar	_c @ sp[(0)+-2]
  9525                           
  9526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9527                           ;incstack = 0
  9528  018804  0EFE               	movlw	-2
  9529  018806  50E3               	movf	plusw1,w,c
  9530  018808  0F9F               	addlw	159
  9531  01880A  6E3D               	movwf	(btemp+10)^0,c
  9532  01880C  0EFF               	movlw	-1
  9533  01880E  006F FF8C  F03E    	movff	plusw1,btemp+11
  9534  018814  0EFF               	movlw	255
  9535  018816  223E               	addwfc	(btemp+11)^0,f,c
  9536  018818  503E               	movf	(btemp+11)^0,w,c
  9537  01881A  E106               	bnz	u5100
  9538  01881C  0E1A               	movlw	26
  9539  01881E  5C3D               	subwf	(btemp+10)^0,w,c
  9540  018820  B0D8               	btfsc	status,0,c
  9541  018822  D002               	goto	u5100
  9542  018824  0E01               	movlw	1
  9543  018826  D001               	goto	u5110
  9544  018828                     u5100:
  9545  018828  0E00               	movlw	0
  9546  01882A                     u5110:
  9547  01882A  6E33               	movwf	btemp^0,c
  9548  01882C  6A34               	clrf	(btemp+1)^0,c
  9549                           
  9550                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9551  01882E  52E5               	movf	postdec1,f,c
  9552  018830  52E5               	movf	postdec1,f,c
  9553  018832  0012               	return		;funcret
  9554  018834                     __end_of_islower:
  9555                           	opt callstack 0
  9556                           
  9557 ;; *************** function _isalpha *****************
  9558 ;; Defined at:
  9559 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;  c               2  [STACK] int 
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;		None
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  2  [STACK] int 
  9566 ;; Registers used:
  9567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9577 ;;Total ram usage:        0 bytes
  9578 ;; Hardware stack levels used:    1
  9579 ;; Hardware stack levels required when called:    6
  9580 ;; This function calls:
  9581 ;;		Nothing
  9582 ;; This function is called by:
  9583 ;;		_xtoa
  9584 ;; This function uses a reentrant model
  9585 ;;
  9586                           
  9587                           	psect	text40
  9588  018572                     __ptext40:
  9589                           	opt callstack 0
  9590  018572                     _isalpha:
  9591                           	opt callstack 17
  9592                           
  9593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9594                           ;incstack = 0
  9595  018572  0E9F               	movlw	159
  9596  018574  6E3D               	movwf	(btemp+10)^0,c
  9597  018576  0EFF               	movlw	255
  9598  018578  6E3E               	movwf	(btemp+11)^0,c
  9599                           
  9600                           ;stkvar	_c @ sp[(0)+-2]
  9601  01857A  0EFE               	movlw	-2
  9602  01857C  006F FF8C  F03B    	movff	plusw1,btemp+8
  9603  018582  0EFF               	movlw	-1
  9604  018584  006F FF8C  F03C    	movff	plusw1,btemp+9
  9605  01858A  0E20               	movlw	32
  9606  01858C  123B               	iorwf	(btemp+8)^0,f,c
  9607  01858E  0E00               	movlw	0
  9608  018590  123C               	iorwf	(btemp+9)^0,f,c
  9609  018592  503D               	movf	(btemp+10)^0,w,c
  9610  018594  263B               	addwf	(btemp+8)^0,f,c
  9611  018596  503E               	movf	(btemp+11)^0,w,c
  9612  018598  223C               	addwfc	(btemp+9)^0,f,c
  9613  01859A  503C               	movf	(btemp+9)^0,w,c
  9614  01859C  E106               	bnz	u5390
  9615  01859E  0E1A               	movlw	26
  9616  0185A0  5C3B               	subwf	(btemp+8)^0,w,c
  9617  0185A2  B0D8               	btfsc	status,0,c
  9618  0185A4  D002               	goto	u5390
  9619  0185A6  0E01               	movlw	1
  9620  0185A8  D001               	goto	u5400
  9621  0185AA                     u5390:
  9622  0185AA  0E00               	movlw	0
  9623  0185AC                     u5400:
  9624  0185AC  6E33               	movwf	btemp^0,c
  9625  0185AE  6A34               	clrf	(btemp+1)^0,c
  9626                           
  9627                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9628  0185B0  52E5               	movf	postdec1,f,c
  9629  0185B2  52E5               	movf	postdec1,f,c
  9630  0185B4  0012               	return		;funcret
  9631  0185B6                     __end_of_isalpha:
  9632                           	opt callstack 0
  9633                           
  9634 ;; *************** function _utoa *****************
  9635 ;; Defined at:
  9636 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9639 ;;		 -> f(6), NULL(0), 
  9640 ;;  d               8  [STACK] unsigned long long 
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;  n               8  [STACK] unsigned long long 
  9643 ;;  i               2  [STACK] int 
  9644 ;;  w               2  [STACK] int 
  9645 ;;  p               2  [STACK] int 
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  2  [STACK] int 
  9648 ;; Registers used:
  9649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9659 ;;Total ram usage:        0 bytes
  9660 ;; Hardware stack levels used:    1
  9661 ;; Hardware stack levels required when called:   11
  9662 ;; This function calls:
  9663 ;;		___lodiv
  9664 ;;		___lomod
  9665 ;;		_pad
  9666 ;; This function is called by:
  9667 ;;		_vfpfcnvrt
  9668 ;; This function uses a reentrant model
  9669 ;;
  9670                           
  9671                           	psect	text41
  9672  014C72                     __ptext41:
  9673                           	opt callstack 0
  9674  014C72                     _utoa:
  9675                           	opt callstack 0
  9676                           
  9677                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9678  014C72  0E0E               	movlw	14
  9679  014C74  26E1               	addwf	fsr1l,f,c
  9680  014C76  0E00               	movlw	0
  9681  014C78  22E2               	addwfc	fsr1h,f,c
  9682                           
  9683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  9684                           
  9685                           ;incstack = 0
  9686  014C7A  AE1F               	btfss	(_prec+1)^0,7,c
  9687                           
  9688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  9689  014C7C  9220               	bcf	_flags^0,1,c
  9690                           
  9691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  9692  014C7E  BE1F               	btfsc	(_prec+1)^0,7,c
  9693  014C80  D005               	goto	u10000
  9694  014C82  501F               	movf	(_prec+1)^0,w,c
  9695  014C84  E110               	bnz	l9758
  9696  014C86  041E               	decf	_prec^0,w,c
  9697  014C88  B0D8               	btfsc	status,0,c
  9698  014C8A  D00D               	goto	l9758
  9699  014C8C                     u10000:
  9700  014C8C  0E01               	movlw	1
  9701  014C8E  6E3D               	movwf	(btemp+10)^0,c
  9702  014C90  0E00               	movlw	0
  9703  014C92  6E3E               	movwf	(btemp+11)^0,c
  9704                           
  9705                           ;stkvar	_p @ sp[(-14)+12]
  9706  014C94  0EFE               	movlw	-2
  9707  014C96  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  9708  014C9C  0EFF               	movlw	-1
  9709  014C9E  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  9710  014CA4  D008               	goto	l1927
  9711  014CA6                     l9758:
  9712                           
  9713                           ;stkvar	_p @ sp[(-14)+12]
  9714  014CA6  0EFE               	movlw	-2
  9715  014CA8  0060  F07B  FFE3   	movff	_prec,plusw1
  9716  014CAE  0EFF               	movlw	-1
  9717  014CB0  0060  F07F  FFE3   	movff	_prec+1,plusw1
  9718  014CB6                     l1927:
  9719                           
  9720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
  9721                           ;stkvar	_w @ sp[(-14)+10]
  9722  014CB6  0EFC               	movlw	-4
  9723  014CB8  0060  F073  FFE3   	movff	_width,plusw1
  9724  014CBE  0EFD               	movlw	-3
  9725  014CC0  0060  F077  FFE3   	movff	_width+1,plusw1
  9726                           
  9727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
  9728                           ;stkvar	_d @ sp[(-14)+-10]
  9729  014CC6  0EE8               	movlw	232
  9730  014CC8  24E1               	addwf	fsr1l,w,c
  9731  014CCA  6ED9               	movwf	fsr2l,c
  9732  014CCC  0EFF               	movlw	255
  9733  014CCE  20E2               	addwfc	fsr1h,w,c
  9734  014CD0  6EDA               	movwf	fsr2h,c
  9735                           
  9736                           ;stkvar	_n @ sp[(-14)+0]
  9737  014CD2  0E08               	movlw	8
  9738  014CD4  6E33               	movwf	btemp^0,c
  9739  014CD6  0EF2               	movlw	-14
  9740  014CD8                     us1001999:
  9741  014CD8  006F FF7B FFE3     	movff	postinc2,plusw1
  9742  014CDE  28E8               	incf	wreg,w,c
  9743  014CE0  2E33               	decfsz	btemp^0,f,c
  9744  014CE2  D7FA               	bra	us1001999
  9745                           
  9746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  9747  014CE4  0E4F               	movlw	79
  9748  014CE6  6E3D               	movwf	(btemp+10)^0,c
  9749  014CE8  0E00               	movlw	0
  9750  014CEA  6E3E               	movwf	(btemp+11)^0,c
  9751                           
  9752                           ;stkvar	_i @ sp[(-14)+8]
  9753  014CEC  0EFA               	movlw	-6
  9754  014CEE  0060  F0F7  FFE3   	movff	btemp+10,plusw1
  9755  014CF4  0EFB               	movlw	-5
  9756  014CF6  0060  F0FB  FFE3   	movff	btemp+11,plusw1
  9757                           
  9758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  9759  014CFC  0102               	movlb	2	; () banked
  9760  014CFE  6BFB               	clrf	(_dbuf+79)& (0+255),b
  9761                           
  9762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9763  014D00  D0FB               	goto	l9776
  9764  014D02                     l9766:
  9765                           
  9766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
  9767                           ;stkvar	_i @ sp[(-14)+8]
  9768  014D02  50E1               	movf	fsr1l,w,c
  9769  014D04  0FFA               	addlw	-6
  9770  014D06  6ED9               	movwf	fsr2l,c
  9771  014D08  50E2               	movf	fsr1h,w,c
  9772  014D0A  6EDA               	movwf	fsr2h,c
  9773  014D0C  0EFF               	movlw	255
  9774  014D0E  22DA               	addwfc	fsr2h,f,c
  9775  014D10  06DE               	decf	postinc2,f,c
  9776  014D12  0E00               	movlw	0
  9777  014D14  5ADD               	subwfb	postdec2,f,c
  9778                           
  9779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  9780  014D16  0E0A               	movlw	10
  9781  014D18  6EE6               	movwf	postinc1,c
  9782  014D1A  0E00               	movlw	0
  9783  014D1C  6EE6               	movwf	postinc1,c
  9784  014D1E  0E00               	movlw	0
  9785  014D20  6EE6               	movwf	postinc1,c
  9786  014D22  0E00               	movlw	0
  9787  014D24  6EE6               	movwf	postinc1,c
  9788  014D26  0E00               	movlw	0
  9789  014D28  6EE6               	movwf	postinc1,c
  9790  014D2A  0E00               	movlw	0
  9791  014D2C  6EE6               	movwf	postinc1,c
  9792  014D2E  0E00               	movlw	0
  9793  014D30  6EE6               	movwf	postinc1,c
  9794  014D32  0E00               	movlw	0
  9795  014D34  6EE6               	movwf	postinc1,c
  9796                           
  9797                           ;stkvar	_n @ sp[(-22)+0]
  9798  014D36  50E1               	movf	fsr1l,w,c
  9799  014D38  0FEA               	addlw	-22
  9800  014D3A  6ED9               	movwf	fsr2l,c
  9801  014D3C  50E2               	movf	fsr1h,w,c
  9802  014D3E  6EDA               	movwf	fsr2h,c
  9803  014D40  0EFF               	movlw	255
  9804  014D42  22DA               	addwfc	fsr2h,f,c
  9805  014D44  006F FF7B FFE6     	movff	postinc2,postinc1
  9806  014D4A  006F FF7B FFE6     	movff	postinc2,postinc1
  9807  014D50  006F FF7B FFE6     	movff	postinc2,postinc1
  9808  014D56  006F FF7B FFE6     	movff	postinc2,postinc1
  9809  014D5C  006F FF7B FFE6     	movff	postinc2,postinc1
  9810  014D62  006F FF7B FFE6     	movff	postinc2,postinc1
  9811  014D68  006F FF7B FFE6     	movff	postinc2,postinc1
  9812  014D6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9813  014D74  ECDF  F0B5         	call	___lomod	;wreg free
  9814  014D78  52E5               	movf	postdec1,f,c
  9815  014D7A  006F FF9C  F04A    	movff	indf1,btemp+23
  9816  014D80  52E5               	movf	postdec1,f,c
  9817  014D82  006F FF9C  F049    	movff	indf1,btemp+22
  9818  014D88  52E5               	movf	postdec1,f,c
  9819  014D8A  006F FF9C  F048    	movff	indf1,btemp+21
  9820  014D90  52E5               	movf	postdec1,f,c
  9821  014D92  006F FF9C  F047    	movff	indf1,btemp+20
  9822  014D98  52E5               	movf	postdec1,f,c
  9823  014D9A  006F FF9C  F046    	movff	indf1,btemp+19
  9824  014DA0  52E5               	movf	postdec1,f,c
  9825  014DA2  006F FF9C  F045    	movff	indf1,btemp+18
  9826  014DA8  52E5               	movf	postdec1,f,c
  9827  014DAA  006F FF9C  F044    	movff	indf1,btemp+17
  9828  014DB0  52E5               	movf	postdec1,f,c
  9829  014DB2  006F FF9C  F043    	movff	indf1,btemp+16
  9830  014DB8  0EF8               	movlw	248
  9831  014DBA  26E1               	addwf	fsr1l,f,c
  9832  014DBC  0EFF               	movlw	255
  9833  014DBE  22E2               	addwfc	fsr1h,f,c
  9834  014DC0  0E30               	movlw	48
  9835  014DC2  2643               	addwf	(btemp+16)^0,f,c
  9836                           
  9837                           ;stkvar	_i @ sp[(-14)+8]
  9838  014DC4  0EFA               	movlw	-6
  9839  014DC6  006F FF8C  F03D    	movff	plusw1,btemp+10
  9840  014DCC  0EFB               	movlw	-5
  9841  014DCE  006F FF8C  F03E    	movff	plusw1,btemp+11
  9842  014DD4  0EAC               	movlw	low _dbuf
  9843  014DD6  243D               	addwf	(btemp+10)^0,w,c
  9844  014DD8  6ED9               	movwf	fsr2l,c
  9845  014DDA  0E02               	movlw	high _dbuf
  9846  014DDC  203E               	addwfc	(btemp+11)^0,w,c
  9847  014DDE  6EDA               	movwf	fsr2h,c
  9848  014DE0  0060  F10F  FFDF   	movff	btemp+16,indf2
  9849                           
  9850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
  9851                           ;stkvar	_p @ sp[(-14)+12]
  9852  014DE6  50E1               	movf	fsr1l,w,c
  9853  014DE8  0FFE               	addlw	-2
  9854  014DEA  6ED9               	movwf	fsr2l,c
  9855  014DEC  50E2               	movf	fsr1h,w,c
  9856  014DEE  6EDA               	movwf	fsr2h,c
  9857  014DF0  0EFF               	movlw	255
  9858  014DF2  22DA               	addwfc	fsr2h,f,c
  9859  014DF4  06DE               	decf	postinc2,f,c
  9860  014DF6  0E00               	movlw	0
  9861  014DF8  5ADD               	subwfb	postdec2,f,c
  9862                           
  9863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
  9864                           ;stkvar	_w @ sp[(-14)+10]
  9865  014DFA  50E1               	movf	fsr1l,w,c
  9866  014DFC  0FFC               	addlw	-4
  9867  014DFE  6ED9               	movwf	fsr2l,c
  9868  014E00  50E2               	movf	fsr1h,w,c
  9869  014E02  6EDA               	movwf	fsr2h,c
  9870  014E04  0EFF               	movlw	255
  9871  014E06  22DA               	addwfc	fsr2h,f,c
  9872  014E08  06DE               	decf	postinc2,f,c
  9873  014E0A  0E00               	movlw	0
  9874  014E0C  5ADD               	subwfb	postdec2,f,c
  9875                           
  9876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  9877  014E0E  0E0A               	movlw	10
  9878  014E10  6EE6               	movwf	postinc1,c
  9879  014E12  0E00               	movlw	0
  9880  014E14  6EE6               	movwf	postinc1,c
  9881  014E16  0E00               	movlw	0
  9882  014E18  6EE6               	movwf	postinc1,c
  9883  014E1A  0E00               	movlw	0
  9884  014E1C  6EE6               	movwf	postinc1,c
  9885  014E1E  0E00               	movlw	0
  9886  014E20  6EE6               	movwf	postinc1,c
  9887  014E22  0E00               	movlw	0
  9888  014E24  6EE6               	movwf	postinc1,c
  9889  014E26  0E00               	movlw	0
  9890  014E28  6EE6               	movwf	postinc1,c
  9891  014E2A  0E00               	movlw	0
  9892  014E2C  6EE6               	movwf	postinc1,c
  9893                           
  9894                           ;stkvar	_n @ sp[(-22)+0]
  9895  014E2E  50E1               	movf	fsr1l,w,c
  9896  014E30  0FEA               	addlw	-22
  9897  014E32  6ED9               	movwf	fsr2l,c
  9898  014E34  50E2               	movf	fsr1h,w,c
  9899  014E36  6EDA               	movwf	fsr2h,c
  9900  014E38  0EFF               	movlw	255
  9901  014E3A  22DA               	addwfc	fsr2h,f,c
  9902  014E3C  006F FF7B FFE6     	movff	postinc2,postinc1
  9903  014E42  006F FF7B FFE6     	movff	postinc2,postinc1
  9904  014E48  006F FF7B FFE6     	movff	postinc2,postinc1
  9905  014E4E  006F FF7B FFE6     	movff	postinc2,postinc1
  9906  014E54  006F FF7B FFE6     	movff	postinc2,postinc1
  9907  014E5A  006F FF7B FFE6     	movff	postinc2,postinc1
  9908  014E60  006F FF7B FFE6     	movff	postinc2,postinc1
  9909  014E66  006F FF7B FFE6     	movff	postinc2,postinc1
  9910  014E6C  EC0E  F0B3         	call	___lodiv	;wreg free
  9911  014E70  52E5               	movf	postdec1,f,c
  9912  014E72  006F FF9C  F04A    	movff	indf1,btemp+23
  9913  014E78  52E5               	movf	postdec1,f,c
  9914  014E7A  006F FF9C  F049    	movff	indf1,btemp+22
  9915  014E80  52E5               	movf	postdec1,f,c
  9916  014E82  006F FF9C  F048    	movff	indf1,btemp+21
  9917  014E88  52E5               	movf	postdec1,f,c
  9918  014E8A  006F FF9C  F047    	movff	indf1,btemp+20
  9919  014E90  52E5               	movf	postdec1,f,c
  9920  014E92  006F FF9C  F046    	movff	indf1,btemp+19
  9921  014E98  52E5               	movf	postdec1,f,c
  9922  014E9A  006F FF9C  F045    	movff	indf1,btemp+18
  9923  014EA0  52E5               	movf	postdec1,f,c
  9924  014EA2  006F FF9C  F044    	movff	indf1,btemp+17
  9925  014EA8  52E5               	movf	postdec1,f,c
  9926  014EAA  006F FF9C  F043    	movff	indf1,btemp+16
  9927  014EB0  0EF8               	movlw	248
  9928  014EB2  26E1               	addwf	fsr1l,f,c
  9929  014EB4  0EFF               	movlw	255
  9930  014EB6  22E2               	addwfc	fsr1h,f,c
  9931                           
  9932                           ;stkvar	_n @ sp[(-14)+0]
  9933  014EB8  0EF2               	movlw	-14
  9934  014EBA  0060  F10F  FFE3   	movff	btemp+16,plusw1
  9935  014EC0  0EF3               	movlw	-13
  9936  014EC2  0060  F113  FFE3   	movff	btemp+17,plusw1
  9937  014EC8  0EF4               	movlw	-12
  9938  014ECA  0060  F117  FFE3   	movff	btemp+18,plusw1
  9939  014ED0  0EF5               	movlw	-11
  9940  014ED2  0060  F11B  FFE3   	movff	btemp+19,plusw1
  9941  014ED8  0EF6               	movlw	-10
  9942  014EDA  0060  F11F  FFE3   	movff	btemp+20,plusw1
  9943  014EE0  0EF7               	movlw	-9
  9944  014EE2  0060  F123  FFE3   	movff	btemp+21,plusw1
  9945  014EE8  0EF8               	movlw	-8
  9946  014EEA  0060  F127  FFE3   	movff	btemp+22,plusw1
  9947  014EF0  0EF9               	movlw	-7
  9948  014EF2  0060  F12B  FFE3   	movff	btemp+23,plusw1
  9949  014EF8                     l9776:
  9950                           
  9951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9952                           ;stkvar	_i @ sp[(-14)+8]
  9953  014EF8  0EFA               	movlw	-6
  9954  014EFA  006F FF8C  F033    	movff	plusw1,btemp
  9955  014F00  0EFB               	movlw	-5
  9956  014F02  50E3               	movf	plusw1,w,c
  9957  014F04  1033               	iorwf	btemp^0,w,c
  9958  014F06  B4D8               	btfsc	status,2,c
  9959  014F08  D02F               	goto	u10060
  9960                           
  9961                           ;stkvar	_n @ sp[(-14)+0]
  9962  014F0A  0EF2               	movlw	-14
  9963  014F0C  50E3               	movf	plusw1,w,c
  9964  014F0E  E115               	bnz	u10031
  9965  014F10  0EF3               	movlw	-13
  9966  014F12  50E3               	movf	plusw1,w,c
  9967  014F14  E112               	bnz	u10031
  9968  014F16  0EF4               	movlw	-12
  9969  014F18  50E3               	movf	plusw1,w,c
  9970  014F1A  E10F               	bnz	u10031
  9971  014F1C  0EF5               	movlw	-11
  9972  014F1E  50E3               	movf	plusw1,w,c
  9973  014F20  E10C               	bnz	u10031
  9974  014F22  0EF6               	movlw	-10
  9975  014F24  50E3               	movf	plusw1,w,c
  9976  014F26  E109               	bnz	u10031
  9977  014F28  0EF7               	movlw	-9
  9978  014F2A  50E3               	movf	plusw1,w,c
  9979  014F2C  E106               	bnz	u10031
  9980  014F2E  0EF8               	movlw	-8
  9981  014F30  50E3               	movf	plusw1,w,c
  9982  014F32  E103               	bnz	u10031
  9983  014F34  0EF9               	movlw	-7
  9984  014F36  50E3               	movf	plusw1,w,c
  9985  014F38  A4D8               	btfss	status,2,c
  9986  014F3A                     u10031:
  9987  014F3A  D6E3               	goto	l9766
  9988                           
  9989                           ;stkvar	_p @ sp[(-14)+12]
  9990  014F3C  0EFF               	movlw	-1
  9991  014F3E  BEE3               	btfsc	plusw1,7,c
  9992  014F40  D007               	goto	u10040
  9993  014F42  0EFF               	movlw	-1
  9994  014F44  50E3               	movf	plusw1,w,c
  9995  014F46  E103               	bnz	u10041
  9996  014F48  0EFE               	movlw	-2
  9997  014F4A  04E3               	decf	plusw1,w,c
  9998  014F4C  B0D8               	btfsc	status,0,c
  9999  014F4E                     u10041:
 10000  014F4E  D6D9               	goto	l9766
 10001  014F50                     u10040:
 10002                           
 10003                           ;stkvar	_w @ sp[(-14)+10]
 10004  014F50  0EFD               	movlw	-3
 10005  014F52  BEE3               	btfsc	plusw1,7,c
 10006  014F54  D009               	goto	u10060
 10007  014F56  0EFD               	movlw	-3
 10008  014F58  50E3               	movf	plusw1,w,c
 10009  014F5A  E104               	bnz	u10050
 10010  014F5C  0EFC               	movlw	-4
 10011  014F5E  04E3               	decf	plusw1,w,c
 10012  014F60  A0D8               	btfss	status,0,c
 10013  014F62  D002               	goto	u10060
 10014  014F64                     u10050:
 10015  014F64  B220               	btfsc	_flags^0,1,c
 10016  014F66  D6CD               	goto	l9766
 10017  014F68                     u10060:
 10018                           
 10019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 10020                           ;stkvar	_w @ sp[(-14)+10]
 10021  014F68  0EFC               	movlw	-4
 10022  014F6A  006F FF8F FFE6     	movff	plusw1,postinc1
 10023  014F70  006F FF8F FFE6     	movff	plusw1,postinc1
 10024                           
 10025                           ;stkvar	_i @ sp[(-16)+8]
 10026  014F76  0EAC               	movlw	low _dbuf
 10027  014F78  6E3D               	movwf	(btemp+10)^0,c
 10028  014F7A  0E02               	movlw	high _dbuf
 10029  014F7C  6E3E               	movwf	(btemp+11)^0,c
 10030  014F7E  0EF8               	movlw	-8
 10031  014F80  50E3               	movf	plusw1,w,c
 10032  014F82  263D               	addwf	(btemp+10)^0,f,c
 10033  014F84  0EF9               	movlw	-7
 10034  014F86  50E3               	movf	plusw1,w,c
 10035  014F88  223E               	addwfc	(btemp+11)^0,f,c
 10036  014F8A  0060  F0F7  FFE6   	movff	btemp+10,postinc1
 10037  014F90  0060  F0FB  FFE6   	movff	btemp+11,postinc1
 10038                           
 10039                           ;stkvar	_fp @ sp[(-18)+-2]
 10040  014F96  0EEC               	movlw	-20
 10041  014F98  006F FF8F FFE6     	movff	plusw1,postinc1
 10042  014F9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10043  014FA4  EC34  F0B8         	call	_pad	;wreg free
 10044                           
 10045                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 10046  014FA8  0EE8               	movlw	232
 10047  014FAA  26E1               	addwf	fsr1l,f,c
 10048  014FAC  0EFF               	movlw	255
 10049  014FAE  22E2               	addwfc	fsr1h,f,c
 10050  014FB0  0012               	return		;funcret
 10051  014FB2                     __end_of_utoa:
 10052                           	opt callstack 0
 10053                           
 10054 ;; *************** function ___lomod *****************
 10055 ;; Defined at:
 10056 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 10057 ;; Parameters:    Size  Location     Type
 10058 ;;  dividend        8  [STACK] unsigned long long 
 10059 ;;  divisor         8  [STACK] unsigned long long 
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;  counter         1  [STACK] unsigned char 
 10062 ;; Return value:  Size  Location     Type
 10063 ;;                  8  [STACK] unsigned long long 
 10064 ;; Registers used:
 10065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10066 ;; Tracked objects:
 10067 ;;		On entry : 0/2
 10068 ;;		On exit  : 0/0
 10069 ;;		Unchanged: 0/0
 10070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10075 ;;Total ram usage:        0 bytes
 10076 ;; Hardware stack levels used:    1
 10077 ;; Hardware stack levels required when called:    6
 10078 ;; This function calls:
 10079 ;;		Nothing
 10080 ;; This function is called by:
 10081 ;;		_utoa
 10082 ;; This function uses a reentrant model
 10083 ;;
 10084                           
 10085                           	psect	text42
 10086  016BBE                     __ptext42:
 10087                           	opt callstack 0
 10088  016BBE                     ___lomod:
 10089                           	opt callstack 0
 10090                           
 10091                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10092  016BBE  52E6               	movf	postinc1,f,c
 10093                           
 10094                           ;stkvar	_divisor @ sp[(-1)+-16]
 10095                           
 10096                           ;incstack = 0
 10097  016BC0  0EEF               	movlw	-17
 10098  016BC2  50E3               	movf	plusw1,w,c
 10099  016BC4  E116               	bnz	u6540
 10100  016BC6  0EF0               	movlw	-16
 10101  016BC8  50E3               	movf	plusw1,w,c
 10102  016BCA  E113               	bnz	u6540
 10103  016BCC  0EF1               	movlw	-15
 10104  016BCE  50E3               	movf	plusw1,w,c
 10105  016BD0  E110               	bnz	u6540
 10106  016BD2  0EF2               	movlw	-14
 10107  016BD4  50E3               	movf	plusw1,w,c
 10108  016BD6  E10D               	bnz	u6540
 10109  016BD8  0EF3               	movlw	-13
 10110  016BDA  50E3               	movf	plusw1,w,c
 10111  016BDC  E10A               	bnz	u6540
 10112  016BDE  0EF4               	movlw	-12
 10113  016BE0  50E3               	movf	plusw1,w,c
 10114  016BE2  E107               	bnz	u6540
 10115  016BE4  0EF5               	movlw	-11
 10116  016BE6  50E3               	movf	plusw1,w,c
 10117  016BE8  E104               	bnz	u6540
 10118  016BEA  0EF6               	movlw	-10
 10119  016BEC  50E3               	movf	plusw1,w,c
 10120  016BEE  B4D8               	btfsc	status,2,c
 10121  016BF0  D075               	goto	u6570
 10122  016BF2                     u6540:
 10123                           
 10124                           ;stkvar	_counter @ sp[(-1)+0]
 10125  016BF2  0EFF               	movlw	-1
 10126  016BF4  6AE3               	clrf	plusw1,c
 10127  016BF6  D012               	goto	L9
 10128  016BF8                     l7108:
 10129                           
 10130                           ;stkvar	_divisor @ sp[(-1)+-16]
 10131  016BF8  90D8               	bcf	status,0,c
 10132  016BFA  0EEF               	movlw	-17
 10133  016BFC  36E3               	rlcf	plusw1,f,c
 10134  016BFE  0EF0               	movlw	-16
 10135  016C00  36E3               	rlcf	plusw1,f,c
 10136  016C02  0EF1               	movlw	-15
 10137  016C04  36E3               	rlcf	plusw1,f,c
 10138  016C06  0EF2               	movlw	-14
 10139  016C08  36E3               	rlcf	plusw1,f,c
 10140  016C0A  0EF3               	movlw	-13
 10141  016C0C  36E3               	rlcf	plusw1,f,c
 10142  016C0E  0EF4               	movlw	-12
 10143  016C10  36E3               	rlcf	plusw1,f,c
 10144  016C12  0EF5               	movlw	-11
 10145  016C14  36E3               	rlcf	plusw1,f,c
 10146  016C16  0EF6               	movlw	-10
 10147  016C18  36E3               	rlcf	plusw1,f,c
 10148                           
 10149                           ;stkvar	_counter @ sp[(-1)+0]
 10150  016C1A  0EFF               	movlw	-1
 10151  016C1C                     L9:
 10152  016C1C  2AE3               	incf	plusw1,f,c
 10153                           
 10154                           ;stkvar	_divisor @ sp[(-1)+-16]
 10155  016C1E  0EF6               	movlw	-10
 10156  016C20  AEE3               	btfss	plusw1,7,c
 10157  016C22  D7EA               	goto	l7108
 10158  016C24                     u6550:
 10159                           
 10160                           ;stkvar	_divisor @ sp[(-1)+-16]
 10161                           ;stkvar	_dividend @ sp[(-1)+-8]
 10162  016C24  50E1               	movf	fsr1l,w,c
 10163  016C26  0FF7               	addlw	-9
 10164  016C28  6ED9               	movwf	fsr2l,c
 10165  016C2A  50E2               	movf	fsr1h,w,c
 10166  016C2C  6EDA               	movwf	fsr2h,c
 10167  016C2E  0EFF               	movlw	255
 10168  016C30  22DA               	addwfc	fsr2h,f,c
 10169  016C32  0EEF               	movlw	-17
 10170  016C34  50E3               	movf	plusw1,w,c
 10171  016C36  5CDE               	subwf	postinc2,w,c
 10172  016C38  0EF0               	movlw	-16
 10173  016C3A  50E3               	movf	plusw1,w,c
 10174  016C3C  58DE               	subwfb	postinc2,w,c
 10175  016C3E  0EF1               	movlw	-15
 10176  016C40  50E3               	movf	plusw1,w,c
 10177  016C42  58DE               	subwfb	postinc2,w,c
 10178  016C44  0EF2               	movlw	-14
 10179  016C46  50E3               	movf	plusw1,w,c
 10180  016C48  58DE               	subwfb	postinc2,w,c
 10181  016C4A  0EF3               	movlw	-13
 10182  016C4C  50E3               	movf	plusw1,w,c
 10183  016C4E  58DE               	subwfb	postinc2,w,c
 10184  016C50  0EF4               	movlw	-12
 10185  016C52  50E3               	movf	plusw1,w,c
 10186  016C54  58DE               	subwfb	postinc2,w,c
 10187  016C56  0EF5               	movlw	-11
 10188  016C58  50E3               	movf	plusw1,w,c
 10189  016C5A  58DE               	subwfb	postinc2,w,c
 10190  016C5C  0EF6               	movlw	-10
 10191  016C5E  50E3               	movf	plusw1,w,c
 10192  016C60  58DE               	subwfb	postinc2,w,c
 10193  016C62  A0D8               	btfss	status,0,c
 10194  016C64  D01F               	goto	l7116
 10195                           
 10196                           ;stkvar	_divisor @ sp[(-1)+-16]
 10197                           ;stkvar	_dividend @ sp[(-1)+-8]
 10198  016C66  50E1               	movf	fsr1l,w,c
 10199  016C68  0FF7               	addlw	-9
 10200  016C6A  6ED9               	movwf	fsr2l,c
 10201  016C6C  50E2               	movf	fsr1h,w,c
 10202  016C6E  6EDA               	movwf	fsr2h,c
 10203  016C70  0EFF               	movlw	255
 10204  016C72  22DA               	addwfc	fsr2h,f,c
 10205  016C74  0EEF               	movlw	-17
 10206  016C76  50E3               	movf	plusw1,w,c
 10207  016C78  5EDE               	subwf	postinc2,f,c
 10208  016C7A  0EF0               	movlw	-16
 10209  016C7C  50E3               	movf	plusw1,w,c
 10210  016C7E  5ADE               	subwfb	postinc2,f,c
 10211  016C80  0EF1               	movlw	-15
 10212  016C82  50E3               	movf	plusw1,w,c
 10213  016C84  5ADE               	subwfb	postinc2,f,c
 10214  016C86  0EF2               	movlw	-14
 10215  016C88  50E3               	movf	plusw1,w,c
 10216  016C8A  5ADE               	subwfb	postinc2,f,c
 10217  016C8C  0EF3               	movlw	-13
 10218  016C8E  50E3               	movf	plusw1,w,c
 10219  016C90  5ADE               	subwfb	postinc2,f,c
 10220  016C92  0EF4               	movlw	-12
 10221  016C94  50E3               	movf	plusw1,w,c
 10222  016C96  5ADE               	subwfb	postinc2,f,c
 10223  016C98  0EF5               	movlw	-11
 10224  016C9A  50E3               	movf	plusw1,w,c
 10225  016C9C  5ADE               	subwfb	postinc2,f,c
 10226  016C9E  0EF6               	movlw	-10
 10227  016CA0  50E3               	movf	plusw1,w,c
 10228  016CA2  5ADE               	subwfb	postinc2,f,c
 10229  016CA4                     l7116:
 10230                           
 10231                           ;stkvar	_divisor @ sp[(-1)+-16]
 10232  016CA4  90D8               	bcf	status,0,c
 10233  016CA6  0EF6               	movlw	-10
 10234  016CA8  32E3               	rrcf	plusw1,f,c
 10235  016CAA  0EF5               	movlw	-11
 10236  016CAC  32E3               	rrcf	plusw1,f,c
 10237  016CAE  0EF4               	movlw	-12
 10238  016CB0  32E3               	rrcf	plusw1,f,c
 10239  016CB2  0EF3               	movlw	-13
 10240  016CB4  32E3               	rrcf	plusw1,f,c
 10241  016CB6  0EF2               	movlw	-14
 10242  016CB8  32E3               	rrcf	plusw1,f,c
 10243  016CBA  0EF1               	movlw	-15
 10244  016CBC  32E3               	rrcf	plusw1,f,c
 10245  016CBE  0EF0               	movlw	-16
 10246  016CC0  32E3               	rrcf	plusw1,f,c
 10247  016CC2  0EEF               	movlw	-17
 10248  016CC4  32E3               	rrcf	plusw1,f,c
 10249                           
 10250                           ;stkvar	_counter @ sp[(-1)+0]
 10251  016CC6  0EFF               	movlw	-1
 10252  016CC8  50E3               	movf	plusw1,w,c
 10253  016CCA  6E33               	movwf	btemp^0,c
 10254  016CCC  0E01               	movlw	1
 10255  016CCE  5E33               	subwf	btemp^0,f,c
 10256  016CD0  0EFF               	movlw	-1
 10257  016CD2  0060  F0CF  FFE3   	movff	btemp,plusw1
 10258  016CD8  A4D8               	btfss	status,2,c
 10259  016CDA  D7A4               	goto	u6550
 10260  016CDC                     u6570:
 10261                           
 10262                           ;stkvar	_dividend @ sp[(-1)+-8]
 10263  016CDC  0EF7               	movlw	247
 10264  016CDE  24E1               	addwf	fsr1l,w,c
 10265  016CE0  6ED9               	movwf	fsr2l,c
 10266  016CE2  0EFF               	movlw	255
 10267  016CE4  20E2               	addwfc	fsr1h,w,c
 10268  016CE6  6EDA               	movwf	fsr2h,c
 10269                           
 10270                           ;stkvar	?___lomod @ sp[(-1)+-8]
 10271  016CE8  0E08               	movlw	8
 10272  016CEA  6E33               	movwf	btemp^0,c
 10273  016CEC  0EF7               	movlw	-9
 10274  016CEE                     us658999:
 10275  016CEE  006F FF7B FFE3     	movff	postinc2,plusw1
 10276  016CF4  28E8               	incf	wreg,w,c
 10277  016CF6  2E33               	decfsz	btemp^0,f,c
 10278  016CF8  D7FA               	bra	us658999
 10279                           
 10280                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10281  016CFA  52E5               	movf	postdec1,f,c
 10282  016CFC  0012               	return		;funcret
 10283  016CFE                     __end_of___lomod:
 10284                           	opt callstack 0
 10285                           
 10286 ;; *************** function ___lodiv *****************
 10287 ;; Defined at:
 10288 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;  dividend        8  [STACK] unsigned long long 
 10291 ;;  divisor         8  [STACK] unsigned long long 
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;  quotient        8  [STACK] unsigned long long 
 10294 ;;  counter         1  [STACK] unsigned char 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  8  [STACK] unsigned long long 
 10297 ;; Registers used:
 10298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/2
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10308 ;;Total ram usage:        0 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:    6
 10311 ;; This function calls:
 10312 ;;		Nothing
 10313 ;; This function is called by:
 10314 ;;		_utoa
 10315 ;; This function uses a reentrant model
 10316 ;;
 10317                           
 10318                           	psect	text43
 10319  01661C                     __ptext43:
 10320                           	opt callstack 0
 10321  01661C                     ___lodiv:
 10322                           	opt callstack 0
 10323                           
 10324                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10325  01661C  0E09               	movlw	9
 10326  01661E  26E1               	addwf	fsr1l,f,c
 10327  016620  0E00               	movlw	0
 10328  016622  22E2               	addwfc	fsr1h,f,c
 10329                           
 10330                           ;stkvar	_quotient @ sp[(-9)+0]
 10331                           
 10332                           ;incstack = 0
 10333  016624  0E07               	movlw	7
 10334  016626  6E33               	movwf	btemp^0,c
 10335  016628  0EF7               	movlw	-9
 10336  01662A                     u6481:
 10337  01662A  6AE3               	clrf	plusw1,c
 10338  01662C  2AE8               	incf	wreg,f,c
 10339  01662E  0633               	decf	btemp^0,f,c
 10340  016630  E2FC               	bc	u6481
 10341                           
 10342                           ;stkvar	_divisor @ sp[(-9)+-16]
 10343  016632  0EE7               	movlw	-25
 10344  016634  50E3               	movf	plusw1,w,c
 10345  016636  E116               	bnz	u6490
 10346  016638  0EE8               	movlw	-24
 10347  01663A  50E3               	movf	plusw1,w,c
 10348  01663C  E113               	bnz	u6490
 10349  01663E  0EE9               	movlw	-23
 10350  016640  50E3               	movf	plusw1,w,c
 10351  016642  E110               	bnz	u6490
 10352  016644  0EEA               	movlw	-22
 10353  016646  50E3               	movf	plusw1,w,c
 10354  016648  E10D               	bnz	u6490
 10355  01664A  0EEB               	movlw	-21
 10356  01664C  50E3               	movf	plusw1,w,c
 10357  01664E  E10A               	bnz	u6490
 10358  016650  0EEC               	movlw	-20
 10359  016652  50E3               	movf	plusw1,w,c
 10360  016654  E107               	bnz	u6490
 10361  016656  0EED               	movlw	-19
 10362  016658  50E3               	movf	plusw1,w,c
 10363  01665A  E104               	bnz	u6490
 10364  01665C  0EEE               	movlw	-18
 10365  01665E  50E3               	movf	plusw1,w,c
 10366  016660  B4D8               	btfsc	status,2,c
 10367  016662  D088               	goto	u6520
 10368  016664                     u6490:
 10369                           
 10370                           ;stkvar	_counter @ sp[(-9)+8]
 10371  016664  0EFF               	movlw	-1
 10372  016666  6AE3               	clrf	plusw1,c
 10373  016668  D012               	goto	L10
 10374  01666A                     l7084:
 10375                           
 10376                           ;stkvar	_divisor @ sp[(-9)+-16]
 10377  01666A  90D8               	bcf	status,0,c
 10378  01666C  0EE7               	movlw	-25
 10379  01666E  36E3               	rlcf	plusw1,f,c
 10380  016670  0EE8               	movlw	-24
 10381  016672  36E3               	rlcf	plusw1,f,c
 10382  016674  0EE9               	movlw	-23
 10383  016676  36E3               	rlcf	plusw1,f,c
 10384  016678  0EEA               	movlw	-22
 10385  01667A  36E3               	rlcf	plusw1,f,c
 10386  01667C  0EEB               	movlw	-21
 10387  01667E  36E3               	rlcf	plusw1,f,c
 10388  016680  0EEC               	movlw	-20
 10389  016682  36E3               	rlcf	plusw1,f,c
 10390  016684  0EED               	movlw	-19
 10391  016686  36E3               	rlcf	plusw1,f,c
 10392  016688  0EEE               	movlw	-18
 10393  01668A  36E3               	rlcf	plusw1,f,c
 10394                           
 10395                           ;stkvar	_counter @ sp[(-9)+8]
 10396  01668C  0EFF               	movlw	-1
 10397  01668E                     L10:
 10398  01668E  2AE3               	incf	plusw1,f,c
 10399                           
 10400                           ;stkvar	_divisor @ sp[(-9)+-16]
 10401  016690  0EEE               	movlw	-18
 10402  016692  AEE3               	btfss	plusw1,7,c
 10403  016694  D7EA               	goto	l7084
 10404  016696                     u6500:
 10405                           
 10406                           ;stkvar	_quotient @ sp[(-9)+0]
 10407  016696  90D8               	bcf	status,0,c
 10408  016698  0EF7               	movlw	-9
 10409  01669A  36E3               	rlcf	plusw1,f,c
 10410  01669C  0EF8               	movlw	-8
 10411  01669E  36E3               	rlcf	plusw1,f,c
 10412  0166A0  0EF9               	movlw	-7
 10413  0166A2  36E3               	rlcf	plusw1,f,c
 10414  0166A4  0EFA               	movlw	-6
 10415  0166A6  36E3               	rlcf	plusw1,f,c
 10416  0166A8  0EFB               	movlw	-5
 10417  0166AA  36E3               	rlcf	plusw1,f,c
 10418  0166AC  0EFC               	movlw	-4
 10419  0166AE  36E3               	rlcf	plusw1,f,c
 10420  0166B0  0EFD               	movlw	-3
 10421  0166B2  36E3               	rlcf	plusw1,f,c
 10422  0166B4  0EFE               	movlw	-2
 10423  0166B6  36E3               	rlcf	plusw1,f,c
 10424                           
 10425                           ;stkvar	_divisor @ sp[(-9)+-16]
 10426                           ;stkvar	_dividend @ sp[(-9)+-8]
 10427  0166B8  50E1               	movf	fsr1l,w,c
 10428  0166BA  0FEF               	addlw	-17
 10429  0166BC  6ED9               	movwf	fsr2l,c
 10430  0166BE  50E2               	movf	fsr1h,w,c
 10431  0166C0  6EDA               	movwf	fsr2h,c
 10432  0166C2  0EFF               	movlw	255
 10433  0166C4  22DA               	addwfc	fsr2h,f,c
 10434  0166C6  0EE7               	movlw	-25
 10435  0166C8  50E3               	movf	plusw1,w,c
 10436  0166CA  5CDE               	subwf	postinc2,w,c
 10437  0166CC  0EE8               	movlw	-24
 10438  0166CE  50E3               	movf	plusw1,w,c
 10439  0166D0  58DE               	subwfb	postinc2,w,c
 10440  0166D2  0EE9               	movlw	-23
 10441  0166D4  50E3               	movf	plusw1,w,c
 10442  0166D6  58DE               	subwfb	postinc2,w,c
 10443  0166D8  0EEA               	movlw	-22
 10444  0166DA  50E3               	movf	plusw1,w,c
 10445  0166DC  58DE               	subwfb	postinc2,w,c
 10446  0166DE  0EEB               	movlw	-21
 10447  0166E0  50E3               	movf	plusw1,w,c
 10448  0166E2  58DE               	subwfb	postinc2,w,c
 10449  0166E4  0EEC               	movlw	-20
 10450  0166E6  50E3               	movf	plusw1,w,c
 10451  0166E8  58DE               	subwfb	postinc2,w,c
 10452  0166EA  0EED               	movlw	-19
 10453  0166EC  50E3               	movf	plusw1,w,c
 10454  0166EE  58DE               	subwfb	postinc2,w,c
 10455  0166F0  0EEE               	movlw	-18
 10456  0166F2  50E3               	movf	plusw1,w,c
 10457  0166F4  58DE               	subwfb	postinc2,w,c
 10458  0166F6  A0D8               	btfss	status,0,c
 10459  0166F8  D021               	goto	l7096
 10460                           
 10461                           ;stkvar	_divisor @ sp[(-9)+-16]
 10462                           ;stkvar	_dividend @ sp[(-9)+-8]
 10463  0166FA  50E1               	movf	fsr1l,w,c
 10464  0166FC  0FEF               	addlw	-17
 10465  0166FE  6ED9               	movwf	fsr2l,c
 10466  016700  50E2               	movf	fsr1h,w,c
 10467  016702  6EDA               	movwf	fsr2h,c
 10468  016704  0EFF               	movlw	255
 10469  016706  22DA               	addwfc	fsr2h,f,c
 10470  016708  0EE7               	movlw	-25
 10471  01670A  50E3               	movf	plusw1,w,c
 10472  01670C  5EDE               	subwf	postinc2,f,c
 10473  01670E  0EE8               	movlw	-24
 10474  016710  50E3               	movf	plusw1,w,c
 10475  016712  5ADE               	subwfb	postinc2,f,c
 10476  016714  0EE9               	movlw	-23
 10477  016716  50E3               	movf	plusw1,w,c
 10478  016718  5ADE               	subwfb	postinc2,f,c
 10479  01671A  0EEA               	movlw	-22
 10480  01671C  50E3               	movf	plusw1,w,c
 10481  01671E  5ADE               	subwfb	postinc2,f,c
 10482  016720  0EEB               	movlw	-21
 10483  016722  50E3               	movf	plusw1,w,c
 10484  016724  5ADE               	subwfb	postinc2,f,c
 10485  016726  0EEC               	movlw	-20
 10486  016728  50E3               	movf	plusw1,w,c
 10487  01672A  5ADE               	subwfb	postinc2,f,c
 10488  01672C  0EED               	movlw	-19
 10489  01672E  50E3               	movf	plusw1,w,c
 10490  016730  5ADE               	subwfb	postinc2,f,c
 10491  016732  0EEE               	movlw	-18
 10492  016734  50E3               	movf	plusw1,w,c
 10493  016736  5ADE               	subwfb	postinc2,f,c
 10494                           
 10495                           ;stkvar	_quotient @ sp[(-9)+0]
 10496  016738  0EF7               	movlw	-9
 10497  01673A  80E3               	bsf	plusw1,0,c
 10498  01673C                     l7096:
 10499                           
 10500                           ;stkvar	_divisor @ sp[(-9)+-16]
 10501  01673C  90D8               	bcf	status,0,c
 10502  01673E  0EEE               	movlw	-18
 10503  016740  32E3               	rrcf	plusw1,f,c
 10504  016742  0EED               	movlw	-19
 10505  016744  32E3               	rrcf	plusw1,f,c
 10506  016746  0EEC               	movlw	-20
 10507  016748  32E3               	rrcf	plusw1,f,c
 10508  01674A  0EEB               	movlw	-21
 10509  01674C  32E3               	rrcf	plusw1,f,c
 10510  01674E  0EEA               	movlw	-22
 10511  016750  32E3               	rrcf	plusw1,f,c
 10512  016752  0EE9               	movlw	-23
 10513  016754  32E3               	rrcf	plusw1,f,c
 10514  016756  0EE8               	movlw	-24
 10515  016758  32E3               	rrcf	plusw1,f,c
 10516  01675A  0EE7               	movlw	-25
 10517  01675C  32E3               	rrcf	plusw1,f,c
 10518                           
 10519                           ;stkvar	_counter @ sp[(-9)+8]
 10520  01675E  0EFF               	movlw	-1
 10521  016760  50E3               	movf	plusw1,w,c
 10522  016762  6E33               	movwf	btemp^0,c
 10523  016764  0E01               	movlw	1
 10524  016766  5E33               	subwf	btemp^0,f,c
 10525  016768  0EFF               	movlw	-1
 10526  01676A  0060  F0CF  FFE3   	movff	btemp,plusw1
 10527  016770  A4D8               	btfss	status,2,c
 10528  016772  D791               	goto	u6500
 10529  016774                     u6520:
 10530                           
 10531                           ;stkvar	_quotient @ sp[(-9)+0]
 10532  016774  0EF7               	movlw	247
 10533  016776  24E1               	addwf	fsr1l,w,c
 10534  016778  6ED9               	movwf	fsr2l,c
 10535  01677A  0EFF               	movlw	255
 10536  01677C  20E2               	addwfc	fsr1h,w,c
 10537  01677E  6EDA               	movwf	fsr2h,c
 10538                           
 10539                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 10540  016780  0E08               	movlw	8
 10541  016782  6E33               	movwf	btemp^0,c
 10542  016784  0EEF               	movlw	-17
 10543  016786                     us653999:
 10544  016786  006F FF7B FFE3     	movff	postinc2,plusw1
 10545  01678C  28E8               	incf	wreg,w,c
 10546  01678E  2E33               	decfsz	btemp^0,f,c
 10547  016790  D7FA               	bra	us653999
 10548                           
 10549                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10550  016792  0EF7               	movlw	247
 10551  016794  26E1               	addwf	fsr1l,f,c
 10552  016796  0EFF               	movlw	255
 10553  016798  22E2               	addwfc	fsr1h,f,c
 10554  01679A  0012               	return		;funcret
 10555  01679C                     __end_of___lodiv:
 10556                           	opt callstack 0
 10557                           
 10558 ;; *************** function _strncmp *****************
 10559 ;; Defined at:
 10560 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10561 ;; Parameters:    Size  Location     Type
 10562 ;;  _l              2  [STACK] PTR const unsigned char 
 10563 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10564 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10565 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10566 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10567 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10568 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
 10569 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10570 ;;		 -> STR_1(17), 
 10571 ;;  _r              2  [STACK] PTR const unsigned char 
 10572 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10573 ;;		 -> STR_48(3), STR_44(3), 
 10574 ;;  n               2  [STACK] unsigned int 
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;  r               2  [STACK] PTR const unsigned char 
 10577 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10578 ;;		 -> STR_48(3), STR_44(3), 
 10579 ;;  l               2  [STACK] PTR const unsigned char 
 10580 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10581 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10582 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10583 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10584 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10585 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
 10586 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10587 ;;		 -> STR_1(17), 
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  2  [STACK] int 
 10590 ;; Registers used:
 10591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/0
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10601 ;;Total ram usage:        0 bytes
 10602 ;; Hardware stack levels used:    1
 10603 ;; Hardware stack levels required when called:    6
 10604 ;; This function calls:
 10605 ;;		Nothing
 10606 ;; This function is called by:
 10607 ;;		_vfpfcnvrt
 10608 ;; This function uses a reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text44
 10612  015C90                     __ptext44:
 10613                           	opt callstack 0
 10614  015C90                     _strncmp:
 10615                           	opt callstack 0
 10616                           
 10617                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10618  015C90  52E6               	movf	postinc1,f,c
 10619  015C92  52E6               	movf	postinc1,f,c
 10620  015C94  52E6               	movf	postinc1,f,c
 10621  015C96  52E6               	movf	postinc1,f,c
 10622                           
 10623                           ;stkvar	__l @ sp[(-4)+-2]
 10624                           
 10625                           ;incstack = 0
 10626  015C98  0EFA               	movlw	-6
 10627  015C9A  006F FF8C  F03D    	movff	plusw1,btemp+10
 10628  015CA0  0EFB               	movlw	-5
 10629  015CA2  006F FF8C  F03E    	movff	plusw1,btemp+11
 10630                           
 10631                           ;stkvar	_l @ sp[(-4)+2]
 10632  015CA8  0EFF               	movlw	-1
 10633  015CAA  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 10634  015CB0  0EFE               	movlw	-2
 10635  015CB2  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 10636                           
 10637                           ;stkvar	__r @ sp[(-4)+-4]
 10638  015CB8  0EF8               	movlw	-8
 10639  015CBA  006F FF8C  F03D    	movff	plusw1,btemp+10
 10640  015CC0  0EF9               	movlw	-7
 10641  015CC2  006F FF8C  F03E    	movff	plusw1,btemp+11
 10642                           
 10643                           ;stkvar	_r @ sp[(-4)+0]
 10644  015CC8  0EFD               	movlw	-3
 10645  015CCA  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 10646  015CD0  0EFC               	movlw	-4
 10647  015CD2  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 10648                           
 10649                           ;stkvar	_n @ sp[(-4)+-6]
 10650  015CD8  0EF6               	movlw	-10
 10651  015CDA  006F FF8C  F033    	movff	plusw1,btemp
 10652  015CE0  0E01               	movlw	1
 10653  015CE2  5E33               	subwf	btemp^0,f,c
 10654  015CE4  0EF6               	movlw	-10
 10655  015CE6  0060  F0CF  FFE3   	movff	btemp,plusw1
 10656  015CEC  0EF7               	movlw	-9
 10657  015CEE  006F FF8C  F033    	movff	plusw1,btemp
 10658  015CF4  0E00               	movlw	0
 10659  015CF6  5A33               	subwfb	btemp^0,f,c
 10660  015CF8  0EF7               	movlw	-9
 10661  015CFA  0060  F0CF  FFE3   	movff	btemp,plusw1
 10662  015D00  0EF6               	movlw	-10
 10663  015D02  28E3               	incf	plusw1,w,c
 10664  015D04  E13F               	bnz	l7740
 10665  015D06  0EF7               	movlw	-9
 10666  015D08  28E3               	incf	plusw1,w,c
 10667  015D0A  A4D8               	btfss	status,2,c
 10668  015D0C  D03B               	goto	l7740
 10669  015D0E  0E00               	movlw	0
 10670  015D10  6E33               	movwf	btemp^0,c
 10671  015D12  0E00               	movlw	0
 10672  015D14  6E34               	movwf	(btemp+1)^0,c
 10673  015D16  D0C7               	goto	l2855
 10674  015D18                     l7738:
 10675                           
 10676                           ;stkvar	_l @ sp[(-4)+2]
 10677  015D18  0EFE               	movlw	-2
 10678  015D1A  50E3               	movf	plusw1,w,c
 10679  015D1C  0F01               	addlw	1
 10680  015D1E  6E33               	movwf	btemp^0,c
 10681  015D20  0EFE               	movlw	-2
 10682  015D22  0060  F0CF  FFE3   	movff	btemp,plusw1
 10683  015D28  6A33               	clrf	btemp^0,c
 10684  015D2A  0EFF               	movlw	-1
 10685  015D2C  50E3               	movf	plusw1,w,c
 10686  015D2E  2033               	addwfc	btemp^0,w,c
 10687  015D30  6E33               	movwf	btemp^0,c
 10688  015D32  0EFF               	movlw	-1
 10689  015D34  0060  F0CF  FFE3   	movff	btemp,plusw1
 10690                           
 10691                           ;stkvar	_r @ sp[(-4)+0]
 10692  015D3A  0EFC               	movlw	-4
 10693  015D3C  50E3               	movf	plusw1,w,c
 10694  015D3E  0F01               	addlw	1
 10695  015D40  6E33               	movwf	btemp^0,c
 10696  015D42  0EFC               	movlw	-4
 10697  015D44  0060  F0CF  FFE3   	movff	btemp,plusw1
 10698  015D4A  6A33               	clrf	btemp^0,c
 10699  015D4C  0EFD               	movlw	-3
 10700  015D4E  50E3               	movf	plusw1,w,c
 10701  015D50  2033               	addwfc	btemp^0,w,c
 10702  015D52  6E33               	movwf	btemp^0,c
 10703  015D54  0EFD               	movlw	-3
 10704  015D56  0060  F0CF  FFE3   	movff	btemp,plusw1
 10705                           
 10706                           ;stkvar	_n @ sp[(-4)+-6]
 10707  015D5C  0EF6               	movlw	-10
 10708  015D5E  006F FF8C  F033    	movff	plusw1,btemp
 10709  015D64  0E01               	movlw	1
 10710  015D66  5E33               	subwf	btemp^0,f,c
 10711  015D68  0EF6               	movlw	-10
 10712  015D6A  0060  F0CF  FFE3   	movff	btemp,plusw1
 10713  015D70  0EF7               	movlw	-9
 10714  015D72  006F FF8C  F033    	movff	plusw1,btemp
 10715  015D78  0E00               	movlw	0
 10716  015D7A  5A33               	subwfb	btemp^0,f,c
 10717  015D7C  0EF7               	movlw	-9
 10718  015D7E  0060  F0CF  FFE3   	movff	btemp,plusw1
 10719  015D84                     l7740:
 10720                           
 10721                           ;stkvar	_l @ sp[(-4)+2]
 10722  015D84  0EFE               	movlw	-2
 10723  015D86  006F FF8F FFF6     	movff	plusw1,tblptrl
 10724  015D8C  0EFF               	movlw	-1
 10725  015D8E  006F FF8F FFF7     	movff	plusw1,tblptrh
 10726  015D94  0E00               	movlw	low (__mediumconst shr (0+16))
 10727  015D96  6EF8               	movwf	tblptru,c
 10728  015D98  0E1F               	movlw	(high __ramtop+-1)
 10729  015D9A  64F7               	cpfsgt	tblptrh,c
 10730  015D9C  D003               	bra	u7757
 10731  015D9E  0008               	tblrd		*
 10732  015DA0  50F5               	movf	tablat,w,c
 10733  015DA2  D007               	bra	u7750
 10734  015DA4                     u7757:
 10735  015DA4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10736  015DAA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10737  015DB0  50EF               	movf	indf0,w,c
 10738  015DB2                     u7750:
 10739  015DB2  0900               	iorlw	0
 10740  015DB4  B4D8               	btfsc	status,2,c
 10741  015DB6  D04A               	goto	u7790
 10742                           
 10743                           ;stkvar	_r @ sp[(-4)+0]
 10744  015DB8  50E1               	movf	fsr1l,w,c
 10745  015DBA  0FFC               	addlw	-4
 10746  015DBC  6ED9               	movwf	fsr2l,c
 10747  015DBE  50E2               	movf	fsr1h,w,c
 10748  015DC0  6EDA               	movwf	fsr2h,c
 10749  015DC2  0EFF               	movlw	255
 10750  015DC4  22DA               	addwfc	fsr2h,f,c
 10751  015DC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10752  015DCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10753  015DD2                     	if	0	;tblptru may be non-zero
 10754  015DD2                     	endif
 10755  015DD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10756  015DD2  0E00               	movlw	low (__mediumconst shr (0+16))
 10757  015DD4  6EF8               	movwf	tblptru,c
 10758  015DD6                     	endif
 10759  015DD6  0008               	tblrd		*
 10760  015DD8  50F5               	movf	tablat,w,c
 10761  015DDA  0900               	iorlw	0
 10762  015DDC  B4D8               	btfsc	status,2,c
 10763  015DDE  D036               	goto	u7790
 10764                           
 10765                           ;stkvar	_n @ sp[(-4)+-6]
 10766  015DE0  0EF6               	movlw	-10
 10767  015DE2  006F FF8C  F033    	movff	plusw1,btemp
 10768  015DE8  0EF7               	movlw	-9
 10769  015DEA  50E3               	movf	plusw1,w,c
 10770  015DEC  1033               	iorwf	btemp^0,w,c
 10771  015DEE  B4D8               	btfsc	status,2,c
 10772  015DF0  D02D               	goto	u7790
 10773                           
 10774                           ;stkvar	_r @ sp[(-4)+0]
 10775  015DF2  50E1               	movf	fsr1l,w,c
 10776  015DF4  0FFC               	addlw	-4
 10777  015DF6  6ED9               	movwf	fsr2l,c
 10778  015DF8  50E2               	movf	fsr1h,w,c
 10779  015DFA  6EDA               	movwf	fsr2h,c
 10780  015DFC  0EFF               	movlw	255
 10781  015DFE  22DA               	addwfc	fsr2h,f,c
 10782  015E00  006F FF7B FFF6     	movff	postinc2,tblptrl
 10783  015E06  006F FF77 FFF7     	movff	postdec2,tblptrh
 10784  015E0C                     	if	0	;tblptru may be non-zero
 10785  015E0C                     	endif
 10786  015E0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10787  015E0C  0E00               	movlw	low (__mediumconst shr (0+16))
 10788  015E0E  6EF8               	movwf	tblptru,c
 10789  015E10                     	endif
 10790  015E10  0008               	tblrd		*
 10791  015E12  006F FFD4  F03E    	movff	tablat,btemp+11
 10792                           
 10793                           ;stkvar	_l @ sp[(-4)+2]
 10794  015E18  0EFE               	movlw	-2
 10795  015E1A  006F FF8F FFF6     	movff	plusw1,tblptrl
 10796  015E20  0EFF               	movlw	-1
 10797  015E22  006F FF8F FFF7     	movff	plusw1,tblptrh
 10798  015E28  0E00               	movlw	low (__mediumconst shr (0+16))
 10799  015E2A  6EF8               	movwf	tblptru,c
 10800  015E2C  0E1F               	movlw	(high __ramtop+-1)
 10801  015E2E  64F7               	cpfsgt	tblptrh,c
 10802  015E30  D003               	bra	u7797
 10803  015E32  0008               	tblrd		*
 10804  015E34  50F5               	movf	tablat,w,c
 10805  015E36  D007               	bra	u7795
 10806  015E38                     u7797:
 10807  015E38  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10808  015E3E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10809  015E44  50EF               	movf	indf0,w,c
 10810  015E46                     u7795:
 10811  015E46  183E               	xorwf	(btemp+11)^0,w,c
 10812  015E48  B4D8               	btfsc	status,2,c
 10813  015E4A  D766               	goto	l7738
 10814  015E4C                     u7790:
 10815                           
 10816                           ;stkvar	_l @ sp[(-4)+2]
 10817  015E4C  0EFE               	movlw	-2
 10818  015E4E  006F FF8F FFF6     	movff	plusw1,tblptrl
 10819  015E54  0EFF               	movlw	-1
 10820  015E56  006F FF8F FFF7     	movff	plusw1,tblptrh
 10821  015E5C  0E00               	movlw	low (__mediumconst shr (0+16))
 10822  015E5E  6EF8               	movwf	tblptru,c
 10823  015E60  0E1F               	movlw	(high __ramtop+-1)
 10824  015E62  64F7               	cpfsgt	tblptrh,c
 10825  015E64  D003               	bra	u7807
 10826  015E66  0008               	tblrd		*
 10827  015E68  50F5               	movf	tablat,w,c
 10828  015E6A  D007               	bra	u7800
 10829  015E6C                     u7807:
 10830  015E6C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10831  015E72  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10832  015E78  50EF               	movf	indf0,w,c
 10833  015E7A                     u7800:
 10834  015E7A  6E33               	movwf	btemp^0,c
 10835  015E7C  6A34               	clrf	(btemp+1)^0,c
 10836                           
 10837                           ;stkvar	_r @ sp[(-4)+0]
 10838  015E7E  50E1               	movf	fsr1l,w,c
 10839  015E80  0FFC               	addlw	-4
 10840  015E82  6ED9               	movwf	fsr2l,c
 10841  015E84  50E2               	movf	fsr1h,w,c
 10842  015E86  6EDA               	movwf	fsr2h,c
 10843  015E88  0EFF               	movlw	255
 10844  015E8A  22DA               	addwfc	fsr2h,f,c
 10845  015E8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10846  015E92  006F FF77 FFF7     	movff	postdec2,tblptrh
 10847  015E98                     	if	0	;tblptru may be non-zero
 10848  015E98                     	endif
 10849  015E98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10850  015E98  0E00               	movlw	low (__mediumconst shr (0+16))
 10851  015E9A  6EF8               	movwf	tblptru,c
 10852  015E9C                     	endif
 10853  015E9C  0008               	tblrd		*
 10854  015E9E  50F5               	movf	tablat,w,c
 10855  015EA0  5E33               	subwf	btemp^0,f,c
 10856  015EA2  0E00               	movlw	0
 10857  015EA4  5A34               	subwfb	(btemp+1)^0,f,c
 10858  015EA6                     l2855:
 10859                           
 10860                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10861  015EA6  0EF6               	movlw	246
 10862  015EA8  26E1               	addwf	fsr1l,f,c
 10863  015EAA  0EFF               	movlw	255
 10864  015EAC  22E2               	addwfc	fsr1h,f,c
 10865  015EAE  0012               	return		;funcret
 10866  015EB0                     __end_of_strncmp:
 10867                           	opt callstack 0
 10868                           
 10869 ;; *************** function _stoa *****************
 10870 ;; Defined at:
 10871 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10874 ;;		 -> f(6), NULL(0), 
 10875 ;;  s               2  [STACK] PTR unsigned char 
 10876 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
 10877 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
 10878 ;;		 -> STR_3(5), V(203), 
 10879 ;; Auto vars:     Size  Location     Type
 10880 ;;  nuls            7  [STACK] unsigned char [7]
 10881 ;;  l               2  [STACK] int 
 10882 ;;  p               2  [STACK] int 
 10883 ;;  cp              2  [STACK] PTR unsigned char 
 10884 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
 10885 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
 10886 ;;		 -> STR_7(5), STR_3(5), V(203), 
 10887 ;;  w               2  [STACK] int 
 10888 ;;  i               2  [STACK] int 
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  2  [STACK] int 
 10891 ;; Registers used:
 10892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10893 ;; Tracked objects:
 10894 ;;		On entry : 0/0
 10895 ;;		On exit  : 0/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10902 ;;Total ram usage:        0 bytes
 10903 ;; Hardware stack levels used:    1
 10904 ;; Hardware stack levels required when called:    9
 10905 ;; This function calls:
 10906 ;;		_fputc
 10907 ;;		_strlen
 10908 ;; This function is called by:
 10909 ;;		_vfpfcnvrt
 10910 ;; This function uses a reentrant model
 10911 ;;
 10912                           
 10913                           	psect	text45
 10914  01529E                     __ptext45:
 10915                           	opt callstack 0
 10916  01529E                     _stoa:
 10917                           	opt callstack 0
 10918                           
 10919                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10920  01529E  0E11               	movlw	17
 10921  0152A0  26E1               	addwf	fsr1l,f,c
 10922  0152A2  0E00               	movlw	0
 10923  0152A4  22E2               	addwfc	fsr1h,f,c
 10924                           
 10925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10926                           
 10927                           ;incstack = 0
 10928  0152A6  EE20  F0CD         	lfsr	2,stoa@F1166
 10929                           
 10930                           ;stkvar	_nuls @ sp[(-17)+0]
 10931  0152AA  0E07               	movlw	7
 10932  0152AC  6E33               	movwf	btemp^0,c
 10933  0152AE  0EEF               	movlw	-17
 10934  0152B0                     us989999:
 10935  0152B0  006F FF7B FFE3     	movff	postinc2,plusw1
 10936  0152B6  28E8               	incf	wreg,w,c
 10937  0152B8  2E33               	decfsz	btemp^0,f,c
 10938  0152BA  D7FA               	bra	us989999
 10939                           
 10940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10941                           ;stkvar	_s @ sp[(-17)+-4]
 10942  0152BC  0EEB               	movlw	-21
 10943  0152BE  006F FF8C  F03D    	movff	plusw1,btemp+10
 10944  0152C4  0EEC               	movlw	-20
 10945  0152C6  006F FF8C  F03E    	movff	plusw1,btemp+11
 10946                           
 10947                           ;stkvar	_cp @ sp[(-17)+11]
 10948  0152CC  0EFB               	movlw	-5
 10949  0152CE  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 10950  0152D4  0EFA               	movlw	-6
 10951  0152D6  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 10952                           
 10953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10954                           ;stkvar	_cp @ sp[(-17)+11]
 10955  0152DC  0EFA               	movlw	-6
 10956  0152DE  006F FF8C  F033    	movff	plusw1,btemp
 10957  0152E4  0EFB               	movlw	-5
 10958  0152E6  50E3               	movf	plusw1,w,c
 10959  0152E8  1033               	iorwf	btemp^0,w,c
 10960  0152EA  A4D8               	btfss	status,2,c
 10961  0152EC  D00E               	goto	l9706
 10962                           
 10963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10964                           ;stkvar	_nuls @ sp[(-17)+0]
 10965  0152EE  0EEF               	movlw	239
 10966  0152F0  24E1               	addwf	fsr1l,w,c
 10967  0152F2  6E3D               	movwf	(btemp+10)^0,c
 10968  0152F4  0EFF               	movlw	255
 10969  0152F6  20E2               	addwfc	fsr1h,w,c
 10970  0152F8  6E3E               	movwf	(btemp+11)^0,c
 10971                           
 10972                           ;stkvar	_cp @ sp[(-17)+11]
 10973  0152FA  0EFB               	movlw	-5
 10974  0152FC  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 10975  015302  0EFA               	movlw	-6
 10976  015304  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 10977  01530A                     l9706:
 10978                           
 10979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10980                           ;stkvar	_cp @ sp[(-17)+11]
 10981  01530A  0EFA               	movlw	-6
 10982  01530C  006F FF8F FFE6     	movff	plusw1,postinc1
 10983  015312  006F FF8F FFE6     	movff	plusw1,postinc1
 10984  015318  ECD2  F0BC         	call	_strlen	;wreg free
 10985                           
 10986                           ;stkvar	_l @ sp[(-17)+7]
 10987  01531C  0EF6               	movlw	-10
 10988  01531E  0060  F0CF  FFE3   	movff	btemp,plusw1
 10989  015324  0EF7               	movlw	-9
 10990  015326  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 10991                           
 10992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10993                           ;stkvar	_p @ sp[(-17)+9]
 10994  01532C  0EF8               	movlw	-8
 10995  01532E  0060  F07B  FFE3   	movff	_prec,plusw1
 10996  015334  0EF9               	movlw	-7
 10997  015336  0060  F07F  FFE3   	movff	_prec+1,plusw1
 10998                           
 10999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11000                           ;stkvar	_p @ sp[(-17)+9]
 11001  01533C  0EF9               	movlw	-7
 11002  01533E  BEE3               	btfsc	plusw1,7,c
 11003  015340  D023               	goto	l1906
 11004                           
 11005                           ;stkvar	_l @ sp[(-17)+7]
 11006                           ;stkvar	_p @ sp[(-17)+9]
 11007  015342  50E1               	movf	fsr1l,w,c
 11008  015344  0FF8               	addlw	-8
 11009  015346  6ED9               	movwf	fsr2l,c
 11010  015348  50E2               	movf	fsr1h,w,c
 11011  01534A  6EDA               	movwf	fsr2h,c
 11012  01534C  0EFF               	movlw	255
 11013  01534E  22DA               	addwfc	fsr2h,f,c
 11014  015350  0EF6               	movlw	-10
 11015  015352  50E3               	movf	plusw1,w,c
 11016  015354  5CDE               	subwf	postinc2,w,c
 11017  015356  50DE               	movf	postinc2,w,c
 11018  015358  0A80               	xorlw	128
 11019  01535A  6E33               	movwf	btemp^0,c
 11020  01535C  0EF7               	movlw	-9
 11021  01535E  50E3               	movf	plusw1,w,c
 11022  015360  0A80               	xorlw	128
 11023  015362  5833               	subwfb	btemp^0,w,c
 11024  015364  B0D8               	btfsc	status,0,c
 11025  015366  D010               	goto	l1906
 11026                           
 11027                           ;stkvar	_p @ sp[(-17)+9]
 11028                           ;stkvar	_l @ sp[(-17)+7]
 11029  015368  0EF8               	movlw	-8
 11030  01536A  006F FF8C  F033    	movff	plusw1,btemp
 11031  015370  0EF6               	movlw	-10
 11032  015372  0060  F0CF  FFE3   	movff	btemp,plusw1
 11033  015378  0EF9               	movlw	-7
 11034  01537A  006F FF8C  F033    	movff	plusw1,btemp
 11035  015380  0EF7               	movlw	-9
 11036  015382  0060  F0CF  FFE3   	movff	btemp,plusw1
 11037  015388                     l1906:
 11038                           
 11039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11040                           ;stkvar	_l @ sp[(-17)+7]
 11041                           ;stkvar	_p @ sp[(-17)+9]
 11042  015388  0EF6               	movlw	-10
 11043  01538A  006F FF8C  F033    	movff	plusw1,btemp
 11044  015390  0EF8               	movlw	-8
 11045  015392  0060  F0CF  FFE3   	movff	btemp,plusw1
 11046  015398  0EF7               	movlw	-9
 11047  01539A  006F FF8C  F033    	movff	plusw1,btemp
 11048  0153A0  0EF9               	movlw	-7
 11049  0153A2  0060  F0CF  FFE3   	movff	btemp,plusw1
 11050                           
 11051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11052                           ;stkvar	_w @ sp[(-17)+13]
 11053  0153A8  0EFC               	movlw	-4
 11054  0153AA  0060  F073  FFE3   	movff	_width,plusw1
 11055  0153B0  0EFD               	movlw	-3
 11056  0153B2  0060  F077  FFE3   	movff	_width+1,plusw1
 11057                           
 11058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11059  0153B8  A020               	btfss	_flags^0,0,c
 11060  0153BA  D01F               	goto	l9726
 11061  0153BC  D031               	goto	u9940
 11062  0153BE                     l9722:
 11063                           
 11064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11065                           ;stkvar	_fp @ sp[(-17)+-2]
 11066  0153BE  0EED               	movlw	-19
 11067  0153C0  006F FF8F FFE6     	movff	plusw1,postinc1
 11068  0153C6  006F FF8F FFE6     	movff	plusw1,postinc1
 11069  0153CC  0E20               	movlw	32
 11070  0153CE  6EE6               	movwf	postinc1,c
 11071  0153D0  0E00               	movlw	0
 11072  0153D2  6EE6               	movwf	postinc1,c
 11073  0153D4  EC16  F0B7         	call	_fputc	;wreg free
 11074                           
 11075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11076                           ;stkvar	_l @ sp[(-17)+7]
 11077  0153D8  0EF6               	movlw	-10
 11078  0153DA  50E3               	movf	plusw1,w,c
 11079  0153DC  0F01               	addlw	1
 11080  0153DE  6E33               	movwf	btemp^0,c
 11081  0153E0  0EF6               	movlw	-10
 11082  0153E2  0060  F0CF  FFE3   	movff	btemp,plusw1
 11083  0153E8  6A33               	clrf	btemp^0,c
 11084  0153EA  0EF7               	movlw	-9
 11085  0153EC  50E3               	movf	plusw1,w,c
 11086  0153EE  2033               	addwfc	btemp^0,w,c
 11087  0153F0  6E33               	movwf	btemp^0,c
 11088  0153F2  0EF7               	movlw	-9
 11089  0153F4  0060  F0CF  FFE3   	movff	btemp,plusw1
 11090  0153FA                     l9726:
 11091                           
 11092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11093                           ;stkvar	_w @ sp[(-17)+13]
 11094                           ;stkvar	_l @ sp[(-17)+7]
 11095  0153FA  50E1               	movf	fsr1l,w,c
 11096  0153FC  0FF6               	addlw	-10
 11097  0153FE  6ED9               	movwf	fsr2l,c
 11098  015400  50E2               	movf	fsr1h,w,c
 11099  015402  6EDA               	movwf	fsr2h,c
 11100  015404  0EFF               	movlw	255
 11101  015406  22DA               	addwfc	fsr2h,f,c
 11102  015408  0EFC               	movlw	-4
 11103  01540A  50E3               	movf	plusw1,w,c
 11104  01540C  5CDE               	subwf	postinc2,w,c
 11105  01540E  50DE               	movf	postinc2,w,c
 11106  015410  0A80               	xorlw	128
 11107  015412  6E33               	movwf	btemp^0,c
 11108  015414  0EFD               	movlw	-3
 11109  015416  50E3               	movf	plusw1,w,c
 11110  015418  0A80               	xorlw	128
 11111  01541A  5833               	subwfb	btemp^0,w,c
 11112  01541C  A0D8               	btfss	status,0,c
 11113  01541E  D7CF               	goto	l9722
 11114  015420                     u9940:
 11115                           
 11116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11117                           ;stkvar	_i @ sp[(-17)+15]
 11118  015420  0EFE               	movlw	-2
 11119  015422  6AE3               	clrf	plusw1,c
 11120  015424  0EFF               	movlw	-1
 11121  015426  6AE3               	clrf	plusw1,c
 11122                           
 11123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11124  015428  D045               	goto	l9736
 11125  01542A                     l9730:
 11126                           
 11127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11128                           ;stkvar	_fp @ sp[(-17)+-2]
 11129  01542A  0EED               	movlw	-19
 11130  01542C  006F FF8F FFE6     	movff	plusw1,postinc1
 11131  015432  006F FF8F FFE6     	movff	plusw1,postinc1
 11132                           
 11133                           ;stkvar	_cp @ sp[(-19)+11]
 11134  015438  0EF8               	movlw	-8
 11135  01543A  006F FF8F FFF6     	movff	plusw1,tblptrl
 11136  015440  0EF9               	movlw	-7
 11137  015442  006F FF8F FFF7     	movff	plusw1,tblptrh
 11138  015448  0E00               	movlw	low (__mediumconst shr (0+16))
 11139  01544A  6EF8               	movwf	tblptru,c
 11140  01544C  0E1F               	movlw	(high __ramtop+-1)
 11141  01544E  64F7               	cpfsgt	tblptrh,c
 11142  015450  D003               	bra	u9957
 11143  015452  0008               	tblrd		*
 11144  015454  50F5               	movf	tablat,w,c
 11145  015456  D007               	bra	u9950
 11146  015458                     u9957:
 11147  015458  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11148  01545E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11149  015464  50EF               	movf	indf0,w,c
 11150  015466                     u9950:
 11151  015466  6EE6               	movwf	postinc1,c
 11152  015468  0E00               	movlw	0
 11153  01546A  6EE6               	movwf	postinc1,c
 11154  01546C  EC16  F0B7         	call	_fputc	;wreg free
 11155                           
 11156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11157                           ;stkvar	_cp @ sp[(-17)+11]
 11158  015470  0EFA               	movlw	-6
 11159  015472  50E3               	movf	plusw1,w,c
 11160  015474  0F01               	addlw	1
 11161  015476  6E33               	movwf	btemp^0,c
 11162  015478  0EFA               	movlw	-6
 11163  01547A  0060  F0CF  FFE3   	movff	btemp,plusw1
 11164  015480  6A33               	clrf	btemp^0,c
 11165  015482  0EFB               	movlw	-5
 11166  015484  50E3               	movf	plusw1,w,c
 11167  015486  2033               	addwfc	btemp^0,w,c
 11168  015488  6E33               	movwf	btemp^0,c
 11169  01548A  0EFB               	movlw	-5
 11170  01548C  0060  F0CF  FFE3   	movff	btemp,plusw1
 11171                           
 11172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11173                           ;stkvar	_i @ sp[(-17)+15]
 11174  015492  0EFE               	movlw	-2
 11175  015494  50E3               	movf	plusw1,w,c
 11176  015496  0F01               	addlw	1
 11177  015498  6E33               	movwf	btemp^0,c
 11178  01549A  0EFE               	movlw	-2
 11179  01549C  0060  F0CF  FFE3   	movff	btemp,plusw1
 11180  0154A2  6A33               	clrf	btemp^0,c
 11181  0154A4  0EFF               	movlw	-1
 11182  0154A6  50E3               	movf	plusw1,w,c
 11183  0154A8  2033               	addwfc	btemp^0,w,c
 11184  0154AA  6E33               	movwf	btemp^0,c
 11185  0154AC  0EFF               	movlw	-1
 11186  0154AE  0060  F0CF  FFE3   	movff	btemp,plusw1
 11187  0154B4                     l9736:
 11188                           
 11189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11190                           ;stkvar	_p @ sp[(-17)+9]
 11191                           ;stkvar	_i @ sp[(-17)+15]
 11192  0154B4  50E1               	movf	fsr1l,w,c
 11193  0154B6  0FFE               	addlw	-2
 11194  0154B8  6ED9               	movwf	fsr2l,c
 11195  0154BA  50E2               	movf	fsr1h,w,c
 11196  0154BC  6EDA               	movwf	fsr2h,c
 11197  0154BE  0EFF               	movlw	255
 11198  0154C0  22DA               	addwfc	fsr2h,f,c
 11199  0154C2  0EF8               	movlw	-8
 11200  0154C4  50E3               	movf	plusw1,w,c
 11201  0154C6  5CDE               	subwf	postinc2,w,c
 11202  0154C8  50DE               	movf	postinc2,w,c
 11203  0154CA  0A80               	xorlw	128
 11204  0154CC  6E33               	movwf	btemp^0,c
 11205  0154CE  0EF9               	movlw	-7
 11206  0154D0  50E3               	movf	plusw1,w,c
 11207  0154D2  0A80               	xorlw	128
 11208  0154D4  5833               	subwfb	btemp^0,w,c
 11209  0154D6  A0D8               	btfss	status,0,c
 11210  0154D8  D7A8               	goto	l9730
 11211                           
 11212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11213  0154DA  B020               	btfsc	_flags^0,0,c
 11214  0154DC  D01F               	goto	l9744
 11215  0154DE  D031               	goto	u9980
 11216  0154E0                     l9740:
 11217                           
 11218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11219                           ;stkvar	_fp @ sp[(-17)+-2]
 11220  0154E0  0EED               	movlw	-19
 11221  0154E2  006F FF8F FFE6     	movff	plusw1,postinc1
 11222  0154E8  006F FF8F FFE6     	movff	plusw1,postinc1
 11223  0154EE  0E20               	movlw	32
 11224  0154F0  6EE6               	movwf	postinc1,c
 11225  0154F2  0E00               	movlw	0
 11226  0154F4  6EE6               	movwf	postinc1,c
 11227  0154F6  EC16  F0B7         	call	_fputc	;wreg free
 11228                           
 11229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11230                           ;stkvar	_l @ sp[(-17)+7]
 11231  0154FA  0EF6               	movlw	-10
 11232  0154FC  50E3               	movf	plusw1,w,c
 11233  0154FE  0F01               	addlw	1
 11234  015500  6E33               	movwf	btemp^0,c
 11235  015502  0EF6               	movlw	-10
 11236  015504  0060  F0CF  FFE3   	movff	btemp,plusw1
 11237  01550A  6A33               	clrf	btemp^0,c
 11238  01550C  0EF7               	movlw	-9
 11239  01550E  50E3               	movf	plusw1,w,c
 11240  015510  2033               	addwfc	btemp^0,w,c
 11241  015512  6E33               	movwf	btemp^0,c
 11242  015514  0EF7               	movlw	-9
 11243  015516  0060  F0CF  FFE3   	movff	btemp,plusw1
 11244  01551C                     l9744:
 11245                           
 11246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11247                           ;stkvar	_w @ sp[(-17)+13]
 11248                           ;stkvar	_l @ sp[(-17)+7]
 11249  01551C  50E1               	movf	fsr1l,w,c
 11250  01551E  0FF6               	addlw	-10
 11251  015520  6ED9               	movwf	fsr2l,c
 11252  015522  50E2               	movf	fsr1h,w,c
 11253  015524  6EDA               	movwf	fsr2h,c
 11254  015526  0EFF               	movlw	255
 11255  015528  22DA               	addwfc	fsr2h,f,c
 11256  01552A  0EFC               	movlw	-4
 11257  01552C  50E3               	movf	plusw1,w,c
 11258  01552E  5CDE               	subwf	postinc2,w,c
 11259  015530  50DE               	movf	postinc2,w,c
 11260  015532  0A80               	xorlw	128
 11261  015534  6E33               	movwf	btemp^0,c
 11262  015536  0EFD               	movlw	-3
 11263  015538  50E3               	movf	plusw1,w,c
 11264  01553A  0A80               	xorlw	128
 11265  01553C  5833               	subwfb	btemp^0,w,c
 11266  01553E  A0D8               	btfss	status,0,c
 11267  015540  D7CF               	goto	l9740
 11268  015542                     u9980:
 11269                           
 11270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11271                           ;stkvar	_l @ sp[(-17)+7]
 11272  015542  0EF6               	movlw	-10
 11273  015544  006F FF8C  F033    	movff	plusw1,btemp
 11274  01554A  0EF7               	movlw	-9
 11275  01554C  006F FF8C  F034    	movff	plusw1,btemp+1
 11276                           
 11277                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11278  015552  0EEB               	movlw	235
 11279  015554  26E1               	addwf	fsr1l,f,c
 11280  015556  0EFF               	movlw	255
 11281  015558  22E2               	addwfc	fsr1h,f,c
 11282  01555A  0012               	return		;funcret
 11283  01555C                     __end_of_stoa:
 11284                           	opt callstack 0
 11285                           
 11286 ;; *************** function _efgtoa *****************
 11287 ;; Defined at:
 11288 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11289 ;; Parameters:    Size  Location     Type
 11290 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11291 ;;		 -> f(6), NULL(0), 
 11292 ;;  f               4  [STACK] PTR struct _IO_FILE
 11293 ;;  c               1  [STACK] unsigned char 
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;  u               4  [STACK] unsigned char 
 11296 ;;  g               4  [STACK] unsigned char 
 11297 ;;  l               4  [STACK] unsigned char 
 11298 ;;  h               4  [STACK] unsigned char 
 11299 ;;  ou              4  [STACK] unsigned char 
 11300 ;;  n               2  [STACK] int 
 11301 ;;  e               2  [STACK] int 
 11302 ;;  i               2  [STACK] int 
 11303 ;;  w               2  [STACK] int 
 11304 ;;  p               2  [STACK] int 
 11305 ;;  sign            2  [STACK] int 
 11306 ;;  d               2  [STACK] int 
 11307 ;;  ne              2  [STACK] int 
 11308 ;;  m               2  [STACK] int 
 11309 ;;  pp              2  [STACK] int 
 11310 ;;  t               2  [STACK] int 
 11311 ;;  mode            1  [STACK] unsigned char 
 11312 ;;  nmode           1  [STACK] unsigned char 
 11313 ;; Return value:  Size  Location     Type
 11314 ;;                  2  [STACK] int 
 11315 ;; Registers used:
 11316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11317 ;; Tracked objects:
 11318 ;;		On entry : 0/0
 11319 ;;		On exit  : 0/0
 11320 ;;		Unchanged: 0/0
 11321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11326 ;;Total ram usage:        0 bytes
 11327 ;; Hardware stack levels used:    1
 11328 ;; Hardware stack levels required when called:   11
 11329 ;; This function calls:
 11330 ;;		___awdiv
 11331 ;;		___awmod
 11332 ;;		___fladd
 11333 ;;		___fldiv
 11334 ;;		___fleq
 11335 ;;		___flge
 11336 ;;		___flmul
 11337 ;;		___flneg
 11338 ;;		___flsub
 11339 ;;		___fltol
 11340 ;;		___fpclassifyf
 11341 ;;		_floorf
 11342 ;;		_isupper
 11343 ;;		_pad
 11344 ;;		_strcpy
 11345 ;;		_tolower
 11346 ;; This function is called by:
 11347 ;;		_vfpfcnvrt
 11348 ;; This function uses a reentrant model
 11349 ;;
 11350                           
 11351                           	psect	text46
 11352  010000                     __ptext46:
 11353                           	opt callstack 0
 11354  010000                     _efgtoa:
 11355                           	opt callstack 0
 11356                           
 11357                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11358  010000  0E38               	movlw	56
 11359  010002  26E1               	addwf	fsr1l,f,c
 11360  010004  0E00               	movlw	0
 11361  010006  22E2               	addwfc	fsr1h,f,c
 11362                           
 11363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11364                           ;stkvar	_sign @ sp[(-56)+42]
 11365                           
 11366                           ;incstack = 0
 11367  010008  0EF2               	movlw	-14
 11368  01000A  6AE3               	clrf	plusw1,c
 11369  01000C  0EF3               	movlw	-13
 11370  01000E  6AE3               	clrf	plusw1,c
 11371                           
 11372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11373                           ;stkvar	_f @ sp[(-56)+-6]
 11374  010010  0EC2               	movlw	-62
 11375  010012  006F FF8C  F03B    	movff	plusw1,btemp+8
 11376  010018  0EC3               	movlw	-61
 11377  01001A  006F FF8C  F03C    	movff	plusw1,btemp+9
 11378  010020  0EC4               	movlw	-60
 11379  010022  006F FF8C  F03D    	movff	plusw1,btemp+10
 11380  010028  0EC5               	movlw	-59
 11381  01002A  006F FF8C  F03E    	movff	plusw1,btemp+11
 11382                           
 11383                           ;stkvar	_g @ sp[(-56)+16]
 11384  010030  0ED8               	movlw	-40
 11385  010032  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 11386  010038  0ED9               	movlw	-39
 11387  01003A  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 11388  010040  0EDA               	movlw	-38
 11389  010042  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 11390  010048  0EDB               	movlw	-37
 11391  01004A  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 11392                           
 11393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11394                           ;stkvar	_g @ sp[(-56)+16]
 11395  010050  0EDB               	movlw	-37
 11396  010052  AEE3               	btfss	plusw1,7,c
 11397  010054  D02B               	goto	l9404
 11398                           
 11399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11400  010056  0E01               	movlw	1
 11401  010058  6E3D               	movwf	(btemp+10)^0,c
 11402  01005A  0E00               	movlw	0
 11403  01005C  6E3E               	movwf	(btemp+11)^0,c
 11404                           
 11405                           ;stkvar	_sign @ sp[(-56)+42]
 11406  01005E  0EF2               	movlw	-14
 11407  010060  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 11408  010066  0EF3               	movlw	-13
 11409  010068  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 11410                           
 11411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11412                           ;stkvar	_g @ sp[(-56)+16]
 11413  01006E  0ED8               	movlw	-40
 11414  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11415  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11416  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11417  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11418  010088  ECE6  F0C1         	call	___flneg	;wreg free
 11419                           
 11420                           ;stkvar	_g @ sp[(-56)+16]
 11421  01008C  0ED8               	movlw	-40
 11422  01008E  0060  F0CF  FFE3   	movff	btemp,plusw1
 11423  010094  0ED9               	movlw	-39
 11424  010096  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 11425  01009C  0EDA               	movlw	-38
 11426  01009E  0060  F0D7  FFE3   	movff	btemp+2,plusw1
 11427  0100A4  0EDB               	movlw	-37
 11428  0100A6  0060  F0DB  FFE3   	movff	btemp+3,plusw1
 11429  0100AC                     l9404:
 11430                           
 11431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11432                           ;stkvar	_n @ sp[(-56)+32]
 11433  0100AC  0EE8               	movlw	-24
 11434  0100AE  6AE3               	clrf	plusw1,c
 11435  0100B0  0EE9               	movlw	-23
 11436  0100B2  6AE3               	clrf	plusw1,c
 11437                           
 11438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11439                           ;stkvar	_w @ sp[(-56)+38]
 11440  0100B4  0EEE               	movlw	-18
 11441  0100B6  0060  F073  FFE3   	movff	_width,plusw1
 11442  0100BC  0EEF               	movlw	-17
 11443  0100BE  0060  F077  FFE3   	movff	_width+1,plusw1
 11444                           
 11445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11446                           ;stkvar	_sign @ sp[(-56)+42]
 11447  0100C4  0EF2               	movlw	-14
 11448  0100C6  006F FF8C  F033    	movff	plusw1,btemp
 11449  0100CC  0EF3               	movlw	-13
 11450  0100CE  50E3               	movf	plusw1,w,c
 11451  0100D0  1033               	iorwf	btemp^0,w,c
 11452  0100D2  A4D8               	btfss	status,2,c
 11453  0100D4  D002               	goto	u9390
 11454  0100D6  A420               	btfss	_flags^0,2,c
 11455  0100D8  D036               	goto	l9424
 11456  0100DA                     u9390:
 11457                           
 11458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11459                           ;stkvar	_sign @ sp[(-56)+42]
 11460  0100DA  0EF2               	movlw	-14
 11461  0100DC  006F FF8C  F033    	movff	plusw1,btemp
 11462  0100E2  0EF3               	movlw	-13
 11463  0100E4  50E3               	movf	plusw1,w,c
 11464  0100E6  1033               	iorwf	btemp^0,w,c
 11465  0100E8  A4D8               	btfss	status,2,c
 11466  0100EA  D002               	goto	l9416
 11467  0100EC  0E2B               	movlw	43
 11468  0100EE  D001               	goto	L11
 11469  0100F0                     l9416:
 11470  0100F0  0E2D               	movlw	45
 11471  0100F2                     L11:
 11472  0100F2  6E3D               	movwf	(btemp+10)^0,c
 11473  0100F4  0E00               	movlw	0
 11474  0100F6  6E3E               	movwf	(btemp+11)^0,c
 11475                           
 11476                           ;stkvar	_efgtoa$4261 @ sp[(-56)+10]
 11477  0100F8  0ED2               	movlw	-46
 11478  0100FA  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 11479  010100  0ED3               	movlw	-45
 11480  010102  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 11481                           
 11482                           ;stkvar	_efgtoa$4261 @ sp[(-56)+10]
 11483  010108  0ED2               	movlw	-46
 11484  01010A  006F FF8C  F2AC    	movff	plusw1,_dbuf
 11485                           
 11486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11487                           ;stkvar	_n @ sp[(-56)+32]
 11488  010110  0EE8               	movlw	-24
 11489  010112  50E3               	movf	plusw1,w,c
 11490  010114  0F01               	addlw	1
 11491  010116  6E33               	movwf	btemp^0,c
 11492  010118  0EE8               	movlw	-24
 11493  01011A  0060  F0CF  FFE3   	movff	btemp,plusw1
 11494  010120  6A33               	clrf	btemp^0,c
 11495  010122  0EE9               	movlw	-23
 11496  010124  50E3               	movf	plusw1,w,c
 11497  010126  2033               	addwfc	btemp^0,w,c
 11498  010128  6E33               	movwf	btemp^0,c
 11499  01012A  0EE9               	movlw	-23
 11500  01012C  0060  F0CF  FFE3   	movff	btemp,plusw1
 11501                           
 11502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11503                           ;stkvar	_w @ sp[(-56)+38]
 11504  010132  50E1               	movf	fsr1l,w,c
 11505  010134  0FEE               	addlw	-18
 11506  010136  6ED9               	movwf	fsr2l,c
 11507  010138  50E2               	movf	fsr1h,w,c
 11508  01013A  6EDA               	movwf	fsr2h,c
 11509  01013C  0EFF               	movlw	255
 11510  01013E  22DA               	addwfc	fsr2h,f,c
 11511  010140  06DE               	decf	postinc2,f,c
 11512  010142  0E00               	movlw	0
 11513  010144  5ADD               	subwfb	postdec2,f,c
 11514  010146                     l9424:
 11515                           
 11516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11517                           ;stkvar	_g @ sp[(-56)+16]
 11518  010146  0ED8               	movlw	-40
 11519  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11520  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11521  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11522  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11523  010160  EC43  F0B2         	call	___fpclassifyf	;wreg free
 11524  010164  0433               	decf	btemp^0,w,c
 11525  010166  1034               	iorwf	(btemp+1)^0,w,c
 11526  010168  A4D8               	btfss	status,2,c
 11527  01016A  D076               	goto	l9442
 11528  01016C  0EBF               	movlw	191
 11529  01016E  6E3D               	movwf	(btemp+10)^0,c
 11530  010170  0EFF               	movlw	255
 11531  010172  6E3E               	movwf	(btemp+11)^0,c
 11532                           
 11533                           ;stkvar	_c @ sp[(-56)+-7]
 11534  010174  0EC1               	movlw	-63
 11535  010176  50E3               	movf	plusw1,w,c
 11536  010178  6E3B               	movwf	(btemp+8)^0,c
 11537  01017A  6A3C               	clrf	(btemp+9)^0,c
 11538  01017C  503D               	movf	(btemp+10)^0,w,c
 11539  01017E  263B               	addwf	(btemp+8)^0,f,c
 11540  010180  503E               	movf	(btemp+11)^0,w,c
 11541  010182  223C               	addwfc	(btemp+9)^0,f,c
 11542  010184  503C               	movf	(btemp+9)^0,w,c
 11543  010186  E106               	bnz	u9420
 11544  010188  0E1A               	movlw	26
 11545  01018A  5C3B               	subwf	(btemp+8)^0,w,c
 11546  01018C  B0D8               	btfsc	status,0,c
 11547  01018E  D002               	goto	u9420
 11548  010190  0E01               	movlw	1
 11549  010192  D001               	goto	u9430
 11550  010194                     u9420:
 11551  010194  0E00               	movlw	0
 11552  010196                     u9430:
 11553  010196  6E3D               	movwf	(btemp+10)^0,c
 11554  010198  6A3E               	clrf	(btemp+11)^0,c
 11555                           
 11556                           ;stkvar	_efgtoa$4262 @ sp[(-56)+8]
 11557  01019A  0ED0               	movlw	-48
 11558  01019C  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 11559  0101A2  0ED1               	movlw	-47
 11560  0101A4  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 11561                           
 11562                           ;stkvar	_efgtoa$4262 @ sp[(-56)+8]
 11563  0101AA  0ED0               	movlw	-48
 11564  0101AC  006F FF8C  F033    	movff	plusw1,btemp
 11565  0101B2  0ED1               	movlw	-47
 11566  0101B4  50E3               	movf	plusw1,w,c
 11567  0101B6  1033               	iorwf	btemp^0,w,c
 11568  0101B8  B4D8               	btfsc	status,2,c
 11569  0101BA  D017               	goto	l9434
 11570                           
 11571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11572  0101BC  0ED7               	movlw	low STR_34
 11573  0101BE  6EE6               	movwf	postinc1,c
 11574  0101C0  0EFF               	movlw	high STR_34
 11575  0101C2  6EE6               	movwf	postinc1,c
 11576                           
 11577                           ;stkvar	_n @ sp[(-58)+32]
 11578  0101C4  0EAC               	movlw	low _dbuf
 11579  0101C6  6E3D               	movwf	(btemp+10)^0,c
 11580  0101C8  0E02               	movlw	high _dbuf
 11581  0101CA  6E3E               	movwf	(btemp+11)^0,c
 11582  0101CC  0EE6               	movlw	-26
 11583  0101CE  50E3               	movf	plusw1,w,c
 11584  0101D0  263D               	addwf	(btemp+10)^0,f,c
 11585  0101D2  0EE7               	movlw	-25
 11586  0101D4  50E3               	movf	plusw1,w,c
 11587  0101D6  223E               	addwfc	(btemp+11)^0,f,c
 11588  0101D8  0060  F0F7  FFE6   	movff	btemp+10,postinc1
 11589  0101DE  0060  F0FB  FFE6   	movff	btemp+11,postinc1
 11590  0101E4  EC3F  F0BA         	call	_strcpy	;wreg free
 11591                           
 11592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11593  0101E8  D016               	goto	l9436
 11594  0101EA                     l9434:
 11595                           
 11596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11597  0101EA  0EDF               	movlw	low STR_35
 11598  0101EC  6EE6               	movwf	postinc1,c
 11599  0101EE  0EFF               	movlw	high STR_35
 11600  0101F0  6EE6               	movwf	postinc1,c
 11601                           
 11602                           ;stkvar	_n @ sp[(-58)+32]
 11603  0101F2  0EAC               	movlw	low _dbuf
 11604  0101F4  6E3D               	movwf	(btemp+10)^0,c
 11605  0101F6  0E02               	movlw	high _dbuf
 11606  0101F8  6E3E               	movwf	(btemp+11)^0,c
 11607  0101FA  0EE6               	movlw	-26
 11608  0101FC  50E3               	movf	plusw1,w,c
 11609  0101FE  263D               	addwf	(btemp+10)^0,f,c
 11610  010200  0EE7               	movlw	-25
 11611  010202  50E3               	movf	plusw1,w,c
 11612  010204  223E               	addwfc	(btemp+11)^0,f,c
 11613  010206  0060  F0F7  FFE6   	movff	btemp+10,postinc1
 11614  01020C  0060  F0FB  FFE6   	movff	btemp+11,postinc1
 11615  010212  EC3F  F0BA         	call	_strcpy	;wreg free
 11616  010216                     l9436:
 11617                           
 11618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11619                           ;stkvar	_w @ sp[(-56)+38]
 11620  010216  50E1               	movf	fsr1l,w,c
 11621  010218  0FEE               	addlw	-18
 11622  01021A  6ED9               	movwf	fsr2l,c
 11623  01021C  50E2               	movf	fsr1h,w,c
 11624  01021E  6EDA               	movwf	fsr2h,c
 11625  010220  0EFF               	movlw	255
 11626  010222  22DA               	addwfc	fsr2h,f,c
 11627  010224  0EFD               	movlw	253
 11628  010226  26DE               	addwf	postinc2,f,c
 11629  010228  0EFF               	movlw	255
 11630  01022A  22DD               	addwfc	postdec2,f,c
 11631  01022C                     l9438:
 11632                           
 11633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11634                           ;stkvar	_w @ sp[(-56)+38]
 11635  01022C  0EEE               	movlw	-18
 11636  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11637  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11638  01023A  0EAC               	movlw	low _dbuf
 11639  01023C  6EE6               	movwf	postinc1,c
 11640  01023E  0E02               	movlw	high _dbuf
 11641  010240  6EE6               	movwf	postinc1,c
 11642                           
 11643                           ;stkvar	_fp @ sp[(-60)+-2]
 11644  010242  0EC2               	movlw	-62
 11645  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11646  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11647  010250  EC34  F0B8         	call	_pad	;wreg free
 11648  010254  EF1D  F089         	goto	l1824
 11649  010258                     l9442:
 11650                           
 11651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11652                           ;stkvar	_g @ sp[(-56)+16]
 11653  010258  0ED8               	movlw	-40
 11654  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11655  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11656  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11657  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11658  010272  EC43  F0B2         	call	___fpclassifyf	;wreg free
 11659  010276  5033               	movf	btemp^0,w,c
 11660  010278  1034               	iorwf	(btemp+1)^0,w,c
 11661  01027A  A4D8               	btfss	status,2,c
 11662  01027C  D056               	goto	l9460
 11663  01027E  0EBF               	movlw	191
 11664  010280  6E3D               	movwf	(btemp+10)^0,c
 11665  010282  0EFF               	movlw	255
 11666  010284  6E3E               	movwf	(btemp+11)^0,c
 11667                           
 11668                           ;stkvar	_c @ sp[(-56)+-7]
 11669  010286  0EC1               	movlw	-63
 11670  010288  50E3               	movf	plusw1,w,c
 11671  01028A  6E3B               	movwf	(btemp+8)^0,c
 11672  01028C  6A3C               	clrf	(btemp+9)^0,c
 11673  01028E  503D               	movf	(btemp+10)^0,w,c
 11674  010290  263B               	addwf	(btemp+8)^0,f,c
 11675  010292  503E               	movf	(btemp+11)^0,w,c
 11676  010294  223C               	addwfc	(btemp+9)^0,f,c
 11677  010296  503C               	movf	(btemp+9)^0,w,c
 11678  010298  E106               	bnz	u9460
 11679  01029A  0E1A               	movlw	26
 11680  01029C  5C3B               	subwf	(btemp+8)^0,w,c
 11681  01029E  B0D8               	btfsc	status,0,c
 11682  0102A0  D002               	goto	u9460
 11683  0102A2  0E01               	movlw	1
 11684  0102A4  D001               	goto	u9470
 11685  0102A6                     u9460:
 11686  0102A6  0E00               	movlw	0
 11687  0102A8                     u9470:
 11688  0102A8  6E3D               	movwf	(btemp+10)^0,c
 11689  0102AA  6A3E               	clrf	(btemp+11)^0,c
 11690                           
 11691                           ;stkvar	_efgtoa$4266 @ sp[(-56)+6]
 11692  0102AC  0ECE               	movlw	-50
 11693  0102AE  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 11694  0102B4  0ECF               	movlw	-49
 11695  0102B6  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 11696                           
 11697                           ;stkvar	_efgtoa$4266 @ sp[(-56)+6]
 11698  0102BC  0ECE               	movlw	-50
 11699  0102BE  006F FF8C  F033    	movff	plusw1,btemp
 11700  0102C4  0ECF               	movlw	-49
 11701  0102C6  50E3               	movf	plusw1,w,c
 11702  0102C8  1033               	iorwf	btemp^0,w,c
 11703  0102CA  B4D8               	btfsc	status,2,c
 11704  0102CC  D017               	goto	l9452
 11705                           
 11706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11707  0102CE  0EDB               	movlw	low STR_38
 11708  0102D0  6EE6               	movwf	postinc1,c
 11709  0102D2  0EFF               	movlw	high STR_38
 11710  0102D4  6EE6               	movwf	postinc1,c
 11711                           
 11712                           ;stkvar	_n @ sp[(-58)+32]
 11713  0102D6  0EAC               	movlw	low _dbuf
 11714  0102D8  6E3D               	movwf	(btemp+10)^0,c
 11715  0102DA  0E02               	movlw	high _dbuf
 11716  0102DC  6E3E               	movwf	(btemp+11)^0,c
 11717  0102DE  0EE6               	movlw	-26
 11718  0102E0  50E3               	movf	plusw1,w,c
 11719  0102E2  263D               	addwf	(btemp+10)^0,f,c
 11720  0102E4  0EE7               	movlw	-25
 11721  0102E6  50E3               	movf	plusw1,w,c
 11722  0102E8  223E               	addwfc	(btemp+11)^0,f,c
 11723  0102EA  0060  F0F7  FFE6   	movff	btemp+10,postinc1
 11724  0102F0  0060  F0FB  FFE6   	movff	btemp+11,postinc1
 11725  0102F6  EC3F  F0BA         	call	_strcpy	;wreg free
 11726                           
 11727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11728  0102FA  D78D               	goto	l9436
 11729  0102FC                     l9452:
 11730                           
 11731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11732  0102FC  0EE3               	movlw	low STR_39
 11733  0102FE  6EE6               	movwf	postinc1,c
 11734  010300  0EFF               	movlw	high STR_39
 11735  010302  6EE6               	movwf	postinc1,c
 11736                           
 11737                           ;stkvar	_n @ sp[(-58)+32]
 11738  010304  0EAC               	movlw	low _dbuf
 11739  010306  6E3D               	movwf	(btemp+10)^0,c
 11740  010308  0E02               	movlw	high _dbuf
 11741  01030A  6E3E               	movwf	(btemp+11)^0,c
 11742  01030C  0EE6               	movlw	-26
 11743  01030E  50E3               	movf	plusw1,w,c
 11744  010310  263D               	addwf	(btemp+10)^0,f,c
 11745  010312  0EE7               	movlw	-25
 11746  010314  50E3               	movf	plusw1,w,c
 11747  010316  223E               	addwfc	(btemp+11)^0,f,c
 11748  010318  0060  F0F7  FFE6   	movff	btemp+10,postinc1
 11749  01031E  0060  F0FB  FFE6   	movff	btemp+11,postinc1
 11750  010324  EC3F  F0BA         	call	_strcpy	;wreg free
 11751  010328  D776               	goto	l9436
 11752  01032A                     l9460:
 11753                           
 11754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11755  01032A  0E00               	movlw	0
 11756  01032C  6E3B               	movwf	(btemp+8)^0,c
 11757  01032E  0E00               	movlw	0
 11758  010330  6E3C               	movwf	(btemp+9)^0,c
 11759  010332  0E80               	movlw	128
 11760  010334  6E3D               	movwf	(btemp+10)^0,c
 11761  010336  0E3F               	movlw	63
 11762  010338  6E3E               	movwf	(btemp+11)^0,c
 11763                           
 11764                           ;stkvar	_u @ sp[(-56)+12]
 11765  01033A  0ED4               	movlw	-44
 11766  01033C  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 11767  010342  0ED5               	movlw	-43
 11768  010344  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 11769  01034A  0ED6               	movlw	-42
 11770  01034C  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 11771  010352  0ED7               	movlw	-41
 11772  010354  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 11773                           
 11774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11775                           ;stkvar	_e @ sp[(-56)+34]
 11776  01035A  0EEA               	movlw	-22
 11777  01035C  6AE3               	clrf	plusw1,c
 11778  01035E  0EEB               	movlw	-21
 11779  010360  6AE3               	clrf	plusw1,c
 11780                           
 11781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11782  010362  0E00               	movlw	0
 11783  010364  6EE6               	movwf	postinc1,c
 11784  010366  0E00               	movlw	0
 11785  010368  6EE6               	movwf	postinc1,c
 11786  01036A  0E00               	movlw	0
 11787  01036C  6EE6               	movwf	postinc1,c
 11788  01036E  0E00               	movlw	0
 11789  010370  6EE6               	movwf	postinc1,c
 11790                           
 11791                           ;stkvar	_g @ sp[(-60)+16]
 11792  010372  0ED4               	movlw	-44
 11793  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11794  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11795  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11796  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11797  01038C  EC72  F0BB         	call	___fleq	;wreg free
 11798  010390  A033               	btfss	btemp& (0+255),0,c
 11799  010392  D039               	goto	l9472
 11800  010394  D0BC               	goto	u9510
 11801  010396                     l9468:
 11802                           
 11803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11804  010396  0E00               	movlw	0
 11805  010398  6EE6               	movwf	postinc1,c
 11806  01039A  0E00               	movlw	0
 11807  01039C  6EE6               	movwf	postinc1,c
 11808  01039E  0E20               	movlw	32
 11809  0103A0  6EE6               	movwf	postinc1,c
 11810  0103A2  0E41               	movlw	65
 11811  0103A4  6EE6               	movwf	postinc1,c
 11812                           
 11813                           ;stkvar	_u @ sp[(-60)+12]
 11814  0103A6  0ED0               	movlw	-48
 11815  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11816  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11817  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11818  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11819  0103C0  ECF8  F090         	call	___flmul	;wreg free
 11820                           
 11821                           ;stkvar	_u @ sp[(-56)+12]
 11822  0103C4  0ED4               	movlw	-44
 11823  0103C6  0060  F0CF  FFE3   	movff	btemp,plusw1
 11824  0103CC  0ED5               	movlw	-43
 11825  0103CE  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 11826  0103D4  0ED6               	movlw	-42
 11827  0103D6  0060  F0D7  FFE3   	movff	btemp+2,plusw1
 11828  0103DC  0ED7               	movlw	-41
 11829  0103DE  0060  F0DB  FFE3   	movff	btemp+3,plusw1
 11830                           
 11831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11832                           ;stkvar	_e @ sp[(-56)+34]
 11833  0103E4  0EEA               	movlw	-22
 11834  0103E6  50E3               	movf	plusw1,w,c
 11835  0103E8  0F01               	addlw	1
 11836  0103EA  6E33               	movwf	btemp^0,c
 11837  0103EC  0EEA               	movlw	-22
 11838  0103EE  0060  F0CF  FFE3   	movff	btemp,plusw1
 11839  0103F4  6A33               	clrf	btemp^0,c
 11840  0103F6  0EEB               	movlw	-21
 11841  0103F8  50E3               	movf	plusw1,w,c
 11842  0103FA  2033               	addwfc	btemp^0,w,c
 11843  0103FC  6E33               	movwf	btemp^0,c
 11844  0103FE  0EEB               	movlw	-21
 11845  010400  0060  F0CF  FFE3   	movff	btemp,plusw1
 11846  010406                     l9472:
 11847                           
 11848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11849  010406  0E00               	movlw	0
 11850  010408  6EE6               	movwf	postinc1,c
 11851  01040A  0E00               	movlw	0
 11852  01040C  6EE6               	movwf	postinc1,c
 11853  01040E  0E20               	movlw	32
 11854  010410  6EE6               	movwf	postinc1,c
 11855  010412  0E41               	movlw	65
 11856  010414  6EE6               	movwf	postinc1,c
 11857                           
 11858                           ;stkvar	_u @ sp[(-60)+12]
 11859  010416  0ED0               	movlw	-48
 11860  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11861  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11862  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11863  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11864  010430  ECF8  F090         	call	___flmul	;wreg free
 11865  010434  0060  F0CF  FFE6   	movff	btemp,postinc1
 11866  01043A  0060  F0D3  FFE6   	movff	btemp+1,postinc1
 11867  010440  0060  F0D7  FFE6   	movff	btemp+2,postinc1
 11868  010446  0060  F0DB  FFE6   	movff	btemp+3,postinc1
 11869                           
 11870                           ;stkvar	_g @ sp[(-60)+16]
 11871  01044C  0ED4               	movlw	-44
 11872  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11873  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11874  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11875  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11876  010466  EC87  F0B4         	call	___flge	;wreg free
 11877  01046A  A033               	btfss	btemp& (0+255),0,c
 11878  01046C  D032               	goto	l9478
 11879  01046E  D793               	goto	l9468
 11880  010470                     l9474:
 11881                           
 11882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11883  010470  0E00               	movlw	0
 11884  010472  6EE6               	movwf	postinc1,c
 11885  010474  0E00               	movlw	0
 11886  010476  6EE6               	movwf	postinc1,c
 11887  010478  0E20               	movlw	32
 11888  01047A  6EE6               	movwf	postinc1,c
 11889  01047C  0E41               	movlw	65
 11890  01047E  6EE6               	movwf	postinc1,c
 11891                           
 11892                           ;stkvar	_u @ sp[(-60)+12]
 11893  010480  0ED0               	movlw	-48
 11894  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11895  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11896  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11897  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11898  01049A  ECAE  F09B         	call	___fldiv	;wreg free
 11899                           
 11900                           ;stkvar	_u @ sp[(-56)+12]
 11901  01049E  0ED4               	movlw	-44
 11902  0104A0  0060  F0CF  FFE3   	movff	btemp,plusw1
 11903  0104A6  0ED5               	movlw	-43
 11904  0104A8  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 11905  0104AE  0ED6               	movlw	-42
 11906  0104B0  0060  F0D7  FFE3   	movff	btemp+2,plusw1
 11907  0104B6  0ED7               	movlw	-41
 11908  0104B8  0060  F0DB  FFE3   	movff	btemp+3,plusw1
 11909                           
 11910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11911                           ;stkvar	_e @ sp[(-56)+34]
 11912  0104BE  50E1               	movf	fsr1l,w,c
 11913  0104C0  0FEA               	addlw	-22
 11914  0104C2  6ED9               	movwf	fsr2l,c
 11915  0104C4  50E2               	movf	fsr1h,w,c
 11916  0104C6  6EDA               	movwf	fsr2h,c
 11917  0104C8  0EFF               	movlw	255
 11918  0104CA  22DA               	addwfc	fsr2h,f,c
 11919  0104CC  06DE               	decf	postinc2,f,c
 11920  0104CE  0E00               	movlw	0
 11921  0104D0  5ADD               	subwfb	postdec2,f,c
 11922  0104D2                     l9478:
 11923                           
 11924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11925                           ;stkvar	_u @ sp[(-56)+12]
 11926  0104D2  0ED4               	movlw	-44
 11927  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11928  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11929  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11930  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11931                           
 11932                           ;stkvar	_g @ sp[(-60)+16]
 11933  0104EC  0ED4               	movlw	-44
 11934  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11935  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11936  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11937  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11938  010506  EC87  F0B4         	call	___flge	;wreg free
 11939  01050A  A033               	btfss	btemp& (0+255),0,c
 11940  01050C  D7B1               	goto	l9474
 11941  01050E                     u9510:
 11942                           
 11943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11944                           ;stkvar	_c @ sp[(-56)+-7]
 11945  01050E  0EC1               	movlw	-63
 11946  010510  50E3               	movf	plusw1,w,c
 11947  010512  6EE6               	movwf	postinc1,c
 11948  010514  0E00               	movlw	0
 11949  010516  6EE6               	movwf	postinc1,c
 11950  010518  EC87  F0BE         	call	_tolower	;wreg free
 11951                           
 11952                           ;stkvar	_mode @ sp[(-56)+54]
 11953  01051C  0EFE               	movlw	-2
 11954  01051E  0060  F0CF  FFE3   	movff	btemp,plusw1
 11955                           
 11956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11957                           ;stkvar	_mode @ sp[(-56)+54]
 11958                           ;stkvar	_nmode @ sp[(-56)+55]
 11959  010524  0EFE               	movlw	-2
 11960  010526  006F FF8C  F033    	movff	plusw1,btemp
 11961  01052C  0EFF               	movlw	-1
 11962  01052E  0060  F0CF  FFE3   	movff	btemp,plusw1
 11963                           
 11964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11965                           ;stkvar	_mode @ sp[(-56)+54]
 11966  010534  0EFE               	movlw	-2
 11967  010536  006F FF8C  F033    	movff	plusw1,btemp
 11968  01053C  0E67               	movlw	103
 11969  01053E  1833               	xorwf	btemp^0,w,c
 11970  010540  A4D8               	btfss	status,2,c
 11971  010542  D025               	goto	l9496
 11972                           
 11973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11974  010544  501E               	movf	_prec^0,w,c
 11975  010546  101F               	iorwf	(_prec+1)^0,w,c
 11976  010548  A4D8               	btfss	status,2,c
 11977  01054A  D004               	goto	l9490
 11978                           
 11979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11980  01054C  0E00               	movlw	0
 11981  01054E  6E1F               	movwf	(_prec+1)^0,c
 11982  010550  0E01               	movlw	1
 11983  010552  6E1E               	movwf	_prec^0,c
 11984  010554                     l9490:
 11985                           
 11986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11987  010554  BE1F               	btfsc	(_prec+1)^0,7,c
 11988  010556  D005               	goto	u9540
 11989  010558  501F               	movf	(_prec+1)^0,w,c
 11990  01055A  E110               	bnz	l9494
 11991  01055C  041E               	decf	_prec^0,w,c
 11992  01055E  B0D8               	btfsc	status,0,c
 11993  010560  D00D               	goto	l9494
 11994  010562                     u9540:
 11995  010562  0E06               	movlw	6
 11996  010564  6E3D               	movwf	(btemp+10)^0,c
 11997  010566  0E00               	movlw	0
 11998  010568  6E3E               	movwf	(btemp+11)^0,c
 11999                           
 12000                           ;stkvar	_p @ sp[(-56)+40]
 12001  01056A  0EF0               	movlw	-16
 12002  01056C  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 12003  010572  0EF1               	movlw	-15
 12004  010574  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 12005  01057A  D00C               	goto	l9502
 12006  01057C                     l9494:
 12007                           
 12008                           ;stkvar	_p @ sp[(-56)+40]
 12009  01057C  0EF0               	movlw	-16
 12010  01057E  0060  F07B  FFE3   	movff	_prec,plusw1
 12011  010584  0EF1               	movlw	-15
 12012  010586  0060  F07F  FFE3   	movff	_prec+1,plusw1
 12013  01058C  D003               	goto	l9502
 12014  01058E                     l9496:
 12015                           
 12016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 12017  01058E  AE1F               	btfss	(_prec+1)^0,7,c
 12018  010590  D7F5               	goto	l9494
 12019  010592  D7E7               	goto	u9540
 12020  010594                     l9502:
 12021                           
 12022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 12023                           ;stkvar	_mode @ sp[(-56)+54]
 12024  010594  0EFE               	movlw	-2
 12025  010596  006F FF8C  F033    	movff	plusw1,btemp
 12026  01059C  0E67               	movlw	103
 12027  01059E  1833               	xorwf	btemp^0,w,c
 12028  0105A0  A4D8               	btfss	status,2,c
 12029  0105A2  D02F               	goto	l9512
 12030                           
 12031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12032                           ;stkvar	_e @ sp[(-56)+34]
 12033  0105A4  0EEB               	movlw	-21
 12034  0105A6  AEE3               	btfss	plusw1,7,c
 12035  0105A8  D00E               	goto	u9570
 12036  0105AA  0EEA               	movlw	-22
 12037  0105AC  006F FF8C  F033    	movff	plusw1,btemp
 12038  0105B2  0EFC               	movlw	252
 12039  0105B4  5E33               	subwf	btemp^0,f,c
 12040  0105B6  0EEB               	movlw	-21
 12041  0105B8  006F FF8C  F033    	movff	plusw1,btemp
 12042  0105BE  0EFF               	movlw	255
 12043  0105C0  5A33               	subwfb	btemp^0,f,c
 12044  0105C2  A0D8               	btfss	status,0,c
 12045  0105C4  D018               	goto	l9510
 12046  0105C6                     u9570:
 12047                           
 12048                           ;stkvar	_e @ sp[(-56)+34]
 12049                           ;stkvar	_p @ sp[(-56)+40]
 12050  0105C6  0EF0               	movlw	-16
 12051  0105C8  50E3               	movf	plusw1,w,c
 12052  0105CA  0FFF               	addlw	255
 12053  0105CC  6E3D               	movwf	(btemp+10)^0,c
 12054  0105CE  0EF1               	movlw	-15
 12055  0105D0  006F FF8C  F03E    	movff	plusw1,btemp+11
 12056  0105D6  0EFF               	movlw	255
 12057  0105D8  223E               	addwfc	(btemp+11)^0,f,c
 12058  0105DA  0EEA               	movlw	-22
 12059  0105DC  50E3               	movf	plusw1,w,c
 12060  0105DE  5C3D               	subwf	(btemp+10)^0,w,c
 12061  0105E0  503E               	movf	(btemp+11)^0,w,c
 12062  0105E2  0A80               	xorlw	128
 12063  0105E4  6E33               	movwf	btemp^0,c
 12064  0105E6  0EEB               	movlw	-21
 12065  0105E8  50E3               	movf	plusw1,w,c
 12066  0105EA  0A80               	xorlw	128
 12067  0105EC  5833               	subwfb	btemp^0,w,c
 12068  0105EE  A0D8               	btfss	status,0,c
 12069  0105F0  D002               	goto	l9510
 12070                           
 12071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 12072  0105F2  0E66               	movlw	102
 12073  0105F4  D001               	goto	L12
 12074  0105F6                     l9510:
 12075                           
 12076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 12077  0105F6  0E65               	movlw	101
 12078  0105F8                     L12:
 12079  0105F8  6E3E               	movwf	(btemp+11)^0,c
 12080                           
 12081                           ;stkvar	_nmode @ sp[(-56)+55]
 12082  0105FA  0EFF               	movlw	-1
 12083  0105FC  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 12084  010602                     l9512:
 12085                           
 12086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12087                           ;stkvar	_p @ sp[(-56)+40]
 12088                           ;stkvar	_m @ sp[(-56)+48]
 12089  010602  0EF0               	movlw	-16
 12090  010604  006F FF8C  F033    	movff	plusw1,btemp
 12091  01060A  0EF8               	movlw	-8
 12092  01060C  0060  F0CF  FFE3   	movff	btemp,plusw1
 12093  010612  0EF1               	movlw	-15
 12094  010614  006F FF8C  F033    	movff	plusw1,btemp
 12095  01061A  0EF9               	movlw	-7
 12096  01061C  0060  F0CF  FFE3   	movff	btemp,plusw1
 12097                           
 12098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12099                           ;stkvar	_mode @ sp[(-56)+54]
 12100  010622  0EFE               	movlw	-2
 12101  010624  006F FF8C  F033    	movff	plusw1,btemp
 12102  01062A  0E67               	movlw	103
 12103  01062C  1833               	xorwf	btemp^0,w,c
 12104  01062E  A4D8               	btfss	status,2,c
 12105  010630  D00B               	goto	u9610
 12106                           
 12107                           ;stkvar	_nmode @ sp[(-56)+55]
 12108  010632  0EFF               	movlw	-1
 12109  010634  006F FF8C  F033    	movff	plusw1,btemp
 12110  01063A  0E66               	movlw	102
 12111  01063C  1833               	xorwf	btemp^0,w,c
 12112  01063E  A4D8               	btfss	status,2,c
 12113  010640  D014               	goto	l1853
 12114                           
 12115                           ;stkvar	_e @ sp[(-56)+34]
 12116  010642  0EEB               	movlw	-21
 12117  010644  AEE3               	btfss	plusw1,7,c
 12118  010646  D011               	goto	l1853
 12119  010648                     u9610:
 12120                           
 12121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12122                           ;stkvar	_m @ sp[(-56)+48]
 12123  010648  0EF8               	movlw	-8
 12124  01064A  50E3               	movf	plusw1,w,c
 12125  01064C  0F01               	addlw	1
 12126  01064E  6E33               	movwf	btemp^0,c
 12127  010650  0EF8               	movlw	-8
 12128  010652  0060  F0CF  FFE3   	movff	btemp,plusw1
 12129  010658  6A33               	clrf	btemp^0,c
 12130  01065A  0EF9               	movlw	-7
 12131  01065C  50E3               	movf	plusw1,w,c
 12132  01065E  2033               	addwfc	btemp^0,w,c
 12133  010660  6E33               	movwf	btemp^0,c
 12134  010662  0EF9               	movlw	-7
 12135  010664  0060  F0CF  FFE3   	movff	btemp,plusw1
 12136  01066A                     l1853:
 12137                           
 12138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12139                           ;stkvar	_nmode @ sp[(-56)+55]
 12140  01066A  0EFF               	movlw	-1
 12141  01066C  006F FF8C  F033    	movff	plusw1,btemp
 12142  010672  0E66               	movlw	102
 12143  010674  1833               	xorwf	btemp^0,w,c
 12144  010676  A4D8               	btfss	status,2,c
 12145  010678  D03B               	goto	l9532
 12146                           
 12147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12148                           ;stkvar	_e @ sp[(-56)+34]
 12149  01067A  0EEB               	movlw	-21
 12150  01067C  AEE3               	btfss	plusw1,7,c
 12151  01067E  D01C               	goto	l9528
 12152                           
 12153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12154  010680  0E00               	movlw	0
 12155  010682  6E3B               	movwf	(btemp+8)^0,c
 12156  010684  0E00               	movlw	0
 12157  010686  6E3C               	movwf	(btemp+9)^0,c
 12158  010688  0E80               	movlw	128
 12159  01068A  6E3D               	movwf	(btemp+10)^0,c
 12160  01068C  0E3F               	movlw	63
 12161  01068E  6E3E               	movwf	(btemp+11)^0,c
 12162                           
 12163                           ;stkvar	_u @ sp[(-56)+12]
 12164  010690  0ED4               	movlw	-44
 12165  010692  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 12166  010698  0ED5               	movlw	-43
 12167  01069A  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 12168  0106A0  0ED6               	movlw	-42
 12169  0106A2  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 12170  0106A8  0ED7               	movlw	-41
 12171  0106AA  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 12172                           
 12173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12174                           ;stkvar	_e @ sp[(-56)+34]
 12175  0106B0  0EEA               	movlw	-22
 12176  0106B2  6AE3               	clrf	plusw1,c
 12177  0106B4  0EEB               	movlw	-21
 12178  0106B6  6AE3               	clrf	plusw1,c
 12179  0106B8                     l9528:
 12180                           
 12181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12182                           ;stkvar	_mode @ sp[(-56)+54]
 12183  0106B8  0EFE               	movlw	-2
 12184  0106BA  006F FF8C  F033    	movff	plusw1,btemp
 12185  0106C0  0E67               	movlw	103
 12186  0106C2  1833               	xorwf	btemp^0,w,c
 12187  0106C4  B4D8               	btfsc	status,2,c
 12188  0106C6  D014               	goto	l9532
 12189                           
 12190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12191                           ;stkvar	_e @ sp[(-56)+34]
 12192                           ;stkvar	_m @ sp[(-56)+48]
 12193  0106C8  0EF8               	movlw	-8
 12194  0106CA  50E3               	movf	plusw1,w,c
 12195  0106CC  6E33               	movwf	btemp^0,c
 12196  0106CE  0EEA               	movlw	-22
 12197  0106D0  50E3               	movf	plusw1,w,c
 12198  0106D2  2633               	addwf	btemp^0,f,c
 12199  0106D4  0EF8               	movlw	-8
 12200  0106D6  0060  F0CF  FFE3   	movff	btemp,plusw1
 12201  0106DC  0EF9               	movlw	-7
 12202  0106DE  50E3               	movf	plusw1,w,c
 12203  0106E0  6E33               	movwf	btemp^0,c
 12204  0106E2  0EEB               	movlw	-21
 12205  0106E4  50E3               	movf	plusw1,w,c
 12206  0106E6  2233               	addwfc	btemp^0,f,c
 12207  0106E8  0EF9               	movlw	-7
 12208  0106EA  0060  F0CF  FFE3   	movff	btemp,plusw1
 12209  0106F0                     l9532:
 12210                           
 12211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12212                           ;stkvar	_i @ sp[(-56)+36]
 12213  0106F0  0EEC               	movlw	-20
 12214  0106F2  6AE3               	clrf	plusw1,c
 12215  0106F4  0EED               	movlw	-19
 12216  0106F6  6AE3               	clrf	plusw1,c
 12217                           
 12218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12219                           ;stkvar	_g @ sp[(-56)+16]
 12220  0106F8  0ED8               	movlw	-40
 12221  0106FA  006F FF8C  F03B    	movff	plusw1,btemp+8
 12222  010700  0ED9               	movlw	-39
 12223  010702  006F FF8C  F03C    	movff	plusw1,btemp+9
 12224  010708  0EDA               	movlw	-38
 12225  01070A  006F FF8C  F03D    	movff	plusw1,btemp+10
 12226  010710  0EDB               	movlw	-37
 12227  010712  006F FF8C  F03E    	movff	plusw1,btemp+11
 12228                           
 12229                           ;stkvar	_h @ sp[(-56)+24]
 12230  010718  0EE0               	movlw	-32
 12231  01071A  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 12232  010720  0EE1               	movlw	-31
 12233  010722  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 12234  010728  0EE2               	movlw	-30
 12235  01072A  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 12236  010730  0EE3               	movlw	-29
 12237  010732  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 12238                           
 12239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12240                           ;stkvar	_u @ sp[(-56)+12]
 12241  010738  0ED4               	movlw	-44
 12242  01073A  006F FF8C  F03B    	movff	plusw1,btemp+8
 12243  010740  0ED5               	movlw	-43
 12244  010742  006F FF8C  F03C    	movff	plusw1,btemp+9
 12245  010748  0ED6               	movlw	-42
 12246  01074A  006F FF8C  F03D    	movff	plusw1,btemp+10
 12247  010750  0ED7               	movlw	-41
 12248  010752  006F FF8C  F03E    	movff	plusw1,btemp+11
 12249                           
 12250                           ;stkvar	_ou @ sp[(-56)+28]
 12251  010758  0EE4               	movlw	-28
 12252  01075A  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 12253  010760  0EE5               	movlw	-27
 12254  010762  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 12255  010768  0EE6               	movlw	-26
 12256  01076A  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 12257  010770  0EE7               	movlw	-25
 12258  010772  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 12259                           
 12260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12261  010778  D0D6               	goto	l9548
 12262  01077A                     l9538:
 12263                           
 12264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12265                           ;stkvar	_u @ sp[(-56)+12]
 12266  01077A  0ED4               	movlw	-44
 12267  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12268  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12269  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12270  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12271                           
 12272                           ;stkvar	_h @ sp[(-60)+24]
 12273  010794  0EDC               	movlw	-36
 12274  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12275  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12276  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12277  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12278  0107AE  ECAE  F09B         	call	___fldiv	;wreg free
 12279  0107B2  0060  F0CF  FFE6   	movff	btemp,postinc1
 12280  0107B8  0060  F0D3  FFE6   	movff	btemp+1,postinc1
 12281  0107BE  0060  F0D7  FFE6   	movff	btemp+2,postinc1
 12282  0107C4  0060  F0DB  FFE6   	movff	btemp+3,postinc1
 12283  0107CA  EC83  F0A4         	call	_floorf	;wreg free
 12284                           
 12285                           ;stkvar	_l @ sp[(-56)+20]
 12286  0107CE  0EDC               	movlw	-36
 12287  0107D0  0060  F0CF  FFE3   	movff	btemp,plusw1
 12288  0107D6  0EDD               	movlw	-35
 12289  0107D8  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 12290  0107DE  0EDE               	movlw	-34
 12291  0107E0  0060  F0D7  FFE3   	movff	btemp+2,plusw1
 12292  0107E6  0EDF               	movlw	-33
 12293  0107E8  0060  F0DB  FFE3   	movff	btemp+3,plusw1
 12294                           
 12295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12296                           ;stkvar	_l @ sp[(-56)+20]
 12297  0107EE  0EDC               	movlw	-36
 12298  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12299  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12300  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12301  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12302  010808  ECCE  F0B3         	call	___fltol	;wreg free
 12303  01080C  0060  F0CC  F03D   	movff	btemp,btemp+10
 12304  010812  0060  F0D0  F03E   	movff	btemp+1,btemp+11
 12305                           
 12306                           ;stkvar	_d @ sp[(-56)+44]
 12307  010818  0EF4               	movlw	-12
 12308  01081A  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 12309  010820  0EF5               	movlw	-11
 12310  010822  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 12311                           
 12312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12313                           ;stkvar	_u @ sp[(-56)+12]
 12314  010828  0ED4               	movlw	-44
 12315  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12316  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12317  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12318  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12319                           
 12320                           ;stkvar	_l @ sp[(-60)+20]
 12321  010842  0ED8               	movlw	-40
 12322  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12323  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12324  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12325  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12326  01085C  ECF8  F090         	call	___flmul	;wreg free
 12327  010860  0060  F0CF  FFE6   	movff	btemp,postinc1
 12328  010866  0060  F0D3  FFE6   	movff	btemp+1,postinc1
 12329  01086C  0060  F0D7  FFE6   	movff	btemp+2,postinc1
 12330  010872  0060  F0DB  FFE6   	movff	btemp+3,postinc1
 12331                           
 12332                           ;stkvar	_h @ sp[(-60)+24]
 12333  010878  0EDC               	movlw	-36
 12334  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12335  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12336  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12337  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12338  010892  EC0A  F0C2         	call	___flsub	;wreg free
 12339                           
 12340                           ;stkvar	_h @ sp[(-56)+24]
 12341  010896  0EE0               	movlw	-32
 12342  010898  0060  F0CF  FFE3   	movff	btemp,plusw1
 12343  01089E  0EE1               	movlw	-31
 12344  0108A0  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 12345  0108A6  0EE2               	movlw	-30
 12346  0108A8  0060  F0D7  FFE3   	movff	btemp+2,plusw1
 12347  0108AE  0EE3               	movlw	-29
 12348  0108B0  0060  F0DB  FFE3   	movff	btemp+3,plusw1
 12349                           
 12350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12351  0108B6  0E00               	movlw	0
 12352  0108B8  6EE6               	movwf	postinc1,c
 12353  0108BA  0E00               	movlw	0
 12354  0108BC  6EE6               	movwf	postinc1,c
 12355  0108BE  0E20               	movlw	32
 12356  0108C0  6EE6               	movwf	postinc1,c
 12357  0108C2  0E41               	movlw	65
 12358  0108C4  6EE6               	movwf	postinc1,c
 12359                           
 12360                           ;stkvar	_u @ sp[(-60)+12]
 12361  0108C6  0ED0               	movlw	-48
 12362  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12363  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12364  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12365  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12366  0108E0  ECAE  F09B         	call	___fldiv	;wreg free
 12367                           
 12368                           ;stkvar	_u @ sp[(-56)+12]
 12369  0108E4  0ED4               	movlw	-44
 12370  0108E6  0060  F0CF  FFE3   	movff	btemp,plusw1
 12371  0108EC  0ED5               	movlw	-43
 12372  0108EE  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 12373  0108F4  0ED6               	movlw	-42
 12374  0108F6  0060  F0D7  FFE3   	movff	btemp+2,plusw1
 12375  0108FC  0ED7               	movlw	-41
 12376  0108FE  0060  F0DB  FFE3   	movff	btemp+3,plusw1
 12377                           
 12378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12379                           ;stkvar	_i @ sp[(-56)+36]
 12380  010904  0EEC               	movlw	-20
 12381  010906  50E3               	movf	plusw1,w,c
 12382  010908  0F01               	addlw	1
 12383  01090A  6E33               	movwf	btemp^0,c
 12384  01090C  0EEC               	movlw	-20
 12385  01090E  0060  F0CF  FFE3   	movff	btemp,plusw1
 12386  010914  6A33               	clrf	btemp^0,c
 12387  010916  0EED               	movlw	-19
 12388  010918  50E3               	movf	plusw1,w,c
 12389  01091A  2033               	addwfc	btemp^0,w,c
 12390  01091C  6E33               	movwf	btemp^0,c
 12391  01091E  0EED               	movlw	-19
 12392  010920  0060  F0CF  FFE3   	movff	btemp,plusw1
 12393  010926                     l9548:
 12394                           
 12395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12396                           ;stkvar	_m @ sp[(-56)+48]
 12397                           ;stkvar	_i @ sp[(-56)+36]
 12398  010926  50E1               	movf	fsr1l,w,c
 12399  010928  0FEC               	addlw	-20
 12400  01092A  6ED9               	movwf	fsr2l,c
 12401  01092C  50E2               	movf	fsr1h,w,c
 12402  01092E  6EDA               	movwf	fsr2h,c
 12403  010930  0EFF               	movlw	255
 12404  010932  22DA               	addwfc	fsr2h,f,c
 12405  010934  0EF8               	movlw	-8
 12406  010936  50E3               	movf	plusw1,w,c
 12407  010938  5CDE               	subwf	postinc2,w,c
 12408  01093A  50DE               	movf	postinc2,w,c
 12409  01093C  0A80               	xorlw	128
 12410  01093E  6E33               	movwf	btemp^0,c
 12411  010940  0EF9               	movlw	-7
 12412  010942  50E3               	movf	plusw1,w,c
 12413  010944  0A80               	xorlw	128
 12414  010946  5833               	subwfb	btemp^0,w,c
 12415  010948  A0D8               	btfss	status,0,c
 12416  01094A  D717               	goto	l9538
 12417                           
 12418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12419  01094C  0E00               	movlw	0
 12420  01094E  6EE6               	movwf	postinc1,c
 12421  010950  0E00               	movlw	0
 12422  010952  6EE6               	movwf	postinc1,c
 12423  010954  0EA0               	movlw	160
 12424  010956  6EE6               	movwf	postinc1,c
 12425  010958  0E40               	movlw	64
 12426  01095A  6EE6               	movwf	postinc1,c
 12427                           
 12428                           ;stkvar	_u @ sp[(-60)+12]
 12429  01095C  0ED0               	movlw	-48
 12430  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12431  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12432  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12433  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12434  010976  ECF8  F090         	call	___flmul	;wreg free
 12435                           
 12436                           ;stkvar	_l @ sp[(-56)+20]
 12437  01097A  0EDC               	movlw	-36
 12438  01097C  0060  F0CF  FFE3   	movff	btemp,plusw1
 12439  010982  0EDD               	movlw	-35
 12440  010984  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 12441  01098A  0EDE               	movlw	-34
 12442  01098C  0060  F0D7  FFE3   	movff	btemp+2,plusw1
 12443  010992  0EDF               	movlw	-33
 12444  010994  0060  F0DB  FFE3   	movff	btemp+3,plusw1
 12445                           
 12446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12447                           ;stkvar	_l @ sp[(-56)+20]
 12448  01099A  0EDC               	movlw	-36
 12449  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12450  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12451  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12452  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12453                           
 12454                           ;stkvar	_h @ sp[(-60)+24]
 12455  0109B4  0EDC               	movlw	-36
 12456  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12457  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12458  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12459  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12460  0109CE  EC87  F0B4         	call	___flge	;wreg free
 12461  0109D2  A033               	btfss	btemp& (0+255),0,c
 12462  0109D4  D021               	goto	u9680
 12463                           
 12464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12465                           ;stkvar	_l @ sp[(-56)+20]
 12466                           
 12467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12468                           
 12469                           ;stkvar	_l @ sp[(-56)+20]
 12470                           
 12471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12472  0109D6  0EDC               	movlw	-36
 12473  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12474  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12475  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12476  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12477                           
 12478                           ;stkvar	_h @ sp[(-60)+24]
 12479  0109F0  0EDC               	movlw	-36
 12480  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12481  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12482  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12483  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12484  010A0A  EC72  F0BB         	call	___fleq	;wreg free
 12485  010A0E  A033               	btfss	btemp& (0+255),0,c
 12486  010A10  D01B               	goto	l9562
 12487                           
 12488                           ;stkvar	_d @ sp[(-56)+44]
 12489  010A12  0EF4               	movlw	-12
 12490  010A14  B0E3               	btfsc	plusw1,0,c
 12491  010A16  D018               	goto	l9562
 12492  010A18                     u9680:
 12493                           
 12494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12495  010A18  0E00               	movlw	0
 12496  010A1A  6E3B               	movwf	(btemp+8)^0,c
 12497  010A1C  0E00               	movlw	0
 12498  010A1E  6E3C               	movwf	(btemp+9)^0,c
 12499  010A20  0E00               	movlw	0
 12500  010A22  6E3D               	movwf	(btemp+10)^0,c
 12501  010A24  0E00               	movlw	0
 12502  010A26  6E3E               	movwf	(btemp+11)^0,c
 12503                           
 12504                           ;stkvar	_l @ sp[(-56)+20]
 12505  010A28  0EDC               	movlw	-36
 12506  010A2A  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 12507  010A30  0EDD               	movlw	-35
 12508  010A32  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 12509  010A38  0EDE               	movlw	-34
 12510  010A3A  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 12511  010A40  0EDF               	movlw	-33
 12512  010A42  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 12513  010A48                     l9562:
 12514                           
 12515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12516                           ;stkvar	_l @ sp[(-56)+20]
 12517  010A48  0EDC               	movlw	-36
 12518  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12519  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12520  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12521  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12522                           
 12523                           ;stkvar	_g @ sp[(-60)+16]
 12524  010A62  0ED4               	movlw	-44
 12525  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12526  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12527  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12528  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12529  010A7C  EC0D  F095         	call	___fladd	;wreg free
 12530                           
 12531                           ;stkvar	_h @ sp[(-56)+24]
 12532  010A80  0EE0               	movlw	-32
 12533  010A82  0060  F0CF  FFE3   	movff	btemp,plusw1
 12534  010A88  0EE1               	movlw	-31
 12535  010A8A  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 12536  010A90  0EE2               	movlw	-30
 12537  010A92  0060  F0D7  FFE3   	movff	btemp+2,plusw1
 12538  010A98  0EE3               	movlw	-29
 12539  010A9A  0060  F0DB  FFE3   	movff	btemp+3,plusw1
 12540                           
 12541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12542                           ;stkvar	_ou @ sp[(-56)+28]
 12543  010AA0  0EE4               	movlw	-28
 12544  010AA2  006F FF8C  F03B    	movff	plusw1,btemp+8
 12545  010AA8  0EE5               	movlw	-27
 12546  010AAA  006F FF8C  F03C    	movff	plusw1,btemp+9
 12547  010AB0  0EE6               	movlw	-26
 12548  010AB2  006F FF8C  F03D    	movff	plusw1,btemp+10
 12549  010AB8  0EE7               	movlw	-25
 12550  010ABA  006F FF8C  F03E    	movff	plusw1,btemp+11
 12551                           
 12552                           ;stkvar	_u @ sp[(-56)+12]
 12553  010AC0  0ED4               	movlw	-44
 12554  010AC2  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 12555  010AC8  0ED5               	movlw	-43
 12556  010ACA  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 12557  010AD0  0ED6               	movlw	-42
 12558  010AD2  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 12559  010AD8  0ED7               	movlw	-41
 12560  010ADA  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 12561                           
 12562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12563                           ;stkvar	_nmode @ sp[(-56)+55]
 12564  010AE0  0EFF               	movlw	-1
 12565  010AE2  006F FF8C  F033    	movff	plusw1,btemp
 12566  010AE8  0E65               	movlw	101
 12567  010AEA  1833               	xorwf	btemp^0,w,c
 12568  010AEC  B4D8               	btfsc	status,2,c
 12569  010AEE  D011               	goto	l9570
 12570                           
 12571                           ;stkvar	_e @ sp[(-56)+34]
 12572                           ;stkvar	_ne @ sp[(-56)+46]
 12573  010AF0  0EEA               	movlw	-22
 12574  010AF2  006F FF8C  F033    	movff	plusw1,btemp
 12575  010AF8  0EF6               	movlw	-10
 12576  010AFA  0060  F0CF  FFE3   	movff	btemp,plusw1
 12577  010B00  0EEB               	movlw	-21
 12578  010B02  006F FF8C  F033    	movff	plusw1,btemp
 12579  010B08  0EF7               	movlw	-9
 12580  010B0A  0060  F0CF  FFE3   	movff	btemp,plusw1
 12581  010B10  D004               	goto	l1868
 12582  010B12                     l9570:
 12583                           
 12584                           ;stkvar	_ne @ sp[(-56)+46]
 12585  010B12  0EF6               	movlw	-10
 12586  010B14  6AE3               	clrf	plusw1,c
 12587  010B16  0EF7               	movlw	-9
 12588  010B18  6AE3               	clrf	plusw1,c
 12589  010B1A                     l1868:
 12590                           
 12591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12592                           ;stkvar	_pp @ sp[(-56)+50]
 12593  010B1A  0EFA               	movlw	-6
 12594  010B1C  6AE3               	clrf	plusw1,c
 12595  010B1E  0EFB               	movlw	-5
 12596  010B20  6AE3               	clrf	plusw1,c
 12597                           
 12598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12599                           ;stkvar	_t @ sp[(-56)+52]
 12600  010B22  0EFC               	movlw	-4
 12601  010B24  6AE3               	clrf	plusw1,c
 12602  010B26  0EFD               	movlw	-3
 12603  010B28  6AE3               	clrf	plusw1,c
 12604                           
 12605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12606                           ;stkvar	_i @ sp[(-56)+36]
 12607  010B2A  0EEC               	movlw	-20
 12608  010B2C  6AE3               	clrf	plusw1,c
 12609  010B2E  0EED               	movlw	-19
 12610  010B30  6AE3               	clrf	plusw1,c
 12611                           
 12612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12613  010B32  D1B7               	goto	l9622
 12614  010B34                     l9572:
 12615                           
 12616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12617                           ;stkvar	_u @ sp[(-56)+12]
 12618  010B34  0ED4               	movlw	-44
 12619  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12620  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12621  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12622  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12623                           
 12624                           ;stkvar	_h @ sp[(-60)+24]
 12625  010B4E  0EDC               	movlw	-36
 12626  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12627  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12628  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12629  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12630  010B68  ECAE  F09B         	call	___fldiv	;wreg free
 12631  010B6C  0060  F0CF  FFE6   	movff	btemp,postinc1
 12632  010B72  0060  F0D3  FFE6   	movff	btemp+1,postinc1
 12633  010B78  0060  F0D7  FFE6   	movff	btemp+2,postinc1
 12634  010B7E  0060  F0DB  FFE6   	movff	btemp+3,postinc1
 12635  010B84  EC83  F0A4         	call	_floorf	;wreg free
 12636                           
 12637                           ;stkvar	_l @ sp[(-56)+20]
 12638  010B88  0EDC               	movlw	-36
 12639  010B8A  0060  F0CF  FFE3   	movff	btemp,plusw1
 12640  010B90  0EDD               	movlw	-35
 12641  010B92  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 12642  010B98  0EDE               	movlw	-34
 12643  010B9A  0060  F0D7  FFE3   	movff	btemp+2,plusw1
 12644  010BA0  0EDF               	movlw	-33
 12645  010BA2  0060  F0DB  FFE3   	movff	btemp+3,plusw1
 12646                           
 12647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12648                           ;stkvar	_l @ sp[(-56)+20]
 12649  010BA8  0EDC               	movlw	-36
 12650  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12651  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12652  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12653  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12654  010BC2  ECCE  F0B3         	call	___fltol	;wreg free
 12655  010BC6  0060  F0CC  F03D   	movff	btemp,btemp+10
 12656  010BCC  0060  F0D0  F03E   	movff	btemp+1,btemp+11
 12657                           
 12658                           ;stkvar	_d @ sp[(-56)+44]
 12659  010BD2  0EF4               	movlw	-12
 12660  010BD4  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 12661  010BDA  0EF5               	movlw	-11
 12662  010BDC  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 12663                           
 12664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12665  010BE2  B820               	btfsc	_flags^0,4,c
 12666  010BE4  D026               	goto	l9586
 12667                           
 12668                           ;stkvar	_d @ sp[(-56)+44]
 12669  010BE6  0EF4               	movlw	-12
 12670  010BE8  006F FF8C  F033    	movff	plusw1,btemp
 12671  010BEE  0EF5               	movlw	-11
 12672  010BF0  50E3               	movf	plusw1,w,c
 12673  010BF2  1033               	iorwf	btemp^0,w,c
 12674  010BF4  A4D8               	btfss	status,2,c
 12675  010BF6  D01D               	goto	l9586
 12676                           
 12677                           ;stkvar	_mode @ sp[(-56)+54]
 12678  010BF8  0EFE               	movlw	-2
 12679  010BFA  006F FF8C  F033    	movff	plusw1,btemp
 12680  010C00  0E67               	movlw	103
 12681  010C02  1833               	xorwf	btemp^0,w,c
 12682  010C04  A4D8               	btfss	status,2,c
 12683  010C06  D015               	goto	l9586
 12684                           
 12685                           ;stkvar	_ne @ sp[(-56)+46]
 12686  010C08  0EF7               	movlw	-9
 12687  010C0A  AEE3               	btfss	plusw1,7,c
 12688  010C0C  D012               	goto	l9586
 12689                           
 12690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12691                           ;stkvar	_t @ sp[(-56)+52]
 12692  010C0E  0EFC               	movlw	-4
 12693  010C10  50E3               	movf	plusw1,w,c
 12694  010C12  0F01               	addlw	1
 12695  010C14  6E33               	movwf	btemp^0,c
 12696  010C16  0EFC               	movlw	-4
 12697  010C18  0060  F0CF  FFE3   	movff	btemp,plusw1
 12698  010C1E  6A33               	clrf	btemp^0,c
 12699  010C20  0EFD               	movlw	-3
 12700  010C22  50E3               	movf	plusw1,w,c
 12701  010C24  2033               	addwfc	btemp^0,w,c
 12702  010C26  6E33               	movwf	btemp^0,c
 12703  010C28  0EFD               	movlw	-3
 12704  010C2A  0060  F0CF  FFE3   	movff	btemp,plusw1
 12705                           
 12706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12707  010C30  D0AF               	goto	l9614
 12708  010C32                     l9586:
 12709                           
 12710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12711                           ;stkvar	_pp @ sp[(-56)+50]
 12712  010C32  0EFA               	movlw	-6
 12713  010C34  006F FF8C  F033    	movff	plusw1,btemp
 12714  010C3A  0EFB               	movlw	-5
 12715  010C3C  50E3               	movf	plusw1,w,c
 12716  010C3E  1033               	iorwf	btemp^0,w,c
 12717  010C40  A4D8               	btfss	status,2,c
 12718  010C42  D070               	goto	l9606
 12719                           
 12720                           ;stkvar	_ne @ sp[(-56)+46]
 12721  010C44  0EF7               	movlw	-9
 12722  010C46  AEE3               	btfss	plusw1,7,c
 12723  010C48  D06D               	goto	l9606
 12724                           
 12725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12726                           ;stkvar	_n @ sp[(-56)+32]
 12727  010C4A  0EE8               	movlw	-24
 12728  010C4C  006F FF8C  F03D    	movff	plusw1,btemp+10
 12729  010C52  0EE9               	movlw	-23
 12730  010C54  006F FF8C  F03E    	movff	plusw1,btemp+11
 12731  010C5A  0EAC               	movlw	low _dbuf
 12732  010C5C  243D               	addwf	(btemp+10)^0,w,c
 12733  010C5E  6ED9               	movwf	fsr2l,c
 12734  010C60  0E02               	movlw	high _dbuf
 12735  010C62  203E               	addwfc	(btemp+11)^0,w,c
 12736  010C64  6EDA               	movwf	fsr2h,c
 12737  010C66  0E2E               	movlw	46
 12738  010C68  6EDF               	movwf	indf2,c
 12739                           
 12740                           ;stkvar	_n @ sp[(-56)+32]
 12741  010C6A  0EE8               	movlw	-24
 12742  010C6C  50E3               	movf	plusw1,w,c
 12743  010C6E  0F01               	addlw	1
 12744  010C70  6E33               	movwf	btemp^0,c
 12745  010C72  0EE8               	movlw	-24
 12746  010C74  0060  F0CF  FFE3   	movff	btemp,plusw1
 12747  010C7A  6A33               	clrf	btemp^0,c
 12748  010C7C  0EE9               	movlw	-23
 12749  010C7E  50E3               	movf	plusw1,w,c
 12750  010C80  2033               	addwfc	btemp^0,w,c
 12751  010C82  6E33               	movwf	btemp^0,c
 12752  010C84  0EE9               	movlw	-23
 12753  010C86  0060  F0CF  FFE3   	movff	btemp,plusw1
 12754                           
 12755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12756                           ;stkvar	_w @ sp[(-56)+38]
 12757  010C8C  50E1               	movf	fsr1l,w,c
 12758  010C8E  0FEE               	addlw	-18
 12759  010C90  6ED9               	movwf	fsr2l,c
 12760  010C92  50E2               	movf	fsr1h,w,c
 12761  010C94  6EDA               	movwf	fsr2h,c
 12762  010C96  0EFF               	movlw	255
 12763  010C98  22DA               	addwfc	fsr2h,f,c
 12764  010C9A  06DE               	decf	postinc2,f,c
 12765  010C9C  0E00               	movlw	0
 12766  010C9E  5ADD               	subwfb	postdec2,f,c
 12767                           
 12768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12769  010CA0  0E01               	movlw	1
 12770  010CA2  6E3D               	movwf	(btemp+10)^0,c
 12771  010CA4  0E00               	movlw	0
 12772  010CA6  6E3E               	movwf	(btemp+11)^0,c
 12773                           
 12774                           ;stkvar	_pp @ sp[(-56)+50]
 12775  010CA8  0EFA               	movlw	-6
 12776  010CAA  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 12777  010CB0  0EFB               	movlw	-5
 12778  010CB2  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 12779  010CB8  D035               	goto	l9606
 12780  010CBA                     l9598:
 12781                           
 12782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12783                           ;stkvar	_n @ sp[(-56)+32]
 12784  010CBA  0EE8               	movlw	-24
 12785  010CBC  006F FF8C  F03D    	movff	plusw1,btemp+10
 12786  010CC2  0EE9               	movlw	-23
 12787  010CC4  006F FF8C  F03E    	movff	plusw1,btemp+11
 12788  010CCA  0EAC               	movlw	low _dbuf
 12789  010CCC  243D               	addwf	(btemp+10)^0,w,c
 12790  010CCE  6ED9               	movwf	fsr2l,c
 12791  010CD0  0E02               	movlw	high _dbuf
 12792  010CD2  203E               	addwfc	(btemp+11)^0,w,c
 12793  010CD4  6EDA               	movwf	fsr2h,c
 12794  010CD6  0E30               	movlw	48
 12795  010CD8  6EDF               	movwf	indf2,c
 12796                           
 12797                           ;stkvar	_n @ sp[(-56)+32]
 12798  010CDA  0EE8               	movlw	-24
 12799  010CDC  50E3               	movf	plusw1,w,c
 12800  010CDE  0F01               	addlw	1
 12801  010CE0  6E33               	movwf	btemp^0,c
 12802  010CE2  0EE8               	movlw	-24
 12803  010CE4  0060  F0CF  FFE3   	movff	btemp,plusw1
 12804  010CEA  6A33               	clrf	btemp^0,c
 12805  010CEC  0EE9               	movlw	-23
 12806  010CEE  50E3               	movf	plusw1,w,c
 12807  010CF0  2033               	addwfc	btemp^0,w,c
 12808  010CF2  6E33               	movwf	btemp^0,c
 12809  010CF4  0EE9               	movlw	-23
 12810  010CF6  0060  F0CF  FFE3   	movff	btemp,plusw1
 12811                           
 12812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12813                           ;stkvar	_w @ sp[(-56)+38]
 12814  010CFC  50E1               	movf	fsr1l,w,c
 12815  010CFE  0FEE               	addlw	-18
 12816  010D00  6ED9               	movwf	fsr2l,c
 12817  010D02  50E2               	movf	fsr1h,w,c
 12818  010D04  6EDA               	movwf	fsr2h,c
 12819  010D06  0EFF               	movlw	255
 12820  010D08  22DA               	addwfc	fsr2h,f,c
 12821  010D0A  06DE               	decf	postinc2,f,c
 12822  010D0C  0E00               	movlw	0
 12823  010D0E  5ADD               	subwfb	postdec2,f,c
 12824                           
 12825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12826                           ;stkvar	_t @ sp[(-56)+52]
 12827  010D10  50E1               	movf	fsr1l,w,c
 12828  010D12  0FFC               	addlw	-4
 12829  010D14  6ED9               	movwf	fsr2l,c
 12830  010D16  50E2               	movf	fsr1h,w,c
 12831  010D18  6EDA               	movwf	fsr2h,c
 12832  010D1A  0EFF               	movlw	255
 12833  010D1C  22DA               	addwfc	fsr2h,f,c
 12834  010D1E  06DE               	decf	postinc2,f,c
 12835  010D20  0E00               	movlw	0
 12836  010D22  5ADD               	subwfb	postdec2,f,c
 12837  010D24                     l9606:
 12838                           
 12839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12840                           ;stkvar	_t @ sp[(-56)+52]
 12841  010D24  0EFC               	movlw	-4
 12842  010D26  006F FF8C  F033    	movff	plusw1,btemp
 12843  010D2C  0EFD               	movlw	-3
 12844  010D2E  50E3               	movf	plusw1,w,c
 12845  010D30  1033               	iorwf	btemp^0,w,c
 12846  010D32  A4D8               	btfss	status,2,c
 12847  010D34  D7C2               	goto	l9598
 12848                           
 12849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12850                           ;stkvar	_n @ sp[(-56)+32]
 12851  010D36  0EE8               	movlw	-24
 12852  010D38  006F FF8C  F03D    	movff	plusw1,btemp+10
 12853  010D3E  0EE9               	movlw	-23
 12854  010D40  006F FF8C  F03E    	movff	plusw1,btemp+11
 12855  010D46  0EAC               	movlw	low _dbuf
 12856  010D48  243D               	addwf	(btemp+10)^0,w,c
 12857  010D4A  6ED9               	movwf	fsr2l,c
 12858  010D4C  0E02               	movlw	high _dbuf
 12859  010D4E  203E               	addwfc	(btemp+11)^0,w,c
 12860  010D50  6EDA               	movwf	fsr2h,c
 12861                           
 12862                           ;stkvar	_d @ sp[(-56)+44]
 12863  010D52  0EF4               	movlw	-12
 12864  010D54  50E3               	movf	plusw1,w,c
 12865  010D56  0F30               	addlw	48
 12866  010D58  6EDF               	movwf	indf2,c
 12867                           
 12868                           ;stkvar	_n @ sp[(-56)+32]
 12869  010D5A  0EE8               	movlw	-24
 12870  010D5C  50E3               	movf	plusw1,w,c
 12871  010D5E  0F01               	addlw	1
 12872  010D60  6E33               	movwf	btemp^0,c
 12873  010D62  0EE8               	movlw	-24
 12874  010D64  0060  F0CF  FFE3   	movff	btemp,plusw1
 12875  010D6A  6A33               	clrf	btemp^0,c
 12876  010D6C  0EE9               	movlw	-23
 12877  010D6E  50E3               	movf	plusw1,w,c
 12878  010D70  2033               	addwfc	btemp^0,w,c
 12879  010D72  6E33               	movwf	btemp^0,c
 12880  010D74  0EE9               	movlw	-23
 12881  010D76  0060  F0CF  FFE3   	movff	btemp,plusw1
 12882                           
 12883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12884                           ;stkvar	_w @ sp[(-56)+38]
 12885  010D7C  50E1               	movf	fsr1l,w,c
 12886  010D7E  0FEE               	addlw	-18
 12887  010D80  6ED9               	movwf	fsr2l,c
 12888  010D82  50E2               	movf	fsr1h,w,c
 12889  010D84  6EDA               	movwf	fsr2h,c
 12890  010D86  0EFF               	movlw	255
 12891  010D88  22DA               	addwfc	fsr2h,f,c
 12892  010D8A  06DE               	decf	postinc2,f,c
 12893  010D8C  0E00               	movlw	0
 12894  010D8E  5ADD               	subwfb	postdec2,f,c
 12895  010D90                     l9614:
 12896                           
 12897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12898                           ;stkvar	_u @ sp[(-56)+12]
 12899  010D90  0ED4               	movlw	-44
 12900  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12901  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12902  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12903  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12904                           
 12905                           ;stkvar	_l @ sp[(-60)+20]
 12906  010DAA  0ED8               	movlw	-40
 12907  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12908  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12909  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12910  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12911  010DC4  ECF8  F090         	call	___flmul	;wreg free
 12912  010DC8  0060  F0CF  FFE6   	movff	btemp,postinc1
 12913  010DCE  0060  F0D3  FFE6   	movff	btemp+1,postinc1
 12914  010DD4  0060  F0D7  FFE6   	movff	btemp+2,postinc1
 12915  010DDA  0060  F0DB  FFE6   	movff	btemp+3,postinc1
 12916                           
 12917                           ;stkvar	_h @ sp[(-60)+24]
 12918  010DE0  0EDC               	movlw	-36
 12919  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12920  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12921  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12922  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12923  010DFA  EC0A  F0C2         	call	___flsub	;wreg free
 12924                           
 12925                           ;stkvar	_h @ sp[(-56)+24]
 12926  010DFE  0EE0               	movlw	-32
 12927  010E00  0060  F0CF  FFE3   	movff	btemp,plusw1
 12928  010E06  0EE1               	movlw	-31
 12929  010E08  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 12930  010E0E  0EE2               	movlw	-30
 12931  010E10  0060  F0D7  FFE3   	movff	btemp+2,plusw1
 12932  010E16  0EE3               	movlw	-29
 12933  010E18  0060  F0DB  FFE3   	movff	btemp+3,plusw1
 12934                           
 12935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12936  010E1E  0E00               	movlw	0
 12937  010E20  6EE6               	movwf	postinc1,c
 12938  010E22  0E00               	movlw	0
 12939  010E24  6EE6               	movwf	postinc1,c
 12940  010E26  0E20               	movlw	32
 12941  010E28  6EE6               	movwf	postinc1,c
 12942  010E2A  0E41               	movlw	65
 12943  010E2C  6EE6               	movwf	postinc1,c
 12944                           
 12945                           ;stkvar	_u @ sp[(-60)+12]
 12946  010E2E  0ED0               	movlw	-48
 12947  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12948  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12949  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12950  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12951  010E48  ECAE  F09B         	call	___fldiv	;wreg free
 12952                           
 12953                           ;stkvar	_u @ sp[(-56)+12]
 12954  010E4C  0ED4               	movlw	-44
 12955  010E4E  0060  F0CF  FFE3   	movff	btemp,plusw1
 12956  010E54  0ED5               	movlw	-43
 12957  010E56  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 12958  010E5C  0ED6               	movlw	-42
 12959  010E5E  0060  F0D7  FFE3   	movff	btemp+2,plusw1
 12960  010E64  0ED7               	movlw	-41
 12961  010E66  0060  F0DB  FFE3   	movff	btemp+3,plusw1
 12962                           
 12963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12964                           ;stkvar	_ne @ sp[(-56)+46]
 12965  010E6C  50E1               	movf	fsr1l,w,c
 12966  010E6E  0FF6               	addlw	-10
 12967  010E70  6ED9               	movwf	fsr2l,c
 12968  010E72  50E2               	movf	fsr1h,w,c
 12969  010E74  6EDA               	movwf	fsr2h,c
 12970  010E76  0EFF               	movlw	255
 12971  010E78  22DA               	addwfc	fsr2h,f,c
 12972  010E7A  06DE               	decf	postinc2,f,c
 12973  010E7C  0E00               	movlw	0
 12974  010E7E  5ADD               	subwfb	postdec2,f,c
 12975                           
 12976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12977                           ;stkvar	_i @ sp[(-56)+36]
 12978  010E80  0EEC               	movlw	-20
 12979  010E82  50E3               	movf	plusw1,w,c
 12980  010E84  0F01               	addlw	1
 12981  010E86  6E33               	movwf	btemp^0,c
 12982  010E88  0EEC               	movlw	-20
 12983  010E8A  0060  F0CF  FFE3   	movff	btemp,plusw1
 12984  010E90  6A33               	clrf	btemp^0,c
 12985  010E92  0EED               	movlw	-19
 12986  010E94  50E3               	movf	plusw1,w,c
 12987  010E96  2033               	addwfc	btemp^0,w,c
 12988  010E98  6E33               	movwf	btemp^0,c
 12989  010E9A  0EED               	movlw	-19
 12990  010E9C  0060  F0CF  FFE3   	movff	btemp,plusw1
 12991  010EA2                     l9622:
 12992                           
 12993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12994                           ;stkvar	_m @ sp[(-56)+48]
 12995                           ;stkvar	_i @ sp[(-56)+36]
 12996  010EA2  50E1               	movf	fsr1l,w,c
 12997  010EA4  0FEC               	addlw	-20
 12998  010EA6  6ED9               	movwf	fsr2l,c
 12999  010EA8  50E2               	movf	fsr1h,w,c
 13000  010EAA  6EDA               	movwf	fsr2h,c
 13001  010EAC  0EFF               	movlw	255
 13002  010EAE  22DA               	addwfc	fsr2h,f,c
 13003  010EB0  0EF8               	movlw	-8
 13004  010EB2  50E3               	movf	plusw1,w,c
 13005  010EB4  5CDE               	subwf	postinc2,w,c
 13006  010EB6  50DE               	movf	postinc2,w,c
 13007  010EB8  0A80               	xorlw	128
 13008  010EBA  6E33               	movwf	btemp^0,c
 13009  010EBC  0EF9               	movlw	-7
 13010  010EBE  50E3               	movf	plusw1,w,c
 13011  010EC0  0A80               	xorlw	128
 13012  010EC2  5833               	subwfb	btemp^0,w,c
 13013  010EC4  B0D8               	btfsc	status,0,c
 13014  010EC6  D00E               	goto	u9780
 13015                           
 13016                           ;stkvar	_n @ sp[(-56)+32]
 13017  010EC8  0EE9               	movlw	-23
 13018  010ECA  BEE3               	btfsc	plusw1,7,c
 13019  010ECC  D633               	goto	l9572
 13020  010ECE  0EE9               	movlw	-23
 13021  010ED0  50E3               	movf	plusw1,w,c
 13022  010ED2  E108               	bnz	u9780
 13023  010ED4  0EE8               	movlw	-24
 13024  010ED6  006F FF8C  F033    	movff	plusw1,btemp
 13025  010EDC  0E4B               	movlw	75
 13026  010EDE  5E33               	subwf	btemp^0,f,c
 13027  010EE0  A0D8               	btfss	status,0,c
 13028  010EE2  D628               	goto	l9572
 13029  010EE4                     u9780:
 13030                           
 13031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13032                           ;stkvar	_pp @ sp[(-56)+50]
 13033  010EE4  0EFA               	movlw	-6
 13034  010EE6  006F FF8C  F033    	movff	plusw1,btemp
 13035  010EEC  0EFB               	movlw	-5
 13036  010EEE  50E3               	movf	plusw1,w,c
 13037  010EF0  1033               	iorwf	btemp^0,w,c
 13038  010EF2  B4D8               	btfsc	status,2,c
 13039  010EF4  A820               	btfss	_flags^0,4,c
 13040  010EF6  D021               	goto	l9634
 13041                           
 13042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 13043                           ;stkvar	_n @ sp[(-56)+32]
 13044  010EF8  0EE8               	movlw	-24
 13045  010EFA  006F FF8C  F03D    	movff	plusw1,btemp+10
 13046  010F00  0EE9               	movlw	-23
 13047  010F02  006F FF8C  F03E    	movff	plusw1,btemp+11
 13048  010F08  0EAC               	movlw	low _dbuf
 13049  010F0A  243D               	addwf	(btemp+10)^0,w,c
 13050  010F0C  6ED9               	movwf	fsr2l,c
 13051  010F0E  0E02               	movlw	high _dbuf
 13052  010F10  203E               	addwfc	(btemp+11)^0,w,c
 13053  010F12  6EDA               	movwf	fsr2h,c
 13054  010F14  0E2E               	movlw	46
 13055  010F16  6EDF               	movwf	indf2,c
 13056                           
 13057                           ;stkvar	_n @ sp[(-56)+32]
 13058  010F18  0EE8               	movlw	-24
 13059  010F1A  50E3               	movf	plusw1,w,c
 13060  010F1C  0F01               	addlw	1
 13061  010F1E  6E33               	movwf	btemp^0,c
 13062  010F20  0EE8               	movlw	-24
 13063  010F22  0060  F0CF  FFE3   	movff	btemp,plusw1
 13064  010F28  6A33               	clrf	btemp^0,c
 13065  010F2A  0EE9               	movlw	-23
 13066  010F2C  50E3               	movf	plusw1,w,c
 13067  010F2E  2033               	addwfc	btemp^0,w,c
 13068  010F30  6E33               	movwf	btemp^0,c
 13069  010F32  0EE9               	movlw	-23
 13070  010F34  0060  F0CF  FFE3   	movff	btemp,plusw1
 13071  010F3A                     l9634:
 13072                           
 13073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 13074                           ;stkvar	_n @ sp[(-56)+32]
 13075  010F3A  0EE8               	movlw	-24
 13076  010F3C  006F FF8C  F03D    	movff	plusw1,btemp+10
 13077  010F42  0EE9               	movlw	-23
 13078  010F44  006F FF8C  F03E    	movff	plusw1,btemp+11
 13079  010F4A  0EAC               	movlw	low _dbuf
 13080  010F4C  243D               	addwf	(btemp+10)^0,w,c
 13081  010F4E  6ED9               	movwf	fsr2l,c
 13082  010F50  0E02               	movlw	high _dbuf
 13083  010F52  203E               	addwfc	(btemp+11)^0,w,c
 13084  010F54  6EDA               	movwf	fsr2h,c
 13085  010F56  0E00               	movlw	0
 13086  010F58  6EDF               	movwf	indf2,c
 13087                           
 13088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13089                           ;stkvar	_nmode @ sp[(-56)+55]
 13090  010F5A  0EFF               	movlw	-1
 13091  010F5C  006F FF8C  F033    	movff	plusw1,btemp
 13092  010F62  0E65               	movlw	101
 13093  010F64  1833               	xorwf	btemp^0,w,c
 13094  010F66  A4D8               	btfss	status,2,c
 13095  010F68  EF16  F081         	goto	l9438
 13096                           
 13097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13098  010F6C  0E4F               	movlw	79
 13099  010F6E  6E3D               	movwf	(btemp+10)^0,c
 13100  010F70  0E00               	movlw	0
 13101  010F72  6E3E               	movwf	(btemp+11)^0,c
 13102                           
 13103                           ;stkvar	_i @ sp[(-56)+36]
 13104  010F74  0EEC               	movlw	-20
 13105  010F76  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 13106  010F7C  0EED               	movlw	-19
 13107  010F7E  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 13108                           
 13109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13110                           ;stkvar	_i @ sp[(-56)+36]
 13111  010F84  0EEC               	movlw	-20
 13112  010F86  006F FF8C  F03D    	movff	plusw1,btemp+10
 13113  010F8C  0EED               	movlw	-19
 13114  010F8E  006F FF8C  F03E    	movff	plusw1,btemp+11
 13115  010F94  0EAC               	movlw	low _dbuf
 13116  010F96  243D               	addwf	(btemp+10)^0,w,c
 13117  010F98  6ED9               	movwf	fsr2l,c
 13118  010F9A  0E02               	movlw	high _dbuf
 13119  010F9C  203E               	addwfc	(btemp+11)^0,w,c
 13120  010F9E  6EDA               	movwf	fsr2h,c
 13121  010FA0  0E00               	movlw	0
 13122  010FA2  6EDF               	movwf	indf2,c
 13123                           
 13124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13125                           ;stkvar	_sign @ sp[(-56)+42]
 13126  010FA4  0EF2               	movlw	-14
 13127  010FA6  6AE3               	clrf	plusw1,c
 13128  010FA8  0EF3               	movlw	-13
 13129  010FAA  6AE3               	clrf	plusw1,c
 13130                           
 13131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13132                           ;stkvar	_e @ sp[(-56)+34]
 13133  010FAC  0EEB               	movlw	-21
 13134  010FAE  AEE3               	btfss	plusw1,7,c
 13135  010FB0  D012               	goto	l9648
 13136                           
 13137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13138  010FB2  0E01               	movlw	1
 13139  010FB4  6E3D               	movwf	(btemp+10)^0,c
 13140  010FB6  0E00               	movlw	0
 13141  010FB8  6E3E               	movwf	(btemp+11)^0,c
 13142                           
 13143                           ;stkvar	_sign @ sp[(-56)+42]
 13144  010FBA  0EF2               	movlw	-14
 13145  010FBC  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 13146  010FC2  0EF3               	movlw	-13
 13147  010FC4  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 13148                           
 13149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13150                           ;stkvar	_e @ sp[(-56)+34]
 13151                           ;stkvar	_e @ sp[(-56)+34]
 13152  010FCA  0EEA               	movlw	-22
 13153  010FCC  6CE3               	negf	plusw1,c
 13154  010FCE  0EEB               	movlw	-21
 13155  010FD0  1EE3               	comf	plusw1,f,c
 13156  010FD2  B0D8               	btfsc	status,0,c
 13157  010FD4  2AE3               	incf	plusw1,f,c
 13158  010FD6                     l9648:
 13159                           
 13160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13161  010FD6  0E02               	movlw	2
 13162  010FD8  6E3D               	movwf	(btemp+10)^0,c
 13163  010FDA  0E00               	movlw	0
 13164  010FDC  6E3E               	movwf	(btemp+11)^0,c
 13165                           
 13166                           ;stkvar	_p @ sp[(-56)+40]
 13167  010FDE  0EF0               	movlw	-16
 13168  010FE0  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 13169  010FE6  0EF1               	movlw	-15
 13170  010FE8  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 13171                           
 13172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13173  010FEE  D051               	goto	l9660
 13174  010FF0                     l9650:
 13175                           
 13176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13177                           ;stkvar	_i @ sp[(-56)+36]
 13178  010FF0  50E1               	movf	fsr1l,w,c
 13179  010FF2  0FEC               	addlw	-20
 13180  010FF4  6ED9               	movwf	fsr2l,c
 13181  010FF6  50E2               	movf	fsr1h,w,c
 13182  010FF8  6EDA               	movwf	fsr2h,c
 13183  010FFA  0EFF               	movlw	255
 13184  010FFC  22DA               	addwfc	fsr2h,f,c
 13185  010FFE  06DE               	decf	postinc2,f,c
 13186  011000  0E00               	movlw	0
 13187  011002  5ADD               	subwfb	postdec2,f,c
 13188                           
 13189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13190                           ;stkvar	_i @ sp[(-56)+36]
 13191  011004  0EEC               	movlw	-20
 13192  011006  006F FF8C  F03D    	movff	plusw1,btemp+10
 13193  01100C  0EED               	movlw	-19
 13194  01100E  006F FF8C  F03E    	movff	plusw1,btemp+11
 13195  011014  0EAC               	movlw	low _dbuf
 13196  011016  243D               	addwf	(btemp+10)^0,w,c
 13197  011018  6ED9               	movwf	fsr2l,c
 13198  01101A  0E02               	movlw	high _dbuf
 13199  01101C  203E               	addwfc	(btemp+11)^0,w,c
 13200  01101E  6EDA               	movwf	fsr2h,c
 13201  011020  0E0A               	movlw	10
 13202  011022  6EE6               	movwf	postinc1,c
 13203  011024  0E00               	movlw	0
 13204  011026  6EE6               	movwf	postinc1,c
 13205                           
 13206                           ;stkvar	_e @ sp[(-58)+34]
 13207  011028  0EE8               	movlw	-24
 13208  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13209  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13210  011036  ECA8  F0B7         	call	___awmod	;wreg free
 13211  01103A  5033               	movf	btemp^0,w,c
 13212  01103C  0F30               	addlw	48
 13213  01103E  6EDF               	movwf	indf2,c
 13214                           
 13215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13216  011040  0E0A               	movlw	10
 13217  011042  6EE6               	movwf	postinc1,c
 13218  011044  0E00               	movlw	0
 13219  011046  6EE6               	movwf	postinc1,c
 13220                           
 13221                           ;stkvar	_e @ sp[(-58)+34]
 13222  011048  0EE8               	movlw	-24
 13223  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13224  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13225  011056  EC38  F0B5         	call	___awdiv	;wreg free
 13226                           
 13227                           ;stkvar	_e @ sp[(-56)+34]
 13228  01105A  0EEA               	movlw	-22
 13229  01105C  0060  F0CF  FFE3   	movff	btemp,plusw1
 13230  011062  0EEB               	movlw	-21
 13231  011064  0060  F0D3  FFE3   	movff	btemp+1,plusw1
 13232                           
 13233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13234                           ;stkvar	_p @ sp[(-56)+40]
 13235  01106A  50E1               	movf	fsr1l,w,c
 13236  01106C  0FF0               	addlw	-16
 13237  01106E  6ED9               	movwf	fsr2l,c
 13238  011070  50E2               	movf	fsr1h,w,c
 13239  011072  6EDA               	movwf	fsr2h,c
 13240  011074  0EFF               	movlw	255
 13241  011076  22DA               	addwfc	fsr2h,f,c
 13242  011078  06DE               	decf	postinc2,f,c
 13243  01107A  0E00               	movlw	0
 13244  01107C  5ADD               	subwfb	postdec2,f,c
 13245                           
 13246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13247                           ;stkvar	_w @ sp[(-56)+38]
 13248  01107E  50E1               	movf	fsr1l,w,c
 13249  011080  0FEE               	addlw	-18
 13250  011082  6ED9               	movwf	fsr2l,c
 13251  011084  50E2               	movf	fsr1h,w,c
 13252  011086  6EDA               	movwf	fsr2h,c
 13253  011088  0EFF               	movlw	255
 13254  01108A  22DA               	addwfc	fsr2h,f,c
 13255  01108C  06DE               	decf	postinc2,f,c
 13256  01108E  0E00               	movlw	0
 13257  011090  5ADD               	subwfb	postdec2,f,c
 13258  011092                     l9660:
 13259                           
 13260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13261                           ;stkvar	_e @ sp[(-56)+34]
 13262  011092  0EEA               	movlw	-22
 13263  011094  006F FF8C  F033    	movff	plusw1,btemp
 13264  01109A  0EEB               	movlw	-21
 13265  01109C  50E3               	movf	plusw1,w,c
 13266  01109E  1033               	iorwf	btemp^0,w,c
 13267  0110A0  A4D8               	btfss	status,2,c
 13268  0110A2  D7A6               	goto	l9650
 13269                           
 13270                           ;stkvar	_p @ sp[(-56)+40]
 13271  0110A4  0EF1               	movlw	-15
 13272  0110A6  BEE3               	btfsc	plusw1,7,c
 13273  0110A8  D007               	goto	u9840
 13274  0110AA  0EF1               	movlw	-15
 13275  0110AC  50E3               	movf	plusw1,w,c
 13276  0110AE  E1A0               	bnz	l9650
 13277  0110B0  0EF0               	movlw	-16
 13278  0110B2  04E3               	decf	plusw1,w,c
 13279  0110B4  B0D8               	btfsc	status,0,c
 13280  0110B6  D79C               	goto	l9650
 13281  0110B8                     u9840:
 13282                           
 13283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13284                           ;stkvar	_i @ sp[(-56)+36]
 13285  0110B8  50E1               	movf	fsr1l,w,c
 13286  0110BA  0FEC               	addlw	-20
 13287  0110BC  6ED9               	movwf	fsr2l,c
 13288  0110BE  50E2               	movf	fsr1h,w,c
 13289  0110C0  6EDA               	movwf	fsr2h,c
 13290  0110C2  0EFF               	movlw	255
 13291  0110C4  22DA               	addwfc	fsr2h,f,c
 13292  0110C6  06DE               	decf	postinc2,f,c
 13293  0110C8  0E00               	movlw	0
 13294  0110CA  5ADD               	subwfb	postdec2,f,c
 13295                           
 13296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13297                           ;stkvar	_sign @ sp[(-56)+42]
 13298  0110CC  0EF2               	movlw	-14
 13299  0110CE  006F FF8C  F033    	movff	plusw1,btemp
 13300  0110D4  0EF3               	movlw	-13
 13301  0110D6  50E3               	movf	plusw1,w,c
 13302  0110D8  1033               	iorwf	btemp^0,w,c
 13303  0110DA  A4D8               	btfss	status,2,c
 13304  0110DC  D002               	goto	l9670
 13305  0110DE  0E2B               	movlw	43
 13306  0110E0  D001               	goto	L13
 13307  0110E2                     l9670:
 13308  0110E2  0E2D               	movlw	45
 13309  0110E4                     L13:
 13310  0110E4  6E3D               	movwf	(btemp+10)^0,c
 13311  0110E6  0E00               	movlw	0
 13312  0110E8  6E3E               	movwf	(btemp+11)^0,c
 13313                           
 13314                           ;stkvar	_efgtoa$4270 @ sp[(-56)+4]
 13315  0110EA  0ECC               	movlw	-52
 13316  0110EC  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 13317  0110F2  0ECD               	movlw	-51
 13318  0110F4  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 13319                           
 13320                           ;stkvar	_efgtoa$4270 @ sp[(-56)+4]
 13321                           ;stkvar	_i @ sp[(-56)+36]
 13322  0110FA  0EEC               	movlw	-20
 13323  0110FC  006F FF8C  F03D    	movff	plusw1,btemp+10
 13324  011102  0EED               	movlw	-19
 13325  011104  006F FF8C  F03E    	movff	plusw1,btemp+11
 13326  01110A  0EAC               	movlw	low _dbuf
 13327  01110C  243D               	addwf	(btemp+10)^0,w,c
 13328  01110E  6ED9               	movwf	fsr2l,c
 13329  011110  0E02               	movlw	high _dbuf
 13330  011112  203E               	addwfc	(btemp+11)^0,w,c
 13331  011114  6EDA               	movwf	fsr2h,c
 13332  011116  0ECC               	movlw	-52
 13333  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13334                           
 13335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13336                           ;stkvar	_w @ sp[(-56)+38]
 13337  01111E  50E1               	movf	fsr1l,w,c
 13338  011120  0FEE               	addlw	-18
 13339  011122  6ED9               	movwf	fsr2l,c
 13340  011124  50E2               	movf	fsr1h,w,c
 13341  011126  6EDA               	movwf	fsr2h,c
 13342  011128  0EFF               	movlw	255
 13343  01112A  22DA               	addwfc	fsr2h,f,c
 13344  01112C  06DE               	decf	postinc2,f,c
 13345  01112E  0E00               	movlw	0
 13346  011130  5ADD               	subwfb	postdec2,f,c
 13347                           
 13348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13349                           ;stkvar	_i @ sp[(-56)+36]
 13350  011132  50E1               	movf	fsr1l,w,c
 13351  011134  0FEC               	addlw	-20
 13352  011136  6ED9               	movwf	fsr2l,c
 13353  011138  50E2               	movf	fsr1h,w,c
 13354  01113A  6EDA               	movwf	fsr2h,c
 13355  01113C  0EFF               	movlw	255
 13356  01113E  22DA               	addwfc	fsr2h,f,c
 13357  011140  06DE               	decf	postinc2,f,c
 13358  011142  0E00               	movlw	0
 13359  011144  5ADD               	subwfb	postdec2,f,c
 13360  011146  0EBF               	movlw	191
 13361  011148  6E3D               	movwf	(btemp+10)^0,c
 13362  01114A  0EFF               	movlw	255
 13363  01114C  6E3E               	movwf	(btemp+11)^0,c
 13364                           
 13365                           ;stkvar	_c @ sp[(-56)+-7]
 13366  01114E  0EC1               	movlw	-63
 13367  011150  50E3               	movf	plusw1,w,c
 13368  011152  6E3B               	movwf	(btemp+8)^0,c
 13369  011154  6A3C               	clrf	(btemp+9)^0,c
 13370  011156  503D               	movf	(btemp+10)^0,w,c
 13371  011158  263B               	addwf	(btemp+8)^0,f,c
 13372  01115A  503E               	movf	(btemp+11)^0,w,c
 13373  01115C  223C               	addwfc	(btemp+9)^0,f,c
 13374  01115E  503C               	movf	(btemp+9)^0,w,c
 13375  011160  E106               	bnz	u9860
 13376  011162  0E1A               	movlw	26
 13377  011164  5C3B               	subwf	(btemp+8)^0,w,c
 13378  011166  B0D8               	btfsc	status,0,c
 13379  011168  D002               	goto	u9860
 13380  01116A  0E01               	movlw	1
 13381  01116C  D001               	goto	u9870
 13382  01116E                     u9860:
 13383  01116E  0E00               	movlw	0
 13384  011170                     u9870:
 13385  011170  6E3D               	movwf	(btemp+10)^0,c
 13386  011172  6A3E               	clrf	(btemp+11)^0,c
 13387                           
 13388                           ;stkvar	_efgtoa$4272 @ sp[(-56)+0]
 13389  011174  0EC8               	movlw	-56
 13390  011176  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 13391  01117C  0EC9               	movlw	-55
 13392  01117E  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 13393                           
 13394                           ;stkvar	_efgtoa$4272 @ sp[(-56)+0]
 13395  011184  0EC8               	movlw	-56
 13396  011186  006F FF8C  F033    	movff	plusw1,btemp
 13397  01118C  0EC9               	movlw	-55
 13398  01118E  50E3               	movf	plusw1,w,c
 13399  011190  1033               	iorwf	btemp^0,w,c
 13400  011192  A4D8               	btfss	status,2,c
 13401  011194  D002               	goto	l9686
 13402  011196  0E65               	movlw	101
 13403  011198  D001               	goto	L14
 13404  01119A                     l9686:
 13405  01119A  0E45               	movlw	69
 13406  01119C                     L14:
 13407  01119C  6E3D               	movwf	(btemp+10)^0,c
 13408  01119E  0E00               	movlw	0
 13409  0111A0  6E3E               	movwf	(btemp+11)^0,c
 13410                           
 13411                           ;stkvar	_efgtoa$4271 @ sp[(-56)+2]
 13412  0111A2  0ECA               	movlw	-54
 13413  0111A4  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 13414  0111AA  0ECB               	movlw	-53
 13415  0111AC  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 13416                           
 13417                           ;stkvar	_efgtoa$4271 @ sp[(-56)+2]
 13418                           ;stkvar	_i @ sp[(-56)+36]
 13419  0111B2  0EEC               	movlw	-20
 13420  0111B4  006F FF8C  F03D    	movff	plusw1,btemp+10
 13421  0111BA  0EED               	movlw	-19
 13422  0111BC  006F FF8C  F03E    	movff	plusw1,btemp+11
 13423  0111C2  0EAC               	movlw	low _dbuf
 13424  0111C4  243D               	addwf	(btemp+10)^0,w,c
 13425  0111C6  6ED9               	movwf	fsr2l,c
 13426  0111C8  0E02               	movlw	high _dbuf
 13427  0111CA  203E               	addwfc	(btemp+11)^0,w,c
 13428  0111CC  6EDA               	movwf	fsr2h,c
 13429  0111CE  0ECA               	movlw	-54
 13430  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13431                           
 13432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13433                           ;stkvar	_w @ sp[(-56)+38]
 13434  0111D6  50E1               	movf	fsr1l,w,c
 13435  0111D8  0FEE               	addlw	-18
 13436  0111DA  6ED9               	movwf	fsr2l,c
 13437  0111DC  50E2               	movf	fsr1h,w,c
 13438  0111DE  6EDA               	movwf	fsr2h,c
 13439  0111E0  0EFF               	movlw	255
 13440  0111E2  22DA               	addwfc	fsr2h,f,c
 13441  0111E4  06DE               	decf	postinc2,f,c
 13442  0111E6  0E00               	movlw	0
 13443  0111E8  5ADD               	subwfb	postdec2,f,c
 13444                           
 13445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13446                           ;stkvar	_i @ sp[(-56)+36]
 13447  0111EA  0EEC               	movlw	-20
 13448  0111EC  006F FF8C  F03D    	movff	plusw1,btemp+10
 13449  0111F2  0EED               	movlw	-19
 13450  0111F4  006F FF8C  F03E    	movff	plusw1,btemp+11
 13451  0111FA  0EAC               	movlw	low _dbuf
 13452  0111FC  243D               	addwf	(btemp+10)^0,w,c
 13453  0111FE  6E3B               	movwf	(btemp+8)^0,c
 13454  011200  0E02               	movlw	high _dbuf
 13455  011202  203E               	addwfc	(btemp+11)^0,w,c
 13456  011204  6E3C               	movwf	(btemp+9)^0,c
 13457  011206  0060  F0EF  FFE6   	movff	btemp+8,postinc1
 13458  01120C  0060  F0F3  FFE6   	movff	btemp+9,postinc1
 13459                           
 13460                           ;stkvar	_n @ sp[(-58)+32]
 13461  011212  0EAC               	movlw	low _dbuf
 13462  011214  6E3D               	movwf	(btemp+10)^0,c
 13463  011216  0E02               	movlw	high _dbuf
 13464  011218  6E3E               	movwf	(btemp+11)^0,c
 13465  01121A  0EE6               	movlw	-26
 13466  01121C  50E3               	movf	plusw1,w,c
 13467  01121E  263D               	addwf	(btemp+10)^0,f,c
 13468  011220  0EE7               	movlw	-25
 13469  011222  50E3               	movf	plusw1,w,c
 13470  011224  223E               	addwfc	(btemp+11)^0,f,c
 13471  011226  0060  F0F7  FFE6   	movff	btemp+10,postinc1
 13472  01122C  0060  F0FB  FFE6   	movff	btemp+11,postinc1
 13473  011232  EC3F  F0BA         	call	_strcpy	;wreg free
 13474  011236  EF16  F081         	goto	l9438
 13475  01123A                     l1824:
 13476                           
 13477                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13478  01123A  0EC1               	movlw	193
 13479  01123C  26E1               	addwf	fsr1l,f,c
 13480  01123E  0EFF               	movlw	255
 13481  011240  22E2               	addwfc	fsr1h,f,c
 13482  011242  0012               	return		;funcret
 13483  011244                     __end_of_efgtoa:
 13484                           	opt callstack 0
 13485                           
 13486 ;; *************** function _tolower *****************
 13487 ;; Defined at:
 13488 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;  c               2  [STACK] int 
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;		None
 13493 ;; Return value:  Size  Location     Type
 13494 ;;                  2  [STACK] int 
 13495 ;; Registers used:
 13496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13497 ;; Tracked objects:
 13498 ;;		On entry : 0/0
 13499 ;;		On exit  : 0/0
 13500 ;;		Unchanged: 0/0
 13501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13506 ;;Total ram usage:        0 bytes
 13507 ;; Hardware stack levels used:    1
 13508 ;; Hardware stack levels required when called:    7
 13509 ;; This function calls:
 13510 ;;		_isupper
 13511 ;; This function is called by:
 13512 ;;		_efgtoa
 13513 ;;		_vfpfcnvrt
 13514 ;; This function uses a reentrant model
 13515 ;;
 13516                           
 13517                           	psect	text47
 13518  017D0E                     __ptext47:
 13519                           	opt callstack 0
 13520  017D0E                     _tolower:
 13521                           	opt callstack 0
 13522                           
 13523                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13524  017D0E  52E6               	movf	postinc1,f,c
 13525  017D10  52E6               	movf	postinc1,f,c
 13526                           
 13527                           ;stkvar	_c @ sp[(-2)+-2]
 13528                           
 13529                           ;incstack = 0
 13530  017D12  0EFC               	movlw	-4
 13531  017D14  50E3               	movf	plusw1,w,c
 13532  017D16  0FBF               	addlw	191
 13533  017D18  6E3D               	movwf	(btemp+10)^0,c
 13534  017D1A  0EFD               	movlw	-3
 13535  017D1C  006F FF8C  F03E    	movff	plusw1,btemp+11
 13536  017D22  0EFF               	movlw	255
 13537  017D24  223E               	addwfc	(btemp+11)^0,f,c
 13538  017D26  503E               	movf	(btemp+11)^0,w,c
 13539  017D28  E106               	bnz	u5260
 13540  017D2A  0E1A               	movlw	26
 13541  017D2C  5C3D               	subwf	(btemp+10)^0,w,c
 13542  017D2E  B0D8               	btfsc	status,0,c
 13543  017D30  D002               	goto	u5260
 13544  017D32  0E01               	movlw	1
 13545  017D34  D001               	goto	u5270
 13546  017D36                     u5260:
 13547  017D36  0E00               	movlw	0
 13548  017D38                     u5270:
 13549  017D38  6E3D               	movwf	(btemp+10)^0,c
 13550  017D3A  6A3E               	clrf	(btemp+11)^0,c
 13551                           
 13552                           ;stkvar	_tolower$4969 @ sp[(-2)+0]
 13553  017D3C  0EFE               	movlw	-2
 13554  017D3E  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 13555  017D44  0EFF               	movlw	-1
 13556  017D46  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 13557                           
 13558                           ;stkvar	_tolower$4969 @ sp[(-2)+0]
 13559  017D4C  0EFE               	movlw	-2
 13560  017D4E  006F FF8C  F033    	movff	plusw1,btemp
 13561  017D54  0EFF               	movlw	-1
 13562  017D56  50E3               	movf	plusw1,w,c
 13563  017D58  1033               	iorwf	btemp^0,w,c
 13564  017D5A  B4D8               	btfsc	status,2,c
 13565  017D5C  D00D               	goto	l6442
 13566                           
 13567                           ;stkvar	_c @ sp[(-2)+-2]
 13568  017D5E  0EFC               	movlw	-4
 13569  017D60  006F FF8C  F033    	movff	plusw1,btemp
 13570  017D66  0EFD               	movlw	-3
 13571  017D68  006F FF8C  F034    	movff	plusw1,btemp+1
 13572  017D6E  0E20               	movlw	32
 13573  017D70  1233               	iorwf	btemp^0,f,c
 13574  017D72  0E00               	movlw	0
 13575  017D74  1234               	iorwf	(btemp+1)^0,f,c
 13576  017D76  D008               	goto	l2870
 13577  017D78                     l6442:
 13578                           
 13579                           ;stkvar	_c @ sp[(-2)+-2]
 13580  017D78  0EFC               	movlw	-4
 13581  017D7A  006F FF8C  F033    	movff	plusw1,btemp
 13582  017D80  0EFD               	movlw	-3
 13583  017D82  006F FF8C  F034    	movff	plusw1,btemp+1
 13584  017D88                     l2870:
 13585                           
 13586                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13587  017D88  52E5               	movf	postdec1,f,c
 13588  017D8A  52E5               	movf	postdec1,f,c
 13589  017D8C  52E5               	movf	postdec1,f,c
 13590  017D8E  52E5               	movf	postdec1,f,c
 13591  017D90  0012               	return		;funcret
 13592  017D92                     __end_of_tolower:
 13593                           	opt callstack 0
 13594                           
 13595 ;; *************** function _isupper *****************
 13596 ;; Defined at:
 13597 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13598 ;; Parameters:    Size  Location     Type
 13599 ;;  c               2  [STACK] int 
 13600 ;; Auto vars:     Size  Location     Type
 13601 ;;		None
 13602 ;; Return value:  Size  Location     Type
 13603 ;;                  2  [STACK] int 
 13604 ;; Registers used:
 13605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13606 ;; Tracked objects:
 13607 ;;		On entry : 0/0
 13608 ;;		On exit  : 0/0
 13609 ;;		Unchanged: 0/0
 13610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13615 ;;Total ram usage:        0 bytes
 13616 ;; Hardware stack levels used:    1
 13617 ;; Hardware stack levels required when called:    6
 13618 ;; This function calls:
 13619 ;;		Nothing
 13620 ;; This function is called by:
 13621 ;;		_efgtoa
 13622 ;;		_xtoa
 13623 ;;		_vfpfcnvrt
 13624 ;;		_tolower
 13625 ;; This function uses a reentrant model
 13626 ;;
 13627                           
 13628                           	psect	text48
 13629  018834                     __ptext48:
 13630                           	opt callstack 0
 13631  018834                     _isupper:
 13632                           	opt callstack 17
 13633                           
 13634                           ;stkvar	_c @ sp[(0)+-2]
 13635                           
 13636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13637                           ;incstack = 0
 13638  018834  0EFE               	movlw	-2
 13639  018836  50E3               	movf	plusw1,w,c
 13640  018838  0FBF               	addlw	191
 13641  01883A  6E3D               	movwf	(btemp+10)^0,c
 13642  01883C  0EFF               	movlw	-1
 13643  01883E  006F FF8C  F03E    	movff	plusw1,btemp+11
 13644  018844  0EFF               	movlw	255
 13645  018846  223E               	addwfc	(btemp+11)^0,f,c
 13646  018848  503E               	movf	(btemp+11)^0,w,c
 13647  01884A  E106               	bnz	u4660
 13648  01884C  0E1A               	movlw	26
 13649  01884E  5C3D               	subwf	(btemp+10)^0,w,c
 13650  018850  B0D8               	btfsc	status,0,c
 13651  018852  D002               	goto	u4660
 13652  018854  0E01               	movlw	1
 13653  018856  D001               	goto	u4670
 13654  018858                     u4660:
 13655  018858  0E00               	movlw	0
 13656  01885A                     u4670:
 13657  01885A  6E33               	movwf	btemp^0,c
 13658  01885C  6A34               	clrf	(btemp+1)^0,c
 13659                           
 13660                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13661  01885E  52E5               	movf	postdec1,f,c
 13662  018860  52E5               	movf	postdec1,f,c
 13663  018862  0012               	return		;funcret
 13664  018864                     __end_of_isupper:
 13665                           	opt callstack 0
 13666                           
 13667 ;; *************** function _strcpy *****************
 13668 ;; Defined at:
 13669 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13670 ;; Parameters:    Size  Location     Type
 13671 ;;  dest            2  [STACK] PTR unsigned char 
 13672 ;;		 -> dbuf(80), 
 13673 ;;  src             2  [STACK] PTR const unsigned char 
 13674 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13675 ;;		 -> dbuf(80), 
 13676 ;; Auto vars:     Size  Location     Type
 13677 ;;  d               2  [STACK] PTR unsigned char 
 13678 ;;		 -> dbuf(80), 
 13679 ;;  s               2  [STACK] PTR const unsigned char 
 13680 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13681 ;;		 -> dbuf(80), 
 13682 ;; Return value:  Size  Location     Type
 13683 ;;                  2  [STACK] PTR unsigned char 
 13684 ;; Registers used:
 13685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13686 ;; Tracked objects:
 13687 ;;		On entry : 0/0
 13688 ;;		On exit  : 0/0
 13689 ;;		Unchanged: 0/0
 13690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13695 ;;Total ram usage:        0 bytes
 13696 ;; Hardware stack levels used:    1
 13697 ;; Hardware stack levels required when called:    6
 13698 ;; This function calls:
 13699 ;;		Nothing
 13700 ;; This function is called by:
 13701 ;;		_efgtoa
 13702 ;; This function uses a reentrant model
 13703 ;;
 13704                           
 13705                           	psect	text49
 13706  01747E                     __ptext49:
 13707                           	opt callstack 0
 13708  01747E                     _strcpy:
 13709                           	opt callstack 0
 13710                           
 13711                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13712  01747E  52E6               	movf	postinc1,f,c
 13713  017480  52E6               	movf	postinc1,f,c
 13714  017482  52E6               	movf	postinc1,f,c
 13715  017484  52E6               	movf	postinc1,f,c
 13716                           
 13717                           ;stkvar	_src @ sp[(-4)+-4]
 13718                           
 13719                           ;incstack = 0
 13720  017486  0EF8               	movlw	-8
 13721  017488  006F FF8C  F03D    	movff	plusw1,btemp+10
 13722  01748E  0EF9               	movlw	-7
 13723  017490  006F FF8C  F03E    	movff	plusw1,btemp+11
 13724                           
 13725                           ;stkvar	_s @ sp[(-4)+2]
 13726  017496  0EFF               	movlw	-1
 13727  017498  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 13728  01749E  0EFE               	movlw	-2
 13729  0174A0  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 13730                           
 13731                           ;stkvar	_dest @ sp[(-4)+-2]
 13732  0174A6  0EFA               	movlw	-6
 13733  0174A8  006F FF8C  F03D    	movff	plusw1,btemp+10
 13734  0174AE  0EFB               	movlw	-5
 13735  0174B0  006F FF8C  F03E    	movff	plusw1,btemp+11
 13736                           
 13737                           ;stkvar	_d @ sp[(-4)+0]
 13738  0174B6  0EFD               	movlw	-3
 13739  0174B8  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 13740  0174BE  0EFC               	movlw	-4
 13741  0174C0  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 13742  0174C6                     l9312:
 13743                           
 13744                           ;stkvar	_s @ sp[(-4)+2]
 13745  0174C6  50E1               	movf	fsr1l,w,c
 13746  0174C8  0FFE               	addlw	-2
 13747  0174CA  6ED9               	movwf	fsr2l,c
 13748  0174CC  50E2               	movf	fsr1h,w,c
 13749  0174CE  6EDA               	movwf	fsr2h,c
 13750  0174D0  0EFF               	movlw	255
 13751  0174D2  22DA               	addwfc	fsr2h,f,c
 13752  0174D4  006F FF7C  F03D    	movff	indf2,btemp+10
 13753  0174DA  0E01               	movlw	1
 13754  0174DC  26DE               	addwf	postinc2,f,c
 13755  0174DE  006F FF7C  F03E    	movff	indf2,btemp+11
 13756  0174E4  0E00               	movlw	0
 13757  0174E6  22DD               	addwfc	postdec2,f,c
 13758  0174E8  0060  F0F7  FFF6   	movff	btemp+10,tblptrl
 13759  0174EE  0060  F0FB  FFF7   	movff	btemp+11,tblptrh
 13760  0174F4  0E00               	movlw	low (__mediumconst shr (0+16))
 13761  0174F6  6EF8               	movwf	tblptru,c
 13762                           
 13763                           ;stkvar	_d @ sp[(-4)+0]
 13764  0174F8  50E1               	movf	fsr1l,w,c
 13765  0174FA  0FFC               	addlw	-4
 13766  0174FC  6ED9               	movwf	fsr2l,c
 13767  0174FE  50E2               	movf	fsr1h,w,c
 13768  017500  6EDA               	movwf	fsr2h,c
 13769  017502  0EFF               	movlw	255
 13770  017504  22DA               	addwfc	fsr2h,f,c
 13771  017506  006F FF7C  F03D    	movff	indf2,btemp+10
 13772  01750C  0E01               	movlw	1
 13773  01750E  26DE               	addwf	postinc2,f,c
 13774  017510  006F FF7C  F03E    	movff	indf2,btemp+11
 13775  017516  0E00               	movlw	0
 13776  017518  22DD               	addwfc	postdec2,f,c
 13777  01751A  0060  F0F7  FFD9   	movff	btemp+10,fsr2l
 13778  017520  0060  F0FB  FFDA   	movff	btemp+11,fsr2h
 13779  017526  0E1F               	movlw	(high __ramtop+-1)
 13780  017528  64F7               	cpfsgt	tblptrh,c
 13781  01752A  D003               	bra	u9177
 13782  01752C  0008               	tblrd		*
 13783  01752E  50F5               	movf	tablat,w,c
 13784  017530  D007               	bra	u9170
 13785  017532                     u9177:
 13786  017532  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13787  017538  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13788  01753E  50EF               	movf	indf0,w,c
 13789  017540                     u9170:
 13790  017540  6EDF               	movwf	indf2,c
 13791  017542  50DF               	movf	indf2,w,c
 13792  017544  A4D8               	btfss	status,2,c
 13793  017546  D7BF               	goto	l9312
 13794                           
 13795                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13796  017548  0EF8               	movlw	248
 13797  01754A  26E1               	addwf	fsr1l,f,c
 13798  01754C  0EFF               	movlw	255
 13799  01754E  22E2               	addwfc	fsr1h,f,c
 13800  017550  0012               	return		;funcret
 13801  017552                     __end_of_strcpy:
 13802                           	opt callstack 0
 13803                           
 13804 ;; *************** function _floorf *****************
 13805 ;; Defined at:
 13806 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13807 ;; Parameters:    Size  Location     Type
 13808 ;;  x               4  [STACK] float 
 13809 ;; Auto vars:     Size  Location     Type
 13810 ;;  u               4  [STACK] struct .
 13811 ;;  m               4  [STACK] unsigned long 
 13812 ;;  e               2  [STACK] int 
 13813 ;; Return value:  Size  Location     Type
 13814 ;;                  4  [STACK] float 
 13815 ;; Registers used:
 13816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13817 ;; Tracked objects:
 13818 ;;		On entry : 0/0
 13819 ;;		On exit  : 0/0
 13820 ;;		Unchanged: 0/0
 13821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13826 ;;Total ram usage:        0 bytes
 13827 ;; Hardware stack levels used:    1
 13828 ;; Hardware stack levels required when called:    6
 13829 ;; This function calls:
 13830 ;;		Nothing
 13831 ;; This function is called by:
 13832 ;;		_efgtoa
 13833 ;; This function uses a reentrant model
 13834 ;;
 13835                           
 13836                           	psect	text50
 13837  014906                     __ptext50:
 13838                           	opt callstack 0
 13839  014906                     _floorf:
 13840                           	opt callstack 0
 13841                           
 13842                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13843  014906  0E0A               	movlw	10
 13844  014908  26E1               	addwf	fsr1l,f,c
 13845  01490A  0E00               	movlw	0
 13846  01490C  22E2               	addwfc	fsr1h,f,c
 13847                           
 13848                           ;incstack = 0
 13849  01490E  0060  F210  F03B   	movff	floorf@F524,btemp+8
 13850  014914  0060  F214  F03C   	movff	floorf@F524+1,btemp+9
 13851  01491A  0060  F218  F03D   	movff	floorf@F524+2,btemp+10
 13852  014920  0060  F21C  F03E   	movff	floorf@F524+3,btemp+11
 13853                           
 13854                           ;stkvar	_u @ sp[(-10)+0]
 13855  014926  0EF6               	movlw	-10
 13856  014928  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 13857  01492E  0EF7               	movlw	-9
 13858  014930  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 13859  014936  0EF8               	movlw	-8
 13860  014938  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 13861  01493E  0EF9               	movlw	-7
 13862  014940  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 13863                           
 13864                           ;stkvar	_x @ sp[(-10)+-4]
 13865  014946  0EF2               	movlw	-14
 13866  014948  006F FF8C  F03B    	movff	plusw1,btemp+8
 13867  01494E  0EF3               	movlw	-13
 13868  014950  006F FF8C  F03C    	movff	plusw1,btemp+9
 13869  014956  0EF4               	movlw	-12
 13870  014958  006F FF8C  F03D    	movff	plusw1,btemp+10
 13871  01495E  0EF5               	movlw	-11
 13872  014960  006F FF8C  F03E    	movff	plusw1,btemp+11
 13873                           
 13874                           ;stkvar	_u @ sp[(-10)+0]
 13875  014966  0EF6               	movlw	-10
 13876  014968  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 13877  01496E  0EF7               	movlw	-9
 13878  014970  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 13879  014976  0EF8               	movlw	-8
 13880  014978  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 13881  01497E  0EF9               	movlw	-7
 13882  014980  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 13883  014986  0E81               	movlw	129
 13884  014988  6E3D               	movwf	(btemp+10)^0,c
 13885  01498A  0EFF               	movlw	255
 13886  01498C  6E3E               	movwf	(btemp+11)^0,c
 13887                           
 13888                           ;stkvar	_u @ sp[(-10)+0]
 13889  01498E  0EF6               	movlw	-10
 13890  014990  006F FF8C  F037    	movff	plusw1,btemp+4
 13891  014996  0EF7               	movlw	-9
 13892  014998  006F FF8C  F038    	movff	plusw1,btemp+5
 13893  01499E  0EF8               	movlw	-8
 13894  0149A0  006F FF8C  F039    	movff	plusw1,btemp+6
 13895  0149A6  0EF9               	movlw	-7
 13896  0149A8  006F FF8C  F03A    	movff	plusw1,btemp+7
 13897  0149AE  0E18               	movlw	24
 13898  0149B0  D005               	goto	u5290
 13899  0149B2                     u5295:
 13900  0149B2  90D8               	bcf	status,0,c
 13901  0149B4  323A               	rrcf	(btemp+7)^0,f,c
 13902  0149B6  3239               	rrcf	(btemp+6)^0,f,c
 13903  0149B8  3238               	rrcf	(btemp+5)^0,f,c
 13904  0149BA  3237               	rrcf	(btemp+4)^0,f,c
 13905  0149BC                     u5290:
 13906  0149BC  2EE8               	decfsz	wreg,f,c
 13907  0149BE  D7F9               	goto	u5295
 13908  0149C0  0060  F0DC  F03B   	movff	btemp+4,btemp+8
 13909  0149C6  0060  F0E0  F03C   	movff	btemp+5,btemp+9
 13910  0149CC  0EFF               	movlw	255
 13911  0149CE  163B               	andwf	(btemp+8)^0,f,c
 13912  0149D0  0E00               	movlw	0
 13913  0149D2  163C               	andwf	(btemp+9)^0,f,c
 13914  0149D4  503D               	movf	(btemp+10)^0,w,c
 13915  0149D6  263B               	addwf	(btemp+8)^0,f,c
 13916  0149D8  503E               	movf	(btemp+11)^0,w,c
 13917  0149DA  223C               	addwfc	(btemp+9)^0,f,c
 13918                           
 13919                           ;stkvar	_e @ sp[(-10)+8]
 13920  0149DC  0EFE               	movlw	-2
 13921  0149DE  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 13922  0149E4  0EFF               	movlw	-1
 13923  0149E6  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 13924                           
 13925                           ;stkvar	_e @ sp[(-10)+8]
 13926  0149EC  0EFF               	movlw	-1
 13927  0149EE  BEE3               	btfsc	plusw1,7,c
 13928  0149F0  D019               	goto	l6456
 13929  0149F2  0EFF               	movlw	-1
 13930  0149F4  50E3               	movf	plusw1,w,c
 13931  0149F6  E108               	bnz	u5300
 13932  0149F8  0EFE               	movlw	-2
 13933  0149FA  006F FF8C  F033    	movff	plusw1,btemp
 13934  014A00  0E17               	movlw	23
 13935  014A02  5E33               	subwf	btemp^0,f,c
 13936  014A04  A0D8               	btfss	status,0,c
 13937  014A06  D00E               	goto	l6456
 13938  014A08                     u5300:
 13939                           
 13940                           ;stkvar	_x @ sp[(-10)+-4]
 13941  014A08  0EF2               	movlw	-14
 13942  014A0A  006F FF8C  F033    	movff	plusw1,btemp
 13943  014A10  0EF3               	movlw	-13
 13944  014A12  006F FF8C  F034    	movff	plusw1,btemp+1
 13945  014A18  0EF4               	movlw	-12
 13946  014A1A  006F FF8C  F035    	movff	plusw1,btemp+2
 13947  014A20  0EF5               	movlw	-11
 13948  014A22  D11F               	goto	L15
 13949  014A24                     l6456:
 13950                           
 13951                           ;stkvar	_e @ sp[(-10)+8]
 13952  014A24  0EFF               	movlw	-1
 13953  014A26  BEE3               	btfsc	plusw1,7,c
 13954  014A28  D0B4               	goto	l6472
 13955                           
 13956                           ;stkvar	_e @ sp[(-10)+8]
 13957  014A2A  0EFE               	movlw	-2
 13958  014A2C  006F FF8C  F03E    	movff	plusw1,btemp+11
 13959  014A32  0EFF               	movlw	255
 13960  014A34  6E37               	movwf	(btemp+4)^0,c
 13961  014A36  0EFF               	movlw	255
 13962  014A38  6E38               	movwf	(btemp+5)^0,c
 13963  014A3A  0E7F               	movlw	127
 13964  014A3C  6E39               	movwf	(btemp+6)^0,c
 13965  014A3E  0E00               	movlw	0
 13966  014A40  6E3A               	movwf	(btemp+7)^0,c
 13967  014A42                     u5325:
 13968  014A42  663E               	tstfsz	(btemp+11)^0,c
 13969  014A44  D001               	goto	u5326
 13970  014A46  D007               	goto	u5327
 13971  014A48                     u5326:
 13972  014A48  343A               	rlcf	(btemp+7)^0,w,c
 13973  014A4A  323A               	rrcf	(btemp+7)^0,f,c
 13974  014A4C  3239               	rrcf	(btemp+6)^0,f,c
 13975  014A4E  3238               	rrcf	(btemp+5)^0,f,c
 13976  014A50  3237               	rrcf	(btemp+4)^0,f,c
 13977  014A52  2E3E               	decfsz	(btemp+11)^0,f,c
 13978  014A54  D7F6               	goto	u5325
 13979  014A56                     u5327:
 13980                           
 13981                           ;stkvar	_m @ sp[(-10)+4]
 13982  014A56  0EFA               	movlw	-6
 13983  014A58  0060  F0DF  FFE3   	movff	btemp+4,plusw1
 13984  014A5E  0EFB               	movlw	-5
 13985  014A60  0060  F0E3  FFE3   	movff	btemp+5,plusw1
 13986  014A66  0EFC               	movlw	-4
 13987  014A68  0060  F0E7  FFE3   	movff	btemp+6,plusw1
 13988  014A6E  0EFD               	movlw	-3
 13989  014A70  0060  F0EB  FFE3   	movff	btemp+7,plusw1
 13990                           
 13991                           ;stkvar	_m @ sp[(-10)+4]
 13992                           ;stkvar	_u @ sp[(-10)+0]
 13993  014A76  0EF6               	movlw	-10
 13994  014A78  006F FF8C  F03B    	movff	plusw1,btemp+8
 13995  014A7E  0EF7               	movlw	-9
 13996  014A80  006F FF8C  F03C    	movff	plusw1,btemp+9
 13997  014A86  0EF8               	movlw	-8
 13998  014A88  006F FF8C  F03D    	movff	plusw1,btemp+10
 13999  014A8E  0EF9               	movlw	-7
 14000  014A90  006F FF8C  F03E    	movff	plusw1,btemp+11
 14001  014A96  0EFA               	movlw	-6
 14002  014A98  50E3               	movf	plusw1,w,c
 14003  014A9A  163B               	andwf	(btemp+8)^0,f,c
 14004  014A9C  0EFB               	movlw	-5
 14005  014A9E  50E3               	movf	plusw1,w,c
 14006  014AA0  163C               	andwf	(btemp+9)^0,f,c
 14007  014AA2  0EFC               	movlw	-4
 14008  014AA4  50E3               	movf	plusw1,w,c
 14009  014AA6  163D               	andwf	(btemp+10)^0,f,c
 14010  014AA8  0EFD               	movlw	-3
 14011  014AAA  50E3               	movf	plusw1,w,c
 14012  014AAC  163E               	andwf	(btemp+11)^0,f,c
 14013  014AAE  503B               	movf	(btemp+8)^0,w,c
 14014  014AB0  103C               	iorwf	(btemp+9)^0,w,c
 14015  014AB2  103D               	iorwf	(btemp+10)^0,w,c
 14016  014AB4  103E               	iorwf	(btemp+11)^0,w,c
 14017  014AB6  B4D8               	btfsc	status,2,c
 14018  014AB8  D7A7               	goto	u5300
 14019                           
 14020                           ;stkvar	_u @ sp[(-10)+0]
 14021  014ABA  0EF6               	movlw	-10
 14022  014ABC  006F FF8C  F03B    	movff	plusw1,btemp+8
 14023  014AC2  0EF7               	movlw	-9
 14024  014AC4  006F FF8C  F03C    	movff	plusw1,btemp+9
 14025  014ACA  0EF8               	movlw	-8
 14026  014ACC  006F FF8C  F03D    	movff	plusw1,btemp+10
 14027  014AD2  0EF9               	movlw	-7
 14028  014AD4  006F FF8C  F03E    	movff	plusw1,btemp+11
 14029  014ADA  0E20               	movlw	32
 14030  014ADC  D005               	goto	u5340
 14031  014ADE                     u5345:
 14032  014ADE  90D8               	bcf	status,0,c
 14033  014AE0  323E               	rrcf	(btemp+11)^0,f,c
 14034  014AE2  323D               	rrcf	(btemp+10)^0,f,c
 14035  014AE4  323C               	rrcf	(btemp+9)^0,f,c
 14036  014AE6  323B               	rrcf	(btemp+8)^0,f,c
 14037  014AE8                     u5340:
 14038  014AE8  2EE8               	decfsz	wreg,f,c
 14039  014AEA  D7F9               	goto	u5345
 14040  014AEC  503B               	movf	(btemp+8)^0,w,c
 14041  014AEE  B4D8               	btfsc	status,2,c
 14042  014AF0  D028               	goto	l6470
 14043                           
 14044                           ;stkvar	_m @ sp[(-10)+4]
 14045                           ;stkvar	_u @ sp[(-10)+0]
 14046  014AF2  0EF6               	movlw	-10
 14047  014AF4  50E3               	movf	plusw1,w,c
 14048  014AF6  6E33               	movwf	btemp^0,c
 14049  014AF8  0EFA               	movlw	-6
 14050  014AFA  50E3               	movf	plusw1,w,c
 14051  014AFC  2633               	addwf	btemp^0,f,c
 14052  014AFE  0EF6               	movlw	-10
 14053  014B00  0060  F0CF  FFE3   	movff	btemp,plusw1
 14054  014B06  0EF7               	movlw	-9
 14055  014B08  50E3               	movf	plusw1,w,c
 14056  014B0A  6E33               	movwf	btemp^0,c
 14057  014B0C  0EFB               	movlw	-5
 14058  014B0E  50E3               	movf	plusw1,w,c
 14059  014B10  2233               	addwfc	btemp^0,f,c
 14060  014B12  0EF7               	movlw	-9
 14061  014B14  0060  F0CF  FFE3   	movff	btemp,plusw1
 14062  014B1A  0EF8               	movlw	-8
 14063  014B1C  50E3               	movf	plusw1,w,c
 14064  014B1E  6E33               	movwf	btemp^0,c
 14065  014B20  0EFC               	movlw	-4
 14066  014B22  50E3               	movf	plusw1,w,c
 14067  014B24  2233               	addwfc	btemp^0,f,c
 14068  014B26  0EF8               	movlw	-8
 14069  014B28  0060  F0CF  FFE3   	movff	btemp,plusw1
 14070  014B2E  0EF9               	movlw	-7
 14071  014B30  50E3               	movf	plusw1,w,c
 14072  014B32  6E33               	movwf	btemp^0,c
 14073  014B34  0EFD               	movlw	-3
 14074  014B36  50E3               	movf	plusw1,w,c
 14075  014B38  2233               	addwfc	btemp^0,f,c
 14076  014B3A  0EF9               	movlw	-7
 14077  014B3C  0060  F0CF  FFE3   	movff	btemp,plusw1
 14078  014B42                     l6470:
 14079                           
 14080                           ;stkvar	_m @ sp[(-10)+4]
 14081  014B42  0EFA               	movlw	-6
 14082  014B44  006F FF8C  F03B    	movff	plusw1,btemp+8
 14083  014B4A  0EFB               	movlw	-5
 14084  014B4C  006F FF8C  F03C    	movff	plusw1,btemp+9
 14085  014B52  0EFC               	movlw	-4
 14086  014B54  006F FF8C  F03D    	movff	plusw1,btemp+10
 14087  014B5A  0EFD               	movlw	-3
 14088  014B5C  006F FF8C  F03E    	movff	plusw1,btemp+11
 14089  014B62  1C3B               	comf	(btemp+8)^0,w,c
 14090  014B64  6E37               	movwf	(btemp+4)^0,c
 14091  014B66  1C3C               	comf	(btemp+9)^0,w,c
 14092  014B68  6E38               	movwf	(btemp+5)^0,c
 14093  014B6A  1C3D               	comf	(btemp+10)^0,w,c
 14094  014B6C  6E39               	movwf	(btemp+6)^0,c
 14095  014B6E  1C3E               	comf	(btemp+11)^0,w,c
 14096  014B70  6E3A               	movwf	(btemp+7)^0,c
 14097                           
 14098                           ;stkvar	_u @ sp[(-10)+0]
 14099  014B72  50E1               	movf	fsr1l,w,c
 14100  014B74  0FF6               	addlw	-10
 14101  014B76  6ED9               	movwf	fsr2l,c
 14102  014B78  50E2               	movf	fsr1h,w,c
 14103  014B7A  6EDA               	movwf	fsr2h,c
 14104  014B7C  0EFF               	movlw	255
 14105  014B7E  22DA               	addwfc	fsr2h,f,c
 14106  014B80  5037               	movf	(btemp+4)^0,w,c
 14107  014B82  16DE               	andwf	postinc2,f,c
 14108  014B84  5038               	movf	(btemp+5)^0,w,c
 14109  014B86  16DE               	andwf	postinc2,f,c
 14110  014B88  5039               	movf	(btemp+6)^0,w,c
 14111  014B8A  16DE               	andwf	postinc2,f,c
 14112  014B8C  503A               	movf	(btemp+7)^0,w,c
 14113  014B8E  16DE               	andwf	postinc2,f,c
 14114  014B90  D05B               	goto	l6480
 14115  014B92                     l6472:
 14116                           
 14117                           ;stkvar	_u @ sp[(-10)+0]
 14118  014B92  0EF6               	movlw	-10
 14119  014B94  006F FF8C  F03B    	movff	plusw1,btemp+8
 14120  014B9A  0EF7               	movlw	-9
 14121  014B9C  006F FF8C  F03C    	movff	plusw1,btemp+9
 14122  014BA2  0EF8               	movlw	-8
 14123  014BA4  006F FF8C  F03D    	movff	plusw1,btemp+10
 14124  014BAA  0EF9               	movlw	-7
 14125  014BAC  006F FF8C  F03E    	movff	plusw1,btemp+11
 14126  014BB2  0E20               	movlw	32
 14127  014BB4  D005               	goto	u5360
 14128  014BB6                     u5365:
 14129  014BB6  90D8               	bcf	status,0,c
 14130  014BB8  323E               	rrcf	(btemp+11)^0,f,c
 14131  014BBA  323D               	rrcf	(btemp+10)^0,f,c
 14132  014BBC  323C               	rrcf	(btemp+9)^0,f,c
 14133  014BBE  323B               	rrcf	(btemp+8)^0,f,c
 14134  014BC0                     u5360:
 14135  014BC0  2EE8               	decfsz	wreg,f,c
 14136  014BC2  D7F9               	goto	u5365
 14137  014BC4  663B               	tstfsz	(btemp+8)^0,c
 14138  014BC6  D009               	goto	l6476
 14139                           
 14140                           ;stkvar	_u @ sp[(-10)+0]
 14141  014BC8  0EF6               	movlw	-10
 14142  014BCA  6AE3               	clrf	plusw1,c
 14143  014BCC  0EF7               	movlw	-9
 14144  014BCE  6AE3               	clrf	plusw1,c
 14145  014BD0  0EF8               	movlw	-8
 14146  014BD2  6AE3               	clrf	plusw1,c
 14147  014BD4  0EF9               	movlw	-7
 14148  014BD6  6AE3               	clrf	plusw1,c
 14149  014BD8  D037               	goto	l6480
 14150  014BDA                     l6476:
 14151                           
 14152                           ;stkvar	_u @ sp[(-10)+0]
 14153  014BDA  0EF6               	movlw	-10
 14154  014BDC  006F FF8C  F03B    	movff	plusw1,btemp+8
 14155  014BE2  0EF7               	movlw	-9
 14156  014BE4  006F FF8C  F03C    	movff	plusw1,btemp+9
 14157  014BEA  0EF8               	movlw	-8
 14158  014BEC  006F FF8C  F03D    	movff	plusw1,btemp+10
 14159  014BF2  0EF9               	movlw	-7
 14160  014BF4  006F FF8C  F03E    	movff	plusw1,btemp+11
 14161  014BFA  90D8               	bcf	status,0,c
 14162  014BFC  343B               	rlcf	(btemp+8)^0,w,c
 14163  014BFE  6E37               	movwf	(btemp+4)^0,c
 14164  014C00  343C               	rlcf	(btemp+9)^0,w,c
 14165  014C02  6E38               	movwf	(btemp+5)^0,c
 14166  014C04  343D               	rlcf	(btemp+10)^0,w,c
 14167  014C06  6E39               	movwf	(btemp+6)^0,c
 14168  014C08  343E               	rlcf	(btemp+11)^0,w,c
 14169  014C0A  6E3A               	movwf	(btemp+7)^0,c
 14170  014C0C  5037               	movf	(btemp+4)^0,w,c
 14171  014C0E  1038               	iorwf	(btemp+5)^0,w,c
 14172  014C10  1039               	iorwf	(btemp+6)^0,w,c
 14173  014C12  103A               	iorwf	(btemp+7)^0,w,c
 14174  014C14  B4D8               	btfsc	status,2,c
 14175  014C16  D018               	goto	l6480
 14176  014C18  0E00               	movlw	0
 14177  014C1A  6E3B               	movwf	(btemp+8)^0,c
 14178  014C1C  0E00               	movlw	0
 14179  014C1E  6E3C               	movwf	(btemp+9)^0,c
 14180  014C20  0E80               	movlw	128
 14181  014C22  6E3D               	movwf	(btemp+10)^0,c
 14182  014C24  0EBF               	movlw	191
 14183  014C26  6E3E               	movwf	(btemp+11)^0,c
 14184                           
 14185                           ;stkvar	_u @ sp[(-10)+0]
 14186  014C28  0EF6               	movlw	-10
 14187  014C2A  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 14188  014C30  0EF7               	movlw	-9
 14189  014C32  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 14190  014C38  0EF8               	movlw	-8
 14191  014C3A  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 14192  014C40  0EF9               	movlw	-7
 14193  014C42  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 14194  014C48                     l6480:
 14195                           
 14196                           ;stkvar	_u @ sp[(-10)+0]
 14197  014C48  0EF6               	movlw	-10
 14198  014C4A  006F FF8C  F033    	movff	plusw1,btemp
 14199  014C50  0EF7               	movlw	-9
 14200  014C52  006F FF8C  F034    	movff	plusw1,btemp+1
 14201  014C58  0EF8               	movlw	-8
 14202  014C5A  006F FF8C  F035    	movff	plusw1,btemp+2
 14203  014C60  0EF9               	movlw	-7
 14204  014C62                     L15:
 14205  014C62  006F FF8C  F036    	movff	plusw1,btemp+3
 14206                           
 14207                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14208  014C68  0EF2               	movlw	242
 14209  014C6A  26E1               	addwf	fsr1l,f,c
 14210  014C6C  0EFF               	movlw	255
 14211  014C6E  22E2               	addwfc	fsr1h,f,c
 14212  014C70  0012               	return		;funcret
 14213  014C72                     __end_of_floorf:
 14214                           	opt callstack 0
 14215                           
 14216 ;; *************** function ___fpclassifyf *****************
 14217 ;; Defined at:
 14218 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14219 ;; Parameters:    Size  Location     Type
 14220 ;;  x               4  [STACK] float 
 14221 ;; Auto vars:     Size  Location     Type
 14222 ;;  u               4  [STACK] struct .
 14223 ;;  e               2  [STACK] int 
 14224 ;; Return value:  Size  Location     Type
 14225 ;;                  2  [STACK] int 
 14226 ;; Registers used:
 14227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14237 ;;Total ram usage:        0 bytes
 14238 ;; Hardware stack levels used:    1
 14239 ;; Hardware stack levels required when called:    6
 14240 ;; This function calls:
 14241 ;;		Nothing
 14242 ;; This function is called by:
 14243 ;;		_efgtoa
 14244 ;; This function uses a reentrant model
 14245 ;;
 14246                           
 14247                           	psect	text51
 14248  016486                     __ptext51:
 14249                           	opt callstack 0
 14250  016486                     ___fpclassifyf:
 14251                           	opt callstack 0
 14252                           
 14253                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14254  016486  0E06               	movlw	6
 14255  016488  26E1               	addwf	fsr1l,f,c
 14256  01648A  0E00               	movlw	0
 14257  01648C  22E2               	addwfc	fsr1h,f,c
 14258                           
 14259                           ;incstack = 0
 14260  01648E  0060  F220  F03B   	movff	___fpclassifyf@F463,btemp+8
 14261  016494  0060  F224  F03C   	movff	___fpclassifyf@F463+1,btemp+9
 14262  01649A  0060  F228  F03D   	movff	___fpclassifyf@F463+2,btemp+10
 14263  0164A0  0060  F22C  F03E   	movff	___fpclassifyf@F463+3,btemp+11
 14264                           
 14265                           ;stkvar	_u @ sp[(-6)+0]
 14266  0164A6  0EFA               	movlw	-6
 14267  0164A8  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 14268  0164AE  0EFB               	movlw	-5
 14269  0164B0  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 14270  0164B6  0EFC               	movlw	-4
 14271  0164B8  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 14272  0164BE  0EFD               	movlw	-3
 14273  0164C0  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 14274                           
 14275                           ;stkvar	_x @ sp[(-6)+-4]
 14276  0164C6  0EF6               	movlw	-10
 14277  0164C8  006F FF8C  F03B    	movff	plusw1,btemp+8
 14278  0164CE  0EF7               	movlw	-9
 14279  0164D0  006F FF8C  F03C    	movff	plusw1,btemp+9
 14280  0164D6  0EF8               	movlw	-8
 14281  0164D8  006F FF8C  F03D    	movff	plusw1,btemp+10
 14282  0164DE  0EF9               	movlw	-7
 14283  0164E0  006F FF8C  F03E    	movff	plusw1,btemp+11
 14284                           
 14285                           ;stkvar	_u @ sp[(-6)+0]
 14286  0164E6  0EFA               	movlw	-6
 14287  0164E8  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 14288  0164EE  0EFB               	movlw	-5
 14289  0164F0  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 14290  0164F6  0EFC               	movlw	-4
 14291  0164F8  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 14292  0164FE  0EFD               	movlw	-3
 14293  016500  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 14294                           
 14295                           ;stkvar	_u @ sp[(-6)+0]
 14296  016506  0EFA               	movlw	-6
 14297  016508  006F FF8C  F03B    	movff	plusw1,btemp+8
 14298  01650E  0EFB               	movlw	-5
 14299  016510  006F FF8C  F03C    	movff	plusw1,btemp+9
 14300  016516  0EFC               	movlw	-4
 14301  016518  006F FF8C  F03D    	movff	plusw1,btemp+10
 14302  01651E  0EFD               	movlw	-3
 14303  016520  006F FF8C  F03E    	movff	plusw1,btemp+11
 14304  016526  0E18               	movlw	24
 14305  016528  D005               	goto	u5170
 14306  01652A                     u5175:
 14307  01652A  90D8               	bcf	status,0,c
 14308  01652C  323E               	rrcf	(btemp+11)^0,f,c
 14309  01652E  323D               	rrcf	(btemp+10)^0,f,c
 14310  016530  323C               	rrcf	(btemp+9)^0,f,c
 14311  016532  323B               	rrcf	(btemp+8)^0,f,c
 14312  016534                     u5170:
 14313  016534  2EE8               	decfsz	wreg,f,c
 14314  016536  D7F9               	goto	u5175
 14315  016538  0060  F0EC  F039   	movff	btemp+8,btemp+6
 14316  01653E  0060  F0F0  F03A   	movff	btemp+9,btemp+7
 14317  016544  0EFF               	movlw	255
 14318  016546  1639               	andwf	(btemp+6)^0,f,c
 14319  016548  0E00               	movlw	0
 14320  01654A  163A               	andwf	(btemp+7)^0,f,c
 14321                           
 14322                           ;stkvar	_e @ sp[(-6)+4]
 14323  01654C  0EFE               	movlw	-2
 14324  01654E  0060  F0E7  FFE3   	movff	btemp+6,plusw1
 14325  016554  0EFF               	movlw	-1
 14326  016556  0060  F0EB  FFE3   	movff	btemp+7,plusw1
 14327                           
 14328                           ;stkvar	_e @ sp[(-6)+4]
 14329  01655C  0EFE               	movlw	-2
 14330  01655E  006F FF8C  F033    	movff	plusw1,btemp
 14331  016564  0EFF               	movlw	-1
 14332  016566  50E3               	movf	plusw1,w,c
 14333  016568  1033               	iorwf	btemp^0,w,c
 14334  01656A  A4D8               	btfss	status,2,c
 14335  01656C  D023               	goto	l6418
 14336                           
 14337                           ;stkvar	_u @ sp[(-6)+0]
 14338  01656E  0EFA               	movlw	-6
 14339  016570  006F FF8C  F03B    	movff	plusw1,btemp+8
 14340  016576  0EFB               	movlw	-5
 14341  016578  006F FF8C  F03C    	movff	plusw1,btemp+9
 14342  01657E  0EFC               	movlw	-4
 14343  016580  006F FF8C  F03D    	movff	plusw1,btemp+10
 14344  016586  0EFD               	movlw	-3
 14345  016588  006F FF8C  F03E    	movff	plusw1,btemp+11
 14346  01658E  90D8               	bcf	status,0,c
 14347  016590  343B               	rlcf	(btemp+8)^0,w,c
 14348  016592  6E37               	movwf	(btemp+4)^0,c
 14349  016594  343C               	rlcf	(btemp+9)^0,w,c
 14350  016596  6E38               	movwf	(btemp+5)^0,c
 14351  016598  343D               	rlcf	(btemp+10)^0,w,c
 14352  01659A  6E39               	movwf	(btemp+6)^0,c
 14353  01659C  343E               	rlcf	(btemp+11)^0,w,c
 14354  01659E  6E3A               	movwf	(btemp+7)^0,c
 14355  0165A0  5037               	movf	(btemp+4)^0,w,c
 14356  0165A2  1038               	iorwf	(btemp+5)^0,w,c
 14357  0165A4  1039               	iorwf	(btemp+6)^0,w,c
 14358  0165A6  103A               	iorwf	(btemp+7)^0,w,c
 14359  0165A8  A4D8               	btfss	status,2,c
 14360  0165AA  D002               	goto	l6414
 14361  0165AC  0E02               	movlw	2
 14362  0165AE  D02E               	goto	L16
 14363  0165B0                     l6414:
 14364  0165B0  0E03               	movlw	3
 14365  0165B2  D02C               	goto	L16
 14366  0165B4                     l6418:
 14367                           
 14368                           ;stkvar	_e @ sp[(-6)+4]
 14369  0165B4  0EFE               	movlw	-2
 14370  0165B6  28E3               	incf	plusw1,w,c
 14371  0165B8  E128               	bnz	l6424
 14372  0165BA  0EFF               	movlw	-1
 14373  0165BC  50E3               	movf	plusw1,w,c
 14374  0165BE  A4D8               	btfss	status,2,c
 14375  0165C0  D024               	goto	l6424
 14376                           
 14377                           ;stkvar	_u @ sp[(-6)+0]
 14378  0165C2  0EFA               	movlw	-6
 14379  0165C4  006F FF8C  F03B    	movff	plusw1,btemp+8
 14380  0165CA  0EFB               	movlw	-5
 14381  0165CC  006F FF8C  F03C    	movff	plusw1,btemp+9
 14382  0165D2  0EFC               	movlw	-4
 14383  0165D4  006F FF8C  F03D    	movff	plusw1,btemp+10
 14384  0165DA  0EFD               	movlw	-3
 14385  0165DC  006F FF8C  F03E    	movff	plusw1,btemp+11
 14386  0165E2  0E09               	movlw	9
 14387  0165E4                     u5215:
 14388  0165E4  90D8               	bcf	status,0,c
 14389  0165E6  363B               	rlcf	(btemp+8)^0,f,c
 14390  0165E8  363C               	rlcf	(btemp+9)^0,f,c
 14391  0165EA  363D               	rlcf	(btemp+10)^0,f,c
 14392  0165EC  363E               	rlcf	(btemp+11)^0,f,c
 14393  0165EE  2EE8               	decfsz	wreg,f,c
 14394  0165F0  D7F9               	goto	u5215
 14395  0165F2  503B               	movf	(btemp+8)^0,w,c
 14396  0165F4  103C               	iorwf	(btemp+9)^0,w,c
 14397  0165F6  103D               	iorwf	(btemp+10)^0,w,c
 14398  0165F8  103E               	iorwf	(btemp+11)^0,w,c
 14399  0165FA  A4D8               	btfss	status,2,c
 14400  0165FC  D002               	goto	u5220
 14401  0165FE  0E01               	movlw	1
 14402  016600  D001               	goto	u5230
 14403  016602                     u5220:
 14404  016602  0E00               	movlw	0
 14405  016604                     u5230:
 14406  016604  6E33               	movwf	btemp^0,c
 14407  016606  6A34               	clrf	(btemp+1)^0,c
 14408  016608  D004               	goto	l2706
 14409  01660A                     l6424:
 14410  01660A  0E04               	movlw	4
 14411  01660C                     L16:
 14412  01660C  6E33               	movwf	btemp^0,c
 14413  01660E  0E00               	movlw	0
 14414  016610  6E34               	movwf	(btemp+1)^0,c
 14415  016612                     l2706:
 14416                           
 14417                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14418  016612  0EF6               	movlw	246
 14419  016614  26E1               	addwf	fsr1l,f,c
 14420  016616  0EFF               	movlw	255
 14421  016618  22E2               	addwfc	fsr1h,f,c
 14422  01661A  0012               	return		;funcret
 14423  01661C                     __end_of___fpclassifyf:
 14424                           	opt callstack 0
 14425                           
 14426 ;; *************** function ___fltol *****************
 14427 ;; Defined at:
 14428 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14429 ;; Parameters:    Size  Location     Type
 14430 ;;  f1              4  [STACK] int 
 14431 ;; Auto vars:     Size  Location     Type
 14432 ;;  exp1            1  [STACK] unsigned char 
 14433 ;;  sign1           1  [STACK] unsigned char 
 14434 ;; Return value:  Size  Location     Type
 14435 ;;                  4  [STACK] long 
 14436 ;; Registers used:
 14437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14438 ;; Tracked objects:
 14439 ;;		On entry : 0/0
 14440 ;;		On exit  : 0/0
 14441 ;;		Unchanged: 0/0
 14442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14447 ;;Total ram usage:        0 bytes
 14448 ;; Hardware stack levels used:    1
 14449 ;; Hardware stack levels required when called:    6
 14450 ;; This function calls:
 14451 ;;		Nothing
 14452 ;; This function is called by:
 14453 ;;		_efgtoa
 14454 ;; This function uses a reentrant model
 14455 ;;
 14456                           
 14457                           	psect	text52
 14458  01679C                     __ptext52:
 14459                           	opt callstack 0
 14460  01679C                     ___fltol:
 14461                           	opt callstack 0
 14462                           
 14463                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14464  01679C  52E6               	movf	postinc1,f,c
 14465  01679E  52E6               	movf	postinc1,f,c
 14466                           
 14467                           ;stkvar	_f1 @ sp[(-2)+-4]
 14468                           
 14469                           ;incstack = 0
 14470  0167A0  0EFA               	movlw	-6
 14471  0167A2  006F FF8C  F03B    	movff	plusw1,btemp+8
 14472  0167A8  0EFB               	movlw	-5
 14473  0167AA  006F FF8C  F03C    	movff	plusw1,btemp+9
 14474  0167B0  0EFC               	movlw	-4
 14475  0167B2  006F FF8C  F03D    	movff	plusw1,btemp+10
 14476  0167B8  0EFD               	movlw	-3
 14477  0167BA  006F FF8C  F03E    	movff	plusw1,btemp+11
 14478  0167C0  0E18               	movlw	24
 14479  0167C2  D005               	goto	u6380
 14480  0167C4                     u6385:
 14481  0167C4  90D8               	bcf	status,0,c
 14482  0167C6  323E               	rrcf	(btemp+11)^0,f,c
 14483  0167C8  323D               	rrcf	(btemp+10)^0,f,c
 14484  0167CA  323C               	rrcf	(btemp+9)^0,f,c
 14485  0167CC  323B               	rrcf	(btemp+8)^0,f,c
 14486  0167CE                     u6380:
 14487  0167CE  2EE8               	decfsz	wreg,f,c
 14488  0167D0  D7F9               	goto	u6385
 14489                           
 14490                           ;stkvar	_exp1 @ sp[(-2)+0]
 14491  0167D2  0EFE               	movlw	-2
 14492  0167D4  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 14493  0167DA  0EFE               	movlw	-2
 14494  0167DC  50E3               	movf	plusw1,w,c
 14495  0167DE  A4D8               	btfss	status,2,c
 14496  0167E0  D006               	goto	l7044
 14497  0167E2                     u6390:
 14498  0167E2  0E00               	movlw	0
 14499  0167E4  6E33               	movwf	btemp^0,c
 14500  0167E6  6A34               	clrf	(btemp+1)^0,c
 14501  0167E8  6A35               	clrf	(btemp+2)^0,c
 14502  0167EA  6A36               	clrf	(btemp+3)^0,c
 14503  0167EC  D08B               	goto	l2322
 14504  0167EE                     l7044:
 14505                           
 14506                           ;stkvar	_f1 @ sp[(-2)+-4]
 14507  0167EE  0EFA               	movlw	-6
 14508  0167F0  006F FF8C  F03B    	movff	plusw1,btemp+8
 14509  0167F6  0EFB               	movlw	-5
 14510  0167F8  006F FF8C  F03C    	movff	plusw1,btemp+9
 14511  0167FE  0EFC               	movlw	-4
 14512  016800  006F FF8C  F03D    	movff	plusw1,btemp+10
 14513  016806  0EFD               	movlw	-3
 14514  016808  006F FF8C  F03E    	movff	plusw1,btemp+11
 14515  01680E  0E20               	movlw	32
 14516  016810  D005               	goto	u6400
 14517  016812                     u6405:
 14518  016812  90D8               	bcf	status,0,c
 14519  016814  323E               	rrcf	(btemp+11)^0,f,c
 14520  016816  323D               	rrcf	(btemp+10)^0,f,c
 14521  016818  323C               	rrcf	(btemp+9)^0,f,c
 14522  01681A  323B               	rrcf	(btemp+8)^0,f,c
 14523  01681C                     u6400:
 14524  01681C  2EE8               	decfsz	wreg,f,c
 14525  01681E  D7F9               	goto	u6405
 14526                           
 14527                           ;stkvar	_sign1 @ sp[(-2)+1]
 14528  016820  0EFF               	movlw	-1
 14529  016822  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 14530                           
 14531                           ;stkvar	_f1 @ sp[(-2)+-4]
 14532  016828  0EFC               	movlw	-4
 14533  01682A  8EE3               	bsf	plusw1,7,c
 14534                           
 14535                           ;stkvar	_f1 @ sp[(-2)+-4]
 14536  01682C  50E1               	movf	fsr1l,w,c
 14537  01682E  0FFA               	addlw	-6
 14538  016830  6ED9               	movwf	fsr2l,c
 14539  016832  50E2               	movf	fsr1h,w,c
 14540  016834  6EDA               	movwf	fsr2h,c
 14541  016836  0EFF               	movlw	255
 14542  016838  22DA               	addwfc	fsr2h,f,c
 14543  01683A  0EFF               	movlw	255
 14544  01683C  16DE               	andwf	postinc2,f,c
 14545  01683E  0EFF               	movlw	255
 14546  016840  16DE               	andwf	postinc2,f,c
 14547  016842  0EFF               	movlw	255
 14548  016844  16DE               	andwf	postinc2,f,c
 14549  016846  0E00               	movlw	0
 14550  016848  16DE               	andwf	postinc2,f,c
 14551                           
 14552                           ;stkvar	_exp1 @ sp[(-2)+0]
 14553  01684A  0EFE               	movlw	-2
 14554  01684C  006F FF8C  F033    	movff	plusw1,btemp
 14555  016852  0E96               	movlw	150
 14556  016854  5E33               	subwf	btemp^0,f,c
 14557  016856  0EFE               	movlw	-2
 14558  016858  0060  F0CF  FFE3   	movff	btemp,plusw1
 14559                           
 14560                           ;stkvar	_exp1 @ sp[(-2)+0]
 14561  01685E  0EFE               	movlw	-2
 14562  016860  AEE3               	btfss	plusw1,7,c
 14563  016862  D014               	goto	l7062
 14564                           
 14565                           ;stkvar	_exp1 @ sp[(-2)+0]
 14566  016864  0EFE               	movlw	-2
 14567  016866  50E3               	movf	plusw1,w,c
 14568  016868  0A80               	xorlw	128
 14569  01686A  0F97               	addlw	151
 14570  01686C  A0D8               	btfss	status,0,c
 14571  01686E  D7B9               	goto	u6390
 14572  016870                     l7060:
 14573                           
 14574                           ;stkvar	_f1 @ sp[(-2)+-4]
 14575  016870  90D8               	bcf	status,0,c
 14576  016872  0EFD               	movlw	-3
 14577  016874  32E3               	rrcf	plusw1,f,c
 14578  016876  0EFC               	movlw	-4
 14579  016878  32E3               	rrcf	plusw1,f,c
 14580  01687A  0EFB               	movlw	-5
 14581  01687C  32E3               	rrcf	plusw1,f,c
 14582  01687E  0EFA               	movlw	-6
 14583  016880  32E3               	rrcf	plusw1,f,c
 14584                           
 14585                           ;stkvar	_exp1 @ sp[(-2)+0]
 14586  016882  0EFE               	movlw	-2
 14587  016884  2AE3               	incf	plusw1,f,c
 14588  016886  B4D8               	btfsc	status,2,c
 14589  016888  D018               	goto	u6450
 14590  01688A  D7F2               	goto	l7060
 14591  01688C                     l7062:
 14592                           
 14593                           ;stkvar	_exp1 @ sp[(-2)+0]
 14594  01688C  0EFE               	movlw	-2
 14595  01688E  006F FF8C  F033    	movff	plusw1,btemp
 14596  016894  0E1F               	movlw	31
 14597  016896  6433               	cpfsgt	btemp^0,c
 14598  016898  D00C               	goto	l7070
 14599  01689A  D7A3               	goto	u6390
 14600  01689C                     l7068:
 14601                           
 14602                           ;stkvar	_f1 @ sp[(-2)+-4]
 14603  01689C  90D8               	bcf	status,0,c
 14604  01689E  0EFA               	movlw	-6
 14605  0168A0  36E3               	rlcf	plusw1,f,c
 14606  0168A2  0EFB               	movlw	-5
 14607  0168A4  36E3               	rlcf	plusw1,f,c
 14608  0168A6  0EFC               	movlw	-4
 14609  0168A8  36E3               	rlcf	plusw1,f,c
 14610  0168AA  0EFD               	movlw	-3
 14611  0168AC  36E3               	rlcf	plusw1,f,c
 14612                           
 14613                           ;stkvar	_exp1 @ sp[(-2)+0]
 14614  0168AE  0EFE               	movlw	-2
 14615  0168B0  06E3               	decf	plusw1,f,c
 14616  0168B2                     l7070:
 14617                           
 14618                           ;stkvar	_exp1 @ sp[(-2)+0]
 14619  0168B2  0EFE               	movlw	-2
 14620  0168B4  50E3               	movf	plusw1,w,c
 14621  0168B6  A4D8               	btfss	status,2,c
 14622  0168B8  D7F1               	goto	l7068
 14623  0168BA                     u6450:
 14624                           
 14625                           ;stkvar	_sign1 @ sp[(-2)+1]
 14626  0168BA  0EFF               	movlw	-1
 14627  0168BC  50E3               	movf	plusw1,w,c
 14628  0168BE  B4D8               	btfsc	status,2,c
 14629  0168C0  D011               	goto	u6470
 14630                           
 14631                           ;stkvar	_f1 @ sp[(-2)+-4]
 14632                           ;stkvar	_f1 @ sp[(-2)+-4]
 14633  0168C2  0EFA               	movlw	-6
 14634  0168C4  6CE3               	negf	plusw1,c
 14635  0168C6  0EFB               	movlw	-5
 14636  0168C8  1EE3               	comf	plusw1,f,c
 14637  0168CA  0EFC               	movlw	-4
 14638  0168CC  1EE3               	comf	plusw1,f,c
 14639  0168CE  0EFD               	movlw	-3
 14640  0168D0  1EE3               	comf	plusw1,f,c
 14641  0168D2  E308               	bnc	u6470
 14642  0168D4  0EFB               	movlw	-5
 14643  0168D6  2AE3               	incf	plusw1,f,c
 14644  0168D8  E305               	bnc	u6470
 14645  0168DA  0EFC               	movlw	-4
 14646  0168DC  2AE3               	incf	plusw1,f,c
 14647  0168DE  E302               	bnc	u6470
 14648  0168E0  0EFD               	movlw	-3
 14649  0168E2  2AE3               	incf	plusw1,f,c
 14650  0168E4                     u6470:
 14651                           
 14652                           ;stkvar	_f1 @ sp[(-2)+-4]
 14653  0168E4  0EFA               	movlw	-6
 14654  0168E6  006F FF8C  F033    	movff	plusw1,btemp
 14655  0168EC  0EFB               	movlw	-5
 14656  0168EE  006F FF8C  F034    	movff	plusw1,btemp+1
 14657  0168F4  0EFC               	movlw	-4
 14658  0168F6  006F FF8C  F035    	movff	plusw1,btemp+2
 14659  0168FC  0EFD               	movlw	-3
 14660  0168FE  006F FF8C  F036    	movff	plusw1,btemp+3
 14661  016904                     l2322:
 14662                           
 14663                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14664  016904  0EFA               	movlw	250
 14665  016906  26E1               	addwf	fsr1l,f,c
 14666  016908  0EFF               	movlw	255
 14667  01690A  22E2               	addwfc	fsr1h,f,c
 14668  01690C  0012               	return		;funcret
 14669  01690E                     __end_of___fltol:
 14670                           	opt callstack 0
 14671                           
 14672 ;; *************** function ___flsub *****************
 14673 ;; Defined at:
 14674 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14675 ;; Parameters:    Size  Location     Type
 14676 ;;  b               4  [STACK] long 
 14677 ;;  a               4  [STACK] long 
 14678 ;; Auto vars:     Size  Location     Type
 14679 ;;		None
 14680 ;; Return value:  Size  Location     Type
 14681 ;;                  4  [STACK] long 
 14682 ;; Registers used:
 14683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14684 ;; Tracked objects:
 14685 ;;		On entry : 0/39
 14686 ;;		On exit  : 0/0
 14687 ;;		Unchanged: 0/0
 14688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14693 ;;Total ram usage:        0 bytes
 14694 ;; Hardware stack levels used:    1
 14695 ;; Hardware stack levels required when called:    7
 14696 ;; This function calls:
 14697 ;;		___fladd
 14698 ;; This function is called by:
 14699 ;;		_conv_raw_result
 14700 ;;		_lp_filter
 14701 ;;		_efgtoa
 14702 ;; This function uses a reentrant model
 14703 ;;
 14704                           
 14705                           	psect	text53
 14706  018414                     __ptext53:
 14707                           	opt callstack 0
 14708  018414                     ___flsub:
 14709                           	opt callstack 16
 14710                           
 14711                           ;stkvar	_a @ sp[(0)+-8]
 14712                           
 14713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14714                           ;incstack = 0
 14715  018414  0EFB               	movlw	-5
 14716  018416  7EE3               	btg	plusw1,7,c
 14717                           
 14718                           ;stkvar	_a @ sp[(0)+-8]
 14719  018418  0EF8               	movlw	-8
 14720  01841A  006F FF8F FFE6     	movff	plusw1,postinc1
 14721  018420  006F FF8F FFE6     	movff	plusw1,postinc1
 14722  018426  006F FF8F FFE6     	movff	plusw1,postinc1
 14723  01842C  006F FF8F FFE6     	movff	plusw1,postinc1
 14724                           
 14725                           ;stkvar	_b @ sp[(-4)+-4]
 14726  018432  0EF8               	movlw	-8
 14727  018434  006F FF8F FFE6     	movff	plusw1,postinc1
 14728  01843A  006F FF8F FFE6     	movff	plusw1,postinc1
 14729  018440  006F FF8F FFE6     	movff	plusw1,postinc1
 14730  018446  006F FF8F FFE6     	movff	plusw1,postinc1
 14731  01844C  EC0D  F095         	call	___fladd	;wreg free
 14732                           
 14733                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14734  018450  0EF8               	movlw	248
 14735  018452  26E1               	addwf	fsr1l,f,c
 14736  018454  0EFF               	movlw	255
 14737  018456  22E2               	addwfc	fsr1h,f,c
 14738  018458  0012               	return		;funcret
 14739  01845A                     __end_of___flsub:
 14740                           	opt callstack 0
 14741                           
 14742 ;; *************** function ___fladd *****************
 14743 ;; Defined at:
 14744 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14745 ;; Parameters:    Size  Location     Type
 14746 ;;  b               4  [STACK] long 
 14747 ;;  a               4  [STACK] long 
 14748 ;; Auto vars:     Size  Location     Type
 14749 ;;  grs             1  [STACK] unsigned char 
 14750 ;;  bexp            1  [STACK] unsigned char 
 14751 ;;  aexp            1  [STACK] unsigned char 
 14752 ;;  signs           1  [STACK] unsigned char 
 14753 ;; Return value:  Size  Location     Type
 14754 ;;                  4  [STACK] unsigned char 
 14755 ;; Registers used:
 14756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14757 ;; Tracked objects:
 14758 ;;		On entry : 0/39
 14759 ;;		On exit  : 0/0
 14760 ;;		Unchanged: 0/0
 14761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14766 ;;Total ram usage:        0 bytes
 14767 ;; Hardware stack levels used:    1
 14768 ;; Hardware stack levels required when called:    6
 14769 ;; This function calls:
 14770 ;;		Nothing
 14771 ;; This function is called by:
 14772 ;;		_lp_filter
 14773 ;;		_efgtoa
 14774 ;;		___flsub
 14775 ;; This function uses a reentrant model
 14776 ;;
 14777                           
 14778                           	psect	text54
 14779  012A1A                     __ptext54:
 14780                           	opt callstack 0
 14781  012A1A                     ___fladd:
 14782                           	opt callstack 0
 14783                           
 14784                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14785  012A1A  52E6               	movf	postinc1,f,c
 14786  012A1C  52E6               	movf	postinc1,f,c
 14787  012A1E  52E6               	movf	postinc1,f,c
 14788  012A20  52E6               	movf	postinc1,f,c
 14789                           
 14790                           ;stkvar	_b @ sp[(-4)+-4]
 14791                           
 14792                           ;incstack = 0
 14793  012A22  0EFB               	movlw	251
 14794  012A24  24E1               	addwf	fsr1l,w,c
 14795  012A26  6ED9               	movwf	fsr2l,c
 14796  012A28  0EFF               	movlw	255
 14797  012A2A  20E2               	addwfc	fsr1h,w,c
 14798  012A2C  6EDA               	movwf	fsr2h,c
 14799  012A2E  50DF               	movf	indf2,w,c
 14800  012A30  6E3E               	movwf	(btemp+11)^0,c
 14801  012A32  0E80               	movlw	128
 14802  012A34  163E               	andwf	(btemp+11)^0,f,c
 14803                           
 14804                           ;stkvar	_signs @ sp[(-4)+3]
 14805  012A36  0EFF               	movlw	-1
 14806  012A38  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 14807                           
 14808                           ;stkvar	_b @ sp[(-4)+-4]
 14809  012A3E  0EFB               	movlw	251
 14810  012A40  24E1               	addwf	fsr1l,w,c
 14811  012A42  6ED9               	movwf	fsr2l,c
 14812  012A44  0EFF               	movlw	255
 14813  012A46  20E2               	addwfc	fsr1h,w,c
 14814  012A48  6EDA               	movwf	fsr2h,c
 14815  012A4A  50DF               	movf	indf2,w,c
 14816  012A4C  6E3E               	movwf	(btemp+11)^0,c
 14817  012A4E  90D8               	bcf	status,0,c
 14818  012A50  343E               	rlcf	(btemp+11)^0,w,c
 14819  012A52  6E3D               	movwf	(btemp+10)^0,c
 14820                           
 14821                           ;stkvar	_bexp @ sp[(-4)+1]
 14822  012A54  0EFD               	movlw	-3
 14823  012A56  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 14824                           
 14825                           ;stkvar	_b @ sp[(-4)+-4]
 14826  012A5C  0EFA               	movlw	250
 14827  012A5E  24E1               	addwf	fsr1l,w,c
 14828  012A60  6ED9               	movwf	fsr2l,c
 14829  012A62  0EFF               	movlw	255
 14830  012A64  20E2               	addwfc	fsr1h,w,c
 14831  012A66  6EDA               	movwf	fsr2h,c
 14832  012A68  AEDF               	btfss	indf2,7,c
 14833  012A6A  D002               	goto	l6158
 14834                           
 14835                           ;stkvar	_bexp @ sp[(-4)+1]
 14836  012A6C  0EFD               	movlw	-3
 14837  012A6E  80E3               	bsf	plusw1,0,c
 14838  012A70                     l6158:
 14839                           
 14840                           ;stkvar	_bexp @ sp[(-4)+1]
 14841  012A70  0EFD               	movlw	-3
 14842  012A72  50E3               	movf	plusw1,w,c
 14843  012A74  B4D8               	btfsc	status,2,c
 14844  012A76  D027               	goto	l6168
 14845                           
 14846                           ;stkvar	_bexp @ sp[(-4)+1]
 14847  012A78  0EFD               	movlw	-3
 14848  012A7A  28E3               	incf	plusw1,w,c
 14849  012A7C  A4D8               	btfss	status,2,c
 14850  012A7E  D018               	goto	l6164
 14851  012A80  0E00               	movlw	0
 14852  012A82  6E3B               	movwf	(btemp+8)^0,c
 14853  012A84  0E00               	movlw	0
 14854  012A86  6E3C               	movwf	(btemp+9)^0,c
 14855  012A88  0E00               	movlw	0
 14856  012A8A  6E3D               	movwf	(btemp+10)^0,c
 14857  012A8C  0E00               	movlw	0
 14858  012A8E  6E3E               	movwf	(btemp+11)^0,c
 14859                           
 14860                           ;stkvar	_b @ sp[(-4)+-4]
 14861  012A90  0EF8               	movlw	-8
 14862  012A92  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 14863  012A98  0EF9               	movlw	-7
 14864  012A9A  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 14865  012AA0  0EFA               	movlw	-6
 14866  012AA2  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 14867  012AA8  0EFB               	movlw	-5
 14868  012AAA  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 14869  012AB0                     l6164:
 14870                           
 14871                           ;stkvar	_b @ sp[(-4)+-4]
 14872  012AB0  0EFA               	movlw	-6
 14873  012AB2  8EE3               	bsf	plusw1,7,c
 14874                           
 14875                           ;stkvar	_b @ sp[(-4)+-4]
 14876  012AB4  0EFB               	movlw	251
 14877  012AB6  24E1               	addwf	fsr1l,w,c
 14878  012AB8  6ED9               	movwf	fsr2l,c
 14879  012ABA  0EFF               	movlw	255
 14880  012ABC  20E2               	addwfc	fsr1h,w,c
 14881  012ABE  6EDA               	movwf	fsr2h,c
 14882  012AC0  0E00               	movlw	0
 14883  012AC2  6EDF               	movwf	indf2,c
 14884  012AC4  D018               	goto	l6170
 14885  012AC6                     l6168:
 14886  012AC6  0E00               	movlw	0
 14887  012AC8  6E3B               	movwf	(btemp+8)^0,c
 14888  012ACA  0E00               	movlw	0
 14889  012ACC  6E3C               	movwf	(btemp+9)^0,c
 14890  012ACE  0E00               	movlw	0
 14891  012AD0  6E3D               	movwf	(btemp+10)^0,c
 14892  012AD2  0E00               	movlw	0
 14893  012AD4  6E3E               	movwf	(btemp+11)^0,c
 14894                           
 14895                           ;stkvar	_b @ sp[(-4)+-4]
 14896  012AD6  0EF8               	movlw	-8
 14897  012AD8  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 14898  012ADE  0EF9               	movlw	-7
 14899  012AE0  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 14900  012AE6  0EFA               	movlw	-6
 14901  012AE8  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 14902  012AEE  0EFB               	movlw	-5
 14903  012AF0  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 14904  012AF6                     l6170:
 14905                           
 14906                           ;stkvar	_a @ sp[(-4)+-8]
 14907  012AF6  0EF7               	movlw	247
 14908  012AF8  24E1               	addwf	fsr1l,w,c
 14909  012AFA  6ED9               	movwf	fsr2l,c
 14910  012AFC  0EFF               	movlw	255
 14911  012AFE  20E2               	addwfc	fsr1h,w,c
 14912  012B00  6EDA               	movwf	fsr2h,c
 14913  012B02  50DF               	movf	indf2,w,c
 14914  012B04  6E3E               	movwf	(btemp+11)^0,c
 14915  012B06  0E80               	movlw	128
 14916  012B08  163E               	andwf	(btemp+11)^0,f,c
 14917                           
 14918                           ;stkvar	_aexp @ sp[(-4)+2]
 14919  012B0A  0EFE               	movlw	-2
 14920  012B0C  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 14921                           
 14922                           ;stkvar	_signs @ sp[(-4)+3]
 14923                           ;stkvar	_aexp @ sp[(-4)+2]
 14924  012B12  50E1               	movf	fsr1l,w,c
 14925  012B14  0FFE               	addlw	-2
 14926  012B16  6ED9               	movwf	fsr2l,c
 14927  012B18  50E2               	movf	fsr1h,w,c
 14928  012B1A  6EDA               	movwf	fsr2h,c
 14929  012B1C  0EFF               	movlw	255
 14930  012B1E  22DA               	addwfc	fsr2h,f,c
 14931  012B20  0EFF               	movlw	-1
 14932  012B22  50E3               	movf	plusw1,w,c
 14933  012B24  18DE               	xorwf	postinc2,w,c
 14934  012B26  B4D8               	btfsc	status,2,c
 14935  012B28  D002               	goto	l6176
 14936                           
 14937                           ;stkvar	_signs @ sp[(-4)+3]
 14938  012B2A  0EFF               	movlw	-1
 14939  012B2C  8CE3               	bsf	plusw1,6,c
 14940  012B2E                     l6176:
 14941                           
 14942                           ;stkvar	_a @ sp[(-4)+-8]
 14943  012B2E  0EF7               	movlw	247
 14944  012B30  24E1               	addwf	fsr1l,w,c
 14945  012B32  6ED9               	movwf	fsr2l,c
 14946  012B34  0EFF               	movlw	255
 14947  012B36  20E2               	addwfc	fsr1h,w,c
 14948  012B38  6EDA               	movwf	fsr2h,c
 14949  012B3A  50DF               	movf	indf2,w,c
 14950  012B3C  6E3E               	movwf	(btemp+11)^0,c
 14951  012B3E  90D8               	bcf	status,0,c
 14952  012B40  343E               	rlcf	(btemp+11)^0,w,c
 14953  012B42  6E3D               	movwf	(btemp+10)^0,c
 14954                           
 14955                           ;stkvar	_aexp @ sp[(-4)+2]
 14956  012B44  0EFE               	movlw	-2
 14957  012B46  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 14958                           
 14959                           ;stkvar	_a @ sp[(-4)+-8]
 14960  012B4C  0EF6               	movlw	246
 14961  012B4E  24E1               	addwf	fsr1l,w,c
 14962  012B50  6ED9               	movwf	fsr2l,c
 14963  012B52  0EFF               	movlw	255
 14964  012B54  20E2               	addwfc	fsr1h,w,c
 14965  012B56  6EDA               	movwf	fsr2h,c
 14966  012B58  AEDF               	btfss	indf2,7,c
 14967  012B5A  D002               	goto	l6182
 14968                           
 14969                           ;stkvar	_aexp @ sp[(-4)+2]
 14970  012B5C  0EFE               	movlw	-2
 14971  012B5E  80E3               	bsf	plusw1,0,c
 14972  012B60                     l6182:
 14973                           
 14974                           ;stkvar	_aexp @ sp[(-4)+2]
 14975  012B60  0EFE               	movlw	-2
 14976  012B62  50E3               	movf	plusw1,w,c
 14977  012B64  B4D8               	btfsc	status,2,c
 14978  012B66  D027               	goto	l6192
 14979                           
 14980                           ;stkvar	_aexp @ sp[(-4)+2]
 14981  012B68  0EFE               	movlw	-2
 14982  012B6A  28E3               	incf	plusw1,w,c
 14983  012B6C  A4D8               	btfss	status,2,c
 14984  012B6E  D018               	goto	l6188
 14985  012B70  0E00               	movlw	0
 14986  012B72  6E3B               	movwf	(btemp+8)^0,c
 14987  012B74  0E00               	movlw	0
 14988  012B76  6E3C               	movwf	(btemp+9)^0,c
 14989  012B78  0E00               	movlw	0
 14990  012B7A  6E3D               	movwf	(btemp+10)^0,c
 14991  012B7C  0E00               	movlw	0
 14992  012B7E  6E3E               	movwf	(btemp+11)^0,c
 14993                           
 14994                           ;stkvar	_a @ sp[(-4)+-8]
 14995  012B80  0EF4               	movlw	-12
 14996  012B82  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 14997  012B88  0EF5               	movlw	-11
 14998  012B8A  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 14999  012B90  0EF6               	movlw	-10
 15000  012B92  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 15001  012B98  0EF7               	movlw	-9
 15002  012B9A  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 15003  012BA0                     l6188:
 15004                           
 15005                           ;stkvar	_a @ sp[(-4)+-8]
 15006  012BA0  0EF6               	movlw	-10
 15007  012BA2  8EE3               	bsf	plusw1,7,c
 15008                           
 15009                           ;stkvar	_a @ sp[(-4)+-8]
 15010  012BA4  0EF7               	movlw	247
 15011  012BA6  24E1               	addwf	fsr1l,w,c
 15012  012BA8  6ED9               	movwf	fsr2l,c
 15013  012BAA  0EFF               	movlw	255
 15014  012BAC  20E2               	addwfc	fsr1h,w,c
 15015  012BAE  6EDA               	movwf	fsr2h,c
 15016  012BB0  0E00               	movlw	0
 15017  012BB2  6EDF               	movwf	indf2,c
 15018  012BB4  D018               	goto	l6194
 15019  012BB6                     l6192:
 15020  012BB6  0E00               	movlw	0
 15021  012BB8  6E3B               	movwf	(btemp+8)^0,c
 15022  012BBA  0E00               	movlw	0
 15023  012BBC  6E3C               	movwf	(btemp+9)^0,c
 15024  012BBE  0E00               	movlw	0
 15025  012BC0  6E3D               	movwf	(btemp+10)^0,c
 15026  012BC2  0E00               	movlw	0
 15027  012BC4  6E3E               	movwf	(btemp+11)^0,c
 15028                           
 15029                           ;stkvar	_a @ sp[(-4)+-8]
 15030  012BC6  0EF4               	movlw	-12
 15031  012BC8  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 15032  012BCE  0EF5               	movlw	-11
 15033  012BD0  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 15034  012BD6  0EF6               	movlw	-10
 15035  012BD8  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 15036  012BDE  0EF7               	movlw	-9
 15037  012BE0  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 15038  012BE6                     l6194:
 15039                           
 15040                           ;stkvar	_bexp @ sp[(-4)+1]
 15041                           ;stkvar	_aexp @ sp[(-4)+2]
 15042  012BE6  50E1               	movf	fsr1l,w,c
 15043  012BE8  0FFE               	addlw	-2
 15044  012BEA  6ED9               	movwf	fsr2l,c
 15045  012BEC  50E2               	movf	fsr1h,w,c
 15046  012BEE  6EDA               	movwf	fsr2h,c
 15047  012BF0  0EFF               	movlw	255
 15048  012BF2  22DA               	addwfc	fsr2h,f,c
 15049  012BF4  0EFD               	movlw	-3
 15050  012BF6  50E3               	movf	plusw1,w,c
 15051  012BF8  5CDE               	subwf	postinc2,w,c
 15052  012BFA  B0D8               	btfsc	status,0,c
 15053  012BFC  D0A4               	goto	l6230
 15054                           
 15055                           ;stkvar	_signs @ sp[(-4)+3]
 15056  012BFE  0EFF               	movlw	-1
 15057  012C00  ACE3               	btfss	plusw1,6,c
 15058  012C02  D002               	goto	l6200
 15059                           
 15060                           ;stkvar	_signs @ sp[(-4)+3]
 15061  012C04  0EFF               	movlw	-1
 15062  012C06  7EE3               	btg	plusw1,7,c
 15063  012C08                     l6200:
 15064                           
 15065                           ;stkvar	_bexp @ sp[(-4)+1]
 15066                           ;stkvar	_grs @ sp[(-4)+0]
 15067  012C08  0EFD               	movlw	-3
 15068  012C0A  006F FF8C  F033    	movff	plusw1,btemp
 15069  012C10  0EFC               	movlw	-4
 15070  012C12  0060  F0CF  FFE3   	movff	btemp,plusw1
 15071                           
 15072                           ;stkvar	_aexp @ sp[(-4)+2]
 15073                           ;stkvar	_bexp @ sp[(-4)+1]
 15074  012C18  0EFE               	movlw	-2
 15075  012C1A  006F FF8C  F033    	movff	plusw1,btemp
 15076  012C20  0EFD               	movlw	-3
 15077  012C22  0060  F0CF  FFE3   	movff	btemp,plusw1
 15078                           
 15079                           ;stkvar	_grs @ sp[(-4)+0]
 15080                           ;stkvar	_aexp @ sp[(-4)+2]
 15081  012C28  0EFC               	movlw	-4
 15082  012C2A  006F FF8C  F033    	movff	plusw1,btemp
 15083  012C30  0EFE               	movlw	-2
 15084  012C32  0060  F0CF  FFE3   	movff	btemp,plusw1
 15085                           
 15086                           ;stkvar	_b @ sp[(-4)+-4]
 15087                           ;stkvar	_grs @ sp[(-4)+0]
 15088  012C38  0EF8               	movlw	-8
 15089  012C3A  006F FF8C  F033    	movff	plusw1,btemp
 15090  012C40  0EFC               	movlw	-4
 15091  012C42  0060  F0CF  FFE3   	movff	btemp,plusw1
 15092                           
 15093                           ;stkvar	_a @ sp[(-4)+-8]
 15094                           ;stkvar	_b @ sp[(-4)+-4]
 15095  012C48  0EF4               	movlw	-12
 15096  012C4A  006F FF8C  F033    	movff	plusw1,btemp
 15097  012C50  0EF8               	movlw	-8
 15098  012C52  0060  F0CF  FFE3   	movff	btemp,plusw1
 15099                           
 15100                           ;stkvar	_grs @ sp[(-4)+0]
 15101                           ;stkvar	_a @ sp[(-4)+-8]
 15102  012C58  0EFC               	movlw	-4
 15103  012C5A  006F FF8C  F033    	movff	plusw1,btemp
 15104  012C60  0EF4               	movlw	-12
 15105  012C62  0060  F0CF  FFE3   	movff	btemp,plusw1
 15106                           
 15107                           ;stkvar	_b @ sp[(-4)+-4]
 15108  012C68  0EF9               	movlw	249
 15109  012C6A  24E1               	addwf	fsr1l,w,c
 15110  012C6C  6ED9               	movwf	fsr2l,c
 15111  012C6E  0EFF               	movlw	255
 15112  012C70  20E2               	addwfc	fsr1h,w,c
 15113  012C72  6EDA               	movwf	fsr2h,c
 15114  012C74  50DF               	movf	indf2,w,c
 15115  012C76  6E3E               	movwf	(btemp+11)^0,c
 15116                           
 15117                           ;stkvar	_grs @ sp[(-4)+0]
 15118  012C78  0EFC               	movlw	-4
 15119  012C7A  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 15120                           
 15121                           ;stkvar	_a @ sp[(-4)+-8]
 15122  012C80  0EF5               	movlw	245
 15123  012C82  24E1               	addwf	fsr1l,w,c
 15124  012C84  6ED9               	movwf	fsr2l,c
 15125  012C86  0EFF               	movlw	255
 15126  012C88  20E2               	addwfc	fsr1h,w,c
 15127  012C8A  6EDA               	movwf	fsr2h,c
 15128                           
 15129                           ;stkvar	_b @ sp[(-4)+-4]
 15130  012C8C  0EF9               	movlw	249
 15131  012C8E  24E1               	addwf	fsr1l,w,c
 15132  012C90  6EE9               	movwf	fsr0l,c
 15133  012C92  0EFF               	movlw	255
 15134  012C94  20E2               	addwfc	fsr1h,w,c
 15135  012C96  6EEA               	movwf	fsr0h,c
 15136  012C98  006F FF7F FFEF     	movff	indf2,indf0
 15137                           
 15138                           ;stkvar	_grs @ sp[(-4)+0]
 15139                           ;stkvar	_a @ sp[(-4)+-8]
 15140  012C9E  0EF5               	movlw	245
 15141  012CA0  24E1               	addwf	fsr1l,w,c
 15142  012CA2  6ED9               	movwf	fsr2l,c
 15143  012CA4  0EFF               	movlw	255
 15144  012CA6  20E2               	addwfc	fsr1h,w,c
 15145  012CA8  6EDA               	movwf	fsr2h,c
 15146  012CAA  0EFC               	movlw	-4
 15147  012CAC  006F FF8F FFDF     	movff	plusw1,indf2
 15148                           
 15149                           ;stkvar	_b @ sp[(-4)+-4]
 15150  012CB2  0EFA               	movlw	250
 15151  012CB4  24E1               	addwf	fsr1l,w,c
 15152  012CB6  6ED9               	movwf	fsr2l,c
 15153  012CB8  0EFF               	movlw	255
 15154  012CBA  20E2               	addwfc	fsr1h,w,c
 15155  012CBC  6EDA               	movwf	fsr2h,c
 15156  012CBE  50DF               	movf	indf2,w,c
 15157  012CC0  6E3E               	movwf	(btemp+11)^0,c
 15158                           
 15159                           ;stkvar	_grs @ sp[(-4)+0]
 15160  012CC2  0EFC               	movlw	-4
 15161  012CC4  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 15162                           
 15163                           ;stkvar	_a @ sp[(-4)+-8]
 15164  012CCA  0EF6               	movlw	246
 15165  012CCC  24E1               	addwf	fsr1l,w,c
 15166  012CCE  6ED9               	movwf	fsr2l,c
 15167  012CD0  0EFF               	movlw	255
 15168  012CD2  20E2               	addwfc	fsr1h,w,c
 15169  012CD4  6EDA               	movwf	fsr2h,c
 15170                           
 15171                           ;stkvar	_b @ sp[(-4)+-4]
 15172  012CD6  0EFA               	movlw	250
 15173  012CD8  24E1               	addwf	fsr1l,w,c
 15174  012CDA  6EE9               	movwf	fsr0l,c
 15175  012CDC  0EFF               	movlw	255
 15176  012CDE  20E2               	addwfc	fsr1h,w,c
 15177  012CE0  6EEA               	movwf	fsr0h,c
 15178  012CE2  006F FF7F FFEF     	movff	indf2,indf0
 15179                           
 15180                           ;stkvar	_grs @ sp[(-4)+0]
 15181                           ;stkvar	_a @ sp[(-4)+-8]
 15182  012CE8  0EF6               	movlw	246
 15183  012CEA  24E1               	addwf	fsr1l,w,c
 15184  012CEC  6ED9               	movwf	fsr2l,c
 15185  012CEE  0EFF               	movlw	255
 15186  012CF0  20E2               	addwfc	fsr1h,w,c
 15187  012CF2  6EDA               	movwf	fsr2h,c
 15188  012CF4  0EFC               	movlw	-4
 15189  012CF6  006F FF8F FFDF     	movff	plusw1,indf2
 15190                           
 15191                           ;stkvar	_b @ sp[(-4)+-4]
 15192  012CFC  0EFB               	movlw	251
 15193  012CFE  24E1               	addwf	fsr1l,w,c
 15194  012D00  6ED9               	movwf	fsr2l,c
 15195  012D02  0EFF               	movlw	255
 15196  012D04  20E2               	addwfc	fsr1h,w,c
 15197  012D06  6EDA               	movwf	fsr2h,c
 15198  012D08  50DF               	movf	indf2,w,c
 15199  012D0A  6E3E               	movwf	(btemp+11)^0,c
 15200                           
 15201                           ;stkvar	_grs @ sp[(-4)+0]
 15202  012D0C  0EFC               	movlw	-4
 15203  012D0E  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 15204                           
 15205                           ;stkvar	_a @ sp[(-4)+-8]
 15206  012D14  0EF7               	movlw	247
 15207  012D16  24E1               	addwf	fsr1l,w,c
 15208  012D18  6ED9               	movwf	fsr2l,c
 15209  012D1A  0EFF               	movlw	255
 15210  012D1C  20E2               	addwfc	fsr1h,w,c
 15211  012D1E  6EDA               	movwf	fsr2h,c
 15212                           
 15213                           ;stkvar	_b @ sp[(-4)+-4]
 15214  012D20  0EFB               	movlw	251
 15215  012D22  24E1               	addwf	fsr1l,w,c
 15216  012D24  6EE9               	movwf	fsr0l,c
 15217  012D26  0EFF               	movlw	255
 15218  012D28  20E2               	addwfc	fsr1h,w,c
 15219  012D2A  6EEA               	movwf	fsr0h,c
 15220  012D2C  006F FF7F FFEF     	movff	indf2,indf0
 15221                           
 15222                           ;stkvar	_grs @ sp[(-4)+0]
 15223                           ;stkvar	_a @ sp[(-4)+-8]
 15224  012D32  0EF7               	movlw	247
 15225  012D34  24E1               	addwf	fsr1l,w,c
 15226  012D36  6ED9               	movwf	fsr2l,c
 15227  012D38  0EFF               	movlw	255
 15228  012D3A  20E2               	addwfc	fsr1h,w,c
 15229  012D3C  6EDA               	movwf	fsr2h,c
 15230  012D3E  0EFC               	movlw	-4
 15231  012D40  006F FF8F FFDF     	movff	plusw1,indf2
 15232  012D46                     l6230:
 15233                           
 15234                           ;stkvar	_grs @ sp[(-4)+0]
 15235  012D46  0EFC               	movlw	-4
 15236  012D48  6AE3               	clrf	plusw1,c
 15237                           
 15238                           ;stkvar	_aexp @ sp[(-4)+2]
 15239  012D4A  0EFE               	movlw	-2
 15240  012D4C  50E3               	movf	plusw1,w,c
 15241  012D4E  6E3D               	movwf	(btemp+10)^0,c
 15242  012D50  6A3E               	clrf	(btemp+11)^0,c
 15243                           
 15244                           ;stkvar	_bexp @ sp[(-4)+1]
 15245  012D52  0EFD               	movlw	-3
 15246  012D54  50E3               	movf	plusw1,w,c
 15247  012D56  5E3D               	subwf	(btemp+10)^0,f,c
 15248  012D58  0E00               	movlw	0
 15249  012D5A  5A3E               	subwfb	(btemp+11)^0,f,c
 15250  012D5C  BE3E               	btfsc	(btemp+11)^0,7,c
 15251  012D5E  D062               	goto	l6254
 15252  012D60  503E               	movf	(btemp+11)^0,w,c
 15253  012D62  E104               	bnz	u4770
 15254  012D64  0E1A               	movlw	26
 15255  012D66  5C3D               	subwf	(btemp+10)^0,w,c
 15256  012D68  A0D8               	btfss	status,0,c
 15257  012D6A  D05C               	goto	l6254
 15258  012D6C                     u4770:
 15259                           
 15260                           ;stkvar	_b @ sp[(-4)+-4]
 15261  012D6C  0EF8               	movlw	-8
 15262  012D6E  50E3               	movf	plusw1,w,c
 15263  012D70  E10A               	bnz	u4781
 15264  012D72  0EF9               	movlw	-7
 15265  012D74  50E3               	movf	plusw1,w,c
 15266  012D76  E107               	bnz	u4781
 15267  012D78  0EFA               	movlw	-6
 15268  012D7A  50E3               	movf	plusw1,w,c
 15269  012D7C  E104               	bnz	u4781
 15270  012D7E  0EFB               	movlw	-5
 15271  012D80  50E3               	movf	plusw1,w,c
 15272  012D82  B4D8               	btfsc	status,2,c
 15273  012D84  D003               	goto	u4780
 15274  012D86                     u4781:
 15275  012D86  6A3E               	clrf	(btemp+11)^0,c
 15276  012D88  2A3E               	incf	(btemp+11)^0,f,c
 15277  012D8A  D001               	goto	u4798
 15278  012D8C                     u4780:
 15279  012D8C  6A3E               	clrf	(btemp+11)^0,c
 15280  012D8E                     u4798:
 15281                           
 15282                           ;stkvar	_grs @ sp[(-4)+0]
 15283  012D8E  0EFC               	movlw	-4
 15284  012D90  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 15285                           
 15286                           ;stkvar	_b @ sp[(-4)+-4]
 15287  012D96  0EF8               	movlw	-8
 15288  012D98  6AE3               	clrf	plusw1,c
 15289  012D9A  0EF9               	movlw	-7
 15290  012D9C  6AE3               	clrf	plusw1,c
 15291  012D9E  0EFA               	movlw	-6
 15292  012DA0  6AE3               	clrf	plusw1,c
 15293  012DA2  0EFB               	movlw	-5
 15294  012DA4  6AE3               	clrf	plusw1,c
 15295                           
 15296                           ;stkvar	_aexp @ sp[(-4)+2]
 15297                           ;stkvar	_bexp @ sp[(-4)+1]
 15298  012DA6  0EFE               	movlw	-2
 15299  012DA8  006F FF8C  F033    	movff	plusw1,btemp
 15300  012DAE  0EFD               	movlw	-3
 15301  012DB0  0060  F0CF  FFE3   	movff	btemp,plusw1
 15302  012DB6  D042               	goto	u4830
 15303  012DB8                     l6240:
 15304                           
 15305                           ;stkvar	_grs @ sp[(-4)+0]
 15306  012DB8  0EFC               	movlw	-4
 15307  012DBA  A0E3               	btfss	plusw1,0,c
 15308  012DBC  D00D               	goto	l6244
 15309                           
 15310                           ;stkvar	_grs @ sp[(-4)+0]
 15311  012DBE  0EFC               	movlw	-4
 15312  012DC0  006F FF8C  F03E    	movff	plusw1,btemp+11
 15313  012DC6  90D8               	bcf	status,0,c
 15314  012DC8  323E               	rrcf	(btemp+11)^0,f,c
 15315  012DCA  0E01               	movlw	1
 15316  012DCC  123E               	iorwf	(btemp+11)^0,f,c
 15317                           
 15318                           ;stkvar	_grs @ sp[(-4)+0]
 15319  012DCE  0EFC               	movlw	-4
 15320  012DD0  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 15321  012DD6  D009               	goto	l6246
 15322  012DD8                     l6244:
 15323                           
 15324                           ;stkvar	_grs @ sp[(-4)+0]
 15325  012DD8  50E1               	movf	fsr1l,w,c
 15326  012DDA  0FFC               	addlw	-4
 15327  012DDC  6ED9               	movwf	fsr2l,c
 15328  012DDE  50E2               	movf	fsr1h,w,c
 15329  012DE0  6EDA               	movwf	fsr2h,c
 15330  012DE2  0EFF               	movlw	255
 15331  012DE4  22DA               	addwfc	fsr2h,f,c
 15332  012DE6  90D8               	bcf	status,0,c
 15333  012DE8  32DF               	rrcf	indf2,f,c
 15334  012DEA                     l6246:
 15335                           
 15336                           ;stkvar	_b @ sp[(-4)+-4]
 15337  012DEA  0EF8               	movlw	-8
 15338  012DEC  A0E3               	btfss	plusw1,0,c
 15339  012DEE  D002               	goto	l6250
 15340                           
 15341                           ;stkvar	_grs @ sp[(-4)+0]
 15342  012DF0  0EFC               	movlw	-4
 15343  012DF2  8EE3               	bsf	plusw1,7,c
 15344  012DF4                     l6250:
 15345  012DF4  0E01               	movlw	1
 15346  012DF6  6E3E               	movwf	(btemp+11)^0,c
 15347                           
 15348                           ;stkvar	_b @ sp[(-4)+-4]
 15349  012DF8  50E1               	movf	fsr1l,w,c
 15350  012DFA  0FF8               	addlw	-8
 15351  012DFC  6ED9               	movwf	fsr2l,c
 15352  012DFE  50E2               	movf	fsr1h,w,c
 15353  012E00  6EDA               	movwf	fsr2h,c
 15354  012E02  0EFF               	movlw	255
 15355  012E04  22DA               	addwfc	fsr2h,f,c
 15356  012E06  283E               	incf	(btemp+11)^0,w,c
 15357  012E08  52DE               	movf	postinc2,f,c
 15358  012E0A  D008               	goto	u4820
 15359  012E0C                     u4825:
 15360  012E0C  52DE               	movf	postinc2,f,c
 15361  012E0E  90D8               	bcf	status,0,c
 15362  012E10  BEDC               	btfsc	preinc2,7,c
 15363  012E12  80D8               	bsf	status,0,c
 15364  012E14  32DD               	rrcf	postdec2,f,c
 15365  012E16  32DD               	rrcf	postdec2,f,c
 15366  012E18  32DD               	rrcf	postdec2,f,c
 15367  012E1A  32DE               	rrcf	postinc2,f,c
 15368  012E1C                     u4820:
 15369  012E1C  2EE8               	decfsz	wreg,f,c
 15370  012E1E  D7F6               	goto	u4825
 15371                           
 15372                           ;stkvar	_bexp @ sp[(-4)+1]
 15373  012E20  0EFD               	movlw	-3
 15374  012E22  2AE3               	incf	plusw1,f,c
 15375  012E24                     l6254:
 15376                           
 15377                           ;stkvar	_aexp @ sp[(-4)+2]
 15378                           ;stkvar	_bexp @ sp[(-4)+1]
 15379  012E24  50E1               	movf	fsr1l,w,c
 15380  012E26  0FFD               	addlw	-3
 15381  012E28  6ED9               	movwf	fsr2l,c
 15382  012E2A  50E2               	movf	fsr1h,w,c
 15383  012E2C  6EDA               	movwf	fsr2h,c
 15384  012E2E  0EFF               	movlw	255
 15385  012E30  22DA               	addwfc	fsr2h,f,c
 15386  012E32  0EFE               	movlw	-2
 15387  012E34  50E3               	movf	plusw1,w,c
 15388  012E36  5CDE               	subwf	postinc2,w,c
 15389  012E38  A0D8               	btfss	status,0,c
 15390  012E3A  D7BE               	goto	l6240
 15391  012E3C                     u4830:
 15392                           
 15393                           ;stkvar	_signs @ sp[(-4)+3]
 15394  012E3C  0EFF               	movlw	-1
 15395  012E3E  BCE3               	btfsc	plusw1,6,c
 15396  012E40  D066               	goto	l6282
 15397                           
 15398                           ;stkvar	_bexp @ sp[(-4)+1]
 15399  012E42  0EFD               	movlw	-3
 15400  012E44  50E3               	movf	plusw1,w,c
 15401  012E46  B4D8               	btfsc	status,2,c
 15402  012E48  D0F2               	goto	u4930
 15403                           
 15404                           ;stkvar	_a @ sp[(-4)+-8]
 15405                           ;stkvar	_b @ sp[(-4)+-4]
 15406  012E4A  0EF8               	movlw	-8
 15407  012E4C  50E3               	movf	plusw1,w,c
 15408  012E4E  6E33               	movwf	btemp^0,c
 15409  012E50  0EF4               	movlw	-12
 15410  012E52  50E3               	movf	plusw1,w,c
 15411  012E54  2633               	addwf	btemp^0,f,c
 15412  012E56  0EF8               	movlw	-8
 15413  012E58  0060  F0CF  FFE3   	movff	btemp,plusw1
 15414  012E5E  0EF9               	movlw	-7
 15415  012E60  50E3               	movf	plusw1,w,c
 15416  012E62  6E33               	movwf	btemp^0,c
 15417  012E64  0EF5               	movlw	-11
 15418  012E66  50E3               	movf	plusw1,w,c
 15419  012E68  2233               	addwfc	btemp^0,f,c
 15420  012E6A  0EF9               	movlw	-7
 15421  012E6C  0060  F0CF  FFE3   	movff	btemp,plusw1
 15422  012E72  0EFA               	movlw	-6
 15423  012E74  50E3               	movf	plusw1,w,c
 15424  012E76  6E33               	movwf	btemp^0,c
 15425  012E78  0EF6               	movlw	-10
 15426  012E7A  50E3               	movf	plusw1,w,c
 15427  012E7C  2233               	addwfc	btemp^0,f,c
 15428  012E7E  0EFA               	movlw	-6
 15429  012E80  0060  F0CF  FFE3   	movff	btemp,plusw1
 15430  012E86  0EFB               	movlw	-5
 15431  012E88  50E3               	movf	plusw1,w,c
 15432  012E8A  6E33               	movwf	btemp^0,c
 15433  012E8C  0EF7               	movlw	-9
 15434  012E8E  50E3               	movf	plusw1,w,c
 15435  012E90  2233               	addwfc	btemp^0,f,c
 15436  012E92  0EFB               	movlw	-5
 15437  012E94  0060  F0CF  FFE3   	movff	btemp,plusw1
 15438                           
 15439                           ;stkvar	_b @ sp[(-4)+-4]
 15440  012E9A  0EFB               	movlw	-5
 15441  012E9C  A0E3               	btfss	plusw1,0,c
 15442  012E9E  D101               	goto	u4970
 15443                           
 15444                           ;stkvar	_grs @ sp[(-4)+0]
 15445  012EA0  0EFC               	movlw	-4
 15446  012EA2  A0E3               	btfss	plusw1,0,c
 15447  012EA4  D00D               	goto	l6272
 15448                           
 15449                           ;stkvar	_grs @ sp[(-4)+0]
 15450  012EA6  0EFC               	movlw	-4
 15451  012EA8  006F FF8C  F03E    	movff	plusw1,btemp+11
 15452  012EAE  90D8               	bcf	status,0,c
 15453  012EB0  323E               	rrcf	(btemp+11)^0,f,c
 15454  012EB2  0E01               	movlw	1
 15455  012EB4  123E               	iorwf	(btemp+11)^0,f,c
 15456                           
 15457                           ;stkvar	_grs @ sp[(-4)+0]
 15458  012EB6  0EFC               	movlw	-4
 15459  012EB8  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 15460  012EBE  D009               	goto	l6274
 15461  012EC0                     l6272:
 15462                           
 15463                           ;stkvar	_grs @ sp[(-4)+0]
 15464  012EC0  50E1               	movf	fsr1l,w,c
 15465  012EC2  0FFC               	addlw	-4
 15466  012EC4  6ED9               	movwf	fsr2l,c
 15467  012EC6  50E2               	movf	fsr1h,w,c
 15468  012EC8  6EDA               	movwf	fsr2h,c
 15469  012ECA  0EFF               	movlw	255
 15470  012ECC  22DA               	addwfc	fsr2h,f,c
 15471  012ECE  90D8               	bcf	status,0,c
 15472  012ED0  32DF               	rrcf	indf2,f,c
 15473  012ED2                     l6274:
 15474                           
 15475                           ;stkvar	_b @ sp[(-4)+-4]
 15476  012ED2  0EF8               	movlw	-8
 15477  012ED4  A0E3               	btfss	plusw1,0,c
 15478  012ED6  D002               	goto	l6278
 15479                           
 15480                           ;stkvar	_grs @ sp[(-4)+0]
 15481  012ED8  0EFC               	movlw	-4
 15482  012EDA  8EE3               	bsf	plusw1,7,c
 15483  012EDC                     l6278:
 15484  012EDC  0E01               	movlw	1
 15485  012EDE  6E3E               	movwf	(btemp+11)^0,c
 15486                           
 15487                           ;stkvar	_b @ sp[(-4)+-4]
 15488  012EE0  50E1               	movf	fsr1l,w,c
 15489  012EE2  0FF8               	addlw	-8
 15490  012EE4  6ED9               	movwf	fsr2l,c
 15491  012EE6  50E2               	movf	fsr1h,w,c
 15492  012EE8  6EDA               	movwf	fsr2h,c
 15493  012EEA  0EFF               	movlw	255
 15494  012EEC  22DA               	addwfc	fsr2h,f,c
 15495  012EEE  283E               	incf	(btemp+11)^0,w,c
 15496  012EF0  52DE               	movf	postinc2,f,c
 15497  012EF2  D008               	goto	u4890
 15498  012EF4                     u4895:
 15499  012EF4  52DE               	movf	postinc2,f,c
 15500  012EF6  90D8               	bcf	status,0,c
 15501  012EF8  BEDC               	btfsc	preinc2,7,c
 15502  012EFA  80D8               	bsf	status,0,c
 15503  012EFC  32DD               	rrcf	postdec2,f,c
 15504  012EFE  32DD               	rrcf	postdec2,f,c
 15505  012F00  32DD               	rrcf	postdec2,f,c
 15506  012F02  32DE               	rrcf	postinc2,f,c
 15507  012F04                     u4890:
 15508  012F04  2EE8               	decfsz	wreg,f,c
 15509  012F06  D7F6               	goto	u4895
 15510                           
 15511                           ;stkvar	_bexp @ sp[(-4)+1]
 15512  012F08  0EFD               	movlw	-3
 15513  012F0A  2AE3               	incf	plusw1,f,c
 15514  012F0C  D0CA               	goto	u4970
 15515  012F0E                     l6282:
 15516                           
 15517                           ;stkvar	_a @ sp[(-4)+-8]
 15518                           ;stkvar	_b @ sp[(-4)+-4]
 15519  012F0E  50E1               	movf	fsr1l,w,c
 15520  012F10  0FF8               	addlw	-8
 15521  012F12  6ED9               	movwf	fsr2l,c
 15522  012F14  50E2               	movf	fsr1h,w,c
 15523  012F16  6EDA               	movwf	fsr2h,c
 15524  012F18  0EFF               	movlw	255
 15525  012F1A  22DA               	addwfc	fsr2h,f,c
 15526  012F1C  0EF4               	movlw	-12
 15527  012F1E  50E3               	movf	plusw1,w,c
 15528  012F20  5CDE               	subwf	postinc2,w,c
 15529  012F22  0EF5               	movlw	-11
 15530  012F24  50E3               	movf	plusw1,w,c
 15531  012F26  58DE               	subwfb	postinc2,w,c
 15532  012F28  0EF6               	movlw	-10
 15533  012F2A  50E3               	movf	plusw1,w,c
 15534  012F2C  58DE               	subwfb	postinc2,w,c
 15535  012F2E  50DE               	movf	postinc2,w,c
 15536  012F30  0A80               	xorlw	128
 15537  012F32  6E33               	movwf	btemp^0,c
 15538  012F34  0EF7               	movlw	-9
 15539  012F36  50E3               	movf	plusw1,w,c
 15540  012F38  0A80               	xorlw	128
 15541  012F3A  5833               	subwfb	btemp^0,w,c
 15542  012F3C  B0D8               	btfsc	status,0,c
 15543  012F3E  D053               	goto	l6294
 15544                           
 15545                           ;stkvar	_b @ sp[(-4)+-4]
 15546                           ;stkvar	_a @ sp[(-4)+-8]
 15547  012F40  0EF4               	movlw	-12
 15548  012F42  006F FF8C  F03B    	movff	plusw1,btemp+8
 15549  012F48  0EF5               	movlw	-11
 15550  012F4A  006F FF8C  F03C    	movff	plusw1,btemp+9
 15551  012F50  0EF6               	movlw	-10
 15552  012F52  006F FF8C  F03D    	movff	plusw1,btemp+10
 15553  012F58  0EF7               	movlw	-9
 15554  012F5A  006F FF8C  F03E    	movff	plusw1,btemp+11
 15555  012F60  0EF8               	movlw	-8
 15556  012F62  50E3               	movf	plusw1,w,c
 15557  012F64  5E3B               	subwf	(btemp+8)^0,f,c
 15558  012F66  0EF9               	movlw	-7
 15559  012F68  50E3               	movf	plusw1,w,c
 15560  012F6A  5A3C               	subwfb	(btemp+9)^0,f,c
 15561  012F6C  0EFA               	movlw	-6
 15562  012F6E  50E3               	movf	plusw1,w,c
 15563  012F70  5A3D               	subwfb	(btemp+10)^0,f,c
 15564  012F72  0EFB               	movlw	-5
 15565  012F74  50E3               	movf	plusw1,w,c
 15566  012F76  5A3E               	subwfb	(btemp+11)^0,f,c
 15567  012F78  0EFF               	movlw	255
 15568  012F7A  243B               	addwf	(btemp+8)^0,w,c
 15569  012F7C  6E37               	movwf	(btemp+4)^0,c
 15570  012F7E  0EFF               	movlw	255
 15571  012F80  203C               	addwfc	(btemp+9)^0,w,c
 15572  012F82  6E38               	movwf	(btemp+5)^0,c
 15573  012F84  0EFF               	movlw	255
 15574  012F86  203D               	addwfc	(btemp+10)^0,w,c
 15575  012F88  6E39               	movwf	(btemp+6)^0,c
 15576  012F8A  0EFF               	movlw	255
 15577  012F8C  203E               	addwfc	(btemp+11)^0,w,c
 15578  012F8E  6E3A               	movwf	(btemp+7)^0,c
 15579                           
 15580                           ;stkvar	_b @ sp[(-4)+-4]
 15581  012F90  0EF8               	movlw	-8
 15582  012F92  0060  F0DF  FFE3   	movff	btemp+4,plusw1
 15583  012F98  0EF9               	movlw	-7
 15584  012F9A  0060  F0E3  FFE3   	movff	btemp+5,plusw1
 15585  012FA0  0EFA               	movlw	-6
 15586  012FA2  0060  F0E7  FFE3   	movff	btemp+6,plusw1
 15587  012FA8  0EFB               	movlw	-5
 15588  012FAA  0060  F0EB  FFE3   	movff	btemp+7,plusw1
 15589                           
 15590                           ;stkvar	_signs @ sp[(-4)+3]
 15591  012FB0  0EFF               	movlw	-1
 15592  012FB2  7EE3               	btg	plusw1,7,c
 15593                           
 15594                           ;stkvar	_grs @ sp[(-4)+0]
 15595  012FB4  0EFC               	movlw	-4
 15596  012FB6  50E3               	movf	plusw1,w,c
 15597  012FB8  0800               	sublw	0
 15598  012FBA  6E3E               	movwf	(btemp+11)^0,c
 15599                           
 15600                           ;stkvar	_grs @ sp[(-4)+0]
 15601  012FBC  0EFC               	movlw	-4
 15602  012FBE  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 15603                           
 15604                           ;stkvar	_grs @ sp[(-4)+0]
 15605  012FC4  0EFC               	movlw	-4
 15606  012FC6  50E3               	movf	plusw1,w,c
 15607  012FC8  A4D8               	btfss	status,2,c
 15608  012FCA  D020               	goto	l6296
 15609                           
 15610                           ;stkvar	_b @ sp[(-4)+-4]
 15611  012FCC  50E1               	movf	fsr1l,w,c
 15612  012FCE  0FF8               	addlw	-8
 15613  012FD0  6ED9               	movwf	fsr2l,c
 15614  012FD2  50E2               	movf	fsr1h,w,c
 15615  012FD4  6EDA               	movwf	fsr2h,c
 15616  012FD6  0EFF               	movlw	255
 15617  012FD8  22DA               	addwfc	fsr2h,f,c
 15618  012FDA  2ADE               	incf	postinc2,f,c
 15619  012FDC  0E00               	movlw	0
 15620  012FDE  22DE               	addwfc	postinc2,f,c
 15621  012FE0  22DE               	addwfc	postinc2,f,c
 15622  012FE2  22DE               	addwfc	postinc2,f,c
 15623  012FE4  D013               	goto	l6296
 15624  012FE6                     l6294:
 15625                           
 15626                           ;stkvar	_a @ sp[(-4)+-8]
 15627                           ;stkvar	_b @ sp[(-4)+-4]
 15628  012FE6  50E1               	movf	fsr1l,w,c
 15629  012FE8  0FF8               	addlw	-8
 15630  012FEA  6ED9               	movwf	fsr2l,c
 15631  012FEC  50E2               	movf	fsr1h,w,c
 15632  012FEE  6EDA               	movwf	fsr2h,c
 15633  012FF0  0EFF               	movlw	255
 15634  012FF2  22DA               	addwfc	fsr2h,f,c
 15635  012FF4  0EF4               	movlw	-12
 15636  012FF6  50E3               	movf	plusw1,w,c
 15637  012FF8  5EDE               	subwf	postinc2,f,c
 15638  012FFA  0EF5               	movlw	-11
 15639  012FFC  50E3               	movf	plusw1,w,c
 15640  012FFE  5ADE               	subwfb	postinc2,f,c
 15641  013000  0EF6               	movlw	-10
 15642  013002  50E3               	movf	plusw1,w,c
 15643  013004  5ADE               	subwfb	postinc2,f,c
 15644  013006  0EF7               	movlw	-9
 15645  013008  50E3               	movf	plusw1,w,c
 15646  01300A  5ADE               	subwfb	postinc2,f,c
 15647  01300C                     l6296:
 15648                           
 15649                           ;stkvar	_b @ sp[(-4)+-4]
 15650  01300C  0EF8               	movlw	-8
 15651  01300E  50E3               	movf	plusw1,w,c
 15652  013010  E145               	bnz	l6318
 15653  013012  0EF9               	movlw	-7
 15654  013014  50E3               	movf	plusw1,w,c
 15655  013016  E142               	bnz	l6318
 15656  013018  0EFA               	movlw	-6
 15657  01301A  50E3               	movf	plusw1,w,c
 15658  01301C  E13F               	bnz	l6318
 15659  01301E  0EFB               	movlw	-5
 15660  013020  50E3               	movf	plusw1,w,c
 15661  013022  A4D8               	btfss	status,2,c
 15662  013024  D03B               	goto	l6318
 15663                           
 15664                           ;stkvar	_grs @ sp[(-4)+0]
 15665  013026  0EFC               	movlw	-4
 15666  013028  50E3               	movf	plusw1,w,c
 15667  01302A  A4D8               	btfss	status,2,c
 15668  01302C  D037               	goto	l6318
 15669  01302E                     u4930:
 15670  01302E  0E00               	movlw	0
 15671  013030  6E33               	movwf	btemp^0,c
 15672  013032  0E00               	movlw	0
 15673  013034  6E34               	movwf	(btemp+1)^0,c
 15674  013036  0E00               	movlw	0
 15675  013038  6E35               	movwf	(btemp+2)^0,c
 15676  01303A  0E00               	movlw	0
 15677  01303C  6E36               	movwf	(btemp+3)^0,c
 15678  01303E  D0C6               	goto	l2562
 15679  013040                     l6304:
 15680                           
 15681                           ;stkvar	_b @ sp[(-4)+-4]
 15682  013040  90D8               	bcf	status,0,c
 15683  013042  0EF8               	movlw	-8
 15684  013044  36E3               	rlcf	plusw1,f,c
 15685  013046  0EF9               	movlw	-7
 15686  013048  36E3               	rlcf	plusw1,f,c
 15687  01304A  0EFA               	movlw	-6
 15688  01304C  36E3               	rlcf	plusw1,f,c
 15689  01304E  0EFB               	movlw	-5
 15690  013050  36E3               	rlcf	plusw1,f,c
 15691                           
 15692                           ;stkvar	_grs @ sp[(-4)+0]
 15693  013052  0EFC               	movlw	-4
 15694  013054  AEE3               	btfss	plusw1,7,c
 15695  013056  D002               	goto	l2574
 15696                           
 15697                           ;stkvar	_b @ sp[(-4)+-4]
 15698  013058  0EF8               	movlw	-8
 15699  01305A  80E3               	bsf	plusw1,0,c
 15700  01305C                     l2574:
 15701                           
 15702                           ;stkvar	_grs @ sp[(-4)+0]
 15703  01305C  0EFC               	movlw	-4
 15704  01305E  A0E3               	btfss	plusw1,0,c
 15705  013060  D00E               	goto	l6312
 15706                           
 15707                           ;stkvar	_grs @ sp[(-4)+0]
 15708  013062  0EFC               	movlw	-4
 15709  013064  006F FF8C  F03E    	movff	plusw1,btemp+11
 15710  01306A  90D8               	bcf	status,0,c
 15711  01306C  343E               	rlcf	(btemp+11)^0,w,c
 15712  01306E  6E3D               	movwf	(btemp+10)^0,c
 15713  013070  0E01               	movlw	1
 15714  013072  123D               	iorwf	(btemp+10)^0,f,c
 15715                           
 15716                           ;stkvar	_grs @ sp[(-4)+0]
 15717  013074  0EFC               	movlw	-4
 15718  013076  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 15719  01307C  D009               	goto	l6314
 15720  01307E                     l6312:
 15721                           
 15722                           ;stkvar	_grs @ sp[(-4)+0]
 15723  01307E  50E1               	movf	fsr1l,w,c
 15724  013080  0FFC               	addlw	-4
 15725  013082  6ED9               	movwf	fsr2l,c
 15726  013084  50E2               	movf	fsr1h,w,c
 15727  013086  6EDA               	movwf	fsr2h,c
 15728  013088  0EFF               	movlw	255
 15729  01308A  22DA               	addwfc	fsr2h,f,c
 15730  01308C  90D8               	bcf	status,0,c
 15731  01308E  36DF               	rlcf	indf2,f,c
 15732  013090                     l6314:
 15733                           
 15734                           ;stkvar	_bexp @ sp[(-4)+1]
 15735  013090  0EFD               	movlw	-3
 15736  013092  50E3               	movf	plusw1,w,c
 15737  013094  B4D8               	btfsc	status,2,c
 15738  013096  D002               	goto	l6318
 15739                           
 15740                           ;stkvar	_bexp @ sp[(-4)+1]
 15741  013098  0EFD               	movlw	-3
 15742  01309A  06E3               	decf	plusw1,f,c
 15743  01309C                     l6318:
 15744                           
 15745                           ;stkvar	_b @ sp[(-4)+-4]
 15746  01309C  0EFA               	movlw	-6
 15747  01309E  AEE3               	btfss	plusw1,7,c
 15748  0130A0  D7CF               	goto	l6304
 15749  0130A2                     u4970:
 15750                           
 15751                           ;stkvar	_aexp @ sp[(-4)+2]
 15752  0130A2  0EFE               	movlw	-2
 15753  0130A4  6AE3               	clrf	plusw1,c
 15754                           
 15755                           ;stkvar	_grs @ sp[(-4)+0]
 15756  0130A6  0EFC               	movlw	-4
 15757  0130A8  AEE3               	btfss	plusw1,7,c
 15758  0130AA  D00F               	goto	l6332
 15759                           
 15760                           ;stkvar	_grs @ sp[(-4)+0]
 15761  0130AC  0EFC               	movlw	-4
 15762  0130AE  006F FF8C  F03E    	movff	plusw1,btemp+11
 15763  0130B4  0E7F               	movlw	127
 15764  0130B6  163E               	andwf	(btemp+11)^0,f,c
 15765  0130B8  B4D8               	btfsc	status,2,c
 15766  0130BA  D004               	goto	l6328
 15767  0130BC                     u4990:
 15768                           
 15769                           ;stkvar	_aexp @ sp[(-4)+2]
 15770  0130BC  0EFE               	movlw	-2
 15771  0130BE  6AE3               	clrf	plusw1,c
 15772  0130C0  2AE3               	incf	plusw1,f,c
 15773  0130C2  D003               	goto	l6332
 15774  0130C4                     l6328:
 15775                           
 15776                           ;stkvar	_b @ sp[(-4)+-4]
 15777  0130C4  0EF8               	movlw	-8
 15778  0130C6  B0E3               	btfsc	plusw1,0,c
 15779  0130C8  D7F9               	goto	u4990
 15780  0130CA                     l6332:
 15781                           
 15782                           ;stkvar	_aexp @ sp[(-4)+2]
 15783  0130CA  0EFE               	movlw	-2
 15784  0130CC  50E3               	movf	plusw1,w,c
 15785  0130CE  B4D8               	btfsc	status,2,c
 15786  0130D0  D02B               	goto	l6344
 15787                           
 15788                           ;stkvar	_b @ sp[(-4)+-4]
 15789  0130D2  50E1               	movf	fsr1l,w,c
 15790  0130D4  0FF8               	addlw	-8
 15791  0130D6  6ED9               	movwf	fsr2l,c
 15792  0130D8  50E2               	movf	fsr1h,w,c
 15793  0130DA  6EDA               	movwf	fsr2h,c
 15794  0130DC  0EFF               	movlw	255
 15795  0130DE  22DA               	addwfc	fsr2h,f,c
 15796  0130E0  2ADE               	incf	postinc2,f,c
 15797  0130E2  0E00               	movlw	0
 15798  0130E4  22DE               	addwfc	postinc2,f,c
 15799  0130E6  22DE               	addwfc	postinc2,f,c
 15800  0130E8  22DE               	addwfc	postinc2,f,c
 15801                           
 15802                           ;stkvar	_b @ sp[(-4)+-4]
 15803  0130EA  0EFB               	movlw	-5
 15804  0130EC  A0E3               	btfss	plusw1,0,c
 15805  0130EE  D01C               	goto	l6344
 15806  0130F0  0E01               	movlw	1
 15807  0130F2  6E3E               	movwf	(btemp+11)^0,c
 15808                           
 15809                           ;stkvar	_b @ sp[(-4)+-4]
 15810  0130F4  50E1               	movf	fsr1l,w,c
 15811  0130F6  0FF8               	addlw	-8
 15812  0130F8  6ED9               	movwf	fsr2l,c
 15813  0130FA  50E2               	movf	fsr1h,w,c
 15814  0130FC  6EDA               	movwf	fsr2h,c
 15815  0130FE  0EFF               	movlw	255
 15816  013100  22DA               	addwfc	fsr2h,f,c
 15817  013102  283E               	incf	(btemp+11)^0,w,c
 15818  013104  52DE               	movf	postinc2,f,c
 15819  013106  D008               	goto	u5030
 15820  013108                     u5035:
 15821  013108  52DE               	movf	postinc2,f,c
 15822  01310A  90D8               	bcf	status,0,c
 15823  01310C  BEDC               	btfsc	preinc2,7,c
 15824  01310E  80D8               	bsf	status,0,c
 15825  013110  32DD               	rrcf	postdec2,f,c
 15826  013112  32DD               	rrcf	postdec2,f,c
 15827  013114  32DD               	rrcf	postdec2,f,c
 15828  013116  32DE               	rrcf	postinc2,f,c
 15829  013118                     u5030:
 15830  013118  2EE8               	decfsz	wreg,f,c
 15831  01311A  D7F6               	goto	u5035
 15832                           
 15833                           ;stkvar	_bexp @ sp[(-4)+1]
 15834  01311C  0EFD               	movlw	-3
 15835  01311E  28E3               	incf	plusw1,w,c
 15836  013120  B4D8               	btfsc	status,2,c
 15837  013122  D002               	goto	l6344
 15838                           
 15839                           ;stkvar	_bexp @ sp[(-4)+1]
 15840  013124  0EFD               	movlw	-3
 15841  013126  2AE3               	incf	plusw1,f,c
 15842  013128                     l6344:
 15843                           
 15844                           ;stkvar	_bexp @ sp[(-4)+1]
 15845  013128  0EFD               	movlw	-3
 15846  01312A  28E3               	incf	plusw1,w,c
 15847  01312C  B4D8               	btfsc	status,2,c
 15848  01312E  D004               	goto	u5060
 15849                           
 15850                           ;stkvar	_bexp @ sp[(-4)+1]
 15851  013130  0EFD               	movlw	-3
 15852  013132  50E3               	movf	plusw1,w,c
 15853  013134  A4D8               	btfss	status,2,c
 15854  013136  D00E               	goto	l6354
 15855  013138                     u5060:
 15856                           
 15857                           ;stkvar	_b @ sp[(-4)+-4]
 15858  013138  0EF8               	movlw	-8
 15859  01313A  6AE3               	clrf	plusw1,c
 15860  01313C  0EF9               	movlw	-7
 15861  01313E  6AE3               	clrf	plusw1,c
 15862  013140  0EFA               	movlw	-6
 15863  013142  6AE3               	clrf	plusw1,c
 15864  013144  0EFB               	movlw	-5
 15865  013146  6AE3               	clrf	plusw1,c
 15866                           
 15867                           ;stkvar	_bexp @ sp[(-4)+1]
 15868  013148  0EFD               	movlw	-3
 15869  01314A  50E3               	movf	plusw1,w,c
 15870  01314C  A4D8               	btfss	status,2,c
 15871  01314E  D002               	goto	l6354
 15872                           
 15873                           ;stkvar	_signs @ sp[(-4)+3]
 15874  013150  0EFF               	movlw	-1
 15875  013152  6AE3               	clrf	plusw1,c
 15876  013154                     l6354:
 15877                           
 15878                           ;stkvar	_bexp @ sp[(-4)+1]
 15879  013154  0EFD               	movlw	-3
 15880  013156  A0E3               	btfss	plusw1,0,c
 15881  013158  D009               	goto	l6358
 15882                           
 15883                           ;stkvar	_b @ sp[(-4)+-4]
 15884  01315A  0EFA               	movlw	250
 15885  01315C  24E1               	addwf	fsr1l,w,c
 15886  01315E  6ED9               	movwf	fsr2l,c
 15887  013160  0EFF               	movlw	255
 15888  013162  20E2               	addwfc	fsr1h,w,c
 15889  013164  6EDA               	movwf	fsr2h,c
 15890  013166  0E00               	movlw	0
 15891  013168  8EDB               	bsf	plusw2,7,c
 15892  01316A  D008               	goto	l6360
 15893  01316C                     l6358:
 15894                           
 15895                           ;stkvar	_b @ sp[(-4)+-4]
 15896  01316C  0EFA               	movlw	250
 15897  01316E  24E1               	addwf	fsr1l,w,c
 15898  013170  6ED9               	movwf	fsr2l,c
 15899  013172  0EFF               	movlw	255
 15900  013174  20E2               	addwfc	fsr1h,w,c
 15901  013176  6EDA               	movwf	fsr2h,c
 15902  013178  0E7F               	movlw	127
 15903  01317A  16DF               	andwf	indf2,f,c
 15904  01317C                     l6360:
 15905                           
 15906                           ;stkvar	_b @ sp[(-4)+-4]
 15907  01317C  0EFB               	movlw	251
 15908  01317E  24E1               	addwf	fsr1l,w,c
 15909  013180  6ED9               	movwf	fsr2l,c
 15910  013182  0EFF               	movlw	255
 15911  013184  20E2               	addwfc	fsr1h,w,c
 15912  013186  6EDA               	movwf	fsr2h,c
 15913                           
 15914                           ;stkvar	_bexp @ sp[(-4)+1]
 15915  013188  0EFD               	movlw	-3
 15916  01318A  006F FF8C  F03E    	movff	plusw1,btemp+11
 15917  013190  90D8               	bcf	status,0,c
 15918  013192  303E               	rrcf	(btemp+11)^0,w,c
 15919  013194  6EDF               	movwf	indf2,c
 15920                           
 15921                           ;stkvar	_signs @ sp[(-4)+3]
 15922  013196  0EFF               	movlw	-1
 15923  013198  AEE3               	btfss	plusw1,7,c
 15924  01319A  D008               	goto	l6366
 15925                           
 15926                           ;stkvar	_b @ sp[(-4)+-4]
 15927  01319C  0EFB               	movlw	251
 15928  01319E  24E1               	addwf	fsr1l,w,c
 15929  0131A0  6ED9               	movwf	fsr2l,c
 15930  0131A2  0EFF               	movlw	255
 15931  0131A4  20E2               	addwfc	fsr1h,w,c
 15932  0131A6  6EDA               	movwf	fsr2h,c
 15933  0131A8  0E00               	movlw	0
 15934  0131AA  8EDB               	bsf	plusw2,7,c
 15935  0131AC                     l6366:
 15936                           
 15937                           ;stkvar	_b @ sp[(-4)+-4]
 15938  0131AC  0EF8               	movlw	-8
 15939  0131AE  006F FF8C  F033    	movff	plusw1,btemp
 15940  0131B4  0EF9               	movlw	-7
 15941  0131B6  006F FF8C  F034    	movff	plusw1,btemp+1
 15942  0131BC  0EFA               	movlw	-6
 15943  0131BE  006F FF8C  F035    	movff	plusw1,btemp+2
 15944  0131C4  0EFB               	movlw	-5
 15945  0131C6  006F FF8C  F036    	movff	plusw1,btemp+3
 15946  0131CC                     l2562:
 15947                           
 15948                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 15949  0131CC  0EF4               	movlw	244
 15950  0131CE  26E1               	addwf	fsr1l,f,c
 15951  0131D0  0EFF               	movlw	255
 15952  0131D2  22E2               	addwfc	fsr1h,f,c
 15953  0131D4  0012               	return		;funcret
 15954  0131D6                     __end_of___fladd:
 15955                           	opt callstack 0
 15956                           
 15957 ;; *************** function ___flneg *****************
 15958 ;; Defined at:
 15959 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 15960 ;; Parameters:    Size  Location     Type
 15961 ;;  f1              4  [STACK] unsigned char 
 15962 ;; Auto vars:     Size  Location     Type
 15963 ;;		None
 15964 ;; Return value:  Size  Location     Type
 15965 ;;                  4  [STACK] unsigned char 
 15966 ;; Registers used:
 15967 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 15968 ;; Tracked objects:
 15969 ;;		On entry : 0/0
 15970 ;;		On exit  : 0/0
 15971 ;;		Unchanged: 0/0
 15972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15977 ;;Total ram usage:        0 bytes
 15978 ;; Hardware stack levels used:    1
 15979 ;; Hardware stack levels required when called:    6
 15980 ;; This function calls:
 15981 ;;		Nothing
 15982 ;; This function is called by:
 15983 ;;		_efgtoa
 15984 ;; This function uses a reentrant model
 15985 ;;
 15986                           
 15987                           	psect	text55
 15988  0183CC                     __ptext55:
 15989                           	opt callstack 0
 15990  0183CC                     ___flneg:
 15991                           	opt callstack 17
 15992                           
 15993                           ;stkvar	_f1 @ sp[(0)+-4]
 15994                           
 15995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15996                           ;incstack = 0
 15997  0183CC  0EFC               	movlw	-4
 15998  0183CE  50E3               	movf	plusw1,w,c
 15999  0183D0  E10A               	bnz	u6370
 16000  0183D2  0EFD               	movlw	-3
 16001  0183D4  50E3               	movf	plusw1,w,c
 16002  0183D6  E107               	bnz	u6370
 16003  0183D8  0EFE               	movlw	-2
 16004  0183DA  50E3               	movf	plusw1,w,c
 16005  0183DC  E104               	bnz	u6370
 16006  0183DE  0EFF               	movlw	-1
 16007  0183E0  50E3               	movf	plusw1,w,c
 16008  0183E2  B4D8               	btfsc	status,2,c
 16009  0183E4  D002               	goto	l7034
 16010  0183E6                     u6370:
 16011                           
 16012                           ;stkvar	_f1 @ sp[(0)+-4]
 16013  0183E6  0EFF               	movlw	-1
 16014  0183E8  7EE3               	btg	plusw1,7,c
 16015  0183EA                     l7034:
 16016                           
 16017                           ;stkvar	_f1 @ sp[(0)+-4]
 16018  0183EA  0EFC               	movlw	-4
 16019  0183EC  006F FF8C  F033    	movff	plusw1,btemp
 16020  0183F2  0EFD               	movlw	-3
 16021  0183F4  006F FF8C  F034    	movff	plusw1,btemp+1
 16022  0183FA  0EFE               	movlw	-2
 16023  0183FC  006F FF8C  F035    	movff	plusw1,btemp+2
 16024  018402  0EFF               	movlw	-1
 16025  018404  006F FF8C  F036    	movff	plusw1,btemp+3
 16026                           
 16027                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16028  01840A  52E5               	movf	postdec1,f,c
 16029  01840C  52E5               	movf	postdec1,f,c
 16030  01840E  52E5               	movf	postdec1,f,c
 16031  018410  52E5               	movf	postdec1,f,c
 16032  018412  0012               	return		;funcret
 16033  018414                     __end_of___flneg:
 16034                           	opt callstack 0
 16035                           
 16036 ;; *************** function ___flmul *****************
 16037 ;; Defined at:
 16038 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 16039 ;; Parameters:    Size  Location     Type
 16040 ;;  b               4  [STACK] unsigned char 
 16041 ;;  a               4  [STACK] unsigned char 
 16042 ;; Auto vars:     Size  Location     Type
 16043 ;;  prod            4  [STACK] struct .
 16044 ;;  grs             4  [STACK] unsigned long 
 16045 ;;  temp            2  [STACK] struct .
 16046 ;;  bexp            1  [STACK] unsigned char 
 16047 ;;  aexp            1  [STACK] unsigned char 
 16048 ;;  sign            1  [STACK] unsigned char 
 16049 ;; Return value:  Size  Location     Type
 16050 ;;                  4  [STACK] unsigned char 
 16051 ;; Registers used:
 16052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 16053 ;; Tracked objects:
 16054 ;;		On entry : 0/39
 16055 ;;		On exit  : 0/0
 16056 ;;		Unchanged: 0/0
 16057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16062 ;;Total ram usage:        0 bytes
 16063 ;; Hardware stack levels used:    1
 16064 ;; Hardware stack levels required when called:    6
 16065 ;; This function calls:
 16066 ;;		Nothing
 16067 ;; This function is called by:
 16068 ;;		_conv_raw_result
 16069 ;;		_lp_filter
 16070 ;;		_efgtoa
 16071 ;; This function uses a reentrant model
 16072 ;;
 16073                           
 16074                           	psect	text56
 16075  0121F0                     __ptext56:
 16076                           	opt callstack 0
 16077  0121F0                     ___flmul:
 16078                           	opt callstack 0
 16079                           
 16080                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16081  0121F0  0E0D               	movlw	13
 16082  0121F2  26E1               	addwf	fsr1l,f,c
 16083  0121F4  0E00               	movlw	0
 16084  0121F6  22E2               	addwfc	fsr1h,f,c
 16085                           
 16086                           ;stkvar	_b @ sp[(-13)+-4]
 16087                           
 16088                           ;incstack = 0
 16089  0121F8  0EF2               	movlw	242
 16090  0121FA  24E1               	addwf	fsr1l,w,c
 16091  0121FC  6ED9               	movwf	fsr2l,c
 16092  0121FE  0EFF               	movlw	255
 16093  012200  20E2               	addwfc	fsr1h,w,c
 16094  012202  6EDA               	movwf	fsr2h,c
 16095  012204  50DF               	movf	indf2,w,c
 16096  012206  6E3E               	movwf	(btemp+11)^0,c
 16097  012208  0E80               	movlw	128
 16098  01220A  163E               	andwf	(btemp+11)^0,f,c
 16099                           
 16100                           ;stkvar	_sign @ sp[(-13)+12]
 16101  01220C  0EFF               	movlw	-1
 16102  01220E  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 16103                           
 16104                           ;stkvar	_b @ sp[(-13)+-4]
 16105  012214  0EF2               	movlw	242
 16106  012216  24E1               	addwf	fsr1l,w,c
 16107  012218  6ED9               	movwf	fsr2l,c
 16108  01221A  0EFF               	movlw	255
 16109  01221C  20E2               	addwfc	fsr1h,w,c
 16110  01221E  6EDA               	movwf	fsr2h,c
 16111  012220  50DF               	movf	indf2,w,c
 16112  012222  6E3E               	movwf	(btemp+11)^0,c
 16113  012224  90D8               	bcf	status,0,c
 16114  012226  343E               	rlcf	(btemp+11)^0,w,c
 16115  012228  6E3D               	movwf	(btemp+10)^0,c
 16116                           
 16117                           ;stkvar	_bexp @ sp[(-13)+10]
 16118  01222A  0EFD               	movlw	-3
 16119  01222C  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 16120                           
 16121                           ;stkvar	_b @ sp[(-13)+-4]
 16122  012232  0EF1               	movlw	241
 16123  012234  24E1               	addwf	fsr1l,w,c
 16124  012236  6ED9               	movwf	fsr2l,c
 16125  012238  0EFF               	movlw	255
 16126  01223A  20E2               	addwfc	fsr1h,w,c
 16127  01223C  6EDA               	movwf	fsr2h,c
 16128  01223E  AEDF               	btfss	indf2,7,c
 16129  012240  D002               	goto	l6750
 16130                           
 16131                           ;stkvar	_bexp @ sp[(-13)+10]
 16132  012242  0EFD               	movlw	-3
 16133  012244  80E3               	bsf	plusw1,0,c
 16134  012246                     l6750:
 16135                           
 16136                           ;stkvar	_bexp @ sp[(-13)+10]
 16137  012246  0EFD               	movlw	-3
 16138  012248  50E3               	movf	plusw1,w,c
 16139  01224A  B4D8               	btfsc	status,2,c
 16140  01224C  D01F               	goto	l6758
 16141                           
 16142                           ;stkvar	_bexp @ sp[(-13)+10]
 16143  01224E  0EFD               	movlw	-3
 16144  012250  28E3               	incf	plusw1,w,c
 16145  012252  A4D8               	btfss	status,2,c
 16146  012254  D018               	goto	l6756
 16147  012256  0E00               	movlw	0
 16148  012258  6E3B               	movwf	(btemp+8)^0,c
 16149  01225A  0E00               	movlw	0
 16150  01225C  6E3C               	movwf	(btemp+9)^0,c
 16151  01225E  0E00               	movlw	0
 16152  012260  6E3D               	movwf	(btemp+10)^0,c
 16153  012262  0E00               	movlw	0
 16154  012264  6E3E               	movwf	(btemp+11)^0,c
 16155                           
 16156                           ;stkvar	_b @ sp[(-13)+-4]
 16157  012266  0EEF               	movlw	-17
 16158  012268  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 16159  01226E  0EF0               	movlw	-16
 16160  012270  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 16161  012276  0EF1               	movlw	-15
 16162  012278  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 16163  01227E  0EF2               	movlw	-14
 16164  012280  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 16165  012286                     l6756:
 16166                           
 16167                           ;stkvar	_b @ sp[(-13)+-4]
 16168  012286  0EF1               	movlw	-15
 16169  012288  8EE3               	bsf	plusw1,7,c
 16170  01228A  D018               	goto	l6760
 16171  01228C                     l6758:
 16172  01228C  0E00               	movlw	0
 16173  01228E  6E3B               	movwf	(btemp+8)^0,c
 16174  012290  0E00               	movlw	0
 16175  012292  6E3C               	movwf	(btemp+9)^0,c
 16176  012294  0E00               	movlw	0
 16177  012296  6E3D               	movwf	(btemp+10)^0,c
 16178  012298  0E00               	movlw	0
 16179  01229A  6E3E               	movwf	(btemp+11)^0,c
 16180                           
 16181                           ;stkvar	_b @ sp[(-13)+-4]
 16182  01229C  0EEF               	movlw	-17
 16183  01229E  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 16184  0122A4  0EF0               	movlw	-16
 16185  0122A6  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 16186  0122AC  0EF1               	movlw	-15
 16187  0122AE  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 16188  0122B4  0EF2               	movlw	-14
 16189  0122B6  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 16190  0122BC                     l6760:
 16191                           
 16192                           ;stkvar	_a @ sp[(-13)+-8]
 16193  0122BC  0EEE               	movlw	238
 16194  0122BE  24E1               	addwf	fsr1l,w,c
 16195  0122C0  6ED9               	movwf	fsr2l,c
 16196  0122C2  0EFF               	movlw	255
 16197  0122C4  20E2               	addwfc	fsr1h,w,c
 16198  0122C6  6EDA               	movwf	fsr2h,c
 16199  0122C8  50DF               	movf	indf2,w,c
 16200  0122CA  6E3E               	movwf	(btemp+11)^0,c
 16201  0122CC  0E80               	movlw	128
 16202  0122CE  163E               	andwf	(btemp+11)^0,f,c
 16203                           
 16204                           ;stkvar	_sign @ sp[(-13)+12]
 16205  0122D0  50E1               	movf	fsr1l,w,c
 16206  0122D2  0FFF               	addlw	-1
 16207  0122D4  6ED9               	movwf	fsr2l,c
 16208  0122D6  50E2               	movf	fsr1h,w,c
 16209  0122D8  6EDA               	movwf	fsr2h,c
 16210  0122DA  0EFF               	movlw	255
 16211  0122DC  22DA               	addwfc	fsr2h,f,c
 16212  0122DE  503E               	movf	(btemp+11)^0,w,c
 16213  0122E0  1ADF               	xorwf	indf2,f,c
 16214                           
 16215                           ;stkvar	_a @ sp[(-13)+-8]
 16216  0122E2  0EEE               	movlw	238
 16217  0122E4  24E1               	addwf	fsr1l,w,c
 16218  0122E6  6ED9               	movwf	fsr2l,c
 16219  0122E8  0EFF               	movlw	255
 16220  0122EA  20E2               	addwfc	fsr1h,w,c
 16221  0122EC  6EDA               	movwf	fsr2h,c
 16222  0122EE  50DF               	movf	indf2,w,c
 16223  0122F0  6E3E               	movwf	(btemp+11)^0,c
 16224  0122F2  90D8               	bcf	status,0,c
 16225  0122F4  343E               	rlcf	(btemp+11)^0,w,c
 16226  0122F6  6E3D               	movwf	(btemp+10)^0,c
 16227                           
 16228                           ;stkvar	_aexp @ sp[(-13)+11]
 16229  0122F8  0EFE               	movlw	-2
 16230  0122FA  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 16231                           
 16232                           ;stkvar	_a @ sp[(-13)+-8]
 16233  012300  0EED               	movlw	237
 16234  012302  24E1               	addwf	fsr1l,w,c
 16235  012304  6ED9               	movwf	fsr2l,c
 16236  012306  0EFF               	movlw	255
 16237  012308  20E2               	addwfc	fsr1h,w,c
 16238  01230A  6EDA               	movwf	fsr2h,c
 16239  01230C  AEDF               	btfss	indf2,7,c
 16240  01230E  D002               	goto	l6768
 16241                           
 16242                           ;stkvar	_aexp @ sp[(-13)+11]
 16243  012310  0EFE               	movlw	-2
 16244  012312  80E3               	bsf	plusw1,0,c
 16245  012314                     l6768:
 16246                           
 16247                           ;stkvar	_aexp @ sp[(-13)+11]
 16248  012314  0EFE               	movlw	-2
 16249  012316  50E3               	movf	plusw1,w,c
 16250  012318  B4D8               	btfsc	status,2,c
 16251  01231A  D01F               	goto	l6776
 16252                           
 16253                           ;stkvar	_aexp @ sp[(-13)+11]
 16254  01231C  0EFE               	movlw	-2
 16255  01231E  28E3               	incf	plusw1,w,c
 16256  012320  A4D8               	btfss	status,2,c
 16257  012322  D018               	goto	l6774
 16258  012324  0E00               	movlw	0
 16259  012326  6E3B               	movwf	(btemp+8)^0,c
 16260  012328  0E00               	movlw	0
 16261  01232A  6E3C               	movwf	(btemp+9)^0,c
 16262  01232C  0E00               	movlw	0
 16263  01232E  6E3D               	movwf	(btemp+10)^0,c
 16264  012330  0E00               	movlw	0
 16265  012332  6E3E               	movwf	(btemp+11)^0,c
 16266                           
 16267                           ;stkvar	_a @ sp[(-13)+-8]
 16268  012334  0EEB               	movlw	-21
 16269  012336  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 16270  01233C  0EEC               	movlw	-20
 16271  01233E  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 16272  012344  0EED               	movlw	-19
 16273  012346  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 16274  01234C  0EEE               	movlw	-18
 16275  01234E  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 16276  012354                     l6774:
 16277                           
 16278                           ;stkvar	_a @ sp[(-13)+-8]
 16279  012354  0EED               	movlw	-19
 16280  012356  8EE3               	bsf	plusw1,7,c
 16281  012358  D018               	goto	l6778
 16282  01235A                     l6776:
 16283  01235A  0E00               	movlw	0
 16284  01235C  6E3B               	movwf	(btemp+8)^0,c
 16285  01235E  0E00               	movlw	0
 16286  012360  6E3C               	movwf	(btemp+9)^0,c
 16287  012362  0E00               	movlw	0
 16288  012364  6E3D               	movwf	(btemp+10)^0,c
 16289  012366  0E00               	movlw	0
 16290  012368  6E3E               	movwf	(btemp+11)^0,c
 16291                           
 16292                           ;stkvar	_a @ sp[(-13)+-8]
 16293  01236A  0EEB               	movlw	-21
 16294  01236C  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 16295  012372  0EEC               	movlw	-20
 16296  012374  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 16297  01237A  0EED               	movlw	-19
 16298  01237C  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 16299  012382  0EEE               	movlw	-18
 16300  012384  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 16301  01238A                     l6778:
 16302                           
 16303                           ;stkvar	_aexp @ sp[(-13)+11]
 16304  01238A  0EFE               	movlw	-2
 16305  01238C  50E3               	movf	plusw1,w,c
 16306  01238E  B4D8               	btfsc	status,2,c
 16307  012390  D004               	goto	u6000
 16308                           
 16309                           ;stkvar	_bexp @ sp[(-13)+10]
 16310  012392  0EFD               	movlw	-3
 16311  012394  50E3               	movf	plusw1,w,c
 16312  012396  A4D8               	btfss	status,2,c
 16313  012398  D009               	goto	l6786
 16314  01239A                     u6000:
 16315  01239A  0E00               	movlw	0
 16316  01239C  6E33               	movwf	btemp^0,c
 16317  01239E  0E00               	movlw	0
 16318  0123A0  6E34               	movwf	(btemp+1)^0,c
 16319  0123A2  0E00               	movlw	0
 16320  0123A4  6E35               	movwf	(btemp+2)^0,c
 16321  0123A6  0E00               	movlw	0
 16322  0123A8  6E36               	movwf	(btemp+3)^0,c
 16323  0123AA  D332               	goto	l2643
 16324  0123AC                     l6786:
 16325                           
 16326                           ;stkvar	_b @ sp[(-13)+-4]
 16327  0123AC  0EEF               	movlw	-17
 16328  0123AE  006F FF8C  F03E    	movff	plusw1,btemp+11
 16329                           
 16330                           ;stkvar	_a @ sp[(-13)+-8]
 16331  0123B4  0EED               	movlw	237
 16332  0123B6  24E1               	addwf	fsr1l,w,c
 16333  0123B8  6ED9               	movwf	fsr2l,c
 16334  0123BA  0EFF               	movlw	255
 16335  0123BC  20E2               	addwfc	fsr1h,w,c
 16336  0123BE  6EDA               	movwf	fsr2h,c
 16337  0123C0  50DF               	movf	indf2,w,c
 16338  0123C2  023E               	mulwf	(btemp+11)^0,c
 16339                           
 16340                           ;stkvar	_temp @ sp[(-13)+8]
 16341  0123C4  0EFB               	movlw	-5
 16342  0123C6  006F FFCF FFE3     	movff	prodl,plusw1
 16343  0123CC  0EFC               	movlw	-4
 16344  0123CE  006F FFD3 FFE3     	movff	prodh,plusw1
 16345                           
 16346                           ;stkvar	_temp @ sp[(-13)+8]
 16347  0123D4  0EFB               	movlw	-5
 16348  0123D6  006F FF8C  F03E    	movff	plusw1,btemp+11
 16349  0123DC  0060  F0F8  F037   	movff	btemp+11,btemp+4
 16350  0123E2  6A38               	clrf	(btemp+5)^0,c
 16351  0123E4  6A39               	clrf	(btemp+6)^0,c
 16352  0123E6  6A3A               	clrf	(btemp+7)^0,c
 16353                           
 16354                           ;stkvar	_grs @ sp[(-13)+4]
 16355  0123E8  0EF7               	movlw	-9
 16356  0123EA  0060  F0DF  FFE3   	movff	btemp+4,plusw1
 16357  0123F0  0EF8               	movlw	-8
 16358  0123F2  0060  F0E3  FFE3   	movff	btemp+5,plusw1
 16359  0123F8  0EF9               	movlw	-7
 16360  0123FA  0060  F0E7  FFE3   	movff	btemp+6,plusw1
 16361  012400  0EFA               	movlw	-6
 16362  012402  0060  F0EB  FFE3   	movff	btemp+7,plusw1
 16363                           
 16364                           ;stkvar	_temp @ sp[(-13)+8]
 16365  012408  0EFC               	movlw	252
 16366  01240A  24E1               	addwf	fsr1l,w,c
 16367  01240C  6ED9               	movwf	fsr2l,c
 16368  01240E  0EFF               	movlw	255
 16369  012410  20E2               	addwfc	fsr1h,w,c
 16370  012412  6EDA               	movwf	fsr2h,c
 16371  012414  50DF               	movf	indf2,w,c
 16372  012416  6E3E               	movwf	(btemp+11)^0,c
 16373  012418  0060  F0F8  F037   	movff	btemp+11,btemp+4
 16374  01241E  6A38               	clrf	(btemp+5)^0,c
 16375  012420  6A39               	clrf	(btemp+6)^0,c
 16376  012422  6A3A               	clrf	(btemp+7)^0,c
 16377                           
 16378                           ;stkvar	_prod @ sp[(-13)+0]
 16379  012424  0EF3               	movlw	-13
 16380  012426  0060  F0DF  FFE3   	movff	btemp+4,plusw1
 16381  01242C  0EF4               	movlw	-12
 16382  01242E  0060  F0E3  FFE3   	movff	btemp+5,plusw1
 16383  012434  0EF5               	movlw	-11
 16384  012436  0060  F0E7  FFE3   	movff	btemp+6,plusw1
 16385  01243C  0EF6               	movlw	-10
 16386  01243E  0060  F0EB  FFE3   	movff	btemp+7,plusw1
 16387                           
 16388                           ;stkvar	_b @ sp[(-13)+-4]
 16389  012444  0EF0               	movlw	240
 16390  012446  24E1               	addwf	fsr1l,w,c
 16391  012448  6ED9               	movwf	fsr2l,c
 16392  01244A  0EFF               	movlw	255
 16393  01244C  20E2               	addwfc	fsr1h,w,c
 16394  01244E  6EDA               	movwf	fsr2h,c
 16395  012450  50DF               	movf	indf2,w,c
 16396  012452  6E3E               	movwf	(btemp+11)^0,c
 16397                           
 16398                           ;stkvar	_a @ sp[(-13)+-8]
 16399  012454  0EEC               	movlw	236
 16400  012456  24E1               	addwf	fsr1l,w,c
 16401  012458  6ED9               	movwf	fsr2l,c
 16402  01245A  0EFF               	movlw	255
 16403  01245C  20E2               	addwfc	fsr1h,w,c
 16404  01245E  6EDA               	movwf	fsr2h,c
 16405  012460  50DF               	movf	indf2,w,c
 16406  012462  023E               	mulwf	(btemp+11)^0,c
 16407                           
 16408                           ;stkvar	_temp @ sp[(-13)+8]
 16409  012464  0EFB               	movlw	-5
 16410  012466  006F FFCF FFE3     	movff	prodl,plusw1
 16411  01246C  0EFC               	movlw	-4
 16412  01246E  006F FFD3 FFE3     	movff	prodh,plusw1
 16413                           
 16414                           ;stkvar	_grs @ sp[(-13)+4]
 16415  012474  50E1               	movf	fsr1l,w,c
 16416  012476  0FF7               	addlw	-9
 16417  012478  6ED9               	movwf	fsr2l,c
 16418  01247A  50E2               	movf	fsr1h,w,c
 16419  01247C  6EDA               	movwf	fsr2h,c
 16420  01247E  0EFF               	movlw	255
 16421  012480  22DA               	addwfc	fsr2h,f,c
 16422                           
 16423                           ;stkvar	_temp @ sp[(-13)+8]
 16424  012482  0EFB               	movlw	-5
 16425  012484  50E3               	movf	plusw1,w,c
 16426  012486  26DE               	addwf	postinc2,f,c
 16427  012488  0E00               	movlw	0
 16428  01248A  22DE               	addwfc	postinc2,f,c
 16429  01248C  22DE               	addwfc	postinc2,f,c
 16430  01248E  22DE               	addwfc	postinc2,f,c
 16431                           
 16432                           ;stkvar	_prod @ sp[(-13)+0]
 16433  012490  50E1               	movf	fsr1l,w,c
 16434  012492  0FF3               	addlw	-13
 16435  012494  6ED9               	movwf	fsr2l,c
 16436  012496  50E2               	movf	fsr1h,w,c
 16437  012498  6EDA               	movwf	fsr2h,c
 16438  01249A  0EFF               	movlw	255
 16439  01249C  22DA               	addwfc	fsr2h,f,c
 16440                           
 16441                           ;stkvar	_temp @ sp[(-13)+8]
 16442  01249E  0EFC               	movlw	252
 16443  0124A0  24E1               	addwf	fsr1l,w,c
 16444  0124A2  6EE9               	movwf	fsr0l,c
 16445  0124A4  0EFF               	movlw	255
 16446  0124A6  20E2               	addwfc	fsr1h,w,c
 16447  0124A8  6EEA               	movwf	fsr0h,c
 16448  0124AA  50EF               	movf	indf0,w,c
 16449  0124AC  26DE               	addwf	postinc2,f,c
 16450  0124AE  0E00               	movlw	0
 16451  0124B0  22DE               	addwfc	postinc2,f,c
 16452  0124B2  22DE               	addwfc	postinc2,f,c
 16453  0124B4  22DE               	addwfc	postinc2,f,c
 16454                           
 16455                           ;stkvar	_b @ sp[(-13)+-4]
 16456  0124B6  0EF1               	movlw	241
 16457  0124B8  24E1               	addwf	fsr1l,w,c
 16458  0124BA  6ED9               	movwf	fsr2l,c
 16459  0124BC  0EFF               	movlw	255
 16460  0124BE  20E2               	addwfc	fsr1h,w,c
 16461  0124C0  6EDA               	movwf	fsr2h,c
 16462  0124C2  50DF               	movf	indf2,w,c
 16463  0124C4  6E3E               	movwf	(btemp+11)^0,c
 16464                           
 16465                           ;stkvar	_a @ sp[(-13)+-8]
 16466  0124C6  0EEB               	movlw	-21
 16467  0124C8  50E3               	movf	plusw1,w,c
 16468  0124CA  023E               	mulwf	(btemp+11)^0,c
 16469                           
 16470                           ;stkvar	_temp @ sp[(-13)+8]
 16471  0124CC  0EFB               	movlw	-5
 16472  0124CE  006F FFCF FFE3     	movff	prodl,plusw1
 16473  0124D4  0EFC               	movlw	-4
 16474  0124D6  006F FFD3 FFE3     	movff	prodh,plusw1
 16475                           
 16476                           ;stkvar	_grs @ sp[(-13)+4]
 16477  0124DC  50E1               	movf	fsr1l,w,c
 16478  0124DE  0FF7               	addlw	-9
 16479  0124E0  6ED9               	movwf	fsr2l,c
 16480  0124E2  50E2               	movf	fsr1h,w,c
 16481  0124E4  6EDA               	movwf	fsr2h,c
 16482  0124E6  0EFF               	movlw	255
 16483  0124E8  22DA               	addwfc	fsr2h,f,c
 16484                           
 16485                           ;stkvar	_temp @ sp[(-13)+8]
 16486  0124EA  0EFB               	movlw	-5
 16487  0124EC  50E3               	movf	plusw1,w,c
 16488  0124EE  26DE               	addwf	postinc2,f,c
 16489  0124F0  0E00               	movlw	0
 16490  0124F2  22DE               	addwfc	postinc2,f,c
 16491  0124F4  22DE               	addwfc	postinc2,f,c
 16492  0124F6  22DE               	addwfc	postinc2,f,c
 16493                           
 16494                           ;stkvar	_prod @ sp[(-13)+0]
 16495  0124F8  50E1               	movf	fsr1l,w,c
 16496  0124FA  0FF3               	addlw	-13
 16497  0124FC  6ED9               	movwf	fsr2l,c
 16498  0124FE  50E2               	movf	fsr1h,w,c
 16499  012500  6EDA               	movwf	fsr2h,c
 16500  012502  0EFF               	movlw	255
 16501  012504  22DA               	addwfc	fsr2h,f,c
 16502                           
 16503                           ;stkvar	_temp @ sp[(-13)+8]
 16504  012506  0EFC               	movlw	252
 16505  012508  24E1               	addwf	fsr1l,w,c
 16506  01250A  6EE9               	movwf	fsr0l,c
 16507  01250C  0EFF               	movlw	255
 16508  01250E  20E2               	addwfc	fsr1h,w,c
 16509  012510  6EEA               	movwf	fsr0h,c
 16510  012512  50EF               	movf	indf0,w,c
 16511  012514  26DE               	addwf	postinc2,f,c
 16512  012516  0E00               	movlw	0
 16513  012518  22DE               	addwfc	postinc2,f,c
 16514  01251A  22DE               	addwfc	postinc2,f,c
 16515  01251C  22DE               	addwfc	postinc2,f,c
 16516                           
 16517                           ;stkvar	_grs @ sp[(-13)+4]
 16518  01251E  50E1               	movf	fsr1l,w,c
 16519  012520  0FF7               	addlw	-9
 16520  012522  6ED9               	movwf	fsr2l,c
 16521  012524  50E2               	movf	fsr1h,w,c
 16522  012526  6EDA               	movwf	fsr2h,c
 16523  012528  0EFF               	movlw	255
 16524  01252A  22DA               	addwfc	fsr2h,f,c
 16525  01252C  0E08               	movlw	8
 16526  01252E                     u6015:
 16527  01252E  90D8               	bcf	status,0,c
 16528  012530  36DE               	rlcf	postinc2,f,c
 16529  012532  36DE               	rlcf	postinc2,f,c
 16530  012534  36DE               	rlcf	postinc2,f,c
 16531  012536  36DD               	rlcf	postdec2,f,c
 16532  012538  52DD               	movf	postdec2,f,c
 16533  01253A  52DD               	movf	postdec2,f,c
 16534  01253C  2EE8               	decfsz	wreg,f,c
 16535  01253E  D7F7               	goto	u6015
 16536                           
 16537                           ;stkvar	_b @ sp[(-13)+-4]
 16538  012540  0EF0               	movlw	240
 16539  012542  24E1               	addwf	fsr1l,w,c
 16540  012544  6ED9               	movwf	fsr2l,c
 16541  012546  0EFF               	movlw	255
 16542  012548  20E2               	addwfc	fsr1h,w,c
 16543  01254A  6EDA               	movwf	fsr2h,c
 16544  01254C  50DF               	movf	indf2,w,c
 16545  01254E  6E3E               	movwf	(btemp+11)^0,c
 16546                           
 16547                           ;stkvar	_a @ sp[(-13)+-8]
 16548  012550  0EEB               	movlw	-21
 16549  012552  50E3               	movf	plusw1,w,c
 16550  012554  023E               	mulwf	(btemp+11)^0,c
 16551                           
 16552                           ;stkvar	_temp @ sp[(-13)+8]
 16553  012556  0EFB               	movlw	-5
 16554  012558  006F FFCF FFE3     	movff	prodl,plusw1
 16555  01255E  0EFC               	movlw	-4
 16556  012560  006F FFD3 FFE3     	movff	prodh,plusw1
 16557                           
 16558                           ;stkvar	_temp @ sp[(-13)+8]
 16559  012566  0EFB               	movlw	-5
 16560  012568  006F FF8C  F03D    	movff	plusw1,btemp+10
 16561  01256E  0EFC               	movlw	-4
 16562  012570  006F FF8C  F03E    	movff	plusw1,btemp+11
 16563                           
 16564                           ;stkvar	_grs @ sp[(-13)+4]
 16565  012576  50E1               	movf	fsr1l,w,c
 16566  012578  0FF7               	addlw	-9
 16567  01257A  6ED9               	movwf	fsr2l,c
 16568  01257C  50E2               	movf	fsr1h,w,c
 16569  01257E  6EDA               	movwf	fsr2h,c
 16570  012580  0EFF               	movlw	255
 16571  012582  22DA               	addwfc	fsr2h,f,c
 16572  012584  503D               	movf	(btemp+10)^0,w,c
 16573  012586  26DE               	addwf	postinc2,f,c
 16574  012588  503E               	movf	(btemp+11)^0,w,c
 16575  01258A  22DE               	addwfc	postinc2,f,c
 16576  01258C  0E00               	movlw	0
 16577  01258E  22DE               	addwfc	postinc2,f,c
 16578  012590  22DE               	addwfc	postinc2,f,c
 16579                           
 16580                           ;stkvar	_b @ sp[(-13)+-4]
 16581  012592  0EEF               	movlw	-17
 16582  012594  006F FF8C  F03E    	movff	plusw1,btemp+11
 16583                           
 16584                           ;stkvar	_a @ sp[(-13)+-8]
 16585  01259A  0EEC               	movlw	236
 16586  01259C  24E1               	addwf	fsr1l,w,c
 16587  01259E  6ED9               	movwf	fsr2l,c
 16588  0125A0  0EFF               	movlw	255
 16589  0125A2  20E2               	addwfc	fsr1h,w,c
 16590  0125A4  6EDA               	movwf	fsr2h,c
 16591  0125A6  50DF               	movf	indf2,w,c
 16592  0125A8  023E               	mulwf	(btemp+11)^0,c
 16593                           
 16594                           ;stkvar	_temp @ sp[(-13)+8]
 16595  0125AA  0EFB               	movlw	-5
 16596  0125AC  006F FFCF FFE3     	movff	prodl,plusw1
 16597  0125B2  0EFC               	movlw	-4
 16598  0125B4  006F FFD3 FFE3     	movff	prodh,plusw1
 16599                           
 16600                           ;stkvar	_temp @ sp[(-13)+8]
 16601  0125BA  0EFB               	movlw	-5
 16602  0125BC  006F FF8C  F03D    	movff	plusw1,btemp+10
 16603  0125C2  0EFC               	movlw	-4
 16604  0125C4  006F FF8C  F03E    	movff	plusw1,btemp+11
 16605                           
 16606                           ;stkvar	_grs @ sp[(-13)+4]
 16607  0125CA  50E1               	movf	fsr1l,w,c
 16608  0125CC  0FF7               	addlw	-9
 16609  0125CE  6ED9               	movwf	fsr2l,c
 16610  0125D0  50E2               	movf	fsr1h,w,c
 16611  0125D2  6EDA               	movwf	fsr2h,c
 16612  0125D4  0EFF               	movlw	255
 16613  0125D6  22DA               	addwfc	fsr2h,f,c
 16614  0125D8  503D               	movf	(btemp+10)^0,w,c
 16615  0125DA  26DE               	addwf	postinc2,f,c
 16616  0125DC  503E               	movf	(btemp+11)^0,w,c
 16617  0125DE  22DE               	addwfc	postinc2,f,c
 16618  0125E0  0E00               	movlw	0
 16619  0125E2  22DE               	addwfc	postinc2,f,c
 16620  0125E4  22DE               	addwfc	postinc2,f,c
 16621                           
 16622                           ;stkvar	_grs @ sp[(-13)+4]
 16623  0125E6  50E1               	movf	fsr1l,w,c
 16624  0125E8  0FF7               	addlw	-9
 16625  0125EA  6ED9               	movwf	fsr2l,c
 16626  0125EC  50E2               	movf	fsr1h,w,c
 16627  0125EE  6EDA               	movwf	fsr2h,c
 16628  0125F0  0EFF               	movlw	255
 16629  0125F2  22DA               	addwfc	fsr2h,f,c
 16630  0125F4  0E08               	movlw	8
 16631  0125F6                     u6025:
 16632  0125F6  90D8               	bcf	status,0,c
 16633  0125F8  36DE               	rlcf	postinc2,f,c
 16634  0125FA  36DE               	rlcf	postinc2,f,c
 16635  0125FC  36DE               	rlcf	postinc2,f,c
 16636  0125FE  36DD               	rlcf	postdec2,f,c
 16637  012600  52DD               	movf	postdec2,f,c
 16638  012602  52DD               	movf	postdec2,f,c
 16639  012604  2EE8               	decfsz	wreg,f,c
 16640  012606  D7F7               	goto	u6025
 16641                           
 16642                           ;stkvar	_b @ sp[(-13)+-4]
 16643  012608  0EEF               	movlw	-17
 16644  01260A  006F FF8C  F03E    	movff	plusw1,btemp+11
 16645                           
 16646                           ;stkvar	_a @ sp[(-13)+-8]
 16647  012610  0EEB               	movlw	-21
 16648  012612  50E3               	movf	plusw1,w,c
 16649  012614  023E               	mulwf	(btemp+11)^0,c
 16650                           
 16651                           ;stkvar	_temp @ sp[(-13)+8]
 16652  012616  0EFB               	movlw	-5
 16653  012618  006F FFCF FFE3     	movff	prodl,plusw1
 16654  01261E  0EFC               	movlw	-4
 16655  012620  006F FFD3 FFE3     	movff	prodh,plusw1
 16656                           
 16657                           ;stkvar	_temp @ sp[(-13)+8]
 16658  012626  0EFB               	movlw	-5
 16659  012628  006F FF8C  F03D    	movff	plusw1,btemp+10
 16660  01262E  0EFC               	movlw	-4
 16661  012630  006F FF8C  F03E    	movff	plusw1,btemp+11
 16662                           
 16663                           ;stkvar	_grs @ sp[(-13)+4]
 16664  012636  50E1               	movf	fsr1l,w,c
 16665  012638  0FF7               	addlw	-9
 16666  01263A  6ED9               	movwf	fsr2l,c
 16667  01263C  50E2               	movf	fsr1h,w,c
 16668  01263E  6EDA               	movwf	fsr2h,c
 16669  012640  0EFF               	movlw	255
 16670  012642  22DA               	addwfc	fsr2h,f,c
 16671  012644  503D               	movf	(btemp+10)^0,w,c
 16672  012646  26DE               	addwf	postinc2,f,c
 16673  012648  503E               	movf	(btemp+11)^0,w,c
 16674  01264A  22DE               	addwfc	postinc2,f,c
 16675  01264C  0E00               	movlw	0
 16676  01264E  22DE               	addwfc	postinc2,f,c
 16677  012650  22DE               	addwfc	postinc2,f,c
 16678                           
 16679                           ;stkvar	_b @ sp[(-13)+-4]
 16680  012652  0EF0               	movlw	240
 16681  012654  24E1               	addwf	fsr1l,w,c
 16682  012656  6ED9               	movwf	fsr2l,c
 16683  012658  0EFF               	movlw	255
 16684  01265A  20E2               	addwfc	fsr1h,w,c
 16685  01265C  6EDA               	movwf	fsr2h,c
 16686  01265E  50DF               	movf	indf2,w,c
 16687  012660  6E3E               	movwf	(btemp+11)^0,c
 16688                           
 16689                           ;stkvar	_a @ sp[(-13)+-8]
 16690  012662  0EED               	movlw	237
 16691  012664  24E1               	addwf	fsr1l,w,c
 16692  012666  6ED9               	movwf	fsr2l,c
 16693  012668  0EFF               	movlw	255
 16694  01266A  20E2               	addwfc	fsr1h,w,c
 16695  01266C  6EDA               	movwf	fsr2h,c
 16696  01266E  50DF               	movf	indf2,w,c
 16697  012670  023E               	mulwf	(btemp+11)^0,c
 16698                           
 16699                           ;stkvar	_temp @ sp[(-13)+8]
 16700  012672  0EFB               	movlw	-5
 16701  012674  006F FFCF FFE3     	movff	prodl,plusw1
 16702  01267A  0EFC               	movlw	-4
 16703  01267C  006F FFD3 FFE3     	movff	prodh,plusw1
 16704                           
 16705                           ;stkvar	_temp @ sp[(-13)+8]
 16706  012682  0EFB               	movlw	-5
 16707  012684  006F FF8C  F03D    	movff	plusw1,btemp+10
 16708  01268A  0EFC               	movlw	-4
 16709  01268C  006F FF8C  F03E    	movff	plusw1,btemp+11
 16710                           
 16711                           ;stkvar	_prod @ sp[(-13)+0]
 16712  012692  50E1               	movf	fsr1l,w,c
 16713  012694  0FF3               	addlw	-13
 16714  012696  6ED9               	movwf	fsr2l,c
 16715  012698  50E2               	movf	fsr1h,w,c
 16716  01269A  6EDA               	movwf	fsr2h,c
 16717  01269C  0EFF               	movlw	255
 16718  01269E  22DA               	addwfc	fsr2h,f,c
 16719  0126A0  503D               	movf	(btemp+10)^0,w,c
 16720  0126A2  26DE               	addwf	postinc2,f,c
 16721  0126A4  503E               	movf	(btemp+11)^0,w,c
 16722  0126A6  22DE               	addwfc	postinc2,f,c
 16723  0126A8  0E00               	movlw	0
 16724  0126AA  22DE               	addwfc	postinc2,f,c
 16725  0126AC  22DE               	addwfc	postinc2,f,c
 16726                           
 16727                           ;stkvar	_b @ sp[(-13)+-4]
 16728  0126AE  0EF1               	movlw	241
 16729  0126B0  24E1               	addwf	fsr1l,w,c
 16730  0126B2  6ED9               	movwf	fsr2l,c
 16731  0126B4  0EFF               	movlw	255
 16732  0126B6  20E2               	addwfc	fsr1h,w,c
 16733  0126B8  6EDA               	movwf	fsr2h,c
 16734  0126BA  50DF               	movf	indf2,w,c
 16735  0126BC  6E3E               	movwf	(btemp+11)^0,c
 16736                           
 16737                           ;stkvar	_a @ sp[(-13)+-8]
 16738  0126BE  0EEC               	movlw	236
 16739  0126C0  24E1               	addwf	fsr1l,w,c
 16740  0126C2  6ED9               	movwf	fsr2l,c
 16741  0126C4  0EFF               	movlw	255
 16742  0126C6  20E2               	addwfc	fsr1h,w,c
 16743  0126C8  6EDA               	movwf	fsr2h,c
 16744  0126CA  50DF               	movf	indf2,w,c
 16745  0126CC  023E               	mulwf	(btemp+11)^0,c
 16746                           
 16747                           ;stkvar	_temp @ sp[(-13)+8]
 16748  0126CE  0EFB               	movlw	-5
 16749  0126D0  006F FFCF FFE3     	movff	prodl,plusw1
 16750  0126D6  0EFC               	movlw	-4
 16751  0126D8  006F FFD3 FFE3     	movff	prodh,plusw1
 16752                           
 16753                           ;stkvar	_temp @ sp[(-13)+8]
 16754  0126DE  0EFB               	movlw	-5
 16755  0126E0  006F FF8C  F03D    	movff	plusw1,btemp+10
 16756  0126E6  0EFC               	movlw	-4
 16757  0126E8  006F FF8C  F03E    	movff	plusw1,btemp+11
 16758                           
 16759                           ;stkvar	_prod @ sp[(-13)+0]
 16760  0126EE  50E1               	movf	fsr1l,w,c
 16761  0126F0  0FF3               	addlw	-13
 16762  0126F2  6ED9               	movwf	fsr2l,c
 16763  0126F4  50E2               	movf	fsr1h,w,c
 16764  0126F6  6EDA               	movwf	fsr2h,c
 16765  0126F8  0EFF               	movlw	255
 16766  0126FA  22DA               	addwfc	fsr2h,f,c
 16767  0126FC  503D               	movf	(btemp+10)^0,w,c
 16768  0126FE  26DE               	addwf	postinc2,f,c
 16769  012700  503E               	movf	(btemp+11)^0,w,c
 16770  012702  22DE               	addwfc	postinc2,f,c
 16771  012704  0E00               	movlw	0
 16772  012706  22DE               	addwfc	postinc2,f,c
 16773  012708  22DE               	addwfc	postinc2,f,c
 16774                           
 16775                           ;stkvar	_b @ sp[(-13)+-4]
 16776  01270A  0EF1               	movlw	241
 16777  01270C  24E1               	addwf	fsr1l,w,c
 16778  01270E  6ED9               	movwf	fsr2l,c
 16779  012710  0EFF               	movlw	255
 16780  012712  20E2               	addwfc	fsr1h,w,c
 16781  012714  6EDA               	movwf	fsr2h,c
 16782  012716  50DF               	movf	indf2,w,c
 16783  012718  6E3E               	movwf	(btemp+11)^0,c
 16784                           
 16785                           ;stkvar	_a @ sp[(-13)+-8]
 16786  01271A  0EED               	movlw	237
 16787  01271C  24E1               	addwf	fsr1l,w,c
 16788  01271E  6ED9               	movwf	fsr2l,c
 16789  012720  0EFF               	movlw	255
 16790  012722  20E2               	addwfc	fsr1h,w,c
 16791  012724  6EDA               	movwf	fsr2h,c
 16792  012726  50DF               	movf	indf2,w,c
 16793  012728  023E               	mulwf	(btemp+11)^0,c
 16794                           
 16795                           ;stkvar	_temp @ sp[(-13)+8]
 16796  01272A  0EFB               	movlw	-5
 16797  01272C  006F FFCF FFE3     	movff	prodl,plusw1
 16798  012732  0EFC               	movlw	-4
 16799  012734  006F FFD3 FFE3     	movff	prodh,plusw1
 16800                           
 16801                           ;stkvar	_temp @ sp[(-13)+8]
 16802  01273A  0EFB               	movlw	-5
 16803  01273C  006F FF8C  F03D    	movff	plusw1,btemp+10
 16804  012742  0EFC               	movlw	-4
 16805  012744  006F FF8C  F03E    	movff	plusw1,btemp+11
 16806  01274A  503D               	movf	(btemp+10)^0,w,c
 16807  01274C  6E37               	movwf	(btemp+4)^0,c
 16808  01274E  503E               	movf	(btemp+11)^0,w,c
 16809  012750  6E38               	movwf	(btemp+5)^0,c
 16810  012752  6A39               	clrf	(btemp+6)^0,c
 16811  012754  6A3A               	clrf	(btemp+7)^0,c
 16812  012756  0060  F0E4  F03A   	movff	btemp+6,btemp+7
 16813  01275C  0060  F0E0  F039   	movff	btemp+5,btemp+6
 16814  012762  0060  F0DC  F038   	movff	btemp+4,btemp+5
 16815  012768  6A37               	clrf	(btemp+4)^0,c
 16816                           
 16817                           ;stkvar	_prod @ sp[(-13)+0]
 16818  01276A  50E1               	movf	fsr1l,w,c
 16819  01276C  0FF3               	addlw	-13
 16820  01276E  6ED9               	movwf	fsr2l,c
 16821  012770  50E2               	movf	fsr1h,w,c
 16822  012772  6EDA               	movwf	fsr2h,c
 16823  012774  0EFF               	movlw	255
 16824  012776  22DA               	addwfc	fsr2h,f,c
 16825  012778  5037               	movf	(btemp+4)^0,w,c
 16826  01277A  26DE               	addwf	postinc2,f,c
 16827  01277C  5038               	movf	(btemp+5)^0,w,c
 16828  01277E  22DE               	addwfc	postinc2,f,c
 16829  012780  5039               	movf	(btemp+6)^0,w,c
 16830  012782  22DE               	addwfc	postinc2,f,c
 16831  012784  503A               	movf	(btemp+7)^0,w,c
 16832  012786  22DE               	addwfc	postinc2,f,c
 16833                           
 16834                           ;stkvar	_prod @ sp[(-13)+0]
 16835  012788  50E1               	movf	fsr1l,w,c
 16836  01278A  0FF3               	addlw	-13
 16837  01278C  6ED9               	movwf	fsr2l,c
 16838  01278E  50E2               	movf	fsr1h,w,c
 16839  012790  6EDA               	movwf	fsr2h,c
 16840  012792  0EFF               	movlw	255
 16841  012794  22DA               	addwfc	fsr2h,f,c
 16842                           
 16843                           ;stkvar	_grs @ sp[(-13)+4]
 16844  012796  0EFA               	movlw	250
 16845  012798  24E1               	addwf	fsr1l,w,c
 16846  01279A  6EE9               	movwf	fsr0l,c
 16847  01279C  0EFF               	movlw	255
 16848  01279E  20E2               	addwfc	fsr1h,w,c
 16849  0127A0  6EEA               	movwf	fsr0h,c
 16850  0127A2  50EF               	movf	indf0,w,c
 16851  0127A4  26DE               	addwf	postinc2,f,c
 16852  0127A6  0E00               	movlw	0
 16853  0127A8  22DE               	addwfc	postinc2,f,c
 16854  0127AA  22DE               	addwfc	postinc2,f,c
 16855  0127AC  22DE               	addwfc	postinc2,f,c
 16856                           
 16857                           ;stkvar	_grs @ sp[(-13)+4]
 16858  0127AE  50E1               	movf	fsr1l,w,c
 16859  0127B0  0FF7               	addlw	-9
 16860  0127B2  6ED9               	movwf	fsr2l,c
 16861  0127B4  50E2               	movf	fsr1h,w,c
 16862  0127B6  6EDA               	movwf	fsr2h,c
 16863  0127B8  0EFF               	movlw	255
 16864  0127BA  22DA               	addwfc	fsr2h,f,c
 16865  0127BC  0E08               	movlw	8
 16866  0127BE                     u6035:
 16867  0127BE  90D8               	bcf	status,0,c
 16868  0127C0  36DE               	rlcf	postinc2,f,c
 16869  0127C2  36DE               	rlcf	postinc2,f,c
 16870  0127C4  36DE               	rlcf	postinc2,f,c
 16871  0127C6  36DD               	rlcf	postdec2,f,c
 16872  0127C8  52DD               	movf	postdec2,f,c
 16873  0127CA  52DD               	movf	postdec2,f,c
 16874  0127CC  2EE8               	decfsz	wreg,f,c
 16875  0127CE  D7F7               	goto	u6035
 16876  0127D0  0E82               	movlw	130
 16877  0127D2  6E3D               	movwf	(btemp+10)^0,c
 16878  0127D4  0EFF               	movlw	255
 16879  0127D6  6E3E               	movwf	(btemp+11)^0,c
 16880                           
 16881                           ;stkvar	_bexp @ sp[(-13)+10]
 16882  0127D8  0EFD               	movlw	-3
 16883  0127DA  50E3               	movf	plusw1,w,c
 16884  0127DC  6E3B               	movwf	(btemp+8)^0,c
 16885  0127DE  6A3C               	clrf	(btemp+9)^0,c
 16886                           
 16887                           ;stkvar	_aexp @ sp[(-13)+11]
 16888  0127E0  0EFE               	movlw	-2
 16889  0127E2  50E3               	movf	plusw1,w,c
 16890  0127E4  263B               	addwf	(btemp+8)^0,f,c
 16891  0127E6  0E00               	movlw	0
 16892  0127E8  223C               	addwfc	(btemp+9)^0,f,c
 16893  0127EA  503D               	movf	(btemp+10)^0,w,c
 16894  0127EC  263B               	addwf	(btemp+8)^0,f,c
 16895  0127EE  503E               	movf	(btemp+11)^0,w,c
 16896  0127F0  223C               	addwfc	(btemp+9)^0,f,c
 16897                           
 16898                           ;stkvar	_temp @ sp[(-13)+8]
 16899  0127F2  0EFB               	movlw	-5
 16900  0127F4  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 16901  0127FA  0EFC               	movlw	-4
 16902  0127FC  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 16903  012802  D021               	goto	l6848
 16904  012804                     l6838:
 16905                           
 16906                           ;stkvar	_prod @ sp[(-13)+0]
 16907  012804  90D8               	bcf	status,0,c
 16908  012806  0EF3               	movlw	-13
 16909  012808  36E3               	rlcf	plusw1,f,c
 16910  01280A  0EF4               	movlw	-12
 16911  01280C  36E3               	rlcf	plusw1,f,c
 16912  01280E  0EF5               	movlw	-11
 16913  012810  36E3               	rlcf	plusw1,f,c
 16914  012812  0EF6               	movlw	-10
 16915  012814  36E3               	rlcf	plusw1,f,c
 16916                           
 16917                           ;stkvar	_grs @ sp[(-13)+4]
 16918  012816  0EFA               	movlw	-6
 16919  012818  AEE3               	btfss	plusw1,7,c
 16920  01281A  D002               	goto	l6844
 16921                           
 16922                           ;stkvar	_prod @ sp[(-13)+0]
 16923  01281C  0EF3               	movlw	-13
 16924  01281E  80E3               	bsf	plusw1,0,c
 16925  012820                     l6844:
 16926                           
 16927                           ;stkvar	_grs @ sp[(-13)+4]
 16928  012820  90D8               	bcf	status,0,c
 16929  012822  0EF7               	movlw	-9
 16930  012824  36E3               	rlcf	plusw1,f,c
 16931  012826  0EF8               	movlw	-8
 16932  012828  36E3               	rlcf	plusw1,f,c
 16933  01282A  0EF9               	movlw	-7
 16934  01282C  36E3               	rlcf	plusw1,f,c
 16935  01282E  0EFA               	movlw	-6
 16936  012830  36E3               	rlcf	plusw1,f,c
 16937                           
 16938                           ;stkvar	_temp @ sp[(-13)+8]
 16939  012832  50E1               	movf	fsr1l,w,c
 16940  012834  0FFB               	addlw	-5
 16941  012836  6ED9               	movwf	fsr2l,c
 16942  012838  50E2               	movf	fsr1h,w,c
 16943  01283A  6EDA               	movwf	fsr2h,c
 16944  01283C  0EFF               	movlw	255
 16945  01283E  22DA               	addwfc	fsr2h,f,c
 16946  012840  06DE               	decf	postinc2,f,c
 16947  012842  0E00               	movlw	0
 16948  012844  5ADD               	subwfb	postdec2,f,c
 16949  012846                     l6848:
 16950                           
 16951                           ;stkvar	_prod @ sp[(-13)+0]
 16952  012846  0EF5               	movlw	-11
 16953  012848  AEE3               	btfss	plusw1,7,c
 16954  01284A  D7DC               	goto	l6838
 16955                           
 16956                           ;stkvar	_aexp @ sp[(-13)+11]
 16957  01284C  0EFE               	movlw	-2
 16958  01284E  6AE3               	clrf	plusw1,c
 16959                           
 16960                           ;stkvar	_grs @ sp[(-13)+4]
 16961  012850  0EFA               	movlw	-6
 16962  012852  AEE3               	btfss	plusw1,7,c
 16963  012854  D020               	goto	l6862
 16964                           
 16965                           ;stkvar	_grs @ sp[(-13)+4]
 16966  012856  50E1               	movf	fsr1l,w,c
 16967  012858  0FF7               	addlw	-9
 16968  01285A  6ED9               	movwf	fsr2l,c
 16969  01285C  50E2               	movf	fsr1h,w,c
 16970  01285E  6EDA               	movwf	fsr2h,c
 16971  012860  0EFF               	movlw	255
 16972  012862  22DA               	addwfc	fsr2h,f,c
 16973  012864  0EFF               	movlw	255
 16974  012866  14DE               	andwf	postinc2,w,c
 16975  012868  6E3B               	movwf	(btemp+8)^0,c
 16976  01286A  0EFF               	movlw	255
 16977  01286C  14DE               	andwf	postinc2,w,c
 16978  01286E  6E3C               	movwf	(btemp+9)^0,c
 16979  012870  0EFF               	movlw	255
 16980  012872  14DE               	andwf	postinc2,w,c
 16981  012874  6E3D               	movwf	(btemp+10)^0,c
 16982  012876  0E7F               	movlw	127
 16983  012878  14DE               	andwf	postinc2,w,c
 16984  01287A  6E3E               	movwf	(btemp+11)^0,c
 16985  01287C  503B               	movf	(btemp+8)^0,w,c
 16986  01287E  103C               	iorwf	(btemp+9)^0,w,c
 16987  012880  103D               	iorwf	(btemp+10)^0,w,c
 16988  012882  103E               	iorwf	(btemp+11)^0,w,c
 16989  012884  B4D8               	btfsc	status,2,c
 16990  012886  D004               	goto	l6858
 16991  012888                     u6070:
 16992                           
 16993                           ;stkvar	_aexp @ sp[(-13)+11]
 16994  012888  0EFE               	movlw	-2
 16995  01288A  6AE3               	clrf	plusw1,c
 16996  01288C  2AE3               	incf	plusw1,f,c
 16997  01288E  D003               	goto	l6862
 16998  012890                     l6858:
 16999                           
 17000                           ;stkvar	_prod @ sp[(-13)+0]
 17001  012890  0EF3               	movlw	-13
 17002  012892  B0E3               	btfsc	plusw1,0,c
 17003  012894  D7F9               	goto	u6070
 17004  012896                     l6862:
 17005                           
 17006                           ;stkvar	_aexp @ sp[(-13)+11]
 17007  012896  0EFE               	movlw	-2
 17008  012898  50E3               	movf	plusw1,w,c
 17009  01289A  B4D8               	btfsc	status,2,c
 17010  01289C  D036               	goto	l6872
 17011                           
 17012                           ;stkvar	_prod @ sp[(-13)+0]
 17013  01289E  50E1               	movf	fsr1l,w,c
 17014  0128A0  0FF3               	addlw	-13
 17015  0128A2  6ED9               	movwf	fsr2l,c
 17016  0128A4  50E2               	movf	fsr1h,w,c
 17017  0128A6  6EDA               	movwf	fsr2h,c
 17018  0128A8  0EFF               	movlw	255
 17019  0128AA  22DA               	addwfc	fsr2h,f,c
 17020  0128AC  2ADE               	incf	postinc2,f,c
 17021  0128AE  0E00               	movlw	0
 17022  0128B0  22DE               	addwfc	postinc2,f,c
 17023  0128B2  22DE               	addwfc	postinc2,f,c
 17024  0128B4  22DE               	addwfc	postinc2,f,c
 17025                           
 17026                           ;stkvar	_prod @ sp[(-13)+0]
 17027  0128B6  0EF6               	movlw	-10
 17028  0128B8  A0E3               	btfss	plusw1,0,c
 17029  0128BA  D027               	goto	l6872
 17030  0128BC  0E01               	movlw	1
 17031  0128BE  6E3E               	movwf	(btemp+11)^0,c
 17032                           
 17033                           ;stkvar	_prod @ sp[(-13)+0]
 17034  0128C0  50E1               	movf	fsr1l,w,c
 17035  0128C2  0FF3               	addlw	-13
 17036  0128C4  6ED9               	movwf	fsr2l,c
 17037  0128C6  50E2               	movf	fsr1h,w,c
 17038  0128C8  6EDA               	movwf	fsr2h,c
 17039  0128CA  0EFF               	movlw	255
 17040  0128CC  22DA               	addwfc	fsr2h,f,c
 17041  0128CE  283E               	incf	(btemp+11)^0,w,c
 17042  0128D0  52DE               	movf	postinc2,f,c
 17043  0128D2  D008               	goto	u6110
 17044  0128D4                     u6115:
 17045  0128D4  52DE               	movf	postinc2,f,c
 17046  0128D6  90D8               	bcf	status,0,c
 17047  0128D8  BEDC               	btfsc	preinc2,7,c
 17048  0128DA  80D8               	bsf	status,0,c
 17049  0128DC  32DD               	rrcf	postdec2,f,c
 17050  0128DE  32DD               	rrcf	postdec2,f,c
 17051  0128E0  32DD               	rrcf	postdec2,f,c
 17052  0128E2  32DE               	rrcf	postinc2,f,c
 17053  0128E4                     u6110:
 17054  0128E4  2EE8               	decfsz	wreg,f,c
 17055  0128E6  D7F6               	goto	u6115
 17056                           
 17057                           ;stkvar	_temp @ sp[(-13)+8]
 17058  0128E8  0EFB               	movlw	-5
 17059  0128EA  50E3               	movf	plusw1,w,c
 17060  0128EC  0F01               	addlw	1
 17061  0128EE  6E33               	movwf	btemp^0,c
 17062  0128F0  0EFB               	movlw	-5
 17063  0128F2  0060  F0CF  FFE3   	movff	btemp,plusw1
 17064  0128F8  6A33               	clrf	btemp^0,c
 17065  0128FA  0EFC               	movlw	-4
 17066  0128FC  50E3               	movf	plusw1,w,c
 17067  0128FE  2033               	addwfc	btemp^0,w,c
 17068  012900  6E33               	movwf	btemp^0,c
 17069  012902  0EFC               	movlw	-4
 17070  012904  0060  F0CF  FFE3   	movff	btemp,plusw1
 17071  01290A                     l6872:
 17072                           
 17073                           ;stkvar	_temp @ sp[(-13)+8]
 17074  01290A  0EFC               	movlw	-4
 17075  01290C  BEE3               	btfsc	plusw1,7,c
 17076  01290E  D020               	goto	l6876
 17077  012910  0EFC               	movlw	-4
 17078  012912  50E3               	movf	plusw1,w,c
 17079  012914  E104               	bnz	u6120
 17080  012916  0EFB               	movlw	-5
 17081  012918  28E3               	incf	plusw1,w,c
 17082  01291A  A0D8               	btfss	status,0,c
 17083  01291C  D019               	goto	l6876
 17084  01291E                     u6120:
 17085  01291E  0E00               	movlw	0
 17086  012920  6E3B               	movwf	(btemp+8)^0,c
 17087  012922  0E00               	movlw	0
 17088  012924  6E3C               	movwf	(btemp+9)^0,c
 17089  012926  0E80               	movlw	128
 17090  012928  6E3D               	movwf	(btemp+10)^0,c
 17091  01292A  0E7F               	movlw	127
 17092  01292C  6E3E               	movwf	(btemp+11)^0,c
 17093                           
 17094                           ;stkvar	_prod @ sp[(-13)+0]
 17095  01292E  0EF3               	movlw	-13
 17096  012930  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 17097  012936  0EF4               	movlw	-12
 17098  012938  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 17099  01293E  0EF5               	movlw	-11
 17100  012940  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 17101  012946  0EF6               	movlw	-10
 17102  012948  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 17103  01294E  D044               	goto	l6892
 17104  012950                     l6876:
 17105                           
 17106                           ;stkvar	_temp @ sp[(-13)+8]
 17107  012950  0EFC               	movlw	-4
 17108  012952  BEE3               	btfsc	plusw1,7,c
 17109  012954  D007               	goto	u6130
 17110  012956  0EFC               	movlw	-4
 17111  012958  50E3               	movf	plusw1,w,c
 17112  01295A  E10F               	bnz	l6882
 17113  01295C  0EFB               	movlw	-5
 17114  01295E  04E3               	decf	plusw1,w,c
 17115  012960  B0D8               	btfsc	status,0,c
 17116  012962  D00B               	goto	l6882
 17117  012964                     u6130:
 17118                           
 17119                           ;stkvar	_prod @ sp[(-13)+0]
 17120  012964  0EF3               	movlw	-13
 17121  012966  6AE3               	clrf	plusw1,c
 17122  012968  0EF4               	movlw	-12
 17123  01296A  6AE3               	clrf	plusw1,c
 17124  01296C  0EF5               	movlw	-11
 17125  01296E  6AE3               	clrf	plusw1,c
 17126  012970  0EF6               	movlw	-10
 17127  012972  6AE3               	clrf	plusw1,c
 17128                           
 17129                           ;stkvar	_sign @ sp[(-13)+12]
 17130  012974  0EFF               	movlw	-1
 17131  012976  6AE3               	clrf	plusw1,c
 17132  012978  D02F               	goto	l6892
 17133  01297A                     l6882:
 17134                           
 17135                           ;stkvar	_temp @ sp[(-13)+8]
 17136                           ;stkvar	_bexp @ sp[(-13)+10]
 17137  01297A  0EFB               	movlw	-5
 17138  01297C  006F FF8C  F033    	movff	plusw1,btemp
 17139  012982  0EFD               	movlw	-3
 17140  012984  0060  F0CF  FFE3   	movff	btemp,plusw1
 17141                           
 17142                           ;stkvar	_prod @ sp[(-13)+0]
 17143  01298A  50E1               	movf	fsr1l,w,c
 17144  01298C  0FF3               	addlw	-13
 17145  01298E  6ED9               	movwf	fsr2l,c
 17146  012990  50E2               	movf	fsr1h,w,c
 17147  012992  6EDA               	movwf	fsr2h,c
 17148  012994  0EFF               	movlw	255
 17149  012996  22DA               	addwfc	fsr2h,f,c
 17150  012998  0EFF               	movlw	255
 17151  01299A  16DE               	andwf	postinc2,f,c
 17152  01299C  0EFF               	movlw	255
 17153  01299E  16DE               	andwf	postinc2,f,c
 17154  0129A0  0E7F               	movlw	127
 17155  0129A2  16DE               	andwf	postinc2,f,c
 17156  0129A4  0E00               	movlw	0
 17157  0129A6  16DE               	andwf	postinc2,f,c
 17158                           
 17159                           ;stkvar	_bexp @ sp[(-13)+10]
 17160  0129A8  0EFD               	movlw	-3
 17161  0129AA  A0E3               	btfss	plusw1,0,c
 17162  0129AC  D008               	goto	l6890
 17163                           
 17164                           ;stkvar	_prod @ sp[(-13)+0]
 17165  0129AE  0EF5               	movlw	245
 17166  0129B0  24E1               	addwf	fsr1l,w,c
 17167  0129B2  6ED9               	movwf	fsr2l,c
 17168  0129B4  0EFF               	movlw	255
 17169  0129B6  20E2               	addwfc	fsr1h,w,c
 17170  0129B8  6EDA               	movwf	fsr2h,c
 17171  0129BA  0E00               	movlw	0
 17172  0129BC  8EDB               	bsf	plusw2,7,c
 17173  0129BE                     l6890:
 17174                           
 17175                           ;stkvar	_prod @ sp[(-13)+0]
 17176  0129BE  0EF6               	movlw	246
 17177  0129C0  24E1               	addwf	fsr1l,w,c
 17178  0129C2  6ED9               	movwf	fsr2l,c
 17179  0129C4  0EFF               	movlw	255
 17180  0129C6  20E2               	addwfc	fsr1h,w,c
 17181  0129C8  6EDA               	movwf	fsr2h,c
 17182                           
 17183                           ;stkvar	_bexp @ sp[(-13)+10]
 17184  0129CA  0EFD               	movlw	-3
 17185  0129CC  006F FF8C  F03E    	movff	plusw1,btemp+11
 17186  0129D2  90D8               	bcf	status,0,c
 17187  0129D4  303E               	rrcf	(btemp+11)^0,w,c
 17188  0129D6  6EDF               	movwf	indf2,c
 17189  0129D8                     l6892:
 17190                           
 17191                           ;stkvar	_sign @ sp[(-13)+12]
 17192  0129D8  0EFF               	movlw	-1
 17193  0129DA  006F FF8C  F03E    	movff	plusw1,btemp+11
 17194                           
 17195                           ;stkvar	_prod @ sp[(-13)+0]
 17196  0129E0  0EF6               	movlw	246
 17197  0129E2  24E1               	addwf	fsr1l,w,c
 17198  0129E4  6ED9               	movwf	fsr2l,c
 17199  0129E6  0EFF               	movlw	255
 17200  0129E8  20E2               	addwfc	fsr1h,w,c
 17201  0129EA  6EDA               	movwf	fsr2h,c
 17202  0129EC  503E               	movf	(btemp+11)^0,w,c
 17203  0129EE  12DF               	iorwf	indf2,f,c
 17204                           
 17205                           ;stkvar	_prod @ sp[(-13)+0]
 17206  0129F0  0EF3               	movlw	-13
 17207  0129F2  006F FF8C  F033    	movff	plusw1,btemp
 17208  0129F8  0EF4               	movlw	-12
 17209  0129FA  006F FF8C  F034    	movff	plusw1,btemp+1
 17210  012A00  0EF5               	movlw	-11
 17211  012A02  006F FF8C  F035    	movff	plusw1,btemp+2
 17212  012A08  0EF6               	movlw	-10
 17213  012A0A  006F FF8C  F036    	movff	plusw1,btemp+3
 17214  012A10                     l2643:
 17215                           
 17216                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17217  012A10  0EEB               	movlw	235
 17218  012A12  26E1               	addwf	fsr1l,f,c
 17219  012A14  0EFF               	movlw	255
 17220  012A16  22E2               	addwfc	fsr1h,f,c
 17221  012A18  0012               	return		;funcret
 17222  012A1A                     __end_of___flmul:
 17223                           	opt callstack 0
 17224                           
 17225 ;; *************** function ___flge *****************
 17226 ;; Defined at:
 17227 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 17228 ;; Parameters:    Size  Location     Type
 17229 ;;  ff1             4  [STACK] unsigned char 
 17230 ;;  ff2             4  [STACK] unsigned char 
 17231 ;; Auto vars:     Size  Location     Type
 17232 ;;		None
 17233 ;; Return value:  Size  Location     Type
 17234 ;;		None               void
 17235 ;; Registers used:
 17236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17237 ;; Tracked objects:
 17238 ;;		On entry : 0/0
 17239 ;;		On exit  : 0/0
 17240 ;;		Unchanged: 0/0
 17241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17246 ;;Total ram usage:        0 bytes
 17247 ;; Hardware stack levels used:    1
 17248 ;; Hardware stack levels required when called:    6
 17249 ;; This function calls:
 17250 ;;		Nothing
 17251 ;; This function is called by:
 17252 ;;		_efgtoa
 17253 ;; This function uses a reentrant model
 17254 ;;
 17255                           
 17256                           	psect	text57
 17257  01690E                     __ptext57:
 17258                           	opt callstack 0
 17259  01690E                     ___flge:
 17260                           	opt callstack 17
 17261                           
 17262                           ;stkvar	_ff1 @ sp[(0)+-4]
 17263                           
 17264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17265                           ;incstack = 0
 17266  01690E  50E1               	movf	fsr1l,w,c
 17267  016910  0FFC               	addlw	-4
 17268  016912  6ED9               	movwf	fsr2l,c
 17269  016914  50E2               	movf	fsr1h,w,c
 17270  016916  6EDA               	movwf	fsr2h,c
 17271  016918  0EFF               	movlw	255
 17272  01691A  22DA               	addwfc	fsr2h,f,c
 17273  01691C  0E00               	movlw	0
 17274  01691E  14DE               	andwf	postinc2,w,c
 17275  016920  6E3B               	movwf	(btemp+8)^0,c
 17276  016922  0E00               	movlw	0
 17277  016924  14DE               	andwf	postinc2,w,c
 17278  016926  6E3C               	movwf	(btemp+9)^0,c
 17279  016928  0E80               	movlw	128
 17280  01692A  14DE               	andwf	postinc2,w,c
 17281  01692C  6E3D               	movwf	(btemp+10)^0,c
 17282  01692E  0E7F               	movlw	127
 17283  016930  14DE               	andwf	postinc2,w,c
 17284  016932  6E3E               	movwf	(btemp+11)^0,c
 17285  016934  503B               	movf	(btemp+8)^0,w,c
 17286  016936  103C               	iorwf	(btemp+9)^0,w,c
 17287  016938  103D               	iorwf	(btemp+10)^0,w,c
 17288  01693A  103E               	iorwf	(btemp+11)^0,w,c
 17289  01693C  A4D8               	btfss	status,2,c
 17290  01693E  D008               	goto	l7008
 17291                           
 17292                           ;stkvar	_ff1 @ sp[(0)+-4]
 17293  016940  0EFC               	movlw	-4
 17294  016942  6AE3               	clrf	plusw1,c
 17295  016944  0EFD               	movlw	-3
 17296  016946  6AE3               	clrf	plusw1,c
 17297  016948  0EFE               	movlw	-2
 17298  01694A  6AE3               	clrf	plusw1,c
 17299  01694C  0EFF               	movlw	-1
 17300  01694E  6AE3               	clrf	plusw1,c
 17301  016950                     l7008:
 17302                           
 17303                           ;stkvar	_ff2 @ sp[(0)+-8]
 17304  016950  50E1               	movf	fsr1l,w,c
 17305  016952  0FF8               	addlw	-8
 17306  016954  6ED9               	movwf	fsr2l,c
 17307  016956  50E2               	movf	fsr1h,w,c
 17308  016958  6EDA               	movwf	fsr2h,c
 17309  01695A  0EFF               	movlw	255
 17310  01695C  22DA               	addwfc	fsr2h,f,c
 17311  01695E  0E00               	movlw	0
 17312  016960  14DE               	andwf	postinc2,w,c
 17313  016962  6E3B               	movwf	(btemp+8)^0,c
 17314  016964  0E00               	movlw	0
 17315  016966  14DE               	andwf	postinc2,w,c
 17316  016968  6E3C               	movwf	(btemp+9)^0,c
 17317  01696A  0E80               	movlw	128
 17318  01696C  14DE               	andwf	postinc2,w,c
 17319  01696E  6E3D               	movwf	(btemp+10)^0,c
 17320  016970  0E7F               	movlw	127
 17321  016972  14DE               	andwf	postinc2,w,c
 17322  016974  6E3E               	movwf	(btemp+11)^0,c
 17323  016976  503B               	movf	(btemp+8)^0,w,c
 17324  016978  103C               	iorwf	(btemp+9)^0,w,c
 17325  01697A  103D               	iorwf	(btemp+10)^0,w,c
 17326  01697C  103E               	iorwf	(btemp+11)^0,w,c
 17327  01697E  A4D8               	btfss	status,2,c
 17328  016980  D008               	goto	l2288
 17329                           
 17330                           ;stkvar	_ff2 @ sp[(0)+-8]
 17331  016982  0EF8               	movlw	-8
 17332  016984  6AE3               	clrf	plusw1,c
 17333  016986  0EF9               	movlw	-7
 17334  016988  6AE3               	clrf	plusw1,c
 17335  01698A  0EFA               	movlw	-6
 17336  01698C  6AE3               	clrf	plusw1,c
 17337  01698E  0EFB               	movlw	-5
 17338  016990  6AE3               	clrf	plusw1,c
 17339  016992                     l2288:
 17340                           
 17341                           ;stkvar	_ff1 @ sp[(0)+-4]
 17342  016992  0EFF               	movlw	-1
 17343  016994  AEE3               	btfss	plusw1,7,c
 17344  016996  D024               	goto	l7014
 17345                           
 17346                           ;stkvar	_ff1 @ sp[(0)+-4]
 17347  016998  0E00               	movlw	0
 17348  01699A  6E3B               	movwf	(btemp+8)^0,c
 17349  01699C  0E00               	movlw	0
 17350  01699E  6E3C               	movwf	(btemp+9)^0,c
 17351  0169A0  0E00               	movlw	0
 17352  0169A2  6E3D               	movwf	(btemp+10)^0,c
 17353  0169A4  0E80               	movlw	128
 17354  0169A6  6E3E               	movwf	(btemp+11)^0,c
 17355  0169A8  0EFC               	movlw	-4
 17356  0169AA  50E3               	movf	plusw1,w,c
 17357  0169AC  5E3B               	subwf	(btemp+8)^0,f,c
 17358  0169AE  0EFD               	movlw	-3
 17359  0169B0  50E3               	movf	plusw1,w,c
 17360  0169B2  5A3C               	subwfb	(btemp+9)^0,f,c
 17361  0169B4  0EFE               	movlw	-2
 17362  0169B6  50E3               	movf	plusw1,w,c
 17363  0169B8  5A3D               	subwfb	(btemp+10)^0,f,c
 17364  0169BA  0EFF               	movlw	-1
 17365  0169BC  50E3               	movf	plusw1,w,c
 17366  0169BE  5A3E               	subwfb	(btemp+11)^0,f,c
 17367                           
 17368                           ;stkvar	_ff1 @ sp[(0)+-4]
 17369  0169C0  0EFC               	movlw	-4
 17370  0169C2  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 17371  0169C8  0EFD               	movlw	-3
 17372  0169CA  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 17373  0169D0  0EFE               	movlw	-2
 17374  0169D2  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 17375  0169D8  0EFF               	movlw	-1
 17376  0169DA  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 17377  0169E0                     l7014:
 17378                           
 17379                           ;stkvar	_ff2 @ sp[(0)+-8]
 17380  0169E0  0EFB               	movlw	-5
 17381  0169E2  AEE3               	btfss	plusw1,7,c
 17382  0169E4  D024               	goto	l7018
 17383                           
 17384                           ;stkvar	_ff2 @ sp[(0)+-8]
 17385  0169E6  0E00               	movlw	0
 17386  0169E8  6E3B               	movwf	(btemp+8)^0,c
 17387  0169EA  0E00               	movlw	0
 17388  0169EC  6E3C               	movwf	(btemp+9)^0,c
 17389  0169EE  0E00               	movlw	0
 17390  0169F0  6E3D               	movwf	(btemp+10)^0,c
 17391  0169F2  0E80               	movlw	128
 17392  0169F4  6E3E               	movwf	(btemp+11)^0,c
 17393  0169F6  0EF8               	movlw	-8
 17394  0169F8  50E3               	movf	plusw1,w,c
 17395  0169FA  5E3B               	subwf	(btemp+8)^0,f,c
 17396  0169FC  0EF9               	movlw	-7
 17397  0169FE  50E3               	movf	plusw1,w,c
 17398  016A00  5A3C               	subwfb	(btemp+9)^0,f,c
 17399  016A02  0EFA               	movlw	-6
 17400  016A04  50E3               	movf	plusw1,w,c
 17401  016A06  5A3D               	subwfb	(btemp+10)^0,f,c
 17402  016A08  0EFB               	movlw	-5
 17403  016A0A  50E3               	movf	plusw1,w,c
 17404  016A0C  5A3E               	subwfb	(btemp+11)^0,f,c
 17405                           
 17406                           ;stkvar	_ff2 @ sp[(0)+-8]
 17407  016A0E  0EF8               	movlw	-8
 17408  016A10  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 17409  016A16  0EF9               	movlw	-7
 17410  016A18  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 17411  016A1E  0EFA               	movlw	-6
 17412  016A20  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 17413  016A26  0EFB               	movlw	-5
 17414  016A28  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 17415  016A2E                     l7018:
 17416                           
 17417                           ;stkvar	_ff1 @ sp[(0)+-4]
 17418  016A2E  0EFF               	movlw	-1
 17419  016A30  7EE3               	btg	plusw1,7,c
 17420                           
 17421                           ;stkvar	_ff2 @ sp[(0)+-8]
 17422  016A32  0EFB               	movlw	-5
 17423  016A34  7EE3               	btg	plusw1,7,c
 17424                           
 17425                           ;stkvar	_ff2 @ sp[(0)+-8]
 17426                           ;stkvar	_ff1 @ sp[(0)+-4]
 17427  016A36  50E1               	movf	fsr1l,w,c
 17428  016A38  0FFC               	addlw	-4
 17429  016A3A  6ED9               	movwf	fsr2l,c
 17430  016A3C  50E2               	movf	fsr1h,w,c
 17431  016A3E  6EDA               	movwf	fsr2h,c
 17432  016A40  0EFF               	movlw	255
 17433  016A42  22DA               	addwfc	fsr2h,f,c
 17434  016A44  0EF8               	movlw	-8
 17435  016A46  50E3               	movf	plusw1,w,c
 17436  016A48  5CDE               	subwf	postinc2,w,c
 17437  016A4A  0EF9               	movlw	-7
 17438  016A4C  50E3               	movf	plusw1,w,c
 17439  016A4E  58DE               	subwfb	postinc2,w,c
 17440  016A50  0EFA               	movlw	-6
 17441  016A52  50E3               	movf	plusw1,w,c
 17442  016A54  58DE               	subwfb	postinc2,w,c
 17443  016A56  0EFB               	movlw	-5
 17444  016A58  50E3               	movf	plusw1,w,c
 17445  016A5A  58DE               	subwfb	postinc2,w,c
 17446  016A5C  B0D8               	btfsc	status,0,c
 17447  016A5E  D002               	goto	l7026
 17448  016A60  9033               	bcf	btemp& (0+255),0,c
 17449  016A62  D001               	goto	l2295
 17450  016A64                     l7026:
 17451  016A64  8033               	bsf	btemp& (0+255),0,c
 17452  016A66                     l2295:
 17453                           
 17454                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17455  016A66  0EF8               	movlw	248
 17456  016A68  26E1               	addwf	fsr1l,f,c
 17457  016A6A  0EFF               	movlw	255
 17458  016A6C  22E2               	addwfc	fsr1h,f,c
 17459  016A6E  0012               	return		;funcret
 17460  016A70                     __end_of___flge:
 17461                           	opt callstack 0
 17462                           
 17463 ;; *************** function ___fleq *****************
 17464 ;; Defined at:
 17465 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17466 ;; Parameters:    Size  Location     Type
 17467 ;;  ff1             4  [STACK] unsigned char 
 17468 ;;  ff2             4  [STACK] unsigned char 
 17469 ;; Auto vars:     Size  Location     Type
 17470 ;;		None
 17471 ;; Return value:  Size  Location     Type
 17472 ;;		None               void
 17473 ;; Registers used:
 17474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17475 ;; Tracked objects:
 17476 ;;		On entry : 0/0
 17477 ;;		On exit  : 0/0
 17478 ;;		Unchanged: 0/0
 17479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17484 ;;Total ram usage:        0 bytes
 17485 ;; Hardware stack levels used:    1
 17486 ;; Hardware stack levels required when called:    6
 17487 ;; This function calls:
 17488 ;;		Nothing
 17489 ;; This function is called by:
 17490 ;;		_efgtoa
 17491 ;; This function uses a reentrant model
 17492 ;;
 17493                           
 17494                           	psect	text58
 17495  0176E4                     __ptext58:
 17496                           	opt callstack 0
 17497  0176E4                     ___fleq:
 17498                           	opt callstack 17
 17499                           
 17500                           ;stkvar	_ff1 @ sp[(0)+-4]
 17501                           
 17502                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17503                           ;incstack = 0
 17504  0176E4  50E1               	movf	fsr1l,w,c
 17505  0176E6  0FFC               	addlw	-4
 17506  0176E8  6ED9               	movwf	fsr2l,c
 17507  0176EA  50E2               	movf	fsr1h,w,c
 17508  0176EC  6EDA               	movwf	fsr2h,c
 17509  0176EE  0EFF               	movlw	255
 17510  0176F0  22DA               	addwfc	fsr2h,f,c
 17511  0176F2  0E00               	movlw	0
 17512  0176F4  14DE               	andwf	postinc2,w,c
 17513  0176F6  6E3B               	movwf	(btemp+8)^0,c
 17514  0176F8  0E00               	movlw	0
 17515  0176FA  14DE               	andwf	postinc2,w,c
 17516  0176FC  6E3C               	movwf	(btemp+9)^0,c
 17517  0176FE  0E80               	movlw	128
 17518  017700  14DE               	andwf	postinc2,w,c
 17519  017702  6E3D               	movwf	(btemp+10)^0,c
 17520  017704  0E7F               	movlw	127
 17521  017706  14DE               	andwf	postinc2,w,c
 17522  017708  6E3E               	movwf	(btemp+11)^0,c
 17523  01770A  503B               	movf	(btemp+8)^0,w,c
 17524  01770C  103C               	iorwf	(btemp+9)^0,w,c
 17525  01770E  103D               	iorwf	(btemp+10)^0,w,c
 17526  017710  103E               	iorwf	(btemp+11)^0,w,c
 17527  017712  A4D8               	btfss	status,2,c
 17528  017714  D008               	goto	l6992
 17529                           
 17530                           ;stkvar	_ff1 @ sp[(0)+-4]
 17531  017716  0EFC               	movlw	-4
 17532  017718  6AE3               	clrf	plusw1,c
 17533  01771A  0EFD               	movlw	-3
 17534  01771C  6AE3               	clrf	plusw1,c
 17535  01771E  0EFE               	movlw	-2
 17536  017720  6AE3               	clrf	plusw1,c
 17537  017722  0EFF               	movlw	-1
 17538  017724  6AE3               	clrf	plusw1,c
 17539  017726                     l6992:
 17540                           
 17541                           ;stkvar	_ff2 @ sp[(0)+-8]
 17542  017726  50E1               	movf	fsr1l,w,c
 17543  017728  0FF8               	addlw	-8
 17544  01772A  6ED9               	movwf	fsr2l,c
 17545  01772C  50E2               	movf	fsr1h,w,c
 17546  01772E  6EDA               	movwf	fsr2h,c
 17547  017730  0EFF               	movlw	255
 17548  017732  22DA               	addwfc	fsr2h,f,c
 17549  017734  0E00               	movlw	0
 17550  017736  14DE               	andwf	postinc2,w,c
 17551  017738  6E3B               	movwf	(btemp+8)^0,c
 17552  01773A  0E00               	movlw	0
 17553  01773C  14DE               	andwf	postinc2,w,c
 17554  01773E  6E3C               	movwf	(btemp+9)^0,c
 17555  017740  0E80               	movlw	128
 17556  017742  14DE               	andwf	postinc2,w,c
 17557  017744  6E3D               	movwf	(btemp+10)^0,c
 17558  017746  0E7F               	movlw	127
 17559  017748  14DE               	andwf	postinc2,w,c
 17560  01774A  6E3E               	movwf	(btemp+11)^0,c
 17561  01774C  503B               	movf	(btemp+8)^0,w,c
 17562  01774E  103C               	iorwf	(btemp+9)^0,w,c
 17563  017750  103D               	iorwf	(btemp+10)^0,w,c
 17564  017752  103E               	iorwf	(btemp+11)^0,w,c
 17565  017754  A4D8               	btfss	status,2,c
 17566  017756  D008               	goto	l6996
 17567                           
 17568                           ;stkvar	_ff2 @ sp[(0)+-8]
 17569  017758  0EF8               	movlw	-8
 17570  01775A  6AE3               	clrf	plusw1,c
 17571  01775C  0EF9               	movlw	-7
 17572  01775E  6AE3               	clrf	plusw1,c
 17573  017760  0EFA               	movlw	-6
 17574  017762  6AE3               	clrf	plusw1,c
 17575  017764  0EFB               	movlw	-5
 17576  017766  6AE3               	clrf	plusw1,c
 17577  017768                     l6996:
 17578                           
 17579                           ;stkvar	_ff2 @ sp[(0)+-8]
 17580                           ;stkvar	_ff1 @ sp[(0)+-4]
 17581  017768  50E1               	movf	fsr1l,w,c
 17582  01776A  0FFC               	addlw	-4
 17583  01776C  6ED9               	movwf	fsr2l,c
 17584  01776E  50E2               	movf	fsr1h,w,c
 17585  017770  6EDA               	movwf	fsr2h,c
 17586  017772  0EFF               	movlw	255
 17587  017774  22DA               	addwfc	fsr2h,f,c
 17588  017776  0EF8               	movlw	-8
 17589  017778  50E3               	movf	plusw1,w,c
 17590  01777A  18DE               	xorwf	postinc2,w,c
 17591  01777C  E10D               	bnz	u6310
 17592  01777E  0EF9               	movlw	-7
 17593  017780  50E3               	movf	plusw1,w,c
 17594  017782  18DE               	xorwf	postinc2,w,c
 17595  017784  E109               	bnz	u6310
 17596  017786  0EFA               	movlw	-6
 17597  017788  50E3               	movf	plusw1,w,c
 17598  01778A  18DE               	xorwf	postinc2,w,c
 17599  01778C  E105               	bnz	u6310
 17600  01778E  0EFB               	movlw	-5
 17601  017790  50E3               	movf	plusw1,w,c
 17602  017792  18DE               	xorwf	postinc2,w,c
 17603  017794  B4D8               	btfsc	status,2,c
 17604  017796  D002               	goto	l7000
 17605  017798                     u6310:
 17606  017798  9033               	bcf	btemp& (0+255),0,c
 17607  01779A  D001               	goto	l2284
 17608  01779C                     l7000:
 17609  01779C  8033               	bsf	btemp& (0+255),0,c
 17610  01779E                     l2284:
 17611                           
 17612                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17613  01779E  0EF8               	movlw	248
 17614  0177A0  26E1               	addwf	fsr1l,f,c
 17615  0177A2  0EFF               	movlw	255
 17616  0177A4  22E2               	addwfc	fsr1h,f,c
 17617  0177A6  0012               	return		;funcret
 17618  0177A8                     __end_of___fleq:
 17619                           	opt callstack 0
 17620                           
 17621 ;; *************** function ___fldiv *****************
 17622 ;; Defined at:
 17623 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 17624 ;; Parameters:    Size  Location     Type
 17625 ;;  b               4  [STACK] unsigned char 
 17626 ;;  a               4  [STACK] unsigned char 
 17627 ;; Auto vars:     Size  Location     Type
 17628 ;;  grs             4  [STACK] unsigned long 
 17629 ;;  rem             4  [STACK] unsigned long 
 17630 ;;  new_exp         2  [STACK] short 
 17631 ;;  aexp            1  [STACK] unsigned char 
 17632 ;;  bexp            1  [STACK] unsigned char 
 17633 ;;  sign            1  [STACK] unsigned char 
 17634 ;; Return value:  Size  Location     Type
 17635 ;;                  4  [STACK] unsigned char 
 17636 ;; Registers used:
 17637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17638 ;; Tracked objects:
 17639 ;;		On entry : 0/39
 17640 ;;		On exit  : 0/0
 17641 ;;		Unchanged: 0/0
 17642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17647 ;;Total ram usage:        0 bytes
 17648 ;; Hardware stack levels used:    1
 17649 ;; Hardware stack levels required when called:    6
 17650 ;; This function calls:
 17651 ;;		Nothing
 17652 ;; This function is called by:
 17653 ;;		_conv_raw_result
 17654 ;;		_efgtoa
 17655 ;; This function uses a reentrant model
 17656 ;;
 17657                           
 17658                           	psect	text59
 17659  01375C                     __ptext59:
 17660                           	opt callstack 0
 17661  01375C                     ___fldiv:
 17662                           	opt callstack 0
 17663                           
 17664                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17665  01375C  0E0D               	movlw	13
 17666  01375E  26E1               	addwf	fsr1l,f,c
 17667  013760  0E00               	movlw	0
 17668  013762  22E2               	addwfc	fsr1h,f,c
 17669                           
 17670                           ;stkvar	_b @ sp[(-13)+-4]
 17671                           
 17672                           ;incstack = 0
 17673  013764  0EF2               	movlw	242
 17674  013766  24E1               	addwf	fsr1l,w,c
 17675  013768  6ED9               	movwf	fsr2l,c
 17676  01376A  0EFF               	movlw	255
 17677  01376C  20E2               	addwfc	fsr1h,w,c
 17678  01376E  6EDA               	movwf	fsr2h,c
 17679  013770  50DF               	movf	indf2,w,c
 17680  013772  6E3E               	movwf	(btemp+11)^0,c
 17681  013774  0E80               	movlw	128
 17682  013776  163E               	andwf	(btemp+11)^0,f,c
 17683                           
 17684                           ;stkvar	_sign @ sp[(-13)+12]
 17685  013778  0EFF               	movlw	-1
 17686  01377A  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 17687                           
 17688                           ;stkvar	_b @ sp[(-13)+-4]
 17689  013780  0EF2               	movlw	242
 17690  013782  24E1               	addwf	fsr1l,w,c
 17691  013784  6ED9               	movwf	fsr2l,c
 17692  013786  0EFF               	movlw	255
 17693  013788  20E2               	addwfc	fsr1h,w,c
 17694  01378A  6EDA               	movwf	fsr2h,c
 17695  01378C  50DF               	movf	indf2,w,c
 17696  01378E  6E3E               	movwf	(btemp+11)^0,c
 17697  013790  90D8               	bcf	status,0,c
 17698  013792  343E               	rlcf	(btemp+11)^0,w,c
 17699  013794  6E3D               	movwf	(btemp+10)^0,c
 17700                           
 17701                           ;stkvar	_bexp @ sp[(-13)+11]
 17702  013796  0EFE               	movlw	-2
 17703  013798  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 17704                           
 17705                           ;stkvar	_b @ sp[(-13)+-4]
 17706  01379E  0EF1               	movlw	241
 17707  0137A0  24E1               	addwf	fsr1l,w,c
 17708  0137A2  6ED9               	movwf	fsr2l,c
 17709  0137A4  0EFF               	movlw	255
 17710  0137A6  20E2               	addwfc	fsr1h,w,c
 17711  0137A8  6EDA               	movwf	fsr2h,c
 17712  0137AA  AEDF               	btfss	indf2,7,c
 17713  0137AC  D002               	goto	l6594
 17714                           
 17715                           ;stkvar	_bexp @ sp[(-13)+11]
 17716  0137AE  0EFE               	movlw	-2
 17717  0137B0  80E3               	bsf	plusw1,0,c
 17718  0137B2                     l6594:
 17719                           
 17720                           ;stkvar	_bexp @ sp[(-13)+11]
 17721  0137B2  0EFE               	movlw	-2
 17722  0137B4  50E3               	movf	plusw1,w,c
 17723  0137B6  B4D8               	btfsc	status,2,c
 17724  0137B8  D027               	goto	l6604
 17725                           
 17726                           ;stkvar	_bexp @ sp[(-13)+11]
 17727  0137BA  0EFE               	movlw	-2
 17728  0137BC  28E3               	incf	plusw1,w,c
 17729  0137BE  A4D8               	btfss	status,2,c
 17730  0137C0  D018               	goto	l6600
 17731  0137C2  0E00               	movlw	0
 17732  0137C4  6E3B               	movwf	(btemp+8)^0,c
 17733  0137C6  0E00               	movlw	0
 17734  0137C8  6E3C               	movwf	(btemp+9)^0,c
 17735  0137CA  0E00               	movlw	0
 17736  0137CC  6E3D               	movwf	(btemp+10)^0,c
 17737  0137CE  0E00               	movlw	0
 17738  0137D0  6E3E               	movwf	(btemp+11)^0,c
 17739                           
 17740                           ;stkvar	_b @ sp[(-13)+-4]
 17741  0137D2  0EEF               	movlw	-17
 17742  0137D4  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 17743  0137DA  0EF0               	movlw	-16
 17744  0137DC  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 17745  0137E2  0EF1               	movlw	-15
 17746  0137E4  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 17747  0137EA  0EF2               	movlw	-14
 17748  0137EC  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 17749  0137F2                     l6600:
 17750                           
 17751                           ;stkvar	_b @ sp[(-13)+-4]
 17752  0137F2  0EF1               	movlw	-15
 17753  0137F4  8EE3               	bsf	plusw1,7,c
 17754                           
 17755                           ;stkvar	_b @ sp[(-13)+-4]
 17756  0137F6  0EF2               	movlw	242
 17757  0137F8  24E1               	addwf	fsr1l,w,c
 17758  0137FA  6ED9               	movwf	fsr2l,c
 17759  0137FC  0EFF               	movlw	255
 17760  0137FE  20E2               	addwfc	fsr1h,w,c
 17761  013800  6EDA               	movwf	fsr2h,c
 17762  013802  0E00               	movlw	0
 17763  013804  6EDF               	movwf	indf2,c
 17764  013806  D018               	goto	l6606
 17765  013808                     l6604:
 17766  013808  0E00               	movlw	0
 17767  01380A  6E3B               	movwf	(btemp+8)^0,c
 17768  01380C  0E00               	movlw	0
 17769  01380E  6E3C               	movwf	(btemp+9)^0,c
 17770  013810  0E00               	movlw	0
 17771  013812  6E3D               	movwf	(btemp+10)^0,c
 17772  013814  0E00               	movlw	0
 17773  013816  6E3E               	movwf	(btemp+11)^0,c
 17774                           
 17775                           ;stkvar	_b @ sp[(-13)+-4]
 17776  013818  0EEF               	movlw	-17
 17777  01381A  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 17778  013820  0EF0               	movlw	-16
 17779  013822  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 17780  013828  0EF1               	movlw	-15
 17781  01382A  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 17782  013830  0EF2               	movlw	-14
 17783  013832  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 17784  013838                     l6606:
 17785                           
 17786                           ;stkvar	_a @ sp[(-13)+-8]
 17787  013838  0EEE               	movlw	238
 17788  01383A  24E1               	addwf	fsr1l,w,c
 17789  01383C  6ED9               	movwf	fsr2l,c
 17790  01383E  0EFF               	movlw	255
 17791  013840  20E2               	addwfc	fsr1h,w,c
 17792  013842  6EDA               	movwf	fsr2h,c
 17793  013844  50DF               	movf	indf2,w,c
 17794  013846  6E3E               	movwf	(btemp+11)^0,c
 17795  013848  0E80               	movlw	128
 17796  01384A  163E               	andwf	(btemp+11)^0,f,c
 17797                           
 17798                           ;stkvar	_sign @ sp[(-13)+12]
 17799  01384C  50E1               	movf	fsr1l,w,c
 17800  01384E  0FFF               	addlw	-1
 17801  013850  6ED9               	movwf	fsr2l,c
 17802  013852  50E2               	movf	fsr1h,w,c
 17803  013854  6EDA               	movwf	fsr2h,c
 17804  013856  0EFF               	movlw	255
 17805  013858  22DA               	addwfc	fsr2h,f,c
 17806  01385A  503E               	movf	(btemp+11)^0,w,c
 17807  01385C  1ADF               	xorwf	indf2,f,c
 17808                           
 17809                           ;stkvar	_a @ sp[(-13)+-8]
 17810  01385E  0EEE               	movlw	238
 17811  013860  24E1               	addwf	fsr1l,w,c
 17812  013862  6ED9               	movwf	fsr2l,c
 17813  013864  0EFF               	movlw	255
 17814  013866  20E2               	addwfc	fsr1h,w,c
 17815  013868  6EDA               	movwf	fsr2h,c
 17816  01386A  50DF               	movf	indf2,w,c
 17817  01386C  6E3E               	movwf	(btemp+11)^0,c
 17818  01386E  90D8               	bcf	status,0,c
 17819  013870  343E               	rlcf	(btemp+11)^0,w,c
 17820  013872  6E3D               	movwf	(btemp+10)^0,c
 17821                           
 17822                           ;stkvar	_aexp @ sp[(-13)+10]
 17823  013874  0EFD               	movlw	-3
 17824  013876  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 17825                           
 17826                           ;stkvar	_a @ sp[(-13)+-8]
 17827  01387C  0EED               	movlw	237
 17828  01387E  24E1               	addwf	fsr1l,w,c
 17829  013880  6ED9               	movwf	fsr2l,c
 17830  013882  0EFF               	movlw	255
 17831  013884  20E2               	addwfc	fsr1h,w,c
 17832  013886  6EDA               	movwf	fsr2h,c
 17833  013888  AEDF               	btfss	indf2,7,c
 17834  01388A  D002               	goto	l6614
 17835                           
 17836                           ;stkvar	_aexp @ sp[(-13)+10]
 17837  01388C  0EFD               	movlw	-3
 17838  01388E  80E3               	bsf	plusw1,0,c
 17839  013890                     l6614:
 17840                           
 17841                           ;stkvar	_aexp @ sp[(-13)+10]
 17842  013890  0EFD               	movlw	-3
 17843  013892  50E3               	movf	plusw1,w,c
 17844  013894  B4D8               	btfsc	status,2,c
 17845  013896  D027               	goto	l6624
 17846                           
 17847                           ;stkvar	_aexp @ sp[(-13)+10]
 17848  013898  0EFD               	movlw	-3
 17849  01389A  28E3               	incf	plusw1,w,c
 17850  01389C  A4D8               	btfss	status,2,c
 17851  01389E  D018               	goto	l6620
 17852  0138A0  0E00               	movlw	0
 17853  0138A2  6E3B               	movwf	(btemp+8)^0,c
 17854  0138A4  0E00               	movlw	0
 17855  0138A6  6E3C               	movwf	(btemp+9)^0,c
 17856  0138A8  0E00               	movlw	0
 17857  0138AA  6E3D               	movwf	(btemp+10)^0,c
 17858  0138AC  0E00               	movlw	0
 17859  0138AE  6E3E               	movwf	(btemp+11)^0,c
 17860                           
 17861                           ;stkvar	_a @ sp[(-13)+-8]
 17862  0138B0  0EEB               	movlw	-21
 17863  0138B2  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 17864  0138B8  0EEC               	movlw	-20
 17865  0138BA  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 17866  0138C0  0EED               	movlw	-19
 17867  0138C2  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 17868  0138C8  0EEE               	movlw	-18
 17869  0138CA  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 17870  0138D0                     l6620:
 17871                           
 17872                           ;stkvar	_a @ sp[(-13)+-8]
 17873  0138D0  0EED               	movlw	-19
 17874  0138D2  8EE3               	bsf	plusw1,7,c
 17875                           
 17876                           ;stkvar	_a @ sp[(-13)+-8]
 17877  0138D4  0EEE               	movlw	238
 17878  0138D6  24E1               	addwf	fsr1l,w,c
 17879  0138D8  6ED9               	movwf	fsr2l,c
 17880  0138DA  0EFF               	movlw	255
 17881  0138DC  20E2               	addwfc	fsr1h,w,c
 17882  0138DE  6EDA               	movwf	fsr2h,c
 17883  0138E0  0E00               	movlw	0
 17884  0138E2  6EDF               	movwf	indf2,c
 17885  0138E4  D018               	goto	l6626
 17886  0138E6                     l6624:
 17887  0138E6  0E00               	movlw	0
 17888  0138E8  6E3B               	movwf	(btemp+8)^0,c
 17889  0138EA  0E00               	movlw	0
 17890  0138EC  6E3C               	movwf	(btemp+9)^0,c
 17891  0138EE  0E00               	movlw	0
 17892  0138F0  6E3D               	movwf	(btemp+10)^0,c
 17893  0138F2  0E00               	movlw	0
 17894  0138F4  6E3E               	movwf	(btemp+11)^0,c
 17895                           
 17896                           ;stkvar	_a @ sp[(-13)+-8]
 17897  0138F6  0EEB               	movlw	-21
 17898  0138F8  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 17899  0138FE  0EEC               	movlw	-20
 17900  013900  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 17901  013906  0EED               	movlw	-19
 17902  013908  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 17903  01390E  0EEE               	movlw	-18
 17904  013910  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 17905  013916                     l6626:
 17906                           
 17907                           ;stkvar	_a @ sp[(-13)+-8]
 17908  013916  0EEB               	movlw	-21
 17909  013918  50E3               	movf	plusw1,w,c
 17910  01391A  E139               	bnz	l6638
 17911  01391C  0EEC               	movlw	-20
 17912  01391E  50E3               	movf	plusw1,w,c
 17913  013920  E136               	bnz	l6638
 17914  013922  0EED               	movlw	-19
 17915  013924  50E3               	movf	plusw1,w,c
 17916  013926  E133               	bnz	l6638
 17917  013928  0EEE               	movlw	-18
 17918  01392A  50E3               	movf	plusw1,w,c
 17919  01392C  A4D8               	btfss	status,2,c
 17920  01392E  D02F               	goto	l6638
 17921                           
 17922                           ;stkvar	_b @ sp[(-13)+-4]
 17923  013930  0EEF               	movlw	-17
 17924  013932  6AE3               	clrf	plusw1,c
 17925  013934  0EF0               	movlw	-16
 17926  013936  6AE3               	clrf	plusw1,c
 17927  013938  0EF1               	movlw	-15
 17928  01393A  6AE3               	clrf	plusw1,c
 17929  01393C  0EF2               	movlw	-14
 17930  01393E  6AE3               	clrf	plusw1,c
 17931                           
 17932                           ;stkvar	_b @ sp[(-13)+-4]
 17933  013940  0EF1               	movlw	241
 17934  013942  24E1               	addwf	fsr1l,w,c
 17935  013944  6ED9               	movwf	fsr2l,c
 17936  013946  0EFF               	movlw	255
 17937  013948  20E2               	addwfc	fsr1h,w,c
 17938  01394A  6EDA               	movwf	fsr2h,c
 17939  01394C  0E80               	movlw	128
 17940  01394E  12DE               	iorwf	postinc2,f,c
 17941  013950  0E7F               	movlw	127
 17942  013952  12DD               	iorwf	postdec2,f,c
 17943  013954                     l6632:
 17944                           
 17945                           ;stkvar	_sign @ sp[(-13)+12]
 17946  013954  0EFF               	movlw	-1
 17947  013956  006F FF8C  F03E    	movff	plusw1,btemp+11
 17948                           
 17949                           ;stkvar	_b @ sp[(-13)+-4]
 17950  01395C  0EF2               	movlw	242
 17951  01395E  24E1               	addwf	fsr1l,w,c
 17952  013960  6ED9               	movwf	fsr2l,c
 17953  013962  0EFF               	movlw	255
 17954  013964  20E2               	addwfc	fsr1h,w,c
 17955  013966  6EDA               	movwf	fsr2h,c
 17956  013968  503E               	movf	(btemp+11)^0,w,c
 17957  01396A  12DF               	iorwf	indf2,f,c
 17958                           
 17959                           ;stkvar	_b @ sp[(-13)+-4]
 17960  01396C  0EEF               	movlw	-17
 17961  01396E  006F FF8C  F033    	movff	plusw1,btemp
 17962  013974  0EF0               	movlw	-16
 17963  013976  006F FF8C  F034    	movff	plusw1,btemp+1
 17964  01397C  0EF1               	movlw	-15
 17965  01397E  006F FF8C  F035    	movff	plusw1,btemp+2
 17966  013984  0EF2               	movlw	-14
 17967  013986  006F FF8C  F036    	movff	plusw1,btemp+3
 17968  01398C  D19F               	goto	l2607
 17969  01398E                     l6638:
 17970                           
 17971                           ;stkvar	_bexp @ sp[(-13)+11]
 17972  01398E  0EFE               	movlw	-2
 17973  013990  50E3               	movf	plusw1,w,c
 17974  013992  A4D8               	btfss	status,2,c
 17975  013994  D009               	goto	l6646
 17976  013996  0E00               	movlw	0
 17977  013998  6E33               	movwf	btemp^0,c
 17978  01399A  0E00               	movlw	0
 17979  01399C  6E34               	movwf	(btemp+1)^0,c
 17980  01399E  0E00               	movlw	0
 17981  0139A0  6E35               	movwf	(btemp+2)^0,c
 17982  0139A2  0E00               	movlw	0
 17983  0139A4  6E36               	movwf	(btemp+3)^0,c
 17984  0139A6  D192               	goto	l2607
 17985  0139A8                     l6646:
 17986                           
 17987                           ;stkvar	_bexp @ sp[(-13)+11]
 17988  0139A8  0EFE               	movlw	-2
 17989  0139AA  50E3               	movf	plusw1,w,c
 17990  0139AC  6E3D               	movwf	(btemp+10)^0,c
 17991  0139AE  6A3E               	clrf	(btemp+11)^0,c
 17992                           
 17993                           ;stkvar	_aexp @ sp[(-13)+10]
 17994  0139B0  0EFD               	movlw	-3
 17995  0139B2  50E3               	movf	plusw1,w,c
 17996  0139B4  5E3D               	subwf	(btemp+10)^0,f,c
 17997  0139B6  0E00               	movlw	0
 17998  0139B8  5A3E               	subwfb	(btemp+11)^0,f,c
 17999  0139BA  0E7F               	movlw	127
 18000  0139BC  263D               	addwf	(btemp+10)^0,f,c
 18001  0139BE  0E00               	movlw	0
 18002  0139C0  223E               	addwfc	(btemp+11)^0,f,c
 18003                           
 18004                           ;stkvar	_new_exp @ sp[(-13)+8]
 18005  0139C2  0EFB               	movlw	-5
 18006  0139C4  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 18007  0139CA  0EFC               	movlw	-4
 18008  0139CC  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 18009                           
 18010                           ;stkvar	_b @ sp[(-13)+-4]
 18011  0139D2  0EEF               	movlw	-17
 18012  0139D4  006F FF8C  F03B    	movff	plusw1,btemp+8
 18013  0139DA  0EF0               	movlw	-16
 18014  0139DC  006F FF8C  F03C    	movff	plusw1,btemp+9
 18015  0139E2  0EF1               	movlw	-15
 18016  0139E4  006F FF8C  F03D    	movff	plusw1,btemp+10
 18017  0139EA  0EF2               	movlw	-14
 18018  0139EC  006F FF8C  F03E    	movff	plusw1,btemp+11
 18019                           
 18020                           ;stkvar	_rem @ sp[(-13)+4]
 18021  0139F2  0EF7               	movlw	-9
 18022  0139F4  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 18023  0139FA  0EF8               	movlw	-8
 18024  0139FC  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 18025  013A02  0EF9               	movlw	-7
 18026  013A04  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 18027  013A0A  0EFA               	movlw	-6
 18028  013A0C  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 18029                           
 18030                           ;stkvar	_b @ sp[(-13)+-4]
 18031  013A12  0EEF               	movlw	-17
 18032  013A14  6AE3               	clrf	plusw1,c
 18033  013A16  0EF0               	movlw	-16
 18034  013A18  6AE3               	clrf	plusw1,c
 18035  013A1A  0EF1               	movlw	-15
 18036  013A1C  6AE3               	clrf	plusw1,c
 18037  013A1E  0EF2               	movlw	-14
 18038  013A20  6AE3               	clrf	plusw1,c
 18039                           
 18040                           ;stkvar	_grs @ sp[(-13)+0]
 18041  013A22  0EF3               	movlw	-13
 18042  013A24  6AE3               	clrf	plusw1,c
 18043  013A26  0EF4               	movlw	-12
 18044  013A28  6AE3               	clrf	plusw1,c
 18045  013A2A  0EF5               	movlw	-11
 18046  013A2C  6AE3               	clrf	plusw1,c
 18047  013A2E  0EF6               	movlw	-10
 18048  013A30  6AE3               	clrf	plusw1,c
 18049                           
 18050                           ;stkvar	_aexp @ sp[(-13)+10]
 18051  013A32  0EFD               	movlw	-3
 18052  013A34  6AE3               	clrf	plusw1,c
 18053  013A36  D050               	goto	l6674
 18054  013A38                     l6656:
 18055                           
 18056                           ;stkvar	_aexp @ sp[(-13)+10]
 18057  013A38  0EFD               	movlw	-3
 18058  013A3A  50E3               	movf	plusw1,w,c
 18059  013A3C  B4D8               	btfsc	status,2,c
 18060  013A3E  D020               	goto	l6666
 18061                           
 18062                           ;stkvar	_rem @ sp[(-13)+4]
 18063  013A40  90D8               	bcf	status,0,c
 18064  013A42  0EF7               	movlw	-9
 18065  013A44  36E3               	rlcf	plusw1,f,c
 18066  013A46  0EF8               	movlw	-8
 18067  013A48  36E3               	rlcf	plusw1,f,c
 18068  013A4A  0EF9               	movlw	-7
 18069  013A4C  36E3               	rlcf	plusw1,f,c
 18070  013A4E  0EFA               	movlw	-6
 18071  013A50  36E3               	rlcf	plusw1,f,c
 18072                           
 18073                           ;stkvar	_b @ sp[(-13)+-4]
 18074  013A52  90D8               	bcf	status,0,c
 18075  013A54  0EEF               	movlw	-17
 18076  013A56  36E3               	rlcf	plusw1,f,c
 18077  013A58  0EF0               	movlw	-16
 18078  013A5A  36E3               	rlcf	plusw1,f,c
 18079  013A5C  0EF1               	movlw	-15
 18080  013A5E  36E3               	rlcf	plusw1,f,c
 18081  013A60  0EF2               	movlw	-14
 18082  013A62  36E3               	rlcf	plusw1,f,c
 18083                           
 18084                           ;stkvar	_grs @ sp[(-13)+0]
 18085  013A64  0EF6               	movlw	-10
 18086  013A66  AEE3               	btfss	plusw1,7,c
 18087  013A68  D002               	goto	l6664
 18088                           
 18089                           ;stkvar	_b @ sp[(-13)+-4]
 18090  013A6A  0EEF               	movlw	-17
 18091  013A6C  80E3               	bsf	plusw1,0,c
 18092  013A6E                     l6664:
 18093                           
 18094                           ;stkvar	_grs @ sp[(-13)+0]
 18095  013A6E  90D8               	bcf	status,0,c
 18096  013A70  0EF3               	movlw	-13
 18097  013A72  36E3               	rlcf	plusw1,f,c
 18098  013A74  0EF4               	movlw	-12
 18099  013A76  36E3               	rlcf	plusw1,f,c
 18100  013A78  0EF5               	movlw	-11
 18101  013A7A  36E3               	rlcf	plusw1,f,c
 18102  013A7C  0EF6               	movlw	-10
 18103  013A7E  36E3               	rlcf	plusw1,f,c
 18104  013A80                     l6666:
 18105                           
 18106                           ;stkvar	_a @ sp[(-13)+-8]
 18107                           ;stkvar	_rem @ sp[(-13)+4]
 18108  013A80  50E1               	movf	fsr1l,w,c
 18109  013A82  0FF7               	addlw	-9
 18110  013A84  6ED9               	movwf	fsr2l,c
 18111  013A86  50E2               	movf	fsr1h,w,c
 18112  013A88  6EDA               	movwf	fsr2h,c
 18113  013A8A  0EFF               	movlw	255
 18114  013A8C  22DA               	addwfc	fsr2h,f,c
 18115  013A8E  0EEB               	movlw	-21
 18116  013A90  50E3               	movf	plusw1,w,c
 18117  013A92  5CDE               	subwf	postinc2,w,c
 18118  013A94  0EEC               	movlw	-20
 18119  013A96  50E3               	movf	plusw1,w,c
 18120  013A98  58DE               	subwfb	postinc2,w,c
 18121  013A9A  0EED               	movlw	-19
 18122  013A9C  50E3               	movf	plusw1,w,c
 18123  013A9E  58DE               	subwfb	postinc2,w,c
 18124  013AA0  0EEE               	movlw	-18
 18125  013AA2  50E3               	movf	plusw1,w,c
 18126  013AA4  58DE               	subwfb	postinc2,w,c
 18127  013AA6  A0D8               	btfss	status,0,c
 18128  013AA8  D015               	goto	l6672
 18129                           
 18130                           ;stkvar	_grs @ sp[(-13)+0]
 18131  013AAA  0EF6               	movlw	-10
 18132  013AAC  8CE3               	bsf	plusw1,6,c
 18133                           
 18134                           ;stkvar	_a @ sp[(-13)+-8]
 18135                           ;stkvar	_rem @ sp[(-13)+4]
 18136  013AAE  50E1               	movf	fsr1l,w,c
 18137  013AB0  0FF7               	addlw	-9
 18138  013AB2  6ED9               	movwf	fsr2l,c
 18139  013AB4  50E2               	movf	fsr1h,w,c
 18140  013AB6  6EDA               	movwf	fsr2h,c
 18141  013AB8  0EFF               	movlw	255
 18142  013ABA  22DA               	addwfc	fsr2h,f,c
 18143  013ABC  0EEB               	movlw	-21
 18144  013ABE  50E3               	movf	plusw1,w,c
 18145  013AC0  5EDE               	subwf	postinc2,f,c
 18146  013AC2  0EEC               	movlw	-20
 18147  013AC4  50E3               	movf	plusw1,w,c
 18148  013AC6  5ADE               	subwfb	postinc2,f,c
 18149  013AC8  0EED               	movlw	-19
 18150  013ACA  50E3               	movf	plusw1,w,c
 18151  013ACC  5ADE               	subwfb	postinc2,f,c
 18152  013ACE  0EEE               	movlw	-18
 18153  013AD0  50E3               	movf	plusw1,w,c
 18154  013AD2  5ADE               	subwfb	postinc2,f,c
 18155  013AD4                     l6672:
 18156                           
 18157                           ;stkvar	_aexp @ sp[(-13)+10]
 18158  013AD4  0EFD               	movlw	-3
 18159  013AD6  2AE3               	incf	plusw1,f,c
 18160  013AD8                     l6674:
 18161                           
 18162                           ;stkvar	_aexp @ sp[(-13)+10]
 18163  013AD8  0EFD               	movlw	-3
 18164  013ADA  006F FF8C  F033    	movff	plusw1,btemp
 18165  013AE0  0E19               	movlw	25
 18166  013AE2  6433               	cpfsgt	btemp^0,c
 18167  013AE4  D7A9               	goto	l6656
 18168                           
 18169                           ;stkvar	_rem @ sp[(-13)+4]
 18170  013AE6  0EF7               	movlw	-9
 18171  013AE8  50E3               	movf	plusw1,w,c
 18172  013AEA  E10A               	bnz	u5810
 18173  013AEC  0EF8               	movlw	-8
 18174  013AEE  50E3               	movf	plusw1,w,c
 18175  013AF0  E107               	bnz	u5810
 18176  013AF2  0EF9               	movlw	-7
 18177  013AF4  50E3               	movf	plusw1,w,c
 18178  013AF6  E104               	bnz	u5810
 18179  013AF8  0EFA               	movlw	-6
 18180  013AFA  50E3               	movf	plusw1,w,c
 18181  013AFC  B4D8               	btfsc	status,2,c
 18182  013AFE  D024               	goto	l6690
 18183  013B00                     u5810:
 18184                           
 18185                           ;stkvar	_grs @ sp[(-13)+0]
 18186  013B00  0EF3               	movlw	-13
 18187  013B02  80E3               	bsf	plusw1,0,c
 18188  013B04  D021               	goto	l6690
 18189  013B06                     l6680:
 18190                           
 18191                           ;stkvar	_b @ sp[(-13)+-4]
 18192  013B06  90D8               	bcf	status,0,c
 18193  013B08  0EEF               	movlw	-17
 18194  013B0A  36E3               	rlcf	plusw1,f,c
 18195  013B0C  0EF0               	movlw	-16
 18196  013B0E  36E3               	rlcf	plusw1,f,c
 18197  013B10  0EF1               	movlw	-15
 18198  013B12  36E3               	rlcf	plusw1,f,c
 18199  013B14  0EF2               	movlw	-14
 18200  013B16  36E3               	rlcf	plusw1,f,c
 18201                           
 18202                           ;stkvar	_grs @ sp[(-13)+0]
 18203  013B18  0EF6               	movlw	-10
 18204  013B1A  AEE3               	btfss	plusw1,7,c
 18205  013B1C  D002               	goto	l6686
 18206                           
 18207                           ;stkvar	_b @ sp[(-13)+-4]
 18208  013B1E  0EEF               	movlw	-17
 18209  013B20  80E3               	bsf	plusw1,0,c
 18210  013B22                     l6686:
 18211                           
 18212                           ;stkvar	_grs @ sp[(-13)+0]
 18213  013B22  90D8               	bcf	status,0,c
 18214  013B24  0EF3               	movlw	-13
 18215  013B26  36E3               	rlcf	plusw1,f,c
 18216  013B28  0EF4               	movlw	-12
 18217  013B2A  36E3               	rlcf	plusw1,f,c
 18218  013B2C  0EF5               	movlw	-11
 18219  013B2E  36E3               	rlcf	plusw1,f,c
 18220  013B30  0EF6               	movlw	-10
 18221  013B32  36E3               	rlcf	plusw1,f,c
 18222                           
 18223                           ;stkvar	_new_exp @ sp[(-13)+8]
 18224  013B34  50E1               	movf	fsr1l,w,c
 18225  013B36  0FFB               	addlw	-5
 18226  013B38  6ED9               	movwf	fsr2l,c
 18227  013B3A  50E2               	movf	fsr1h,w,c
 18228  013B3C  6EDA               	movwf	fsr2h,c
 18229  013B3E  0EFF               	movlw	255
 18230  013B40  22DA               	addwfc	fsr2h,f,c
 18231  013B42  06DE               	decf	postinc2,f,c
 18232  013B44  0E00               	movlw	0
 18233  013B46  5ADD               	subwfb	postdec2,f,c
 18234  013B48                     l6690:
 18235                           
 18236                           ;stkvar	_b @ sp[(-13)+-4]
 18237  013B48  0EF1               	movlw	-15
 18238  013B4A  AEE3               	btfss	plusw1,7,c
 18239  013B4C  D7DC               	goto	l6680
 18240                           
 18241                           ;stkvar	_aexp @ sp[(-13)+10]
 18242  013B4E  0EFD               	movlw	-3
 18243  013B50  6AE3               	clrf	plusw1,c
 18244                           
 18245                           ;stkvar	_grs @ sp[(-13)+0]
 18246  013B52  0EF6               	movlw	-10
 18247  013B54  AEE3               	btfss	plusw1,7,c
 18248  013B56  D020               	goto	l6704
 18249                           
 18250                           ;stkvar	_grs @ sp[(-13)+0]
 18251  013B58  50E1               	movf	fsr1l,w,c
 18252  013B5A  0FF3               	addlw	-13
 18253  013B5C  6ED9               	movwf	fsr2l,c
 18254  013B5E  50E2               	movf	fsr1h,w,c
 18255  013B60  6EDA               	movwf	fsr2h,c
 18256  013B62  0EFF               	movlw	255
 18257  013B64  22DA               	addwfc	fsr2h,f,c
 18258  013B66  0EFF               	movlw	255
 18259  013B68  14DE               	andwf	postinc2,w,c
 18260  013B6A  6E3B               	movwf	(btemp+8)^0,c
 18261  013B6C  0EFF               	movlw	255
 18262  013B6E  14DE               	andwf	postinc2,w,c
 18263  013B70  6E3C               	movwf	(btemp+9)^0,c
 18264  013B72  0EFF               	movlw	255
 18265  013B74  14DE               	andwf	postinc2,w,c
 18266  013B76  6E3D               	movwf	(btemp+10)^0,c
 18267  013B78  0E7F               	movlw	127
 18268  013B7A  14DE               	andwf	postinc2,w,c
 18269  013B7C  6E3E               	movwf	(btemp+11)^0,c
 18270  013B7E  503B               	movf	(btemp+8)^0,w,c
 18271  013B80  103C               	iorwf	(btemp+9)^0,w,c
 18272  013B82  103D               	iorwf	(btemp+10)^0,w,c
 18273  013B84  103E               	iorwf	(btemp+11)^0,w,c
 18274  013B86  B4D8               	btfsc	status,2,c
 18275  013B88  D004               	goto	l6700
 18276  013B8A                     u5850:
 18277                           
 18278                           ;stkvar	_aexp @ sp[(-13)+10]
 18279  013B8A  0EFD               	movlw	-3
 18280  013B8C  6AE3               	clrf	plusw1,c
 18281  013B8E  2AE3               	incf	plusw1,f,c
 18282  013B90  D003               	goto	l6704
 18283  013B92                     l6700:
 18284                           
 18285                           ;stkvar	_b @ sp[(-13)+-4]
 18286  013B92  0EEF               	movlw	-17
 18287  013B94  B0E3               	btfsc	plusw1,0,c
 18288  013B96  D7F9               	goto	u5850
 18289  013B98                     l6704:
 18290                           
 18291                           ;stkvar	_aexp @ sp[(-13)+10]
 18292  013B98  0EFD               	movlw	-3
 18293  013B9A  50E3               	movf	plusw1,w,c
 18294  013B9C  B4D8               	btfsc	status,2,c
 18295  013B9E  D036               	goto	l6714
 18296                           
 18297                           ;stkvar	_b @ sp[(-13)+-4]
 18298  013BA0  50E1               	movf	fsr1l,w,c
 18299  013BA2  0FEF               	addlw	-17
 18300  013BA4  6ED9               	movwf	fsr2l,c
 18301  013BA6  50E2               	movf	fsr1h,w,c
 18302  013BA8  6EDA               	movwf	fsr2h,c
 18303  013BAA  0EFF               	movlw	255
 18304  013BAC  22DA               	addwfc	fsr2h,f,c
 18305  013BAE  2ADE               	incf	postinc2,f,c
 18306  013BB0  0E00               	movlw	0
 18307  013BB2  22DE               	addwfc	postinc2,f,c
 18308  013BB4  22DE               	addwfc	postinc2,f,c
 18309  013BB6  22DE               	addwfc	postinc2,f,c
 18310                           
 18311                           ;stkvar	_b @ sp[(-13)+-4]
 18312  013BB8  0EF2               	movlw	-14
 18313  013BBA  A0E3               	btfss	plusw1,0,c
 18314  013BBC  D027               	goto	l6714
 18315  013BBE  0E01               	movlw	1
 18316  013BC0  6E3E               	movwf	(btemp+11)^0,c
 18317                           
 18318                           ;stkvar	_b @ sp[(-13)+-4]
 18319  013BC2  50E1               	movf	fsr1l,w,c
 18320  013BC4  0FEF               	addlw	-17
 18321  013BC6  6ED9               	movwf	fsr2l,c
 18322  013BC8  50E2               	movf	fsr1h,w,c
 18323  013BCA  6EDA               	movwf	fsr2h,c
 18324  013BCC  0EFF               	movlw	255
 18325  013BCE  22DA               	addwfc	fsr2h,f,c
 18326  013BD0  283E               	incf	(btemp+11)^0,w,c
 18327  013BD2  52DE               	movf	postinc2,f,c
 18328  013BD4  D008               	goto	u5890
 18329  013BD6                     u5895:
 18330  013BD6  52DE               	movf	postinc2,f,c
 18331  013BD8  90D8               	bcf	status,0,c
 18332  013BDA  BEDC               	btfsc	preinc2,7,c
 18333  013BDC  80D8               	bsf	status,0,c
 18334  013BDE  32DD               	rrcf	postdec2,f,c
 18335  013BE0  32DD               	rrcf	postdec2,f,c
 18336  013BE2  32DD               	rrcf	postdec2,f,c
 18337  013BE4  32DE               	rrcf	postinc2,f,c
 18338  013BE6                     u5890:
 18339  013BE6  2EE8               	decfsz	wreg,f,c
 18340  013BE8  D7F6               	goto	u5895
 18341                           
 18342                           ;stkvar	_new_exp @ sp[(-13)+8]
 18343  013BEA  0EFB               	movlw	-5
 18344  013BEC  50E3               	movf	plusw1,w,c
 18345  013BEE  0F01               	addlw	1
 18346  013BF0  6E33               	movwf	btemp^0,c
 18347  013BF2  0EFB               	movlw	-5
 18348  013BF4  0060  F0CF  FFE3   	movff	btemp,plusw1
 18349  013BFA  6A33               	clrf	btemp^0,c
 18350  013BFC  0EFC               	movlw	-4
 18351  013BFE  50E3               	movf	plusw1,w,c
 18352  013C00  2033               	addwfc	btemp^0,w,c
 18353  013C02  6E33               	movwf	btemp^0,c
 18354  013C04  0EFC               	movlw	-4
 18355  013C06  0060  F0CF  FFE3   	movff	btemp,plusw1
 18356  013C0C                     l6714:
 18357                           
 18358                           ;stkvar	_new_exp @ sp[(-13)+8]
 18359  013C0C  0EFC               	movlw	-4
 18360  013C0E  BEE3               	btfsc	plusw1,7,c
 18361  013C10  D01B               	goto	l6720
 18362  013C12  0EFC               	movlw	-4
 18363  013C14  50E3               	movf	plusw1,w,c
 18364  013C16  E104               	bnz	u5900
 18365  013C18  0EFB               	movlw	-5
 18366  013C1A  28E3               	incf	plusw1,w,c
 18367  013C1C  A0D8               	btfss	status,0,c
 18368  013C1E  D014               	goto	l6720
 18369  013C20                     u5900:
 18370  013C20  0EFF               	movlw	255
 18371  013C22  6E3D               	movwf	(btemp+10)^0,c
 18372  013C24  0E00               	movlw	0
 18373  013C26  6E3E               	movwf	(btemp+11)^0,c
 18374                           
 18375                           ;stkvar	_new_exp @ sp[(-13)+8]
 18376  013C28  0EFB               	movlw	-5
 18377  013C2A  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 18378  013C30  0EFC               	movlw	-4
 18379  013C32  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 18380                           
 18381                           ;stkvar	_b @ sp[(-13)+-4]
 18382  013C38  0EEF               	movlw	-17
 18383  013C3A  6AE3               	clrf	plusw1,c
 18384  013C3C  0EF0               	movlw	-16
 18385  013C3E  6AE3               	clrf	plusw1,c
 18386  013C40  0EF1               	movlw	-15
 18387  013C42  6AE3               	clrf	plusw1,c
 18388  013C44  0EF2               	movlw	-14
 18389  013C46  6AE3               	clrf	plusw1,c
 18390  013C48                     l6720:
 18391                           
 18392                           ;stkvar	_new_exp @ sp[(-13)+8]
 18393  013C48  0EFC               	movlw	-4
 18394  013C4A  BEE3               	btfsc	plusw1,7,c
 18395  013C4C  D007               	goto	u5910
 18396  013C4E  0EFC               	movlw	-4
 18397  013C50  50E3               	movf	plusw1,w,c
 18398  013C52  E112               	bnz	l6726
 18399  013C54  0EFB               	movlw	-5
 18400  013C56  04E3               	decf	plusw1,w,c
 18401  013C58  B0D8               	btfsc	status,0,c
 18402  013C5A  D00E               	goto	l6726
 18403  013C5C                     u5910:
 18404                           
 18405                           ;stkvar	_new_exp @ sp[(-13)+8]
 18406  013C5C  0EFB               	movlw	-5
 18407  013C5E  6AE3               	clrf	plusw1,c
 18408  013C60  0EFC               	movlw	-4
 18409  013C62  6AE3               	clrf	plusw1,c
 18410                           
 18411                           ;stkvar	_b @ sp[(-13)+-4]
 18412  013C64  0EEF               	movlw	-17
 18413  013C66  6AE3               	clrf	plusw1,c
 18414  013C68  0EF0               	movlw	-16
 18415  013C6A  6AE3               	clrf	plusw1,c
 18416  013C6C  0EF1               	movlw	-15
 18417  013C6E  6AE3               	clrf	plusw1,c
 18418  013C70  0EF2               	movlw	-14
 18419  013C72  6AE3               	clrf	plusw1,c
 18420                           
 18421                           ;stkvar	_sign @ sp[(-13)+12]
 18422  013C74  0EFF               	movlw	-1
 18423  013C76  6AE3               	clrf	plusw1,c
 18424  013C78                     l6726:
 18425                           
 18426                           ;stkvar	_new_exp @ sp[(-13)+8]
 18427                           ;stkvar	_bexp @ sp[(-13)+11]
 18428  013C78  0EFB               	movlw	-5
 18429  013C7A  006F FF8C  F033    	movff	plusw1,btemp
 18430  013C80  0EFE               	movlw	-2
 18431  013C82  0060  F0CF  FFE3   	movff	btemp,plusw1
 18432                           
 18433                           ;stkvar	_bexp @ sp[(-13)+11]
 18434  013C88  0EFE               	movlw	-2
 18435  013C8A  A0E3               	btfss	plusw1,0,c
 18436  013C8C  D009               	goto	l6732
 18437                           
 18438                           ;stkvar	_b @ sp[(-13)+-4]
 18439  013C8E  0EF1               	movlw	241
 18440  013C90  24E1               	addwf	fsr1l,w,c
 18441  013C92  6ED9               	movwf	fsr2l,c
 18442  013C94  0EFF               	movlw	255
 18443  013C96  20E2               	addwfc	fsr1h,w,c
 18444  013C98  6EDA               	movwf	fsr2h,c
 18445  013C9A  0E00               	movlw	0
 18446  013C9C  8EDB               	bsf	plusw2,7,c
 18447  013C9E  D008               	goto	l6734
 18448  013CA0                     l6732:
 18449                           
 18450                           ;stkvar	_b @ sp[(-13)+-4]
 18451  013CA0  0EF1               	movlw	241
 18452  013CA2  24E1               	addwf	fsr1l,w,c
 18453  013CA4  6ED9               	movwf	fsr2l,c
 18454  013CA6  0EFF               	movlw	255
 18455  013CA8  20E2               	addwfc	fsr1h,w,c
 18456  013CAA  6EDA               	movwf	fsr2h,c
 18457  013CAC  0E7F               	movlw	127
 18458  013CAE  16DF               	andwf	indf2,f,c
 18459  013CB0                     l6734:
 18460                           
 18461                           ;stkvar	_b @ sp[(-13)+-4]
 18462  013CB0  0EF2               	movlw	242
 18463  013CB2  24E1               	addwf	fsr1l,w,c
 18464  013CB4  6ED9               	movwf	fsr2l,c
 18465  013CB6  0EFF               	movlw	255
 18466  013CB8  20E2               	addwfc	fsr1h,w,c
 18467  013CBA  6EDA               	movwf	fsr2h,c
 18468                           
 18469                           ;stkvar	_bexp @ sp[(-13)+11]
 18470  013CBC  0EFE               	movlw	-2
 18471  013CBE  006F FF8C  F03E    	movff	plusw1,btemp+11
 18472  013CC4  90D8               	bcf	status,0,c
 18473  013CC6  303E               	rrcf	(btemp+11)^0,w,c
 18474  013CC8  6EDF               	movwf	indf2,c
 18475  013CCA  D644               	goto	l6632
 18476  013CCC                     l2607:
 18477                           
 18478                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 18479  013CCC  0EEB               	movlw	235
 18480  013CCE  26E1               	addwf	fsr1l,f,c
 18481  013CD0  0EFF               	movlw	255
 18482  013CD2  22E2               	addwfc	fsr1h,f,c
 18483  013CD4  0012               	return		;funcret
 18484  013CD6                     __end_of___fldiv:
 18485                           	opt callstack 0
 18486                           
 18487 ;; *************** function ___awmod *****************
 18488 ;; Defined at:
 18489 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18490 ;; Parameters:    Size  Location     Type
 18491 ;;  dividend        2  [STACK] int 
 18492 ;;  divisor         2  [STACK] int 
 18493 ;; Auto vars:     Size  Location     Type
 18494 ;;  sign            1  [STACK] unsigned char 
 18495 ;;  counter         1  [STACK] unsigned char 
 18496 ;; Return value:  Size  Location     Type
 18497 ;;                  2  [STACK] int 
 18498 ;; Registers used:
 18499 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18500 ;; Tracked objects:
 18501 ;;		On entry : 0/0
 18502 ;;		On exit  : 0/0
 18503 ;;		Unchanged: 0/0
 18504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18509 ;;Total ram usage:        0 bytes
 18510 ;; Hardware stack levels used:    1
 18511 ;; Hardware stack levels required when called:    6
 18512 ;; This function calls:
 18513 ;;		Nothing
 18514 ;; This function is called by:
 18515 ;;		_efgtoa
 18516 ;; This function uses a reentrant model
 18517 ;;
 18518                           
 18519                           	psect	text60
 18520  016F50                     __ptext60:
 18521                           	opt callstack 0
 18522  016F50                     ___awmod:
 18523                           	opt callstack 0
 18524                           
 18525                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18526  016F50  52E6               	movf	postinc1,f,c
 18527  016F52  52E6               	movf	postinc1,f,c
 18528                           
 18529                           ;stkvar	_sign @ sp[(-2)+0]
 18530                           
 18531                           ;incstack = 0
 18532  016F54  0EFE               	movlw	-2
 18533  016F56  6AE3               	clrf	plusw1,c
 18534                           
 18535                           ;stkvar	_dividend @ sp[(-2)+-2]
 18536  016F58  0EFD               	movlw	-3
 18537  016F5A  AEE3               	btfss	plusw1,7,c
 18538  016F5C  D009               	goto	l6958
 18539                           
 18540                           ;stkvar	_dividend @ sp[(-2)+-2]
 18541                           ;stkvar	_dividend @ sp[(-2)+-2]
 18542  016F5E  0EFC               	movlw	-4
 18543  016F60  6CE3               	negf	plusw1,c
 18544  016F62  0EFD               	movlw	-3
 18545  016F64  1EE3               	comf	plusw1,f,c
 18546  016F66  B0D8               	btfsc	status,0,c
 18547  016F68  2AE3               	incf	plusw1,f,c
 18548                           
 18549                           ;stkvar	_sign @ sp[(-2)+0]
 18550  016F6A  0EFE               	movlw	-2
 18551  016F6C  6AE3               	clrf	plusw1,c
 18552  016F6E  2AE3               	incf	plusw1,f,c
 18553  016F70                     l6958:
 18554                           
 18555                           ;stkvar	_divisor @ sp[(-2)+-4]
 18556  016F70  0EFB               	movlw	-5
 18557  016F72  AEE3               	btfss	plusw1,7,c
 18558  016F74  D006               	goto	l6962
 18559                           
 18560                           ;stkvar	_divisor @ sp[(-2)+-4]
 18561                           ;stkvar	_divisor @ sp[(-2)+-4]
 18562  016F76  0EFA               	movlw	-6
 18563  016F78  6CE3               	negf	plusw1,c
 18564  016F7A  0EFB               	movlw	-5
 18565  016F7C  1EE3               	comf	plusw1,f,c
 18566  016F7E  B0D8               	btfsc	status,0,c
 18567  016F80  2AE3               	incf	plusw1,f,c
 18568  016F82                     l6962:
 18569                           
 18570                           ;stkvar	_divisor @ sp[(-2)+-4]
 18571  016F82  0EFA               	movlw	-6
 18572  016F84  006F FF8C  F033    	movff	plusw1,btemp
 18573  016F8A  0EFB               	movlw	-5
 18574  016F8C  50E3               	movf	plusw1,w,c
 18575  016F8E  1033               	iorwf	btemp^0,w,c
 18576  016F90  B4D8               	btfsc	status,2,c
 18577  016F92  D053               	goto	u6270
 18578                           
 18579                           ;stkvar	_counter @ sp[(-2)+1]
 18580  016F94  0EFF               	movlw	-1
 18581  016F96  6AE3               	clrf	plusw1,c
 18582  016F98  D012               	goto	L17
 18583  016F9A                     l6966:
 18584                           
 18585                           ;stkvar	_divisor @ sp[(-2)+-4]
 18586  016F9A  0EFA               	movlw	-6
 18587  016F9C  50E3               	movf	plusw1,w,c
 18588  016F9E  90D8               	bcf	status,0,c
 18589  016FA0  34E8               	rlcf	wreg,w,c
 18590  016FA2  6E33               	movwf	btemp^0,c
 18591  016FA4  0EFA               	movlw	-6
 18592  016FA6  0060  F0CF  FFE3   	movff	btemp,plusw1
 18593  016FAC  0EFB               	movlw	-5
 18594  016FAE  50E3               	movf	plusw1,w,c
 18595  016FB0  34E8               	rlcf	wreg,w,c
 18596  016FB2  6E33               	movwf	btemp^0,c
 18597  016FB4  0EFB               	movlw	-5
 18598  016FB6  0060  F0CF  FFE3   	movff	btemp,plusw1
 18599                           
 18600                           ;stkvar	_counter @ sp[(-2)+1]
 18601  016FBC  0EFF               	movlw	-1
 18602  016FBE                     L17:
 18603  016FBE  2AE3               	incf	plusw1,f,c
 18604                           
 18605                           ;stkvar	_divisor @ sp[(-2)+-4]
 18606  016FC0  0EFB               	movlw	-5
 18607  016FC2  AEE3               	btfss	plusw1,7,c
 18608  016FC4  D7EA               	goto	l6966
 18609  016FC6                     u6250:
 18610                           
 18611                           ;stkvar	_divisor @ sp[(-2)+-4]
 18612  016FC6  0EFA               	movlw	-6
 18613  016FC8  006F FF8C  F03D    	movff	plusw1,btemp+10
 18614  016FCE  0EFB               	movlw	-5
 18615  016FD0  006F FF8C  F03E    	movff	plusw1,btemp+11
 18616                           
 18617                           ;stkvar	_dividend @ sp[(-2)+-2]
 18618  016FD6  0EFC               	movlw	-4
 18619  016FD8  006F FF8C  F03B    	movff	plusw1,btemp+8
 18620  016FDE  0EFD               	movlw	-3
 18621  016FE0  006F FF8C  F03C    	movff	plusw1,btemp+9
 18622  016FE6  503D               	movf	(btemp+10)^0,w,c
 18623  016FE8  5C3B               	subwf	(btemp+8)^0,w,c
 18624  016FEA  503E               	movf	(btemp+11)^0,w,c
 18625  016FEC  583C               	subwfb	(btemp+9)^0,w,c
 18626  016FEE  A0D8               	btfss	status,0,c
 18627  016FF0  D014               	goto	l6976
 18628                           
 18629                           ;stkvar	_divisor @ sp[(-2)+-4]
 18630                           ;stkvar	_dividend @ sp[(-2)+-2]
 18631  016FF2  0EFC               	movlw	-4
 18632  016FF4  50E3               	movf	plusw1,w,c
 18633  016FF6  6E33               	movwf	btemp^0,c
 18634  016FF8  0EFA               	movlw	-6
 18635  016FFA  50E3               	movf	plusw1,w,c
 18636  016FFC  5E33               	subwf	btemp^0,f,c
 18637  016FFE  0EFC               	movlw	-4
 18638  017000  0060  F0CF  FFE3   	movff	btemp,plusw1
 18639  017006  0EFD               	movlw	-3
 18640  017008  50E3               	movf	plusw1,w,c
 18641  01700A  6E33               	movwf	btemp^0,c
 18642  01700C  0EFB               	movlw	-5
 18643  01700E  50E3               	movf	plusw1,w,c
 18644  017010  5A33               	subwfb	btemp^0,f,c
 18645  017012  0EFD               	movlw	-3
 18646  017014  0060  F0CF  FFE3   	movff	btemp,plusw1
 18647  01701A                     l6976:
 18648                           
 18649                           ;stkvar	_divisor @ sp[(-2)+-4]
 18650  01701A  90D8               	bcf	status,0,c
 18651  01701C  0EFB               	movlw	-5
 18652  01701E  32E3               	rrcf	plusw1,f,c
 18653  017020  0EFA               	movlw	-6
 18654  017022  32E3               	rrcf	plusw1,f,c
 18655                           
 18656                           ;stkvar	_counter @ sp[(-2)+1]
 18657  017024  0EFF               	movlw	-1
 18658  017026  50E3               	movf	plusw1,w,c
 18659  017028  6E33               	movwf	btemp^0,c
 18660  01702A  0E01               	movlw	1
 18661  01702C  5E33               	subwf	btemp^0,f,c
 18662  01702E  0EFF               	movlw	-1
 18663  017030  0060  F0CF  FFE3   	movff	btemp,plusw1
 18664  017036  A4D8               	btfss	status,2,c
 18665  017038  D7C6               	goto	u6250
 18666  01703A                     u6270:
 18667                           
 18668                           ;stkvar	_sign @ sp[(-2)+0]
 18669  01703A  0EFE               	movlw	-2
 18670  01703C  50E3               	movf	plusw1,w,c
 18671  01703E  B4D8               	btfsc	status,2,c
 18672  017040  D006               	goto	l6984
 18673                           
 18674                           ;stkvar	_dividend @ sp[(-2)+-2]
 18675                           ;stkvar	_dividend @ sp[(-2)+-2]
 18676  017042  0EFC               	movlw	-4
 18677  017044  6CE3               	negf	plusw1,c
 18678  017046  0EFD               	movlw	-3
 18679  017048  1EE3               	comf	plusw1,f,c
 18680  01704A  B0D8               	btfsc	status,0,c
 18681  01704C  2AE3               	incf	plusw1,f,c
 18682  01704E                     l6984:
 18683                           
 18684                           ;stkvar	_dividend @ sp[(-2)+-2]
 18685  01704E  0EFC               	movlw	-4
 18686  017050  006F FF8C  F033    	movff	plusw1,btemp
 18687  017056  0EFD               	movlw	-3
 18688  017058  006F FF8C  F034    	movff	plusw1,btemp+1
 18689                           
 18690                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18691  01705E  0EFA               	movlw	250
 18692  017060  26E1               	addwf	fsr1l,f,c
 18693  017062  0EFF               	movlw	255
 18694  017064  22E2               	addwfc	fsr1h,f,c
 18695  017066  0012               	return		;funcret
 18696  017068                     __end_of___awmod:
 18697                           	opt callstack 0
 18698                           
 18699 ;; *************** function ___awdiv *****************
 18700 ;; Defined at:
 18701 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18702 ;; Parameters:    Size  Location     Type
 18703 ;;  dividend        2  [STACK] int 
 18704 ;;  divisor         2  [STACK] int 
 18705 ;; Auto vars:     Size  Location     Type
 18706 ;;  quotient        2  [STACK] int 
 18707 ;;  sign            1  [STACK] unsigned char 
 18708 ;;  counter         1  [STACK] unsigned char 
 18709 ;; Return value:  Size  Location     Type
 18710 ;;                  2  [STACK] int 
 18711 ;; Registers used:
 18712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18713 ;; Tracked objects:
 18714 ;;		On entry : 0/0
 18715 ;;		On exit  : 0/0
 18716 ;;		Unchanged: 0/0
 18717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18722 ;;Total ram usage:        0 bytes
 18723 ;; Hardware stack levels used:    1
 18724 ;; Hardware stack levels required when called:    6
 18725 ;; This function calls:
 18726 ;;		Nothing
 18727 ;; This function is called by:
 18728 ;;		_efgtoa
 18729 ;; This function uses a reentrant model
 18730 ;;
 18731                           
 18732                           	psect	text61
 18733  016A70                     __ptext61:
 18734                           	opt callstack 0
 18735  016A70                     ___awdiv:
 18736                           	opt callstack 0
 18737                           
 18738                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18739  016A70  52E6               	movf	postinc1,f,c
 18740  016A72  52E6               	movf	postinc1,f,c
 18741  016A74  52E6               	movf	postinc1,f,c
 18742  016A76  52E6               	movf	postinc1,f,c
 18743                           
 18744                           ;stkvar	_sign @ sp[(-4)+2]
 18745                           
 18746                           ;incstack = 0
 18747  016A78  0EFE               	movlw	-2
 18748  016A7A  6AE3               	clrf	plusw1,c
 18749                           
 18750                           ;stkvar	_divisor @ sp[(-4)+-4]
 18751  016A7C  0EF9               	movlw	-7
 18752  016A7E  AEE3               	btfss	plusw1,7,c
 18753  016A80  D009               	goto	l6912
 18754                           
 18755                           ;stkvar	_divisor @ sp[(-4)+-4]
 18756                           ;stkvar	_divisor @ sp[(-4)+-4]
 18757  016A82  0EF8               	movlw	-8
 18758  016A84  6CE3               	negf	plusw1,c
 18759  016A86  0EF9               	movlw	-7
 18760  016A88  1EE3               	comf	plusw1,f,c
 18761  016A8A  B0D8               	btfsc	status,0,c
 18762  016A8C  2AE3               	incf	plusw1,f,c
 18763                           
 18764                           ;stkvar	_sign @ sp[(-4)+2]
 18765  016A8E  0EFE               	movlw	-2
 18766  016A90  6AE3               	clrf	plusw1,c
 18767  016A92  2AE3               	incf	plusw1,f,c
 18768  016A94                     l6912:
 18769                           
 18770                           ;stkvar	_dividend @ sp[(-4)+-2]
 18771  016A94  0EFB               	movlw	-5
 18772  016A96  AEE3               	btfss	plusw1,7,c
 18773  016A98  D008               	goto	l6918
 18774                           
 18775                           ;stkvar	_dividend @ sp[(-4)+-2]
 18776                           ;stkvar	_dividend @ sp[(-4)+-2]
 18777  016A9A  0EFA               	movlw	-6
 18778  016A9C  6CE3               	negf	plusw1,c
 18779  016A9E  0EFB               	movlw	-5
 18780  016AA0  1EE3               	comf	plusw1,f,c
 18781  016AA2  B0D8               	btfsc	status,0,c
 18782  016AA4  2AE3               	incf	plusw1,f,c
 18783                           
 18784                           ;stkvar	_sign @ sp[(-4)+2]
 18785  016AA6  0EFE               	movlw	-2
 18786  016AA8  70E3               	btg	plusw1,0,c
 18787  016AAA                     l6918:
 18788                           
 18789                           ;stkvar	_quotient @ sp[(-4)+0]
 18790  016AAA  0EFC               	movlw	-4
 18791  016AAC  6AE3               	clrf	plusw1,c
 18792  016AAE  0EFD               	movlw	-3
 18793  016AB0  6AE3               	clrf	plusw1,c
 18794                           
 18795                           ;stkvar	_divisor @ sp[(-4)+-4]
 18796  016AB2  0EF8               	movlw	-8
 18797  016AB4  006F FF8C  F033    	movff	plusw1,btemp
 18798  016ABA  0EF9               	movlw	-7
 18799  016ABC  50E3               	movf	plusw1,w,c
 18800  016ABE  1033               	iorwf	btemp^0,w,c
 18801  016AC0  B4D8               	btfsc	status,2,c
 18802  016AC2  D066               	goto	u6200
 18803                           
 18804                           ;stkvar	_counter @ sp[(-4)+3]
 18805  016AC4  0EFF               	movlw	-1
 18806  016AC6  6AE3               	clrf	plusw1,c
 18807  016AC8  D012               	goto	L18
 18808  016ACA                     l6924:
 18809                           
 18810                           ;stkvar	_divisor @ sp[(-4)+-4]
 18811  016ACA  0EF8               	movlw	-8
 18812  016ACC  50E3               	movf	plusw1,w,c
 18813  016ACE  90D8               	bcf	status,0,c
 18814  016AD0  34E8               	rlcf	wreg,w,c
 18815  016AD2  6E33               	movwf	btemp^0,c
 18816  016AD4  0EF8               	movlw	-8
 18817  016AD6  0060  F0CF  FFE3   	movff	btemp,plusw1
 18818  016ADC  0EF9               	movlw	-7
 18819  016ADE  50E3               	movf	plusw1,w,c
 18820  016AE0  34E8               	rlcf	wreg,w,c
 18821  016AE2  6E33               	movwf	btemp^0,c
 18822  016AE4  0EF9               	movlw	-7
 18823  016AE6  0060  F0CF  FFE3   	movff	btemp,plusw1
 18824                           
 18825                           ;stkvar	_counter @ sp[(-4)+3]
 18826  016AEC  0EFF               	movlw	-1
 18827  016AEE                     L18:
 18828  016AEE  2AE3               	incf	plusw1,f,c
 18829                           
 18830                           ;stkvar	_divisor @ sp[(-4)+-4]
 18831  016AF0  0EF9               	movlw	-7
 18832  016AF2  AEE3               	btfss	plusw1,7,c
 18833  016AF4  D7EA               	goto	l6924
 18834  016AF6                     u6180:
 18835                           
 18836                           ;stkvar	_quotient @ sp[(-4)+0]
 18837  016AF6  0EFC               	movlw	-4
 18838  016AF8  50E3               	movf	plusw1,w,c
 18839  016AFA  90D8               	bcf	status,0,c
 18840  016AFC  34E8               	rlcf	wreg,w,c
 18841  016AFE  6E33               	movwf	btemp^0,c
 18842  016B00  0EFC               	movlw	-4
 18843  016B02  0060  F0CF  FFE3   	movff	btemp,plusw1
 18844  016B08  0EFD               	movlw	-3
 18845  016B0A  50E3               	movf	plusw1,w,c
 18846  016B0C  34E8               	rlcf	wreg,w,c
 18847  016B0E  6E33               	movwf	btemp^0,c
 18848  016B10  0EFD               	movlw	-3
 18849  016B12  0060  F0CF  FFE3   	movff	btemp,plusw1
 18850                           
 18851                           ;stkvar	_divisor @ sp[(-4)+-4]
 18852  016B18  0EF8               	movlw	-8
 18853  016B1A  006F FF8C  F03D    	movff	plusw1,btemp+10
 18854  016B20  0EF9               	movlw	-7
 18855  016B22  006F FF8C  F03E    	movff	plusw1,btemp+11
 18856                           
 18857                           ;stkvar	_dividend @ sp[(-4)+-2]
 18858  016B28  0EFA               	movlw	-6
 18859  016B2A  006F FF8C  F03B    	movff	plusw1,btemp+8
 18860  016B30  0EFB               	movlw	-5
 18861  016B32  006F FF8C  F03C    	movff	plusw1,btemp+9
 18862  016B38  503D               	movf	(btemp+10)^0,w,c
 18863  016B3A  5C3B               	subwf	(btemp+8)^0,w,c
 18864  016B3C  503E               	movf	(btemp+11)^0,w,c
 18865  016B3E  583C               	subwfb	(btemp+9)^0,w,c
 18866  016B40  A0D8               	btfss	status,0,c
 18867  016B42  D016               	goto	l6938
 18868                           
 18869                           ;stkvar	_divisor @ sp[(-4)+-4]
 18870                           ;stkvar	_dividend @ sp[(-4)+-2]
 18871  016B44  0EFA               	movlw	-6
 18872  016B46  50E3               	movf	plusw1,w,c
 18873  016B48  6E33               	movwf	btemp^0,c
 18874  016B4A  0EF8               	movlw	-8
 18875  016B4C  50E3               	movf	plusw1,w,c
 18876  016B4E  5E33               	subwf	btemp^0,f,c
 18877  016B50  0EFA               	movlw	-6
 18878  016B52  0060  F0CF  FFE3   	movff	btemp,plusw1
 18879  016B58  0EFB               	movlw	-5
 18880  016B5A  50E3               	movf	plusw1,w,c
 18881  016B5C  6E33               	movwf	btemp^0,c
 18882  016B5E  0EF9               	movlw	-7
 18883  016B60  50E3               	movf	plusw1,w,c
 18884  016B62  5A33               	subwfb	btemp^0,f,c
 18885  016B64  0EFB               	movlw	-5
 18886  016B66  0060  F0CF  FFE3   	movff	btemp,plusw1
 18887                           
 18888                           ;stkvar	_quotient @ sp[(-4)+0]
 18889  016B6C  0EFC               	movlw	-4
 18890  016B6E  80E3               	bsf	plusw1,0,c
 18891  016B70                     l6938:
 18892                           
 18893                           ;stkvar	_divisor @ sp[(-4)+-4]
 18894  016B70  90D8               	bcf	status,0,c
 18895  016B72  0EF9               	movlw	-7
 18896  016B74  32E3               	rrcf	plusw1,f,c
 18897  016B76  0EF8               	movlw	-8
 18898  016B78  32E3               	rrcf	plusw1,f,c
 18899                           
 18900                           ;stkvar	_counter @ sp[(-4)+3]
 18901  016B7A  0EFF               	movlw	-1
 18902  016B7C  50E3               	movf	plusw1,w,c
 18903  016B7E  6E33               	movwf	btemp^0,c
 18904  016B80  0E01               	movlw	1
 18905  016B82  5E33               	subwf	btemp^0,f,c
 18906  016B84  0EFF               	movlw	-1
 18907  016B86  0060  F0CF  FFE3   	movff	btemp,plusw1
 18908  016B8C  A4D8               	btfss	status,2,c
 18909  016B8E  D7B3               	goto	u6180
 18910  016B90                     u6200:
 18911                           
 18912                           ;stkvar	_sign @ sp[(-4)+2]
 18913  016B90  0EFE               	movlw	-2
 18914  016B92  50E3               	movf	plusw1,w,c
 18915  016B94  B4D8               	btfsc	status,2,c
 18916  016B96  D006               	goto	l6946
 18917                           
 18918                           ;stkvar	_quotient @ sp[(-4)+0]
 18919                           ;stkvar	_quotient @ sp[(-4)+0]
 18920  016B98  0EFC               	movlw	-4
 18921  016B9A  6CE3               	negf	plusw1,c
 18922  016B9C  0EFD               	movlw	-3
 18923  016B9E  1EE3               	comf	plusw1,f,c
 18924  016BA0  B0D8               	btfsc	status,0,c
 18925  016BA2  2AE3               	incf	plusw1,f,c
 18926  016BA4                     l6946:
 18927                           
 18928                           ;stkvar	_quotient @ sp[(-4)+0]
 18929  016BA4  0EFC               	movlw	-4
 18930  016BA6  006F FF8C  F033    	movff	plusw1,btemp
 18931  016BAC  0EFD               	movlw	-3
 18932  016BAE  006F FF8C  F034    	movff	plusw1,btemp+1
 18933                           
 18934                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18935  016BB4  0EF8               	movlw	248
 18936  016BB6  26E1               	addwf	fsr1l,f,c
 18937  016BB8  0EFF               	movlw	255
 18938  016BBA  22E2               	addwfc	fsr1h,f,c
 18939  016BBC  0012               	return		;funcret
 18940  016BBE                     __end_of___awdiv:
 18941                           	opt callstack 0
 18942                           
 18943 ;; *************** function _dtoa *****************
 18944 ;; Defined at:
 18945 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18946 ;; Parameters:    Size  Location     Type
 18947 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18948 ;;		 -> f(6), NULL(0), 
 18949 ;;  d               8  [STACK] long long 
 18950 ;; Auto vars:     Size  Location     Type
 18951 ;;  n               8  [STACK] long long 
 18952 ;;  i               2  [STACK] int 
 18953 ;;  s               2  [STACK] int 
 18954 ;;  w               2  [STACK] int 
 18955 ;;  p               2  [STACK] int 
 18956 ;; Return value:  Size  Location     Type
 18957 ;;                  2  [STACK] int 
 18958 ;; Registers used:
 18959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18960 ;; Tracked objects:
 18961 ;;		On entry : 0/0
 18962 ;;		On exit  : 0/0
 18963 ;;		Unchanged: 0/0
 18964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18969 ;;Total ram usage:        0 bytes
 18970 ;; Hardware stack levels used:    1
 18971 ;; Hardware stack levels required when called:   11
 18972 ;; This function calls:
 18973 ;;		___aodiv
 18974 ;;		___aomod
 18975 ;;		_abs
 18976 ;;		_pad
 18977 ;; This function is called by:
 18978 ;;		_vfpfcnvrt
 18979 ;; This function uses a reentrant model
 18980 ;;
 18981                           
 18982                           	psect	text62
 18983  013CD6                     __ptext62:
 18984                           	opt callstack 0
 18985  013CD6                     _dtoa:
 18986                           	opt callstack 0
 18987                           
 18988                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18989  013CD6  0E12               	movlw	18
 18990  013CD8  26E1               	addwf	fsr1l,f,c
 18991  013CDA  0E00               	movlw	0
 18992  013CDC  22E2               	addwfc	fsr1h,f,c
 18993                           
 18994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 18995                           ;stkvar	_d @ sp[(-18)+-10]
 18996                           
 18997                           ;incstack = 0
 18998  013CDE  0EE4               	movlw	228
 18999  013CE0  24E1               	addwf	fsr1l,w,c
 19000  013CE2  6ED9               	movwf	fsr2l,c
 19001  013CE4  0EFF               	movlw	255
 19002  013CE6  20E2               	addwfc	fsr1h,w,c
 19003  013CE8  6EDA               	movwf	fsr2h,c
 19004                           
 19005                           ;stkvar	_n @ sp[(-18)+2]
 19006  013CEA  0E08               	movlw	8
 19007  013CEC  6E33               	movwf	btemp^0,c
 19008  013CEE  0EF0               	movlw	-16
 19009  013CF0                     us920999:
 19010  013CF0  006F FF7B FFE3     	movff	postinc2,plusw1
 19011  013CF6  28E8               	incf	wreg,w,c
 19012  013CF8  2E33               	decfsz	btemp^0,f,c
 19013  013CFA  D7FA               	bra	us920999
 19014                           
 19015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19016                           ;stkvar	_n @ sp[(-18)+2]
 19017  013CFC  0EF7               	movlw	-9
 19018  013CFE  AEE3               	btfss	plusw1,7,c
 19019  013D00  D002               	goto	u9210
 19020  013D02  0E01               	movlw	1
 19021  013D04  D001               	goto	u9220
 19022  013D06                     u9210:
 19023  013D06  0E00               	movlw	0
 19024  013D08                     u9220:
 19025  013D08  6E3D               	movwf	(btemp+10)^0,c
 19026  013D0A  6A3E               	clrf	(btemp+11)^0,c
 19027                           
 19028                           ;stkvar	_s @ sp[(-18)+12]
 19029  013D0C  0EFA               	movlw	-6
 19030  013D0E  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 19031  013D14  0EFB               	movlw	-5
 19032  013D16  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 19033                           
 19034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19035                           ;stkvar	_s @ sp[(-18)+12]
 19036  013D1C  0EFA               	movlw	-6
 19037  013D1E  006F FF8C  F033    	movff	plusw1,btemp
 19038  013D24  0EFB               	movlw	-5
 19039  013D26  50E3               	movf	plusw1,w,c
 19040  013D28  1033               	iorwf	btemp^0,w,c
 19041  013D2A  B4D8               	btfsc	status,2,c
 19042  013D2C  D025               	goto	u9240
 19043                           
 19044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19045                           ;stkvar	_n @ sp[(-18)+2]
 19046                           ;stkvar	_n @ sp[(-18)+2]
 19047  013D2E  0EF0               	movlw	-16
 19048  013D30  6CE3               	negf	plusw1,c
 19049  013D32  0EF1               	movlw	-15
 19050  013D34  1EE3               	comf	plusw1,f,c
 19051  013D36  0EF2               	movlw	-14
 19052  013D38  1EE3               	comf	plusw1,f,c
 19053  013D3A  0EF3               	movlw	-13
 19054  013D3C  1EE3               	comf	plusw1,f,c
 19055  013D3E  0EF4               	movlw	-12
 19056  013D40  1EE3               	comf	plusw1,f,c
 19057  013D42  0EF5               	movlw	-11
 19058  013D44  1EE3               	comf	plusw1,f,c
 19059  013D46  0EF6               	movlw	-10
 19060  013D48  1EE3               	comf	plusw1,f,c
 19061  013D4A  0EF7               	movlw	-9
 19062  013D4C  1EE3               	comf	plusw1,f,c
 19063  013D4E  E314               	bnc	u9240
 19064  013D50  0EF1               	movlw	-15
 19065  013D52  2AE3               	incf	plusw1,f,c
 19066  013D54  E311               	bnc	u9240
 19067  013D56  0EF2               	movlw	-14
 19068  013D58  2AE3               	incf	plusw1,f,c
 19069  013D5A  E30E               	bnc	u9240
 19070  013D5C  0EF3               	movlw	-13
 19071  013D5E  2AE3               	incf	plusw1,f,c
 19072  013D60  E30B               	bnc	u9240
 19073  013D62  0EF4               	movlw	-12
 19074  013D64  2AE3               	incf	plusw1,f,c
 19075  013D66  E308               	bnc	u9240
 19076  013D68  0EF5               	movlw	-11
 19077  013D6A  2AE3               	incf	plusw1,f,c
 19078  013D6C  E305               	bnc	u9240
 19079  013D6E  0EF6               	movlw	-10
 19080  013D70  2AE3               	incf	plusw1,f,c
 19081  013D72  E302               	bnc	u9240
 19082  013D74  0EF7               	movlw	-9
 19083  013D76  2AE3               	incf	plusw1,f,c
 19084  013D78                     u9240:
 19085                           
 19086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19087  013D78  AE1F               	btfss	(_prec+1)^0,7,c
 19088                           
 19089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19090  013D7A  9220               	bcf	_flags^0,1,c
 19091                           
 19092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19093  013D7C  BE1F               	btfsc	(_prec+1)^0,7,c
 19094  013D7E  D005               	goto	u9260
 19095  013D80  501F               	movf	(_prec+1)^0,w,c
 19096  013D82  E110               	bnz	l9344
 19097  013D84  041E               	decf	_prec^0,w,c
 19098  013D86  B0D8               	btfsc	status,0,c
 19099  013D88  D00D               	goto	l9344
 19100  013D8A                     u9260:
 19101  013D8A  0E01               	movlw	1
 19102  013D8C  6E3D               	movwf	(btemp+10)^0,c
 19103  013D8E  0E00               	movlw	0
 19104  013D90  6E3E               	movwf	(btemp+11)^0,c
 19105                           
 19106                           ;stkvar	_p @ sp[(-18)+16]
 19107  013D92  0EFE               	movlw	-2
 19108  013D94  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 19109  013D9A  0EFF               	movlw	-1
 19110  013D9C  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 19111  013DA2  D008               	goto	l1788
 19112  013DA4                     l9344:
 19113                           
 19114                           ;stkvar	_p @ sp[(-18)+16]
 19115  013DA4  0EFE               	movlw	-2
 19116  013DA6  0060  F07B  FFE3   	movff	_prec,plusw1
 19117  013DAC  0EFF               	movlw	-1
 19118  013DAE  0060  F07F  FFE3   	movff	_prec+1,plusw1
 19119  013DB4                     l1788:
 19120                           
 19121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19122                           ;stkvar	_w @ sp[(-18)+14]
 19123  013DB4  0EFC               	movlw	-4
 19124  013DB6  0060  F073  FFE3   	movff	_width,plusw1
 19125  013DBC  0EFD               	movlw	-3
 19126  013DBE  0060  F077  FFE3   	movff	_width+1,plusw1
 19127                           
 19128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19129                           ;stkvar	_s @ sp[(-18)+12]
 19130  013DC4  0EFA               	movlw	-6
 19131  013DC6  006F FF8C  F033    	movff	plusw1,btemp
 19132  013DCC  0EFB               	movlw	-5
 19133  013DCE  50E3               	movf	plusw1,w,c
 19134  013DD0  1033               	iorwf	btemp^0,w,c
 19135  013DD2  A4D8               	btfss	status,2,c
 19136  013DD4  D002               	goto	u9280
 19137  013DD6  A420               	btfss	_flags^0,2,c
 19138  013DD8  D00A               	goto	l9352
 19139  013DDA                     u9280:
 19140                           
 19141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19142                           ;stkvar	_w @ sp[(-18)+14]
 19143  013DDA  50E1               	movf	fsr1l,w,c
 19144  013DDC  0FFC               	addlw	-4
 19145  013DDE  6ED9               	movwf	fsr2l,c
 19146  013DE0  50E2               	movf	fsr1h,w,c
 19147  013DE2  6EDA               	movwf	fsr2h,c
 19148  013DE4  0EFF               	movlw	255
 19149  013DE6  22DA               	addwfc	fsr2h,f,c
 19150  013DE8  06DE               	decf	postinc2,f,c
 19151  013DEA  0E00               	movlw	0
 19152  013DEC  5ADD               	subwfb	postdec2,f,c
 19153  013DEE                     l9352:
 19154                           
 19155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19156  013DEE  0E4F               	movlw	79
 19157  013DF0  6E3D               	movwf	(btemp+10)^0,c
 19158  013DF2  0E00               	movlw	0
 19159  013DF4  6E3E               	movwf	(btemp+11)^0,c
 19160                           
 19161                           ;stkvar	_i @ sp[(-18)+10]
 19162  013DF6  0EF8               	movlw	-8
 19163  013DF8  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 19164  013DFE  0EF9               	movlw	-7
 19165  013E00  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 19166                           
 19167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19168  013E06  0102               	movlb	2	; () banked
 19169  013E08  6BFB               	clrf	(_dbuf+79)& (0+255),b
 19170                           
 19171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19172  013E0A  D109               	goto	l9366
 19173  013E0C                     l9356:
 19174                           
 19175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19176                           ;stkvar	_i @ sp[(-18)+10]
 19177  013E0C  50E1               	movf	fsr1l,w,c
 19178  013E0E  0FF8               	addlw	-8
 19179  013E10  6ED9               	movwf	fsr2l,c
 19180  013E12  50E2               	movf	fsr1h,w,c
 19181  013E14  6EDA               	movwf	fsr2h,c
 19182  013E16  0EFF               	movlw	255
 19183  013E18  22DA               	addwfc	fsr2h,f,c
 19184  013E1A  06DE               	decf	postinc2,f,c
 19185  013E1C  0E00               	movlw	0
 19186  013E1E  5ADD               	subwfb	postdec2,f,c
 19187                           
 19188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19189  013E20  0E0A               	movlw	10
 19190  013E22  6EE6               	movwf	postinc1,c
 19191  013E24  0E00               	movlw	0
 19192  013E26  6EE6               	movwf	postinc1,c
 19193  013E28  0E00               	movlw	0
 19194  013E2A  6EE6               	movwf	postinc1,c
 19195  013E2C  0E00               	movlw	0
 19196  013E2E  6EE6               	movwf	postinc1,c
 19197  013E30  0E00               	movlw	0
 19198  013E32  6EE6               	movwf	postinc1,c
 19199  013E34  0E00               	movlw	0
 19200  013E36  6EE6               	movwf	postinc1,c
 19201  013E38  0E00               	movlw	0
 19202  013E3A  6EE6               	movwf	postinc1,c
 19203  013E3C  0E00               	movlw	0
 19204  013E3E  6EE6               	movwf	postinc1,c
 19205                           
 19206                           ;stkvar	_n @ sp[(-26)+2]
 19207  013E40  50E1               	movf	fsr1l,w,c
 19208  013E42  0FE8               	addlw	-24
 19209  013E44  6ED9               	movwf	fsr2l,c
 19210  013E46  50E2               	movf	fsr1h,w,c
 19211  013E48  6EDA               	movwf	fsr2h,c
 19212  013E4A  0EFF               	movlw	255
 19213  013E4C  22DA               	addwfc	fsr2h,f,c
 19214  013E4E  006F FF7B FFE6     	movff	postinc2,postinc1
 19215  013E54  006F FF7B FFE6     	movff	postinc2,postinc1
 19216  013E5A  006F FF7B FFE6     	movff	postinc2,postinc1
 19217  013E60  006F FF7B FFE6     	movff	postinc2,postinc1
 19218  013E66  006F FF7B FFE6     	movff	postinc2,postinc1
 19219  013E6C  006F FF7B FFE6     	movff	postinc2,postinc1
 19220  013E72  006F FF7B FFE6     	movff	postinc2,postinc1
 19221  013E78  006F FF7B FFE6     	movff	postinc2,postinc1
 19222  013E7E  EC28  F0AD         	call	___aomod	;wreg free
 19223  013E82  52E5               	movf	postdec1,f,c
 19224  013E84  006F FF9C  F04A    	movff	indf1,btemp+23
 19225  013E8A  52E5               	movf	postdec1,f,c
 19226  013E8C  006F FF9C  F049    	movff	indf1,btemp+22
 19227  013E92  52E5               	movf	postdec1,f,c
 19228  013E94  006F FF9C  F048    	movff	indf1,btemp+21
 19229  013E9A  52E5               	movf	postdec1,f,c
 19230  013E9C  006F FF9C  F047    	movff	indf1,btemp+20
 19231  013EA2  52E5               	movf	postdec1,f,c
 19232  013EA4  006F FF9C  F046    	movff	indf1,btemp+19
 19233  013EAA  52E5               	movf	postdec1,f,c
 19234  013EAC  006F FF9C  F045    	movff	indf1,btemp+18
 19235  013EB2  52E5               	movf	postdec1,f,c
 19236  013EB4  006F FF9C  F044    	movff	indf1,btemp+17
 19237  013EBA  52E5               	movf	postdec1,f,c
 19238  013EBC  006F FF9C  F043    	movff	indf1,btemp+16
 19239  013EC2  0EF8               	movlw	248
 19240  013EC4  26E1               	addwf	fsr1l,f,c
 19241  013EC6  0EFF               	movlw	255
 19242  013EC8  22E2               	addwfc	fsr1h,f,c
 19243  013ECA  0060  F10C  F03D   	movff	btemp+16,btemp+10
 19244  013ED0  0060  F110  F03E   	movff	btemp+17,btemp+11
 19245  013ED6  0060  F0F7  FFE6   	movff	btemp+10,postinc1
 19246  013EDC  0060  F0FB  FFE6   	movff	btemp+11,postinc1
 19247  013EE2  EC2D  F0C2         	call	_abs	;wreg free
 19248  013EE6  0E30               	movlw	48
 19249  013EE8  2633               	addwf	btemp^0,f,c
 19250                           
 19251                           ;stkvar	_i @ sp[(-18)+10]
 19252  013EEA  0EF8               	movlw	-8
 19253  013EEC  006F FF8C  F03D    	movff	plusw1,btemp+10
 19254  013EF2  0EF9               	movlw	-7
 19255  013EF4  006F FF8C  F03E    	movff	plusw1,btemp+11
 19256  013EFA  0EAC               	movlw	low _dbuf
 19257  013EFC  243D               	addwf	(btemp+10)^0,w,c
 19258  013EFE  6ED9               	movwf	fsr2l,c
 19259  013F00  0E02               	movlw	high _dbuf
 19260  013F02  203E               	addwfc	(btemp+11)^0,w,c
 19261  013F04  6EDA               	movwf	fsr2h,c
 19262  013F06  0060  F0CF  FFDF   	movff	btemp,indf2
 19263                           
 19264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19265                           ;stkvar	_p @ sp[(-18)+16]
 19266  013F0C  50E1               	movf	fsr1l,w,c
 19267  013F0E  0FFE               	addlw	-2
 19268  013F10  6ED9               	movwf	fsr2l,c
 19269  013F12  50E2               	movf	fsr1h,w,c
 19270  013F14  6EDA               	movwf	fsr2h,c
 19271  013F16  0EFF               	movlw	255
 19272  013F18  22DA               	addwfc	fsr2h,f,c
 19273  013F1A  06DE               	decf	postinc2,f,c
 19274  013F1C  0E00               	movlw	0
 19275  013F1E  5ADD               	subwfb	postdec2,f,c
 19276                           
 19277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19278                           ;stkvar	_w @ sp[(-18)+14]
 19279  013F20  50E1               	movf	fsr1l,w,c
 19280  013F22  0FFC               	addlw	-4
 19281  013F24  6ED9               	movwf	fsr2l,c
 19282  013F26  50E2               	movf	fsr1h,w,c
 19283  013F28  6EDA               	movwf	fsr2h,c
 19284  013F2A  0EFF               	movlw	255
 19285  013F2C  22DA               	addwfc	fsr2h,f,c
 19286  013F2E  06DE               	decf	postinc2,f,c
 19287  013F30  0E00               	movlw	0
 19288  013F32  5ADD               	subwfb	postdec2,f,c
 19289                           
 19290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19291  013F34  0E0A               	movlw	10
 19292  013F36  6EE6               	movwf	postinc1,c
 19293  013F38  0E00               	movlw	0
 19294  013F3A  6EE6               	movwf	postinc1,c
 19295  013F3C  0E00               	movlw	0
 19296  013F3E  6EE6               	movwf	postinc1,c
 19297  013F40  0E00               	movlw	0
 19298  013F42  6EE6               	movwf	postinc1,c
 19299  013F44  0E00               	movlw	0
 19300  013F46  6EE6               	movwf	postinc1,c
 19301  013F48  0E00               	movlw	0
 19302  013F4A  6EE6               	movwf	postinc1,c
 19303  013F4C  0E00               	movlw	0
 19304  013F4E  6EE6               	movwf	postinc1,c
 19305  013F50  0E00               	movlw	0
 19306  013F52  6EE6               	movwf	postinc1,c
 19307                           
 19308                           ;stkvar	_n @ sp[(-26)+2]
 19309  013F54  50E1               	movf	fsr1l,w,c
 19310  013F56  0FE8               	addlw	-24
 19311  013F58  6ED9               	movwf	fsr2l,c
 19312  013F5A  50E2               	movf	fsr1h,w,c
 19313  013F5C  6EDA               	movwf	fsr2h,c
 19314  013F5E  0EFF               	movlw	255
 19315  013F60  22DA               	addwfc	fsr2h,f,c
 19316  013F62  006F FF7B FFE6     	movff	postinc2,postinc1
 19317  013F68  006F FF7B FFE6     	movff	postinc2,postinc1
 19318  013F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 19319  013F74  006F FF7B FFE6     	movff	postinc2,postinc1
 19320  013F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 19321  013F80  006F FF7B FFE6     	movff	postinc2,postinc1
 19322  013F86  006F FF7B FFE6     	movff	postinc2,postinc1
 19323  013F8C  006F FF7B FFE6     	movff	postinc2,postinc1
 19324  013F92  ECAE  F0AA         	call	___aodiv	;wreg free
 19325  013F96  52E5               	movf	postdec1,f,c
 19326  013F98  006F FF9C  F04A    	movff	indf1,btemp+23
 19327  013F9E  52E5               	movf	postdec1,f,c
 19328  013FA0  006F FF9C  F049    	movff	indf1,btemp+22
 19329  013FA6  52E5               	movf	postdec1,f,c
 19330  013FA8  006F FF9C  F048    	movff	indf1,btemp+21
 19331  013FAE  52E5               	movf	postdec1,f,c
 19332  013FB0  006F FF9C  F047    	movff	indf1,btemp+20
 19333  013FB6  52E5               	movf	postdec1,f,c
 19334  013FB8  006F FF9C  F046    	movff	indf1,btemp+19
 19335  013FBE  52E5               	movf	postdec1,f,c
 19336  013FC0  006F FF9C  F045    	movff	indf1,btemp+18
 19337  013FC6  52E5               	movf	postdec1,f,c
 19338  013FC8  006F FF9C  F044    	movff	indf1,btemp+17
 19339  013FCE  52E5               	movf	postdec1,f,c
 19340  013FD0  006F FF9C  F043    	movff	indf1,btemp+16
 19341  013FD6  0EF8               	movlw	248
 19342  013FD8  26E1               	addwf	fsr1l,f,c
 19343  013FDA  0EFF               	movlw	255
 19344  013FDC  22E2               	addwfc	fsr1h,f,c
 19345                           
 19346                           ;stkvar	_n @ sp[(-18)+2]
 19347  013FDE  0EF0               	movlw	-16
 19348  013FE0  0060  F10F  FFE3   	movff	btemp+16,plusw1
 19349  013FE6  0EF1               	movlw	-15
 19350  013FE8  0060  F113  FFE3   	movff	btemp+17,plusw1
 19351  013FEE  0EF2               	movlw	-14
 19352  013FF0  0060  F117  FFE3   	movff	btemp+18,plusw1
 19353  013FF6  0EF3               	movlw	-13
 19354  013FF8  0060  F11B  FFE3   	movff	btemp+19,plusw1
 19355  013FFE  0EF4               	movlw	-12
 19356  014000  0060  F11F  FFE3   	movff	btemp+20,plusw1
 19357  014006  0EF5               	movlw	-11
 19358  014008  0060  F123  FFE3   	movff	btemp+21,plusw1
 19359  01400E  0EF6               	movlw	-10
 19360  014010  0060  F127  FFE3   	movff	btemp+22,plusw1
 19361  014016  0EF7               	movlw	-9
 19362  014018  0060  F12B  FFE3   	movff	btemp+23,plusw1
 19363  01401E                     l9366:
 19364                           
 19365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19366                           ;stkvar	_i @ sp[(-18)+10]
 19367  01401E  0EF9               	movlw	-7
 19368  014020  BEE3               	btfsc	plusw1,7,c
 19369  014022  D036               	goto	u9330
 19370  014024  0EF9               	movlw	-7
 19371  014026  50E3               	movf	plusw1,w,c
 19372  014028  E104               	bnz	u9290
 19373  01402A  0EF8               	movlw	-8
 19374  01402C  04E3               	decf	plusw1,w,c
 19375  01402E  A0D8               	btfss	status,0,c
 19376  014030  D02F               	goto	u9330
 19377  014032                     u9290:
 19378                           
 19379                           ;stkvar	_n @ sp[(-18)+2]
 19380  014032  0EF0               	movlw	-16
 19381  014034  50E3               	movf	plusw1,w,c
 19382  014036  E115               	bnz	u9301
 19383  014038  0EF1               	movlw	-15
 19384  01403A  50E3               	movf	plusw1,w,c
 19385  01403C  E112               	bnz	u9301
 19386  01403E  0EF2               	movlw	-14
 19387  014040  50E3               	movf	plusw1,w,c
 19388  014042  E10F               	bnz	u9301
 19389  014044  0EF3               	movlw	-13
 19390  014046  50E3               	movf	plusw1,w,c
 19391  014048  E10C               	bnz	u9301
 19392  01404A  0EF4               	movlw	-12
 19393  01404C  50E3               	movf	plusw1,w,c
 19394  01404E  E109               	bnz	u9301
 19395  014050  0EF5               	movlw	-11
 19396  014052  50E3               	movf	plusw1,w,c
 19397  014054  E106               	bnz	u9301
 19398  014056  0EF6               	movlw	-10
 19399  014058  50E3               	movf	plusw1,w,c
 19400  01405A  E103               	bnz	u9301
 19401  01405C  0EF7               	movlw	-9
 19402  01405E  50E3               	movf	plusw1,w,c
 19403  014060  A4D8               	btfss	status,2,c
 19404  014062                     u9301:
 19405  014062  D6D4               	goto	l9356
 19406                           
 19407                           ;stkvar	_p @ sp[(-18)+16]
 19408  014064  0EFF               	movlw	-1
 19409  014066  BEE3               	btfsc	plusw1,7,c
 19410  014068  D007               	goto	u9310
 19411  01406A  0EFF               	movlw	-1
 19412  01406C  50E3               	movf	plusw1,w,c
 19413  01406E  E103               	bnz	u9311
 19414  014070  0EFE               	movlw	-2
 19415  014072  04E3               	decf	plusw1,w,c
 19416  014074  B0D8               	btfsc	status,0,c
 19417  014076                     u9311:
 19418  014076  D6CA               	goto	l9356
 19419  014078                     u9310:
 19420                           
 19421                           ;stkvar	_w @ sp[(-18)+14]
 19422  014078  0EFD               	movlw	-3
 19423  01407A  BEE3               	btfsc	plusw1,7,c
 19424  01407C  D009               	goto	u9330
 19425  01407E  0EFD               	movlw	-3
 19426  014080  50E3               	movf	plusw1,w,c
 19427  014082  E104               	bnz	u9320
 19428  014084  0EFC               	movlw	-4
 19429  014086  04E3               	decf	plusw1,w,c
 19430  014088  A0D8               	btfss	status,0,c
 19431  01408A  D002               	goto	u9330
 19432  01408C                     u9320:
 19433  01408C  B220               	btfsc	_flags^0,1,c
 19434  01408E  D6BE               	goto	l9356
 19435  014090                     u9330:
 19436                           
 19437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19438                           ;stkvar	_s @ sp[(-18)+12]
 19439  014090  0EFA               	movlw	-6
 19440  014092  006F FF8C  F033    	movff	plusw1,btemp
 19441  014098  0EFB               	movlw	-5
 19442  01409A  50E3               	movf	plusw1,w,c
 19443  01409C  1033               	iorwf	btemp^0,w,c
 19444  01409E  A4D8               	btfss	status,2,c
 19445  0140A0  D002               	goto	u9350
 19446  0140A2  A420               	btfss	_flags^0,2,c
 19447  0140A4  D033               	goto	l9390
 19448  0140A6                     u9350:
 19449                           
 19450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19451                           ;stkvar	_i @ sp[(-18)+10]
 19452  0140A6  50E1               	movf	fsr1l,w,c
 19453  0140A8  0FF8               	addlw	-8
 19454  0140AA  6ED9               	movwf	fsr2l,c
 19455  0140AC  50E2               	movf	fsr1h,w,c
 19456  0140AE  6EDA               	movwf	fsr2h,c
 19457  0140B0  0EFF               	movlw	255
 19458  0140B2  22DA               	addwfc	fsr2h,f,c
 19459  0140B4  06DE               	decf	postinc2,f,c
 19460  0140B6  0E00               	movlw	0
 19461  0140B8  5ADD               	subwfb	postdec2,f,c
 19462                           
 19463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19464                           ;stkvar	_s @ sp[(-18)+12]
 19465  0140BA  0EFA               	movlw	-6
 19466  0140BC  006F FF8C  F033    	movff	plusw1,btemp
 19467  0140C2  0EFB               	movlw	-5
 19468  0140C4  50E3               	movf	plusw1,w,c
 19469  0140C6  1033               	iorwf	btemp^0,w,c
 19470  0140C8  A4D8               	btfss	status,2,c
 19471  0140CA  D002               	goto	l9386
 19472  0140CC  0E2B               	movlw	43
 19473  0140CE  D001               	goto	L19
 19474  0140D0                     l9386:
 19475  0140D0  0E2D               	movlw	45
 19476  0140D2                     L19:
 19477  0140D2  6E3D               	movwf	(btemp+10)^0,c
 19478  0140D4  0E00               	movlw	0
 19479  0140D6  6E3E               	movwf	(btemp+11)^0,c
 19480                           
 19481                           ;stkvar	_dtoa$4238 @ sp[(-18)+0]
 19482  0140D8  0EEE               	movlw	-18
 19483  0140DA  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 19484  0140E0  0EEF               	movlw	-17
 19485  0140E2  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 19486                           
 19487                           ;stkvar	_dtoa$4238 @ sp[(-18)+0]
 19488                           ;stkvar	_i @ sp[(-18)+10]
 19489  0140E8  0EF8               	movlw	-8
 19490  0140EA  006F FF8C  F03D    	movff	plusw1,btemp+10
 19491  0140F0  0EF9               	movlw	-7
 19492  0140F2  006F FF8C  F03E    	movff	plusw1,btemp+11
 19493  0140F8  0EAC               	movlw	low _dbuf
 19494  0140FA  243D               	addwf	(btemp+10)^0,w,c
 19495  0140FC  6ED9               	movwf	fsr2l,c
 19496  0140FE  0E02               	movlw	high _dbuf
 19497  014100  203E               	addwfc	(btemp+11)^0,w,c
 19498  014102  6EDA               	movwf	fsr2h,c
 19499  014104  0EEE               	movlw	-18
 19500  014106  006F FF8F FFDF     	movff	plusw1,indf2
 19501  01410C                     l9390:
 19502                           
 19503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19504                           ;stkvar	_w @ sp[(-18)+14]
 19505  01410C  0EFC               	movlw	-4
 19506  01410E  006F FF8F FFE6     	movff	plusw1,postinc1
 19507  014114  006F FF8F FFE6     	movff	plusw1,postinc1
 19508                           
 19509                           ;stkvar	_i @ sp[(-20)+10]
 19510  01411A  0EAC               	movlw	low _dbuf
 19511  01411C  6E3D               	movwf	(btemp+10)^0,c
 19512  01411E  0E02               	movlw	high _dbuf
 19513  014120  6E3E               	movwf	(btemp+11)^0,c
 19514  014122  0EF6               	movlw	-10
 19515  014124  50E3               	movf	plusw1,w,c
 19516  014126  263D               	addwf	(btemp+10)^0,f,c
 19517  014128  0EF7               	movlw	-9
 19518  01412A  50E3               	movf	plusw1,w,c
 19519  01412C  223E               	addwfc	(btemp+11)^0,f,c
 19520  01412E  0060  F0F7  FFE6   	movff	btemp+10,postinc1
 19521  014134  0060  F0FB  FFE6   	movff	btemp+11,postinc1
 19522                           
 19523                           ;stkvar	_fp @ sp[(-22)+-2]
 19524  01413A  0EE8               	movlw	-24
 19525  01413C  006F FF8F FFE6     	movff	plusw1,postinc1
 19526  014142  006F FF8F FFE6     	movff	plusw1,postinc1
 19527  014148  EC34  F0B8         	call	_pad	;wreg free
 19528                           
 19529                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19530  01414C  0EE4               	movlw	228
 19531  01414E  26E1               	addwf	fsr1l,f,c
 19532  014150  0EFF               	movlw	255
 19533  014152  22E2               	addwfc	fsr1h,f,c
 19534  014154  0012               	return		;funcret
 19535  014156                     __end_of_dtoa:
 19536                           	opt callstack 0
 19537                           
 19538 ;; *************** function _abs *****************
 19539 ;; Defined at:
 19540 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19541 ;; Parameters:    Size  Location     Type
 19542 ;;  a               2  [STACK] int 
 19543 ;; Auto vars:     Size  Location     Type
 19544 ;;		None
 19545 ;; Return value:  Size  Location     Type
 19546 ;;                  2  [STACK] int 
 19547 ;; Registers used:
 19548 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19549 ;; Tracked objects:
 19550 ;;		On entry : 0/2
 19551 ;;		On exit  : 0/0
 19552 ;;		Unchanged: 0/0
 19553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19558 ;;Total ram usage:        0 bytes
 19559 ;; Hardware stack levels used:    1
 19560 ;; Hardware stack levels required when called:    6
 19561 ;; This function calls:
 19562 ;;		Nothing
 19563 ;; This function is called by:
 19564 ;;		_dtoa
 19565 ;; This function uses a reentrant model
 19566 ;;
 19567                           
 19568                           	psect	text63
 19569  01845A                     __ptext63:
 19570                           	opt callstack 0
 19571  01845A                     _abs:
 19572                           	opt callstack 17
 19573                           
 19574                           ;stkvar	_a @ sp[(0)+-2]
 19575                           
 19576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19577                           ;incstack = 0
 19578  01845A  0EFF               	movlw	-1
 19579  01845C  BEE3               	btfsc	plusw1,7,c
 19580  01845E  D007               	goto	u5160
 19581  018460  0EFF               	movlw	-1
 19582  018462  50E3               	movf	plusw1,w,c
 19583  018464  E112               	bnz	l6400
 19584  018466  0EFE               	movlw	-2
 19585  018468  04E3               	decf	plusw1,w,c
 19586  01846A  B0D8               	btfsc	status,0,c
 19587  01846C  D00E               	goto	l6400
 19588  01846E                     u5160:
 19589                           
 19590                           ;stkvar	_a @ sp[(0)+-2]
 19591  01846E  0EFE               	movlw	-2
 19592  018470  006F FF8C  F033    	movff	plusw1,btemp
 19593  018476  1E33               	comf	btemp^0,f,c
 19594  018478  0EFF               	movlw	-1
 19595  01847A  006F FF8C  F034    	movff	plusw1,btemp+1
 19596  018480  1E34               	comf	(btemp+1)^0,f,c
 19597  018482  2A33               	incf	btemp^0,f,c
 19598  018484  B4D8               	btfsc	status,2,c
 19599  018486  2A34               	incf	(btemp+1)^0,f,c
 19600  018488  D008               	goto	l2714
 19601  01848A                     l6400:
 19602                           
 19603                           ;stkvar	_a @ sp[(0)+-2]
 19604  01848A  0EFE               	movlw	-2
 19605  01848C  006F FF8C  F033    	movff	plusw1,btemp
 19606  018492  0EFF               	movlw	-1
 19607  018494  006F FF8C  F034    	movff	plusw1,btemp+1
 19608  01849A                     l2714:
 19609                           
 19610                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19611  01849A  52E5               	movf	postdec1,f,c
 19612  01849C  52E5               	movf	postdec1,f,c
 19613  01849E  0012               	return		;funcret
 19614  0184A0                     __end_of_abs:
 19615                           	opt callstack 0
 19616                           
 19617 ;; *************** function ___aomod *****************
 19618 ;; Defined at:
 19619 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19620 ;; Parameters:    Size  Location     Type
 19621 ;;  dividend        8  [STACK] long long 
 19622 ;;  divisor         8  [STACK] long long 
 19623 ;; Auto vars:     Size  Location     Type
 19624 ;;  sign            1  [STACK] unsigned char 
 19625 ;;  counter         1  [STACK] unsigned char 
 19626 ;; Return value:  Size  Location     Type
 19627 ;;                  8  [STACK] long long 
 19628 ;; Registers used:
 19629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19630 ;; Tracked objects:
 19631 ;;		On entry : 0/2
 19632 ;;		On exit  : 0/0
 19633 ;;		Unchanged: 0/0
 19634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19639 ;;Total ram usage:        0 bytes
 19640 ;; Hardware stack levels used:    1
 19641 ;; Hardware stack levels required when called:    6
 19642 ;; This function calls:
 19643 ;;		Nothing
 19644 ;; This function is called by:
 19645 ;;		_dtoa
 19646 ;; This function uses a reentrant model
 19647 ;;
 19648                           
 19649                           	psect	text64
 19650  015A50                     __ptext64:
 19651                           	opt callstack 0
 19652  015A50                     ___aomod:
 19653                           	opt callstack 0
 19654                           
 19655                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19656  015A50  52E6               	movf	postinc1,f,c
 19657  015A52  52E6               	movf	postinc1,f,c
 19658                           
 19659                           ;stkvar	_sign @ sp[(-2)+0]
 19660                           
 19661                           ;incstack = 0
 19662  015A54  0EFE               	movlw	-2
 19663  015A56  6AE3               	clrf	plusw1,c
 19664                           
 19665                           ;stkvar	_dividend @ sp[(-2)+-8]
 19666  015A58  0EFD               	movlw	-3
 19667  015A5A  AEE3               	btfss	plusw1,7,c
 19668  015A5C  D028               	goto	l6558
 19669                           
 19670                           ;stkvar	_dividend @ sp[(-2)+-8]
 19671                           ;stkvar	_dividend @ sp[(-2)+-8]
 19672  015A5E  0EF6               	movlw	-10
 19673  015A60  6CE3               	negf	plusw1,c
 19674  015A62  0EF7               	movlw	-9
 19675  015A64  1EE3               	comf	plusw1,f,c
 19676  015A66  0EF8               	movlw	-8
 19677  015A68  1EE3               	comf	plusw1,f,c
 19678  015A6A  0EF9               	movlw	-7
 19679  015A6C  1EE3               	comf	plusw1,f,c
 19680  015A6E  0EFA               	movlw	-6
 19681  015A70  1EE3               	comf	plusw1,f,c
 19682  015A72  0EFB               	movlw	-5
 19683  015A74  1EE3               	comf	plusw1,f,c
 19684  015A76  0EFC               	movlw	-4
 19685  015A78  1EE3               	comf	plusw1,f,c
 19686  015A7A  0EFD               	movlw	-3
 19687  015A7C  1EE3               	comf	plusw1,f,c
 19688  015A7E  E314               	bnc	u5590
 19689  015A80  0EF7               	movlw	-9
 19690  015A82  2AE3               	incf	plusw1,f,c
 19691  015A84  E311               	bnc	u5590
 19692  015A86  0EF8               	movlw	-8
 19693  015A88  2AE3               	incf	plusw1,f,c
 19694  015A8A  E30E               	bnc	u5590
 19695  015A8C  0EF9               	movlw	-7
 19696  015A8E  2AE3               	incf	plusw1,f,c
 19697  015A90  E30B               	bnc	u5590
 19698  015A92  0EFA               	movlw	-6
 19699  015A94  2AE3               	incf	plusw1,f,c
 19700  015A96  E308               	bnc	u5590
 19701  015A98  0EFB               	movlw	-5
 19702  015A9A  2AE3               	incf	plusw1,f,c
 19703  015A9C  E305               	bnc	u5590
 19704  015A9E  0EFC               	movlw	-4
 19705  015AA0  2AE3               	incf	plusw1,f,c
 19706  015AA2  E302               	bnc	u5590
 19707  015AA4  0EFD               	movlw	-3
 19708  015AA6  2AE3               	incf	plusw1,f,c
 19709  015AA8                     u5590:
 19710                           
 19711                           ;stkvar	_sign @ sp[(-2)+0]
 19712  015AA8  0EFE               	movlw	-2
 19713  015AAA  6AE3               	clrf	plusw1,c
 19714  015AAC  2AE3               	incf	plusw1,f,c
 19715  015AAE                     l6558:
 19716                           
 19717                           ;stkvar	_divisor @ sp[(-2)+-16]
 19718  015AAE  0EF5               	movlw	-11
 19719  015AB0  AEE3               	btfss	plusw1,7,c
 19720  015AB2  D025               	goto	u5610
 19721                           
 19722                           ;stkvar	_divisor @ sp[(-2)+-16]
 19723                           ;stkvar	_divisor @ sp[(-2)+-16]
 19724  015AB4  0EEE               	movlw	-18
 19725  015AB6  6CE3               	negf	plusw1,c
 19726  015AB8  0EEF               	movlw	-17
 19727  015ABA  1EE3               	comf	plusw1,f,c
 19728  015ABC  0EF0               	movlw	-16
 19729  015ABE  1EE3               	comf	plusw1,f,c
 19730  015AC0  0EF1               	movlw	-15
 19731  015AC2  1EE3               	comf	plusw1,f,c
 19732  015AC4  0EF2               	movlw	-14
 19733  015AC6  1EE3               	comf	plusw1,f,c
 19734  015AC8  0EF3               	movlw	-13
 19735  015ACA  1EE3               	comf	plusw1,f,c
 19736  015ACC  0EF4               	movlw	-12
 19737  015ACE  1EE3               	comf	plusw1,f,c
 19738  015AD0  0EF5               	movlw	-11
 19739  015AD2  1EE3               	comf	plusw1,f,c
 19740  015AD4  E314               	bnc	u5610
 19741  015AD6  0EEF               	movlw	-17
 19742  015AD8  2AE3               	incf	plusw1,f,c
 19743  015ADA  E311               	bnc	u5610
 19744  015ADC  0EF0               	movlw	-16
 19745  015ADE  2AE3               	incf	plusw1,f,c
 19746  015AE0  E30E               	bnc	u5610
 19747  015AE2  0EF1               	movlw	-15
 19748  015AE4  2AE3               	incf	plusw1,f,c
 19749  015AE6  E30B               	bnc	u5610
 19750  015AE8  0EF2               	movlw	-14
 19751  015AEA  2AE3               	incf	plusw1,f,c
 19752  015AEC  E308               	bnc	u5610
 19753  015AEE  0EF3               	movlw	-13
 19754  015AF0  2AE3               	incf	plusw1,f,c
 19755  015AF2  E305               	bnc	u5610
 19756  015AF4  0EF4               	movlw	-12
 19757  015AF6  2AE3               	incf	plusw1,f,c
 19758  015AF8  E302               	bnc	u5610
 19759  015AFA  0EF5               	movlw	-11
 19760  015AFC  2AE3               	incf	plusw1,f,c
 19761  015AFE                     u5610:
 19762                           
 19763                           ;stkvar	_divisor @ sp[(-2)+-16]
 19764  015AFE  0EEE               	movlw	-18
 19765  015B00  50E3               	movf	plusw1,w,c
 19766  015B02  E116               	bnz	u5620
 19767  015B04  0EEF               	movlw	-17
 19768  015B06  50E3               	movf	plusw1,w,c
 19769  015B08  E113               	bnz	u5620
 19770  015B0A  0EF0               	movlw	-16
 19771  015B0C  50E3               	movf	plusw1,w,c
 19772  015B0E  E110               	bnz	u5620
 19773  015B10  0EF1               	movlw	-15
 19774  015B12  50E3               	movf	plusw1,w,c
 19775  015B14  E10D               	bnz	u5620
 19776  015B16  0EF2               	movlw	-14
 19777  015B18  50E3               	movf	plusw1,w,c
 19778  015B1A  E10A               	bnz	u5620
 19779  015B1C  0EF3               	movlw	-13
 19780  015B1E  50E3               	movf	plusw1,w,c
 19781  015B20  E107               	bnz	u5620
 19782  015B22  0EF4               	movlw	-12
 19783  015B24  50E3               	movf	plusw1,w,c
 19784  015B26  E104               	bnz	u5620
 19785  015B28  0EF5               	movlw	-11
 19786  015B2A  50E3               	movf	plusw1,w,c
 19787  015B2C  B4D8               	btfsc	status,2,c
 19788  015B2E  D075               	goto	u5650
 19789  015B30                     u5620:
 19790                           
 19791                           ;stkvar	_counter @ sp[(-2)+1]
 19792  015B30  0EFF               	movlw	-1
 19793  015B32  6AE3               	clrf	plusw1,c
 19794  015B34  D012               	goto	L20
 19795  015B36                     l6566:
 19796                           
 19797                           ;stkvar	_divisor @ sp[(-2)+-16]
 19798  015B36  90D8               	bcf	status,0,c
 19799  015B38  0EEE               	movlw	-18
 19800  015B3A  36E3               	rlcf	plusw1,f,c
 19801  015B3C  0EEF               	movlw	-17
 19802  015B3E  36E3               	rlcf	plusw1,f,c
 19803  015B40  0EF0               	movlw	-16
 19804  015B42  36E3               	rlcf	plusw1,f,c
 19805  015B44  0EF1               	movlw	-15
 19806  015B46  36E3               	rlcf	plusw1,f,c
 19807  015B48  0EF2               	movlw	-14
 19808  015B4A  36E3               	rlcf	plusw1,f,c
 19809  015B4C  0EF3               	movlw	-13
 19810  015B4E  36E3               	rlcf	plusw1,f,c
 19811  015B50  0EF4               	movlw	-12
 19812  015B52  36E3               	rlcf	plusw1,f,c
 19813  015B54  0EF5               	movlw	-11
 19814  015B56  36E3               	rlcf	plusw1,f,c
 19815                           
 19816                           ;stkvar	_counter @ sp[(-2)+1]
 19817  015B58  0EFF               	movlw	-1
 19818  015B5A                     L20:
 19819  015B5A  2AE3               	incf	plusw1,f,c
 19820                           
 19821                           ;stkvar	_divisor @ sp[(-2)+-16]
 19822  015B5C  0EF5               	movlw	-11
 19823  015B5E  AEE3               	btfss	plusw1,7,c
 19824  015B60  D7EA               	goto	l6566
 19825  015B62                     u5630:
 19826                           
 19827                           ;stkvar	_divisor @ sp[(-2)+-16]
 19828                           ;stkvar	_dividend @ sp[(-2)+-8]
 19829  015B62  50E1               	movf	fsr1l,w,c
 19830  015B64  0FF6               	addlw	-10
 19831  015B66  6ED9               	movwf	fsr2l,c
 19832  015B68  50E2               	movf	fsr1h,w,c
 19833  015B6A  6EDA               	movwf	fsr2h,c
 19834  015B6C  0EFF               	movlw	255
 19835  015B6E  22DA               	addwfc	fsr2h,f,c
 19836  015B70  0EEE               	movlw	-18
 19837  015B72  50E3               	movf	plusw1,w,c
 19838  015B74  5CDE               	subwf	postinc2,w,c
 19839  015B76  0EEF               	movlw	-17
 19840  015B78  50E3               	movf	plusw1,w,c
 19841  015B7A  58DE               	subwfb	postinc2,w,c
 19842  015B7C  0EF0               	movlw	-16
 19843  015B7E  50E3               	movf	plusw1,w,c
 19844  015B80  58DE               	subwfb	postinc2,w,c
 19845  015B82  0EF1               	movlw	-15
 19846  015B84  50E3               	movf	plusw1,w,c
 19847  015B86  58DE               	subwfb	postinc2,w,c
 19848  015B88  0EF2               	movlw	-14
 19849  015B8A  50E3               	movf	plusw1,w,c
 19850  015B8C  58DE               	subwfb	postinc2,w,c
 19851  015B8E  0EF3               	movlw	-13
 19852  015B90  50E3               	movf	plusw1,w,c
 19853  015B92  58DE               	subwfb	postinc2,w,c
 19854  015B94  0EF4               	movlw	-12
 19855  015B96  50E3               	movf	plusw1,w,c
 19856  015B98  58DE               	subwfb	postinc2,w,c
 19857  015B9A  0EF5               	movlw	-11
 19858  015B9C  50E3               	movf	plusw1,w,c
 19859  015B9E  58DE               	subwfb	postinc2,w,c
 19860  015BA0  A0D8               	btfss	status,0,c
 19861  015BA2  D01F               	goto	l6574
 19862                           
 19863                           ;stkvar	_divisor @ sp[(-2)+-16]
 19864                           ;stkvar	_dividend @ sp[(-2)+-8]
 19865  015BA4  50E1               	movf	fsr1l,w,c
 19866  015BA6  0FF6               	addlw	-10
 19867  015BA8  6ED9               	movwf	fsr2l,c
 19868  015BAA  50E2               	movf	fsr1h,w,c
 19869  015BAC  6EDA               	movwf	fsr2h,c
 19870  015BAE  0EFF               	movlw	255
 19871  015BB0  22DA               	addwfc	fsr2h,f,c
 19872  015BB2  0EEE               	movlw	-18
 19873  015BB4  50E3               	movf	plusw1,w,c
 19874  015BB6  5EDE               	subwf	postinc2,f,c
 19875  015BB8  0EEF               	movlw	-17
 19876  015BBA  50E3               	movf	plusw1,w,c
 19877  015BBC  5ADE               	subwfb	postinc2,f,c
 19878  015BBE  0EF0               	movlw	-16
 19879  015BC0  50E3               	movf	plusw1,w,c
 19880  015BC2  5ADE               	subwfb	postinc2,f,c
 19881  015BC4  0EF1               	movlw	-15
 19882  015BC6  50E3               	movf	plusw1,w,c
 19883  015BC8  5ADE               	subwfb	postinc2,f,c
 19884  015BCA  0EF2               	movlw	-14
 19885  015BCC  50E3               	movf	plusw1,w,c
 19886  015BCE  5ADE               	subwfb	postinc2,f,c
 19887  015BD0  0EF3               	movlw	-13
 19888  015BD2  50E3               	movf	plusw1,w,c
 19889  015BD4  5ADE               	subwfb	postinc2,f,c
 19890  015BD6  0EF4               	movlw	-12
 19891  015BD8  50E3               	movf	plusw1,w,c
 19892  015BDA  5ADE               	subwfb	postinc2,f,c
 19893  015BDC  0EF5               	movlw	-11
 19894  015BDE  50E3               	movf	plusw1,w,c
 19895  015BE0  5ADE               	subwfb	postinc2,f,c
 19896  015BE2                     l6574:
 19897                           
 19898                           ;stkvar	_divisor @ sp[(-2)+-16]
 19899  015BE2  90D8               	bcf	status,0,c
 19900  015BE4  0EF5               	movlw	-11
 19901  015BE6  32E3               	rrcf	plusw1,f,c
 19902  015BE8  0EF4               	movlw	-12
 19903  015BEA  32E3               	rrcf	plusw1,f,c
 19904  015BEC  0EF3               	movlw	-13
 19905  015BEE  32E3               	rrcf	plusw1,f,c
 19906  015BF0  0EF2               	movlw	-14
 19907  015BF2  32E3               	rrcf	plusw1,f,c
 19908  015BF4  0EF1               	movlw	-15
 19909  015BF6  32E3               	rrcf	plusw1,f,c
 19910  015BF8  0EF0               	movlw	-16
 19911  015BFA  32E3               	rrcf	plusw1,f,c
 19912  015BFC  0EEF               	movlw	-17
 19913  015BFE  32E3               	rrcf	plusw1,f,c
 19914  015C00  0EEE               	movlw	-18
 19915  015C02  32E3               	rrcf	plusw1,f,c
 19916                           
 19917                           ;stkvar	_counter @ sp[(-2)+1]
 19918  015C04  0EFF               	movlw	-1
 19919  015C06  50E3               	movf	plusw1,w,c
 19920  015C08  6E33               	movwf	btemp^0,c
 19921  015C0A  0E01               	movlw	1
 19922  015C0C  5E33               	subwf	btemp^0,f,c
 19923  015C0E  0EFF               	movlw	-1
 19924  015C10  0060  F0CF  FFE3   	movff	btemp,plusw1
 19925  015C16  A4D8               	btfss	status,2,c
 19926  015C18  D7A4               	goto	u5630
 19927  015C1A                     u5650:
 19928                           
 19929                           ;stkvar	_sign @ sp[(-2)+0]
 19930  015C1A  0EFE               	movlw	-2
 19931  015C1C  50E3               	movf	plusw1,w,c
 19932  015C1E  B4D8               	btfsc	status,2,c
 19933  015C20  D025               	goto	u5670
 19934                           
 19935                           ;stkvar	_dividend @ sp[(-2)+-8]
 19936                           ;stkvar	_dividend @ sp[(-2)+-8]
 19937  015C22  0EF6               	movlw	-10
 19938  015C24  6CE3               	negf	plusw1,c
 19939  015C26  0EF7               	movlw	-9
 19940  015C28  1EE3               	comf	plusw1,f,c
 19941  015C2A  0EF8               	movlw	-8
 19942  015C2C  1EE3               	comf	plusw1,f,c
 19943  015C2E  0EF9               	movlw	-7
 19944  015C30  1EE3               	comf	plusw1,f,c
 19945  015C32  0EFA               	movlw	-6
 19946  015C34  1EE3               	comf	plusw1,f,c
 19947  015C36  0EFB               	movlw	-5
 19948  015C38  1EE3               	comf	plusw1,f,c
 19949  015C3A  0EFC               	movlw	-4
 19950  015C3C  1EE3               	comf	plusw1,f,c
 19951  015C3E  0EFD               	movlw	-3
 19952  015C40  1EE3               	comf	plusw1,f,c
 19953  015C42  E314               	bnc	u5670
 19954  015C44  0EF7               	movlw	-9
 19955  015C46  2AE3               	incf	plusw1,f,c
 19956  015C48  E311               	bnc	u5670
 19957  015C4A  0EF8               	movlw	-8
 19958  015C4C  2AE3               	incf	plusw1,f,c
 19959  015C4E  E30E               	bnc	u5670
 19960  015C50  0EF9               	movlw	-7
 19961  015C52  2AE3               	incf	plusw1,f,c
 19962  015C54  E30B               	bnc	u5670
 19963  015C56  0EFA               	movlw	-6
 19964  015C58  2AE3               	incf	plusw1,f,c
 19965  015C5A  E308               	bnc	u5670
 19966  015C5C  0EFB               	movlw	-5
 19967  015C5E  2AE3               	incf	plusw1,f,c
 19968  015C60  E305               	bnc	u5670
 19969  015C62  0EFC               	movlw	-4
 19970  015C64  2AE3               	incf	plusw1,f,c
 19971  015C66  E302               	bnc	u5670
 19972  015C68  0EFD               	movlw	-3
 19973  015C6A  2AE3               	incf	plusw1,f,c
 19974  015C6C                     u5670:
 19975                           
 19976                           ;stkvar	_dividend @ sp[(-2)+-8]
 19977  015C6C  0EF6               	movlw	246
 19978  015C6E  24E1               	addwf	fsr1l,w,c
 19979  015C70  6ED9               	movwf	fsr2l,c
 19980  015C72  0EFF               	movlw	255
 19981  015C74  20E2               	addwfc	fsr1h,w,c
 19982  015C76  6EDA               	movwf	fsr2h,c
 19983                           
 19984                           ;stkvar	?___aomod @ sp[(-2)+-8]
 19985  015C78  0E08               	movlw	8
 19986  015C7A  6E33               	movwf	btemp^0,c
 19987  015C7C  0EF6               	movlw	-10
 19988  015C7E                     us568999:
 19989  015C7E  006F FF7B FFE3     	movff	postinc2,plusw1
 19990  015C84  28E8               	incf	wreg,w,c
 19991  015C86  2E33               	decfsz	btemp^0,f,c
 19992  015C88  D7FA               	bra	us568999
 19993                           
 19994                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19995  015C8A  52E5               	movf	postdec1,f,c
 19996  015C8C  52E5               	movf	postdec1,f,c
 19997  015C8E  0012               	return		;funcret
 19998  015C90                     __end_of___aomod:
 19999                           	opt callstack 0
 20000                           
 20001 ;; *************** function ___aodiv *****************
 20002 ;; Defined at:
 20003 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20004 ;; Parameters:    Size  Location     Type
 20005 ;;  dividend        8  [STACK] long long 
 20006 ;;  divisor         8  [STACK] long long 
 20007 ;; Auto vars:     Size  Location     Type
 20008 ;;  quotient        8  [STACK] long long 
 20009 ;;  sign            1  [STACK] unsigned char 
 20010 ;;  counter         1  [STACK] unsigned char 
 20011 ;; Return value:  Size  Location     Type
 20012 ;;                  8  [STACK] long long 
 20013 ;; Registers used:
 20014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20015 ;; Tracked objects:
 20016 ;;		On entry : 0/2
 20017 ;;		On exit  : 0/0
 20018 ;;		Unchanged: 0/0
 20019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20024 ;;Total ram usage:        0 bytes
 20025 ;; Hardware stack levels used:    1
 20026 ;; Hardware stack levels required when called:    6
 20027 ;; This function calls:
 20028 ;;		Nothing
 20029 ;; This function is called by:
 20030 ;;		_dtoa
 20031 ;; This function uses a reentrant model
 20032 ;;
 20033                           
 20034                           	psect	text65
 20035  01555C                     __ptext65:
 20036                           	opt callstack 0
 20037  01555C                     ___aodiv:
 20038                           	opt callstack 0
 20039                           
 20040                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20041  01555C  0E0A               	movlw	10
 20042  01555E  26E1               	addwf	fsr1l,f,c
 20043  015560  0E00               	movlw	0
 20044  015562  22E2               	addwfc	fsr1h,f,c
 20045                           
 20046                           ;stkvar	_sign @ sp[(-10)+8]
 20047                           
 20048                           ;incstack = 0
 20049  015564  0EFE               	movlw	-2
 20050  015566  6AE3               	clrf	plusw1,c
 20051                           
 20052                           ;stkvar	_divisor @ sp[(-10)+-16]
 20053  015568  0EED               	movlw	-19
 20054  01556A  AEE3               	btfss	plusw1,7,c
 20055  01556C  D028               	goto	l6514
 20056                           
 20057                           ;stkvar	_divisor @ sp[(-10)+-16]
 20058                           ;stkvar	_divisor @ sp[(-10)+-16]
 20059  01556E  0EE6               	movlw	-26
 20060  015570  6CE3               	negf	plusw1,c
 20061  015572  0EE7               	movlw	-25
 20062  015574  1EE3               	comf	plusw1,f,c
 20063  015576  0EE8               	movlw	-24
 20064  015578  1EE3               	comf	plusw1,f,c
 20065  01557A  0EE9               	movlw	-23
 20066  01557C  1EE3               	comf	plusw1,f,c
 20067  01557E  0EEA               	movlw	-22
 20068  015580  1EE3               	comf	plusw1,f,c
 20069  015582  0EEB               	movlw	-21
 20070  015584  1EE3               	comf	plusw1,f,c
 20071  015586  0EEC               	movlw	-20
 20072  015588  1EE3               	comf	plusw1,f,c
 20073  01558A  0EED               	movlw	-19
 20074  01558C  1EE3               	comf	plusw1,f,c
 20075  01558E  E314               	bnc	u5470
 20076  015590  0EE7               	movlw	-25
 20077  015592  2AE3               	incf	plusw1,f,c
 20078  015594  E311               	bnc	u5470
 20079  015596  0EE8               	movlw	-24
 20080  015598  2AE3               	incf	plusw1,f,c
 20081  01559A  E30E               	bnc	u5470
 20082  01559C  0EE9               	movlw	-23
 20083  01559E  2AE3               	incf	plusw1,f,c
 20084  0155A0  E30B               	bnc	u5470
 20085  0155A2  0EEA               	movlw	-22
 20086  0155A4  2AE3               	incf	plusw1,f,c
 20087  0155A6  E308               	bnc	u5470
 20088  0155A8  0EEB               	movlw	-21
 20089  0155AA  2AE3               	incf	plusw1,f,c
 20090  0155AC  E305               	bnc	u5470
 20091  0155AE  0EEC               	movlw	-20
 20092  0155B0  2AE3               	incf	plusw1,f,c
 20093  0155B2  E302               	bnc	u5470
 20094  0155B4  0EED               	movlw	-19
 20095  0155B6  2AE3               	incf	plusw1,f,c
 20096  0155B8                     u5470:
 20097                           
 20098                           ;stkvar	_sign @ sp[(-10)+8]
 20099  0155B8  0EFE               	movlw	-2
 20100  0155BA  6AE3               	clrf	plusw1,c
 20101  0155BC  2AE3               	incf	plusw1,f,c
 20102  0155BE                     l6514:
 20103                           
 20104                           ;stkvar	_dividend @ sp[(-10)+-8]
 20105  0155BE  0EF5               	movlw	-11
 20106  0155C0  AEE3               	btfss	plusw1,7,c
 20107  0155C2  D027               	goto	l6520
 20108                           
 20109                           ;stkvar	_dividend @ sp[(-10)+-8]
 20110                           ;stkvar	_dividend @ sp[(-10)+-8]
 20111  0155C4  0EEE               	movlw	-18
 20112  0155C6  6CE3               	negf	plusw1,c
 20113  0155C8  0EEF               	movlw	-17
 20114  0155CA  1EE3               	comf	plusw1,f,c
 20115  0155CC  0EF0               	movlw	-16
 20116  0155CE  1EE3               	comf	plusw1,f,c
 20117  0155D0  0EF1               	movlw	-15
 20118  0155D2  1EE3               	comf	plusw1,f,c
 20119  0155D4  0EF2               	movlw	-14
 20120  0155D6  1EE3               	comf	plusw1,f,c
 20121  0155D8  0EF3               	movlw	-13
 20122  0155DA  1EE3               	comf	plusw1,f,c
 20123  0155DC  0EF4               	movlw	-12
 20124  0155DE  1EE3               	comf	plusw1,f,c
 20125  0155E0  0EF5               	movlw	-11
 20126  0155E2  1EE3               	comf	plusw1,f,c
 20127  0155E4  E314               	bnc	u5490
 20128  0155E6  0EEF               	movlw	-17
 20129  0155E8  2AE3               	incf	plusw1,f,c
 20130  0155EA  E311               	bnc	u5490
 20131  0155EC  0EF0               	movlw	-16
 20132  0155EE  2AE3               	incf	plusw1,f,c
 20133  0155F0  E30E               	bnc	u5490
 20134  0155F2  0EF1               	movlw	-15
 20135  0155F4  2AE3               	incf	plusw1,f,c
 20136  0155F6  E30B               	bnc	u5490
 20137  0155F8  0EF2               	movlw	-14
 20138  0155FA  2AE3               	incf	plusw1,f,c
 20139  0155FC  E308               	bnc	u5490
 20140  0155FE  0EF3               	movlw	-13
 20141  015600  2AE3               	incf	plusw1,f,c
 20142  015602  E305               	bnc	u5490
 20143  015604  0EF4               	movlw	-12
 20144  015606  2AE3               	incf	plusw1,f,c
 20145  015608  E302               	bnc	u5490
 20146  01560A  0EF5               	movlw	-11
 20147  01560C  2AE3               	incf	plusw1,f,c
 20148  01560E                     u5490:
 20149                           
 20150                           ;stkvar	_sign @ sp[(-10)+8]
 20151  01560E  0EFE               	movlw	-2
 20152  015610  70E3               	btg	plusw1,0,c
 20153  015612                     l6520:
 20154                           
 20155                           ;stkvar	_quotient @ sp[(-10)+0]
 20156  015612  0E07               	movlw	7
 20157  015614  6E33               	movwf	btemp^0,c
 20158  015616  0EF6               	movlw	-10
 20159  015618                     u5501:
 20160  015618  6AE3               	clrf	plusw1,c
 20161  01561A  2AE8               	incf	wreg,f,c
 20162  01561C  0633               	decf	btemp^0,f,c
 20163  01561E  E2FC               	bc	u5501
 20164                           
 20165                           ;stkvar	_divisor @ sp[(-10)+-16]
 20166  015620  0EE6               	movlw	-26
 20167  015622  50E3               	movf	plusw1,w,c
 20168  015624  E116               	bnz	u5510
 20169  015626  0EE7               	movlw	-25
 20170  015628  50E3               	movf	plusw1,w,c
 20171  01562A  E113               	bnz	u5510
 20172  01562C  0EE8               	movlw	-24
 20173  01562E  50E3               	movf	plusw1,w,c
 20174  015630  E110               	bnz	u5510
 20175  015632  0EE9               	movlw	-23
 20176  015634  50E3               	movf	plusw1,w,c
 20177  015636  E10D               	bnz	u5510
 20178  015638  0EEA               	movlw	-22
 20179  01563A  50E3               	movf	plusw1,w,c
 20180  01563C  E10A               	bnz	u5510
 20181  01563E  0EEB               	movlw	-21
 20182  015640  50E3               	movf	plusw1,w,c
 20183  015642  E107               	bnz	u5510
 20184  015644  0EEC               	movlw	-20
 20185  015646  50E3               	movf	plusw1,w,c
 20186  015648  E104               	bnz	u5510
 20187  01564A  0EED               	movlw	-19
 20188  01564C  50E3               	movf	plusw1,w,c
 20189  01564E  B4D8               	btfsc	status,2,c
 20190  015650  D088               	goto	u5540
 20191  015652                     u5510:
 20192                           
 20193                           ;stkvar	_counter @ sp[(-10)+9]
 20194  015652  0EFF               	movlw	-1
 20195  015654  6AE3               	clrf	plusw1,c
 20196  015656  D012               	goto	L21
 20197  015658                     l6526:
 20198                           
 20199                           ;stkvar	_divisor @ sp[(-10)+-16]
 20200  015658  90D8               	bcf	status,0,c
 20201  01565A  0EE6               	movlw	-26
 20202  01565C  36E3               	rlcf	plusw1,f,c
 20203  01565E  0EE7               	movlw	-25
 20204  015660  36E3               	rlcf	plusw1,f,c
 20205  015662  0EE8               	movlw	-24
 20206  015664  36E3               	rlcf	plusw1,f,c
 20207  015666  0EE9               	movlw	-23
 20208  015668  36E3               	rlcf	plusw1,f,c
 20209  01566A  0EEA               	movlw	-22
 20210  01566C  36E3               	rlcf	plusw1,f,c
 20211  01566E  0EEB               	movlw	-21
 20212  015670  36E3               	rlcf	plusw1,f,c
 20213  015672  0EEC               	movlw	-20
 20214  015674  36E3               	rlcf	plusw1,f,c
 20215  015676  0EED               	movlw	-19
 20216  015678  36E3               	rlcf	plusw1,f,c
 20217                           
 20218                           ;stkvar	_counter @ sp[(-10)+9]
 20219  01567A  0EFF               	movlw	-1
 20220  01567C                     L21:
 20221  01567C  2AE3               	incf	plusw1,f,c
 20222                           
 20223                           ;stkvar	_divisor @ sp[(-10)+-16]
 20224  01567E  0EED               	movlw	-19
 20225  015680  AEE3               	btfss	plusw1,7,c
 20226  015682  D7EA               	goto	l6526
 20227  015684                     u5520:
 20228                           
 20229                           ;stkvar	_quotient @ sp[(-10)+0]
 20230  015684  90D8               	bcf	status,0,c
 20231  015686  0EF6               	movlw	-10
 20232  015688  36E3               	rlcf	plusw1,f,c
 20233  01568A  0EF7               	movlw	-9
 20234  01568C  36E3               	rlcf	plusw1,f,c
 20235  01568E  0EF8               	movlw	-8
 20236  015690  36E3               	rlcf	plusw1,f,c
 20237  015692  0EF9               	movlw	-7
 20238  015694  36E3               	rlcf	plusw1,f,c
 20239  015696  0EFA               	movlw	-6
 20240  015698  36E3               	rlcf	plusw1,f,c
 20241  01569A  0EFB               	movlw	-5
 20242  01569C  36E3               	rlcf	plusw1,f,c
 20243  01569E  0EFC               	movlw	-4
 20244  0156A0  36E3               	rlcf	plusw1,f,c
 20245  0156A2  0EFD               	movlw	-3
 20246  0156A4  36E3               	rlcf	plusw1,f,c
 20247                           
 20248                           ;stkvar	_divisor @ sp[(-10)+-16]
 20249                           ;stkvar	_dividend @ sp[(-10)+-8]
 20250  0156A6  50E1               	movf	fsr1l,w,c
 20251  0156A8  0FEE               	addlw	-18
 20252  0156AA  6ED9               	movwf	fsr2l,c
 20253  0156AC  50E2               	movf	fsr1h,w,c
 20254  0156AE  6EDA               	movwf	fsr2h,c
 20255  0156B0  0EFF               	movlw	255
 20256  0156B2  22DA               	addwfc	fsr2h,f,c
 20257  0156B4  0EE6               	movlw	-26
 20258  0156B6  50E3               	movf	plusw1,w,c
 20259  0156B8  5CDE               	subwf	postinc2,w,c
 20260  0156BA  0EE7               	movlw	-25
 20261  0156BC  50E3               	movf	plusw1,w,c
 20262  0156BE  58DE               	subwfb	postinc2,w,c
 20263  0156C0  0EE8               	movlw	-24
 20264  0156C2  50E3               	movf	plusw1,w,c
 20265  0156C4  58DE               	subwfb	postinc2,w,c
 20266  0156C6  0EE9               	movlw	-23
 20267  0156C8  50E3               	movf	plusw1,w,c
 20268  0156CA  58DE               	subwfb	postinc2,w,c
 20269  0156CC  0EEA               	movlw	-22
 20270  0156CE  50E3               	movf	plusw1,w,c
 20271  0156D0  58DE               	subwfb	postinc2,w,c
 20272  0156D2  0EEB               	movlw	-21
 20273  0156D4  50E3               	movf	plusw1,w,c
 20274  0156D6  58DE               	subwfb	postinc2,w,c
 20275  0156D8  0EEC               	movlw	-20
 20276  0156DA  50E3               	movf	plusw1,w,c
 20277  0156DC  58DE               	subwfb	postinc2,w,c
 20278  0156DE  0EED               	movlw	-19
 20279  0156E0  50E3               	movf	plusw1,w,c
 20280  0156E2  58DE               	subwfb	postinc2,w,c
 20281  0156E4  A0D8               	btfss	status,0,c
 20282  0156E6  D021               	goto	l6538
 20283                           
 20284                           ;stkvar	_divisor @ sp[(-10)+-16]
 20285                           ;stkvar	_dividend @ sp[(-10)+-8]
 20286  0156E8  50E1               	movf	fsr1l,w,c
 20287  0156EA  0FEE               	addlw	-18
 20288  0156EC  6ED9               	movwf	fsr2l,c
 20289  0156EE  50E2               	movf	fsr1h,w,c
 20290  0156F0  6EDA               	movwf	fsr2h,c
 20291  0156F2  0EFF               	movlw	255
 20292  0156F4  22DA               	addwfc	fsr2h,f,c
 20293  0156F6  0EE6               	movlw	-26
 20294  0156F8  50E3               	movf	plusw1,w,c
 20295  0156FA  5EDE               	subwf	postinc2,f,c
 20296  0156FC  0EE7               	movlw	-25
 20297  0156FE  50E3               	movf	plusw1,w,c
 20298  015700  5ADE               	subwfb	postinc2,f,c
 20299  015702  0EE8               	movlw	-24
 20300  015704  50E3               	movf	plusw1,w,c
 20301  015706  5ADE               	subwfb	postinc2,f,c
 20302  015708  0EE9               	movlw	-23
 20303  01570A  50E3               	movf	plusw1,w,c
 20304  01570C  5ADE               	subwfb	postinc2,f,c
 20305  01570E  0EEA               	movlw	-22
 20306  015710  50E3               	movf	plusw1,w,c
 20307  015712  5ADE               	subwfb	postinc2,f,c
 20308  015714  0EEB               	movlw	-21
 20309  015716  50E3               	movf	plusw1,w,c
 20310  015718  5ADE               	subwfb	postinc2,f,c
 20311  01571A  0EEC               	movlw	-20
 20312  01571C  50E3               	movf	plusw1,w,c
 20313  01571E  5ADE               	subwfb	postinc2,f,c
 20314  015720  0EED               	movlw	-19
 20315  015722  50E3               	movf	plusw1,w,c
 20316  015724  5ADE               	subwfb	postinc2,f,c
 20317                           
 20318                           ;stkvar	_quotient @ sp[(-10)+0]
 20319  015726  0EF6               	movlw	-10
 20320  015728  80E3               	bsf	plusw1,0,c
 20321  01572A                     l6538:
 20322                           
 20323                           ;stkvar	_divisor @ sp[(-10)+-16]
 20324  01572A  90D8               	bcf	status,0,c
 20325  01572C  0EED               	movlw	-19
 20326  01572E  32E3               	rrcf	plusw1,f,c
 20327  015730  0EEC               	movlw	-20
 20328  015732  32E3               	rrcf	plusw1,f,c
 20329  015734  0EEB               	movlw	-21
 20330  015736  32E3               	rrcf	plusw1,f,c
 20331  015738  0EEA               	movlw	-22
 20332  01573A  32E3               	rrcf	plusw1,f,c
 20333  01573C  0EE9               	movlw	-23
 20334  01573E  32E3               	rrcf	plusw1,f,c
 20335  015740  0EE8               	movlw	-24
 20336  015742  32E3               	rrcf	plusw1,f,c
 20337  015744  0EE7               	movlw	-25
 20338  015746  32E3               	rrcf	plusw1,f,c
 20339  015748  0EE6               	movlw	-26
 20340  01574A  32E3               	rrcf	plusw1,f,c
 20341                           
 20342                           ;stkvar	_counter @ sp[(-10)+9]
 20343  01574C  0EFF               	movlw	-1
 20344  01574E  50E3               	movf	plusw1,w,c
 20345  015750  6E33               	movwf	btemp^0,c
 20346  015752  0E01               	movlw	1
 20347  015754  5E33               	subwf	btemp^0,f,c
 20348  015756  0EFF               	movlw	-1
 20349  015758  0060  F0CF  FFE3   	movff	btemp,plusw1
 20350  01575E  A4D8               	btfss	status,2,c
 20351  015760  D791               	goto	u5520
 20352  015762                     u5540:
 20353                           
 20354                           ;stkvar	_sign @ sp[(-10)+8]
 20355  015762  0EFE               	movlw	-2
 20356  015764  50E3               	movf	plusw1,w,c
 20357  015766  B4D8               	btfsc	status,2,c
 20358  015768  D025               	goto	u5560
 20359                           
 20360                           ;stkvar	_quotient @ sp[(-10)+0]
 20361                           ;stkvar	_quotient @ sp[(-10)+0]
 20362  01576A  0EF6               	movlw	-10
 20363  01576C  6CE3               	negf	plusw1,c
 20364  01576E  0EF7               	movlw	-9
 20365  015770  1EE3               	comf	plusw1,f,c
 20366  015772  0EF8               	movlw	-8
 20367  015774  1EE3               	comf	plusw1,f,c
 20368  015776  0EF9               	movlw	-7
 20369  015778  1EE3               	comf	plusw1,f,c
 20370  01577A  0EFA               	movlw	-6
 20371  01577C  1EE3               	comf	plusw1,f,c
 20372  01577E  0EFB               	movlw	-5
 20373  015780  1EE3               	comf	plusw1,f,c
 20374  015782  0EFC               	movlw	-4
 20375  015784  1EE3               	comf	plusw1,f,c
 20376  015786  0EFD               	movlw	-3
 20377  015788  1EE3               	comf	plusw1,f,c
 20378  01578A  E314               	bnc	u5560
 20379  01578C  0EF7               	movlw	-9
 20380  01578E  2AE3               	incf	plusw1,f,c
 20381  015790  E311               	bnc	u5560
 20382  015792  0EF8               	movlw	-8
 20383  015794  2AE3               	incf	plusw1,f,c
 20384  015796  E30E               	bnc	u5560
 20385  015798  0EF9               	movlw	-7
 20386  01579A  2AE3               	incf	plusw1,f,c
 20387  01579C  E30B               	bnc	u5560
 20388  01579E  0EFA               	movlw	-6
 20389  0157A0  2AE3               	incf	plusw1,f,c
 20390  0157A2  E308               	bnc	u5560
 20391  0157A4  0EFB               	movlw	-5
 20392  0157A6  2AE3               	incf	plusw1,f,c
 20393  0157A8  E305               	bnc	u5560
 20394  0157AA  0EFC               	movlw	-4
 20395  0157AC  2AE3               	incf	plusw1,f,c
 20396  0157AE  E302               	bnc	u5560
 20397  0157B0  0EFD               	movlw	-3
 20398  0157B2  2AE3               	incf	plusw1,f,c
 20399  0157B4                     u5560:
 20400                           
 20401                           ;stkvar	_quotient @ sp[(-10)+0]
 20402  0157B4  0EF6               	movlw	246
 20403  0157B6  24E1               	addwf	fsr1l,w,c
 20404  0157B8  6ED9               	movwf	fsr2l,c
 20405  0157BA  0EFF               	movlw	255
 20406  0157BC  20E2               	addwfc	fsr1h,w,c
 20407  0157BE  6EDA               	movwf	fsr2h,c
 20408                           
 20409                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20410  0157C0  0E08               	movlw	8
 20411  0157C2  6E33               	movwf	btemp^0,c
 20412  0157C4  0EEE               	movlw	-18
 20413  0157C6                     us557999:
 20414  0157C6  006F FF7B FFE3     	movff	postinc2,plusw1
 20415  0157CC  28E8               	incf	wreg,w,c
 20416  0157CE  2E33               	decfsz	btemp^0,f,c
 20417  0157D0  D7FA               	bra	us557999
 20418                           
 20419                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20420  0157D2  0EF6               	movlw	246
 20421  0157D4  26E1               	addwf	fsr1l,f,c
 20422  0157D6  0EFF               	movlw	255
 20423  0157D8  22E2               	addwfc	fsr1h,f,c
 20424  0157DA  0012               	return		;funcret
 20425  0157DC                     __end_of___aodiv:
 20426                           	opt callstack 0
 20427                           
 20428 ;; *************** function _ctoa *****************
 20429 ;; Defined at:
 20430 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20431 ;; Parameters:    Size  Location     Type
 20432 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20433 ;;		 -> f(6), NULL(0), 
 20434 ;;  c               1  [STACK] unsigned char 
 20435 ;; Auto vars:     Size  Location     Type
 20436 ;;  w               2  [STACK] int 
 20437 ;;  l               2    0        int 
 20438 ;; Return value:  Size  Location     Type
 20439 ;;                  2  [STACK] int 
 20440 ;; Registers used:
 20441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20442 ;; Tracked objects:
 20443 ;;		On entry : 0/0
 20444 ;;		On exit  : 0/0
 20445 ;;		Unchanged: 0/0
 20446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20451 ;;Total ram usage:        0 bytes
 20452 ;; Hardware stack levels used:    1
 20453 ;; Hardware stack levels required when called:   11
 20454 ;; This function calls:
 20455 ;;		_pad
 20456 ;; This function is called by:
 20457 ;;		_vfpfcnvrt
 20458 ;; This function uses a reentrant model
 20459 ;;
 20460                           
 20461                           	psect	text66
 20462  017C02                     __ptext66:
 20463                           	opt callstack 0
 20464  017C02                     _ctoa:
 20465                           	opt callstack 0
 20466                           
 20467                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20468  017C02  52E6               	movf	postinc1,f,c
 20469  017C04  52E6               	movf	postinc1,f,c
 20470                           
 20471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20472                           
 20473                           ;incstack = 0
 20474  017C06  501C               	movf	_width^0,w,c
 20475  017C08  101D               	iorwf	(_width+1)^0,w,c
 20476  017C0A  A4D8               	btfss	status,2,c
 20477  017C0C  D009               	goto	l9318
 20478                           
 20479                           ;stkvar	_w @ sp[(-2)+0]
 20480  017C0E  0EFE               	movlw	-2
 20481  017C10  0060  F073  FFE3   	movff	_width,plusw1
 20482  017C16  0EFF               	movlw	-1
 20483  017C18  0060  F077  FFE3   	movff	_width+1,plusw1
 20484  017C1E  D016               	goto	l9320
 20485  017C20                     l9318:
 20486  017C20  0EFF               	movlw	255
 20487  017C22  6E3D               	movwf	(btemp+10)^0,c
 20488  017C24  0EFF               	movlw	255
 20489  017C26  6E3E               	movwf	(btemp+11)^0,c
 20490  017C28  0060  F070  F03B   	movff	_width,btemp+8
 20491  017C2E  0060  F074  F03C   	movff	_width+1,btemp+9
 20492  017C34  503D               	movf	(btemp+10)^0,w,c
 20493  017C36  263B               	addwf	(btemp+8)^0,f,c
 20494  017C38  503E               	movf	(btemp+11)^0,w,c
 20495  017C3A  223C               	addwfc	(btemp+9)^0,f,c
 20496                           
 20497                           ;stkvar	_w @ sp[(-2)+0]
 20498  017C3C  0EFE               	movlw	-2
 20499  017C3E  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 20500  017C44  0EFF               	movlw	-1
 20501  017C46  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 20502  017C4C                     l9320:
 20503                           
 20504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20505                           ;stkvar	_c @ sp[(-2)+-3]
 20506  017C4C  0EFB               	movlw	-5
 20507  017C4E  006F FF8C  F2AC    	movff	plusw1,_dbuf
 20508                           
 20509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20510  017C54  0102               	movlb	2	; () banked
 20511  017C56  6BAD               	clrf	(_dbuf+1)& (0+255),b
 20512                           
 20513                           ; BSR set to: 2
 20514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20515                           ;stkvar	_w @ sp[(-2)+0]
 20516  017C58  0EFE               	movlw	-2
 20517  017C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 20518  017C60  006F FF8F FFE6     	movff	plusw1,postinc1
 20519  017C66  0EAC               	movlw	low _dbuf
 20520  017C68  6EE6               	movwf	postinc1,c
 20521  017C6A  0E02               	movlw	high _dbuf
 20522  017C6C  6EE6               	movwf	postinc1,c
 20523                           
 20524                           ;stkvar	_fp @ sp[(-6)+-2]
 20525  017C6E  0EF8               	movlw	-8
 20526  017C70  006F FF8F FFE6     	movff	plusw1,postinc1
 20527  017C76  006F FF8F FFE6     	movff	plusw1,postinc1
 20528  017C7C  EC34  F0B8         	call	_pad	;wreg free
 20529                           
 20530                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20531  017C80  0EFB               	movlw	251
 20532  017C82  26E1               	addwf	fsr1l,f,c
 20533  017C84  0EFF               	movlw	255
 20534  017C86  22E2               	addwfc	fsr1h,f,c
 20535  017C88  0012               	return		;funcret
 20536  017C8A                     __end_of_ctoa:
 20537                           	opt callstack 0
 20538                           
 20539 ;; *************** function _pad *****************
 20540 ;; Defined at:
 20541 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20542 ;; Parameters:    Size  Location     Type
 20543 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20544 ;;		 -> f(6), NULL(0), 
 20545 ;;  buf             2  [STACK] PTR unsigned char 
 20546 ;;		 -> dbuf(80), 
 20547 ;;  p               2  [STACK] int 
 20548 ;; Auto vars:     Size  Location     Type
 20549 ;;  w               2  [STACK] int 
 20550 ;;  i               2  [STACK] int 
 20551 ;; Return value:  Size  Location     Type
 20552 ;;                  2  [STACK] int 
 20553 ;; Registers used:
 20554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20555 ;; Tracked objects:
 20556 ;;		On entry : 0/2
 20557 ;;		On exit  : 0/0
 20558 ;;		Unchanged: 0/0
 20559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20564 ;;Total ram usage:        0 bytes
 20565 ;; Hardware stack levels used:    1
 20566 ;; Hardware stack levels required when called:   10
 20567 ;; This function calls:
 20568 ;;		_fputc
 20569 ;;		_fputs
 20570 ;;		_strlen
 20571 ;; This function is called by:
 20572 ;;		_ctoa
 20573 ;;		_dtoa
 20574 ;;		_efgtoa
 20575 ;;		_utoa
 20576 ;;		_xtoa
 20577 ;; This function uses a reentrant model
 20578 ;;
 20579                           
 20580                           	psect	text67
 20581  017068                     __ptext67:
 20582                           	opt callstack 0
 20583  017068                     _pad:
 20584                           	opt callstack 0
 20585                           
 20586                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20587  017068  52E6               	movf	postinc1,f,c
 20588  01706A  52E6               	movf	postinc1,f,c
 20589  01706C  52E6               	movf	postinc1,f,c
 20590  01706E  52E6               	movf	postinc1,f,c
 20591                           
 20592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20593                           
 20594                           ;incstack = 0
 20595  017070  A020               	btfss	_flags^0,0,c
 20596  017072  D010               	goto	l9292
 20597                           
 20598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20599                           ;stkvar	_fp @ sp[(-4)+-2]
 20600  017074  0EFA               	movlw	-6
 20601  017076  006F FF8F FFE6     	movff	plusw1,postinc1
 20602  01707C  006F FF8F FFE6     	movff	plusw1,postinc1
 20603                           
 20604                           ;stkvar	_buf @ sp[(-6)+-4]
 20605  017082  0EF6               	movlw	-10
 20606  017084  006F FF8F FFE6     	movff	plusw1,postinc1
 20607  01708A  006F FF8F FFE6     	movff	plusw1,postinc1
 20608  017090  EC23  F0BD         	call	_fputs	;wreg free
 20609  017094                     l9292:
 20610                           
 20611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20612                           ;stkvar	_p @ sp[(-4)+-6]
 20613  017094  0EF7               	movlw	-9
 20614  017096  BEE3               	btfsc	plusw1,7,c
 20615  017098  D011               	goto	l9296
 20616                           
 20617                           ;stkvar	_p @ sp[(-4)+-6]
 20618                           ;stkvar	_w @ sp[(-4)+0]
 20619  01709A  0EF6               	movlw	-10
 20620  01709C  006F FF8C  F033    	movff	plusw1,btemp
 20621  0170A2  0EFC               	movlw	-4
 20622  0170A4  0060  F0CF  FFE3   	movff	btemp,plusw1
 20623  0170AA  0EF7               	movlw	-9
 20624  0170AC  006F FF8C  F033    	movff	plusw1,btemp
 20625  0170B2  0EFD               	movlw	-3
 20626  0170B4  0060  F0CF  FFE3   	movff	btemp,plusw1
 20627  0170BA  D004               	goto	l1768
 20628  0170BC                     l9296:
 20629                           
 20630                           ;stkvar	_w @ sp[(-4)+0]
 20631  0170BC  0EFC               	movlw	-4
 20632  0170BE  6AE3               	clrf	plusw1,c
 20633  0170C0  0EFD               	movlw	-3
 20634  0170C2  6AE3               	clrf	plusw1,c
 20635  0170C4                     l1768:
 20636                           
 20637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20638                           ;stkvar	_i @ sp[(-4)+2]
 20639  0170C4  0EFE               	movlw	-2
 20640  0170C6  6AE3               	clrf	plusw1,c
 20641  0170C8  0EFF               	movlw	-1
 20642  0170CA  6AE3               	clrf	plusw1,c
 20643                           
 20644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20645  0170CC  D01E               	goto	l9302
 20646  0170CE                     l9298:
 20647                           
 20648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20649                           ;stkvar	_fp @ sp[(-4)+-2]
 20650  0170CE  0EFA               	movlw	-6
 20651  0170D0  006F FF8F FFE6     	movff	plusw1,postinc1
 20652  0170D6  006F FF8F FFE6     	movff	plusw1,postinc1
 20653  0170DC  0E20               	movlw	32
 20654  0170DE  6EE6               	movwf	postinc1,c
 20655  0170E0  0E00               	movlw	0
 20656  0170E2  6EE6               	movwf	postinc1,c
 20657  0170E4  EC16  F0B7         	call	_fputc	;wreg free
 20658                           
 20659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20660                           ;stkvar	_i @ sp[(-4)+2]
 20661  0170E8  0EFE               	movlw	-2
 20662  0170EA  50E3               	movf	plusw1,w,c
 20663  0170EC  0F01               	addlw	1
 20664  0170EE  6E33               	movwf	btemp^0,c
 20665  0170F0  0EFE               	movlw	-2
 20666  0170F2  0060  F0CF  FFE3   	movff	btemp,plusw1
 20667  0170F8  6A33               	clrf	btemp^0,c
 20668  0170FA  0EFF               	movlw	-1
 20669  0170FC  50E3               	movf	plusw1,w,c
 20670  0170FE  2033               	addwfc	btemp^0,w,c
 20671  017100  6E33               	movwf	btemp^0,c
 20672  017102  0EFF               	movlw	-1
 20673  017104  0060  F0CF  FFE3   	movff	btemp,plusw1
 20674  01710A                     l9302:
 20675                           
 20676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20677                           ;stkvar	_w @ sp[(-4)+0]
 20678                           ;stkvar	_i @ sp[(-4)+2]
 20679  01710A  50E1               	movf	fsr1l,w,c
 20680  01710C  0FFE               	addlw	-2
 20681  01710E  6ED9               	movwf	fsr2l,c
 20682  017110  50E2               	movf	fsr1h,w,c
 20683  017112  6EDA               	movwf	fsr2h,c
 20684  017114  0EFF               	movlw	255
 20685  017116  22DA               	addwfc	fsr2h,f,c
 20686  017118  0EFC               	movlw	-4
 20687  01711A  50E3               	movf	plusw1,w,c
 20688  01711C  5CDE               	subwf	postinc2,w,c
 20689  01711E  50DE               	movf	postinc2,w,c
 20690  017120  0A80               	xorlw	128
 20691  017122  6E33               	movwf	btemp^0,c
 20692  017124  0EFD               	movlw	-3
 20693  017126  50E3               	movf	plusw1,w,c
 20694  017128  0A80               	xorlw	128
 20695  01712A  5833               	subwfb	btemp^0,w,c
 20696  01712C  A0D8               	btfss	status,0,c
 20697  01712E  D7CF               	goto	l9298
 20698                           
 20699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20700  017130  B020               	btfsc	_flags^0,0,c
 20701  017132  D010               	goto	l9306
 20702                           
 20703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20704                           ;stkvar	_fp @ sp[(-4)+-2]
 20705  017134  0EFA               	movlw	-6
 20706  017136  006F FF8F FFE6     	movff	plusw1,postinc1
 20707  01713C  006F FF8F FFE6     	movff	plusw1,postinc1
 20708                           
 20709                           ;stkvar	_buf @ sp[(-6)+-4]
 20710  017142  0EF6               	movlw	-10
 20711  017144  006F FF8F FFE6     	movff	plusw1,postinc1
 20712  01714A  006F FF8F FFE6     	movff	plusw1,postinc1
 20713  017150  EC23  F0BD         	call	_fputs	;wreg free
 20714  017154                     l9306:
 20715                           
 20716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 20717                           ;stkvar	_w @ sp[(-4)+0]
 20718                           ;stkvar	_buf @ sp[(-4)+-4]
 20719  017154  0EF8               	movlw	-8
 20720  017156  006F FF8F FFE6     	movff	plusw1,postinc1
 20721  01715C  006F FF8F FFE6     	movff	plusw1,postinc1
 20722  017162  ECD2  F0BC         	call	_strlen	;wreg free
 20723  017166  0EFC               	movlw	-4
 20724  017168  50E3               	movf	plusw1,w,c
 20725  01716A  2633               	addwf	btemp^0,f,c
 20726  01716C  0EFD               	movlw	-3
 20727  01716E  50E3               	movf	plusw1,w,c
 20728  017170  2234               	addwfc	(btemp+1)^0,f,c
 20729                           
 20730                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 20731  017172  0EF6               	movlw	246
 20732  017174  26E1               	addwf	fsr1l,f,c
 20733  017176  0EFF               	movlw	255
 20734  017178  22E2               	addwfc	fsr1h,f,c
 20735  01717A  0012               	return		;funcret
 20736  01717C                     __end_of_pad:
 20737                           	opt callstack 0
 20738                           
 20739 ;; *************** function _strlen *****************
 20740 ;; Defined at:
 20741 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 20742 ;; Parameters:    Size  Location     Type
 20743 ;;  s               2  [STACK] PTR const unsigned char 
 20744 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20745 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20746 ;;		 -> T(144), STR_7(5), STR_3(5), V(203), 
 20747 ;; Auto vars:     Size  Location     Type
 20748 ;;  a               2  [STACK] PTR const unsigned char 
 20749 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20750 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20751 ;;		 -> T(144), STR_7(5), STR_3(5), V(203), 
 20752 ;; Return value:  Size  Location     Type
 20753 ;;                  2  [STACK] unsigned int 
 20754 ;; Registers used:
 20755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 20756 ;; Tracked objects:
 20757 ;;		On entry : 0/0
 20758 ;;		On exit  : 0/0
 20759 ;;		Unchanged: 0/0
 20760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20765 ;;Total ram usage:        0 bytes
 20766 ;; Hardware stack levels used:    1
 20767 ;; Hardware stack levels required when called:    6
 20768 ;; This function calls:
 20769 ;;		Nothing
 20770 ;; This function is called by:
 20771 ;;		_eaDogM_WriteString
 20772 ;;		_pad
 20773 ;;		_stoa
 20774 ;; This function uses a reentrant model
 20775 ;;
 20776                           
 20777                           	psect	text68
 20778  0179A4                     __ptext68:
 20779                           	opt callstack 0
 20780  0179A4                     _strlen:
 20781                           	opt callstack 0
 20782                           
 20783                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20784  0179A4  52E6               	movf	postinc1,f,c
 20785  0179A6  52E6               	movf	postinc1,f,c
 20786                           
 20787                           ;stkvar	_s @ sp[(-2)+-2]
 20788                           
 20789                           ;incstack = 0
 20790  0179A8  0EFC               	movlw	-4
 20791  0179AA  006F FF8C  F03D    	movff	plusw1,btemp+10
 20792  0179B0  0EFD               	movlw	-3
 20793  0179B2  006F FF8C  F03E    	movff	plusw1,btemp+11
 20794                           
 20795                           ;stkvar	_a @ sp[(-2)+0]
 20796  0179B8  0EFF               	movlw	-1
 20797  0179BA  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 20798  0179C0  0EFE               	movlw	-2
 20799  0179C2  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 20800  0179C8  D011               	goto	l6132
 20801  0179CA                     l6130:
 20802                           
 20803                           ;stkvar	_s @ sp[(-2)+-2]
 20804  0179CA  0EFC               	movlw	-4
 20805  0179CC  50E3               	movf	plusw1,w,c
 20806  0179CE  0F01               	addlw	1
 20807  0179D0  6E33               	movwf	btemp^0,c
 20808  0179D2  0EFC               	movlw	-4
 20809  0179D4  0060  F0CF  FFE3   	movff	btemp,plusw1
 20810  0179DA  6A33               	clrf	btemp^0,c
 20811  0179DC  0EFD               	movlw	-3
 20812  0179DE  50E3               	movf	plusw1,w,c
 20813  0179E0  2033               	addwfc	btemp^0,w,c
 20814  0179E2  6E33               	movwf	btemp^0,c
 20815  0179E4  0EFD               	movlw	-3
 20816  0179E6  0060  F0CF  FFE3   	movff	btemp,plusw1
 20817  0179EC                     l6132:
 20818                           
 20819                           ;stkvar	_s @ sp[(-2)+-2]
 20820  0179EC  0EFC               	movlw	-4
 20821  0179EE  006F FF8F FFF6     	movff	plusw1,tblptrl
 20822  0179F4  0EFD               	movlw	-3
 20823  0179F6  006F FF8F FFF7     	movff	plusw1,tblptrh
 20824  0179FC  0E00               	movlw	low (__mediumconst shr (0+16))
 20825  0179FE  6EF8               	movwf	tblptru,c
 20826  017A00  0E1F               	movlw	(high __ramtop+-1)
 20827  017A02  64F7               	cpfsgt	tblptrh,c
 20828  017A04  D003               	bra	u4637
 20829  017A06  0008               	tblrd		*
 20830  017A08  50F5               	movf	tablat,w,c
 20831  017A0A  D007               	bra	u4630
 20832  017A0C                     u4637:
 20833  017A0C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20834  017A12  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20835  017A18  50EF               	movf	indf0,w,c
 20836  017A1A                     u4630:
 20837  017A1A  0900               	iorlw	0
 20838  017A1C  A4D8               	btfss	status,2,c
 20839  017A1E  D7D5               	goto	l6130
 20840                           
 20841                           ;stkvar	_a @ sp[(-2)+0]
 20842                           ;stkvar	_s @ sp[(-2)+-2]
 20843  017A20  0EFC               	movlw	-4
 20844  017A22  006F FF8C  F033    	movff	plusw1,btemp
 20845  017A28  0EFD               	movlw	-3
 20846  017A2A  006F FF8C  F034    	movff	plusw1,btemp+1
 20847  017A30  0EFE               	movlw	-2
 20848  017A32  50E3               	movf	plusw1,w,c
 20849  017A34  5E33               	subwf	btemp^0,f,c
 20850  017A36  0EFF               	movlw	-1
 20851  017A38  50E3               	movf	plusw1,w,c
 20852  017A3A  5A34               	subwfb	(btemp+1)^0,f,c
 20853                           
 20854                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 20855  017A3C  52E5               	movf	postdec1,f,c
 20856  017A3E  52E5               	movf	postdec1,f,c
 20857  017A40  52E5               	movf	postdec1,f,c
 20858  017A42  52E5               	movf	postdec1,f,c
 20859  017A44  0012               	return		;funcret
 20860  017A46                     __end_of_strlen:
 20861                           	opt callstack 0
 20862                           
 20863 ;; *************** function _fputs *****************
 20864 ;; Defined at:
 20865 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 20866 ;; Parameters:    Size  Location     Type
 20867 ;;  s               2  [STACK] PTR const unsigned char 
 20868 ;;		 -> dbuf(80), 
 20869 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20870 ;;		 -> f(6), NULL(0), 
 20871 ;; Auto vars:     Size  Location     Type
 20872 ;;  i               2  [STACK] int 
 20873 ;;  c               1  [STACK] unsigned char 
 20874 ;; Return value:  Size  Location     Type
 20875 ;;                  2  [STACK] int 
 20876 ;; Registers used:
 20877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20878 ;; Tracked objects:
 20879 ;;		On entry : 0/2
 20880 ;;		On exit  : 0/0
 20881 ;;		Unchanged: 0/0
 20882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20887 ;;Total ram usage:        0 bytes
 20888 ;; Hardware stack levels used:    1
 20889 ;; Hardware stack levels required when called:    9
 20890 ;; This function calls:
 20891 ;;		_fputc
 20892 ;; This function is called by:
 20893 ;;		_pad
 20894 ;; This function uses a reentrant model
 20895 ;;
 20896                           
 20897                           	psect	text69
 20898  017A46                     __ptext69:
 20899                           	opt callstack 0
 20900  017A46                     _fputs:
 20901                           	opt callstack 0
 20902                           
 20903                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20904  017A46  52E6               	movf	postinc1,f,c
 20905  017A48  52E6               	movf	postinc1,f,c
 20906  017A4A  52E6               	movf	postinc1,f,c
 20907                           
 20908                           ;stkvar	_i @ sp[(-3)+0]
 20909                           
 20910                           ;incstack = 0
 20911  017A4C  0EFD               	movlw	-3
 20912  017A4E  6AE3               	clrf	plusw1,c
 20913  017A50  0EFE               	movlw	-2
 20914  017A52  6AE3               	clrf	plusw1,c
 20915  017A54  D01F               	goto	l9286
 20916  017A56                     l9282:
 20917                           
 20918                           ;stkvar	_fp @ sp[(-3)+-4]
 20919  017A56  0EF9               	movlw	-7
 20920  017A58  006F FF8F FFE6     	movff	plusw1,postinc1
 20921  017A5E  006F FF8F FFE6     	movff	plusw1,postinc1
 20922                           
 20923                           ;stkvar	_c @ sp[(-5)+2]
 20924  017A64  0EFD               	movlw	-3
 20925  017A66  50E3               	movf	plusw1,w,c
 20926  017A68  6EE6               	movwf	postinc1,c
 20927  017A6A  0E00               	movlw	0
 20928  017A6C  6EE6               	movwf	postinc1,c
 20929  017A6E  EC16  F0B7         	call	_fputc	;wreg free
 20930                           
 20931                           ;stkvar	_i @ sp[(-3)+0]
 20932  017A72  0EFD               	movlw	-3
 20933  017A74  50E3               	movf	plusw1,w,c
 20934  017A76  0F01               	addlw	1
 20935  017A78  6E33               	movwf	btemp^0,c
 20936  017A7A  0EFD               	movlw	-3
 20937  017A7C  0060  F0CF  FFE3   	movff	btemp,plusw1
 20938  017A82  6A33               	clrf	btemp^0,c
 20939  017A84  0EFE               	movlw	-2
 20940  017A86  50E3               	movf	plusw1,w,c
 20941  017A88  2033               	addwfc	btemp^0,w,c
 20942  017A8A  6E33               	movwf	btemp^0,c
 20943  017A8C  0EFE               	movlw	-2
 20944  017A8E  0060  F0CF  FFE3   	movff	btemp,plusw1
 20945  017A94                     l9286:
 20946                           
 20947                           ;stkvar	_i @ sp[(-3)+0]
 20948  017A94  0EFD               	movlw	-3
 20949  017A96  006F FF8C  F03D    	movff	plusw1,btemp+10
 20950  017A9C  0EFE               	movlw	-2
 20951  017A9E  006F FF8C  F03E    	movff	plusw1,btemp+11
 20952                           
 20953                           ;stkvar	_s @ sp[(-3)+-2]
 20954  017AA4  0EFB               	movlw	-5
 20955  017AA6  006F FF8C  F03B    	movff	plusw1,btemp+8
 20956  017AAC  0EFC               	movlw	-4
 20957  017AAE  006F FF8C  F03C    	movff	plusw1,btemp+9
 20958  017AB4  503D               	movf	(btemp+10)^0,w,c
 20959  017AB6  243B               	addwf	(btemp+8)^0,w,c
 20960  017AB8  6ED9               	movwf	fsr2l,c
 20961  017ABA  503E               	movf	(btemp+11)^0,w,c
 20962  017ABC  203C               	addwfc	(btemp+9)^0,w,c
 20963  017ABE  6EDA               	movwf	fsr2h,c
 20964  017AC0  50DF               	movf	indf2,w,c
 20965  017AC2  6E3E               	movwf	(btemp+11)^0,c
 20966                           
 20967                           ;stkvar	_c @ sp[(-3)+2]
 20968  017AC4  0EFF               	movlw	-1
 20969  017AC6  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 20970  017ACC  0EFF               	movlw	-1
 20971  017ACE  50E3               	movf	plusw1,w,c
 20972  017AD0  A4D8               	btfss	status,2,c
 20973  017AD2  D7C1               	goto	l9282
 20974                           
 20975                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20976  017AD4  0EF9               	movlw	249
 20977  017AD6  26E1               	addwf	fsr1l,f,c
 20978  017AD8  0EFF               	movlw	255
 20979  017ADA  22E2               	addwfc	fsr1h,f,c
 20980  017ADC  0012               	return		;funcret
 20981  017ADE                     __end_of_fputs:
 20982                           	opt callstack 0
 20983                           
 20984 ;; *************** function _fputc *****************
 20985 ;; Defined at:
 20986 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 20987 ;; Parameters:    Size  Location     Type
 20988 ;;  c               2  [STACK] int 
 20989 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20990 ;;		 -> f(6), NULL(0), 
 20991 ;; Auto vars:     Size  Location     Type
 20992 ;;		None
 20993 ;; Return value:  Size  Location     Type
 20994 ;;                  2  [STACK] int 
 20995 ;; Registers used:
 20996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20997 ;; Tracked objects:
 20998 ;;		On entry : 0/0
 20999 ;;		On exit  : 0/0
 21000 ;;		Unchanged: 0/0
 21001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21006 ;;Total ram usage:        0 bytes
 21007 ;; Hardware stack levels used:    1
 21008 ;; Hardware stack levels required when called:    8
 21009 ;; This function calls:
 21010 ;;		_putch
 21011 ;; This function is called by:
 21012 ;;		_pad
 21013 ;;		_stoa
 21014 ;;		_vfpfcnvrt
 21015 ;;		_fputs
 21016 ;; This function uses a reentrant model
 21017 ;;
 21018                           
 21019                           	psect	text70
 21020  016E2C                     __ptext70:
 21021                           	opt callstack 0
 21022  016E2C                     _fputc:
 21023                           	opt callstack 13
 21024                           
 21025                           ;stkvar	_fp @ sp[(0)+-4]
 21026                           
 21027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21028                           ;incstack = 0
 21029  016E2C  0EFC               	movlw	-4
 21030  016E2E  006F FF8C  F033    	movff	plusw1,btemp
 21031  016E34  0EFD               	movlw	-3
 21032  016E36  50E3               	movf	plusw1,w,c
 21033  016E38  1033               	iorwf	btemp^0,w,c
 21034  016E3A  B4D8               	btfsc	status,2,c
 21035  016E3C  D009               	goto	u9090
 21036                           
 21037                           ;stkvar	_fp @ sp[(0)+-4]
 21038  016E3E  0EFC               	movlw	-4
 21039  016E40  006F FF8C  F033    	movff	plusw1,btemp
 21040  016E46  0EFD               	movlw	-3
 21041  016E48  50E3               	movf	plusw1,w,c
 21042  016E4A  1033               	iorwf	btemp^0,w,c
 21043  016E4C  A4D8               	btfss	status,2,c
 21044  016E4E  D006               	goto	l9270
 21045  016E50                     u9090:
 21046                           
 21047                           ;stkvar	_c @ sp[(0)+-2]
 21048  016E50  0EFE               	movlw	-2
 21049  016E52  50E3               	movf	plusw1,w,c
 21050  016E54  6EE6               	movwf	postinc1,c
 21051  016E56  ECFE  F0C6         	call	_putch	;wreg free
 21052  016E5A  D075               	goto	l2809
 21053  016E5C                     l9270:
 21054                           
 21055                           ;stkvar	_fp @ sp[(0)+-4]
 21056  016E5C  0EFC               	movlw	-4
 21057  016E5E  006F FF8C  F03D    	movff	plusw1,btemp+10
 21058  016E64  0EFD               	movlw	-3
 21059  016E66  006F FF8C  F03E    	movff	plusw1,btemp+11
 21060  016E6C  0E04               	movlw	4
 21061  016E6E  243D               	addwf	(btemp+10)^0,w,c
 21062  016E70  6ED9               	movwf	fsr2l,c
 21063  016E72  0E00               	movlw	0
 21064  016E74  203E               	addwfc	(btemp+11)^0,w,c
 21065  016E76  6EDA               	movwf	fsr2h,c
 21066  016E78  50DE               	movf	postinc2,w,c
 21067  016E7A  10DE               	iorwf	postinc2,w,c
 21068  016E7C  B4D8               	btfsc	status,2,c
 21069  016E7E  D026               	goto	u9110
 21070                           
 21071                           ;stkvar	_fp @ sp[(0)+-4]
 21072  016E80  0EFC               	movlw	-4
 21073  016E82  006F FF8C  F03D    	movff	plusw1,btemp+10
 21074  016E88  0EFD               	movlw	-3
 21075  016E8A  006F FF8C  F03E    	movff	plusw1,btemp+11
 21076  016E90  0E04               	movlw	4
 21077  016E92  243D               	addwf	(btemp+10)^0,w,c
 21078  016E94  6ED9               	movwf	fsr2l,c
 21079  016E96  0E00               	movlw	0
 21080  016E98  203E               	addwfc	(btemp+11)^0,w,c
 21081  016E9A  6EDA               	movwf	fsr2h,c
 21082                           
 21083                           ;stkvar	_fp @ sp[(0)+-4]
 21084  016E9C  0EFC               	movlw	-4
 21085  016E9E  006F FF8C  F03D    	movff	plusw1,btemp+10
 21086  016EA4  0EFD               	movlw	-3
 21087  016EA6  006F FF8C  F03E    	movff	plusw1,btemp+11
 21088  016EAC  0E02               	movlw	2
 21089  016EAE  243D               	addwf	(btemp+10)^0,w,c
 21090  016EB0  6EE9               	movwf	fsr0l,c
 21091  016EB2  0E00               	movlw	0
 21092  016EB4  203E               	addwfc	(btemp+11)^0,w,c
 21093  016EB6  6EEA               	movwf	fsr0h,c
 21094  016EB8  50DE               	movf	postinc2,w,c
 21095  016EBA  5CEE               	subwf	postinc0,w,c
 21096  016EBC  50EE               	movf	postinc0,w,c
 21097  016EBE  0A80               	xorlw	128
 21098  016EC0  6E33               	movwf	btemp^0,c
 21099  016EC2  50DE               	movf	postinc2,w,c
 21100  016EC4  0A80               	xorlw	128
 21101  016EC6  5833               	subwfb	btemp^0,w,c
 21102  016EC8  B0D8               	btfsc	status,0,c
 21103  016ECA  D03D               	goto	l2809
 21104  016ECC                     u9110:
 21105                           
 21106                           ;stkvar	_c @ sp[(0)+-2]
 21107                           ;stkvar	_fp @ sp[(0)+-4]
 21108  016ECC  0EFC               	movlw	-4
 21109  016ECE  006F FF8C  F03D    	movff	plusw1,btemp+10
 21110  016ED4  0EFD               	movlw	-3
 21111  016ED6  006F FF8C  F03E    	movff	plusw1,btemp+11
 21112  016EDC  0E02               	movlw	2
 21113  016EDE  243D               	addwf	(btemp+10)^0,w,c
 21114  016EE0  6ED9               	movwf	fsr2l,c
 21115  016EE2  0E00               	movlw	0
 21116  016EE4  203E               	addwfc	(btemp+11)^0,w,c
 21117  016EE6  6EDA               	movwf	fsr2h,c
 21118  016EE8  006F FF78  F03D    	movff	postinc2,btemp+10
 21119  016EEE  006F FF74  F03E    	movff	postdec2,btemp+11
 21120                           
 21121                           ;stkvar	_fp @ sp[(0)+-4]
 21122  016EF4  0EFC               	movlw	-4
 21123  016EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 21124  016EFC  0EFD               	movlw	-3
 21125  016EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 21126  016F04  006F FF78  F03B    	movff	postinc2,btemp+8
 21127  016F0A  006F FF74  F03C    	movff	postdec2,btemp+9
 21128  016F10  503D               	movf	(btemp+10)^0,w,c
 21129  016F12  243B               	addwf	(btemp+8)^0,w,c
 21130  016F14  6ED9               	movwf	fsr2l,c
 21131  016F16  503E               	movf	(btemp+11)^0,w,c
 21132  016F18  203C               	addwfc	(btemp+9)^0,w,c
 21133  016F1A  6EDA               	movwf	fsr2h,c
 21134  016F1C  0EFE               	movlw	-2
 21135  016F1E  006F FF8F FFDF     	movff	plusw1,indf2
 21136                           
 21137                           ;stkvar	_fp @ sp[(0)+-4]
 21138  016F24  0EFC               	movlw	-4
 21139  016F26  006F FF8C  F03D    	movff	plusw1,btemp+10
 21140  016F2C  0EFD               	movlw	-3
 21141  016F2E  006F FF8C  F03E    	movff	plusw1,btemp+11
 21142  016F34  0E02               	movlw	2
 21143  016F36  243D               	addwf	(btemp+10)^0,w,c
 21144  016F38  6ED9               	movwf	fsr2l,c
 21145  016F3A  0E00               	movlw	0
 21146  016F3C  203E               	addwfc	(btemp+11)^0,w,c
 21147  016F3E  6EDA               	movwf	fsr2h,c
 21148  016F40  2ADE               	incf	postinc2,f,c
 21149  016F42  0E00               	movlw	0
 21150  016F44  22DD               	addwfc	postdec2,f,c
 21151  016F46                     l2809:
 21152                           
 21153                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21154  016F46  52E5               	movf	postdec1,f,c
 21155  016F48  52E5               	movf	postdec1,f,c
 21156  016F4A  52E5               	movf	postdec1,f,c
 21157  016F4C  52E5               	movf	postdec1,f,c
 21158  016F4E  0012               	return		;funcret
 21159  016F50                     __end_of_fputc:
 21160                           	opt callstack 0
 21161                           
 21162 ;; *************** function _putch *****************
 21163 ;; Defined at:
 21164 ;;		line 155 in file "eadog.c"
 21165 ;; Parameters:    Size  Location     Type
 21166 ;;  c               1  [STACK] unsigned char 
 21167 ;; Auto vars:     Size  Location     Type
 21168 ;;		None
 21169 ;; Return value:  Size  Location     Type
 21170 ;;                  1  [STACK] void 
 21171 ;; Registers used:
 21172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21173 ;; Tracked objects:
 21174 ;;		On entry : 0/0
 21175 ;;		On exit  : 0/0
 21176 ;;		Unchanged: 0/0
 21177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21182 ;;Total ram usage:        0 bytes
 21183 ;; Hardware stack levels used:    1
 21184 ;; Hardware stack levels required when called:    7
 21185 ;; This function calls:
 21186 ;;		_ringBufS_put_dma
 21187 ;; This function is called by:
 21188 ;;		_fputc
 21189 ;; This function uses a reentrant model
 21190 ;;
 21191                           
 21192                           	psect	text71
 21193  018DFC                     __ptext71:
 21194                           	opt callstack 0
 21195  018DFC                     _putch:
 21196                           	opt callstack 13
 21197                           
 21198                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21199                           ;stkvar	_c @ sp[(0)+-1]
 21200                           
 21201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21202                           ;incstack = 0
 21203  018DFC  0EFF               	movlw	-1
 21204  018DFE  50E3               	movf	plusw1,w,c
 21205  018E00  6EE6               	movwf	postinc1,c
 21206  018E02  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
 21207  018E08  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
 21208  018E0E  EC2A  F0BC         	call	_ringBufS_put_dma	;wreg free
 21209                           
 21210                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21211  018E12  52E5               	movf	postdec1,f,c
 21212  018E14  0012               	return		;funcret
 21213  018E16                     __end_of_putch:
 21214                           	opt callstack 0
 21215                           
 21216 ;; *************** function _ringBufS_put_dma *****************
 21217 ;; Defined at:
 21218 ;;		line 67 in file "ringbufs.c"
 21219 ;; Parameters:    Size  Location     Type
 21220 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21221 ;;		 -> ring_buf1(67), 
 21222 ;;  c               1  [STACK] const unsigned char 
 21223 ;; Auto vars:     Size  Location     Type
 21224 ;;		None
 21225 ;; Return value:  Size  Location     Type
 21226 ;;                  1  [STACK] void 
 21227 ;; Registers used:
 21228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21229 ;; Tracked objects:
 21230 ;;		On entry : 0/0
 21231 ;;		On exit  : 0/0
 21232 ;;		Unchanged: 0/0
 21233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21238 ;;Total ram usage:        0 bytes
 21239 ;; Hardware stack levels used:    1
 21240 ;; Hardware stack levels required when called:    6
 21241 ;; This function calls:
 21242 ;;		Nothing
 21243 ;; This function is called by:
 21244 ;;		_putch
 21245 ;; This function uses a reentrant model
 21246 ;;
 21247                           
 21248                           	psect	text72
 21249  017854                     __ptext72:
 21250                           	opt callstack 0
 21251  017854                     _ringBufS_put_dma:
 21252                           	opt callstack 13
 21253                           
 21254                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21255                           ;stkvar	__this @ sp[(0)+-2]
 21256                           
 21257                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21258                           ;incstack = 0
 21259  017854  0EFE               	movlw	-2
 21260  017856  006F FF8C  F03D    	movff	plusw1,btemp+10
 21261  01785C  0EFF               	movlw	-1
 21262  01785E  006F FF8C  F03E    	movff	plusw1,btemp+11
 21263  017864  0E42               	movlw	66
 21264  017866  243D               	addwf	(btemp+10)^0,w,c
 21265  017868  6ED9               	movwf	fsr2l,c
 21266  01786A  0E00               	movlw	0
 21267  01786C  203E               	addwfc	(btemp+11)^0,w,c
 21268  01786E  6EDA               	movwf	fsr2h,c
 21269  017870  0E40               	movlw	64
 21270  017872  60DF               	cpfslt	indf2,c
 21271  017874  D040               	goto	l1467
 21272                           
 21273                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21274                           ;stkvar	_c @ sp[(0)+-3]
 21275                           ;stkvar	__this @ sp[(0)+-2]
 21276  017876  0EFE               	movlw	-2
 21277  017878  006F FF8C  F03D    	movff	plusw1,btemp+10
 21278  01787E  0EFF               	movlw	-1
 21279  017880  006F FF8C  F03E    	movff	plusw1,btemp+11
 21280  017886  0E40               	movlw	64
 21281  017888  243D               	addwf	(btemp+10)^0,w,c
 21282  01788A  6ED9               	movwf	fsr2l,c
 21283  01788C  0E00               	movlw	0
 21284  01788E  203E               	addwfc	(btemp+11)^0,w,c
 21285  017890  6EDA               	movwf	fsr2h,c
 21286  017892  50DF               	movf	indf2,w,c
 21287  017894  6E3E               	movwf	(btemp+11)^0,c
 21288                           
 21289                           ;stkvar	__this @ sp[(0)+-2]
 21290  017896  0EFE               	movlw	-2
 21291  017898  006F FF8C  F03B    	movff	plusw1,btemp+8
 21292  01789E  0EFF               	movlw	-1
 21293  0178A0  006F FF8C  F03C    	movff	plusw1,btemp+9
 21294  0178A6  503E               	movf	(btemp+11)^0,w,c
 21295  0178A8  243B               	addwf	(btemp+8)^0,w,c
 21296  0178AA  6ED9               	movwf	fsr2l,c
 21297  0178AC  0E00               	movlw	0
 21298  0178AE  203C               	addwfc	(btemp+9)^0,w,c
 21299  0178B0  6EDA               	movwf	fsr2h,c
 21300  0178B2  0EFD               	movlw	-3
 21301  0178B4  006F FF8F FFDF     	movff	plusw1,indf2
 21302                           
 21303                           ;ringbufs.c: 71:   ++_this->head;
 21304                           ;stkvar	__this @ sp[(0)+-2]
 21305  0178BA  0EFE               	movlw	-2
 21306  0178BC  006F FF8C  F03D    	movff	plusw1,btemp+10
 21307  0178C2  0EFF               	movlw	-1
 21308  0178C4  006F FF8C  F03E    	movff	plusw1,btemp+11
 21309  0178CA  0E40               	movlw	64
 21310  0178CC  243D               	addwf	(btemp+10)^0,w,c
 21311  0178CE  6ED9               	movwf	fsr2l,c
 21312  0178D0  0E00               	movlw	0
 21313  0178D2  203E               	addwfc	(btemp+11)^0,w,c
 21314  0178D4  6EDA               	movwf	fsr2h,c
 21315  0178D6  2ADF               	incf	indf2,f,c
 21316                           
 21317                           ;ringbufs.c: 72:   ++_this->count;
 21318                           ;stkvar	__this @ sp[(0)+-2]
 21319  0178D8  0EFE               	movlw	-2
 21320  0178DA  006F FF8C  F03D    	movff	plusw1,btemp+10
 21321  0178E0  0EFF               	movlw	-1
 21322  0178E2  006F FF8C  F03E    	movff	plusw1,btemp+11
 21323  0178E8  0E42               	movlw	66
 21324  0178EA  243D               	addwf	(btemp+10)^0,w,c
 21325  0178EC  6ED9               	movwf	fsr2l,c
 21326  0178EE  0E00               	movlw	0
 21327  0178F0  203E               	addwfc	(btemp+11)^0,w,c
 21328  0178F2  6EDA               	movwf	fsr2h,c
 21329  0178F4  2ADF               	incf	indf2,f,c
 21330  0178F6                     l1467:
 21331                           
 21332                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21333  0178F6  52E5               	movf	postdec1,f,c
 21334  0178F8  52E5               	movf	postdec1,f,c
 21335  0178FA  52E5               	movf	postdec1,f,c
 21336  0178FC  0012               	return		;funcret
 21337  0178FE                     __end_of_ringBufS_put_dma:
 21338                           	opt callstack 0
 21339                           
 21340 ;; *************** function _atoi *****************
 21341 ;; Defined at:
 21342 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21343 ;; Parameters:    Size  Location     Type
 21344 ;;  s               2  [STACK] PTR const unsigned char 
 21345 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 21346 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 21347 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 21348 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 21349 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
 21350 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
 21351 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 21352 ;; Auto vars:     Size  Location     Type
 21353 ;;  n               2  [STACK] int 
 21354 ;;  neg             2  [STACK] int 
 21355 ;; Return value:  Size  Location     Type
 21356 ;;                  2  [STACK] int 
 21357 ;; Registers used:
 21358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21359 ;; Tracked objects:
 21360 ;;		On entry : 0/0
 21361 ;;		On exit  : 0/0
 21362 ;;		Unchanged: 0/0
 21363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21368 ;;Total ram usage:        0 bytes
 21369 ;; Hardware stack levels used:    1
 21370 ;; Hardware stack levels required when called:    7
 21371 ;; This function calls:
 21372 ;;		_isdigit
 21373 ;;		_isspace
 21374 ;; This function is called by:
 21375 ;;		_vfpfcnvrt
 21376 ;; This function uses a reentrant model
 21377 ;;
 21378                           
 21379                           	psect	text73
 21380  0157DC                     __ptext73:
 21381                           	opt callstack 0
 21382  0157DC                     _atoi:
 21383                           	opt callstack 0
 21384                           
 21385                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21386  0157DC  0E09               	movlw	9
 21387  0157DE  26E1               	addwf	fsr1l,f,c
 21388  0157E0  0E00               	movlw	0
 21389  0157E2  22E2               	addwfc	fsr1h,f,c
 21390                           
 21391                           ;stkvar	_n @ sp[(-9)+5]
 21392                           
 21393                           ;incstack = 0
 21394  0157E4  0EFC               	movlw	-4
 21395  0157E6  6AE3               	clrf	plusw1,c
 21396  0157E8  0EFD               	movlw	-3
 21397  0157EA  6AE3               	clrf	plusw1,c
 21398                           
 21399                           ;stkvar	_neg @ sp[(-9)+7]
 21400  0157EC  0EFE               	movlw	-2
 21401  0157EE  6AE3               	clrf	plusw1,c
 21402  0157F0  0EFF               	movlw	-1
 21403  0157F2  6AE3               	clrf	plusw1,c
 21404  0157F4  D011               	goto	l7688
 21405  0157F6                     l7686:
 21406                           
 21407                           ;stkvar	_s @ sp[(-9)+-2]
 21408  0157F6  0EF5               	movlw	-11
 21409  0157F8  50E3               	movf	plusw1,w,c
 21410  0157FA  0F01               	addlw	1
 21411  0157FC  6E33               	movwf	btemp^0,c
 21412  0157FE  0EF5               	movlw	-11
 21413  015800  0060  F0CF  FFE3   	movff	btemp,plusw1
 21414  015806  6A33               	clrf	btemp^0,c
 21415  015808  0EF6               	movlw	-10
 21416  01580A  50E3               	movf	plusw1,w,c
 21417  01580C  2033               	addwfc	btemp^0,w,c
 21418  01580E  6E33               	movwf	btemp^0,c
 21419  015810  0EF6               	movlw	-10
 21420  015812  0060  F0CF  FFE3   	movff	btemp,plusw1
 21421  015818                     l7688:
 21422                           
 21423                           ;stkvar	_atoi$4821 @ sp[(-9)+4]
 21424  015818  0EFB               	movlw	-5
 21425  01581A  6AE3               	clrf	plusw1,c
 21426  01581C  2AE3               	incf	plusw1,f,c
 21427                           
 21428                           ;stkvar	_s @ sp[(-9)+-2]
 21429  01581E  50E1               	movf	fsr1l,w,c
 21430  015820  0FF5               	addlw	-11
 21431  015822  6ED9               	movwf	fsr2l,c
 21432  015824  50E2               	movf	fsr1h,w,c
 21433  015826  6EDA               	movwf	fsr2h,c
 21434  015828  0EFF               	movlw	255
 21435  01582A  22DA               	addwfc	fsr2h,f,c
 21436  01582C  006F FF7B FFF6     	movff	postinc2,tblptrl
 21437  015832  006F FF77 FFF7     	movff	postdec2,tblptrh
 21438  015838                     	if	0	;tblptru may be non-zero
 21439  015838                     	endif
 21440  015838                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21441  015838  0E00               	movlw	low (__mediumconst shr (0+16))
 21442  01583A  6EF8               	movwf	tblptru,c
 21443  01583C                     	endif
 21444  01583C  0008               	tblrd		*
 21445  01583E  50F5               	movf	tablat,w,c
 21446  015840  0A20               	xorlw	32
 21447  015842  B4D8               	btfsc	status,2,c
 21448  015844  D023               	goto	l7696
 21449  015846  0EF7               	movlw	247
 21450  015848  6E3D               	movwf	(btemp+10)^0,c
 21451  01584A  0EFF               	movlw	255
 21452  01584C  6E3E               	movwf	(btemp+11)^0,c
 21453                           
 21454                           ;stkvar	_s @ sp[(-9)+-2]
 21455  01584E  50E1               	movf	fsr1l,w,c
 21456  015850  0FF5               	addlw	-11
 21457  015852  6ED9               	movwf	fsr2l,c
 21458  015854  50E2               	movf	fsr1h,w,c
 21459  015856  6EDA               	movwf	fsr2h,c
 21460  015858  0EFF               	movlw	255
 21461  01585A  22DA               	addwfc	fsr2h,f,c
 21462  01585C  006F FF7B FFF6     	movff	postinc2,tblptrl
 21463  015862  006F FF77 FFF7     	movff	postdec2,tblptrh
 21464  015868                     	if	0	;tblptru may be non-zero
 21465  015868                     	endif
 21466  015868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21467  015868  0E00               	movlw	low (__mediumconst shr (0+16))
 21468  01586A  6EF8               	movwf	tblptru,c
 21469  01586C                     	endif
 21470  01586C  0008               	tblrd		*
 21471  01586E  50F5               	movf	tablat,w,c
 21472  015870  6E3B               	movwf	(btemp+8)^0,c
 21473  015872  6A3C               	clrf	(btemp+9)^0,c
 21474  015874  503D               	movf	(btemp+10)^0,w,c
 21475  015876  263B               	addwf	(btemp+8)^0,f,c
 21476  015878  503E               	movf	(btemp+11)^0,w,c
 21477  01587A  223C               	addwfc	(btemp+9)^0,f,c
 21478  01587C  503C               	movf	(btemp+9)^0,w,c
 21479  01587E  E104               	bnz	u7680
 21480  015880  0E05               	movlw	5
 21481  015882  5C3B               	subwf	(btemp+8)^0,w,c
 21482  015884  A0D8               	btfss	status,0,c
 21483  015886  D002               	goto	l7696
 21484  015888                     u7680:
 21485                           
 21486                           ;stkvar	_atoi$4821 @ sp[(-9)+4]
 21487  015888  0EFB               	movlw	-5
 21488  01588A  6AE3               	clrf	plusw1,c
 21489  01588C                     l7696:
 21490                           
 21491                           ;stkvar	_atoi$4821 @ sp[(-9)+4]
 21492  01588C  0EFB               	movlw	-5
 21493  01588E  50E3               	movf	plusw1,w,c
 21494  015890  6E3D               	movwf	(btemp+10)^0,c
 21495  015892  6A3E               	clrf	(btemp+11)^0,c
 21496                           
 21497                           ;stkvar	_atoi$4820 @ sp[(-9)+2]
 21498  015894  0EF9               	movlw	-7
 21499  015896  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 21500  01589C  0EFA               	movlw	-6
 21501  01589E  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 21502                           
 21503                           ;stkvar	_atoi$4820 @ sp[(-9)+2]
 21504  0158A4  0EF9               	movlw	-7
 21505  0158A6  006F FF8C  F033    	movff	plusw1,btemp
 21506  0158AC  0EFA               	movlw	-6
 21507  0158AE  50E3               	movf	plusw1,w,c
 21508  0158B0  1033               	iorwf	btemp^0,w,c
 21509  0158B2  B4D8               	btfsc	status,2,c
 21510  0158B4  D01F               	goto	l7706
 21511  0158B6  D79F               	goto	l7686
 21512  0158B8                     l7702:
 21513  0158B8  0E01               	movlw	1
 21514  0158BA  6E3D               	movwf	(btemp+10)^0,c
 21515  0158BC  0E00               	movlw	0
 21516  0158BE  6E3E               	movwf	(btemp+11)^0,c
 21517                           
 21518                           ;stkvar	_neg @ sp[(-9)+7]
 21519  0158C0  0EFE               	movlw	-2
 21520  0158C2  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 21521  0158C8  0EFF               	movlw	-1
 21522  0158CA  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 21523  0158D0                     l7704:
 21524                           
 21525                           ;stkvar	_s @ sp[(-9)+-2]
 21526  0158D0  0EF5               	movlw	-11
 21527  0158D2  50E3               	movf	plusw1,w,c
 21528  0158D4  0F01               	addlw	1
 21529  0158D6  6E33               	movwf	btemp^0,c
 21530  0158D8  0EF5               	movlw	-11
 21531  0158DA  0060  F0CF  FFE3   	movff	btemp,plusw1
 21532  0158E0  6A33               	clrf	btemp^0,c
 21533  0158E2  0EF6               	movlw	-10
 21534  0158E4  50E3               	movf	plusw1,w,c
 21535  0158E6  2033               	addwfc	btemp^0,w,c
 21536  0158E8  6E33               	movwf	btemp^0,c
 21537  0158EA  0EF6               	movlw	-10
 21538  0158EC  0060  F0CF  FFE3   	movff	btemp,plusw1
 21539  0158F2  D053               	goto	l7712
 21540  0158F4                     l7706:
 21541                           
 21542                           ;stkvar	_s @ sp[(-9)+-2]
 21543  0158F4  50E1               	movf	fsr1l,w,c
 21544  0158F6  0FF5               	addlw	-11
 21545  0158F8  6ED9               	movwf	fsr2l,c
 21546  0158FA  50E2               	movf	fsr1h,w,c
 21547  0158FC  6EDA               	movwf	fsr2h,c
 21548  0158FE  0EFF               	movlw	255
 21549  015900  22DA               	addwfc	fsr2h,f,c
 21550  015902  006F FF7B FFF6     	movff	postinc2,tblptrl
 21551  015908  006F FF77 FFF7     	movff	postdec2,tblptrh
 21552  01590E                     	if	0	;tblptru may be non-zero
 21553  01590E                     	endif
 21554  01590E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21555  01590E  0E00               	movlw	low (__mediumconst shr (0+16))
 21556  015910  6EF8               	movwf	tblptru,c
 21557  015912                     	endif
 21558  015912  0008               	tblrd		*
 21559  015914  50F5               	movf	tablat,w,c
 21560  015916  6E3D               	movwf	(btemp+10)^0,c
 21561  015918  6A3E               	clrf	(btemp+11)^0,c
 21562                           
 21563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21564                           ; Switch size 1, requested type "simple"
 21565                           ; Number of cases is 1, Range of values is 0 to 0
 21566                           ; switch strategies available:
 21567                           ; Name         Instructions Cycles
 21568                           ; simple_byte            4     3 (average)
 21569                           ;	Chosen strategy is simple_byte
 21570  01591A  503E               	movf	(btemp+11)^0,w,c
 21571  01591C  0A00               	xorlw	0	; case 0
 21572  01591E  A4D8               	btfss	status,2,c
 21573  015920  D03C               	goto	l7712
 21574                           
 21575                           ; Switch size 1, requested type "simple"
 21576                           ; Number of cases is 2, Range of values is 43 to 45
 21577                           ; switch strategies available:
 21578                           ; Name         Instructions Cycles
 21579                           ; simple_byte            7     4 (average)
 21580                           ;	Chosen strategy is simple_byte
 21581  015922  503D               	movf	(btemp+10)^0,w,c
 21582  015924  0A2B               	xorlw	43	; case 43
 21583  015926  B4D8               	btfsc	status,2,c
 21584  015928  D7D3               	goto	l7704
 21585  01592A  0A06               	xorlw	6	; case 45
 21586  01592C  B4D8               	btfsc	status,2,c
 21587  01592E  D7C4               	goto	l7702
 21588  015930  D034               	goto	l7712
 21589  015932                     l7708:
 21590                           
 21591                           ;stkvar	_n @ sp[(-9)+5]
 21592  015932  0EFC               	movlw	-4
 21593  015934  006F FF8C  F03D    	movff	plusw1,btemp+10
 21594  01593A  0EFD               	movlw	-3
 21595  01593C  006F FF8C  F03E    	movff	plusw1,btemp+11
 21596  015942  0E0A               	movlw	10
 21597  015944  023D               	mulwf	(btemp+10)^0,c
 21598  015946  006F FFCC  F03B    	movff	prodl,btemp+8
 21599  01594C  006F FFD0  F03C    	movff	prodh,btemp+9
 21600  015952  023E               	mulwf	(btemp+11)^0,c
 21601  015954  50F3               	movf	prodl,w,c
 21602  015956  263C               	addwf	(btemp+9)^0,f,c
 21603                           
 21604                           ;stkvar	_s @ sp[(-9)+-2]
 21605  015958  50E1               	movf	fsr1l,w,c
 21606  01595A  0FF5               	addlw	-11
 21607  01595C  6ED9               	movwf	fsr2l,c
 21608  01595E  50E2               	movf	fsr1h,w,c
 21609  015960  6EDA               	movwf	fsr2h,c
 21610  015962  0EFF               	movlw	255
 21611  015964  22DA               	addwfc	fsr2h,f,c
 21612  015966  006F FF7B FFF6     	movff	postinc2,tblptrl
 21613  01596C  006F FF77 FFF7     	movff	postdec2,tblptrh
 21614  015972                     	if	0	;tblptru may be non-zero
 21615  015972                     	endif
 21616  015972                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21617  015972  0E00               	movlw	low (__mediumconst shr (0+16))
 21618  015974  6EF8               	movwf	tblptru,c
 21619  015976                     	endif
 21620  015976  0008               	tblrd		*
 21621  015978  50F5               	movf	tablat,w,c
 21622  01597A  5E3B               	subwf	(btemp+8)^0,f,c
 21623  01597C  0E00               	movlw	0
 21624  01597E  5A3C               	subwfb	(btemp+9)^0,f,c
 21625  015980  0E30               	movlw	48
 21626  015982  263B               	addwf	(btemp+8)^0,f,c
 21627  015984  0E00               	movlw	0
 21628  015986  223C               	addwfc	(btemp+9)^0,f,c
 21629                           
 21630                           ;stkvar	_n @ sp[(-9)+5]
 21631  015988  0EFC               	movlw	-4
 21632  01598A  0060  F0EF  FFE3   	movff	btemp+8,plusw1
 21633  015990  0EFD               	movlw	-3
 21634  015992  0060  F0F3  FFE3   	movff	btemp+9,plusw1
 21635  015998  D79B               	goto	l7704
 21636  01599A                     l7712:
 21637  01599A  0ED0               	movlw	208
 21638  01599C  6E3D               	movwf	(btemp+10)^0,c
 21639  01599E  0EFF               	movlw	255
 21640  0159A0  6E3E               	movwf	(btemp+11)^0,c
 21641                           
 21642                           ;stkvar	_s @ sp[(-9)+-2]
 21643  0159A2  50E1               	movf	fsr1l,w,c
 21644  0159A4  0FF5               	addlw	-11
 21645  0159A6  6ED9               	movwf	fsr2l,c
 21646  0159A8  50E2               	movf	fsr1h,w,c
 21647  0159AA  6EDA               	movwf	fsr2h,c
 21648  0159AC  0EFF               	movlw	255
 21649  0159AE  22DA               	addwfc	fsr2h,f,c
 21650  0159B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 21651  0159B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 21652  0159BC                     	if	0	;tblptru may be non-zero
 21653  0159BC                     	endif
 21654  0159BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21655  0159BC  0E00               	movlw	low (__mediumconst shr (0+16))
 21656  0159BE  6EF8               	movwf	tblptru,c
 21657  0159C0                     	endif
 21658  0159C0  0008               	tblrd		*
 21659  0159C2  50F5               	movf	tablat,w,c
 21660  0159C4  6E3B               	movwf	(btemp+8)^0,c
 21661  0159C6  6A3C               	clrf	(btemp+9)^0,c
 21662  0159C8  503D               	movf	(btemp+10)^0,w,c
 21663  0159CA  263B               	addwf	(btemp+8)^0,f,c
 21664  0159CC  503E               	movf	(btemp+11)^0,w,c
 21665  0159CE  223C               	addwfc	(btemp+9)^0,f,c
 21666  0159D0  503C               	movf	(btemp+9)^0,w,c
 21667  0159D2  E106               	bnz	u7700
 21668  0159D4  0E0A               	movlw	10
 21669  0159D6  5C3B               	subwf	(btemp+8)^0,w,c
 21670  0159D8  B0D8               	btfsc	status,0,c
 21671  0159DA  D002               	goto	u7700
 21672  0159DC  0E01               	movlw	1
 21673  0159DE  D001               	goto	u7710
 21674  0159E0                     u7700:
 21675  0159E0  0E00               	movlw	0
 21676  0159E2                     u7710:
 21677  0159E2  6E3D               	movwf	(btemp+10)^0,c
 21678  0159E4  6A3E               	clrf	(btemp+11)^0,c
 21679                           
 21680                           ;stkvar	_atoi$4822 @ sp[(-9)+0]
 21681  0159E6  0EF7               	movlw	-9
 21682  0159E8  0060  F0F7  FFE3   	movff	btemp+10,plusw1
 21683  0159EE  0EF8               	movlw	-8
 21684  0159F0  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 21685                           
 21686                           ;stkvar	_atoi$4822 @ sp[(-9)+0]
 21687  0159F6  0EF7               	movlw	-9
 21688  0159F8  006F FF8C  F033    	movff	plusw1,btemp
 21689  0159FE  0EF8               	movlw	-8
 21690  015A00  50E3               	movf	plusw1,w,c
 21691  015A02  1033               	iorwf	btemp^0,w,c
 21692  015A04  A4D8               	btfss	status,2,c
 21693  015A06  D795               	goto	l7708
 21694                           
 21695                           ;stkvar	_neg @ sp[(-9)+7]
 21696  015A08  0EFE               	movlw	-2
 21697  015A0A  006F FF8C  F033    	movff	plusw1,btemp
 21698  015A10  0EFF               	movlw	-1
 21699  015A12  50E3               	movf	plusw1,w,c
 21700  015A14  1033               	iorwf	btemp^0,w,c
 21701  015A16  A4D8               	btfss	status,2,c
 21702  015A18  D00E               	goto	l7722
 21703                           
 21704                           ;stkvar	_n @ sp[(-9)+5]
 21705  015A1A  0EFC               	movlw	-4
 21706  015A1C  006F FF8C  F033    	movff	plusw1,btemp
 21707  015A22  1E33               	comf	btemp^0,f,c
 21708  015A24  0EFD               	movlw	-3
 21709  015A26  006F FF8C  F034    	movff	plusw1,btemp+1
 21710  015A2C  1E34               	comf	(btemp+1)^0,f,c
 21711  015A2E  2A33               	incf	btemp^0,f,c
 21712  015A30  B4D8               	btfsc	status,2,c
 21713  015A32  2A34               	incf	(btemp+1)^0,f,c
 21714  015A34  D008               	goto	l2745
 21715  015A36                     l7722:
 21716                           
 21717                           ;stkvar	_n @ sp[(-9)+5]
 21718  015A36  0EFC               	movlw	-4
 21719  015A38  006F FF8C  F033    	movff	plusw1,btemp
 21720  015A3E  0EFD               	movlw	-3
 21721  015A40  006F FF8C  F034    	movff	plusw1,btemp+1
 21722  015A46                     l2745:
 21723                           
 21724                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 21725  015A46  0EF5               	movlw	245
 21726  015A48  26E1               	addwf	fsr1l,f,c
 21727  015A4A  0EFF               	movlw	255
 21728  015A4C  22E2               	addwfc	fsr1h,f,c
 21729  015A4E  0012               	return		;funcret
 21730  015A50                     __end_of_atoi:
 21731                           	opt callstack 0
 21732                           
 21733 ;; *************** function _isspace *****************
 21734 ;; Defined at:
 21735 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 21736 ;; Parameters:    Size  Location     Type
 21737 ;;  c               2  [STACK] int 
 21738 ;; Auto vars:     Size  Location     Type
 21739 ;;		None
 21740 ;; Return value:  Size  Location     Type
 21741 ;;                  2  [STACK] int 
 21742 ;; Registers used:
 21743 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21744 ;; Tracked objects:
 21745 ;;		On entry : 0/0
 21746 ;;		On exit  : 0/0
 21747 ;;		Unchanged: 0/0
 21748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21753 ;;Total ram usage:        0 bytes
 21754 ;; Hardware stack levels used:    1
 21755 ;; Hardware stack levels required when called:    6
 21756 ;; This function calls:
 21757 ;;		Nothing
 21758 ;; This function is called by:
 21759 ;;		_atoi
 21760 ;; This function uses a reentrant model
 21761 ;;
 21762                           
 21763                           	psect	text74
 21764  01837A                     __ptext74:
 21765                           	opt callstack 0
 21766  01837A                     _isspace:
 21767                           	opt callstack 0
 21768                           
 21769                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21770  01837A  52E6               	movf	postinc1,f,c
 21771                           
 21772                           ;stkvar	_isspace$4860 @ sp[(-1)+0]
 21773                           
 21774                           ;incstack = 0
 21775  01837C  0EFF               	movlw	-1
 21776  01837E  6AE3               	clrf	plusw1,c
 21777  018380  2AE3               	incf	plusw1,f,c
 21778                           
 21779                           ;stkvar	_c @ sp[(-1)+-2]
 21780  018382  0EFD               	movlw	-3
 21781  018384  006F FF8C  F033    	movff	plusw1,btemp
 21782  01838A  0E20               	movlw	32
 21783  01838C  1833               	xorwf	btemp^0,w,c
 21784  01838E  E104               	bnz	u6590
 21785  018390  0EFE               	movlw	-2
 21786  018392  50E3               	movf	plusw1,w,c
 21787  018394  B4D8               	btfsc	status,2,c
 21788  018396  D012               	goto	l7132
 21789  018398                     u6590:
 21790                           
 21791                           ;stkvar	_c @ sp[(-1)+-2]
 21792  018398  0EFD               	movlw	-3
 21793  01839A  50E3               	movf	plusw1,w,c
 21794  01839C  0FF7               	addlw	247
 21795  01839E  6E3D               	movwf	(btemp+10)^0,c
 21796  0183A0  0EFE               	movlw	-2
 21797  0183A2  006F FF8C  F03E    	movff	plusw1,btemp+11
 21798  0183A8  0EFF               	movlw	255
 21799  0183AA  223E               	addwfc	(btemp+11)^0,f,c
 21800  0183AC  503E               	movf	(btemp+11)^0,w,c
 21801  0183AE  E104               	bnz	u6600
 21802  0183B0  0E05               	movlw	5
 21803  0183B2  5C3D               	subwf	(btemp+10)^0,w,c
 21804  0183B4  A0D8               	btfss	status,0,c
 21805  0183B6  D002               	goto	l7132
 21806  0183B8                     u6600:
 21807                           
 21808                           ;stkvar	_isspace$4860 @ sp[(-1)+0]
 21809  0183B8  0EFF               	movlw	-1
 21810  0183BA  6AE3               	clrf	plusw1,c
 21811  0183BC                     l7132:
 21812                           
 21813                           ;stkvar	_isspace$4860 @ sp[(-1)+0]
 21814  0183BC  0EFF               	movlw	-1
 21815  0183BE  50E3               	movf	plusw1,w,c
 21816  0183C0  6E33               	movwf	btemp^0,c
 21817  0183C2  6A34               	clrf	(btemp+1)^0,c
 21818                           
 21819                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21820  0183C4  52E5               	movf	postdec1,f,c
 21821  0183C6  52E5               	movf	postdec1,f,c
 21822  0183C8  52E5               	movf	postdec1,f,c
 21823  0183CA  0012               	return		;funcret
 21824  0183CC                     __end_of_isspace:
 21825                           	opt callstack 0
 21826                           
 21827 ;; *************** function _isdigit *****************
 21828 ;; Defined at:
 21829 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 21830 ;; Parameters:    Size  Location     Type
 21831 ;;  c               2  [STACK] int 
 21832 ;; Auto vars:     Size  Location     Type
 21833 ;;		None
 21834 ;; Return value:  Size  Location     Type
 21835 ;;                  2  [STACK] int 
 21836 ;; Registers used:
 21837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21838 ;; Tracked objects:
 21839 ;;		On entry : 0/0
 21840 ;;		On exit  : 0/0
 21841 ;;		Unchanged: 0/0
 21842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21847 ;;Total ram usage:        0 bytes
 21848 ;; Hardware stack levels used:    1
 21849 ;; Hardware stack levels required when called:    6
 21850 ;; This function calls:
 21851 ;;		Nothing
 21852 ;; This function is called by:
 21853 ;;		_vfpfcnvrt
 21854 ;;		_atoi
 21855 ;; This function uses a reentrant model
 21856 ;;
 21857                           
 21858                           	psect	text75
 21859  018864                     __ptext75:
 21860                           	opt callstack 0
 21861  018864                     _isdigit:
 21862                           	opt callstack 18
 21863                           
 21864                           ;stkvar	_c @ sp[(0)+-2]
 21865                           
 21866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21867                           ;incstack = 0
 21868  018864  0EFE               	movlw	-2
 21869  018866  50E3               	movf	plusw1,w,c
 21870  018868  0FD0               	addlw	208
 21871  01886A  6E3D               	movwf	(btemp+10)^0,c
 21872  01886C  0EFF               	movlw	-1
 21873  01886E  006F FF8C  F03E    	movff	plusw1,btemp+11
 21874  018874  0EFF               	movlw	255
 21875  018876  223E               	addwfc	(btemp+11)^0,f,c
 21876  018878  503E               	movf	(btemp+11)^0,w,c
 21877  01887A  E106               	bnz	u5440
 21878  01887C  0E0A               	movlw	10
 21879  01887E  5C3D               	subwf	(btemp+10)^0,w,c
 21880  018880  B0D8               	btfsc	status,0,c
 21881  018882  D002               	goto	u5440
 21882  018884  0E01               	movlw	1
 21883  018886  D001               	goto	u5450
 21884  018888                     u5440:
 21885  018888  0E00               	movlw	0
 21886  01888A                     u5450:
 21887  01888A  6E33               	movwf	btemp^0,c
 21888  01888C  6A34               	clrf	(btemp+1)^0,c
 21889                           
 21890                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21891  01888E  52E5               	movf	postdec1,f,c
 21892  018890  52E5               	movf	postdec1,f,c
 21893  018892  0012               	return		;funcret
 21894  018894                     __end_of_isdigit:
 21895                           	opt callstack 0
 21896                           
 21897 ;; *************** function _set_vterm *****************
 21898 ;; Defined at:
 21899 ;;		line 104 in file "mconfig.c"
 21900 ;; Parameters:    Size  Location     Type
 21901 ;;  vterm           1  [STACK] const unsigned char 
 21902 ;; Auto vars:     Size  Location     Type
 21903 ;;		None
 21904 ;; Return value:  Size  Location     Type
 21905 ;;                  1  [STACK] unsigned char 
 21906 ;; Registers used:
 21907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 21908 ;; Tracked objects:
 21909 ;;		On entry : 0/0
 21910 ;;		On exit  : 3F/5
 21911 ;;		Unchanged: 0/0
 21912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21917 ;;Total ram usage:        0 bytes
 21918 ;; Hardware stack levels used:    1
 21919 ;; Hardware stack levels required when called:    6
 21920 ;; This function calls:
 21921 ;;		Nothing
 21922 ;; This function is called by:
 21923 ;;		_main
 21924 ;;		_check_help
 21925 ;; This function uses a reentrant model
 21926 ;;
 21927                           
 21928                           	psect	text76
 21929  018DC6                     __ptext76:
 21930                           	opt callstack 0
 21931  018DC6                     _set_vterm:
 21932                           	opt callstack 24
 21933                           
 21934                           ;mconfig.c: 104: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106
      +                          :  D.vterm = vterm & 0x03;
 21935                           ;stkvar	_vterm @ sp[(0)+-1]
 21936                           
 21937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21938                           ;incstack = 0
 21939  018DC6  0EFF               	movlw	-1
 21940  018DC8  006F FF8C  F03E    	movff	plusw1,btemp+11
 21941  018DCE  0E03               	movlw	3
 21942  018DD0  163E               	andwf	(btemp+11)^0,f,c
 21943  018DD2  0105               	movlb	5	; () banked
 21944  018DD4  51D8               	movf	(_D+216)& (0+255),w,b
 21945  018DD6  183E               	xorwf	(btemp+11)^0,w,c
 21946  018DD8  0BFE               	andlw	-2
 21947  018DDA  183E               	xorwf	(btemp+11)^0,w,c
 21948  018DDC  6FD8               	movwf	(_D+216)& (0+255),b
 21949                           
 21950                           ; BSR set to: 5
 21951                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21952  018DDE  52E5               	movf	postdec1,f,c
 21953  018DE0  0012               	return		;funcret
 21954  018DE2                     __end_of_set_vterm:
 21955                           	opt callstack 0
 21956                           
 21957 ;; *************** function _set_temp_display_help *****************
 21958 ;; Defined at:
 21959 ;;		line 208 in file "mconfig.c"
 21960 ;; Parameters:    Size  Location     Type
 21961 ;;  new_response    1  [STACK] const enum E16501
 21962 ;; Auto vars:     Size  Location     Type
 21963 ;;		None
 21964 ;; Return value:  Size  Location     Type
 21965 ;;                  1  [STACK] enum E16501
 21966 ;; Registers used:
 21967 ;;		wreg, fsr1l, fsr1h
 21968 ;; Tracked objects:
 21969 ;;		On entry : 0/5
 21970 ;;		On exit  : 3F/1
 21971 ;;		Unchanged: 0/0
 21972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21977 ;;Total ram usage:        0 bytes
 21978 ;; Hardware stack levels used:    1
 21979 ;; Hardware stack levels required when called:    6
 21980 ;; This function calls:
 21981 ;;		Nothing
 21982 ;; This function is called by:
 21983 ;;		_check_help
 21984 ;; This function uses a reentrant model
 21985 ;;
 21986                           
 21987                           	psect	text77
 21988  018ECA                     __ptext77:
 21989                           	opt callstack 0
 21990  018ECA                     _set_temp_display_help:
 21991                           	opt callstack 23
 21992                           
 21993                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 21994                           
 21995                           ; BSR set to: 5
 21996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21997                           ;incstack = 0
 21998  018ECA  0101               	movlb	1	; () banked
 21999  018ECC  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22000                           
 22001                           ; BSR set to: 1
 22002                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 22003                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22004  018ECE  0EFF               	movlw	-1
 22005  018ED0  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 22006                           
 22007                           ; BSR set to: 1
 22008                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22009  018ED6  52E5               	movf	postdec1,f,c
 22010  018ED8  0012               	return		;funcret
 22011  018EDA                     __end_of_set_temp_display_help:
 22012                           	opt callstack 0
 22013                           
 22014 ;; *************** function _set_display_info *****************
 22015 ;; Defined at:
 22016 ;;		line 197 in file "mconfig.c"
 22017 ;; Parameters:    Size  Location     Type
 22018 ;;  new_response    1  [STACK] const enum E16501
 22019 ;; Auto vars:     Size  Location     Type
 22020 ;;		None
 22021 ;; Return value:  Size  Location     Type
 22022 ;;                  1  [STACK] enum E16986
 22023 ;; Registers used:
 22024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22025 ;; Tracked objects:
 22026 ;;		On entry : 0/39
 22027 ;;		On exit  : 0/0
 22028 ;;		Unchanged: 0/0
 22029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22034 ;;Total ram usage:        0 bytes
 22035 ;; Hardware stack levels used:    1
 22036 ;; Hardware stack levels required when called:    7
 22037 ;; This function calls:
 22038 ;;		_TimerDone
 22039 ;; This function is called by:
 22040 ;;		_main
 22041 ;;		_check_help
 22042 ;; This function uses a reentrant model
 22043 ;;
 22044                           
 22045                           	psect	text78
 22046  018D50                     __ptext78:
 22047                           	opt callstack 0
 22048  018D50                     _set_display_info:
 22049                           	opt callstack 23
 22050                           
 22051                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 22052                           
 22053                           ; BSR set to: 1
 22054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22055                           ;incstack = 0
 22056  018D50  0E07               	movlw	7
 22057  018D52  6EE6               	movwf	postinc1,c
 22058  018D54  EC33  F0C6         	call	_TimerDone	;wreg free
 22059  018D58  5033               	movf	btemp^0,w,c
 22060  018D5A  B4D8               	btfsc	status,2,c
 22061  018D5C  D006               	goto	l1604
 22062                           
 22063                           ;mconfig.c: 202:   old_info = V.response.info;
 22064  018D5E  0101               	movlb	1	; () banked
 22065  018D60  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 22066                           
 22067                           ; BSR set to: 1
 22068                           ;mconfig.c: 203:   V.response.info = new_response_info;
 22069                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22070  018D62  0EFF               	movlw	-1
 22071  018D64  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 22072  018D6A                     l1604:
 22073                           
 22074                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22075  018D6A  52E5               	movf	postdec1,f,c
 22076  018D6C  0012               	return		;funcret
 22077  018D6E                     __end_of_set_display_info:
 22078                           	opt callstack 0
 22079                           
 22080 ;; *************** function _mode_lamp_dim *****************
 22081 ;; Defined at:
 22082 ;;		line 13 in file "mconfig.c"
 22083 ;; Parameters:    Size  Location     Type
 22084 ;;  level           2  [STACK] const unsigned short 
 22085 ;; Auto vars:     Size  Location     Type
 22086 ;;		None
 22087 ;; Return value:  Size  Location     Type
 22088 ;;                  1  [STACK] void 
 22089 ;; Registers used:
 22090 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22091 ;; Tracked objects:
 22092 ;;		On entry : 0/1
 22093 ;;		On exit  : 0/0
 22094 ;;		Unchanged: 0/0
 22095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22100 ;;Total ram usage:        0 bytes
 22101 ;; Hardware stack levels used:    1
 22102 ;; Hardware stack levels required when called:    7
 22103 ;; This function calls:
 22104 ;;		_PWM8_LoadDutyValue
 22105 ;; This function is called by:
 22106 ;;		_main
 22107 ;;		_check_help
 22108 ;; This function uses a reentrant model
 22109 ;;
 22110                           
 22111                           	psect	text79
 22112  018E32                     __ptext79:
 22113                           	opt callstack 0
 22114  018E32                     _mode_lamp_dim:
 22115                           	opt callstack 23
 22116                           
 22117                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22118                           ;stkvar	_level @ sp[(0)+-2]
 22119                           
 22120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22121                           ;incstack = 0
 22122  018E32  0EFE               	movlw	-2
 22123  018E34  006F FF8F FFE6     	movff	plusw1,postinc1
 22124  018E3A  006F FF8F FFE6     	movff	plusw1,postinc1
 22125  018E40  ECFD  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 22126                           
 22127                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22128  018E44  52E5               	movf	postdec1,f,c
 22129  018E46  52E5               	movf	postdec1,f,c
 22130  018E48  0012               	return		;funcret
 22131  018E4A                     __end_of_mode_lamp_dim:
 22132                           	opt callstack 0
 22133                           
 22134 ;; *************** function _mode_lamp_bright *****************
 22135 ;; Defined at:
 22136 ;;		line 18 in file "mconfig.c"
 22137 ;; Parameters:    Size  Location     Type
 22138 ;;		None
 22139 ;; Auto vars:     Size  Location     Type
 22140 ;;		None
 22141 ;; Return value:  Size  Location     Type
 22142 ;;                  1  [STACK] void 
 22143 ;; Registers used:
 22144 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22145 ;; Tracked objects:
 22146 ;;		On entry : 0/0
 22147 ;;		On exit  : 0/0
 22148 ;;		Unchanged: 0/0
 22149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22154 ;;Total ram usage:        0 bytes
 22155 ;; Hardware stack levels used:    1
 22156 ;; Hardware stack levels required when called:    7
 22157 ;; This function calls:
 22158 ;;		_PWM8_LoadDutyValue
 22159 ;; This function is called by:
 22160 ;;		_check_help
 22161 ;; This function uses a reentrant model
 22162 ;;
 22163                           
 22164                           	psect	text80
 22165  018EE8                     __ptext80:
 22166                           	opt callstack 0
 22167  018EE8                     _mode_lamp_bright:
 22168                           	opt callstack 22
 22169                           
 22170                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22171                           
 22172                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22173                           ;incstack = 0
 22174  018EE8  0E2C               	movlw	44
 22175  018EEA  6EE6               	movwf	postinc1,c
 22176  018EEC  0E01               	movlw	1
 22177  018EEE  6EE6               	movwf	postinc1,c
 22178  018EF0  ECFD  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 22179                           
 22180                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22181  018EF4  0012               	return		;funcret
 22182  018EF6                     __end_of_mode_lamp_bright:
 22183                           	opt callstack 0
 22184                           
 22185 ;; *************** function _PWM8_LoadDutyValue *****************
 22186 ;; Defined at:
 22187 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22188 ;; Parameters:    Size  Location     Type
 22189 ;;  dutyValue       2  [STACK] unsigned short 
 22190 ;; Auto vars:     Size  Location     Type
 22191 ;;		None
 22192 ;; Return value:  Size  Location     Type
 22193 ;;                  1  [STACK] void 
 22194 ;; Registers used:
 22195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22196 ;; Tracked objects:
 22197 ;;		On entry : 0/1
 22198 ;;		On exit  : 0/0
 22199 ;;		Unchanged: 0/0
 22200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22205 ;;Total ram usage:        0 bytes
 22206 ;; Hardware stack levels used:    1
 22207 ;; Hardware stack levels required when called:    6
 22208 ;; This function calls:
 22209 ;;		Nothing
 22210 ;; This function is called by:
 22211 ;;		_mode_lamp_dim
 22212 ;;		_mode_lamp_bright
 22213 ;; This function uses a reentrant model
 22214 ;;
 22215                           
 22216                           	psect	text81
 22217  0185FA                     __ptext81:
 22218                           	opt callstack 0
 22219  0185FA                     _PWM8_LoadDutyValue:
 22220                           	opt callstack 23
 22221                           
 22222                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22223                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22224                           
 22225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22226                           ;incstack = 0
 22227  0185FA  0EFE               	movlw	-2
 22228  0185FC  006F FF8C  F03D    	movff	plusw1,btemp+10
 22229  018602  0EFF               	movlw	-1
 22230  018604  006F FF8C  F03E    	movff	plusw1,btemp+11
 22231  01860A  90D8               	bcf	status,0,c
 22232  01860C  323E               	rrcf	(btemp+11)^0,f,c
 22233  01860E  323D               	rrcf	(btemp+10)^0,f,c
 22234  018610  90D8               	bcf	status,0,c
 22235  018612  323E               	rrcf	(btemp+11)^0,f,c
 22236  018614  323D               	rrcf	(btemp+10)^0,f,c
 22237  018616  503D               	movf	(btemp+10)^0,w,c
 22238  018618  6E61               	movwf	97,c	;volatile
 22239                           
 22240                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22241                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22242  01861A  0EFE               	movlw	-2
 22243  01861C  006F FF8C  F03E    	movff	plusw1,btemp+11
 22244  018622  0E03               	movlw	3
 22245  018624  163E               	andwf	(btemp+11)^0,f,c
 22246  018626  0E06               	movlw	6
 22247  018628  6E33               	movwf	btemp^0,c
 22248  01862A                     u8245:
 22249  01862A  90D8               	bcf	status,0,c
 22250  01862C  363E               	rlcf	(btemp+11)^0,f,c
 22251  01862E  2E33               	decfsz	btemp^0,f,c
 22252  018630  D7FC               	goto	u8245
 22253  018632  503E               	movf	(btemp+11)^0,w,c
 22254  018634  6E60               	movwf	96,c	;volatile
 22255                           
 22256                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22257  018636  52E5               	movf	postdec1,f,c
 22258  018638  52E5               	movf	postdec1,f,c
 22259  01863A  0012               	return		;funcret
 22260  01863C                     __end_of_PWM8_LoadDutyValue:
 22261                           	opt callstack 0
 22262                           
 22263 ;; *************** function _help_button *****************
 22264 ;; Defined at:
 22265 ;;		line 26 in file "mconfig.c"
 22266 ;; Parameters:    Size  Location     Type
 22267 ;;		None
 22268 ;; Auto vars:     Size  Location     Type
 22269 ;;		None
 22270 ;; Return value:  Size  Location     Type
 22271 ;;                  1  [STACK] _Bool 
 22272 ;; Registers used:
 22273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22274 ;; Tracked objects:
 22275 ;;		On entry : 0/1
 22276 ;;		On exit  : 0/0
 22277 ;;		Unchanged: 0/0
 22278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22283 ;;Total ram usage:        0 bytes
 22284 ;; Hardware stack levels used:    1
 22285 ;; Hardware stack levels required when called:    7
 22286 ;; This function calls:
 22287 ;;		_StartTimer
 22288 ;;		_TimerDone
 22289 ;; This function is called by:
 22290 ;;		_check_help
 22291 ;; This function uses a reentrant model
 22292 ;;
 22293                           
 22294                           	psect	text82
 22295  0186F8                     __ptext82:
 22296                           	opt callstack 0
 22297  0186F8                     _help_button:
 22298                           	opt callstack 22
 22299                           
 22300                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22301                           
 22302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22303                           ;incstack = 0
 22304  0186F8  B0CB               	btfsc	203,0,c	;volatile
 22305  0186FA  D00C               	goto	l1547
 22306                           
 22307                           ;mconfig.c: 29:   V.help = 1;
 22308  0186FC  0101               	movlb	1	; () banked
 22309  0186FE  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22310                           
 22311                           ; BSR set to: 1
 22312                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22313  018700  0E08               	movlw	8
 22314  018702  6EE6               	movwf	postinc1,c
 22315  018704  EC33  F0C6         	call	_TimerDone	;wreg free
 22316  018708  5033               	movf	btemp^0,w,c
 22317  01870A  B4D8               	btfsc	status,2,c
 22318  01870C  D003               	goto	l1547
 22319                           
 22320                           ;mconfig.c: 31:    return 1;
 22321  01870E  0E01               	movlw	1
 22322  018710  6E33               	movwf	btemp^0,c
 22323  018712  0012               	return	
 22324  018714                     l1547:
 22325                           
 22326                           ;mconfig.c: 34:  if (!V.help)
 22327  018714  0101               	movlb	1	; () banked
 22328  018716  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22329  018718  D008               	goto	l8658
 22330                           
 22331                           ; BSR set to: 1
 22332                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22333  01871A  0E2C               	movlw	44
 22334  01871C  6EE6               	movwf	postinc1,c
 22335  01871E  0E01               	movlw	1
 22336  018720  6EE6               	movwf	postinc1,c
 22337  018722  0E08               	movlw	8
 22338  018724  6EE6               	movwf	postinc1,c
 22339  018726  EC5E  F0C3         	call	_StartTimer	;wreg free
 22340  01872A                     l8658:
 22341                           
 22342                           ;mconfig.c: 37:  return 0;
 22343  01872A  0E00               	movlw	0
 22344  01872C  6E33               	movwf	btemp^0,c
 22345                           
 22346                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22347  01872E  0012               	return		;funcret
 22348  018730                     __end_of_help_button:
 22349                           	opt callstack 0
 22350                           
 22351 ;; *************** function _TimerDone *****************
 22352 ;; Defined at:
 22353 ;;		line 20 in file "timers.c"
 22354 ;; Parameters:    Size  Location     Type
 22355 ;;  timer           1  [STACK] const unsigned char 
 22356 ;; Auto vars:     Size  Location     Type
 22357 ;;		None
 22358 ;; Return value:  Size  Location     Type
 22359 ;;                  1  [STACK] _Bool 
 22360 ;; Registers used:
 22361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22362 ;; Tracked objects:
 22363 ;;		On entry : 0/39
 22364 ;;		On exit  : 0/0
 22365 ;;		Unchanged: 0/0
 22366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22371 ;;Total ram usage:        0 bytes
 22372 ;; Hardware stack levels used:    1
 22373 ;; Hardware stack levels required when called:    6
 22374 ;; This function calls:
 22375 ;;		Nothing
 22376 ;; This function is called by:
 22377 ;;		_main
 22378 ;;		_WaitMs
 22379 ;;		_help_button
 22380 ;;		_check_help
 22381 ;;		_set_display_info
 22382 ;; This function uses a reentrant model
 22383 ;;
 22384                           
 22385                           	psect	text83
 22386  018C66                     __ptext83:
 22387                           	opt callstack 0
 22388  018C66                     _TimerDone:
 22389                           	opt callstack 23
 22390                           
 22391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22392                           ;incstack = 0
 22393  018C66  0004               	clrwdt		;# 
 22394                           
 22395                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22396                           ;stkvar	_timer @ sp[(0)+-1]
 22397  018C68  0EFF               	movlw	-1
 22398  018C6A  50E3               	movf	plusw1,w,c
 22399  018C6C  0D02               	mullw	2
 22400  018C6E  50F3               	movf	243,w,c
 22401  018C70  0F60               	addlw	low _tickCount
 22402  018C72  6ED9               	movwf	fsr2l,c
 22403  018C74  6ADA               	clrf	fsr2h,c
 22404  018C76  50DE               	movf	postinc2,w,c
 22405  018C78  10DE               	iorwf	postinc2,w,c
 22406  018C7A  A4D8               	btfss	status,2,c
 22407  018C7C  D002               	goto	l8054
 22408                           
 22409                           ;timers.c: 24:   return 1;
 22410  018C7E  0E01               	movlw	1
 22411  018C80  D001               	goto	L22
 22412  018C82                     l8054:
 22413                           
 22414                           ;timers.c: 26:  return 0;
 22415  018C82  0E00               	movlw	0
 22416  018C84                     L22:
 22417  018C84  6E33               	movwf	btemp^0,c
 22418                           
 22419                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22420  018C86  52E5               	movf	postdec1,f,c
 22421  018C88  0012               	return		;funcret
 22422  018C8A                     __end_of_TimerDone:
 22423                           	opt callstack 0
 22424                           
 22425 ;; *************** function _StartTimer *****************
 22426 ;; Defined at:
 22427 ;;		line 12 in file "timers.c"
 22428 ;; Parameters:    Size  Location     Type
 22429 ;;  timer           1  [STACK] const unsigned char 
 22430 ;;  count           2  [STACK] const unsigned short 
 22431 ;; Auto vars:     Size  Location     Type
 22432 ;;		None
 22433 ;; Return value:  Size  Location     Type
 22434 ;;                  1  [STACK] void 
 22435 ;; Registers used:
 22436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22437 ;; Tracked objects:
 22438 ;;		On entry : 0/1
 22439 ;;		On exit  : 0/0
 22440 ;;		Unchanged: 0/0
 22441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22446 ;;Total ram usage:        0 bytes
 22447 ;; Hardware stack levels used:    1
 22448 ;; Hardware stack levels required when called:    6
 22449 ;; This function calls:
 22450 ;;		Nothing
 22451 ;; This function is called by:
 22452 ;;		_main
 22453 ;;		_WaitMs
 22454 ;;		_help_button
 22455 ;;		_check_help
 22456 ;; This function uses a reentrant model
 22457 ;;
 22458                           
 22459                           	psect	text84
 22460  0186BC                     __ptext84:
 22461                           	opt callstack 0
 22462  0186BC                     _StartTimer:
 22463                           	opt callstack 21
 22464                           
 22465                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22466                           ;stkvar	_count @ sp[(0)+-3]
 22467                           
 22468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22469                           ;incstack = 0
 22470  0186BC  0EFD               	movlw	-3
 22471  0186BE  006F FF8C  F03D    	movff	plusw1,btemp+10
 22472  0186C4  0EFE               	movlw	-2
 22473  0186C6  006F FF8C  F03E    	movff	plusw1,btemp+11
 22474  0186CC  90D8               	bcf	status,0,c
 22475  0186CE  343D               	rlcf	(btemp+10)^0,w,c
 22476  0186D0  6E3B               	movwf	(btemp+8)^0,c
 22477  0186D2  343E               	rlcf	(btemp+11)^0,w,c
 22478  0186D4  6E3C               	movwf	(btemp+9)^0,c
 22479                           
 22480                           ;stkvar	_timer @ sp[(0)+-1]
 22481  0186D6  0EFF               	movlw	-1
 22482  0186D8  50E3               	movf	plusw1,w,c
 22483  0186DA  0D02               	mullw	2
 22484  0186DC  50F3               	movf	243,w,c
 22485  0186DE  0F60               	addlw	low _tickCount
 22486  0186E0  6ED9               	movwf	fsr2l,c
 22487  0186E2  6ADA               	clrf	fsr2h,c
 22488  0186E4  0060  F0EF  FFDE   	movff	btemp+8,postinc2
 22489  0186EA  0060  F0F3  FFDD   	movff	btemp+9,postdec2
 22490                           
 22491                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22492  0186F0  52E5               	movf	postdec1,f,c
 22493  0186F2  52E5               	movf	postdec1,f,c
 22494  0186F4  52E5               	movf	postdec1,f,c
 22495  0186F6  0012               	return		;funcret
 22496  0186F8                     __end_of_StartTimer:
 22497                           	opt callstack 0
 22498                           
 22499 ;; *************** function _display_info *****************
 22500 ;; Defined at:
 22501 ;;		line 187 in file "mconfig.c"
 22502 ;; Parameters:    Size  Location     Type
 22503 ;;		None
 22504 ;; Auto vars:     Size  Location     Type
 22505 ;;		None
 22506 ;; Return value:  Size  Location     Type
 22507 ;;                  1  [STACK] enum E16501
 22508 ;; Registers used:
 22509 ;;		btemp
 22510 ;; Tracked objects:
 22511 ;;		On entry : 0/1
 22512 ;;		On exit  : 0/0
 22513 ;;		Unchanged: 0/0
 22514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22519 ;;Total ram usage:        0 bytes
 22520 ;; Hardware stack levels used:    1
 22521 ;; Hardware stack levels required when called:    6
 22522 ;; This function calls:
 22523 ;;		Nothing
 22524 ;; This function is called by:
 22525 ;;		_check_help
 22526 ;; This function uses a reentrant model
 22527 ;;
 22528                           
 22529                           	psect	text85
 22530  018F4A                     __ptext85:
 22531                           	opt callstack 0
 22532  018F4A                     _display_info:
 22533                           	opt callstack 23
 22534                           
 22535                           ;mconfig.c: 189:  return V.response.info;
 22536                           
 22537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22538                           ;incstack = 0
 22539  018F4A  0060  F68C  F033   	movff	_V+163,btemp	;volatile
 22540                           
 22541                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22542  018F50  0012               	return		;funcret
 22543  018F52                     __end_of_display_info:
 22544                           	opt callstack 0
 22545                           
 22546 ;; *************** function _display_help *****************
 22547 ;; Defined at:
 22548 ;;		line 192 in file "mconfig.c"
 22549 ;; Parameters:    Size  Location     Type
 22550 ;;		None
 22551 ;; Auto vars:     Size  Location     Type
 22552 ;;		None
 22553 ;; Return value:  Size  Location     Type
 22554 ;;                  1  [STACK] enum E16501
 22555 ;; Registers used:
 22556 ;;		btemp
 22557 ;; Tracked objects:
 22558 ;;		On entry : 3F/1
 22559 ;;		On exit  : 0/0
 22560 ;;		Unchanged: 0/0
 22561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22566 ;;Total ram usage:        0 bytes
 22567 ;; Hardware stack levels used:    1
 22568 ;; Hardware stack levels required when called:    6
 22569 ;; This function calls:
 22570 ;;		Nothing
 22571 ;; This function is called by:
 22572 ;;		_check_help
 22573 ;; This function uses a reentrant model
 22574 ;;
 22575                           
 22576                           	psect	text86
 22577  018F52                     __ptext86:
 22578                           	opt callstack 0
 22579  018F52                     _display_help:
 22580                           	opt callstack 23
 22581                           
 22582                           ;mconfig.c: 194:  return V.response.help_temp;
 22583                           
 22584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22585                           ;incstack = 0
 22586  018F52  0060  F690  F033   	movff	_V+164,btemp	;volatile
 22587                           
 22588                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22589  018F58  0012               	return		;funcret
 22590  018F5A                     __end_of_display_help:
 22591                           	opt callstack 0
 22592                           
 22593 ;; *************** function _check_adc_scan *****************
 22594 ;; Defined at:
 22595 ;;		line 56 in file "daq.c"
 22596 ;; Parameters:    Size  Location     Type
 22597 ;;		None
 22598 ;; Auto vars:     Size  Location     Type
 22599 ;;		None
 22600 ;; Return value:  Size  Location     Type
 22601 ;;                  1  [STACK] _Bool 
 22602 ;; Registers used:
 22603 ;;		btemp
 22604 ;; Tracked objects:
 22605 ;;		On entry : 0/39
 22606 ;;		On exit  : 0/0
 22607 ;;		Unchanged: 0/0
 22608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22613 ;;Total ram usage:        0 bytes
 22614 ;; Hardware stack levels used:    1
 22615 ;; Hardware stack levels required when called:    6
 22616 ;; This function calls:
 22617 ;;		Nothing
 22618 ;; This function is called by:
 22619 ;;		_main
 22620 ;; This function uses a reentrant model
 22621 ;;
 22622                           
 22623                           	psect	text87
 22624  018F5A                     __ptext87:
 22625                           	opt callstack 0
 22626  018F5A                     _check_adc_scan:
 22627                           	opt callstack 24
 22628                           
 22629                           ;daq.c: 58:  return R.done;
 22630                           
 22631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22632                           ;incstack = 0
 22633  018F5A  0060  F330  F033   	movff	_R+39,btemp	;volatile
 22634                           
 22635                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22636  018F60  0012               	return		;funcret
 22637  018F62                     __end_of_check_adc_scan:
 22638                           	opt callstack 0
 22639                           
 22640 ;; *************** function _SYSTEM_Initialize *****************
 22641 ;; Defined at:
 22642 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22643 ;; Parameters:    Size  Location     Type
 22644 ;;		None
 22645 ;; Auto vars:     Size  Location     Type
 22646 ;;		None
 22647 ;; Return value:  Size  Location     Type
 22648 ;;                  1  [STACK] void 
 22649 ;; Registers used:
 22650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22651 ;; Tracked objects:
 22652 ;;		On entry : 0/0
 22653 ;;		On exit  : 3F/3C
 22654 ;;		Unchanged: 0/0
 22655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22660 ;;Total ram usage:        0 bytes
 22661 ;; Hardware stack levels used:    1
 22662 ;; Hardware stack levels required when called:    8
 22663 ;; This function calls:
 22664 ;;		_ADCC_Initialize
 22665 ;;		_CLKREF_Initialize
 22666 ;;		_DMA1_Initialize
 22667 ;;		_DMA2_Initialize
 22668 ;;		_EXT_INT_Initialize
 22669 ;;		_FVR_Initialize
 22670 ;;		_INTERRUPT_Initialize
 22671 ;;		_OSCILLATOR_Initialize
 22672 ;;		_PIN_MANAGER_Initialize
 22673 ;;		_PMD_Initialize
 22674 ;;		_PWM8_Initialize
 22675 ;;		_SPI1_Initialize
 22676 ;;		_TMR2_Initialize
 22677 ;;		_TMR5_Initialize
 22678 ;;		_TMR6_Initialize
 22679 ;;		_UART1_Initialize
 22680 ;;		_UART2_Initialize
 22681 ;; This function is called by:
 22682 ;;		_main
 22683 ;; This function uses a reentrant model
 22684 ;;
 22685                           
 22686                           	psect	text88
 22687  0184A0                     __ptext88:
 22688                           	opt callstack 0
 22689  0184A0                     _SYSTEM_Initialize:
 22690                           	opt callstack 22
 22691                           
 22692                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22693                           
 22694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22695                           ;incstack = 0
 22696  0184A0  ECE4  F0BF         	call	_INTERRUPT_Initialize	;wreg free
 22697                           
 22698                           ; BSR set to: 57
 22699                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22700  0184A4  EC52  F0C7         	call	_PMD_Initialize	;wreg free
 22701                           
 22702                           ; BSR set to: 57
 22703                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22704  0184A8  ECB8  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 22705                           
 22706                           ; BSR set to: 58
 22707                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22708  0184AC  EC47  F0C7         	call	_OSCILLATOR_Initialize	;wreg free
 22709                           
 22710                           ; BSR set to: 57
 22711                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22712  0184B0  ECB1  F0C7         	call	_FVR_Initialize	;wreg free
 22713                           
 22714                           ; BSR set to: 62
 22715                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22716  0184B4  EC7A  F0BF         	call	_ADCC_Initialize	;wreg free
 22717                           
 22718                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 22719  0184B8  EC25  F0C7         	call	_TMR2_Initialize	;wreg free
 22720                           
 22721                           ; BSR set to: 57
 22722                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 22723  0184BC  EC3C  F0C7         	call	_PWM8_Initialize	;wreg free
 22724                           
 22725                           ; BSR set to: 63
 22726                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22727  0184C0  ECE8  F0C3         	call	_EXT_INT_Initialize	;wreg free
 22728                           
 22729                           ; BSR set to: 57
 22730                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22731  0184C4  EC8D  F0C4         	call	_TMR6_Initialize	;wreg free
 22732                           
 22733                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22734  0184C8  EC73  F0C2         	call	_TMR5_Initialize	;wreg free
 22735                           
 22736                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22737  0184CC  EC49  F0C0         	call	_UART1_Initialize	;wreg free
 22738                           
 22739                           ; BSR set to: 57
 22740                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22741  0184D0  ECDD  F0C0         	call	_UART2_Initialize	;wreg free
 22742                           
 22743                           ; BSR set to: 57
 22744                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22745  0184D4  EC31  F0C7         	call	_SPI1_Initialize	;wreg free
 22746                           
 22747                           ; BSR set to: 61
 22748                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22749  0184D8  EC67  F0C1         	call	_DMA2_Initialize	;wreg free
 22750                           
 22751                           ; BSR set to: 59
 22752                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22753  0184DC  EC45  F0BF         	call	_DMA1_Initialize	;wreg free
 22754                           
 22755                           ; BSR set to: 59
 22756                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22757  0184E0  EC8B  F0C7         	call	_CLKREF_Initialize	;wreg free
 22758                           
 22759                           ; BSR set to: 60
 22760                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22761  0184E4  0012               	return		;funcret
 22762  0184E6                     __end_of_SYSTEM_Initialize:
 22763                           	opt callstack 0
 22764                           
 22765 ;; *************** function _UART2_Initialize *****************
 22766 ;; Defined at:
 22767 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22768 ;; Parameters:    Size  Location     Type
 22769 ;;		None
 22770 ;; Auto vars:     Size  Location     Type
 22771 ;;		None
 22772 ;; Return value:  Size  Location     Type
 22773 ;;                  1  [STACK] void 
 22774 ;; Registers used:
 22775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22776 ;; Tracked objects:
 22777 ;;		On entry : 3F/39
 22778 ;;		On exit  : 3F/39
 22779 ;;		Unchanged: 0/0
 22780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22785 ;;Total ram usage:        0 bytes
 22786 ;; Hardware stack levels used:    1
 22787 ;; Hardware stack levels required when called:    7
 22788 ;; This function calls:
 22789 ;;		_UART2_SetRxInterruptHandler
 22790 ;;		_UART2_SetTxInterruptHandler
 22791 ;; This function is called by:
 22792 ;;		_SYSTEM_Initialize
 22793 ;; This function uses a reentrant model
 22794 ;;
 22795                           
 22796                           	psect	text89
 22797  0181BA                     __ptext89:
 22798                           	opt callstack 0
 22799  0181BA                     _UART2_Initialize:
 22800                           	opt callstack 22
 22801                           
 22802                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22803                           
 22804                           ; BSR set to: 60
 22805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22806                           ;incstack = 0
 22807  0181BA  0139               	movlb	57	; () banked
 22808  0181BC  9596               	bcf	150,2,b	;volatile
 22809                           
 22810                           ; BSR set to: 57
 22811                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22812  0181BE  0E8C               	movlw	low _UART2_Receive_ISR
 22813  0181C0  6EE6               	movwf	postinc1,c
 22814  0181C2  0E8D               	movlw	high _UART2_Receive_ISR
 22815  0181C4  6EE6               	movwf	postinc1,c
 22816  0181C6  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22817  0181C8  6EE6               	movwf	postinc1,c
 22818  0181CA  EC07  F0C5         	call	_UART2_SetRxInterruptHandler	;wreg free
 22819                           
 22820                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22821  0181CE  0139               	movlb	57	; () banked
 22822  0181D0  9796               	bcf	150,3,b	;volatile
 22823                           
 22824                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22825  0181D2  0EEE               	movlw	low _UART2_Transmit_ISR
 22826  0181D4  6EE6               	movwf	postinc1,c
 22827  0181D6  0E88               	movlw	high _UART2_Transmit_ISR
 22828  0181D8  6EE6               	movwf	postinc1,c
 22829  0181DA  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22830  0181DC  6EE6               	movwf	postinc1,c
 22831  0181DE  ECF3  F0C4         	call	_UART2_SetTxInterruptHandler	;wreg free
 22832                           
 22833                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22834  0181E2  013D               	movlb	61	; () banked
 22835  0181E4  6BD4               	clrf	212,b	;volatile
 22836                           
 22837                           ; BSR set to: 61
 22838                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 22839  0181E6  6BD6               	clrf	214,b	;volatile
 22840                           
 22841                           ; BSR set to: 61
 22842                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 22843  0181E8  6BD8               	clrf	216,b	;volatile
 22844                           
 22845                           ; BSR set to: 61
 22846                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 22847  0181EA  0EB0               	movlw	176
 22848  0181EC  6FDA               	movwf	218,b	;volatile
 22849                           
 22850                           ; BSR set to: 61
 22851                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 22852  0181EE  0E80               	movlw	128
 22853  0181F0  6FDB               	movwf	219,b	;volatile
 22854                           
 22855                           ; BSR set to: 61
 22856                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 22857  0181F2  6BDC               	clrf	220,b	;volatile
 22858                           
 22859                           ; BSR set to: 61
 22860                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 22861  0181F4  0E82               	movlw	130
 22862  0181F6  6FDD               	movwf	221,b	;volatile
 22863                           
 22864                           ; BSR set to: 61
 22865                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 22866  0181F8  0E06               	movlw	6
 22867  0181FA  6FDE               	movwf	222,b	;volatile
 22868                           
 22869                           ; BSR set to: 61
 22870                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 22871  0181FC  6BDF               	clrf	223,b	;volatile
 22872                           
 22873                           ; BSR set to: 61
 22874                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 22875  0181FE  6BE0               	clrf	224,b	;volatile
 22876                           
 22877                           ; BSR set to: 61
 22878                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 22879  018200  6BE1               	clrf	225,b	;volatile
 22880                           
 22881                           ; BSR set to: 61
 22882                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 22883  018202  6BE2               	clrf	226,b	;volatile
 22884                           
 22885                           ; BSR set to: 61
 22886                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 22887  018204  6A2C               	clrf	_uart2TxHead^0,c	;volatile
 22888                           
 22889                           ; BSR set to: 61
 22890                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 22891  018206  6A2B               	clrf	_uart2TxTail^0,c	;volatile
 22892                           
 22893                           ; BSR set to: 61
 22894                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 22895  018208  0E40               	movlw	64
 22896  01820A  6E2A               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 22897                           
 22898                           ; BSR set to: 61
 22899                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 22900  01820C  6A29               	clrf	_uart2RxHead^0,c	;volatile
 22901                           
 22902                           ; BSR set to: 61
 22903                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 22904  01820E  6A28               	clrf	_uart2RxTail^0,c	;volatile
 22905                           
 22906                           ; BSR set to: 61
 22907                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 22908  018210  6A27               	clrf	_uart2RxCount^0,c	;volatile
 22909                           
 22910                           ; BSR set to: 61
 22911                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 22912  018212  0139               	movlb	57	; () banked
 22913  018214  8596               	bsf	150,2,b	;volatile
 22914                           
 22915                           ; BSR set to: 57
 22916                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22917  018216  0012               	return		;funcret
 22918  018218                     __end_of_UART2_Initialize:
 22919                           	opt callstack 0
 22920                           
 22921 ;; *************** function _UART2_SetTxInterruptHandler *****************
 22922 ;; Defined at:
 22923 ;;		line 252 in file "mcc_generated_files/uart2.c"
 22924 ;; Parameters:    Size  Location     Type
 22925 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22926 ;;		 -> UART2_Transmit_ISR(1), 
 22927 ;; Auto vars:     Size  Location     Type
 22928 ;;		None
 22929 ;; Return value:  Size  Location     Type
 22930 ;;                  1  [STACK] void 
 22931 ;; Registers used:
 22932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22933 ;; Tracked objects:
 22934 ;;		On entry : 3F/39
 22935 ;;		On exit  : 0/0
 22936 ;;		Unchanged: 0/0
 22937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22942 ;;Total ram usage:        0 bytes
 22943 ;; Hardware stack levels used:    1
 22944 ;; Hardware stack levels required when called:    6
 22945 ;; This function calls:
 22946 ;;		Nothing
 22947 ;; This function is called by:
 22948 ;;		_UART2_Initialize
 22949 ;; This function uses a reentrant model
 22950 ;;
 22951                           
 22952                           	psect	text90
 22953  0189E6                     __ptext90:
 22954                           	opt callstack 0
 22955  0189E6                     _UART2_SetTxInterruptHandler:
 22956                           	opt callstack 22
 22957                           
 22958                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 22959                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22960                           
 22961                           ; BSR set to: 57
 22962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22963                           ;incstack = 0
 22964  0189E6  50E1               	movf	fsr1l,w,c
 22965  0189E8  0FFD               	addlw	-3
 22966  0189EA  6ED9               	movwf	fsr2l,c
 22967  0189EC  50E2               	movf	fsr1h,w,c
 22968  0189EE  6EDA               	movwf	fsr2h,c
 22969  0189F0  0EFF               	movlw	255
 22970  0189F2  22DA               	addwfc	fsr2h,f,c
 22971  0189F4  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 22972  0189FA  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 22973  018A00  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 22974                           
 22975                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22976  018A06  52E5               	movf	postdec1,f,c
 22977  018A08  52E5               	movf	postdec1,f,c
 22978  018A0A  52E5               	movf	postdec1,f,c
 22979  018A0C  0012               	return		;funcret
 22980  018A0E                     __end_of_UART2_SetTxInterruptHandler:
 22981                           	opt callstack 0
 22982                           
 22983 ;; *************** function _UART2_SetRxInterruptHandler *****************
 22984 ;; Defined at:
 22985 ;;		line 248 in file "mcc_generated_files/uart2.c"
 22986 ;; Parameters:    Size  Location     Type
 22987 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22988 ;;		 -> UART2_Receive_ISR(1), 
 22989 ;; Auto vars:     Size  Location     Type
 22990 ;;		None
 22991 ;; Return value:  Size  Location     Type
 22992 ;;                  1  [STACK] void 
 22993 ;; Registers used:
 22994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22995 ;; Tracked objects:
 22996 ;;		On entry : 3F/39
 22997 ;;		On exit  : 0/0
 22998 ;;		Unchanged: 0/0
 22999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23004 ;;Total ram usage:        0 bytes
 23005 ;; Hardware stack levels used:    1
 23006 ;; Hardware stack levels required when called:    6
 23007 ;; This function calls:
 23008 ;;		Nothing
 23009 ;; This function is called by:
 23010 ;;		_UART2_Initialize
 23011 ;; This function uses a reentrant model
 23012 ;;
 23013                           
 23014                           	psect	text91
 23015  018A0E                     __ptext91:
 23016                           	opt callstack 0
 23017  018A0E                     _UART2_SetRxInterruptHandler:
 23018                           	opt callstack 22
 23019                           
 23020                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23021                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23022                           
 23023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23024                           ;incstack = 0
 23025  018A0E  50E1               	movf	fsr1l,w,c
 23026  018A10  0FFD               	addlw	-3
 23027  018A12  6ED9               	movwf	fsr2l,c
 23028  018A14  50E2               	movf	fsr1h,w,c
 23029  018A16  6EDA               	movwf	fsr2h,c
 23030  018A18  0EFF               	movlw	255
 23031  018A1A  22DA               	addwfc	fsr2h,f,c
 23032  018A1C  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 23033  018A22  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 23034  018A28  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 23035                           
 23036                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23037  018A2E  52E5               	movf	postdec1,f,c
 23038  018A30  52E5               	movf	postdec1,f,c
 23039  018A32  52E5               	movf	postdec1,f,c
 23040  018A34  0012               	return		;funcret
 23041  018A36                     __end_of_UART2_SetRxInterruptHandler:
 23042                           	opt callstack 0
 23043                           
 23044 ;; *************** function _UART1_Initialize *****************
 23045 ;; Defined at:
 23046 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23047 ;; Parameters:    Size  Location     Type
 23048 ;;		None
 23049 ;; Auto vars:     Size  Location     Type
 23050 ;;		None
 23051 ;; Return value:  Size  Location     Type
 23052 ;;                  1  [STACK] void 
 23053 ;; Registers used:
 23054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23055 ;; Tracked objects:
 23056 ;;		On entry : 0/39
 23057 ;;		On exit  : 3F/39
 23058 ;;		Unchanged: 0/0
 23059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23064 ;;Total ram usage:        0 bytes
 23065 ;; Hardware stack levels used:    1
 23066 ;; Hardware stack levels required when called:    7
 23067 ;; This function calls:
 23068 ;;		_UART1_SetRxInterruptHandler
 23069 ;;		_UART1_SetTxInterruptHandler
 23070 ;; This function is called by:
 23071 ;;		_SYSTEM_Initialize
 23072 ;; This function uses a reentrant model
 23073 ;;
 23074                           
 23075                           	psect	text92
 23076  018092                     __ptext92:
 23077                           	opt callstack 0
 23078  018092                     _UART1_Initialize:
 23079                           	opt callstack 22
 23080                           
 23081                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23082                           
 23083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23084                           ;incstack = 0
 23085  018092  0139               	movlb	57	; () banked
 23086  018094  9793               	bcf	147,3,b	;volatile
 23087                           
 23088                           ; BSR set to: 57
 23089                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23090  018096  0E6E               	movlw	low _UART1_Receive_ISR
 23091  018098  6EE6               	movwf	postinc1,c
 23092  01809A  0E8D               	movlw	high _UART1_Receive_ISR
 23093  01809C  6EE6               	movwf	postinc1,c
 23094  01809E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23095  0180A0  6EE6               	movwf	postinc1,c
 23096  0180A2  EC2F  F0C5         	call	_UART1_SetRxInterruptHandler	;wreg free
 23097                           
 23098                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23099  0180A6  0139               	movlb	57	; () banked
 23100  0180A8  9993               	bcf	147,4,b	;volatile
 23101                           
 23102                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23103  0180AA  0EC2               	movlw	low _UART1_Transmit_ISR
 23104  0180AC  6EE6               	movwf	postinc1,c
 23105  0180AE  0E88               	movlw	high _UART1_Transmit_ISR
 23106  0180B0  6EE6               	movwf	postinc1,c
 23107  0180B2  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23108  0180B4  6EE6               	movwf	postinc1,c
 23109  0180B6  EC1B  F0C5         	call	_UART1_SetTxInterruptHandler	;wreg free
 23110                           
 23111                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23112  0180BA  013D               	movlb	61	; () banked
 23113  0180BC  6BEC               	clrf	236,b	;volatile
 23114                           
 23115                           ; BSR set to: 61
 23116                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23117  0180BE  6BED               	clrf	237,b	;volatile
 23118                           
 23119                           ; BSR set to: 61
 23120                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23121  0180C0  6BEE               	clrf	238,b	;volatile
 23122                           
 23123                           ; BSR set to: 61
 23124                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23125  0180C2  6BEF               	clrf	239,b	;volatile
 23126                           
 23127                           ; BSR set to: 61
 23128                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23129  0180C4  6BF0               	clrf	240,b	;volatile
 23130                           
 23131                           ; BSR set to: 61
 23132                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23133  0180C6  6BF1               	clrf	241,b	;volatile
 23134                           
 23135                           ; BSR set to: 61
 23136                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23137  0180C8  0EB0               	movlw	176
 23138  0180CA  6FF2               	movwf	242,b	;volatile
 23139                           
 23140                           ; BSR set to: 61
 23141                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23142  0180CC  0E80               	movlw	128
 23143  0180CE  6FF3               	movwf	243,b	;volatile
 23144                           
 23145                           ; BSR set to: 61
 23146                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23147  0180D0  6BF4               	clrf	244,b	;volatile
 23148                           
 23149                           ; BSR set to: 61
 23150                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23151  0180D2  0E82               	movlw	130
 23152  0180D4  6FF5               	movwf	245,b	;volatile
 23153                           
 23154                           ; BSR set to: 61
 23155                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23156  0180D6  0E06               	movlw	6
 23157  0180D8  6FF6               	movwf	246,b	;volatile
 23158                           
 23159                           ; BSR set to: 61
 23160                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23161  0180DA  6BF7               	clrf	247,b	;volatile
 23162                           
 23163                           ; BSR set to: 61
 23164                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23165  0180DC  6BF8               	clrf	248,b	;volatile
 23166                           
 23167                           ; BSR set to: 61
 23168                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23169  0180DE  6BF9               	clrf	249,b	;volatile
 23170                           
 23171                           ; BSR set to: 61
 23172                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23173  0180E0  6BFA               	clrf	250,b	;volatile
 23174                           
 23175                           ; BSR set to: 61
 23176                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23177  0180E2  6A32               	clrf	_uart1TxHead^0,c	;volatile
 23178                           
 23179                           ; BSR set to: 61
 23180                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23181  0180E4  6A31               	clrf	_uart1TxTail^0,c	;volatile
 23182                           
 23183                           ; BSR set to: 61
 23184                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23185  0180E6  0E40               	movlw	64
 23186  0180E8  6E30               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23187                           
 23188                           ; BSR set to: 61
 23189                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23190  0180EA  6A2F               	clrf	_uart1RxHead^0,c	;volatile
 23191                           
 23192                           ; BSR set to: 61
 23193                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23194  0180EC  6A2E               	clrf	_uart1RxTail^0,c	;volatile
 23195                           
 23196                           ; BSR set to: 61
 23197                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23198  0180EE  6A2D               	clrf	_uart1RxCount^0,c	;volatile
 23199                           
 23200                           ; BSR set to: 61
 23201                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23202  0180F0  0139               	movlb	57	; () banked
 23203  0180F2  8793               	bsf	147,3,b	;volatile
 23204                           
 23205                           ; BSR set to: 57
 23206                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23207  0180F4  0012               	return		;funcret
 23208  0180F6                     __end_of_UART1_Initialize:
 23209                           	opt callstack 0
 23210                           
 23211 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23212 ;; Defined at:
 23213 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23214 ;; Parameters:    Size  Location     Type
 23215 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23216 ;;		 -> UART1_Transmit_ISR(1), 
 23217 ;; Auto vars:     Size  Location     Type
 23218 ;;		None
 23219 ;; Return value:  Size  Location     Type
 23220 ;;                  1  [STACK] void 
 23221 ;; Registers used:
 23222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23223 ;; Tracked objects:
 23224 ;;		On entry : 3F/39
 23225 ;;		On exit  : 0/0
 23226 ;;		Unchanged: 0/0
 23227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23232 ;;Total ram usage:        0 bytes
 23233 ;; Hardware stack levels used:    1
 23234 ;; Hardware stack levels required when called:    6
 23235 ;; This function calls:
 23236 ;;		Nothing
 23237 ;; This function is called by:
 23238 ;;		_UART1_Initialize
 23239 ;; This function uses a reentrant model
 23240 ;;
 23241                           
 23242                           	psect	text93
 23243  018A36                     __ptext93:
 23244                           	opt callstack 0
 23245  018A36                     _UART1_SetTxInterruptHandler:
 23246                           	opt callstack 22
 23247                           
 23248                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23249                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23250                           
 23251                           ; BSR set to: 57
 23252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23253                           ;incstack = 0
 23254  018A36  50E1               	movf	fsr1l,w,c
 23255  018A38  0FFD               	addlw	-3
 23256  018A3A  6ED9               	movwf	fsr2l,c
 23257  018A3C  50E2               	movf	fsr1h,w,c
 23258  018A3E  6EDA               	movwf	fsr2h,c
 23259  018A40  0EFF               	movlw	255
 23260  018A42  22DA               	addwfc	fsr2h,f,c
 23261  018A44  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 23262  018A4A  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 23263  018A50  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 23264                           
 23265                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23266  018A56  52E5               	movf	postdec1,f,c
 23267  018A58  52E5               	movf	postdec1,f,c
 23268  018A5A  52E5               	movf	postdec1,f,c
 23269  018A5C  0012               	return		;funcret
 23270  018A5E                     __end_of_UART1_SetTxInterruptHandler:
 23271                           	opt callstack 0
 23272                           
 23273 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23274 ;; Defined at:
 23275 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23276 ;; Parameters:    Size  Location     Type
 23277 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23278 ;;		 -> UART1_Receive_ISR(1), 
 23279 ;; Auto vars:     Size  Location     Type
 23280 ;;		None
 23281 ;; Return value:  Size  Location     Type
 23282 ;;                  1  [STACK] void 
 23283 ;; Registers used:
 23284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23285 ;; Tracked objects:
 23286 ;;		On entry : 3F/39
 23287 ;;		On exit  : 0/0
 23288 ;;		Unchanged: 0/0
 23289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23294 ;;Total ram usage:        0 bytes
 23295 ;; Hardware stack levels used:    1
 23296 ;; Hardware stack levels required when called:    6
 23297 ;; This function calls:
 23298 ;;		Nothing
 23299 ;; This function is called by:
 23300 ;;		_UART1_Initialize
 23301 ;; This function uses a reentrant model
 23302 ;;
 23303                           
 23304                           	psect	text94
 23305  018A5E                     __ptext94:
 23306                           	opt callstack 0
 23307  018A5E                     _UART1_SetRxInterruptHandler:
 23308                           	opt callstack 22
 23309                           
 23310                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23311                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23312                           
 23313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23314                           ;incstack = 0
 23315  018A5E  50E1               	movf	fsr1l,w,c
 23316  018A60  0FFD               	addlw	-3
 23317  018A62  6ED9               	movwf	fsr2l,c
 23318  018A64  50E2               	movf	fsr1h,w,c
 23319  018A66  6EDA               	movwf	fsr2h,c
 23320  018A68  0EFF               	movlw	255
 23321  018A6A  22DA               	addwfc	fsr2h,f,c
 23322  018A6C  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 23323  018A72  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 23324  018A78  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 23325                           
 23326                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23327  018A7E  52E5               	movf	postdec1,f,c
 23328  018A80  52E5               	movf	postdec1,f,c
 23329  018A82  52E5               	movf	postdec1,f,c
 23330  018A84  0012               	return		;funcret
 23331  018A86                     __end_of_UART1_SetRxInterruptHandler:
 23332                           	opt callstack 0
 23333                           
 23334 ;; *************** function _TMR6_Initialize *****************
 23335 ;; Defined at:
 23336 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23337 ;; Parameters:    Size  Location     Type
 23338 ;;		None
 23339 ;; Auto vars:     Size  Location     Type
 23340 ;;		None
 23341 ;; Return value:  Size  Location     Type
 23342 ;;                  1  [STACK] void 
 23343 ;; Registers used:
 23344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23345 ;; Tracked objects:
 23346 ;;		On entry : 3F/39
 23347 ;;		On exit  : 0/0
 23348 ;;		Unchanged: 0/0
 23349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23354 ;;Total ram usage:        0 bytes
 23355 ;; Hardware stack levels used:    1
 23356 ;; Hardware stack levels required when called:    7
 23357 ;; This function calls:
 23358 ;;		_TMR6_SetInterruptHandler
 23359 ;; This function is called by:
 23360 ;;		_SYSTEM_Initialize
 23361 ;; This function uses a reentrant model
 23362 ;;
 23363                           
 23364                           	psect	text95
 23365  01891A                     __ptext95:
 23366                           	opt callstack 0
 23367  01891A                     _TMR6_Initialize:
 23368                           	opt callstack 22
 23369                           
 23370                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23371                           
 23372                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23373                           ;incstack = 0
 23374  01891A  0E01               	movlw	1
 23375  01891C  6E96               	movwf	150,c	;volatile
 23376                           
 23377                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23378  01891E  6A95               	clrf	149,c	;volatile
 23379                           
 23380                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23381  018920  6A97               	clrf	151,c	;volatile
 23382                           
 23383                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23384  018922  0E7C               	movlw	124
 23385  018924  6E93               	movwf	147,c	;volatile
 23386                           
 23387                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23388  018926  6A92               	clrf	146,c	;volatile
 23389                           
 23390                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23391  018928  0139               	movlb	57	; () banked
 23392  01892A  91A9               	bcf	169,0,b	;volatile
 23393                           
 23394                           ; BSR set to: 57
 23395                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23396  01892C  8199               	bsf	153,0,b	;volatile
 23397                           
 23398                           ; BSR set to: 57
 23399                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23400  01892E  0E2C               	movlw	low _TMR6_DefaultInterruptHandler
 23401  018930  6EE6               	movwf	postinc1,c
 23402  018932  0E85               	movlw	high _TMR6_DefaultInterruptHandler
 23403  018934  6EE6               	movwf	postinc1,c
 23404  018936  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23405  018938  6EE6               	movwf	postinc1,c
 23406  01893A  EC43  F0C5         	call	_TMR6_SetInterruptHandler	;wreg free
 23407                           
 23408                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23409  01893E  0EE0               	movlw	224
 23410  018940  6E94               	movwf	148,c	;volatile
 23411                           
 23412                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23413  018942  0012               	return		;funcret
 23414  018944                     __end_of_TMR6_Initialize:
 23415                           	opt callstack 0
 23416                           
 23417 ;; *************** function _TMR6_SetInterruptHandler *****************
 23418 ;; Defined at:
 23419 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23420 ;; Parameters:    Size  Location     Type
 23421 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23422 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23423 ;; Auto vars:     Size  Location     Type
 23424 ;;		None
 23425 ;; Return value:  Size  Location     Type
 23426 ;;                  1  [STACK] void 
 23427 ;; Registers used:
 23428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23429 ;; Tracked objects:
 23430 ;;		On entry : 3F/39
 23431 ;;		On exit  : 0/0
 23432 ;;		Unchanged: 0/0
 23433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23438 ;;Total ram usage:        0 bytes
 23439 ;; Hardware stack levels used:    1
 23440 ;; Hardware stack levels required when called:    6
 23441 ;; This function calls:
 23442 ;;		Nothing
 23443 ;; This function is called by:
 23444 ;;		_TMR6_Initialize
 23445 ;; This function uses a reentrant model
 23446 ;;
 23447                           
 23448                           	psect	text96
 23449  018A86                     __ptext96:
 23450                           	opt callstack 0
 23451  018A86                     _TMR6_SetInterruptHandler:
 23452                           	opt callstack 22
 23453                           
 23454                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23455                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23456                           
 23457                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23458                           ;incstack = 0
 23459  018A86  50E1               	movf	fsr1l,w,c
 23460  018A88  0FFD               	addlw	-3
 23461  018A8A  6ED9               	movwf	fsr2l,c
 23462  018A8C  50E2               	movf	fsr1h,w,c
 23463  018A8E  6EDA               	movwf	fsr2h,c
 23464  018A90  0EFF               	movlw	255
 23465  018A92  22DA               	addwfc	fsr2h,f,c
 23466  018A94  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 23467  018A9A  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 23468  018AA0  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 23469                           
 23470                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23471  018AA6  52E5               	movf	postdec1,f,c
 23472  018AA8  52E5               	movf	postdec1,f,c
 23473  018AAA  52E5               	movf	postdec1,f,c
 23474  018AAC  0012               	return		;funcret
 23475  018AAE                     __end_of_TMR6_SetInterruptHandler:
 23476                           	opt callstack 0
 23477                           
 23478 ;; *************** function _TMR5_Initialize *****************
 23479 ;; Defined at:
 23480 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23481 ;; Parameters:    Size  Location     Type
 23482 ;;		None
 23483 ;; Auto vars:     Size  Location     Type
 23484 ;;		None
 23485 ;; Return value:  Size  Location     Type
 23486 ;;                  1  [STACK] void 
 23487 ;; Registers used:
 23488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23489 ;; Tracked objects:
 23490 ;;		On entry : 0/39
 23491 ;;		On exit  : 0/0
 23492 ;;		Unchanged: 0/0
 23493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23498 ;;Total ram usage:        0 bytes
 23499 ;; Hardware stack levels used:    1
 23500 ;; Hardware stack levels required when called:    7
 23501 ;; This function calls:
 23502 ;;		_TMR5_SetInterruptHandler
 23503 ;; This function is called by:
 23504 ;;		_SYSTEM_Initialize
 23505 ;; This function uses a reentrant model
 23506 ;;
 23507                           
 23508                           	psect	text97
 23509  0184E6                     __ptext97:
 23510                           	opt callstack 0
 23511  0184E6                     _TMR5_Initialize:
 23512                           	opt callstack 22
 23513                           
 23514                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23515                           
 23516                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23517                           ;incstack = 0
 23518  0184E6  6A9B               	clrf	155,c	;volatile
 23519                           
 23520                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23521  0184E8  6A9C               	clrf	156,c	;volatile
 23522                           
 23523                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23524  0184EA  0E01               	movlw	1
 23525  0184EC  6E9D               	movwf	157,c	;volatile
 23526                           
 23527                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23528  0184EE  0E63               	movlw	99
 23529  0184F0  6E99               	movwf	153,c	;volatile
 23530                           
 23531                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23532  0184F2  0EC0               	movlw	192
 23533  0184F4  6E98               	movwf	152,c	;volatile
 23534                           
 23535                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23536  0184F6  5098               	movf	152,w,c	;volatile
 23537  0184F8  006F FE64  F033    	movff	16281,btemp	;volatile
 23538  0184FE  6A34               	clrf	(btemp+1)^0,c
 23539  018500  0060  F0CC  F034   	movff	btemp,btemp+1
 23540  018506  6A33               	clrf	btemp^0,c
 23541  018508  1033               	iorwf	btemp^0,w,c
 23542  01850A  6E24               	movwf	_timer5ReloadVal^0,c	;volatile
 23543  01850C  5034               	movf	(btemp+1)^0,w,c
 23544  01850E  6E25               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23545                           
 23546                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23547  018510  0139               	movlb	57	; () banked
 23548  018512  9DA8               	bcf	168,6,b	;volatile
 23549                           
 23550                           ; BSR set to: 57
 23551                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23552  018514  8D98               	bsf	152,6,b	;volatile
 23553                           
 23554                           ; BSR set to: 57
 23555                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23556  018516  0E76               	movlw	low _TMR5_DefaultInterruptHandler
 23557  018518  6EE6               	movwf	postinc1,c
 23558  01851A  0E8B               	movlw	high _TMR5_DefaultInterruptHandler
 23559  01851C  6EE6               	movwf	postinc1,c
 23560  01851E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23561  018520  6EE6               	movwf	postinc1,c
 23562  018522  EC57  F0C5         	call	_TMR5_SetInterruptHandler	;wreg free
 23563                           
 23564                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23565  018526  0E31               	movlw	49
 23566  018528  6E9A               	movwf	154,c	;volatile
 23567                           
 23568                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23569  01852A  0012               	return		;funcret
 23570  01852C                     __end_of_TMR5_Initialize:
 23571                           	opt callstack 0
 23572                           
 23573 ;; *************** function _TMR5_SetInterruptHandler *****************
 23574 ;; Defined at:
 23575 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23576 ;; Parameters:    Size  Location     Type
 23577 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23578 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23579 ;; Auto vars:     Size  Location     Type
 23580 ;;		None
 23581 ;; Return value:  Size  Location     Type
 23582 ;;                  1  [STACK] void 
 23583 ;; Registers used:
 23584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23585 ;; Tracked objects:
 23586 ;;		On entry : 3F/39
 23587 ;;		On exit  : 0/0
 23588 ;;		Unchanged: 0/0
 23589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23594 ;;Total ram usage:        0 bytes
 23595 ;; Hardware stack levels used:    1
 23596 ;; Hardware stack levels required when called:    6
 23597 ;; This function calls:
 23598 ;;		Nothing
 23599 ;; This function is called by:
 23600 ;;		_TMR5_Initialize
 23601 ;; This function uses a reentrant model
 23602 ;;
 23603                           
 23604                           	psect	text98
 23605  018AAE                     __ptext98:
 23606                           	opt callstack 0
 23607  018AAE                     _TMR5_SetInterruptHandler:
 23608                           	opt callstack 22
 23609                           
 23610                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23611                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23612                           
 23613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23614                           ;incstack = 0
 23615  018AAE  50E1               	movf	fsr1l,w,c
 23616  018AB0  0FFD               	addlw	-3
 23617  018AB2  6ED9               	movwf	fsr2l,c
 23618  018AB4  50E2               	movf	fsr1h,w,c
 23619  018AB6  6EDA               	movwf	fsr2h,c
 23620  018AB8  0EFF               	movlw	255
 23621  018ABA  22DA               	addwfc	fsr2h,f,c
 23622  018ABC  006F FF78  F098    	movff	postinc2,_TMR5_InterruptHandler
 23623  018AC2  006F FF78  F099    	movff	postinc2,_TMR5_InterruptHandler+1
 23624  018AC8  006F FF74  F09A    	movff	postdec2,_TMR5_InterruptHandler+2
 23625                           
 23626                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23627  018ACE  52E5               	movf	postdec1,f,c
 23628  018AD0  52E5               	movf	postdec1,f,c
 23629  018AD2  52E5               	movf	postdec1,f,c
 23630  018AD4  0012               	return		;funcret
 23631  018AD6                     __end_of_TMR5_SetInterruptHandler:
 23632                           	opt callstack 0
 23633                           
 23634 ;; *************** function _TMR2_Initialize *****************
 23635 ;; Defined at:
 23636 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23637 ;; Parameters:    Size  Location     Type
 23638 ;;		None
 23639 ;; Auto vars:     Size  Location     Type
 23640 ;;		None
 23641 ;; Return value:  Size  Location     Type
 23642 ;;                  1  [STACK] void 
 23643 ;; Registers used:
 23644 ;;		wreg, status,2
 23645 ;; Tracked objects:
 23646 ;;		On entry : 0/3E
 23647 ;;		On exit  : 3F/39
 23648 ;;		Unchanged: 0/0
 23649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23654 ;;Total ram usage:        0 bytes
 23655 ;; Hardware stack levels used:    1
 23656 ;; Hardware stack levels required when called:    6
 23657 ;; This function calls:
 23658 ;;		Nothing
 23659 ;; This function is called by:
 23660 ;;		_SYSTEM_Initialize
 23661 ;; This function uses a reentrant model
 23662 ;;
 23663                           
 23664                           	psect	text99
 23665  018E4A                     __ptext99:
 23666                           	opt callstack 0
 23667  018E4A                     _TMR2_Initialize:
 23668                           	opt callstack 23
 23669                           
 23670                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23671                           
 23672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23673                           ;incstack = 0
 23674  018E4A  0E01               	movlw	1
 23675  018E4C  6EAE               	movwf	174,c	;volatile
 23676                           
 23677                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23678  018E4E  6AAD               	clrf	173,c	;volatile
 23679                           
 23680                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23681  018E50  6AAF               	clrf	175,c	;volatile
 23682                           
 23683                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23684  018E52  0E63               	movlw	99
 23685  018E54  6EAB               	movwf	171,c	;volatile
 23686                           
 23687                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23688  018E56  6AAA               	clrf	170,c	;volatile
 23689                           
 23690                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23691  018E58  0139               	movlb	57	; () banked
 23692  018E5A  95A4               	bcf	164,2,b	;volatile
 23693                           
 23694                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23695  018E5C  0EC0               	movlw	192
 23696  018E5E  6EAC               	movwf	172,c	;volatile
 23697                           
 23698                           ; BSR set to: 57
 23699                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23700  018E60  0012               	return		;funcret
 23701  018E62                     __end_of_TMR2_Initialize:
 23702                           	opt callstack 0
 23703                           
 23704 ;; *************** function _SPI1_Initialize *****************
 23705 ;; Defined at:
 23706 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23707 ;; Parameters:    Size  Location     Type
 23708 ;;		None
 23709 ;; Auto vars:     Size  Location     Type
 23710 ;;		None
 23711 ;; Return value:  Size  Location     Type
 23712 ;;                  1  [STACK] void 
 23713 ;; Registers used:
 23714 ;;		wreg, status,2
 23715 ;; Tracked objects:
 23716 ;;		On entry : 3F/39
 23717 ;;		On exit  : 3F/3D
 23718 ;;		Unchanged: 0/0
 23719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23724 ;;Total ram usage:        0 bytes
 23725 ;; Hardware stack levels used:    1
 23726 ;; Hardware stack levels required when called:    6
 23727 ;; This function calls:
 23728 ;;		Nothing
 23729 ;; This function is called by:
 23730 ;;		_SYSTEM_Initialize
 23731 ;; This function uses a reentrant model
 23732 ;;
 23733                           
 23734                           	psect	text100
 23735  018E62                     __ptext100:
 23736                           	opt callstack 0
 23737  018E62                     _SPI1_Initialize:
 23738                           	opt callstack 23
 23739                           
 23740                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23741                           
 23742                           ; BSR set to: 57
 23743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23744                           ;incstack = 0
 23745  018E62  0E40               	movlw	64
 23746  018E64  013D               	movlb	61	; () banked
 23747  018E66  6F15               	movwf	21,b	;volatile
 23748                           
 23749                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23750  018E68  0E03               	movlw	3
 23751  018E6A  6F16               	movwf	22,b	;volatile
 23752                           
 23753                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23754  018E6C  0E4F               	movlw	79
 23755  018E6E  6F19               	movwf	25,b	;volatile
 23756                           
 23757                           ; BSR set to: 61
 23758                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23759  018E70  6B1C               	clrf	28,b	;volatile
 23760                           
 23761                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23762  018E72  0E83               	movlw	131
 23763  018E74  6F14               	movwf	20,b	;volatile
 23764                           
 23765                           ; BSR set to: 61
 23766                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23767  018E76  0012               	return		;funcret
 23768  018E78                     __end_of_SPI1_Initialize:
 23769                           	opt callstack 0
 23770                           
 23771 ;; *************** function _PWM8_Initialize *****************
 23772 ;; Defined at:
 23773 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23774 ;; Parameters:    Size  Location     Type
 23775 ;;		None
 23776 ;; Auto vars:     Size  Location     Type
 23777 ;;		None
 23778 ;; Return value:  Size  Location     Type
 23779 ;;                  1  [STACK] void 
 23780 ;; Registers used:
 23781 ;;		wreg, status,2
 23782 ;; Tracked objects:
 23783 ;;		On entry : 3F/39
 23784 ;;		On exit  : 3F/3F
 23785 ;;		Unchanged: 0/0
 23786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23791 ;;Total ram usage:        0 bytes
 23792 ;; Hardware stack levels used:    1
 23793 ;; Hardware stack levels required when called:    6
 23794 ;; This function calls:
 23795 ;;		Nothing
 23796 ;; This function is called by:
 23797 ;;		_SYSTEM_Initialize
 23798 ;; This function uses a reentrant model
 23799 ;;
 23800                           
 23801                           	psect	text101
 23802  018E78                     __ptext101:
 23803                           	opt callstack 0
 23804  018E78                     _PWM8_Initialize:
 23805                           	opt callstack 23
 23806                           
 23807                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23808                           
 23809                           ; BSR set to: 61
 23810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23811                           ;incstack = 0
 23812  018E78  0E80               	movlw	128
 23813  018E7A  6E62               	movwf	98,c	;volatile
 23814                           
 23815                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23816  018E7C  6A61               	clrf	97,c	;volatile
 23817                           
 23818                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23819  018E7E  0E40               	movlw	64
 23820  018E80  6E60               	movwf	96,c	;volatile
 23821                           
 23822                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23823  018E82  013F               	movlb	63	; () banked
 23824  018E84  515F               	movf	95,w,b	;volatile
 23825  018E86  0B3F               	andlw	-193
 23826  018E88  0940               	iorlw	64
 23827  018E8A  6F5F               	movwf	95,b	;volatile
 23828                           
 23829                           ; BSR set to: 63
 23830                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23831  018E8C  0012               	return		;funcret
 23832  018E8E                     __end_of_PWM8_Initialize:
 23833                           	opt callstack 0
 23834                           
 23835 ;; *************** function _PMD_Initialize *****************
 23836 ;; Defined at:
 23837 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23838 ;; Parameters:    Size  Location     Type
 23839 ;;		None
 23840 ;; Auto vars:     Size  Location     Type
 23841 ;;		None
 23842 ;; Return value:  Size  Location     Type
 23843 ;;                  1  [STACK] void 
 23844 ;; Registers used:
 23845 ;;		None
 23846 ;; Tracked objects:
 23847 ;;		On entry : 3F/39
 23848 ;;		On exit  : 3F/39
 23849 ;;		Unchanged: 0/0
 23850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23855 ;;Total ram usage:        0 bytes
 23856 ;; Hardware stack levels used:    1
 23857 ;; Hardware stack levels required when called:    6
 23858 ;; This function calls:
 23859 ;;		Nothing
 23860 ;; This function is called by:
 23861 ;;		_SYSTEM_Initialize
 23862 ;; This function uses a reentrant model
 23863 ;;
 23864                           
 23865                           	psect	text102
 23866  018EA4                     __ptext102:
 23867                           	opt callstack 0
 23868  018EA4                     _PMD_Initialize:
 23869                           	opt callstack 23
 23870                           
 23871                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 23872                           
 23873                           ; BSR set to: 63
 23874                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23875                           ;incstack = 0
 23876  018EA4  0139               	movlb	57	; () banked
 23877  018EA6  6BC0               	clrf	192,b	;volatile
 23878                           
 23879                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 23880  018EA8  6BC1               	clrf	193,b	;volatile
 23881                           
 23882                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 23883  018EAA  6BC2               	clrf	194,b	;volatile
 23884                           
 23885                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 23886  018EAC  6BC3               	clrf	195,b	;volatile
 23887                           
 23888                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 23889  018EAE  6BC4               	clrf	196,b	;volatile
 23890                           
 23891                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 23892  018EB0  6BC5               	clrf	197,b	;volatile
 23893                           
 23894                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 23895  018EB2  6BC6               	clrf	198,b	;volatile
 23896                           
 23897                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 23898  018EB4  6BC7               	clrf	199,b	;volatile
 23899                           
 23900                           ; BSR set to: 57
 23901                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23902  018EB6  0012               	return		;funcret
 23903  018EB8                     __end_of_PMD_Initialize:
 23904                           	opt callstack 0
 23905                           
 23906 ;; *************** function _PIN_MANAGER_Initialize *****************
 23907 ;; Defined at:
 23908 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23909 ;; Parameters:    Size  Location     Type
 23910 ;;		None
 23911 ;; Auto vars:     Size  Location     Type
 23912 ;;		None
 23913 ;; Return value:  Size  Location     Type
 23914 ;;                  1  [STACK] void 
 23915 ;; Registers used:
 23916 ;;		wreg, status,2
 23917 ;; Tracked objects:
 23918 ;;		On entry : 3F/39
 23919 ;;		On exit  : 3F/3A
 23920 ;;		Unchanged: 0/0
 23921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23926 ;;Total ram usage:        0 bytes
 23927 ;; Hardware stack levels used:    1
 23928 ;; Hardware stack levels required when called:    6
 23929 ;; This function calls:
 23930 ;;		Nothing
 23931 ;; This function is called by:
 23932 ;;		_SYSTEM_Initialize
 23933 ;; This function uses a reentrant model
 23934 ;;
 23935                           
 23936                           	psect	text103
 23937  017B70                     __ptext103:
 23938                           	opt callstack 0
 23939  017B70                     _PIN_MANAGER_Initialize:
 23940                           	opt callstack 23
 23941                           
 23942                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 23943                           
 23944                           ; BSR set to: 57
 23945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23946                           ;incstack = 0
 23947  017B70  0E07               	movlw	7
 23948  017B72  6EBE               	movwf	190,c	;volatile
 23949                           
 23950                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 23951  017B74  0E80               	movlw	128
 23952  017B76  6EBD               	movwf	189,c	;volatile
 23953                           
 23954                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 23955  017B78  6ABA               	clrf	186,c	;volatile
 23956                           
 23957                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 23958  017B7A  6ABF               	clrf	191,c	;volatile
 23959                           
 23960                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 23961  017B7C  6ABB               	clrf	187,c	;volatile
 23962                           
 23963                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 23964  017B7E  0E07               	movlw	7
 23965  017B80  6EBC               	movwf	188,c	;volatile
 23966                           
 23967                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 23968  017B82  6AC6               	clrf	198,c	;volatile
 23969                           
 23970                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 23971  017B84  0E0F               	movlw	15
 23972  017B86  6EC7               	movwf	199,c	;volatile
 23973                           
 23974                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 23975  017B88  68C2               	setf	194,c	;volatile
 23976                           
 23977                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 23978  017B8A  0EBF               	movlw	191
 23979  017B8C  6EC3               	movwf	195,c	;volatile
 23980                           
 23981                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 23982  017B8E  0E90               	movlw	144
 23983  017B90  6EC4               	movwf	196,c	;volatile
 23984                           
 23985                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 23986  017B92  0E0C               	movlw	12
 23987  017B94  6EC5               	movwf	197,c	;volatile
 23988                           
 23989                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 23990  017B96  013A               	movlb	58	; () banked
 23991  017B98  6B70               	clrf	112,b	;volatile
 23992                           
 23993                           ; BSR set to: 58
 23994                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 23995  017B9A  6B60               	clrf	96,b	;volatile
 23996                           
 23997                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 23998  017B9C  0E3C               	movlw	60
 23999  017B9E  6F50               	movwf	80,b	;volatile
 24000                           
 24001                           ; BSR set to: 58
 24002                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24003  017BA0  6B80               	clrf	128,b	;volatile
 24004                           
 24005                           ; BSR set to: 58
 24006                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24007  017BA2  6B90               	clrf	144,b	;volatile
 24008                           
 24009                           ; BSR set to: 58
 24010                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24011  017BA4  6940               	setf	64,b	;volatile
 24012                           
 24013                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24014  017BA6  0E0C               	movlw	12
 24015  017BA8  6F71               	movwf	113,b	;volatile
 24016                           
 24017                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24018  017BAA  0E0F               	movlw	15
 24019  017BAC  6F91               	movwf	145,b	;volatile
 24020                           
 24021                           ; BSR set to: 58
 24022                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24023  017BAE  6B81               	clrf	129,b	;volatile
 24024                           
 24025                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24026  017BB0  0E83               	movlw	131
 24027  017BB2  6F51               	movwf	81,b	;volatile
 24028                           
 24029                           ; BSR set to: 58
 24030                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24031  017BB4  6B41               	clrf	65,b	;volatile
 24032                           
 24033                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24034  017BB6  0E97               	movlw	151
 24035  017BB8  6F61               	movwf	97,b	;volatile
 24036                           
 24037                           ; BSR set to: 58
 24038                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24039  017BBA  6B82               	clrf	130,b	;volatile
 24040                           
 24041                           ; BSR set to: 58
 24042                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24043  017BBC  6B92               	clrf	146,b	;volatile
 24044                           
 24045                           ; BSR set to: 58
 24046                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24047  017BBE  6B42               	clrf	66,b	;volatile
 24048                           
 24049                           ; BSR set to: 58
 24050                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24051  017BC0  6B52               	clrf	82,b	;volatile
 24052                           
 24053                           ; BSR set to: 58
 24054                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24055  017BC2  6B62               	clrf	98,b	;volatile
 24056                           
 24057                           ; BSR set to: 58
 24058                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24059  017BC4  6B72               	clrf	114,b	;volatile
 24060                           
 24061                           ; BSR set to: 58
 24062                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24063  017BC6  6943               	setf	67,b	;volatile
 24064                           
 24065                           ; BSR set to: 58
 24066                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24067  017BC8  6953               	setf	83,b	;volatile
 24068                           
 24069                           ; BSR set to: 58
 24070                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24071  017BCA  6963               	setf	99,b	;volatile
 24072                           
 24073                           ; BSR set to: 58
 24074                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24075  017BCC  6973               	setf	115,b	;volatile
 24076                           
 24077                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24078  017BCE  0E07               	movlw	7
 24079  017BD0  6F83               	movwf	131,b	;volatile
 24080                           
 24081                           ; BSR set to: 58
 24082                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24083  017BD2  6993               	setf	147,b	;volatile
 24084                           
 24085                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24086  017BD4  0E0F               	movlw	15
 24087  017BD6  6FE8               	movwf	232,b	;volatile
 24088                           
 24089                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24090  017BD8  0E13               	movlw	19
 24091  017BDA  6FDE               	movwf	222,b	;volatile
 24092                           
 24093                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24094  017BDC  0E16               	movlw	22
 24095  017BDE  6F0E               	movwf	14,b	;volatile
 24096                           
 24097                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24098  017BE0  0E1E               	movlw	30
 24099  017BE2  6F13               	movwf	19,b	;volatile
 24100                           
 24101                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24102  017BE4  0E08               	movlw	8
 24103  017BE6  6FC0               	movwf	192,b	;volatile
 24104                           
 24105                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24106  017BE8  0E10               	movlw	16
 24107  017BEA  6F19               	movwf	25,b	;volatile
 24108                           
 24109                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 24110  017BEC  0E09               	movlw	9
 24111  017BEE  6FC1               	movwf	193,b	;volatile
 24112                           
 24113                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24114  017BF0  0E1F               	movlw	31
 24115  017BF2  6F15               	movwf	21,b	;volatile
 24116                           
 24117                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24118  017BF4  0E13               	movlw	19
 24119  017BF6  6F16               	movwf	22,b	;volatile
 24120                           
 24121                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24122  017BF8  0E17               	movlw	23
 24123  017BFA  6FE5               	movwf	229,b	;volatile
 24124                           
 24125                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24126  017BFC  0E14               	movlw	20
 24127  017BFE  6FDF               	movwf	223,b	;volatile
 24128                           
 24129                           ; BSR set to: 58
 24130                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24131  017C00  0012               	return		;funcret
 24132  017C02                     __end_of_PIN_MANAGER_Initialize:
 24133                           	opt callstack 0
 24134                           
 24135 ;; *************** function _OSCILLATOR_Initialize *****************
 24136 ;; Defined at:
 24137 ;;		line 71 in file "mcc_generated_files/mcc.c"
 24138 ;; Parameters:    Size  Location     Type
 24139 ;;		None
 24140 ;; Auto vars:     Size  Location     Type
 24141 ;;		None
 24142 ;; Return value:  Size  Location     Type
 24143 ;;                  1  [STACK] void 
 24144 ;; Registers used:
 24145 ;;		wreg, status,2
 24146 ;; Tracked objects:
 24147 ;;		On entry : 3F/3A
 24148 ;;		On exit  : 3F/39
 24149 ;;		Unchanged: 0/0
 24150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24155 ;;Total ram usage:        0 bytes
 24156 ;; Hardware stack levels used:    1
 24157 ;; Hardware stack levels required when called:    6
 24158 ;; This function calls:
 24159 ;;		Nothing
 24160 ;; This function is called by:
 24161 ;;		_SYSTEM_Initialize
 24162 ;; This function uses a reentrant model
 24163 ;;
 24164                           
 24165                           	psect	text104
 24166  018E8E                     __ptext104:
 24167                           	opt callstack 0
 24168  018E8E                     _OSCILLATOR_Initialize:
 24169                           	opt callstack 23
 24170                           
 24171                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 24172                           
 24173                           ; BSR set to: 58
 24174                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24175                           ;incstack = 0
 24176  018E8E  0E20               	movlw	32
 24177  018E90  0139               	movlb	57	; () banked
 24178  018E92  6FD9               	movwf	217,b	;volatile
 24179                           
 24180                           ; BSR set to: 57
 24181                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 24182  018E94  6BDB               	clrf	219,b	;volatile
 24183                           
 24184                           ; BSR set to: 57
 24185                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 24186  018E96  6BDD               	clrf	221,b	;volatile
 24187                           
 24188                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 24189  018E98  0E02               	movlw	2
 24190  018E9A  6FDF               	movwf	223,b	;volatile
 24191                           
 24192                           ; BSR set to: 57
 24193                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 24194  018E9C  6BDE               	clrf	222,b	;volatile
 24195  018E9E                     l171:
 24196                           
 24197                           ; BSR set to: 57
 24198                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 24199  018E9E  B1DC               	btfsc	220,0,b	;volatile
 24200  018EA0  0012               	return	
 24201  018EA2  D7FD               	goto	l171
 24202  018EA4                     __end_of_OSCILLATOR_Initialize:
 24203                           	opt callstack 0
 24204                           
 24205 ;; *************** function _INTERRUPT_Initialize *****************
 24206 ;; Defined at:
 24207 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24208 ;; Parameters:    Size  Location     Type
 24209 ;;		None
 24210 ;; Auto vars:     Size  Location     Type
 24211 ;;  state           1  [STACK] _Bool 
 24212 ;; Return value:  Size  Location     Type
 24213 ;;                  1  [STACK] void 
 24214 ;; Registers used:
 24215 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 24216 ;; Tracked objects:
 24217 ;;		On entry : 0/0
 24218 ;;		On exit  : 3F/39
 24219 ;;		Unchanged: 0/0
 24220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24225 ;;Total ram usage:        0 bytes
 24226 ;; Hardware stack levels used:    1
 24227 ;; Hardware stack levels required when called:    6
 24228 ;; This function calls:
 24229 ;;		Nothing
 24230 ;; This function is called by:
 24231 ;;		_SYSTEM_Initialize
 24232 ;; This function uses a reentrant model
 24233 ;;
 24234                           
 24235                           	psect	text105
 24236  017FC8                     __ptext105:
 24237                           	opt callstack 0
 24238  017FC8                     _INTERRUPT_Initialize:
 24239                           	opt callstack 0
 24240                           
 24241                           ; BSR set to: 57
 24242                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24243  017FC8  52E6               	movf	postinc1,f,c
 24244                           
 24245                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 24246                           
 24247                           ;incstack = 0
 24248  017FCA  8AD2               	bsf	210,5,c	;volatile
 24249                           
 24250                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 24251  017FCC  AED2               	btfss	16338,7,c	;volatile
 24252  017FCE  D003               	goto	u8360
 24253  017FD0  6A3E               	clrf	(btemp+11)^0,c
 24254  017FD2  2A3E               	incf	(btemp+11)^0,f,c
 24255  017FD4  D001               	goto	u8378
 24256  017FD6                     u8360:
 24257  017FD6  6A3E               	clrf	(btemp+11)^0,c
 24258  017FD8                     u8378:
 24259                           
 24260                           ;stkvar	_state @ sp[(-1)+0]
 24261  017FD8  0EFF               	movlw	-1
 24262  017FDA  0060  F0FB  FFE3   	movff	btemp+11,plusw1
 24263                           
 24264                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 24265  017FE0  9ED2               	bcf	16338,7,c	;volatile
 24266                           
 24267                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 24268  017FE2  0E55               	movlw	85
 24269  017FE4  6ED4               	movwf	212,c	;volatile
 24270                           
 24271                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 24272  017FE6  0EAA               	movlw	170
 24273  017FE8  6ED4               	movwf	212,c	;volatile
 24274                           
 24275                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 24276  017FEA  90D4               	bcf	212,0,c	;volatile
 24277                           
 24278                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 24279  017FEC  0138               	movlb	56	; () banked
 24280  017FEE  6B9F               	clrf	159,b	;volatile
 24281                           
 24282                           ; BSR set to: 56
 24283                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 24284  017FF0  6B9E               	clrf	158,b	;volatile
 24285                           
 24286                           ; BSR set to: 56
 24287                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 24288  017FF2  0E08               	movlw	8
 24289  017FF4  6F9D               	movwf	157,b	;volatile
 24290                           
 24291                           ; BSR set to: 56
 24292                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 24293  017FF6  0E55               	movlw	85
 24294  017FF8  6ED4               	movwf	212,c	;volatile
 24295                           
 24296                           ; BSR set to: 56
 24297                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24298  017FFA  0EAA               	movlw	170
 24299  017FFC  6ED4               	movwf	212,c	;volatile
 24300                           
 24301                           ; BSR set to: 56
 24302                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24303  017FFE  80D4               	bsf	212,0,c	;volatile
 24304                           
 24305                           ; BSR set to: 56
 24306                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24307                           ;stkvar	_state @ sp[(-1)+0]
 24308  018000  0EFF               	movlw	-1
 24309  018002  B0E3               	btfsc	plusw1,0,c
 24310  018004  D002               	bra	u8385
 24311  018006  9ED2               	bcf	16338,7,c	;volatile
 24312  018008  D001               	bra	u8386
 24313  01800A                     u8385:
 24314  01800A  8ED2               	bsf	16338,7,c	;volatile
 24315  01800C                     u8386:
 24316                           
 24317                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24318  01800C  0139               	movlb	57	; () banked
 24319  01800E  8782               	bsf	130,3,b	;volatile
 24320                           
 24321                           ; BSR set to: 57
 24322                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24323  018010  8382               	bsf	130,1,b	;volatile
 24324                           
 24325                           ; BSR set to: 57
 24326                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24327  018012  8182               	bsf	130,0,b	;volatile
 24328                           
 24329                           ; BSR set to: 57
 24330                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24331  018014  8582               	bsf	130,2,b	;volatile
 24332                           
 24333                           ; BSR set to: 57
 24334                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24335  018016  8786               	bsf	134,3,b	;volatile
 24336                           
 24337                           ; BSR set to: 57
 24338                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24339  018018  8586               	bsf	134,2,b	;volatile
 24340                           
 24341                           ; BSR set to: 57
 24342                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24343  01801A  8983               	bsf	131,4,b	;volatile
 24344                           
 24345                           ; BSR set to: 57
 24346                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24347  01801C  8783               	bsf	131,3,b	;volatile
 24348                           
 24349                           ; BSR set to: 57
 24350                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24351  01801E  8181               	bsf	129,0,b	;volatile
 24352                           
 24353                           ; BSR set to: 57
 24354                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 24355  018020  9185               	bcf	133,0,b	;volatile
 24356                           
 24357                           ; BSR set to: 57
 24358                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24359  018022  8189               	bsf	137,0,b	;volatile
 24360                           
 24361                           ; BSR set to: 57
 24362                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24363  018024  9D88               	bcf	136,6,b	;volatile
 24364                           
 24365                           ; BSR set to: 57
 24366                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24367  018026  8581               	bsf	129,2,b	;volatile
 24368                           
 24369                           ; BSR set to: 57
 24370                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24371  018028  8781               	bsf	129,3,b	;volatile
 24372                           
 24373                           ; BSR set to: 57
 24374                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24375  01802A  52E5               	movf	postdec1,f,c
 24376  01802C  0012               	return		;funcret
 24377  01802E                     __end_of_INTERRUPT_Initialize:
 24378                           	opt callstack 0
 24379                           
 24380 ;; *************** function _FVR_Initialize *****************
 24381 ;; Defined at:
 24382 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24383 ;; Parameters:    Size  Location     Type
 24384 ;;		None
 24385 ;; Auto vars:     Size  Location     Type
 24386 ;;		None
 24387 ;; Return value:  Size  Location     Type
 24388 ;;                  1  [STACK] void 
 24389 ;; Registers used:
 24390 ;;		wreg, status,2
 24391 ;; Tracked objects:
 24392 ;;		On entry : 3F/39
 24393 ;;		On exit  : 3F/3E
 24394 ;;		Unchanged: 0/0
 24395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24400 ;;Total ram usage:        0 bytes
 24401 ;; Hardware stack levels used:    1
 24402 ;; Hardware stack levels required when called:    6
 24403 ;; This function calls:
 24404 ;;		Nothing
 24405 ;; This function is called by:
 24406 ;;		_SYSTEM_Initialize
 24407 ;; This function uses a reentrant model
 24408 ;;
 24409                           
 24410                           	psect	text106
 24411  018F62                     __ptext106:
 24412                           	opt callstack 0
 24413  018F62                     _FVR_Initialize:
 24414                           	opt callstack 23
 24415                           
 24416                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24417                           
 24418                           ; BSR set to: 57
 24419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24420                           ;incstack = 0
 24421  018F62  0EAF               	movlw	175
 24422  018F64  013E               	movlb	62	; () banked
 24423  018F66  6FC1               	movwf	193,b	;volatile
 24424                           
 24425                           ; BSR set to: 62
 24426                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24427  018F68  0012               	return		;funcret
 24428  018F6A                     __end_of_FVR_Initialize:
 24429                           	opt callstack 0
 24430                           
 24431 ;; *************** function _EXT_INT_Initialize *****************
 24432 ;; Defined at:
 24433 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 24434 ;; Parameters:    Size  Location     Type
 24435 ;;		None
 24436 ;; Auto vars:     Size  Location     Type
 24437 ;;		None
 24438 ;; Return value:  Size  Location     Type
 24439 ;;                  1  [STACK] void 
 24440 ;; Registers used:
 24441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24442 ;; Tracked objects:
 24443 ;;		On entry : 3F/3F
 24444 ;;		On exit  : 3F/39
 24445 ;;		Unchanged: 0/0
 24446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24451 ;;Total ram usage:        0 bytes
 24452 ;; Hardware stack levels used:    1
 24453 ;; Hardware stack levels required when called:    7
 24454 ;; This function calls:
 24455 ;;		_INT0_SetInterruptHandler
 24456 ;;		_INT1_SetInterruptHandler
 24457 ;; This function is called by:
 24458 ;;		_SYSTEM_Initialize
 24459 ;; This function uses a reentrant model
 24460 ;;
 24461                           
 24462                           	psect	text107
 24463  0187D0                     __ptext107:
 24464                           	opt callstack 0
 24465  0187D0                     _EXT_INT_Initialize:
 24466                           	opt callstack 22
 24467                           
 24468                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 24469                           
 24470                           ; BSR set to: 62
 24471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24472                           ;incstack = 0
 24473  0187D0  0139               	movlb	57	; () banked
 24474  0187D2  91A1               	bcf	161,0,b	;volatile
 24475                           
 24476                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 24477  0187D4  90D2               	bcf	210,0,c	;volatile
 24478                           
 24479                           ; BSR set to: 57
 24480                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24481  0187D6  0E84               	movlw	low _INT0_DefaultInterruptHandler
 24482  0187D8  6EE6               	movwf	postinc1,c
 24483  0187DA  0E8F               	movlw	high _INT0_DefaultInterruptHandler
 24484  0187DC  6EE6               	movwf	postinc1,c
 24485  0187DE  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24486  0187E0  6EE6               	movwf	postinc1,c
 24487  0187E2  EC7F  F0C5         	call	_INT0_SetInterruptHandler	;wreg free
 24488                           
 24489                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 24490  0187E6  0139               	movlb	57	; () banked
 24491  0187E8  8191               	bsf	145,0,b	;volatile
 24492                           
 24493                           ; BSR set to: 57
 24494                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 24495  0187EA  91A5               	bcf	165,0,b	;volatile
 24496                           
 24497                           ; BSR set to: 57
 24498                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 24499  0187EC  92D2               	bcf	210,1,c	;volatile
 24500                           
 24501                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24502  0187EE  0E82               	movlw	low _INT1_DefaultInterruptHandler
 24503  0187F0  6EE6               	movwf	postinc1,c
 24504  0187F2  0E8F               	movlw	high _INT1_DefaultInterruptHandler
 24505  0187F4  6EE6               	movwf	postinc1,c
 24506  0187F6  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24507  0187F8  6EE6               	movwf	postinc1,c
 24508  0187FA  EC6B  F0C5         	call	_INT1_SetInterruptHandler	;wreg free
 24509                           
 24510                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 24511  0187FE  0139               	movlb	57	; () banked
 24512  018800  8195               	bsf	149,0,b	;volatile
 24513                           
 24514                           ; BSR set to: 57
 24515                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24516  018802  0012               	return		;funcret
 24517  018804                     __end_of_EXT_INT_Initialize:
 24518                           	opt callstack 0
 24519                           
 24520 ;; *************** function _INT1_SetInterruptHandler *****************
 24521 ;; Defined at:
 24522 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 24523 ;; Parameters:    Size  Location     Type
 24524 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24525 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 24526 ;; Auto vars:     Size  Location     Type
 24527 ;;		None
 24528 ;; Return value:  Size  Location     Type
 24529 ;;                  1  [STACK] void 
 24530 ;; Registers used:
 24531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24532 ;; Tracked objects:
 24533 ;;		On entry : 3F/39
 24534 ;;		On exit  : 0/0
 24535 ;;		Unchanged: 0/0
 24536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24541 ;;Total ram usage:        0 bytes
 24542 ;; Hardware stack levels used:    1
 24543 ;; Hardware stack levels required when called:    6
 24544 ;; This function calls:
 24545 ;;		Nothing
 24546 ;; This function is called by:
 24547 ;;		_EXT_INT_Initialize
 24548 ;;		_start_switch_handler
 24549 ;; This function uses a reentrant model
 24550 ;;
 24551                           
 24552                           	psect	text108
 24553  018AD6                     __ptext108:
 24554                           	opt callstack 0
 24555  018AD6                     _INT1_SetInterruptHandler:
 24556                           	opt callstack 23
 24557                           
 24558                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24559                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24560                           
 24561                           ; BSR set to: 57
 24562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24563                           ;incstack = 0
 24564  018AD6  50E1               	movf	fsr1l,w,c
 24565  018AD8  0FFD               	addlw	-3
 24566  018ADA  6ED9               	movwf	fsr2l,c
 24567  018ADC  50E2               	movf	fsr1h,w,c
 24568  018ADE  6EDA               	movwf	fsr2h,c
 24569  018AE0  0EFF               	movlw	255
 24570  018AE2  22DA               	addwfc	fsr2h,f,c
 24571  018AE4  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 24572  018AEA  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 24573  018AF0  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 24574                           
 24575                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24576  018AF6  52E5               	movf	postdec1,f,c
 24577  018AF8  52E5               	movf	postdec1,f,c
 24578  018AFA  52E5               	movf	postdec1,f,c
 24579  018AFC  0012               	return		;funcret
 24580  018AFE                     __end_of_INT1_SetInterruptHandler:
 24581                           	opt callstack 0
 24582                           
 24583 ;; *************** function _INT0_SetInterruptHandler *****************
 24584 ;; Defined at:
 24585 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24586 ;; Parameters:    Size  Location     Type
 24587 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24588 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24589 ;; Auto vars:     Size  Location     Type
 24590 ;;		None
 24591 ;; Return value:  Size  Location     Type
 24592 ;;                  1  [STACK] void 
 24593 ;; Registers used:
 24594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24595 ;; Tracked objects:
 24596 ;;		On entry : 3F/39
 24597 ;;		On exit  : 0/0
 24598 ;;		Unchanged: 0/0
 24599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24604 ;;Total ram usage:        0 bytes
 24605 ;; Hardware stack levels used:    1
 24606 ;; Hardware stack levels required when called:    6
 24607 ;; This function calls:
 24608 ;;		Nothing
 24609 ;; This function is called by:
 24610 ;;		_EXT_INT_Initialize
 24611 ;; This function uses a reentrant model
 24612 ;;
 24613                           
 24614                           	psect	text109
 24615  018AFE                     __ptext109:
 24616                           	opt callstack 0
 24617  018AFE                     _INT0_SetInterruptHandler:
 24618                           	opt callstack 22
 24619                           
 24620                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24621                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24622                           
 24623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24624                           ;incstack = 0
 24625  018AFE  50E1               	movf	fsr1l,w,c
 24626  018B00  0FFD               	addlw	-3
 24627  018B02  6ED9               	movwf	fsr2l,c
 24628  018B04  50E2               	movf	fsr1h,w,c
 24629  018B06  6EDA               	movwf	fsr2h,c
 24630  018B08  0EFF               	movlw	255
 24631  018B0A  22DA               	addwfc	fsr2h,f,c
 24632  018B0C  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 24633  018B12  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 24634  018B18  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 24635                           
 24636                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24637  018B1E  52E5               	movf	postdec1,f,c
 24638  018B20  52E5               	movf	postdec1,f,c
 24639  018B22  52E5               	movf	postdec1,f,c
 24640  018B24  0012               	return		;funcret
 24641  018B26                     __end_of_INT0_SetInterruptHandler:
 24642                           	opt callstack 0
 24643                           
 24644 ;; *************** function _DMA2_Initialize *****************
 24645 ;; Defined at:
 24646 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24647 ;; Parameters:    Size  Location     Type
 24648 ;;		None
 24649 ;; Auto vars:     Size  Location     Type
 24650 ;;		None
 24651 ;; Return value:  Size  Location     Type
 24652 ;;                  1  [STACK] void 
 24653 ;; Registers used:
 24654 ;;		wreg, status,2
 24655 ;; Tracked objects:
 24656 ;;		On entry : 3F/3D
 24657 ;;		On exit  : 3F/3B
 24658 ;;		Unchanged: 0/0
 24659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24664 ;;Total ram usage:        0 bytes
 24665 ;; Hardware stack levels used:    1
 24666 ;; Hardware stack levels required when called:    6
 24667 ;; This function calls:
 24668 ;;		Nothing
 24669 ;; This function is called by:
 24670 ;;		_SYSTEM_Initialize
 24671 ;; This function uses a reentrant model
 24672 ;;
 24673                           
 24674                           	psect	text110
 24675  0182CE                     __ptext110:
 24676                           	opt callstack 0
 24677  0182CE                     _DMA2_Initialize:
 24678                           	opt callstack 23
 24679                           
 24680                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24681                           
 24682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24683                           ;incstack = 0
 24684  0182CE  0E00               	movlw	0
 24685  0182D0  013B               	movlb	59	; () banked
 24686  0182D2  6FD9               	movwf	217,b	;volatile
 24687  0182D4  0E10               	movlw	16
 24688  0182D6  6FDA               	movwf	218,b	;volatile
 24689  0182D8  0E00               	movlw	0
 24690  0182DA  6FDB               	movwf	219,b	;volatile
 24691                           
 24692                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24693  0182DC  0E3F               	movlw	63
 24694  0182DE  6FD1               	movwf	209,b	;volatile
 24695  0182E0  0EBB               	movlw	187
 24696  0182E2  6FD0               	movwf	208,b	;volatile
 24697                           
 24698                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24699  0182E4  0E03               	movlw	3
 24700  0182E6  6FDD               	movwf	221,b	;volatile
 24701                           
 24702                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24703  0182E8  0E00               	movlw	0
 24704  0182EA  6FD8               	movwf	216,b	;volatile
 24705  0182EC  0E01               	movlw	1
 24706  0182EE  6FD7               	movwf	215,b	;volatile
 24707                           
 24708                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24709  0182F0  0E00               	movlw	0
 24710  0182F2  6FCF               	movwf	207,b	;volatile
 24711  0182F4  0E01               	movlw	1
 24712  0182F6  6FCE               	movwf	206,b	;volatile
 24713                           
 24714                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24715  0182F8  0E46               	movlw	70
 24716  0182FA  6FDF               	movwf	223,b	;volatile
 24717                           
 24718                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24719  0182FC  0E3D               	movlw	61
 24720  0182FE  6FDE               	movwf	222,b	;volatile
 24721                           
 24722                           ; BSR set to: 59
 24723                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24724  018300  0139               	movlb	57	; () banked
 24725  018302  97A5               	bcf	165,3,b	;volatile
 24726                           
 24727                           ; BSR set to: 57
 24728                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24729  018304  95A5               	bcf	165,2,b	;volatile
 24730                           
 24731                           ; BSR set to: 57
 24732                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24733  018306  9BA5               	bcf	165,5,b	;volatile
 24734                           
 24735                           ; BSR set to: 57
 24736                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24737  018308  99A5               	bcf	165,4,b	;volatile
 24738                           
 24739                           ; BSR set to: 57
 24740                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24741  01830A  9795               	bcf	149,3,b	;volatile
 24742                           
 24743                           ; BSR set to: 57
 24744                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24745  01830C  9595               	bcf	149,2,b	;volatile
 24746                           
 24747                           ; BSR set to: 57
 24748                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24749  01830E  9B95               	bcf	149,5,b	;volatile
 24750                           
 24751                           ; BSR set to: 57
 24752                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24753  018310  9995               	bcf	149,4,b	;volatile
 24754  018312  9ED2               	bcf	16338,7,c	;# 
 24755  018314  0139               	banksel	14831	;# 
 24756  018316  0E55               	movlw	85	;# 
 24757  018318  6FEF               	movwf	14831,b	;# 
 24758  01831A  0EAA               	movlw	170	;# 
 24759  01831C  6FEF               	movwf	14831,b	;# 
 24760  01831E  81EF               	bsf	14831,0,b	;# 
 24761  018320  8ED2               	bsf	16338,7,c	;# 
 24762                           
 24763                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24764  018322  013B               	movlb	59	; () banked
 24765  018324  6BDC               	clrf	220,b	;volatile
 24766                           
 24767                           ; BSR set to: 59
 24768                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24769  018326  0012               	return		;funcret
 24770  018328                     __end_of_DMA2_Initialize:
 24771                           	opt callstack 0
 24772                           
 24773 ;; *************** function _DMA1_Initialize *****************
 24774 ;; Defined at:
 24775 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24776 ;; Parameters:    Size  Location     Type
 24777 ;;		None
 24778 ;; Auto vars:     Size  Location     Type
 24779 ;;		None
 24780 ;; Return value:  Size  Location     Type
 24781 ;;                  1  [STACK] void 
 24782 ;; Registers used:
 24783 ;;		wreg, status,2
 24784 ;; Tracked objects:
 24785 ;;		On entry : 3F/3B
 24786 ;;		On exit  : 3F/3B
 24787 ;;		Unchanged: 0/0
 24788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24793 ;;Total ram usage:        0 bytes
 24794 ;; Hardware stack levels used:    1
 24795 ;; Hardware stack levels required when called:    6
 24796 ;; This function calls:
 24797 ;;		Nothing
 24798 ;; This function is called by:
 24799 ;;		_SYSTEM_Initialize
 24800 ;; This function uses a reentrant model
 24801 ;;
 24802                           
 24803                           	psect	text111
 24804  017E8A                     __ptext111:
 24805                           	opt callstack 0
 24806  017E8A                     _DMA1_Initialize:
 24807                           	opt callstack 23
 24808                           
 24809                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24810                           
 24811                           ; BSR set to: 59
 24812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24813                           ;incstack = 0
 24814  017E8A  0E00               	movlw	0
 24815  017E8C  013B               	movlb	59	; () banked
 24816  017E8E  6FF9               	movwf	249,b	;volatile
 24817  017E90  0E10               	movlw	16
 24818  017E92  6FFA               	movwf	250,b	;volatile
 24819  017E94  0E00               	movlw	0
 24820  017E96  6FFB               	movwf	251,b	;volatile
 24821                           
 24822                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24823  017E98  0E3D               	movlw	61
 24824  017E9A  6FF1               	movwf	241,b	;volatile
 24825  017E9C  0E11               	movlw	17
 24826  017E9E  6FF0               	movwf	240,b	;volatile
 24827                           
 24828                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24829  017EA0  0E03               	movlw	3
 24830  017EA2  6FFD               	movwf	253,b	;volatile
 24831                           
 24832                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24833  017EA4  0E00               	movlw	0
 24834  017EA6  6FF8               	movwf	248,b	;volatile
 24835  017EA8  0E01               	movlw	1
 24836  017EAA  6FF7               	movwf	247,b	;volatile
 24837                           
 24838                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 24839  017EAC  0E00               	movlw	0
 24840  017EAE  6FEF               	movwf	239,b	;volatile
 24841  017EB0  0E01               	movlw	1
 24842  017EB2  6FEE               	movwf	238,b	;volatile
 24843                           
 24844                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 24845  017EB4  0E15               	movlw	21
 24846  017EB6  6FFF               	movwf	255,b	;volatile
 24847                           
 24848                           ; BSR set to: 59
 24849                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 24850  017EB8  6BFE               	clrf	254,b	;volatile
 24851                           
 24852                           ; BSR set to: 59
 24853                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 24854  017EBA  0139               	movlb	57	; () banked
 24855  017EBC  93A2               	bcf	162,1,b	;volatile
 24856                           
 24857                           ; BSR set to: 57
 24858                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 24859  017EBE  91A2               	bcf	162,0,b	;volatile
 24860                           
 24861                           ; BSR set to: 57
 24862                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 24863  017EC0  97A2               	bcf	162,3,b	;volatile
 24864                           
 24865                           ; BSR set to: 57
 24866                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 24867  017EC2  95A2               	bcf	162,2,b	;volatile
 24868                           
 24869                           ; BSR set to: 57
 24870                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 24871  017EC4  8392               	bsf	146,1,b	;volatile
 24872                           
 24873                           ; BSR set to: 57
 24874                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 24875  017EC6  8192               	bsf	146,0,b	;volatile
 24876                           
 24877                           ; BSR set to: 57
 24878                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 24879  017EC8  8792               	bsf	146,3,b	;volatile
 24880                           
 24881                           ; BSR set to: 57
 24882                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 24883  017ECA  8592               	bsf	146,2,b	;volatile
 24884                           
 24885                           ; BSR set to: 57
 24886                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 24887  017ECC  6BF1               	clrf	241,b	;volatile
 24888                           
 24889                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 24890  017ECE  0E01               	movlw	1
 24891  017ED0  6FF2               	movwf	242,b	;volatile
 24892                           
 24893                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 24894  017ED2  0E04               	movlw	4
 24895  017ED4  6FF3               	movwf	243,b	;volatile
 24896                           
 24897                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 24898  017ED6  0E02               	movlw	2
 24899  017ED8  6FF4               	movwf	244,b	;volatile
 24900                           
 24901                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 24902  017EDA  0E03               	movlw	3
 24903  017EDC  6FF7               	movwf	247,b	;volatile
 24904  017EDE  9ED2               	bcf	16338,7,c	;# 
 24905  017EE0  0139               	banksel	14831	;# 
 24906  017EE2  0E55               	movlw	85	;# 
 24907  017EE4  6FEF               	movwf	14831,b	;# 
 24908  017EE6  0EAA               	movlw	170	;# 
 24909  017EE8  6FEF               	movwf	14831,b	;# 
 24910  017EEA  81EF               	bsf	14831,0,b	;# 
 24911  017EEC  8ED2               	bsf	16338,7,c	;# 
 24912                           
 24913                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 24914  017EEE  013B               	movlb	59	; () banked
 24915  017EF0  6BFC               	clrf	252,b	;volatile
 24916                           
 24917                           ; BSR set to: 59
 24918                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24919  017EF2  0012               	return		;funcret
 24920  017EF4                     __end_of_DMA1_Initialize:
 24921                           	opt callstack 0
 24922                           
 24923 ;; *************** function _CLKREF_Initialize *****************
 24924 ;; Defined at:
 24925 ;;		line 58 in file "mcc_generated_files/clkref.c"
 24926 ;; Parameters:    Size  Location     Type
 24927 ;;		None
 24928 ;; Auto vars:     Size  Location     Type
 24929 ;;		None
 24930 ;; Return value:  Size  Location     Type
 24931 ;;                  1  [STACK] void 
 24932 ;; Registers used:
 24933 ;;		wreg, status,2
 24934 ;; Tracked objects:
 24935 ;;		On entry : 3F/3B
 24936 ;;		On exit  : 3F/3C
 24937 ;;		Unchanged: 0/0
 24938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24943 ;;Total ram usage:        0 bytes
 24944 ;; Hardware stack levels used:    1
 24945 ;; Hardware stack levels required when called:    6
 24946 ;; This function calls:
 24947 ;;		Nothing
 24948 ;; This function is called by:
 24949 ;;		_SYSTEM_Initialize
 24950 ;; This function uses a reentrant model
 24951 ;;
 24952                           
 24953                           	psect	text112
 24954  018F16                     __ptext112:
 24955                           	opt callstack 0
 24956  018F16                     _CLKREF_Initialize:
 24957                           	opt callstack 23
 24958                           
 24959                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 24960                           
 24961                           ; BSR set to: 59
 24962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24963                           ;incstack = 0
 24964  018F16  013C               	movlb	60	; () banked
 24965  018F18  6BE6               	clrf	230,b	;volatile
 24966                           
 24967                           ; BSR set to: 60
 24968                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 24969  018F1A  0E94               	movlw	148
 24970  018F1C  6FE5               	movwf	229,b	;volatile
 24971                           
 24972                           ; BSR set to: 60
 24973                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24974  018F1E  0012               	return		;funcret
 24975  018F20                     __end_of_CLKREF_Initialize:
 24976                           	opt callstack 0
 24977                           
 24978 ;; *************** function _ADCC_Initialize *****************
 24979 ;; Defined at:
 24980 ;;		line 65 in file "mcc_generated_files/adcc.c"
 24981 ;; Parameters:    Size  Location     Type
 24982 ;;		None
 24983 ;; Auto vars:     Size  Location     Type
 24984 ;;		None
 24985 ;; Return value:  Size  Location     Type
 24986 ;;                  1  [STACK] void 
 24987 ;; Registers used:
 24988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24989 ;; Tracked objects:
 24990 ;;		On entry : 3F/3E
 24991 ;;		On exit  : 0/0
 24992 ;;		Unchanged: 0/0
 24993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24998 ;;Total ram usage:        0 bytes
 24999 ;; Hardware stack levels used:    1
 25000 ;; Hardware stack levels required when called:    7
 25001 ;; This function calls:
 25002 ;;		_ADCC_SetADIInterruptHandler
 25003 ;;		_ADCC_SetADTIInterruptHandler
 25004 ;; This function is called by:
 25005 ;;		_SYSTEM_Initialize
 25006 ;; This function uses a reentrant model
 25007 ;;
 25008                           
 25009                           	psect	text113
 25010  017EF4                     __ptext113:
 25011                           	opt callstack 0
 25012  017EF4                     _ADCC_Initialize:
 25013                           	opt callstack 22
 25014                           
 25015                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25016                           
 25017                           ; BSR set to: 60
 25018                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25019                           ;incstack = 0
 25020  017EF4  013E               	movlb	62	; () banked
 25021  017EF6  6BDE               	clrf	222,b	;volatile
 25022                           
 25023                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25024  017EF8  6BDF               	clrf	223,b	;volatile
 25025                           
 25026                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25027  017EFA  6BE0               	clrf	224,b	;volatile
 25028                           
 25029                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25030  017EFC  6BE1               	clrf	225,b	;volatile
 25031                           
 25032                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25033  017EFE  6BE4               	clrf	228,b	;volatile
 25034                           
 25035                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25036  017F00  6BE5               	clrf	229,b	;volatile
 25037                           
 25038                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25039  017F02  6BEA               	clrf	234,b	;volatile
 25040                           
 25041                           ; BSR set to: 62
 25042                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25043  017F04  0E40               	movlw	64
 25044  017F06  6FEC               	movwf	236,b	;volatile
 25045                           
 25046                           ; BSR set to: 62
 25047                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25048  017F08  6BF1               	clrf	241,b	;volatile
 25049                           
 25050                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25051  017F0A  0E20               	movlw	32
 25052  017F0C  6FF3               	movwf	243,b	;volatile
 25053                           
 25054                           ; BSR set to: 62
 25055                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25056  017F0E  6BF4               	clrf	244,b	;volatile
 25057                           
 25058                           ; BSR set to: 62
 25059                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25060  017F10  6BF5               	clrf	245,b	;volatile
 25061                           
 25062                           ; BSR set to: 62
 25063                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25064  017F12  6BF6               	clrf	246,b	;volatile
 25065                           
 25066                           ; BSR set to: 62
 25067                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25068  017F14  6BF7               	clrf	247,b	;volatile
 25069                           
 25070                           ; BSR set to: 62
 25071                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25072  017F16  6BF9               	clrf	249,b	;volatile
 25073                           
 25074                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25075  017F18  0E5B               	movlw	91
 25076  017F1A  6FFA               	movwf	250,b	;volatile
 25077                           
 25078                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25079  017F1C  0E27               	movlw	39
 25080  017F1E  6FFB               	movwf	251,b	;volatile
 25081                           
 25082                           ; BSR set to: 62
 25083                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25084  017F20  6BFC               	clrf	252,b	;volatile
 25085                           
 25086                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25087  017F22  0E02               	movlw	2
 25088  017F24  6FFD               	movwf	253,b	;volatile
 25089                           
 25090                           ; BSR set to: 62
 25091                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25092  017F26  6BFE               	clrf	254,b	;volatile
 25093                           
 25094                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25095  017F28  0E07               	movlw	7
 25096  017F2A  6FFF               	movwf	255,b	;volatile
 25097                           
 25098                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25099  017F2C  0E84               	movlw	132
 25100  017F2E  6FF8               	movwf	248,b	;volatile
 25101                           
 25102                           ; BSR set to: 62
 25103                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25104  017F30  0139               	movlb	57	; () banked
 25105  017F32  95A1               	bcf	161,2,b	;volatile
 25106                           
 25107                           ; BSR set to: 57
 25108                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 25109  017F34  8591               	bsf	145,2,b	;volatile
 25110                           
 25111                           ; BSR set to: 57
 25112                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25113  017F36  0E86               	movlw	low _ADCC_DefaultInterruptHandler
 25114  017F38  6EE6               	movwf	postinc1,c
 25115  017F3A  0E8F               	movlw	high _ADCC_DefaultInterruptHandler
 25116  017F3C  6EE6               	movwf	postinc1,c
 25117  017F3E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25118  017F40  6EE6               	movwf	postinc1,c
 25119  017F42  ECA7  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25120                           
 25121                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25122  017F46  0139               	movlb	57	; () banked
 25123  017F48  97A1               	bcf	161,3,b	;volatile
 25124                           
 25125                           ; BSR set to: 57
 25126                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25127  017F4A  8791               	bsf	145,3,b	;volatile
 25128                           
 25129                           ; BSR set to: 57
 25130                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25131  017F4C  0E86               	movlw	low _ADCC_DefaultInterruptHandler
 25132  017F4E  6EE6               	movwf	postinc1,c
 25133  017F50  0E8F               	movlw	high _ADCC_DefaultInterruptHandler
 25134  017F52  6EE6               	movwf	postinc1,c
 25135  017F54  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25136  017F56  6EE6               	movwf	postinc1,c
 25137  017F58  EC93  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 25138                           
 25139                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25140  017F5C  0012               	return		;funcret
 25141  017F5E                     __end_of_ADCC_Initialize:
 25142                           	opt callstack 0
 25143                           
 25144 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 25145 ;; Defined at:
 25146 ;;		line 336 in file "mcc_generated_files/adcc.c"
 25147 ;; Parameters:    Size  Location     Type
 25148 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25149 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 25150 ;; Auto vars:     Size  Location     Type
 25151 ;;		None
 25152 ;; Return value:  Size  Location     Type
 25153 ;;                  1  [STACK] void 
 25154 ;; Registers used:
 25155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25156 ;; Tracked objects:
 25157 ;;		On entry : 0/0
 25158 ;;		On exit  : 0/0
 25159 ;;		Unchanged: 0/0
 25160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25165 ;;Total ram usage:        0 bytes
 25166 ;; Hardware stack levels used:    1
 25167 ;; Hardware stack levels required when called:    6
 25168 ;; This function calls:
 25169 ;;		Nothing
 25170 ;; This function is called by:
 25171 ;;		_ADCC_Initialize
 25172 ;;		_start_adc_scan
 25173 ;; This function uses a reentrant model
 25174 ;;
 25175                           
 25176                           	psect	text114
 25177  018B26                     __ptext114:
 25178                           	opt callstack 0
 25179  018B26                     _ADCC_SetADTIInterruptHandler:
 25180                           	opt callstack 23
 25181                           
 25182                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 25183                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25184                           
 25185                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25186                           ;incstack = 0
 25187  018B26  50E1               	movf	fsr1l,w,c
 25188  018B28  0FFD               	addlw	-3
 25189  018B2A  6ED9               	movwf	fsr2l,c
 25190  018B2C  50E2               	movf	fsr1h,w,c
 25191  018B2E  6EDA               	movwf	fsr2h,c
 25192  018B30  0EFF               	movlw	255
 25193  018B32  22DA               	addwfc	fsr2h,f,c
 25194  018B34  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 25195  018B3A  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 25196  018B40  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 25197                           
 25198                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 25199  018B46  52E5               	movf	postdec1,f,c
 25200  018B48  52E5               	movf	postdec1,f,c
 25201  018B4A  52E5               	movf	postdec1,f,c
 25202  018B4C  0012               	return		;funcret
 25203  018B4E                     __end_of_ADCC_SetADTIInterruptHandler:
 25204                           	opt callstack 0
 25205                           
 25206 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 25207 ;; Defined at:
 25208 ;;		line 323 in file "mcc_generated_files/adcc.c"
 25209 ;; Parameters:    Size  Location     Type
 25210 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25211 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 25212 ;; Auto vars:     Size  Location     Type
 25213 ;;		None
 25214 ;; Return value:  Size  Location     Type
 25215 ;;                  1  [STACK] void 
 25216 ;; Registers used:
 25217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25218 ;; Tracked objects:
 25219 ;;		On entry : 6/0
 25220 ;;		On exit  : 0/0
 25221 ;;		Unchanged: 0/0
 25222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25227 ;;Total ram usage:        0 bytes
 25228 ;; Hardware stack levels used:    1
 25229 ;; Hardware stack levels required when called:    6
 25230 ;; This function calls:
 25231 ;;		Nothing
 25232 ;; This function is called by:
 25233 ;;		_ADCC_Initialize
 25234 ;;		_start_adc_scan
 25235 ;; This function uses a reentrant model
 25236 ;;
 25237                           
 25238                           	psect	text115
 25239  018B4E                     __ptext115:
 25240                           	opt callstack 0
 25241  018B4E                     _ADCC_SetADIInterruptHandler:
 25242                           	opt callstack 23
 25243                           
 25244                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 25245                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25246                           
 25247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25248                           ;incstack = 0
 25249  018B4E  50E1               	movf	fsr1l,w,c
 25250  018B50  0FFD               	addlw	-3
 25251  018B52  6ED9               	movwf	fsr2l,c
 25252  018B54  50E2               	movf	fsr1h,w,c
 25253  018B56  6EDA               	movwf	fsr2h,c
 25254  018B58  0EFF               	movlw	255
 25255  018B5A  22DA               	addwfc	fsr2h,f,c
 25256  018B5C  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 25257  018B62  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 25258  018B68  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 25259                           
 25260                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25261  018B6E  52E5               	movf	postdec1,f,c
 25262  018B70  52E5               	movf	postdec1,f,c
 25263  018B72  52E5               	movf	postdec1,f,c
 25264  018B74  0012               	return		;funcret
 25265  018B76                     __end_of_ADCC_SetADIInterruptHandler:
 25266                           	opt callstack 0
 25267                           
 25268 ;; *************** function _INT1_ISR *****************
 25269 ;; Defined at:
 25270 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 25271 ;; Parameters:    Size  Location     Type
 25272 ;;		None
 25273 ;; Auto vars:     Size  Location     Type
 25274 ;;		None
 25275 ;; Return value:  Size  Location     Type
 25276 ;;                  1    wreg      void 
 25277 ;; Registers used:
 25278 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25279 ;; Tracked objects:
 25280 ;;		On entry : 0/0
 25281 ;;		On exit  : 0/0
 25282 ;;		Unchanged: 0/0
 25283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25286 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25287 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25288 ;;Total ram usage:        2 bytes
 25289 ;; Hardware stack levels used:    1
 25290 ;; Hardware stack levels required when called:    5
 25291 ;; This function calls:
 25292 ;;		_INT1_CallBack
 25293 ;; This function is called by:
 25294 ;;		Interrupt level 1
 25295 ;; This function uses a non-reentrant model
 25296 ;;
 25297                           
 25298                           	psect	text116
 25299  018BA0                     __ptext116:
 25300                           	opt callstack 0
 25301  018BA0                     _INT1_ISR:
 25302                           	opt callstack 12
 25303                           
 25304                           ;incstack = 0
 25305  018BA0  006F FF60  F0E4    	movff	status,??_INT1_ISR
 25306  018BA6  0060  F0F8  F0E5   	movff	btemp+11,??_INT1_ISR+1
 25307  018BAC  EE16  F000         	lfsr	1,___intlo_sp
 25308                           
 25309                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 25310  018BB0  0139               	movlb	57	; () banked
 25311  018BB2  91A5               	bcf	165,0,b	;volatile
 25312                           
 25313                           ; BSR set to: 57
 25314                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 25315  018BB4  EC57  F0C6         	call	_INT1_CallBack	;wreg free
 25316  018BB8  0060  F394  F03E   	movff	??_INT1_ISR+1,btemp+11
 25317  018BBE  0060  F393  FFD8   	movff	??_INT1_ISR,status
 25318  018BC4  0011               	retfie		f
 25319  018BC6                     __end_of_INT1_ISR:
 25320                           	opt callstack 0
 25321                           
 25322 ;; *************** function _INT1_CallBack *****************
 25323 ;; Defined at:
 25324 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 25325 ;; Parameters:    Size  Location     Type
 25326 ;;		None
 25327 ;; Auto vars:     Size  Location     Type
 25328 ;;		None
 25329 ;; Return value:  Size  Location     Type
 25330 ;;                  1  [STACK] void 
 25331 ;; Registers used:
 25332 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25333 ;; Tracked objects:
 25334 ;;		On entry : 3F/39
 25335 ;;		On exit  : 0/0
 25336 ;;		Unchanged: 0/0
 25337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25342 ;;Total ram usage:        0 bytes
 25343 ;; Hardware stack levels used:    1
 25344 ;; Hardware stack levels required when called:    4
 25345 ;; This function calls:
 25346 ;;		Absolute function
 25347 ;;		_INT1_DefaultInterruptHandler
 25348 ;;		_switch_handler
 25349 ;; This function is called by:
 25350 ;;		_INT1_ISR
 25351 ;; This function uses a reentrant model
 25352 ;;
 25353                           
 25354                           	psect	text117
 25355  018CAE                     __ptext117:
 25356                           	opt callstack 0
 25357  018CAE                     _INT1_CallBack:
 25358                           	opt callstack 12
 25359                           
 25360                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 25361                           
 25362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25363                           ;incstack = 0
 25364  018CAE  5016               	movf	_INT1_InterruptHandler^0,w,c
 25365  018CB0  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25366  018CB2  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25367  018CB4  B4D8               	btfsc	status,2,c
 25368  018CB6  0012               	return	
 25369                           
 25370                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 25371  018CB8  D801               	call	u412_28
 25372  018CBA  0012               	return	
 25373  018CBC                     u412_28:
 25374  018CBC  0005               	push	
 25375  018CBE  6EFA               	movwf	pclath,c
 25376  018CC0  5016               	movf	_INT1_InterruptHandler^0,w,c
 25377  018CC2  6EFD               	movwf	tosl,c
 25378  018CC4  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25379  018CC6  6EFE               	movwf	tosh,c
 25380  018CC8  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25381  018CCA  6EFF               	movwf	tosu,c
 25382  018CCC  50FA               	movf	pclath,w,c
 25383  018CCE  0012               	return		;indir
 25384  018CD0                     __end_of_INT1_CallBack:
 25385                           	opt callstack 0
 25386                           
 25387 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25388 ;; Defined at:
 25389 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 25390 ;; Parameters:    Size  Location     Type
 25391 ;;		None
 25392 ;; Auto vars:     Size  Location     Type
 25393 ;;		None
 25394 ;; Return value:  Size  Location     Type
 25395 ;;                  1  [STACK] void 
 25396 ;; Registers used:
 25397 ;;		None
 25398 ;; Tracked objects:
 25399 ;;		On entry : 0/39
 25400 ;;		On exit  : 0/0
 25401 ;;		Unchanged: 0/0
 25402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25407 ;;Total ram usage:        0 bytes
 25408 ;; Hardware stack levels used:    1
 25409 ;; Hardware stack levels required when called:    3
 25410 ;; This function calls:
 25411 ;;		Nothing
 25412 ;; This function is called by:
 25413 ;;		_EXT_INT_Initialize
 25414 ;;		_INT1_CallBack
 25415 ;; This function uses a reentrant model
 25416 ;;
 25417                           
 25418                           	psect	text118
 25419  018F82                     __ptext118:
 25420                           	opt callstack 0
 25421  018F82                     _INT1_DefaultInterruptHandler:
 25422                           	opt callstack 12
 25423                           
 25424                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25425                           
 25426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25427                           ;incstack = 0
 25428  018F82  0012               	return		;funcret
 25429  018F84                     __end_of_INT1_DefaultInterruptHandler:
 25430                           	opt callstack 0
 25431                           
 25432 ;; *************** function _switch_handler *****************
 25433 ;; Defined at:
 25434 ;;		line 54 in file "mbmc.c"
 25435 ;; Parameters:    Size  Location     Type
 25436 ;;		None
 25437 ;; Auto vars:     Size  Location     Type
 25438 ;;		None
 25439 ;; Return value:  Size  Location     Type
 25440 ;;                  1  [STACK] void 
 25441 ;; Registers used:
 25442 ;;		wreg, status,2, status,0, btemp+11
 25443 ;; Tracked objects:
 25444 ;;		On entry : 0/39
 25445 ;;		On exit  : 0/0
 25446 ;;		Unchanged: 0/0
 25447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25452 ;;Total ram usage:        0 bytes
 25453 ;; Hardware stack levels used:    1
 25454 ;; Hardware stack levels required when called:    3
 25455 ;; This function calls:
 25456 ;;		Nothing
 25457 ;; This function is called by:
 25458 ;;		_start_switch_handler
 25459 ;;		_INT1_CallBack
 25460 ;; This function uses a reentrant model
 25461 ;;
 25462                           
 25463                           	psect	text119
 25464  0185B6                     __ptext119:
 25465                           	opt callstack 0
 25466  0185B6                     _switch_handler:
 25467                           	opt callstack 12
 25468                           
 25469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25470                           ;incstack = 0
 25471                           ;mbmc.c: 56:  do { LATDbits.LATD7 = 0; } while(0);
 25472  0185B6  9EBD               	bcf	189,7,c	;volatile
 25473                           
 25474                           ;mbmc.c: 57:  __nop();
 25475  0185B8  F000               	nop	
 25476                           
 25477                           ;mbmc.c: 58:  __nop();
 25478  0185BA  F000               	nop	
 25479                           
 25480                           ;mbmc.c: 59:  __nop();
 25481  0185BC  F000               	nop	
 25482                           
 25483                           ;mbmc.c: 60:  __nop();
 25484  0185BE  F000               	nop	
 25485  0185C0  A2BE               	btfss	190,1,c	;volatile
 25486  0185C2  D002               	goto	u407_20
 25487  0185C4  0E01               	movlw	1
 25488  0185C6  D001               	goto	u407_26
 25489  0185C8                     u407_20:
 25490  0185C8  0E00               	movlw	0
 25491  0185CA                     u407_26:
 25492  0185CA  0AFF               	xorlw	255
 25493  0185CC  6E3E               	movwf	(btemp+11)^0,c
 25494  0185CE  463E               	rlncf	(btemp+11)^0,f,c
 25495  0185D0  50BE               	movf	190,w,c	;volatile
 25496  0185D2  183E               	xorwf	(btemp+11)^0,w,c
 25497  0185D4  0BFD               	andlw	-3
 25498  0185D6  183E               	xorwf	(btemp+11)^0,w,c
 25499  0185D8  6EBE               	movwf	190,c	;volatile
 25500                           
 25501                           ;mbmc.c: 64:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 25502  0185DA  A4BE               	btfss	190,2,c	;volatile
 25503  0185DC  D002               	goto	u408_20
 25504  0185DE  0E01               	movlw	1
 25505  0185E0  D001               	goto	u408_26
 25506  0185E2                     u408_20:
 25507  0185E2  0E00               	movlw	0
 25508  0185E4                     u408_26:
 25509  0185E4  0AFF               	xorlw	255
 25510  0185E6  6E3E               	movwf	(btemp+11)^0,c
 25511  0185E8  463E               	rlncf	(btemp+11)^0,f,c
 25512  0185EA  463E               	rlncf	(btemp+11)^0,f,c
 25513  0185EC  50BE               	movf	190,w,c	;volatile
 25514  0185EE  183E               	xorwf	(btemp+11)^0,w,c
 25515  0185F0  0BFB               	andlw	-5
 25516  0185F2  183E               	xorwf	(btemp+11)^0,w,c
 25517  0185F4  6EBE               	movwf	190,c	;volatile
 25518  0185F6  8EBD               	bsf	189,7,c	;volatile
 25519                           
 25520                           ; _switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25521  0185F8  0012               	return		;funcret
 25522  0185FA                     __end_of_switch_handler:
 25523                           	opt callstack 0
 25524                           
 25525 ;; *************** function _TMR5_ISR *****************
 25526 ;; Defined at:
 25527 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25528 ;; Parameters:    Size  Location     Type
 25529 ;;		None
 25530 ;; Auto vars:     Size  Location     Type
 25531 ;;		None
 25532 ;; Return value:  Size  Location     Type
 25533 ;;                  1    wreg      void 
 25534 ;; Registers used:
 25535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25536 ;; Tracked objects:
 25537 ;;		On entry : 0/0
 25538 ;;		On exit  : 0/0
 25539 ;;		Unchanged: 0/0
 25540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25543 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25544 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25545 ;;Total ram usage:        4 bytes
 25546 ;; Hardware stack levels used:    1
 25547 ;; Hardware stack levels required when called:    5
 25548 ;; This function calls:
 25549 ;;		_TMR5_CallBack
 25550 ;;		_TMR5_WriteTimer
 25551 ;; This function is called by:
 25552 ;;		Interrupt level 1
 25553 ;; This function uses a non-reentrant model
 25554 ;;
 25555                           
 25556                           	psect	text120
 25557  018218                     __ptext120:
 25558                           	opt callstack 0
 25559  018218                     _TMR5_ISR:
 25560                           	opt callstack 12
 25561                           
 25562                           ;incstack = 0
 25563  018218  006F FF60  F0E8    	movff	status,??_TMR5_ISR+2
 25564  01821E  0060  F0F8  F0E9   	movff	btemp+11,??_TMR5_ISR+3
 25565  018224  EE16  F000         	lfsr	1,___intlo_sp
 25566                           
 25567                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25568  018228  0139               	movlb	57	; () banked
 25569  01822A  9DA8               	bcf	168,6,b	;volatile
 25570                           
 25571                           ; BSR set to: 57
 25572                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25573  01822C  0060  F093  FFE6   	movff	_timer5ReloadVal,postinc1
 25574  018232  0060  F097  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25575  018238  EC1E  F0C3         	call	_TMR5_WriteTimer	;wreg free
 25576                           
 25577                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25578  01823C  0101               	movlb	1	; () banked
 25579  01823E  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25580  018240  0100               	movlb	0	; () banked
 25581  018242  6FE6               	movwf	??_TMR5_ISR& (0+255),b
 25582  018244  6BE7               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25583  018246  0E05               	movlw	5
 25584  018248  27E6               	addwf	??_TMR5_ISR& (0+255),f,b
 25585  01824A  0E00               	movlw	0
 25586  01824C  23E7               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25587  01824E  4A22               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25588  018250  2A23               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25589  018252  51E6               	movf	??_TMR5_ISR& (0+255),w,b
 25590  018254  5C22               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25591  018256  51E7               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25592  018258  5823               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25593  01825A  A0D8               	btfss	status,0,c
 25594  01825C  D004               	goto	i1l1045
 25595                           
 25596                           ; BSR set to: 0
 25597                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25598  01825E  EC45  F0C6         	call	_TMR5_CallBack	;wreg free
 25599                           
 25600                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25601  018262  6A22               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25602  018264  6A23               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25603  018266                     i1l1045:
 25604  018266  0060  F3A4  F03E   	movff	??_TMR5_ISR+3,btemp+11
 25605  01826C  0060  F3A3  FFD8   	movff	??_TMR5_ISR+2,status
 25606  018272  0011               	retfie		f
 25607  018274                     __end_of_TMR5_ISR:
 25608                           	opt callstack 0
 25609                           
 25610 ;; *************** function _TMR5_WriteTimer *****************
 25611 ;; Defined at:
 25612 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25613 ;; Parameters:    Size  Location     Type
 25614 ;;  timerVal        2  [STACK] unsigned short 
 25615 ;; Auto vars:     Size  Location     Type
 25616 ;;		None
 25617 ;; Return value:  Size  Location     Type
 25618 ;;                  1  [STACK] void 
 25619 ;; Registers used:
 25620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25621 ;; Tracked objects:
 25622 ;;		On entry : 3F/39
 25623 ;;		On exit  : 0/0
 25624 ;;		Unchanged: 0/0
 25625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25630 ;;Total ram usage:        0 bytes
 25631 ;; Hardware stack levels used:    1
 25632 ;; Hardware stack levels required when called:    3
 25633 ;; This function calls:
 25634 ;;		Nothing
 25635 ;; This function is called by:
 25636 ;;		_TMR5_ISR
 25637 ;; This function uses a reentrant model
 25638 ;;
 25639                           
 25640                           	psect	text121
 25641  01863C                     __ptext121:
 25642                           	opt callstack 0
 25643  01863C                     _TMR5_WriteTimer:
 25644                           	opt callstack 13
 25645                           
 25646                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 25647                           
 25648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25649                           ;incstack = 0
 25650  01863C  A49A               	btfss	154,2,c	;volatile
 25651  01863E  D00F               	goto	l8872
 25652                           
 25653                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 25654  018640  909A               	bcf	154,0,c	;volatile
 25655                           
 25656                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 25657                           ;stkvar	_timerVal @ sp[(0)+-2]
 25658  018642  0EFF               	movlw	255
 25659  018644  24E1               	addwf	fsr1l,w,c
 25660  018646  6ED9               	movwf	fsr2l,c
 25661  018648  0EFF               	movlw	255
 25662  01864A  20E2               	addwfc	fsr1h,w,c
 25663  01864C  6EDA               	movwf	fsr2h,c
 25664  01864E  50DF               	movf	indf2,w,c
 25665  018650  6E99               	movwf	153,c	;volatile
 25666                           
 25667                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 25668                           ;stkvar	_timerVal @ sp[(0)+-2]
 25669  018652  0EFE               	movlw	-2
 25670  018654  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25671                           
 25672                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 25673  01865A  809A               	bsf	154,0,c	;volatile
 25674                           
 25675                           ;mcc_generated_files/tmr5.c: 142:  } else {
 25676  01865C  D00C               	goto	l1028
 25677  01865E                     l8872:
 25678                           
 25679                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 25680                           ;stkvar	_timerVal @ sp[(0)+-2]
 25681  01865E  0EFF               	movlw	255
 25682  018660  24E1               	addwf	fsr1l,w,c
 25683  018662  6ED9               	movwf	fsr2l,c
 25684  018664  0EFF               	movlw	255
 25685  018666  20E2               	addwfc	fsr1h,w,c
 25686  018668  6EDA               	movwf	fsr2h,c
 25687  01866A  50DF               	movf	indf2,w,c
 25688  01866C  6E99               	movwf	153,c	;volatile
 25689                           
 25690                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 25691                           ;stkvar	_timerVal @ sp[(0)+-2]
 25692  01866E  0EFE               	movlw	-2
 25693  018670  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25694  018676                     l1028:
 25695                           
 25696                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25697  018676  52E5               	movf	postdec1,f,c
 25698  018678  52E5               	movf	postdec1,f,c
 25699  01867A  0012               	return		;funcret
 25700  01867C                     __end_of_TMR5_WriteTimer:
 25701                           	opt callstack 0
 25702                           
 25703 ;; *************** function _TMR5_CallBack *****************
 25704 ;; Defined at:
 25705 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 25706 ;; Parameters:    Size  Location     Type
 25707 ;;		None
 25708 ;; Auto vars:     Size  Location     Type
 25709 ;;		None
 25710 ;; Return value:  Size  Location     Type
 25711 ;;                  1  [STACK] void 
 25712 ;; Registers used:
 25713 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25714 ;; Tracked objects:
 25715 ;;		On entry : 3F/0
 25716 ;;		On exit  : 0/0
 25717 ;;		Unchanged: 0/0
 25718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25723 ;;Total ram usage:        0 bytes
 25724 ;; Hardware stack levels used:    1
 25725 ;; Hardware stack levels required when called:    4
 25726 ;; This function calls:
 25727 ;;		Absolute function
 25728 ;;		_TMR5_DefaultInterruptHandler
 25729 ;; This function is called by:
 25730 ;;		_TMR5_ISR
 25731 ;; This function uses a reentrant model
 25732 ;;
 25733                           
 25734                           	psect	text122
 25735  018C8A                     __ptext122:
 25736                           	opt callstack 0
 25737  018C8A                     _TMR5_CallBack:
 25738                           	opt callstack 12
 25739                           
 25740                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 25741                           
 25742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25743                           ;incstack = 0
 25744  018C8A  0100               	movlb	0	; () banked
 25745  018C8C  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25746  018C8E  1199               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25747  018C90  119A               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25748  018C92  B4D8               	btfsc	status,2,c
 25749  018C94  0012               	return	
 25750                           
 25751                           ; BSR set to: 0
 25752                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 25753  018C96  D801               	call	u874_28
 25754  018C98  0012               	return	
 25755  018C9A                     u874_28:
 25756  018C9A  0005               	push	
 25757  018C9C  6EFA               	movwf	pclath,c
 25758  018C9E  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25759  018CA0  6EFD               	movwf	tosl,c
 25760  018CA2  5199               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25761  018CA4  6EFE               	movwf	tosh,c
 25762  018CA6  519A               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25763  018CA8  6EFF               	movwf	tosu,c
 25764  018CAA  50FA               	movf	pclath,w,c
 25765  018CAC  0012               	return		;indir
 25766  018CAE                     __end_of_TMR5_CallBack:
 25767                           	opt callstack 0
 25768                           
 25769 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 25770 ;; Defined at:
 25771 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 25772 ;; Parameters:    Size  Location     Type
 25773 ;;		None
 25774 ;; Auto vars:     Size  Location     Type
 25775 ;;		None
 25776 ;; Return value:  Size  Location     Type
 25777 ;;                  1  [STACK] void 
 25778 ;; Registers used:
 25779 ;;		wreg, status,2, status,0, btemp+11
 25780 ;; Tracked objects:
 25781 ;;		On entry : 3F/0
 25782 ;;		On exit  : 3F/1
 25783 ;;		Unchanged: 0/0
 25784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25789 ;;Total ram usage:        0 bytes
 25790 ;; Hardware stack levels used:    1
 25791 ;; Hardware stack levels required when called:    3
 25792 ;; This function calls:
 25793 ;;		Nothing
 25794 ;; This function is called by:
 25795 ;;		_TMR5_Initialize
 25796 ;;		_TMR5_CallBack
 25797 ;; This function uses a reentrant model
 25798 ;;
 25799                           
 25800                           	psect	text123
 25801  018B76                     __ptext123:
 25802                           	opt callstack 0
 25803  018B76                     _TMR5_DefaultInterruptHandler:
 25804                           	opt callstack 12
 25805                           
 25806                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 25807                           
 25808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25809                           ;incstack = 0
 25810  018B76  A0BE               	btfss	190,0,c	;volatile
 25811  018B78  D002               	goto	u842_20
 25812  018B7A  0E01               	movlw	1
 25813  018B7C  D001               	goto	u842_26
 25814  018B7E                     u842_20:
 25815  018B7E  0E00               	movlw	0
 25816  018B80                     u842_26:
 25817  018B80  0AFF               	xorlw	255
 25818  018B82  6E3E               	movwf	(btemp+11)^0,c
 25819  018B84  50BE               	movf	190,w,c	;volatile
 25820  018B86  183E               	xorwf	(btemp+11)^0,w,c
 25821  018B88  0BFE               	andlw	-2
 25822  018B8A  183E               	xorwf	(btemp+11)^0,w,c
 25823  018B8C  6EBE               	movwf	190,c	;volatile
 25824                           
 25825                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 25826  018B8E  0E01               	movlw	1
 25827  018B90  0101               	movlb	1	; () banked
 25828  018B92  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 25829  018B94  0E00               	movlw	0
 25830  018B96  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 25831  018B98  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 25832  018B9A  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 25833                           
 25834                           ; BSR set to: 1
 25835                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25836  018B9C  0012               	return		;funcret
 25837  018B9E                     __end_of_TMR5_DefaultInterruptHandler:
 25838                           	opt callstack 0
 25839                           
 25840 ;; *************** function _INT0_ISR *****************
 25841 ;; Defined at:
 25842 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 25843 ;; Parameters:    Size  Location     Type
 25844 ;;		None
 25845 ;; Auto vars:     Size  Location     Type
 25846 ;;		None
 25847 ;; Return value:  Size  Location     Type
 25848 ;;                  1    wreg      void 
 25849 ;; Registers used:
 25850 ;;		wreg, status,2, status,0, pclath, tosl
 25851 ;; Tracked objects:
 25852 ;;		On entry : 0/0
 25853 ;;		On exit  : 0/0
 25854 ;;		Unchanged: 0/0
 25855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25860 ;;Total ram usage:        0 bytes
 25861 ;; Hardware stack levels used:    1
 25862 ;; Hardware stack levels required when called:    2
 25863 ;; This function calls:
 25864 ;;		_INT0_CallBack
 25865 ;; This function is called by:
 25866 ;;		Interrupt level 2
 25867 ;; This function uses a non-reentrant model
 25868 ;;
 25869                           
 25870                           	psect	text124
 25871  018EF8                     __ptext124:
 25872                           	opt callstack 0
 25873  018EF8                     _INT0_ISR:
 25874                           	opt callstack 12
 25875                           
 25876                           ; BSR set to: 1
 25877                           ;incstack = 0
 25878  018EF8  EE14  F000         	lfsr	1,___inthi_sp
 25879                           
 25880                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 25881  018EFC  0139               	movlb	57	; () banked
 25882  018EFE  91A1               	bcf	161,0,b	;volatile
 25883                           
 25884                           ; BSR set to: 57
 25885                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 25886  018F00  EC68  F0C6         	call	_INT0_CallBack	;wreg free
 25887  018F04  0011               	retfie		f
 25888  018F06                     __end_of_INT0_ISR:
 25889                           	opt callstack 0
 25890                           
 25891 ;; *************** function _INT0_CallBack *****************
 25892 ;; Defined at:
 25893 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 25894 ;; Parameters:    Size  Location     Type
 25895 ;;		None
 25896 ;; Auto vars:     Size  Location     Type
 25897 ;;		None
 25898 ;; Return value:  Size  Location     Type
 25899 ;;                  1  [STACK] void 
 25900 ;; Registers used:
 25901 ;;		wreg, status,2, status,0, pclath, tosl
 25902 ;; Tracked objects:
 25903 ;;		On entry : 3F/39
 25904 ;;		On exit  : 0/0
 25905 ;;		Unchanged: 0/0
 25906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25911 ;;Total ram usage:        0 bytes
 25912 ;; Hardware stack levels used:    1
 25913 ;; Hardware stack levels required when called:    1
 25914 ;; This function calls:
 25915 ;;		Absolute function
 25916 ;;		_INT0_DefaultInterruptHandler
 25917 ;; This function is called by:
 25918 ;;		_INT0_ISR
 25919 ;; This function uses a reentrant model
 25920 ;;
 25921                           
 25922                           	psect	text125
 25923  018CD0                     __ptext125:
 25924                           	opt callstack 0
 25925  018CD0                     _INT0_CallBack:
 25926                           	opt callstack 12
 25927                           
 25928                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25929                           
 25930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25931                           ;incstack = 0
 25932  018CD0  5019               	movf	_INT0_InterruptHandler^0,w,c
 25933  018CD2  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25934  018CD4  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25935  018CD6  B4D8               	btfsc	status,2,c
 25936  018CD8  0012               	return	
 25937                           
 25938                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25939  018CDA  D801               	call	u410_48
 25940  018CDC  0012               	return	
 25941  018CDE                     u410_48:
 25942  018CDE  0005               	push	
 25943  018CE0  6EFA               	movwf	pclath,c
 25944  018CE2  5019               	movf	_INT0_InterruptHandler^0,w,c
 25945  018CE4  6EFD               	movwf	tosl,c
 25946  018CE6  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25947  018CE8  6EFE               	movwf	tosh,c
 25948  018CEA  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25949  018CEC  6EFF               	movwf	tosu,c
 25950  018CEE  50FA               	movf	pclath,w,c
 25951  018CF0  0012               	return		;indir
 25952  018CF2                     __end_of_INT0_CallBack:
 25953                           	opt callstack 0
 25954                           
 25955 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25956 ;; Defined at:
 25957 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25958 ;; Parameters:    Size  Location     Type
 25959 ;;		None
 25960 ;; Auto vars:     Size  Location     Type
 25961 ;;		None
 25962 ;; Return value:  Size  Location     Type
 25963 ;;                  1  [STACK] void 
 25964 ;; Registers used:
 25965 ;;		None
 25966 ;; Tracked objects:
 25967 ;;		On entry : 0/39
 25968 ;;		On exit  : 0/0
 25969 ;;		Unchanged: 0/0
 25970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25975 ;;Total ram usage:        0 bytes
 25976 ;; Hardware stack levels used:    1
 25977 ;; This function calls:
 25978 ;;		Nothing
 25979 ;; This function is called by:
 25980 ;;		_EXT_INT_Initialize
 25981 ;;		_INT0_CallBack
 25982 ;; This function uses a reentrant model
 25983 ;;
 25984                           
 25985                           	psect	text126
 25986  018F84                     __ptext126:
 25987                           	opt callstack 0
 25988  018F84                     _INT0_DefaultInterruptHandler:
 25989                           	opt callstack 12
 25990                           
 25991                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25992                           
 25993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25994                           ;incstack = 0
 25995  018F84  0012               	return		;funcret
 25996  018F86                     __end_of_INT0_DefaultInterruptHandler:
 25997                           	opt callstack 0
 25998                           
 25999 ;; *************** function _Default_ISR *****************
 26000 ;; Defined at:
 26001 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 26002 ;; Parameters:    Size  Location     Type
 26003 ;;		None
 26004 ;; Auto vars:     Size  Location     Type
 26005 ;;		None
 26006 ;; Return value:  Size  Location     Type
 26007 ;;                  1    wreg      void 
 26008 ;; Registers used:
 26009 ;;		None
 26010 ;; Tracked objects:
 26011 ;;		On entry : 0/0
 26012 ;;		On exit  : 0/0
 26013 ;;		Unchanged: 0/0
 26014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26019 ;;Total ram usage:        0 bytes
 26020 ;; Hardware stack levels used:    1
 26021 ;; This function calls:
 26022 ;;		Nothing
 26023 ;; This function is called by:
 26024 ;;		Interrupt level 2
 26025 ;; This function uses a non-reentrant model
 26026 ;;
 26027                           
 26028                           	psect	text127
 26029  018F7C                     __ptext127:
 26030                           	opt callstack 0
 26031  018F7C                     _Default_ISR:
 26032                           	opt callstack 14
 26033                           
 26034                           ;incstack = 0
 26035  018F7C  EE14  F000         	lfsr	1,___inthi_sp
 26036  018F80  0011               	retfie		f
 26037  018F82                     __end_of_Default_ISR:
 26038                           	opt callstack 0
 26039                           
 26040 ;; *************** function _ADCC_ISR *****************
 26041 ;; Defined at:
 26042 ;;		line 314 in file "mcc_generated_files/adcc.c"
 26043 ;; Parameters:    Size  Location     Type
 26044 ;;		None
 26045 ;; Auto vars:     Size  Location     Type
 26046 ;;		None
 26047 ;; Return value:  Size  Location     Type
 26048 ;;                  1    wreg      void 
 26049 ;; Registers used:
 26050 ;;		wreg, status,2, status,0, pclath, tosl
 26051 ;; Tracked objects:
 26052 ;;		On entry : 0/0
 26053 ;;		On exit  : 0/0
 26054 ;;		Unchanged: 0/0
 26055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26060 ;;Total ram usage:        0 bytes
 26061 ;; Hardware stack levels used:    1
 26062 ;; Hardware stack levels required when called:    1
 26063 ;; This function calls:
 26064 ;;		Absolute function
 26065 ;;		_ADCC_DefaultInterruptHandler
 26066 ;;		_adc_int_handler
 26067 ;; This function is called by:
 26068 ;;		Interrupt level 2
 26069 ;; This function uses a non-reentrant model
 26070 ;;
 26071                           
 26072                           	psect	text128
 26073  018944                     __ptext128:
 26074                           	opt callstack 0
 26075  018944                     _ADCC_ISR:
 26076                           	opt callstack 13
 26077                           
 26078                           ;incstack = 0
 26079  018944  EE14  F000         	lfsr	1,___inthi_sp
 26080                           
 26081                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 26082  018948  0139               	movlb	57	; () banked
 26083  01894A  95A1               	bcf	161,2,b	;volatile
 26084                           
 26085                           ; BSR set to: 57
 26086                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 26087  01894C  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26088  01894E  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26089  018950  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26090  018952  B4D8               	btfsc	status,2,c
 26091  018954  0011               	retfie		f
 26092                           
 26093                           ; BSR set to: 57
 26094                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 26095  018956  D801               	call	i2u438_48
 26096  018958  0011               	retfie		f
 26097  01895A                     i2u438_48:
 26098  01895A  0005               	push	
 26099  01895C  6EFA               	movwf	pclath,c
 26100  01895E  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26101  018960  6EFD               	movwf	tosl,c
 26102  018962  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26103  018964  6EFE               	movwf	tosh,c
 26104  018966  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26105  018968  6EFF               	movwf	tosu,c
 26106  01896A  50FA               	movf	pclath,w,c
 26107  01896C  0012               	return		;indir
 26108  01896E                     __end_of_ADCC_ISR:
 26109                           	opt callstack 0
 26110                           
 26111 ;; *************** function _adc_int_t_handler *****************
 26112 ;; Defined at:
 26113 ;;		line 127 in file "daq.c"
 26114 ;; Parameters:    Size  Location     Type
 26115 ;;		None
 26116 ;; Auto vars:     Size  Location     Type
 26117 ;;		None
 26118 ;; Return value:  Size  Location     Type
 26119 ;;                  1  [STACK] void 
 26120 ;; Registers used:
 26121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 26122 ;; Tracked objects:
 26123 ;;		On entry : 3F/39
 26124 ;;		On exit  : 1/0
 26125 ;;		Unchanged: 0/0
 26126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26131 ;;Total ram usage:        0 bytes
 26132 ;; Hardware stack levels used:    1
 26133 ;; Hardware stack levels required when called:    1
 26134 ;; This function calls:
 26135 ;;		_ADCC_DischargeSampleCapacitor
 26136 ;;		_ADCC_StartConversion
 26137 ;; This function is called by:
 26138 ;;		_start_adc_scan
 26139 ;;		_ADCC_ThresholdISR
 26140 ;; This function uses a reentrant model
 26141 ;;
 26142                           
 26143                           	psect	text129
 26144  017D92                     __ptext129:
 26145                           	opt callstack 0
 26146  017D92                     _adc_int_t_handler:
 26147                           	opt callstack 12
 26148                           
 26149                           ;daq.c: 132:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 26150                           
 26151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26152                           ;incstack = 0
 26153  017D92  013E               	movlb	62	; () banked
 26154  017D94  51E6               	movf	230,w,b	;volatile
 26155  017D96  006F FB9C  F033    	movff	16103,btemp	;volatile
 26156  017D9C  6A34               	clrf	(btemp+1)^0,c
 26157  017D9E  0060  F0CC  F034   	movff	btemp,btemp+1
 26158  017DA4  6A33               	clrf	btemp^0,c
 26159  017DA6  2633               	addwf	btemp^0,f,c
 26160  017DA8  0E00               	movlw	0
 26161  017DAA  2234               	addwfc	(btemp+1)^0,f,c
 26162  017DAC  0100               	movlb	0	; () banked
 26163  017DAE  51C9               	movf	(_R+36)& (0+255),w,b	;volatile
 26164  017DB0  0D02               	mullw	2
 26165  017DB2  50F3               	movf	243,w,c
 26166  017DB4  0FA5               	addlw	low _R
 26167  017DB6  6ED9               	movwf	fsr2l,c
 26168  017DB8  6ADA               	clrf	fsr2h,c
 26169  017DBA  0060  F0CF  FFDE   	movff	btemp,postinc2
 26170  017DC0  0060  F0D3  FFDD   	movff	btemp+1,postdec2
 26171  017DC6                     l9028:
 26172                           
 26173                           ;daq.c: 134:   if (++R.scan_index > 0XD) {
 26174  017DC6  0100               	movlb	0	; () banked
 26175  017DC8  2BC9               	incf	(_R+36)& (0+255),f,b	;volatile
 26176  017DCA  0E0D               	movlw	13
 26177  017DCC  65C9               	cpfsgt	(_R+36)& (0+255),b	;volatile
 26178  017DCE  D003               	goto	l9034
 26179                           
 26180                           ; BSR set to: 0
 26181                           ;daq.c: 135:    R.done = 1;
 26182  017DD0  0E01               	movlw	1
 26183  017DD2  6FCC               	movwf	(_R+39)& (0+255),b	;volatile
 26184  017DD4  0012               	return	
 26185  017DD6                     l9034:
 26186                           
 26187                           ; BSR set to: 0
 26188                           ;daq.c: 141:  } while (!((R.scan_select >> R.scan_index) &0x1));
 26189  017DD6  0060  F324  F03E   	movff	_R+36,btemp+11	;volatile
 26190  017DDC  EE20  F0CA         	lfsr	2,_R+37	;volatile
 26191  017DE0  006F FF78  F03B    	movff	postinc2,btemp+8
 26192  017DE6  006F FF74  F03C    	movff	postdec2,btemp+9
 26193  017DEC  2A3E               	incf	(btemp+11)^0,f,c
 26194  017DEE  D003               	goto	u886_44
 26195  017DF0                     u886_45:
 26196  017DF0  90D8               	bcf	status,0,c
 26197  017DF2  323C               	rrcf	(btemp+9)^0,f,c
 26198  017DF4  323B               	rrcf	(btemp+8)^0,f,c
 26199  017DF6                     u886_44:
 26200  017DF6  2E3E               	decfsz	(btemp+11)^0,f,c
 26201  017DF8  D7FB               	goto	u886_45
 26202  017DFA  A03B               	btfss	(btemp+8)^0,0,c
 26203  017DFC  D7E4               	goto	l9028
 26204                           
 26205                           ;daq.c: 142:  ADCC_DischargeSampleCapacitor();
 26206  017DFE  ECA1  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 26207                           
 26208                           ; BSR set to: 62
 26209                           ;daq.c: 143:  ADCC_StartConversion(R.scan_index & 0xf);
 26210  017E02  0100               	movlb	0	; () banked
 26211  017E04  51C9               	movf	(_R+36)& (0+255),w,b	;volatile
 26212  017E06  0B0F               	andlw	15
 26213  017E08  6EE6               	movwf	postinc1,c
 26214  017E0A  EC5C  F0C7         	call	_ADCC_StartConversion	;wreg free
 26215                           
 26216                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26217  017E0E  0012               	return		;funcret
 26218  017E10                     __end_of_adc_int_t_handler:
 26219                           	opt callstack 0
 26220                           
 26221 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 26222 ;; Defined at:
 26223 ;;		line 339 in file "mcc_generated_files/adcc.c"
 26224 ;; Parameters:    Size  Location     Type
 26225 ;;		None
 26226 ;; Auto vars:     Size  Location     Type
 26227 ;;		None
 26228 ;; Return value:  Size  Location     Type
 26229 ;;                  1  [STACK] void 
 26230 ;; Registers used:
 26231 ;;		None
 26232 ;; Tracked objects:
 26233 ;;		On entry : 3F/39
 26234 ;;		On exit  : 0/0
 26235 ;;		Unchanged: 0/0
 26236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26241 ;;Total ram usage:        0 bytes
 26242 ;; Hardware stack levels used:    1
 26243 ;; This function calls:
 26244 ;;		Nothing
 26245 ;; This function is called by:
 26246 ;;		_ADCC_Initialize
 26247 ;;		_ADCC_ISR
 26248 ;;		_ADCC_ThresholdISR
 26249 ;; This function uses a reentrant model
 26250 ;;
 26251                           
 26252                           	psect	text130
 26253  018F86                     __ptext130:
 26254                           	opt callstack 0
 26255  018F86                     _ADCC_DefaultInterruptHandler:
 26256                           	opt callstack 13
 26257                           
 26258                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26259                           
 26260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26261                           ;incstack = 0
 26262  018F86  0012               	return		;funcret
 26263  018F88                     __end_of_ADCC_DefaultInterruptHandler:
 26264                           	opt callstack 0
 26265                           
 26266 ;; *************** function _adc_int_handler *****************
 26267 ;; Defined at:
 26268 ;;		line 117 in file "daq.c"
 26269 ;; Parameters:    Size  Location     Type
 26270 ;;		None
 26271 ;; Auto vars:     Size  Location     Type
 26272 ;;		None
 26273 ;; Return value:  Size  Location     Type
 26274 ;;                  1  [STACK] void 
 26275 ;; Registers used:
 26276 ;;		None
 26277 ;; Tracked objects:
 26278 ;;		On entry : 3F/39
 26279 ;;		On exit  : 0/0
 26280 ;;		Unchanged: 0/0
 26281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26286 ;;Total ram usage:        0 bytes
 26287 ;; Hardware stack levels used:    1
 26288 ;; This function calls:
 26289 ;;		Nothing
 26290 ;; This function is called by:
 26291 ;;		_start_adc_scan
 26292 ;;		_ADCC_ISR
 26293 ;; This function uses a reentrant model
 26294 ;;
 26295                           
 26296                           	psect	text131
 26297  018F88                     __ptext131:
 26298                           	opt callstack 0
 26299  018F88                     _adc_int_handler:
 26300                           	opt callstack 13
 26301                           
 26302                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26303                           
 26304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26305                           ;incstack = 0
 26306  018F88  0012               	return		;funcret
 26307  018F8A                     __end_of_adc_int_handler:
 26308                           	opt callstack 0
 26309                           
 26310 ;; *************** function _ADCC_ThresholdISR *****************
 26311 ;; Defined at:
 26312 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26313 ;; Parameters:    Size  Location     Type
 26314 ;;		None
 26315 ;; Auto vars:     Size  Location     Type
 26316 ;;		None
 26317 ;; Return value:  Size  Location     Type
 26318 ;;                  1    wreg      void 
 26319 ;; Registers used:
 26320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26321 ;; Tracked objects:
 26322 ;;		On entry : 0/0
 26323 ;;		On exit  : 0/0
 26324 ;;		Unchanged: 0/0
 26325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26328 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26329 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26330 ;;Total ram usage:        5 bytes
 26331 ;; Hardware stack levels used:    1
 26332 ;; Hardware stack levels required when called:    2
 26333 ;; This function calls:
 26334 ;;		Absolute function
 26335 ;;		_ADCC_DefaultInterruptHandler
 26336 ;;		_adc_int_t_handler
 26337 ;; This function is called by:
 26338 ;;		Interrupt level 2
 26339 ;; This function uses a non-reentrant model
 26340 ;;
 26341                           
 26342                           	psect	text132
 26343  017F60                     __ptext132:
 26344                           	opt callstack 0
 26345  017F60                     _ADCC_ThresholdISR:
 26346                           	opt callstack 12
 26347                           
 26348                           ;incstack = 0
 26349  017F60  0060  F0CC  F053   	movff	btemp,??_ADCC_ThresholdISR
 26350  017F66  0060  F0D0  F054   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26351  017F6C  0060  F0EC  F055   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26352  017F72  0060  F0F0  F056   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26353  017F78  0060  F0F8  F057   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26354  017F7E  EE14  F000         	lfsr	1,___inthi_sp
 26355                           
 26356                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26357  017F82  0139               	movlb	57	; () banked
 26358  017F84  97A1               	bcf	161,3,b	;volatile
 26359                           
 26360                           ; BSR set to: 57
 26361                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26362  017F86  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26363  017F88  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26364  017F8A  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26365  017F8C  B4D8               	btfsc	status,2,c
 26366  017F8E  D00C               	goto	i2u889_49
 26367                           
 26368                           ; BSR set to: 57
 26369                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26370  017F90  D801               	call	i2u889_48
 26371  017F92  D00A               	goto	i2u889_49
 26372  017F94                     i2u889_48:
 26373  017F94  0005               	push	
 26374  017F96  6EFA               	movwf	pclath,c
 26375  017F98  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26376  017F9A  6EFD               	movwf	tosl,c
 26377  017F9C  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26378  017F9E  6EFE               	movwf	tosh,c
 26379  017FA0  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26380  017FA2  6EFF               	movwf	tosu,c
 26381  017FA4  50FA               	movf	pclath,w,c
 26382  017FA6  0012               	return		;indir
 26383  017FA8                     i2u889_49:
 26384  017FA8  0060  F15C  F03E   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26385  017FAE  0060  F158  F03C   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26386  017FB4  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26387  017FBA  0060  F150  F034   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26388  017FC0  0060  F14C  F033   	movff	??_ADCC_ThresholdISR,btemp
 26389  017FC6  0011               	retfie		f
 26390  017FC8                     __end_of_ADCC_ThresholdISR:
 26391                           	opt callstack 0
 26392                           
 26393 ;; *************** function _UART1_tx_vect_isr *****************
 26394 ;; Defined at:
 26395 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26396 ;; Parameters:    Size  Location     Type
 26397 ;;		None
 26398 ;; Auto vars:     Size  Location     Type
 26399 ;;		None
 26400 ;; Return value:  Size  Location     Type
 26401 ;;                  1    wreg      void 
 26402 ;; Registers used:
 26403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26404 ;; Tracked objects:
 26405 ;;		On entry : 0/0
 26406 ;;		On exit  : 0/0
 26407 ;;		Unchanged: 0/0
 26408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26413 ;;Total ram usage:        0 bytes
 26414 ;; Hardware stack levels used:    1
 26415 ;; Hardware stack levels required when called:    1
 26416 ;; This function calls:
 26417 ;;		Absolute function
 26418 ;;		_UART1_Transmit_ISR
 26419 ;; This function is called by:
 26420 ;;		Interrupt level 2
 26421 ;; This function uses a non-reentrant model
 26422 ;;
 26423                           
 26424                           	psect	text133
 26425  018BC8                     __ptext133:
 26426                           	opt callstack 0
 26427  018BC8                     _UART1_tx_vect_isr:
 26428                           	opt callstack 13
 26429                           
 26430                           ;incstack = 0
 26431  018BC8  EE14  F000         	lfsr	1,___inthi_sp
 26432                           
 26433                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26434  018BCC  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 26435  018BCE  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26436  018BD0  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26437  018BD2  B4D8               	btfsc	status,2,c
 26438  018BD4  0011               	retfie		f
 26439                           
 26440                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26441  018BD6  D801               	call	i2u891_48
 26442  018BD8  0011               	retfie		f
 26443  018BDA                     i2u891_48:
 26444  018BDA  0005               	push	
 26445  018BDC  6EFA               	movwf	pclath,c
 26446  018BDE  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 26447  018BE0  6EFD               	movwf	tosl,c
 26448  018BE2  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26449  018BE4  6EFE               	movwf	tosh,c
 26450  018BE6  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26451  018BE8  6EFF               	movwf	tosu,c
 26452  018BEA  50FA               	movf	pclath,w,c
 26453  018BEC  0012               	return		;indir
 26454  018BEE                     __end_of_UART1_tx_vect_isr:
 26455                           	opt callstack 0
 26456                           
 26457 ;; *************** function _UART1_Transmit_ISR *****************
 26458 ;; Defined at:
 26459 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26460 ;; Parameters:    Size  Location     Type
 26461 ;;		None
 26462 ;; Auto vars:     Size  Location     Type
 26463 ;;		None
 26464 ;; Return value:  Size  Location     Type
 26465 ;;                  1  [STACK] void 
 26466 ;; Registers used:
 26467 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26468 ;; Tracked objects:
 26469 ;;		On entry : 0/0
 26470 ;;		On exit  : 3B/39
 26471 ;;		Unchanged: 0/0
 26472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26477 ;;Total ram usage:        0 bytes
 26478 ;; Hardware stack levels used:    1
 26479 ;; This function calls:
 26480 ;;		Nothing
 26481 ;; This function is called by:
 26482 ;;		_UART1_Initialize
 26483 ;;		_UART1_tx_vect_isr
 26484 ;; This function uses a reentrant model
 26485 ;;
 26486                           
 26487                           	psect	text134
 26488  0188C2                     __ptext134:
 26489                           	opt callstack 0
 26490  0188C2                     _UART1_Transmit_ISR:
 26491                           	opt callstack 13
 26492                           
 26493                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26494                           
 26495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26496                           ;incstack = 0
 26497  0188C2  0E40               	movlw	64
 26498  0188C4  6030               	cpfslt	_uart1TxBufferRemaining^0,c
 26499  0188C6  D010               	goto	l581
 26500                           
 26501                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26502  0188C8  0E40               	movlw	low _uart1TxBuffer
 26503  0188CA  2431               	addwf	_uart1TxTail^0,w,c	;volatile
 26504  0188CC  6ED9               	movwf	fsr2l,c
 26505  0188CE  6ADA               	clrf	fsr2h,c
 26506  0188D0  0E03               	movlw	high _uart1TxBuffer
 26507  0188D2  22DA               	addwfc	fsr2h,f,c
 26508  0188D4  50DF               	movf	indf2,w,c
 26509  0188D6  013D               	movlb	61	; () banked
 26510  0188D8  6FEA               	movwf	234,b	;volatile
 26511                           
 26512                           ; BSR set to: 61
 26513  0188DA  2A31               	incf	_uart1TxTail^0,f,c	;volatile
 26514                           
 26515                           ; BSR set to: 61
 26516                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26517  0188DC  0E3F               	movlw	63
 26518  0188DE  6431               	cpfsgt	_uart1TxTail^0,c
 26519  0188E0  D001               	goto	l8824
 26520                           
 26521                           ; BSR set to: 61
 26522                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26523  0188E2  6A31               	clrf	_uart1TxTail^0,c	;volatile
 26524  0188E4                     l8824:
 26525                           
 26526                           ; BSR set to: 61
 26527                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26528  0188E4  2A30               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26529                           
 26530                           ;mcc_generated_files/uart1.c: 222:  } else {
 26531  0188E6  0012               	return	
 26532  0188E8                     l581:
 26533                           
 26534                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26535  0188E8  0139               	movlb	57	; () banked
 26536  0188EA  9993               	bcf	147,4,b	;volatile
 26537                           
 26538                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26539  0188EC  0012               	return		;funcret
 26540  0188EE                     __end_of_UART1_Transmit_ISR:
 26541                           	opt callstack 0
 26542                           
 26543 ;; *************** function _UART1_rx_vect_isr *****************
 26544 ;; Defined at:
 26545 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26546 ;; Parameters:    Size  Location     Type
 26547 ;;		None
 26548 ;; Auto vars:     Size  Location     Type
 26549 ;;		None
 26550 ;; Return value:  Size  Location     Type
 26551 ;;                  1    wreg      void 
 26552 ;; Registers used:
 26553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26554 ;; Tracked objects:
 26555 ;;		On entry : 0/0
 26556 ;;		On exit  : 0/0
 26557 ;;		Unchanged: 0/0
 26558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26563 ;;Total ram usage:        0 bytes
 26564 ;; Hardware stack levels used:    1
 26565 ;; Hardware stack levels required when called:    1
 26566 ;; This function calls:
 26567 ;;		Absolute function
 26568 ;;		_UART1_Receive_ISR
 26569 ;; This function is called by:
 26570 ;;		Interrupt level 2
 26571 ;; This function uses a non-reentrant model
 26572 ;;
 26573                           
 26574                           	psect	text135
 26575  018BF0                     __ptext135:
 26576                           	opt callstack 0
 26577  018BF0                     _UART1_rx_vect_isr:
 26578                           	opt callstack 13
 26579                           
 26580                           ;incstack = 0
 26581  018BF0  EE14  F000         	lfsr	1,___inthi_sp
 26582                           
 26583                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26584  018BF4  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 26585  018BF6  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26586  018BF8  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26587  018BFA  B4D8               	btfsc	status,2,c
 26588  018BFC  0011               	retfie		f
 26589                           
 26590                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26591  018BFE  D801               	call	i2u893_48
 26592  018C00  0011               	retfie		f
 26593  018C02                     i2u893_48:
 26594  018C02  0005               	push	
 26595  018C04  6EFA               	movwf	pclath,c
 26596  018C06  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 26597  018C08  6EFD               	movwf	tosl,c
 26598  018C0A  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26599  018C0C  6EFE               	movwf	tosh,c
 26600  018C0E  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26601  018C10  6EFF               	movwf	tosu,c
 26602  018C12  50FA               	movf	pclath,w,c
 26603  018C14  0012               	return		;indir
 26604  018C16                     __end_of_UART1_rx_vect_isr:
 26605                           	opt callstack 0
 26606                           
 26607 ;; *************** function _UART1_Receive_ISR *****************
 26608 ;; Defined at:
 26609 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26610 ;; Parameters:    Size  Location     Type
 26611 ;;		None
 26612 ;; Auto vars:     Size  Location     Type
 26613 ;;		None
 26614 ;; Return value:  Size  Location     Type
 26615 ;;                  1  [STACK] void 
 26616 ;; Registers used:
 26617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26618 ;; Tracked objects:
 26619 ;;		On entry : 0/0
 26620 ;;		On exit  : 0/0
 26621 ;;		Unchanged: 0/0
 26622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26627 ;;Total ram usage:        0 bytes
 26628 ;; Hardware stack levels used:    1
 26629 ;; This function calls:
 26630 ;;		Nothing
 26631 ;; This function is called by:
 26632 ;;		_UART1_Initialize
 26633 ;;		_UART1_rx_vect_isr
 26634 ;; This function uses a reentrant model
 26635 ;;
 26636                           
 26637                           	psect	text136
 26638  018D6E                     __ptext136:
 26639                           	opt callstack 0
 26640  018D6E                     _UART1_Receive_ISR:
 26641                           	opt callstack 13
 26642                           
 26643                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 26644                           
 26645                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26646                           ;incstack = 0
 26647  018D6E  0E00               	movlw	low _uart1RxBuffer
 26648  018D70  242F               	addwf	_uart1RxHead^0,w,c	;volatile
 26649  018D72  6ED9               	movwf	fsr2l,c
 26650  018D74  6ADA               	clrf	fsr2h,c
 26651  018D76  0E06               	movlw	high _uart1RxBuffer
 26652  018D78  22DA               	addwfc	fsr2h,f,c
 26653  018D7A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 26654  018D80  2A2F               	incf	_uart1RxHead^0,f,c	;volatile
 26655                           
 26656                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26657  018D82  282F               	incf	_uart1RxHead^0,w,c
 26658  018D84  B4D8               	btfsc	status,2,c
 26659                           
 26660                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 26661  018D86  6A2F               	clrf	_uart1RxHead^0,c	;volatile
 26662                           
 26663                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 26664  018D88  2A2D               	incf	_uart1RxCount^0,f,c	;volatile
 26665                           
 26666                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26667  018D8A  0012               	return		;funcret
 26668  018D8C                     __end_of_UART1_Receive_ISR:
 26669                           	opt callstack 0
 26670                           
 26671 ;; *************** function _UART2_tx_vect_isr *****************
 26672 ;; Defined at:
 26673 ;;		line 195 in file "mcc_generated_files/uart2.c"
 26674 ;; Parameters:    Size  Location     Type
 26675 ;;		None
 26676 ;; Auto vars:     Size  Location     Type
 26677 ;;		None
 26678 ;; Return value:  Size  Location     Type
 26679 ;;                  1    wreg      void 
 26680 ;; Registers used:
 26681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26682 ;; Tracked objects:
 26683 ;;		On entry : 0/0
 26684 ;;		On exit  : 0/0
 26685 ;;		Unchanged: 0/0
 26686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26691 ;;Total ram usage:        0 bytes
 26692 ;; Hardware stack levels used:    1
 26693 ;; Hardware stack levels required when called:    1
 26694 ;; This function calls:
 26695 ;;		Absolute function
 26696 ;;		_UART2_Transmit_ISR
 26697 ;; This function is called by:
 26698 ;;		Interrupt level 2
 26699 ;; This function uses a non-reentrant model
 26700 ;;
 26701                           
 26702                           	psect	text137
 26703  018C18                     __ptext137:
 26704                           	opt callstack 0
 26705  018C18                     _UART2_tx_vect_isr:
 26706                           	opt callstack 13
 26707                           
 26708                           ;incstack = 0
 26709  018C18  EE14  F000         	lfsr	1,___inthi_sp
 26710                           
 26711                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 26712  018C1C  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 26713  018C1E  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 26714  018C20  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 26715  018C22  B4D8               	btfsc	status,2,c
 26716  018C24  0011               	retfie		f
 26717                           
 26718                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 26719  018C26  D801               	call	i2u895_48
 26720  018C28  0011               	retfie		f
 26721  018C2A                     i2u895_48:
 26722  018C2A  0005               	push	
 26723  018C2C  6EFA               	movwf	pclath,c
 26724  018C2E  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 26725  018C30  6EFD               	movwf	tosl,c
 26726  018C32  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 26727  018C34  6EFE               	movwf	tosh,c
 26728  018C36  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 26729  018C38  6EFF               	movwf	tosu,c
 26730  018C3A  50FA               	movf	pclath,w,c
 26731  018C3C  0012               	return		;indir
 26732  018C3E                     __end_of_UART2_tx_vect_isr:
 26733                           	opt callstack 0
 26734                           
 26735 ;; *************** function _UART2_Transmit_ISR *****************
 26736 ;; Defined at:
 26737 ;;		line 213 in file "mcc_generated_files/uart2.c"
 26738 ;; Parameters:    Size  Location     Type
 26739 ;;		None
 26740 ;; Auto vars:     Size  Location     Type
 26741 ;;		None
 26742 ;; Return value:  Size  Location     Type
 26743 ;;                  1  [STACK] void 
 26744 ;; Registers used:
 26745 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26746 ;; Tracked objects:
 26747 ;;		On entry : 0/0
 26748 ;;		On exit  : 3B/39
 26749 ;;		Unchanged: 0/0
 26750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26755 ;;Total ram usage:        0 bytes
 26756 ;; Hardware stack levels used:    1
 26757 ;; This function calls:
 26758 ;;		Nothing
 26759 ;; This function is called by:
 26760 ;;		_UART2_Initialize
 26761 ;;		_UART2_tx_vect_isr
 26762 ;; This function uses a reentrant model
 26763 ;;
 26764                           
 26765                           	psect	text138
 26766  0188EE                     __ptext138:
 26767                           	opt callstack 0
 26768  0188EE                     _UART2_Transmit_ISR:
 26769                           	opt callstack 13
 26770                           
 26771                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 26772                           
 26773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26774                           ;incstack = 0
 26775  0188EE  0E40               	movlw	64
 26776  0188F0  602A               	cpfslt	_uart2TxBufferRemaining^0,c
 26777  0188F2  D010               	goto	l701
 26778                           
 26779                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 26780  0188F4  0E00               	movlw	low _uart2TxBuffer
 26781  0188F6  242B               	addwf	_uart2TxTail^0,w,c	;volatile
 26782  0188F8  6ED9               	movwf	fsr2l,c
 26783  0188FA  6ADA               	clrf	fsr2h,c
 26784  0188FC  0E03               	movlw	high _uart2TxBuffer
 26785  0188FE  22DA               	addwfc	fsr2h,f,c
 26786  018900  50DF               	movf	indf2,w,c
 26787  018902  013D               	movlb	61	; () banked
 26788  018904  6FD2               	movwf	210,b	;volatile
 26789                           
 26790                           ; BSR set to: 61
 26791  018906  2A2B               	incf	_uart2TxTail^0,f,c	;volatile
 26792                           
 26793                           ; BSR set to: 61
 26794                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 26795  018908  0E3F               	movlw	63
 26796  01890A  642B               	cpfsgt	_uart2TxTail^0,c
 26797  01890C  D001               	goto	l8846
 26798                           
 26799                           ; BSR set to: 61
 26800                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 26801  01890E  6A2B               	clrf	_uart2TxTail^0,c	;volatile
 26802  018910                     l8846:
 26803                           
 26804                           ; BSR set to: 61
 26805                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 26806  018910  2A2A               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 26807                           
 26808                           ;mcc_generated_files/uart2.c: 224:     }
 26809  018912  0012               	return	
 26810  018914                     l701:
 26811                           
 26812                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 26813  018914  0139               	movlb	57	; () banked
 26814  018916  9796               	bcf	150,3,b	;volatile
 26815                           
 26816                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26817  018918  0012               	return		;funcret
 26818  01891A                     __end_of_UART2_Transmit_ISR:
 26819                           	opt callstack 0
 26820                           
 26821 ;; *************** function _UART2_rx_vect_isr *****************
 26822 ;; Defined at:
 26823 ;;		line 203 in file "mcc_generated_files/uart2.c"
 26824 ;; Parameters:    Size  Location     Type
 26825 ;;		None
 26826 ;; Auto vars:     Size  Location     Type
 26827 ;;		None
 26828 ;; Return value:  Size  Location     Type
 26829 ;;                  1    wreg      void 
 26830 ;; Registers used:
 26831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26832 ;; Tracked objects:
 26833 ;;		On entry : 0/0
 26834 ;;		On exit  : 0/0
 26835 ;;		Unchanged: 0/0
 26836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26841 ;;Total ram usage:        0 bytes
 26842 ;; Hardware stack levels used:    1
 26843 ;; Hardware stack levels required when called:    1
 26844 ;; This function calls:
 26845 ;;		Absolute function
 26846 ;;		_UART2_Receive_ISR
 26847 ;; This function is called by:
 26848 ;;		Interrupt level 2
 26849 ;; This function uses a non-reentrant model
 26850 ;;
 26851                           
 26852                           	psect	text139
 26853  018C40                     __ptext139:
 26854                           	opt callstack 0
 26855  018C40                     _UART2_rx_vect_isr:
 26856                           	opt callstack 13
 26857                           
 26858                           ;incstack = 0
 26859  018C40  EE14  F000         	lfsr	1,___inthi_sp
 26860                           
 26861                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 26862  018C44  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 26863  018C46  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 26864  018C48  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 26865  018C4A  B4D8               	btfsc	status,2,c
 26866  018C4C  0011               	retfie		f
 26867                           
 26868                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 26869  018C4E  D801               	call	i2u897_48
 26870  018C50  0011               	retfie		f
 26871  018C52                     i2u897_48:
 26872  018C52  0005               	push	
 26873  018C54  6EFA               	movwf	pclath,c
 26874  018C56  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 26875  018C58  6EFD               	movwf	tosl,c
 26876  018C5A  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 26877  018C5C  6EFE               	movwf	tosh,c
 26878  018C5E  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 26879  018C60  6EFF               	movwf	tosu,c
 26880  018C62  50FA               	movf	pclath,w,c
 26881  018C64  0012               	return		;indir
 26882  018C66                     __end_of_UART2_rx_vect_isr:
 26883                           	opt callstack 0
 26884                           
 26885 ;; *************** function _UART2_Receive_ISR *****************
 26886 ;; Defined at:
 26887 ;;		line 233 in file "mcc_generated_files/uart2.c"
 26888 ;; Parameters:    Size  Location     Type
 26889 ;;		None
 26890 ;; Auto vars:     Size  Location     Type
 26891 ;;		None
 26892 ;; Return value:  Size  Location     Type
 26893 ;;                  1  [STACK] void 
 26894 ;; Registers used:
 26895 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26896 ;; Tracked objects:
 26897 ;;		On entry : 0/0
 26898 ;;		On exit  : 0/0
 26899 ;;		Unchanged: 0/0
 26900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26905 ;;Total ram usage:        0 bytes
 26906 ;; Hardware stack levels used:    1
 26907 ;; This function calls:
 26908 ;;		Nothing
 26909 ;; This function is called by:
 26910 ;;		_UART2_Initialize
 26911 ;;		_UART2_rx_vect_isr
 26912 ;; This function uses a reentrant model
 26913 ;;
 26914                           
 26915                           	psect	text140
 26916  018D8C                     __ptext140:
 26917                           	opt callstack 0
 26918  018D8C                     _UART2_Receive_ISR:
 26919                           	opt callstack 13
 26920                           
 26921                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 26922                           
 26923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26924                           ;incstack = 0
 26925  018D8C  0E00               	movlw	low _uart2RxBuffer
 26926  018D8E  2429               	addwf	_uart2RxHead^0,w,c	;volatile
 26927  018D90  6ED9               	movwf	fsr2l,c
 26928  018D92  6ADA               	clrf	fsr2h,c
 26929  018D94  0E07               	movlw	high _uart2RxBuffer
 26930  018D96  22DA               	addwfc	fsr2h,f,c
 26931  018D98  006F F743 FFDF     	movff	15824,indf2	;volatile
 26932  018D9E  2A29               	incf	_uart2RxHead^0,f,c	;volatile
 26933                           
 26934                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26935  018DA0  2829               	incf	_uart2RxHead^0,w,c
 26936  018DA2  B4D8               	btfsc	status,2,c
 26937                           
 26938                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26939  018DA4  6A29               	clrf	_uart2RxHead^0,c	;volatile
 26940                           
 26941                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26942  018DA6  2A27               	incf	_uart2RxCount^0,f,c	;volatile
 26943                           
 26944                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26945  018DA8  0012               	return		;funcret
 26946  018DAA                     __end_of_UART2_Receive_ISR:
 26947                           	opt callstack 0
 26948                           
 26949 ;; *************** function _TMR6_ISR *****************
 26950 ;; Defined at:
 26951 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26952 ;; Parameters:    Size  Location     Type
 26953 ;;		None
 26954 ;; Auto vars:     Size  Location     Type
 26955 ;;		None
 26956 ;; Return value:  Size  Location     Type
 26957 ;;                  1    wreg      void 
 26958 ;; Registers used:
 26959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26960 ;; Tracked objects:
 26961 ;;		On entry : 0/0
 26962 ;;		On exit  : 0/0
 26963 ;;		Unchanged: 0/0
 26964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26969 ;;Total ram usage:        1 bytes
 26970 ;; Hardware stack levels used:    1
 26971 ;; Hardware stack levels required when called:    2
 26972 ;; This function calls:
 26973 ;;		_TMR6_CallBack
 26974 ;; This function is called by:
 26975 ;;		Interrupt level 2
 26976 ;; This function uses a non-reentrant model
 26977 ;;
 26978                           
 26979                           	psect	text141
 26980  018E18                     __ptext141:
 26981                           	opt callstack 0
 26982  018E18                     _TMR6_ISR:
 26983                           	opt callstack 12
 26984                           
 26985                           ;incstack = 0
 26986  018E18  0060  F0CC  F058   	movff	btemp,??_TMR6_ISR
 26987  018E1E  EE14  F000         	lfsr	1,___inthi_sp
 26988                           
 26989                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26990  018E22  0139               	movlb	57	; () banked
 26991  018E24  91A9               	bcf	169,0,b	;volatile
 26992                           
 26993                           ; BSR set to: 57
 26994                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26995  018E26  EC79  F0C6         	call	_TMR6_CallBack	;wreg free
 26996  018E2A  0060  F160  F033   	movff	??_TMR6_ISR,btemp
 26997  018E30  0011               	retfie		f
 26998  018E32                     __end_of_TMR6_ISR:
 26999                           	opt callstack 0
 27000                           
 27001 ;; *************** function _TMR6_CallBack *****************
 27002 ;; Defined at:
 27003 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 27004 ;; Parameters:    Size  Location     Type
 27005 ;;		None
 27006 ;; Auto vars:     Size  Location     Type
 27007 ;;		None
 27008 ;; Return value:  Size  Location     Type
 27009 ;;                  1  [STACK] void 
 27010 ;; Registers used:
 27011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27012 ;; Tracked objects:
 27013 ;;		On entry : 3F/39
 27014 ;;		On exit  : 0/0
 27015 ;;		Unchanged: 0/0
 27016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27021 ;;Total ram usage:        0 bytes
 27022 ;; Hardware stack levels used:    1
 27023 ;; Hardware stack levels required when called:    1
 27024 ;; This function calls:
 27025 ;;		Absolute function
 27026 ;;		_TMR6_DefaultInterruptHandler
 27027 ;; This function is called by:
 27028 ;;		_TMR6_ISR
 27029 ;; This function uses a reentrant model
 27030 ;;
 27031                           
 27032                           	psect	text142
 27033  018CF2                     __ptext142:
 27034                           	opt callstack 0
 27035  018CF2                     _TMR6_CallBack:
 27036                           	opt callstack 12
 27037                           
 27038                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 27039                           
 27040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27041                           ;incstack = 0
 27042  018CF2  5001               	movf	_TMR6_InterruptHandler^0,w,c
 27043  018CF4  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 27044  018CF6  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 27045  018CF8  B4D8               	btfsc	status,2,c
 27046  018CFA  0012               	return	
 27047                           
 27048                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 27049  018CFC  D801               	call	u871_48
 27050  018CFE  0012               	return	
 27051  018D00                     u871_48:
 27052  018D00  0005               	push	
 27053  018D02  6EFA               	movwf	pclath,c
 27054  018D04  5001               	movf	_TMR6_InterruptHandler^0,w,c
 27055  018D06  6EFD               	movwf	tosl,c
 27056  018D08  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 27057  018D0A  6EFE               	movwf	tosh,c
 27058  018D0C  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 27059  018D0E  6EFF               	movwf	tosu,c
 27060  018D10  50FA               	movf	pclath,w,c
 27061  018D12  0012               	return		;indir
 27062  018D14                     __end_of_TMR6_CallBack:
 27063                           	opt callstack 0
 27064                           
 27065 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 27066 ;; Defined at:
 27067 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 27068 ;; Parameters:    Size  Location     Type
 27069 ;;		None
 27070 ;; Auto vars:     Size  Location     Type
 27071 ;;  i               1  [STACK] unsigned char 
 27072 ;; Return value:  Size  Location     Type
 27073 ;;                  1  [STACK] void 
 27074 ;; Registers used:
 27075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27076 ;; Tracked objects:
 27077 ;;		On entry : 0/39
 27078 ;;		On exit  : 0/0
 27079 ;;		Unchanged: 0/0
 27080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27085 ;;Total ram usage:        0 bytes
 27086 ;; Hardware stack levels used:    1
 27087 ;; This function calls:
 27088 ;;		Nothing
 27089 ;; This function is called by:
 27090 ;;		_TMR6_Initialize
 27091 ;;		_TMR6_CallBack
 27092 ;; This function uses a reentrant model
 27093 ;;
 27094                           
 27095                           	psect	text143
 27096  01852C                     __ptext143:
 27097                           	opt callstack 0
 27098  01852C                     _TMR6_DefaultInterruptHandler:
 27099                           	opt callstack 0
 27100                           
 27101                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27102  01852C  52E6               	movf	postinc1,f,c
 27103                           
 27104                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 27105                           ;stkvar	_i @ sp[(-1)+0]
 27106                           
 27107                           ;incstack = 0
 27108  01852E  0EFF               	movlw	-1
 27109  018530  6AE3               	clrf	plusw1,c
 27110  018532                     l8580:
 27111                           
 27112                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 27113                           ;stkvar	_i @ sp[(-1)+0]
 27114  018532  0EFF               	movlw	-1
 27115  018534  50E3               	movf	plusw1,w,c
 27116  018536  0D02               	mullw	2
 27117  018538  50F3               	movf	243,w,c
 27118  01853A  0F60               	addlw	low _tickCount
 27119  01853C  6ED9               	movwf	fsr2l,c
 27120  01853E  6ADA               	clrf	fsr2h,c
 27121  018540  50DE               	movf	postinc2,w,c
 27122  018542  10DE               	iorwf	postinc2,w,c
 27123  018544  B4D8               	btfsc	status,2,c
 27124  018546  D00A               	goto	l8584
 27125                           
 27126                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 27127                           ;stkvar	_i @ sp[(-1)+0]
 27128  018548  0EFF               	movlw	-1
 27129  01854A  50E3               	movf	plusw1,w,c
 27130  01854C  0D02               	mullw	2
 27131  01854E  50F3               	movf	243,w,c
 27132  018550  0F60               	addlw	low _tickCount
 27133  018552  6ED9               	movwf	fsr2l,c
 27134  018554  6ADA               	clrf	fsr2h,c
 27135  018556  06DE               	decf	postinc2,f,c
 27136  018558  0E00               	movlw	0
 27137  01855A  5ADD               	subwfb	postdec2,f,c
 27138  01855C                     l8584:
 27139                           
 27140                           ;mcc_generated_files/tmr6.c: 207:  }
 27141                           ;stkvar	_i @ sp[(-1)+0]
 27142  01855C  0EFF               	movlw	-1
 27143  01855E  2AE3               	incf	plusw1,f,c
 27144                           
 27145                           ;stkvar	_i @ sp[(-1)+0]
 27146  018560  0EFF               	movlw	-1
 27147  018562  006F FF8C  F033    	movff	plusw1,btemp
 27148  018568  0E0B               	movlw	11
 27149  01856A  6433               	cpfsgt	btemp^0,c
 27150  01856C  D7E2               	goto	l8580
 27151                           
 27152                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27153  01856E  52E5               	movf	postdec1,f,c
 27154  018570  0012               	return		;funcret
 27155  018572                     __end_of_TMR6_DefaultInterruptHandler:
 27156                           	opt callstack 0
 27157                           
 27158 ;; *************** function _DMA1_DMASCNT_ISR *****************
 27159 ;; Defined at:
 27160 ;;		line 126 in file "mcc_generated_files/dma1.c"
 27161 ;; Parameters:    Size  Location     Type
 27162 ;;		None
 27163 ;; Auto vars:     Size  Location     Type
 27164 ;;		None
 27165 ;; Return value:  Size  Location     Type
 27166 ;;                  1    wreg      void 
 27167 ;; Registers used:
 27168 ;;		None
 27169 ;; Tracked objects:
 27170 ;;		On entry : 0/0
 27171 ;;		On exit  : 3F/0
 27172 ;;		Unchanged: 0/0
 27173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27178 ;;Total ram usage:        0 bytes
 27179 ;; Hardware stack levels used:    1
 27180 ;; This function calls:
 27181 ;;		Nothing
 27182 ;; This function is called by:
 27183 ;;		Interrupt level 2
 27184 ;; This function uses a non-reentrant model
 27185 ;;
 27186                           
 27187                           	psect	text144
 27188  018F08                     __ptext144:
 27189                           	opt callstack 0
 27190  018F08                     _DMA1_DMASCNT_ISR:
 27191                           	opt callstack 14
 27192                           
 27193                           ;incstack = 0
 27194  018F08  EE14  F000         	lfsr	1,___inthi_sp
 27195                           
 27196                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 27197  018F0C  0139               	movlb	57	; () banked
 27198  018F0E  91A2               	bcf	162,0,b	;volatile
 27199                           
 27200                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 27201  018F10  0100               	movlb	0	; () banked
 27202  018F12  9778               	bcf	_spi_link& (0+255),3,b	;volatile
 27203                           
 27204                           ; BSR set to: 0
 27205  018F14  0011               	retfie		f
 27206  018F16                     __end_of_DMA1_DMASCNT_ISR:
 27207                           	opt callstack 0
 27208                           
 27209 ;; *************** function _DMA1_DMADCNT_ISR *****************
 27210 ;; Defined at:
 27211 ;;		line 134 in file "mcc_generated_files/dma1.c"
 27212 ;; Parameters:    Size  Location     Type
 27213 ;;		None
 27214 ;; Auto vars:     Size  Location     Type
 27215 ;;		None
 27216 ;; Return value:  Size  Location     Type
 27217 ;;                  1    wreg      void 
 27218 ;; Registers used:
 27219 ;;		None
 27220 ;; Tracked objects:
 27221 ;;		On entry : 0/0
 27222 ;;		On exit  : 3F/39
 27223 ;;		Unchanged: 0/0
 27224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27229 ;;Total ram usage:        0 bytes
 27230 ;; Hardware stack levels used:    1
 27231 ;; This function calls:
 27232 ;;		Nothing
 27233 ;; This function is called by:
 27234 ;;		Interrupt level 2
 27235 ;; This function uses a non-reentrant model
 27236 ;;
 27237                           
 27238                           	psect	text145
 27239  018F20                     __ptext145:
 27240                           	opt callstack 0
 27241  018F20                     _DMA1_DMADCNT_ISR:
 27242                           	opt callstack 14
 27243                           
 27244                           ; BSR set to: 0
 27245                           ;incstack = 0
 27246  018F20  EE14  F000         	lfsr	1,___inthi_sp
 27247                           
 27248                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27249  018F24  0139               	movlb	57	; () banked
 27250  018F26  93A2               	bcf	162,1,b	;volatile
 27251                           
 27252                           ; BSR set to: 57
 27253  018F28  0011               	retfie		f
 27254  018F2A                     __end_of_DMA1_DMADCNT_ISR:
 27255                           	opt callstack 0
 27256                           
 27257 ;; *************** function _DMA1_DMAA_ISR *****************
 27258 ;; Defined at:
 27259 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27260 ;; Parameters:    Size  Location     Type
 27261 ;;		None
 27262 ;; Auto vars:     Size  Location     Type
 27263 ;;		None
 27264 ;; Return value:  Size  Location     Type
 27265 ;;                  1    wreg      void 
 27266 ;; Registers used:
 27267 ;;		None
 27268 ;; Tracked objects:
 27269 ;;		On entry : 0/0
 27270 ;;		On exit  : 3F/39
 27271 ;;		Unchanged: 0/0
 27272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27277 ;;Total ram usage:        0 bytes
 27278 ;; Hardware stack levels used:    1
 27279 ;; This function calls:
 27280 ;;		Nothing
 27281 ;; This function is called by:
 27282 ;;		Interrupt level 2
 27283 ;; This function uses a non-reentrant model
 27284 ;;
 27285                           
 27286                           	psect	text146
 27287  018F2C                     __ptext146:
 27288                           	opt callstack 0
 27289  018F2C                     _DMA1_DMAA_ISR:
 27290                           	opt callstack 14
 27291                           
 27292                           ; BSR set to: 57
 27293                           ;incstack = 0
 27294  018F2C  EE14  F000         	lfsr	1,___inthi_sp
 27295                           
 27296                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27297  018F30  0139               	movlb	57	; () banked
 27298  018F32  97A2               	bcf	162,3,b	;volatile
 27299                           
 27300                           ; BSR set to: 57
 27301  018F34  0011               	retfie		f
 27302  018F36                     __end_of_DMA1_DMAA_ISR:
 27303                           	opt callstack 0
 27304                           
 27305 ;; *************** function _DMA1_DMAOR_ISR *****************
 27306 ;; Defined at:
 27307 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27308 ;; Parameters:    Size  Location     Type
 27309 ;;		None
 27310 ;; Auto vars:     Size  Location     Type
 27311 ;;		None
 27312 ;; Return value:  Size  Location     Type
 27313 ;;                  1    wreg      void 
 27314 ;; Registers used:
 27315 ;;		None
 27316 ;; Tracked objects:
 27317 ;;		On entry : 0/0
 27318 ;;		On exit  : 3F/39
 27319 ;;		Unchanged: 0/0
 27320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27325 ;;Total ram usage:        0 bytes
 27326 ;; Hardware stack levels used:    1
 27327 ;; This function calls:
 27328 ;;		Nothing
 27329 ;; This function is called by:
 27330 ;;		Interrupt level 2
 27331 ;; This function uses a non-reentrant model
 27332 ;;
 27333                           
 27334                           	psect	text147
 27335  018F38                     __ptext147:
 27336                           	opt callstack 0
 27337  018F38                     _DMA1_DMAOR_ISR:
 27338                           	opt callstack 14
 27339                           
 27340                           ; BSR set to: 57
 27341                           ;incstack = 0
 27342  018F38  EE14  F000         	lfsr	1,___inthi_sp
 27343                           
 27344                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27345  018F3C  0139               	movlb	57	; () banked
 27346  018F3E  95A2               	bcf	162,2,b	;volatile
 27347                           
 27348                           ; BSR set to: 57
 27349  018F40  0011               	retfie		f
 27350  018F42                     __end_of_DMA1_DMAOR_ISR:
 27351                           	opt callstack 0
 27352                           
 27353                           ;
 27354                           ; Interrupt Vector Table @ 0x8
 27355                           ;
 27356                           
 27357                           	psect	ivt0x8
 27358  000008                     __pivt0x8:
 27359                           	opt callstack 0
 27360  000008                     ivt0x8_base:
 27361                           	opt callstack 0
 27362                           
 27363                           ; Vector 0 : SWINT
 27364  000008  63DF               	dw	_Default_ISR shr (0+2)
 27365                           
 27366                           ; Vector 1 : HLVD
 27367  00000A  63DF               	dw	_Default_ISR shr (0+2)
 27368                           
 27369                           ; Vector 2 : OSF
 27370  00000C  63DF               	dw	_Default_ISR shr (0+2)
 27371                           
 27372                           ; Vector 3 : CSW
 27373  00000E  63DF               	dw	_Default_ISR shr (0+2)
 27374                           
 27375                           ; Vector 4 : NVM
 27376  000010  63DF               	dw	_Default_ISR shr (0+2)
 27377                           
 27378                           ; Vector 5 : SCAN
 27379  000012  63DF               	dw	_Default_ISR shr (0+2)
 27380                           
 27381                           ; Vector 6 : CRC
 27382  000014  63DF               	dw	_Default_ISR shr (0+2)
 27383                           
 27384                           ; Vector 7 : IOC
 27385  000016  63DF               	dw	_Default_ISR shr (0+2)
 27386                           
 27387                           ; Vector 8 : INT0
 27388  000018  63BE               	dw	_INT0_ISR shr (0+2)
 27389                           
 27390                           ; Vector 9 : ZCD
 27391  00001A  63DF               	dw	_Default_ISR shr (0+2)
 27392                           
 27393                           ; Vector 10 : AD
 27394  00001C  6251               	dw	_ADCC_ISR shr (0+2)
 27395                           
 27396                           ; Vector 11 : ADT
 27397  00001E  5FD8               	dw	_ADCC_ThresholdISR shr (0+2)
 27398                           
 27399                           ; Vector 12 : CMP1
 27400  000020  63DF               	dw	_Default_ISR shr (0+2)
 27401                           
 27402                           ; Vector 13 : SMT1
 27403  000022  63DF               	dw	_Default_ISR shr (0+2)
 27404                           
 27405                           ; Vector 14 : SMT1PRA
 27406  000024  63DF               	dw	_Default_ISR shr (0+2)
 27407                           
 27408                           ; Vector 15 : SMT1PRW
 27409  000026  63DF               	dw	_Default_ISR shr (0+2)
 27410                           
 27411                           ; Vector 16 : DMA1SCNT
 27412  000028  63C2               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27413                           
 27414                           ; Vector 17 : DMA1DCNT
 27415  00002A  63C8               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27416                           
 27417                           ; Vector 18 : DMA1OR
 27418  00002C  63CE               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27419                           
 27420                           ; Vector 19 : DMA1A
 27421  00002E  63CB               	dw	_DMA1_DMAA_ISR shr (0+2)
 27422                           
 27423                           ; Vector 20 : SPI1RX
 27424  000030  63DF               	dw	_Default_ISR shr (0+2)
 27425                           
 27426                           ; Vector 21 : SPI1TX
 27427  000032  63DF               	dw	_Default_ISR shr (0+2)
 27428                           
 27429                           ; Vector 22 : SPI1
 27430  000034  63DF               	dw	_Default_ISR shr (0+2)
 27431                           
 27432                           ; Vector 23 : I2C1RX
 27433  000036  63DF               	dw	_Default_ISR shr (0+2)
 27434                           
 27435                           ; Vector 24 : I2C1TX
 27436  000038  63DF               	dw	_Default_ISR shr (0+2)
 27437                           
 27438                           ; Vector 25 : I2C1
 27439  00003A  63DF               	dw	_Default_ISR shr (0+2)
 27440                           
 27441                           ; Vector 26 : I2C1E
 27442  00003C  63DF               	dw	_Default_ISR shr (0+2)
 27443                           
 27444                           ; Vector 27 : U1RX
 27445  00003E  62FC               	dw	_UART1_rx_vect_isr shr (0+2)
 27446                           
 27447                           ; Vector 28 : U1TX
 27448  000040  62F2               	dw	_UART1_tx_vect_isr shr (0+2)
 27449                           
 27450                           ; Vector 29 : U1E
 27451  000042  63DF               	dw	_Default_ISR shr (0+2)
 27452                           
 27453                           ; Vector 30 : U1
 27454  000044  63DF               	dw	_Default_ISR shr (0+2)
 27455                           
 27456                           ; Vector 31 : TMR0
 27457  000046  63DF               	dw	_Default_ISR shr (0+2)
 27458                           
 27459                           ; Vector 32 : TMR1
 27460  000048  63DF               	dw	_Default_ISR shr (0+2)
 27461                           
 27462                           ; Vector 33 : TMR1G
 27463  00004A  63DF               	dw	_Default_ISR shr (0+2)
 27464                           
 27465                           ; Vector 34 : TMR2
 27466  00004C  63DF               	dw	_Default_ISR shr (0+2)
 27467                           
 27468                           ; Vector 35 : CCP1
 27469  00004E  63DF               	dw	_Default_ISR shr (0+2)
 27470                           
 27471                           ; Vector 36 : Undefined
 27472  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27473                           
 27474                           ; Vector 37 : NCO1
 27475  000052  63DF               	dw	_Default_ISR shr (0+2)
 27476                           
 27477                           ; Vector 38 : CWG1
 27478  000054  63DF               	dw	_Default_ISR shr (0+2)
 27479                           
 27480                           ; Vector 39 : CLC1
 27481  000056  63DF               	dw	_Default_ISR shr (0+2)
 27482                           
 27483                           ; Vector 40 : INT1
 27484  000058  62E8               	dw	_INT1_ISR shr (0+2)
 27485                           
 27486                           ; Vector 41 : CMP2
 27487  00005A  63DF               	dw	_Default_ISR shr (0+2)
 27488                           
 27489                           ; Vector 42 : DMA2SCNT
 27490  00005C  63DF               	dw	_Default_ISR shr (0+2)
 27491                           
 27492                           ; Vector 43 : DMA2DCNT
 27493  00005E  63DF               	dw	_Default_ISR shr (0+2)
 27494                           
 27495                           ; Vector 44 : DMA2OR
 27496  000060  63DF               	dw	_Default_ISR shr (0+2)
 27497                           
 27498                           ; Vector 45 : DMA2A
 27499  000062  63DF               	dw	_Default_ISR shr (0+2)
 27500                           
 27501                           ; Vector 46 : I2C2RX
 27502  000064  63DF               	dw	_Default_ISR shr (0+2)
 27503                           
 27504                           ; Vector 47 : I2C2TX
 27505  000066  63DF               	dw	_Default_ISR shr (0+2)
 27506                           
 27507                           ; Vector 48 : I2C2
 27508  000068  63DF               	dw	_Default_ISR shr (0+2)
 27509                           
 27510                           ; Vector 49 : I2C2E
 27511  00006A  63DF               	dw	_Default_ISR shr (0+2)
 27512                           
 27513                           ; Vector 50 : U2RX
 27514  00006C  6310               	dw	_UART2_rx_vect_isr shr (0+2)
 27515                           
 27516                           ; Vector 51 : U2TX
 27517  00006E  6306               	dw	_UART2_tx_vect_isr shr (0+2)
 27518                           
 27519                           ; Vector 52 : U2E
 27520  000070  63DF               	dw	_Default_ISR shr (0+2)
 27521                           
 27522                           ; Vector 53 : U2
 27523  000072  63DF               	dw	_Default_ISR shr (0+2)
 27524                           
 27525                           ; Vector 54 : TMR3
 27526  000074  63DF               	dw	_Default_ISR shr (0+2)
 27527                           
 27528                           ; Vector 55 : TMR3G
 27529  000076  63DF               	dw	_Default_ISR shr (0+2)
 27530                           
 27531                           ; Vector 56 : TMR4
 27532  000078  63DF               	dw	_Default_ISR shr (0+2)
 27533                           
 27534                           ; Vector 57 : CCP2
 27535  00007A  63DF               	dw	_Default_ISR shr (0+2)
 27536                           
 27537                           ; Vector 58 : Undefined
 27538  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27539                           
 27540                           ; Vector 59 : CWG2
 27541  00007E  63DF               	dw	_Default_ISR shr (0+2)
 27542                           
 27543                           ; Vector 60 : CLC2
 27544  000080  63DF               	dw	_Default_ISR shr (0+2)
 27545                           
 27546                           ; Vector 61 : INT2
 27547  000082  63DF               	dw	_Default_ISR shr (0+2)
 27548                           
 27549                           ; Vector 62 : Undefined
 27550  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27551                           
 27552                           ; Vector 63 : Undefined
 27553  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27554                           
 27555                           ; Vector 64 : Undefined
 27556  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27557                           
 27558                           ; Vector 65 : Undefined
 27559  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27560                           
 27561                           ; Vector 66 : Undefined
 27562  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27563                           
 27564                           ; Vector 67 : Undefined
 27565  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27566                           
 27567                           ; Vector 68 : Undefined
 27568  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27569                           
 27570                           ; Vector 69 : Undefined
 27571  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27572                           
 27573                           ; Vector 70 : TMR5
 27574  000094  6086               	dw	_TMR5_ISR shr (0+2)
 27575                           
 27576                           ; Vector 71 : TMR5G
 27577  000096  63DF               	dw	_Default_ISR shr (0+2)
 27578                           
 27579                           ; Vector 72 : TMR6
 27580  000098  6386               	dw	_TMR6_ISR shr (0+2)
 27581                           
 27582                           ; Vector 73 : CCP3
 27583  00009A  63DF               	dw	_Default_ISR shr (0+2)
 27584                           
 27585                           ; Vector 74 : CWG3
 27586  00009C  63DF               	dw	_Default_ISR shr (0+2)
 27587                           
 27588                           ; Vector 75 : CLC3
 27589  00009E  63DF               	dw	_Default_ISR shr (0+2)
 27590                           
 27591                           ; Vector 76 : Undefined
 27592  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27593                           
 27594                           ; Vector 77 : Undefined
 27595  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27596                           
 27597                           ; Vector 78 : Undefined
 27598  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27599                           
 27600                           ; Vector 79 : Undefined
 27601  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27602                           
 27603                           ; Vector 80 : CCP4
 27604  0000A8  63DF               	dw	_Default_ISR shr (0+2)
 27605                           
 27606                           ; Vector 81 : CLC4
 27607  0000AA  63DF               	dw	_Default_ISR shr (0+2)
 27608  0000AC                     ivt0x8_undefint:
 27609                           	opt callstack 0
 27610  0000AC  00FF               	reset	
 27611                           
 27612                           	psect	text148
 27613  000000                     __ptext148:
 27614                           	opt callstack 0
 27615                           
 27616                           	psect	rparam
 27617  0000                     
 27618                           	psect	temp
 27619  000033                     btemp:
 27620                           	opt callstack 0
 27621  000033                     	ds	32
 27622  0000                     wtemp0	set	btemp
 27623  0000                     wtemp1	set	btemp+2
 27624  0000                     wtemp2	set	btemp+4
 27625  0000                     wtemp3	set	btemp+6
 27626  0000                     wtemp4	set	btemp+8
 27627  0000                     wtemp5	set	btemp+10
 27628  0000                     wtemp8	set	btemp+1
 27629  0000                     ttemp0	set	btemp
 27630  0000                     ttemp1	set	btemp+3
 27631  0000                     ttemp2	set	btemp+6
 27632  0000                     ttemp3	set	btemp+9
 27633  0000                     ttemp5	set	btemp+1
 27634  0000                     ttemp6	set	btemp+4
 27635  0000                     ttemp7	set	btemp+8
 27636  0000                     ltemp0	set	btemp
 27637  0000                     ltemp1	set	btemp+4
 27638  0000                     ltemp2	set	btemp+8
 27639  0000                     lltemp0	set	btemp
 27640  0000                     lltemp1	set	btemp+8
 27641  0000                     lltemp2	set	btemp+16
 27642  0000                     lltemp3	set	btemp+24
 27643                           tosu	equ	0x3FFF
 27644                           tosh	equ	0x3FFE
 27645                           tosl	equ	0x3FFD
 27646                           stkptr	equ	0x3FFC
 27647                           pclatu	equ	0x3FFB
 27648                           pclath	equ	0x3FFA
 27649                           pcl	equ	0x3FF9
 27650                           tblptru	equ	0x3FF8
 27651                           tblptrh	equ	0x3FF7
 27652                           tblptrl	equ	0x3FF6
 27653                           tablat	equ	0x3FF5
 27654                           prodh	equ	0x3FF4
 27655                           prodl	equ	0x3FF3
 27656                           indf0	equ	0x3FEF
 27657                           postinc0	equ	0x3FEE
 27658                           postdec0	equ	0x3FED
 27659                           preinc0	equ	0x3FEC
 27660                           plusw0	equ	0x3FEB
 27661                           fsr0h	equ	0x3FEA
 27662                           fsr0l	equ	0x3FE9
 27663                           wreg	equ	0x3FE8
 27664                           indf1	equ	0x3FE7
 27665                           postinc1	equ	0x3FE6
 27666                           postdec1	equ	0x3FE5
 27667                           preinc1	equ	0x3FE4
 27668                           plusw1	equ	0x3FE3
 27669                           fsr1h	equ	0x3FE2
 27670                           fsr1l	equ	0x3FE1
 27671                           bsr	equ	0x3FE0
 27672                           indf2	equ	0x3FDF
 27673                           postinc2	equ	0x3FDE
 27674                           postdec2	equ	0x3FDD
 27675                           preinc2	equ	0x3FDC
 27676                           plusw2	equ	0x3FDB
 27677                           fsr2h	equ	0x3FDA
 27678                           fsr2l	equ	0x3FD9
 27679                           status	equ	0x3FD8


Data Sizes:
    Strings     286
    Constant    144
    Data        266
    BSS         1361
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      56
    BANK0           160      6     138
    BANK1           256      0     203
    BANK2           256      0     252
    BANK3           256      0     195
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[203]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[203]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[203]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[203]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4888_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[203]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[203]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[203]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[203]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[203]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3987tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[203]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[203]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  323330
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10929
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  186219
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    10     14   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _utoa                                                24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     159
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     162
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            2     2      0       0
                                              0 BANK0      2     2      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              2 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C3      11       76.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      CB       7       79.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6      8A       5       86.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      38       1       88.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     667      58        0.0%
DATA                 0      0     667       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 22 07:56:30 2019

                     _SPI1_Exchange8bit 8D14                __end_of_set_display_info 8D6E  
                                     _C 0200                                       _D 0500  
                                     _P 0094                                       _R 00A5  
                                     _T FE51                                       _V 0100  
      __end_of_TMR5_SetInterruptHandler 8AD6            __end_of_start_switch_handler 8DFC  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 8F6A                             __CFG_LVP$ON 000000  
                                   l171 8E9E                                     l701 8914  
                                   l581 88E8                                     l835 8D22  
                                   _GIE 01FE97                                     _abs 845A  
                                   _pad 7068                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 8E4A                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8CD0                      _UART1_Transmit_ISR 88C2  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 8CAE  
                          __CFG_ZCD$OFF 000000                                    l1028 8676  
                                  l1331 827E                                    l1252 434A  
                                  l1244 419A                                    l1254 4350  
                                  l2322 6904                                    l1604 8D6A  
                                  l1471 7B68                                    l1560 60BE  
                                  l1650 3756                                    l1547 8714  
                                  l1467 78F6                                    l2284 779E  
                                  l1564 7286                                    l1556 5F62  
                                  l1486 8748                                    l2607 3CCC  
                                  l2295 6A66                                    l2288 6992  
                                  l1824 123A                                    l2714 849A  
                                  l2562 31CC                                    l2706 6612  
                                  l1906 5388                                    l2643 2A10  
                                  l1853 066A                                    l2574 305C  
                                  l1942 4590                    _ADCC_StartConversion 8EB8  
                                  l1927 4CB6                                    l1768 70C4  
                                  l7000 779C                                    l6200 2C08  
                                  l2745 5A46                                    l2809 6F46  
                                  l6130 79CA                                    l2683 62BC  
                                  l1699 647C                                    l6132 79EC  
                                  l1788 3DB4                                    l1868 0B1A  
                                  l7014 69E0                                    l6230 2D46  
                                  l2870 7D88                                    l2855 5EA6  
                                  l6400 848A                                    l7008 6950  
                                  l6312 307E                                    l6304 3040  
                                  l6240 2DB8                                    l1992 21E6  
                                  l7026 6A64                                    l7018 6A2E  
                                  l7034 83EA                                    l6314 3090  
                                  l6250 2DF4                                    l6170 2AF6  
                                  l2883 7D04                                    l7132 83BC  
                                  l6332 30CA                                    l6244 2DD8  
                                  l6164 2AB0                                    l7060 6870  
                                  l7044 67EE                                    l7116 6CA4  
                                  l7108 6BF8                                    l6318 309C  
                                  l6246 2DEA                                    l6254 2E24  
                                  l6182 2B60                                    l6158 2A70  
                                  l7070 68B2                                    l7062 688C  
                                  l6414 65B0                                    l6520 5612  
                                  l6600 37F2                                    l6360 317C  
                                  l6344 3128                                    l6328 30C4  
                                  l6272 2EC0                                    l6192 2BB6  
                                  l6176 2B2E                                    l6168 2AC6  
                                  l6424 660A                                    l6514 55BE  
                                  l6354 3154                                    l6274 2ED2  
                                  l6282 2F0E                                    l6194 2BE6  
                                  l6418 65B4                                    l6442 7D78  
                                  l6700 3B92                                    l6620 38D0  
                                  l6604 3808                                    l6188 2BA0  
                                  l7068 689C                                    l7084 666A  
                                  l8204 623A                                    l8054 8C82  
                                  l6526 5658                                    l6614 3890  
                                  l6606 3838                                    l6366 31AC  
                                  l6358 316C                                    l6294 2FE6  
                                  l6278 2EDC                                    l6470 4B42  
                                  l8134 8752                                    l8214 629C  
                                  l6720 3C48                                    l6704 3B98  
                                  l6632 3954                                    l6624 38E6  
                                  l6296 300C                                    l6480 4C48  
                                  l6472 4B92                                    l6456 4A24  
                                  l7096 673C                                    l9034 7DD6  
                                  l6538 572A                                    l6714 3C0C  
                                  l6626 3916                                    l9028 7DC6  
                                  l6732 3CA0                                    l6476 4BDA  
                                  l8180 6178                                    l8172 610C  
                                  l7702 58B8                                    l9302 710A  
                                  l6574 5BE2                                    l6566 5B36  
                                  l6558 5AAE                                    l6734 3CB0  
                                  l6726 3C78                                    l6646 39A8  
                                  l6638 398E                                    l6750 2246  
                                  l8182 6186                                    l7712 599A  
                                  l7704 58D0                                    l9320 7C4C  
                                  l6912 6A94                                    l6680 3B06  
                                  l6672 3AD4                                    l6664 3A6E  
                                  l6656 3A38                                    l6760 22BC  
                                  l9312 74C6                                    l8192 61E8  
                                  l8184 619C                                    l7722 5A36  
                                  l7706 58F4                                    l9306 7154  
                                  l6690 3B48                                    l6666 3A80  
                                  l6674 3AD8                                    l6594 37B2  
                                  l6498 7CF4                                    l8194 6206  
                                  l8186 61BA                                    l7708 5932  
                                  l6924 6ACA                                    l6844 2820  
                                  l6756 2286                                    l9404 00AC  
                                  l7740 5D84                                    l8196 621C  
                                  l9270 6E5C                                    l9318 7C20  
                                  l6918 6AAA                                    l6686 3B22  
                                  l6862 2896                                    l6838 2804  
                                  l6774 2354                                    l6758 228C  
                                  l9510 05F6                                    l9502 0594  
                                  l9352 3DEE                                    l9344 3DA4  
                                  l6872 290A                                    l6848 2846  
                                  l6776 235A                                    l6768 2314  
                                  l9512 0602                                    l9416 00F0  
                                  l9424 0146                                    l8720 3488  
                                  l8712 3456                                    l9282 7A56  
                                  l6946 6BA4                                    l6938 6B70  
                                  l6962 6F82                                    l6890 29BE  
                                  l6882 297A                                    l6858 2890  
                                  l6786 23AC                                    l6778 238A  
                                  l9434 01EA                                    l9442 0258  
                                  l7738 5D18                                    l8580 8532  
                                  l9292 7094                                    l9356 3E0C  
                                  l6892 29D8                                    l6876 2950  
                                  l9532 06F0                                    l9452 02FC  
                                  l9460 032A                                    l9436 0216  
                                  l8732 365C                                    l8724 3550  
                                  l8708 3350                                    l7686 57F6  
                                  l9286 7A94                                    l9390 410C  
                                  l9366 401E                                    l6966 6F9A  
                                  l6958 6F70                                    l9606 0D24  
                                  l9614 0D90                                    l9622 0EA2  
                                  l9438 022C                                    l8584 855C  
                                  l8824 88E4                                    l7696 588C  
                                  l7688 5818                                    l9296 70BC  
                                  l6984 704E                                    l6976 701A  
                                  l6992 7726                                    l9528 06B8  
                                  l9472 0406                                    l8658 872A  
                                  l9298 70CE                                    l9386 40D0  
                                  l9650 0FF0                                    l9634 0F3A  
                                  l9570 0B12                                    l9562 0A48  
                                  l9538 077A                                    l9490 0554  
                                  l9474 0470                                    l9730 542A  
                                  l9722 53BE                                    l9706 530A  
                                  l9810 45F6                                    l8738 3724  
                                  l8746 3736                                    l8770 632A  
                                  l8762 62FE                                    l6996 7768  
                                  l9660 1092                                    l9572 0B34  
                                  l9548 0926                                    l9468 0396  
                                  l9740 54E0                                    l9804 45BA  
                                  l8846 8910                                    l9670 10E2  
                                  l9494 057C                                    l9478 04D2  
                                  l9726 53FA                                    l9902 14A8  
                                  l8774 6342                                    l8872 865E  
                                  l9648 0FD6                                    l9496 058E  
                                  l9744 551C                                    l9736 54B4  
                                  l9904 14E2                                    l9586 0C32  
                                  l9834 474C                                    l9818 4656  
                                  l9842 47D2                                    l9922 165C  
                                  l9906 14F8                                    l8698 3206  
                                  l9940 17E0                                    l9932 16F4  
                                  l8972 7E16                                    l9686 119A  
                                  l9598 0CBA                                    l9766 4D02  
                                  l9758 4CA6                                    STR_1 FF66  
                                  l9776 4EF8                                    l9944 1834  
                                  l9880 1326                                    STR_2 FF97  
                                  STR_3 FFD2                                    l9858 48BC  
                                  l9882 1360                                    STR_4 FF55  
                                  STR_5 FF77                                    l9964 1A46  
                                  l9956 198E                                    l9884 1376  
                                  STR_6 FF97                                    STR_7 FFD2  
                                  l9798 4580                                    STR_8 FF44  
                                  STR_9 FFA6                                    l9968 1A7A  
                                  l9988 1BDA                                    l9998 1C88  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u5100 8828  
                                  u5030 3118                                    u5110 882A  
                                  u6000 239A                                    u5035 3108  
                                  u5060 3138                                    u5220 6602  
                                  u5300 4A08                                    u6110 28E4  
                                  u5230 6604                                    u6015 252E  
                                  u5215 65E4                                    u5160 846E  
                                  u6200 6B90                                    u6120 291E  
                                  u5400 85AC                                    u6025 25F6  
                                  u6130 2964                                    u5170 6534  
                                  u5410 7CB2                                    _T6PR 003F93  
                                  u6115 28D4                                    u6035 27BE  
                                  u5340 4AE8                                    u5260 7D36  
                                  u5420 7CB4                                    _PMD0 0039C0  
                                  u5501 5618                                    u5325 4A42  
                                  _PMD1 0039C1                                    u4630 7A1A  
                                  u5510 5652                                    u6310 7798  
                                  u6070 2888                                    u5326 4A48  
                                  u5270 7D38                                    _PMD2 0039C2  
                                  u5175 652A                                    u5327 4A56  
                                  _PMD3 0039C3                                    u5440 8888  
                                  u5520 5684                                    u6400 681C  
                                  u5360 4BC0                                    _PMD4 0039C4  
                                  u5345 4ADE                                    _PMD5 0039C5  
                                  u5450 888A                                    u5610 5AFE  
                                  u6250 6FC6                                    u5290 49BC  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u5540 5762                                    u5620 5B30  
                                  u6180 6AF6                                    u4820 2E1C  
                                  u4660 8858                                    u6500 6696  
                                  u4637 7A0C                                    u6405 6812  
                                  u5365 4BB6                                    u5470 55B8  
                                  u5630 5B62                                    u6270 703A  
                                  u4830 2E3C                                    u4670 885A  
                                  u5390 85AA                                    u5295 49B2  
                                  u6600 83B8                                    u5560 57B4  
                                  u6520 6774                                    u4825 2E0C  
                                  u5490 560E                                    u5650 5C1A  
                                  u5810 3B00                                    u6370 83E6  
                                  u4930 302E                                    u4770 2D6C  
                                  u6450 68BA                                    u5900 3C20  
                                  u4780 2D8C                                    u6380 67CE  
                                  u6540 6BF2                                    u4781 2D86  
                                  u9110 6ECC                                    u5670 5C6C  
                                  u5590 5AA8                                    u5910 3C5C  
                                  u6470 68E4                                    u6390 67E2  
                                  u6550 6C24                                    u8320 6230  
                                  u6385 67C4                                    u6481 662A  
                                  u9210 3D06                                    u5850 3B8A  
                                  u4970 30A2                                    u4890 2F04  
                                  u6490 6664                                    u6570 6CDC  
                                  u7700 59E0                                    u9220 3D08  
                                  u8245 862A                                    u9301 4062  
                                  u6590 8398                                    u7710 59E2  
                                  u9310 4078                                    u4990 30BC  
                                  u4798 2D8E                                    u9311 4076  
                                  u4895 2EF4                                    u8360 7FD6  
                                  u9320 408C                                    u9240 3D78  
                                  u7800 5E7A                                    u8600 3594  
                                  u9090 6E50                                    u9330 4090  
                                  u5890 3BE6                                    u9170 7540  
                                  u8514 3220                                    u8610 62DC  
                                  u8515 321A                                    u9260 3D8A  
                                  u9420 0194                                    u9350 40A6  
                                  u9510 050E                                    u9430 0196  
                                  u7750 5DB2                                    u8534 3242  
                                  u5895 3BD6                                    u7807 5E6C  
                                  u8535 323C                                    u7680 5888  
                                  u9280 3DDA                                    u8385 800A  
                                  u9177 7532                                    u8386 800C  
                                  u8378 7FD8                                    u9290 4032  
                                  u9610 0648                                    u8554 3470  
                                  u8555 346A                                    u9540 0562  
                                  u9460 02A6                                    u7757 5DA4  
                                  u9470 02A8                                    u9390 00DA  
                                  u7790 5E4C                                    u8574 356A  
                                  u8494 31F0                                    u8575 3564  
                                  u8495 31EA                                    u9570 05C6  
                                  u8594 358C                                    _PLLR 01CEE0  
                                  u7795 5E46                                    u8595 3586  
                                  u7797 5E38                                    u9840 10B8  
                                  u9680 0A18                                    u9860 116E  
                                  u9780 0EE4                                    u9940 5420  
                                  u9870 1170                                    u9950 5466  
                                  u9980 5542                                    u9957 5458  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 896E                           __CFG_FCMEN$ON 000000  
                                  _dbuf 02AC                                    _atoi 57DC  
                                  _ctoa 7C02                                    _main 4156  
                                  _dtoa 3CD6                                    _nanf 80F6  
                                  _seed 009D                                    _prec 001E  
                                  _nout 009B                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 529E                                    btemp 0033  
                                  _utoa 4C72                                    _xtoa 454C  
                __end_of_check_adc_scan 8F62                           ___fpclassifyf 6486  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0024  
             __end_of_SPI1_Exchange8bit 8D32                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 8BF0                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0053                        __end_of_INT0_ISR 8F06  
                      __end_of_INT1_ISR 8BC6          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 78FE           __end_of_OSCILLATOR_Initialize 8EA4  
                                 l10032 1FDC                                   l10008 1DAA  
                                 l10104 5220                                   l10018 1E60  
                                 l10202 719E                                   l10052 216E  
                                 l10116 77D4                                   l10046 2114  
                                 l10062 2192                                   l10118 7816  
                                 l10056 2172                                   l10090 5108  
                                 l10330 605A                                   l10084 504A  
                                 l10318 5F32                                   l10096 5172  
                                 l10168 7956                                   l10424 4354  
                                 l10426 4382                                   l10380 41A2  
                                 l10446 43DA                                   l10438 43B6  
                                 l10382 41B4                                   l10374 417C  
                                 l10456 4506                                   l10376 4184  
                                 l10468 453A                                   PRLOCK 0039EF  
                       __end_of___aodiv 57DC                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 31D6  
                                 _ADCLK 003EFF                         __end_of___aomod 5C90  
                                 _ADPCH 003EF1                         __end_of___fldiv 3CD6  
                                 _ADREF 003EFD                         __end_of___awdiv 6BBE  
                       __end_of___flneg 8414                                   STR_10 FFA6  
                                 STR_11 FF32                                   STR_20 FFBF  
                                 STR_12 FFFC                                   STR_13 FFF9  
                                 STR_21 FF88                                   STR_22 FF88  
                                 STR_23 FF88                                   STR_15 FFB3  
                                 STR_16 FFC9                                   STR_24 FEE1  
                                 STR_33 FF0B                                   STR_17 FF0C  
                         __CFG_WDTE$OFF 000000                                   STR_18 FF0C  
                                 STR_42 FFEA                                   STR_34 FFD7  
                                 STR_26 FF1F                                   STR_51 FFED  
                                 STR_35 FFDF                                   STR_19 FFBF  
                                 STR_27 FEF9                                   STR_44 FFEA  
                       __end_of___awmod 7068                                   STR_53 FFED  
                                 STR_61 FFF6                                   STR_46 FFF0  
                                 STR_38 FFDB                                   STR_63 FFF6  
                                 STR_39 FFE3                                   STR_48 FFF0  
                                 STR_56 FFF3                                   _ADRPT 003EEC  
                                 STR_65 FFE7                                   STR_58 FFF3  
                                 STR_67 FFE7                         __end_of___flmul 2A1A  
                       __end_of___flsub 845A                         __end_of___fltol 690E  
                                 u10000 4C8C                                   u10110 464E  
                                 u10031 4F3A                                   u10040 4F50  
                                 u10120 46A2                                   u10041 4F4E  
                                 u10201 481E                                   u10050 4F64  
                                 u10210 4834                                   u10130 46A4  
                                 u10211 4832                                   u10060 4F68  
                                 u10220 4848                                   u10300 13E6  
                                 u10230 484C                                   u10150 4702  
                                 u10160 4704                                   u10080 4566  
                                 u10400 1748                                   u10330 1540  
                                 u10180 47CE                                   u10420 18BC  
                                 u10340 1542                                   u10190 47EE  
                                 u10350 1568                                   u10520 1EB4  
                                 u10280 13BE                                   u10600 5294  
                                 u10185 47B0                                   u10450 1B34  
                                 u10290 13C0                         __end_of___lodiv 679C  
                                 u10540 2064                                   u10460 1B36  
                                 u10630 7936                                   u10720 60AA  
                                 u10730 60AC                                   _U1P1H 003DED  
                                 _U1P2H 003DEF                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   _U1P3L 003DF0  
                                 _U2P1L 003DD4                                   _U2P2L 003DD6  
                                 _U2P3L 003DD8                                   _T5CLK 003F9D  
                       __end_of___lomod 6CFE                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0004                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0058  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 8F7C                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 8BC8  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 8274  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 8E32  
                          _DMA1CON1bits 003BFD                                   _flags 0020  
                                 _fputc 6E2C              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 85B6                                   _fputs 7A46  
                       __end_of_isdigit 8894                      __CFG_MCLRE$EXTMCLR 000000  
                    ?_UART1_tx_vect_isr 0053                                   _srand 879C  
                                 _width 001C                                   _putch 8DFC  
                       __end_of_islower 8834                         __end_of_isspace 83CC  
              _INT1_SetInterruptHandler 8AD6                         __end_of_isupper 8864  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0033                                   ltemp1 0037  
                                 ltemp2 003B                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0033                                   ttemp1 0036  
                                 ttemp2 0039                                   ttemp3 003C  
                                 ttemp5 0034                                   ttemp6 0037  
                                 ttemp7 003B                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 8A86             _UART1_SetRxInterruptHandler 8A5E  
                                 wtemp0 0033                                   wtemp1 0035  
                                 wtemp2 0037                                   wtemp3 0039  
                                 wtemp4 003B                                   wtemp5 003D  
                                 wtemp8 0034                         __end_of_sprintf 7394  
                       __end_of_tolower 7D92                         __end_of_strncmp 5EB0  
                       __end_of_toupper 7D0E                     ??_UART1_tx_vect_isr 0058  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 8C16  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 84E6  
                 __end_of_ringBufS_init 89E6                         __initialization 761E  
                     _UART2_rx_vect_isr 8C40                            __end_of_atoi 5A50  
                          __end_of_ctoa 7C8A                            __end_of_main 454C  
                          __end_of_dtoa 4156                            __end_of_nanf 8158  
                          __end_of_stoa 555C                            __end_of_utoa 4FB2  
                          __end_of_xtoa 4906                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0053                 __end_of_TMR2_Initialize 8E62  
              __size_of_DMA2_Initialize 005A                _TMR5_SetInterruptHandler 8AAE  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0058  
             __end_of_UART1_tx_vect_isr 8BEE                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 891A                         _PWM8_Initialize 8E78  
                      _UART1_Initialize 8092                       _UART2_tx_vect_isr 8C18  
                    _UART2_Transmit_ISR 88EE                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 802E                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 85FA                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0053  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1045 8266                    _start_switch_handler 8DE2  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 8EE8                                  u410_48 8CDE  
                                u412_28 8CBC                                  _SCANPR 0039F7  
                                u407_20 85C8                                  u407_26 85CA  
                                u408_20 85E2                                  u408_26 85E4  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u842_20 8B7E  
                                u842_26 8B80                                  u871_48 8D00  
                                u874_28 8C9A                                  u886_44 7DF6  
                                u886_45 7DF0                        __end_of___xxtofl 62C6  
 __end_of_ADCC_DischargeSampleCapacitor 8F4A  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 8F42                __end_of_send_lcd_cmd_dma 837A  
                   ??_UART2_tx_vect_isr 0058               __end_of_UART2_rx_vect_isr 8C66  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 8F16  
                      _UART2_Initialize 81BA                                  _WaitMs 8730  
                       _conv_raw_result 31D6                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 690E  
                                ___fleq 76E4                       _ADCC_ThresholdISR 7F60  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 7ADE  
                                _efgtoa 0000                                  _floorf 4906  
                    ?_ADCC_ThresholdISR 0053                                  _memset 4FB2  
                  __size_of_help_button 0038                                  clear_0 766A  
                                clear_1 767E                                  clear_2 7690  
                                clear_3 769C                                  clear_4 76A8  
                                clear_5 76B4                                  clear_6 76C0  
                                clear_7 76CC                                  _printf 8158  
                    _eaDogM_WriteString 78FE                                  _strcpy 747E  
                             ?_ADCC_ISR 0053                                  _strlen 79A4  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 7EF4  
                        _PMD_Initialize 8EA4               __end_of_UART2_tx_vect_isr 8C3E  
                                lltemp0 0033                                  lltemp1 003B  
                                lltemp2 0043                                  lltemp3 004B  
                   ??_ADCC_ThresholdISR 0053                  __end_of_start_adc_scan 8092  
                          __mediumconst FE50                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 82CE  
                      __end_of_vfprintf 7854                              _StartTimer 86BC  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 852C  
                     _SYSTEM_Initialize 84A0                              __accesstop 0060  
               __end_of__initialization 76DE                               ?_INT0_ISR 0053  
                             ?_INT1_ISR 0053                    __end_of_display_help 8F5A  
                  __end_of_display_info 8F52               __end_of_CLKREF_Initialize 8F20  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 863C                   _set_temp_display_help 8ECA  
             __end_of_ADCC_ThresholdISR 7FC8                  __end_of_ringBufS_flush 7B70  
                        __pcstackCOMRAM 0053                              ___inthi_sp 1000  
                            ___intlo_sp 1800                            __pidataBANK0 867C  
                          __pidataBANK1 7552                               ?_TMR5_ISR 0053  
                             ?_TMR6_ISR 0053                          ivt0x8_undefint 00AC  
                         __end_of_fputc 6F50                           __end_of_fputs 7ADE  
                         __end_of_srand 87D0                   __end_of_TMR5_CallBack 8CAE  
                         __end_of_putch 8E16                 __end_of_PWM8_Initialize 8E8E  
               __end_of_TMR6_Initialize 8944                       _adc_int_t_handler 7D92  
                __end_of_PMD_Initialize 8EB8                              ??_ADCC_ISR 0053  
                 __end_of_TMR6_CallBack 8D14             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 8F2C  
                        _clear_adc_scan 8F6A                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0013               __end_of_SYSTEM_Initialize 84E6  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                              _check_help 5EB0  
               __end_of_conv_raw_result 375C                   _INT0_InterruptHandler 0019  
                            ??_INT0_ISR 0053                              ??_INT1_ISR 00E4  
                     __end_of_TimerDone 8C8A                        _DMA1_DMADCNT_ISR 8F20  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 8DC6  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 8AAE  
               __end_of_ADCC_Initialize 7F5E                              ??_TMR5_ISR 00E6  
             __end_of_adc_int_t_handler 7E10                              ??_TMR6_ISR 0058  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 8B4E   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 8B26                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 8D6E  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 8F70                          ?_DMA1_DMAA_ISR 0053  
                      _DMA1_DMASCNT_ISR 8F08                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0053  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 867C  
               __size_of_switch_handler 0044       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 0068  
                         _mode_lamp_dim 8E32                                 __Lparam 0000  
              __end_of_UART1_Initialize 80F6                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 555C                                 ___fladd 2A1A  
                               ___aomod 5A50                                 ___fldiv 375C  
                               ___awdiv 6A70                                 ___flneg 83CC  
                               ___awmod 6F50                                 ___flmul 21F0  
                               ___flsub 8414                                 ___fltol 679C  
                               ___lodiv 661C                                 ___lomod 6BBE  
             __end_of_UART1_Receive_ISR 8D8C                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 747E  
                               __pcinit 761E                __end_of_mode_lamp_bright 8EF6  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 8EDA                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 4156  
                               __ptext1 8DE2                                 __ptext2 802E  
                               __ptext3 8EB8                                 __ptext4 8F42  
                               __ptext5 879C                                 __ptext6 7394  
                               __ptext7 896E                                 __ptext8 8996  
                               __ptext9 8D14                       _UART2_Receive_ISR 8D8C  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 8E8E                            __size_of_abs 0046  
                          __size_of_pad 0114                                 us557999 57C6  
                               us653999 6786                                 _isalpha 8572  
                               _isdigit 8864                                 us568999 5C7E  
                               us920999 3CF0                                 us658999 6CEE  
                               _mode_sw 0026                       __end_of_lp_filter 6486  
                               us989999 52B0                                 _islower 8804  
                               _isspace 837A                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 8218  
                               _isupper 8834              __size_of_SYSTEM_Initialize 0046  
                               _sprintf 728A                                 _tolower 7D0E  
                 __size_of_display_help 0008                                 _utctime 008C  
                 __size_of_display_info 0008                                 _strncmp 5C90  
                               _toupper 7C8A                    end_of_initialization 76DE  
             __size_of_convert_adc_data 007A     __end_of_UART1_SetTxInterruptHandler 8A5E  
           _UART1_SetTxInterruptHandler 8A36     __end_of_UART2_SetRxInterruptHandler 8A36  
           _UART2_SetRxInterruptHandler 8A0E                       __end_of_set_vterm 8DE2  
                     __end_of_vfpfcnvrt 21F0                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 8F7C               __end_of_UART2_Receive_ISR 8DAA  
                        wdtdelay@dcount 0090                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0059                   _INT1_InterruptHandler 0016  
                             _PORTBbits 003FCB                _TMR6_SetInterruptHandler 8A86  
                          _display_help 8F52                   _TMR5_InterruptHandler 0098  
                          _display_info 8F4A    __size_of_UART2_SetTxInterruptHandler 0028  
                     __size_of_ADCC_ISR 002A     __end_of_ADCC_SetADIInterruptHandler 8B76  
           _ADCC_SetADIInterruptHandler 8B4E                              _update_lcd 717C  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                       _DMA1_Initialize 7E8A                         _SPI1_Initialize 8E62  
                 __end_of_get_vterm_ptr 88C2                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 0026                          __end_of_WaitMs 8766  
          __end_of_INTERRUPT_Initialize 802E                              _vterm_dump 6CFE  
                        __end_of___flge 6A70                          __end_of___fleq 77A8  
  __end_of_INT0_DefaultInterruptHandler 8F86   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 8F84              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 82CE                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005C                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 4C72  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0084  
                        __end_of_memset 529E                          __end_of_printf 81BA  
              __end_of_DMA1_DMADCNT_ISR 8F2A             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 8CF2                          __end_of_strcpy 7552  
                        __end_of_strlen 7A46                     start_initialization 761E  
  __end_of_TMR5_DefaultInterruptHandler 8B9E   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 8B76         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 84A0                   __end_of_INT1_CallBack 8CD0  
             __size_of_set_display_info 001E                             __end_of_pad 717C  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 89BE  
                        _switch_handler 85B6           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0600  
                 __end_of___fpclassifyf 661C                           _uart2RxBuffer 0700  
                         _uart1TxBuffer 0340                __end_of_DMA1_DMASCNT_ISR 8F16  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR 8F38  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8C66  
                         _ringBufS_init 89BE                             __pdataBANK0 00A5  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 001E  
            __end_of_EXT_INT_Initialize 8804                     __end_of_help_button 8730  
       __end_of_eaDogM_WriteStringAtPos 879C                 __end_of_DMA1_Initialize 7EF4  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler 8B26  
                         __pcstackBANK0 00E4                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 85FA                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8E78                _UART1_RxInterruptHandler 000D  
              _UART2_TxInterruptHandler 0010                               __end_of_T FEE1  
                      _convert_adc_data 7E10               __size_of_ringBufS_put_dma 00AA  
                          _init_display 7394                  __end_of_DMA1_DMAOR_ISR 8F42  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 0001  
                __size_of_TMR6_CallBack 0022                 __end_of_DMA2_Initialize 8328  
                _PIN_MANAGER_Initialize 7B70                    __end_of_wait_lcd_set 8F76  
                         __pmediumconst FE50                               __ptext100 8E62  
                             __ptext101 8E78                               __ptext110 82CE  
                             __ptext102 8EA4                               __ptext111 7E8A  
                             __ptext103 7B70                               __ptext120 8218  
                             __ptext112 8F16                               __ptext104 8E8E  
                             __ptext121 863C                               __ptext113 7EF4  
                             __ptext105 7FC8                               __ptext130 8F86  
                             __ptext122 8C8A                               __ptext114 8B26  
                             __ptext106 8F62                               __ptext131 8F88  
                             __ptext123 8B76                               __ptext115 8B4E  
                             __ptext107 87D0                               __ptext140 8D8C  
                             __ptext132 7F60                               __ptext124 8EF8  
                             __ptext116 8BA0                               __ptext108 8AD6  
                             __ptext141 8E18                               __ptext133 8BC8  
                             __ptext125 8CD0                               __ptext117 8CAE  
                             __ptext109 8AFE                               __ptext142 8CF2  
                             __ptext134 88C2                               __ptext126 8F84  
                             __ptext118 8F82                               __ptext143 852C  
                             __ptext135 8BF0                               __ptext127 8F7C  
                             __ptext119 85B6                               __ptext144 8F08  
                             __ptext136 8D6E                               __ptext128 8944  
                             __ptext145 8F20                               __ptext137 8C18  
                             __ptext129 7D92                               __ptext146 8F2C  
                             __ptext138 88EE                               __ptext147 8F38  
                             __ptext139 8C40                               __ptext148 0000  
                    __end_of_StartTimer 86F8                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR 8944  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 62C6                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 7FC8  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 001A  
                       ?_DMA1_DMAOR_ISR 0053                                _INT0_ISR 8EF8  
                              _INT1_ISR 8BA0                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0060                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0380  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              i2u438_48 895A                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                                _PIR5bits 0039A5  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
                              i2u891_48 8BDA                __size_of_TMR5_Initialize 0046  
                              i2u893_48 8C02                                i2u895_48 8C2A  
                              i2u897_48 8C52                                i2u889_48 7F94  
                              i2u889_49 7FA8                               _set_vterm 8DC6  
                   __size_of_update_lcd 010E                             _help_button 86F8  
            __end_of_UART1_Transmit_ISR 88EE                                _TMR5_ISR 8218  
                              _TMR6_ISR 8E18                               _port_data 00D4  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                         _TMR5_CallBack 8C8A                              _ADCON0bits 003EF8  
                    __end_of_check_help 60C2                               _start_lcd 8F76  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 8CF2                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                        _set_display_info 8D50  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 7632  
                             copy_data1 7654                _INT0_SetInterruptHandler 8AFE  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 0030  
   __end_of_UART2_SetTxInterruptHandler 8A0E             _UART2_SetTxInterruptHandler 89E6  
                          _uart1RxCount 002D                            _uart2RxCount 0027  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 0586                           _wait_lcd_done 8DAA  
                          _send_lcd_cmd 8996                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8F88                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                 __end_of_DMA1_DMAA_ISR 8F36                      ___fpclassifyf@F463 0088  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 026C  
                              ___xxtofl 60C2                       ?_DMA1_DMADCNT_ISR 0053  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand 8EE8  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0059  
                              __ptext10 89BE                                __ptext11 8EDA  
                              __ptext20 6CFE                                __ptext12 7E10  
                              __ptext21 728A                                __ptext13 62C6  
                              __ptext30 8F70                                __ptext22 8894  
                              __ptext14 31D6                                __ptext31 8F76  
                              __ptext23 8730                                __ptext15 80F6  
                              __ptext40 8572                                __ptext32 7ADE  
                              __ptext24 717C                                __ptext16 8D32  
                              __ptext41 4C72                                __ptext33 4FB2  
                              __ptext25 8766                                __ptext17 60C2  
                              __ptext50 4906                                __ptext42 6BBE  
                              __ptext34 8158                                __ptext26 8328  
                              __ptext18 8F6A                                __ptext51 6486  
                              __ptext43 661C                                __ptext35 77A8  
                              __ptext27 8DAA                                __ptext19 5EB0  
                              __ptext60 6F50                                __ptext52 679C  
                              __ptext44 5C90                                __ptext36 1244  
                              __ptext28 8274                                __ptext61 6A70  
                              __ptext53 8414                                __ptext45 529E  
                              __ptext37 454C                                __ptext29 78FE  
                              __ptext70 6E2C                                __ptext62 3CD6  
                              __ptext54 2A1A                                __ptext46 0000  
                              __ptext38 7C8A                                __ptext71 8DFC  
                              __ptext63 845A                                __ptext55 83CC  
                              __ptext47 7D0E                                __ptext39 8804  
                              __ptext80 8EE8                                __ptext72 7854  
                              __ptext64 5A50                                __ptext56 21F0  
                              __ptext48 8834                                __ptext81 85FA  
                              __ptext73 57DC                                __ptext65 555C  
                              __ptext57 690E                                __ptext49 747E  
                              __ptext90 89E6                                __ptext82 86F8  
                              __ptext74 837A                                __ptext66 7C02  
                              __ptext58 76E4                                __ptext91 8A0E  
                              __ptext83 8C66                                __ptext75 8864  
                              __ptext67 7068                                __ptext59 375C  
                              __ptext92 8092                                __ptext84 86BC  
                              __ptext76 8DC6                                __ptext68 79A4  
                              __ptext93 8A36                                __ptext85 8F4A  
                              __ptext77 8ECA                                __ptext69 7A46  
                              __ptext94 8A5E                                __ptext86 8F52  
                              __ptext78 8D50                                __ptext95 891A  
                              __ptext87 8F5A                                __ptext79 8E32  
                              __ptext96 8A86                                __ptext88 84A0  
                              __ptext97 84E6                                __ptext89 81BA  
                              __ptext98 8AAE                                __ptext99 8E4A  
                      __size_of_isupper 0030                                us1001999 4CD8  
                              us1010999 45CC                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma 7854  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 03F6                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0053                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0007  
                             stoa@F1166 00CD                      ??_DMA1_DMASCNT_ISR 0059  
          __end_of_ADCC_StartConversion 8ECA                                _spi_link 0078  
                              _wdtdelay 8274              __end_of_UART2_Transmit_ISR 891A  
                              _vfprintf 77A8                __end_of_convert_adc_data 7E8A  
            __end_of_PWM8_LoadDutyValue 863C    __end_of_INT1_DefaultInterruptHandler 8F84  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 8F82  
                         ??_Default_ISR 0053                             _uart1RxHead 002F  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0032  
                           _uart2RxHead 0029                             _uart1RxTail 002E  
                        _get_raw_result 8D32                             _uart2TxHead 002C  
                           _uart1TxTail 0031                             _uart2RxTail 0028  
                           _uart2TxTail 002B                            _wait_lcd_set 8F70  
                    _EXT_INT_Initialize 87D0    __end_of_TMR6_DefaultInterruptHandler 8572  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 852C  
  __end_of_ADCC_DefaultInterruptHandler 8F88   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 8F86                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 896E  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 8EDA  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 79A4  
                 __end_of_mode_lamp_dim 8E4A                 __end_of_adc_int_handler 8F8A  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 728A                  _uart2TxBufferRemaining 002A  
                        _FVR_Initialize 8F62                  __end_of_get_raw_result 8D50  
                      _send_lcd_cmd_dma 8328                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0022        __end_of_INT1_SetInterruptHandler 8AFE  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 0059  
              _UART1_TxInterruptHandler 000A               __end_of_send_lcd_cmd_long 8996  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 8F82  
        __end_of_PIN_MANAGER_Initialize 7C02               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 6E2C                 _eaDogM_WriteStringAtPos 8766  
                         _get_vterm_ptr 8894                          _check_adc_scan 8F5A  
             __size_of_UART2_Initialize 005E  
