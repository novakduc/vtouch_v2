

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 14 13:50:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=4,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=4,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=4,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=4,class=CODE,delta=1
   111                           	psect	text90,global,reloc=4,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=4,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=4,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=4,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=4,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=4,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=4,class=CODE,delta=1
   125                           	psect	text104,global,reloc=4,class=CODE,delta=1
   126                           	psect	text105,global,reloc=4,class=CODE,delta=1
   127                           	psect	text106,global,reloc=4,class=CODE,delta=1
   128                           	psect	text107,global,reloc=4,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   133                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   136                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   137  0000                     
   138                           ; Version 2.05
   139                           ; Generated 20/12/2018 GMT
   140                           ; 
   141                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   142                           ; All rights reserved.
   143                           ; 
   144                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   145                           ; 
   146                           ; Redistribution and use in source and binary forms, with or without modification, are
   147                           ; permitted provided that the following conditions are met:
   148                           ; 
   149                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   150                           ;        conditions and the following disclaimer.
   151                           ; 
   152                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   153                           ;        of conditions and the following disclaimer in the documentation and/or other
   154                           ;        materials provided with the distribution.
   155                           ; 
   156                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   157                           ;        software without specific prior written permission.
   158                           ; 
   159                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   160                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   161                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   162                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   163                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   164                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   165                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   166                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   167                           ; 
   168                           ; 
   169                           ; Code-generator required, PIC18F57K42 Definitions
   170                           ; 
   171                           ; SFR Addresses
   172  0000                     
   173 ;;_mode	offset	0
   174 ;;_rxData	offset	0
   175 ;;_t_link	offset=-1 (param)
   176 ;;_stream	offset=-6 (param)
   177 ;;_function	offset=-7 (param)
   178 ;;_f	offset	0
   179 ;;_ap	offset	5
   180 ;;_s	offset=-2 (param)
   181 ;;_fmt	offset=-3 (param)
   182 ;;_rxData	offset	0
   183 ;;_r_link	offset=-1 (param)
   184 ;;_rxData	offset	0
   185 ;;_m_link	offset=-1 (param)
   186 ;;_k	offset	0
   187 ;;_checksum	offset	2
   188 ;;_i	offset	4
   189 ;;_byte_block	offset=-2 (param)
   190 ;;_length	offset=-3 (param)
   191 ;;_fake	offset=-4 (param)
   192 ;;_s_uart	offset=-5 (param)
   193 ;;_i	offset	0
   194 ;;_sum	offset	2
   195 ;;_byte_block	offset=-2 (param)
   196 ;;_byte_count	offset=-4 (param)
   197 ;;_bufData	offset=-1 (param)
   198 ;;_txData	offset=-1 (param)
   199 ;;_bufData	offset=-1 (param)
   200 ;;_txData	offset=-1 (param)
   201 ;;_byte_block	offset=-1 (param)
   202 ;;_clear	offset=-2 (param)
   203 ;;_numMilliseconds	offset=-2 (param)
   204 ;;_timer	offset=-1 (param)
   205 ;;_timer	offset=-1 (param)
   206 ;;_count	offset=-3 (param)
   207 ;;_readValue	offset	0
   208 ;;_readValue	offset	0
   209 ;;_cmd	offset=-1 (param)
   210 ;;_cmd	offset=-1 (param)
   211 ;;_data	offset=-1 (param)
   212 ;;__this	offset=-2 (param)
   213 ;;_r	offset=-1 (param)
   214 ;;_c	offset=-2 (param)
   215 ;;_strPtr	offset=-3 (param)
   216 ;;_strPtr	offset=-1 (param)
   217 ;;_cmd	offset=-1 (param)
   218 ;;_strPtr	offset=-1 (param)
   219 ;;_delay	offset=-4 (param)
   220 ;;__this	offset=-2 (param)
   221 ;;_clearBuffer	offset=-3 (param)
   222 ;;_s	offset	0
   223 ;;_k	offset	2
   224 ;;_dest	offset=-2 (param)
   225 ;;_c	offset=-4 (param)
   226 ;;_n	offset=-6 (param)
   227 ;;_ap	offset	0
   228 ;;_fmt	offset=-2 (param)
   229 ;;_cfmt	offset	0
   230 ;;_fp	offset=-2 (param)
   231 ;;_fmt	offset=-3 (param)
   232 ;;_ap	offset=-5 (param)
   233 ;;_ll	offset	0
   234 ;;_cp	offset	8
   235 ;;_c	offset	10
   236 ;;_fp	offset=-2 (param)
   237 ;;_fmt	offset=-4 (param)
   238 ;;_ap	offset=-6 (param)
   239 ;;_r	offset	0
   240 ;;_l	offset	1
   241 ;;__l	offset=-1 (param)
   242 ;;__r	offset=-2 (param)
   243 ;;_n	offset=-4 (param)
   244 ;;_nuls	offset	0
   245 ;;_l	offset	7
   246 ;;_p	offset	9
   247 ;;_cp	offset	11
   248 ;;_w	offset	13
   249 ;;_i	offset	15
   250 ;;_fp	offset=-2 (param)
   251 ;;_s	offset=-4 (param)
   252 ;;_dtoa$3846	offset	0
   253 ;;_n	offset	2
   254 ;;_i	offset	10
   255 ;;_s	offset	12
   256 ;;_w	offset	14
   257 ;;_p	offset	16
   258 ;;_fp	offset=-2 (param)
   259 ;;_d	offset=-10 (param)
   260 ;;_a	offset=-2 (param)
   261 ;;_sign	offset	0
   262 ;;_counter	offset	1
   263 ;;_dividend	offset=-8 (param)
   264 ;;_divisor	offset=-16 (param)
   265 ;;_quotient	offset	0
   266 ;;_sign	offset	8
   267 ;;_counter	offset	9
   268 ;;_dividend	offset=-8 (param)
   269 ;;_divisor	offset=-16 (param)
   270 ;;_w	offset	0
   271 ;;_fp	offset=-2 (param)
   272 ;;_c	offset=-3 (param)
   273 ;;_w	offset	0
   274 ;;_i	offset	2
   275 ;;_fp	offset=-2 (param)
   276 ;;_buf	offset=-4 (param)
   277 ;;_p	offset=-6 (param)
   278 ;;_a	offset	0
   279 ;;_s	offset=-2 (param)
   280 ;;_i	offset	0
   281 ;;_c	offset	2
   282 ;;_s	offset=-2 (param)
   283 ;;_fp	offset=-4 (param)
   284 ;;_c	offset=-2 (param)
   285 ;;_fp	offset=-4 (param)
   286 ;;_c	offset=-1 (param)
   287 ;;__this	offset=-2 (param)
   288 ;;_c	offset=-3 (param)
   289 ;;_InterruptHandler	offset=-3 (param)
   290 ;;_InterruptHandler	offset=-3 (param)
   291 ;;_InterruptHandler	offset=-3 (param)
   292 ;;_InterruptHandler	offset=-3 (param)
   293 ;;_InterruptHandler	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_state	offset	0
   296 ;;_InterruptHandler	offset=-3 (param)
   297 ;;_InterruptHandler	offset=-3 (param)
   298 ;;_InterruptHandler	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_i	offset	0
   301 ;;_timerVal	offset=-2 (param)
   302                           
   303                           	psect	idataCOMRAM
   304  0062D2                     __pidataCOMRAM:
   305                           	opt callstack 0
   306                           
   307                           ;initializer for r_protocol@retry
   308  0062D2  03                 	db	3
   309                           
   310                           	psect	idataBANK0
   311  0056C4                     __pidataBANK0:
   312                           	opt callstack 0
   313                           
   314                           ;initializer for stoa@F1144
   315  0056C4  28                 	db	40
   316  0056C5  6E                 	db	110
   317  0056C6  75                 	db	117
   318  0056C7  6C                 	db	108
   319  0056C8  6C                 	db	108
   320  0056C9  29                 	db	41
   321  0056CA  00                 	db	0
   322                           
   323                           ;initializer for _V
   324  0056CB  00                 	db	0
   325  0056CC  00                 	db	0
   326  0056CD  00                 	db	0
   327  0056CE  00                 	db	0
   328  0056CF  00                 	db	0
   329  0056D0  00                 	db	0
   330  0056D1  00                 	db	0
   331  0056D2  00                 	db	0
   332  0056D3  00                 	db	0
   333  0056D4  00                 	db	0
   334  0056D5  00                 	db	0
   335  0056D6  00                 	db	0
   336  0056D7  00                 	db	0
   337  0056D8  00                 	db	0
   338  0056D9  00                 	db	0
   339  0056DA  00                 	db	0
   340  0056DB  00                 	db	0
   341  0056DC  00                 	db	0
   342  0056DD  00                 	db	0
   343  0056DE  00                 	db	0
   344  0056DF  00                 	db	0
   345  0056E0  00                 	db	0
   346  0056E1  00                 	db	0
   347  0056E2  00                 	db	0
   348  0056E3  00                 	db	0
   349  0056E4  00                 	db	0
   350  0056E5  00                 	db	0
   351  0056E6  00                 	db	0
   352  0056E7  00                 	db	0
   353  0056E8  00                 	db	0
   354  0056E9  00                 	db	0
   355  0056EA  00                 	db	0
   356  0056EB  00                 	db	0
   357  0056EC  00                 	db	0
   358  0056ED  00                 	db	0
   359  0056EE  00                 	db	0
   360  0056EF  00                 	db	0
   361  0056F0  00                 	db	0
   362  0056F1  00                 	db	0
   363  0056F2  00                 	db	0
   364  0056F3  00                 	db	0
   365  0056F4  00                 	db	0
   366  0056F5  00                 	db	0
   367  0056F6  00                 	db	0
   368  0056F7  00                 	db	0
   369  0056F8  00                 	db	0
   370  0056F9  00                 	db	0
   371  0056FA  00                 	db	0
   372  0056FB  00                 	db	0
   373  0056FC  00                 	db	0
   374  0056FD  00                 	db	0
   375  0056FE  00                 	db	0
   376  0056FF  00                 	db	0
   377  005700  00                 	db	0
   378  005701  00                 	db	0
   379  005702  00                 	db	0
   380  005703  00                 	db	0
   381  005704  00                 	db	0
   382  005705  00                 	db	0
   383  005706  00                 	db	0
   384  005707  00                 	db	0
   385  005708  00                 	db	0
   386  005709  00                 	db	0
   387  00570A  00                 	db	0
   388  00570B  00                 	db	0
   389  00570C  00                 	db	0
   390  00570D  00                 	db	0
   391  00570E  00                 	db	0
   392  00570F  00                 	db	0
   393  005710  0000               	dw	0
   394  005712  0000               	dw	0
   395  005714  0000               	dw	0
   396  005716  0000               	dw	0
   397  005718  00                 	db	0
   398  005719  00                 	db	0
   399  00571A  00                 	db	0
   400  00571B  00                 	db	0
   401  00571C  00                 	db	0
   402  00571D  0000               	dw	0
   403  00571F  0000               	dw	0
   404  005721  00                 	db	0
   405  005722  00                 	db	0
   406  005723  01                 	db	1
   407                           
   408                           	psect	idataBANK1
   409  004EC6                     __pidataBANK1:
   410                           	opt callstack 0
   411                           
   412                           ;initializer for _H10
   413  004EC6  0000               	dw	0
   414  004EC8  0001               	dw	1
   415  004ECA  0000               	dw	0
   416  004ECC  01                 	db	1
   417  004ECD  80                 	db	128
   418  004ECE  01                 	db	1
   419  004ECF  81                 	db	129
   420  004ED0  00                 	db	0
   421  004ED1  00                 	db	0
   422  004ED2  0A                 	db	10
   423  004ED3  0000               	dw	0
   424  004ED5  00                 	db	0
   425  004ED6  00                 	db	0
   426  004ED7  00                 	db	0
   427  004ED8  00                 	db	0
   428  004ED9  00                 	db	0
   429  004EDA  00                 	db	0
   430  004EDB  00                 	db	0
   431  004EDC  00                 	db	0
   432  004EDD  00                 	db	0
   433  004EDE  00                 	db	0
   434  004EDF  0A                 	db	10
   435  004EE0  0000               	dw	0
   436  004EE2  0001               	dw	1
   437  004EE4  0000               	dw	0
   438  004EE6  01                 	db	1
   439  004EE7  80                 	db	128
   440  004EE8  00                 	db	0
   441  004EE9  01                 	db	1
   442  004EEA  00                 	db	0
   443  004EEB  00                 	db	0
   444  004EEC  0A                 	db	10
   445  004EED  0000               	dw	0
   446  004EEF  0001               	dw	1
   447  004EF1  0000               	dw	0
   448  004EF3  01                 	db	1
   449  004EF4  80                 	db	128
   450  004EF5  01                 	db	1
   451  004EF6  81                 	db	129
   452  004EF7  00                 	db	0
   453  004EF8  80                 	db	128
   454  004EF9  0A                 	db	10
   455  004EFA  0000               	dw	0
   456  004EFC  0001               	dw	1
   457  004EFE  0000               	dw	0
   458  004F00  01                 	db	1
   459  004F01  80                 	db	128
   460  004F02  11                 	db	17
   461  004F03  82                 	db	130
   462  004F04  00                 	db	0
   463  004F05  00                 	db	0
   464  004F06  0A                 	db	10
   465                           
   466                           ;initializer for _H27
   467  004F07  0000               	dw	0
   468  004F09  00                 	db	0
   469  004F0A  00                 	db	0
   470  004F0B  00                 	db	0
   471  004F0C  00                 	db	0
   472  004F0D  00                 	db	0
   473  004F0E  00                 	db	0
   474  004F0F  00                 	db	0
   475  004F10  00                 	db	0
   476  004F11  00                 	db	0
   477  004F12  00                 	db	0
   478  004F13  00                 	db	0
   479  004F14  00                 	db	0
   480  004F15  00                 	db	0
   481  004F16  00                 	db	0
   482  004F17  00                 	db	0
   483  004F18  00                 	db	0
   484  004F19  00                 	db	0
   485  004F1A  0001               	dw	1
   486  004F1C  0000               	dw	0
   487  004F1E  01                 	db	1
   488  004F1F  80                 	db	128
   489  004F20  0D                 	db	13
   490  004F21  81                 	db	129
   491  004F22  00                 	db	0
   492  004F23  80                 	db	128
   493  004F24  1B                 	db	27
   494                           
   495                           ;initializer for _H12
   496  004F25  0000               	dw	0
   497  004F27  00                 	db	0
   498  004F28  01                 	db	1
   499  004F29  0001               	dw	1
   500  004F2B  0000               	dw	0
   501  004F2D  01                 	db	1
   502  004F2E  80                 	db	128
   503  004F2F  02                 	db	2
   504  004F30  01                 	db	1
   505  004F31  00                 	db	0
   506  004F32  00                 	db	0
   507  004F33  0C                 	db	12
   508  004F34  0000               	dw	0
   509  004F36  00                 	db	0
   510  004F37  01                 	db	1
   511  004F38  0001               	dw	1
   512  004F3A  0000               	dw	0
   513  004F3C  01                 	db	1
   514  004F3D  80                 	db	128
   515  004F3E  0D                 	db	13
   516  004F3F  81                 	db	129
   517  004F40  00                 	db	0
   518  004F41  00                 	db	0
   519  004F42  0C                 	db	12
   520                           
   521                           ;initializer for _H24
   522  004F43  0000               	dw	0
   523  004F45  41                 	db	65
   524  004F46  20                 	db	32
   525  004F47  30                 	db	48
   526  004F48  31                 	db	49
   527  004F49  30                 	db	48
   528  004F4A  39                 	db	57
   529  004F4B  31                 	db	49
   530  004F4C  31                 	db	49
   531  004F4D  30                 	db	48
   532  004F4E  38                 	db	56
   533  004F4F  34                 	db	52
   534  004F50  36                 	db	54
   535  004F51  30                 	db	48
   536  004F52  30                 	db	48
   537  004F53  0001               	dw	1
   538  004F55  0000               	dw	0
   539  004F57  01                 	db	1
   540  004F58  80                 	db	128
   541  004F59  12                 	db	18
   542  004F5A  02                 	db	2
   543  004F5B  00                 	db	0
   544  004F5C  00                 	db	0
   545  004F5D  18                 	db	24
   546                           
   547                           ;initializer for _H17
   548  004F5E  0000               	dw	0
   549  004F60  00                 	db	0
   550  004F61  01                 	db	1
   551  004F62  00                 	db	0
   552  004F63  01                 	db	1
   553  004F64  21                 	db	33
   554  004F65  02                 	db	2
   555  004F66  01                 	db	1
   556  004F67  0001               	dw	1
   557  004F69  0000               	dw	0
   558  004F6B  01                 	db	1
   559  004F6C  80                 	db	128
   560  004F6D  0E                 	db	14
   561  004F6E  01                 	db	1
   562  004F6F  00                 	db	0
   563  004F70  00                 	db	0
   564  004F71  11                 	db	17
   565                           
   566                           ;initializer for _H14
   567  004F72  0000               	dw	0
   568  004F74  00                 	db	0
   569  004F75  41                 	db	65
   570  004F76  11                 	db	17
   571  004F77  01                 	db	1
   572  004F78  0001               	dw	1
   573  004F7A  0000               	dw	0
   574  004F7C  01                 	db	1
   575  004F7D  80                 	db	128
   576  004F7E  04                 	db	4
   577  004F7F  01                 	db	1
   578  004F80  00                 	db	0
   579  004F81  00                 	db	0
   580  004F82  0E                 	db	14
   581                           
   582                           ;initializer for _H13
   583  004F83  0000               	dw	0
   584  004F85  00                 	db	0
   585  004F86  01                 	db	1
   586  004F87  21                 	db	33
   587  004F88  0001               	dw	1
   588  004F8A  0000               	dw	0
   589  004F8C  01                 	db	1
   590  004F8D  80                 	db	128
   591  004F8E  0C                 	db	12
   592  004F8F  06                 	db	6
   593  004F90  00                 	db	0
   594  004F91  00                 	db	0
   595  004F92  0D                 	db	13
   596                           
   597                           	psect	idataBANK3
   598  005B8A                     __pidataBANK3:
   599                           	opt callstack 0
   600                           
   601                           ;initializer for _H53
   602  005B8A  0000               	dw	0
   603  005B8C  00                 	db	0
   604  005B8D  00                 	db	0
   605  005B8E  00                 	db	0
   606  005B8F  00                 	db	0
   607  005B90  00                 	db	0
   608  005B91  00                 	db	0
   609  005B92  00                 	db	0
   610  005B93  00                 	db	0
   611  005B94  00                 	db	0
   612  005B95  00                 	db	0
   613  005B96  00                 	db	0
   614  005B97  00                 	db	0
   615  005B98  00                 	db	0
   616  005B99  00                 	db	0
   617  005B9A  00                 	db	0
   618  005B9B  00                 	db	0
   619  005B9C  00                 	db	0
   620  005B9D  00                 	db	0
   621  005B9E  00                 	db	0
   622  005B9F  00                 	db	0
   623  005BA0  00                 	db	0
   624  005BA1  00                 	db	0
   625  005BA2  00                 	db	0
   626  005BA3  00                 	db	0
   627  005BA4  00                 	db	0
   628  005BA5  00                 	db	0
   629  005BA6  00                 	db	0
   630  005BA7  00                 	db	0
   631  005BA8  00                 	db	0
   632  005BA9  00                 	db	0
   633  005BAA  00                 	db	0
   634  005BAB  00                 	db	0
   635  005BAC  00                 	db	0
   636  005BAD  00                 	db	0
   637  005BAE  00                 	db	0
   638  005BAF  00                 	db	0
   639  005BB0  00                 	db	0
   640  005BB1  00                 	db	0
   641  005BB2  00                 	db	0
   642  005BB3  46                 	db	70
   643  005BB4  01                 	db	1
   644  005BB5  41                 	db	65
   645  005BB6  00                 	db	0
   646  005BB7  0001               	dw	1
   647  005BB9  0000               	dw	0
   648  005BBB  01                 	db	1
   649  005BBC  80                 	db	128
   650  005BBD  03                 	db	3
   651  005BBE  8A                 	db	138
   652  005BBF  00                 	db	0
   653  005BC0  00                 	db	0
   654  005BC1  35                 	db	53
   655  0000                     _IVTADL	set	14493
   656  0000                     _IVTADH	set	14494
   657  0000                     _IVTADU	set	14495
   658  0000                     _PIE8bits	set	14744
   659  0000                     _PIR8bits	set	14760
   660  0000                     _SCANPR	set	14839
   661  0000                     _DMA2PR	set	14836
   662  0000                     _DMA1PR	set	14835
   663  0000                     _MAINPR	set	14834
   664  0000                     _ISRPR	set	14833
   665  0000                     _PIE2bits	set	14738
   666  0000                     _PIR2bits	set	14754
   667  0000                     _PIE9bits	set	14745
   668  0000                     _PIR9bits	set	14761
   669  0000                     _PIE6bits	set	14742
   670  0000                     _PIE3bits	set	14739
   671  0000                     _PMD7	set	14791
   672  0000                     _PMD6	set	14790
   673  0000                     _PMD5	set	14789
   674  0000                     _PMD4	set	14788
   675  0000                     _PMD3	set	14787
   676  0000                     _PMD2	set	14786
   677  0000                     _PMD1	set	14785
   678  0000                     _PMD0	set	14784
   679  0000                     _OSCTUNE	set	14814
   680  0000                     _OSCFRQ	set	14815
   681  0000                     _OSCEN	set	14813
   682  0000                     _OSCCON3	set	14811
   683  0000                     _OSCCON1	set	14809
   684  0000                     _IPR8bits	set	14728
   685  0000                     _IPR9bits	set	14729
   686  0000                     _IPR7bits	set	14727
   687  0000                     _IPR5bits	set	14725
   688  0000                     _IPR1bits	set	14721
   689  0000                     _IPR3bits	set	14723
   690  0000                     _IPR6bits	set	14726
   691  0000                     _IPR2bits	set	14722
   692  0000                     _PIE7bits	set	14743
   693  0000                     _PIE5bits	set	14741
   694  0000                     _PIE1bits	set	14737
   695  0000                     _PIR7bits	set	14759
   696  0000                     _PIR5bits	set	14757
   697  0000                     _PIR1bits	set	14753
   698  0000                     _PLLR	set	118496
   699  0000                     _SPI1SDIPPS	set	15071
   700  0000                     _RC6PPS	set	14870
   701  0000                     _RC5PPS	set	14869
   702  0000                     _RA6PPS	set	14854
   703  0000                     _RA5PPS	set	14853
   704  0000                     _RA4PPS	set	14852
   705  0000                     _SPI1SCKPPS	set	15070
   706  0000                     _U1RXPPS	set	15077
   707  0000                     _INT1PPS	set	15041
   708  0000                     _INT2PPS	set	15042
   709  0000                     _INT0PPS	set	15040
   710  0000                     _RC3PPS	set	14867
   711  0000                     _RB6PPS	set	14862
   712  0000                     _U2RXPPS	set	15080
   713  0000                     _SLRCONF	set	14995
   714  0000                     _SLRCONE	set	14979
   715  0000                     _SLRCOND	set	14963
   716  0000                     _SLRCONC	set	14947
   717  0000                     _SLRCONB	set	14931
   718  0000                     _SLRCONA	set	14915
   719  0000                     _ODCOND	set	14962
   720  0000                     _ODCONC	set	14946
   721  0000                     _ODCONB	set	14930
   722  0000                     _ODCONA	set	14914
   723  0000                     _ODCONF	set	14994
   724  0000                     _ODCONE	set	14978
   725  0000                     _WPUC	set	14945
   726  0000                     _WPUA	set	14913
   727  0000                     _WPUB	set	14929
   728  0000                     _WPUE	set	14977
   729  0000                     _WPUF	set	14993
   730  0000                     _WPUD	set	14961
   731  0000                     _ANSELA	set	14912
   732  0000                     _ANSELF	set	14992
   733  0000                     _ANSELE	set	14976
   734  0000                     _ANSELB	set	14928
   735  0000                     _ANSELC	set	14944
   736  0000                     _ANSELD	set	14960
   737  0000                     _DMA1SSA	set	15353
   738  0000                     _DMA1DSZ	set	15342
   739  0000                     _DMA1SSZ	set	15351
   740  0000                     _DMA1DSA	set	15344
   741  0000                     _DMA1CON0bits	set	15356
   742  0000                     _DMA1CON1bits	set	15357
   743  0000                     _DMA1CON0	set	15356
   744  0000                     _DMA1AIRQ	set	15358
   745  0000                     _DMA1SIRQ	set	15359
   746  0000                     _DMA1CON1	set	15357
   747  0000                     _CLC1CON	set	15476
   748  0000                     _CLC1GLS3	set	15485
   749  0000                     _CLC1GLS2	set	15484
   750  0000                     _CLC1GLS1	set	15483
   751  0000                     _CLC1GLS0	set	15482
   752  0000                     _CLC1SEL3	set	15481
   753  0000                     _CLC1SEL2	set	15480
   754  0000                     _CLC1SEL1	set	15479
   755  0000                     _CLC1SEL0	set	15478
   756  0000                     _CLC1POL	set	15477
   757  0000                     _CLKRCON	set	15589
   758  0000                     _CLKRCLK	set	15590
   759  0000                     _MD1CARL	set	15613
   760  0000                     _MD1CARH	set	15614
   761  0000                     _MD1SRC	set	15612
   762  0000                     _MD1CON1bits	set	15611
   763  0000                     _MD1CON0bits	set	15610
   764  0000                     _SPI1INTFbits	set	15642
   765  0000                     _SPI1RXB	set	15632
   766  0000                     _SPI1TXB	set	15633
   767  0000                     _SPI1TCNTL	set	15634
   768  0000                     _SPI1CON0	set	15636
   769  0000                     _SPI1CLK	set	15644
   770  0000                     _SPI1BAUD	set	15641
   771  0000                     _SPI1CON2	set	15638
   772  0000                     _SPI1CON1	set	15637
   773  0000                     _U2RXB	set	15824
   774  0000                     _U2TXB	set	15826
   775  0000                     _U2ERRIE	set	15842
   776  0000                     _U2ERRIR	set	15841
   777  0000                     _U2UIR	set	15840
   778  0000                     _U2FIFO	set	15839
   779  0000                     _U2BRGH	set	15838
   780  0000                     _U2BRGL	set	15837
   781  0000                     _U2CON2	set	15836
   782  0000                     _U2CON1	set	15835
   783  0000                     _U2CON0	set	15834
   784  0000                     _U2P3L	set	15832
   785  0000                     _U2P2L	set	15830
   786  0000                     _U2P1L	set	15828
   787  0000                     _U1RXB	set	15848
   788  0000                     _U1TXB	set	15850
   789  0000                     _U1ERRIE	set	15866
   790  0000                     _U1ERRIR	set	15865
   791  0000                     _U1UIR	set	15864
   792  0000                     _U1FIFO	set	15863
   793  0000                     _U1BRGH	set	15862
   794  0000                     _U1BRGL	set	15861
   795  0000                     _U1CON2	set	15860
   796  0000                     _U1CON1	set	15859
   797  0000                     _U1CON0	set	15858
   798  0000                     _U1P3H	set	15857
   799  0000                     _U1P3L	set	15856
   800  0000                     _U1P2H	set	15855
   801  0000                     _U1P2L	set	15854
   802  0000                     _U1P1H	set	15853
   803  0000                     _U1P1L	set	15852
   804  0000                     _ADCON0	set	16120
   805  0000                     _ADCLK	set	16127
   806  0000                     _ADACT	set	16126
   807  0000                     _ADREF	set	16125
   808  0000                     _ADSTAT	set	16124
   809  0000                     _ADCON3	set	16123
   810  0000                     _ADCON2	set	16122
   811  0000                     _ADCON1	set	16121
   812  0000                     _ADPREH	set	16119
   813  0000                     _ADPREL	set	16118
   814  0000                     _ADCAP	set	16117
   815  0000                     _ADACQH	set	16116
   816  0000                     _ADACQL	set	16115
   817  0000                     _ADPCH	set	16113
   818  0000                     _ADRPT	set	16108
   819  0000                     _ADACCU	set	16106
   820  0000                     _ADSTPTH	set	16101
   821  0000                     _ADSTPTL	set	16100
   822  0000                     _ADUTHH	set	16097
   823  0000                     _ADUTHL	set	16096
   824  0000                     _ADLTHH	set	16095
   825  0000                     _ADLTHL	set	16094
   826  0000                     _NCO1CONbits	set	16190
   827  0000                     _NCO1INCL	set	16187
   828  0000                     _NCO1INCH	set	16188
   829  0000                     _NCO1INCU	set	16189
   830  0000                     _NCO1ACCL	set	16184
   831  0000                     _NCO1ACCH	set	16185
   832  0000                     _NCO1ACCU	set	16186
   833  0000                     _NCO1CLK	set	16191
   834  0000                     _NCO1CON	set	16190
   835  0000                     _LATCbits	set	16316
   836  0000                     _LATDbits	set	16317
   837  0000                     _PORTBbits	set	16331
   838  0000                     _LATEbits	set	16318
   839  0000                     _T5CONbits	set	16282
   840  0000                     _T5CON	set	16282
   841  0000                     _TMR5L	set	16280
   842  0000                     _TMR5H	set	16281
   843  0000                     _T5CLK	set	16285
   844  0000                     _T5GATE	set	16284
   845  0000                     _T5GCON	set	16283
   846  0000                     _T6CON	set	16276
   847  0000                     _T6TMR	set	16274
   848  0000                     _T6PR	set	16275
   849  0000                     _T6RST	set	16279
   850  0000                     _T6HLT	set	16277
   851  0000                     _T6CLKCON	set	16278
   852  0000                     _TRISD	set	16325
   853  0000                     _TRISC	set	16324
   854  0000                     _TRISB	set	16323
   855  0000                     _TRISA	set	16322
   856  0000                     _TRISF	set	16327
   857  0000                     _TRISE	set	16326
   858  0000                     _LATC	set	16316
   859  0000                     _LATB	set	16315
   860  0000                     _LATF	set	16319
   861  0000                     _LATA	set	16314
   862  0000                     _LATD	set	16317
   863  0000                     _LATE	set	16318
   864  0000                     _IVTLOCKbits	set	16340
   865  0000                     _IVTLOCK	set	16340
   866  0000                     _INTCON0bits	set	16338
   867  0000                     _GIE	set	130711
   868                           
   869                           	psect	smallconst
   870  002000                     __psmallconst:
   871                           	opt callstack 0
   872  002000  00                 	db	0
   873  002001                     STR_15:
   874  002001  20                 	db	32
   875  002002  52                 	db	82	;'R'
   876  002003  25                 	db	37
   877  002004  64                 	db	100	;'d'
   878  002005  20                 	db	32
   879  002006  54                 	db	84	;'T'
   880  002007  25                 	db	37
   881  002008  64                 	db	100	;'d'
   882  002009  20                 	db	32
   883  00200A  46                 	db	70	;'F'
   884  00200B  52                 	db	82	;'R'
   885  00200C  25                 	db	37
   886  00200D  64                 	db	100	;'d'
   887  00200E  20                 	db	32
   888  00200F  46                 	db	70	;'F'
   889  002010  53                 	db	83	;'S'
   890  002011  25                 	db	37
   891  002012  64                 	db	100	;'d'
   892  002013  20                 	db	32
   893  002014  23                 	db	35
   894  002015  00                 	db	0
   895  002016                     STR_9:
   896  002016  45                 	db	69	;'E'
   897  002017  20                 	db	32
   898  002018  52                 	db	82	;'R'
   899  002019  25                 	db	37
   900  00201A  64                 	db	100	;'d'
   901  00201B  20                 	db	32
   902  00201C  54                 	db	84	;'T'
   903  00201D  25                 	db	37
   904  00201E  64                 	db	100	;'d'
   905  00201F  20                 	db	32
   906  002020  45                 	db	69	;'E'
   907  002021  25                 	db	37
   908  002022  64                 	db	100	;'d'
   909  002023  20                 	db	32
   910  002024  41                 	db	65	;'A'
   911  002025  25                 	db	37
   912  002026  64                 	db	100	;'d'
   913  002027  20                 	db	32
   914  002028  23                 	db	35
   915  002029  00                 	db	0
   916  00202A                     STR_11:
   917  00202A  20                 	db	32
   918  00202B  4C                 	db	76	;'L'
   919  00202C  4F                 	db	79	;'O'
   920  00202D  47                 	db	71	;'G'
   921  00202E  20                 	db	32
   922  00202F  4D                 	db	77	;'M'
   923  002030  4F                 	db	79	;'O'
   924  002031  44                 	db	68	;'D'
   925  002032  45                 	db	69	;'E'
   926  002033  20                 	db	32
   927  002034  25                 	db	37
   928  002035  64                 	db	100	;'d'
   929  002036  20                 	db	32
   930  002037  20                 	db	32
   931  002038  20                 	db	32
   932  002039  20                 	db	32
   933  00203A  20                 	db	32
   934  00203B  23                 	db	35
   935  00203C  00                 	db	0
   936  00203D                     STR_5:
   937  00203D  20                 	db	32
   938  00203E  48                 	db	72	;'H'
   939  00203F  4F                 	db	79	;'O'
   940  002040  53                 	db	83	;'S'
   941  002041  54                 	db	84	;'T'
   942  002042  20                 	db	32
   943  002043  4D                 	db	77	;'M'
   944  002044  4F                 	db	79	;'O'
   945  002045  44                 	db	68	;'D'
   946  002046  45                 	db	69	;'E'
   947  002047  20                 	db	32
   948  002048  25                 	db	37
   949  002049  6C                 	db	108	;'l'
   950  00204A  64                 	db	100	;'d'
   951  00204B  20                 	db	32
   952  00204C  20                 	db	32
   953  00204D  20                 	db	32
   954  00204E  23                 	db	35
   955  00204F  00                 	db	0
   956  002050                     STR_12:
   957  002050  20                 	db	32
   958  002051  53                 	db	83	;'S'
   959  002052  25                 	db	37
   960  002053  64                 	db	100	;'d'
   961  002054  46                 	db	70	;'F'
   962  002055  25                 	db	37
   963  002056  64                 	db	100	;'d'
   964  002057  20                 	db	32
   965  002058  23                 	db	35
   966  002059  25                 	db	37
   967  00205A  6C                 	db	108	;'l'
   968  00205B  64                 	db	100	;'d'
   969  00205C  20                 	db	32
   970  00205D  20                 	db	32
   971  00205E  20                 	db	32
   972  00205F  20                 	db	32
   973  002060  00                 	db	0
   974  002061                     STR_1:
   975  002061  20                 	db	32
   976  002062  52                 	db	82	;'R'
   977  002063  56                 	db	86	;'V'
   978  002064  49                 	db	73	;'I'
   979  002065  20                 	db	32
   980  002066  48                 	db	72	;'H'
   981  002067  4F                 	db	79	;'O'
   982  002068  53                 	db	83	;'S'
   983  002069  54                 	db	84	;'T'
   984  00206A  20                 	db	32
   985  00206B  54                 	db	84	;'T'
   986  00206C  45                 	db	69	;'E'
   987  00206D  53                 	db	83	;'S'
   988  00206E  54                 	db	84	;'T'
   989  00206F  45                 	db	69	;'E'
   990  002070  52                 	db	82	;'R'
   991  002071  00                 	db	0
   992  002072                     STR_4:
   993  002072  20                 	db	32
   994  002073  46                 	db	70	;'F'
   995  002074  47                 	db	71	;'G'
   996  002075  42                 	db	66	;'B'
   997  002076  40                 	db	64	;'@'
   998  002077  4D                 	db	77	;'M'
   999  002078  43                 	db	67	;'C'
  1000  002079  48                 	db	72	;'H'
  1001  00207A  50                 	db	80	;'P'
  1002  00207B  20                 	db	32
  1003  00207C  46                 	db	70	;'F'
  1004  00207D  41                 	db	65	;'A'
  1005  00207E  42                 	db	66	;'B'
  1006  00207F  34                 	db	52	;'4'
  1007  002080  00                 	db	0
  1008  002081                     STR_6:
  1009  002081  20                 	db	32
  1010  002082  53                 	db	83	;'S'
  1011  002083  25                 	db	37
  1012  002084  64                 	db	100	;'d'
  1013  002085  46                 	db	70	;'F'
  1014  002086  25                 	db	37
  1015  002087  64                 	db	100	;'d'
  1016  002088  20                 	db	32
  1017  002089  23                 	db	35
  1018  00208A  20                 	db	32
  1019  00208B  20                 	db	32
  1020  00208C  20                 	db	32
  1021  00208D  20                 	db	32
  1022  00208E  00                 	db	0
  1023  00208F                     STR_2:
  1024  00208F  20                 	db	32
  1025  002090  56                 	db	86	;'V'
  1026  002091  65                 	db	101	;'e'
  1027  002092  72                 	db	114	;'r'
  1028  002093  73                 	db	115	;'s'
  1029  002094  69                 	db	105	;'i'
  1030  002095  6F                 	db	111	;'o'
  1031  002096  6E                 	db	110	;'n'
  1032  002097  20                 	db	32
  1033  002098  25                 	db	37
  1034  002099  73                 	db	115	;'s'
  1035  00209A  00                 	db	0
  1036  00209B                     STR_8:
  1037  00209B  20                 	db	32
  1038  00209C  4F                 	db	79	;'O'
  1039  00209D  4B                 	db	75	;'K'
  1040  00209E  20                 	db	32
  1041  00209F  23                 	db	35
  1042  0020A0  00                 	db	0
  1043  0020A1                     STR_7:
  1044  0020A1  20                 	db	32
  1045  0020A2  4F                 	db	79	;'O'
  1046  0020A3  4B                 	db	75	;'K'
  1047  0020A4  51                 	db	81	;'Q'
  1048  0020A5  23                 	db	35
  1049  0020A6  00                 	db	0
  1050  0020A7                     STR_3:
  1051  0020A7  30                 	db	48	;'0'
  1052  0020A8  2E                 	db	46
  1053  0020A9  37                 	db	55	;'7'
  1054  0020AA  32                 	db	50	;'2'
  1055  0020AB  41                 	db	65	;'A'
  1056  0020AC  00                 	db	0
  1057  0020AD                     STR_19:
  1058  0020AD  6C                 	db	108	;'l'
  1059  0020AE  64                 	db	100	;'d'
  1060  0020AF  00                 	db	0
  1061  0020B0                     STR_23:
  1062  0020B0  6C                 	db	108	;'l'
  1063  0020B1  69                 	db	105	;'i'
  1064  0020B2  00                 	db	0
  1065  0020B3                     STR_17:
  1066  0020B3  25                 	db	37
  1067  0020B4  63                 	db	99	;'c'
  1068  0020B5  00                 	db	0
  1069  0000                     
  1070                           ; #config settings
  1071  0020B6  00                 	db	0	; dummy byte at the end
  1072  0000                     
  1073                           	psect	cinit
  1074  004DF6                     __pcinit:
  1075                           	opt callstack 0
  1076  004DF6                     start_initialization:
  1077                           	opt callstack 0
  1078  004DF6                     __initialization:
  1079                           	opt callstack 0
  1080                           
  1081                           ; Initialize objects allocated to BANK3 (56 bytes)
  1082                           ; load TBLPTR registers with __pidataBANK3
  1083  004DF6  0E8A               	movlw	low __pidataBANK3
  1084  004DF8  6EF6               	movwf	tblptrl,c
  1085  004DFA  0E5B               	movlw	high __pidataBANK3
  1086  004DFC  6EF7               	movwf	tblptrh,c
  1087  004DFE  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1088  004E00  6EF8               	movwf	tblptru,c
  1089  004E02  EE00  F386         	lfsr	0,__pdataBANK3
  1090  004E06  EE20 F038          	lfsr	2,56
  1091  004E0A                     copy_data0:
  1092  004E0A  0009               	tblrd		*+
  1093  004E0C  006F FFD7 FFEE     	movff	tablat,postinc0
  1094  004E12  50DD               	movf	postdec2,w,c
  1095  004E14  50D9               	movf	fsr2l,w,c
  1096  004E16  E1F9               	bnz	copy_data0
  1097                           
  1098                           ; Initialize objects allocated to BANK1 (205 bytes)
  1099                           ; load TBLPTR registers with __pidataBANK1
  1100  004E18  0EC6               	movlw	low __pidataBANK1
  1101  004E1A  6EF6               	movwf	tblptrl,c
  1102  004E1C  0E4E               	movlw	high __pidataBANK1
  1103  004E1E  6EF7               	movwf	tblptrh,c
  1104  004E20  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1105  004E22  6EF8               	movwf	tblptru,c
  1106  004E24  EE00  F100         	lfsr	0,__pdataBANK1
  1107  004E28  EE20 F0CD          	lfsr	2,205
  1108  004E2C                     copy_data1:
  1109  004E2C  0009               	tblrd		*+
  1110  004E2E  006F FFD7 FFEE     	movff	tablat,postinc0
  1111  004E34  50DD               	movf	postdec2,w,c
  1112  004E36  50D9               	movf	fsr2l,w,c
  1113  004E38  E1F9               	bnz	copy_data1
  1114                           
  1115                           ; Initialize objects allocated to BANK0 (96 bytes)
  1116                           ; load TBLPTR registers with __pidataBANK0
  1117  004E3A  0EC4               	movlw	low __pidataBANK0
  1118  004E3C  6EF6               	movwf	tblptrl,c
  1119  004E3E  0E56               	movlw	high __pidataBANK0
  1120  004E40  6EF7               	movwf	tblptrh,c
  1121  004E42  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1122  004E44  6EF8               	movwf	tblptru,c
  1123  004E46  EE00  F060         	lfsr	0,__pdataBANK0
  1124  004E4A  EE20 F060          	lfsr	2,96
  1125  004E4E                     copy_data2:
  1126  004E4E  0009               	tblrd		*+
  1127  004E50  006F FFD7 FFEE     	movff	tablat,postinc0
  1128  004E56  50DD               	movf	postdec2,w,c
  1129  004E58  50D9               	movf	fsr2l,w,c
  1130  004E5A  E1F9               	bnz	copy_data2
  1131                           
  1132                           ; Initialize objects allocated to COMRAM (1 bytes)
  1133                           ; load TBLPTR registers with __pidataCOMRAM
  1134  004E5C  0ED2               	movlw	low __pidataCOMRAM
  1135  004E5E  6EF6               	movwf	tblptrl,c
  1136  004E60  0E62               	movlw	high __pidataCOMRAM
  1137  004E62  6EF7               	movwf	tblptrh,c
  1138  004E64  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1139  004E66  6EF8               	movwf	tblptru,c
  1140  004E68  0009               	tblrd		*+	;fetch initializer
  1141  004E6A  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1142                           
  1143                           ; Clear objects allocated to BANK3 (134 bytes)
  1144  004E70  EE00  F300         	lfsr	0,__pbssBANK3
  1145  004E74  0E86               	movlw	134
  1146  004E76                     clear_0:
  1147  004E76  6AEE               	clrf	postinc0,c
  1148  004E78  06E8               	decf	wreg,f,c
  1149  004E7A  E1FD               	bnz	clear_0
  1150                           
  1151                           ; Clear objects allocated to BANK2 (256 bytes)
  1152  004E7C  EE00  F200         	lfsr	0,__pbssBANK2
  1153  004E80  EE20 F100          	lfsr	2,256
  1154  004E84                     clear_1:
  1155  004E84  6AEE               	clrf	postinc0,c
  1156  004E86  50DD               	movf	postdec2,w,c
  1157  004E88  50D9               	movf	fsr2l,w,c
  1158  004E8A  E1FC               	bnz	clear_1
  1159  004E8C  50DA               	movf	fsr2h,w,c
  1160  004E8E  E1FA               	bnz	clear_1
  1161                           
  1162                           ; Clear objects allocated to BANK1 (32 bytes)
  1163  004E90  EE00  F1CD         	lfsr	0,__pbssBANK1
  1164  004E94  0E20               	movlw	32
  1165  004E96                     clear_2:
  1166  004E96  6AEE               	clrf	postinc0,c
  1167  004E98  06E8               	decf	wreg,f,c
  1168  004E9A  E1FD               	bnz	clear_2
  1169                           
  1170                           ; Clear objects allocated to BANK0 (58 bytes)
  1171  004E9C  EE00  F0C0         	lfsr	0,__pbssBANK0
  1172  004EA0  0E3A               	movlw	58
  1173  004EA2                     clear_3:
  1174  004EA2  6AEE               	clrf	postinc0,c
  1175  004EA4  06E8               	decf	wreg,f,c
  1176  004EA6  E1FD               	bnz	clear_3
  1177                           
  1178                           ; Clear objects allocated to COMRAM (58 bytes)
  1179  004EA8  EE00  F001         	lfsr	0,__pbssCOMRAM
  1180  004EAC  0E3A               	movlw	58
  1181  004EAE                     clear_4:
  1182  004EAE  6AEE               	clrf	postinc0,c
  1183  004EB0  06E8               	decf	wreg,f,c
  1184  004EB2  E1FD               	bnz	clear_4
  1185                           
  1186                           ;
  1187                           ; Setup IVTBASE
  1188                           ;
  1189  004EB4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1190  004EB6  6ED5               	movwf	213,c
  1191  004EB8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1192  004EBA  6ED6               	movwf	214,c
  1193  004EBC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1194  004EBE  6ED7               	movwf	215,c
  1195  004EC0                     end_of_initialization:
  1196                           	opt callstack 0
  1197  004EC0                     __end_of__initialization:
  1198                           	opt callstack 0
  1199  004EC0  0100               	movlb	0
  1200  004EC2  EF5C  F010         	goto	_main	;jump to C main() function
  1201                           
  1202                           	psect	bssCOMRAM
  1203  000001                     __pbssCOMRAM:
  1204                           	opt callstack 0
  1205  000001                     secs_II_message@block:
  1206                           	opt callstack 0
  1207  000001                     	ds	7
  1208  000008                     _ADCC_ADI_InterruptHandler:
  1209                           	opt callstack 0
  1210  000008                     	ds	3
  1211  00000B                     _UART1_TxInterruptHandler:
  1212                           	opt callstack 0
  1213  00000B                     	ds	3
  1214  00000E                     _UART1_RxInterruptHandler:
  1215                           	opt callstack 0
  1216  00000E                     	ds	3
  1217  000011                     _UART2_TxInterruptHandler:
  1218                           	opt callstack 0
  1219  000011                     	ds	3
  1220  000014                     _UART2_RxInterruptHandler:
  1221                           	opt callstack 0
  1222  000014                     	ds	3
  1223  000017                     _INT2_InterruptHandler:
  1224                           	opt callstack 0
  1225  000017                     	ds	3
  1226  00001A                     _INT1_InterruptHandler:
  1227                           	opt callstack 0
  1228  00001A                     	ds	3
  1229  00001D                     _INT0_InterruptHandler:
  1230                           	opt callstack 0
  1231  00001D                     	ds	3
  1232  000020                     _width:
  1233                           	opt callstack 0
  1234  000020                     	ds	2
  1235  000022                     _prec:
  1236                           	opt callstack 0
  1237  000022                     	ds	2
  1238  000024                     _flags:
  1239                           	opt callstack 0
  1240  000024                     	ds	2
  1241  000026                     TMR5_ISR@CountCallBack:
  1242                           	opt callstack 0
  1243  000026                     	ds	2
  1244  000028                     _timer5ReloadVal:
  1245                           	opt callstack 0
  1246  000028                     	ds	2
  1247  00002A                     t_protocol@requeue:
  1248                           	opt callstack 0
  1249  00002A                     	ds	1
  1250  00002B                     t_protocol@retry:
  1251                           	opt callstack 0
  1252  00002B                     	ds	1
  1253  00002C                     r_protocol@rxData_l:
  1254                           	opt callstack 0
  1255  00002C                     	ds	1
  1256  00002D                     m_protocol@rxData_l:
  1257                           	opt callstack 0
  1258  00002D                     	ds	1
  1259  00002E                     _mode_sw:
  1260                           	opt callstack 0
  1261  00002E                     	ds	1
  1262  00002F                     _uart2RxCount:
  1263                           	opt callstack 0
  1264  00002F                     	ds	1
  1265  000030                     _uart2RxTail:
  1266                           	opt callstack 0
  1267  000030                     	ds	1
  1268  000031                     _uart2RxHead:
  1269                           	opt callstack 0
  1270  000031                     	ds	1
  1271  000032                     _uart2TxBufferRemaining:
  1272                           	opt callstack 0
  1273  000032                     	ds	1
  1274  000033                     _uart2TxTail:
  1275                           	opt callstack 0
  1276  000033                     	ds	1
  1277  000034                     _uart2TxHead:
  1278                           	opt callstack 0
  1279  000034                     	ds	1
  1280  000035                     _uart1RxCount:
  1281                           	opt callstack 0
  1282  000035                     	ds	1
  1283  000036                     _uart1RxTail:
  1284                           	opt callstack 0
  1285  000036                     	ds	1
  1286  000037                     _uart1RxHead:
  1287                           	opt callstack 0
  1288  000037                     	ds	1
  1289  000038                     _uart1TxBufferRemaining:
  1290                           	opt callstack 0
  1291  000038                     	ds	1
  1292  000039                     _uart1TxTail:
  1293                           	opt callstack 0
  1294  000039                     	ds	1
  1295  00003A                     _uart1TxHead:
  1296                           	opt callstack 0
  1297  00003A                     	ds	1
  1298                           
  1299                           	psect	dataCOMRAM
  1300  00005D                     __pdataCOMRAM:
  1301                           	opt callstack 0
  1302  00005D                     r_protocol@retry:
  1303                           	opt callstack 0
  1304  00005D                     	ds	1
  1305                           
  1306                           	psect	bssBANK0
  1307  0000C0                     __pbssBANK0:
  1308                           	opt callstack 0
  1309  0000C0                     _r_block:
  1310                           	opt callstack 0
  1311  0000C0                     	ds	13
  1312  0000CD                     _spi_link:
  1313                           	opt callstack 0
  1314  0000CD                     	ds	12
  1315  0000D9                     _tickCount:
  1316                           	opt callstack 0
  1317  0000D9                     	ds	12
  1318  0000E5                     t_protocol@block:
  1319                           	opt callstack 0
  1320  0000E5                     	ds	7
  1321  0000EC                     wdtdelay@dcount:
  1322                           	opt callstack 0
  1323  0000EC                     	ds	4
  1324  0000F0                     _TMR5_InterruptHandler:
  1325                           	opt callstack 0
  1326  0000F0                     	ds	3
  1327  0000F3                     _TMR6_InterruptHandler:
  1328                           	opt callstack 0
  1329  0000F3                     	ds	3
  1330  0000F6                     _nout:
  1331                           	opt callstack 0
  1332  0000F6                     	ds	2
  1333  0000F8                     run_checksum@sum:
  1334                           	opt callstack 0
  1335  0000F8                     	ds	2
  1336                           
  1337                           	psect	dataBANK0
  1338  000060                     __pdataBANK0:
  1339                           	opt callstack 0
  1340  000060                     stoa@F1144:
  1341                           	opt callstack 0
  1342  000060                     	ds	7
  1343  000067                     _V:
  1344                           	opt callstack 0
  1345  000067                     	ds	89
  1346                           
  1347                           	psect	bssBANK1
  1348  0001CD                     __pbssBANK1:
  1349                           	opt callstack 0
  1350  0001CD                     _dbuf:
  1351                           	opt callstack 0
  1352  0001CD                     	ds	32
  1353                           
  1354                           	psect	dataBANK1
  1355  000100                     __pdataBANK1:
  1356                           	opt callstack 0
  1357  000100                     _H10:
  1358                           	opt callstack 0
  1359  000100                     	ds	65
  1360  000141                     _H27:
  1361                           	opt callstack 0
  1362  000141                     	ds	30
  1363  00015F                     _H12:
  1364                           	opt callstack 0
  1365  00015F                     	ds	30
  1366  00017D                     _H24:
  1367                           	opt callstack 0
  1368  00017D                     	ds	27
  1369  000198                     _H17:
  1370                           	opt callstack 0
  1371  000198                     	ds	20
  1372  0001AC                     _H14:
  1373                           	opt callstack 0
  1374  0001AC                     	ds	17
  1375  0001BD                     _H13:
  1376                           	opt callstack 0
  1377  0001BD                     	ds	16
  1378                           
  1379                           	psect	bssBANK2
  1380  000200                     __pbssBANK2:
  1381                           	opt callstack 0
  1382  000200                     _uart2RxBuffer:
  1383                           	opt callstack 0
  1384  000200                     	ds	64
  1385  000240                     _uart2TxBuffer:
  1386                           	opt callstack 0
  1387  000240                     	ds	64
  1388  000280                     _uart1RxBuffer:
  1389                           	opt callstack 0
  1390  000280                     	ds	64
  1391  0002C0                     _uart1TxBuffer:
  1392                           	opt callstack 0
  1393  0002C0                     	ds	64
  1394                           
  1395                           	psect	bssBANK3
  1396  000300                     __pbssBANK3:
  1397                           	opt callstack 0
  1398  000300                     _ring_buf2:
  1399                           	opt callstack 0
  1400  000300                     	ds	67
  1401  000343                     _ring_buf1:
  1402                           	opt callstack 0
  1403  000343                     	ds	67
  1404                           
  1405                           	psect	dataBANK3
  1406  000386                     __pdataBANK3:
  1407                           	opt callstack 0
  1408  000386                     _H53:
  1409                           	opt callstack 0
  1410  000386                     	ds	56
  1411                           
  1412                           	psect	cstackCOMRAM
  1413  00005B                     __pcstackCOMRAM:
  1414                           	opt callstack 0
  1415  00005B                     ??_TMR6_ISR:
  1416  00005B                     
  1417                           ; 1 bytes @ 0x0
  1418  00005B                     	ds	1
  1419  00005C                     ??_TMR5_ISR:
  1420                           
  1421                           ; 1 bytes @ 0x1
  1422  00005C                     	ds	1
  1423                           
  1424 ;;
  1425 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1426 ;;
  1427 ;; *************** function _main *****************
  1428 ;; Defined at:
  1429 ;;		line 283 in file "main.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  mode            1  [STACK] enum E16897
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1  [STACK] void 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 4/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1447 ;;Total ram usage:        0 bytes
  1448 ;; Hardware stack levels required when called:   14
  1449 ;; This function calls:
  1450 ;;		_SYSTEM_Initialize
  1451 ;;		_UART1_put_buffer
  1452 ;;		_UART2_put_buffer
  1453 ;;		_WaitMs
  1454 ;;		_eaDogM_WriteCommand
  1455 ;;		_eaDogM_WriteStringAtPos
  1456 ;;		_init_display
  1457 ;;		_m_protocol
  1458 ;;		_r_protocol
  1459 ;;		_sprintf
  1460 ;;		_t_protocol
  1461 ;;		_wait_lcd_done
  1462 ;; This function is called by:
  1463 ;;		Startup code after reset
  1464 ;; This function uses a reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text0
  1468  0020B8                     __ptext0:
  1469                           	opt callstack 0
  1470  0020B8                     _main:
  1471                           	opt callstack 0
  1472                           
  1473                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1474  0020B8  52E6               	movf	postinc1,f,c
  1475                           
  1476                           ;main.c: 285:  UI_STATES mode;;main.c: 288:  SYSTEM_Initialize();
  1477                           
  1478                           ;incstack = 0
  1479  0020BA  ECCA  F02C         	call	_SYSTEM_Initialize	;wreg free
  1480                           
  1481                           ; BSR set to: 60
  1482                           ;main.c: 291:  (INTCON0bits.GIEH = 1);
  1483  0020BE  8ED2               	bsf	16338,7,c	;volatile
  1484                           
  1485                           ; BSR set to: 60
  1486                           ;main.c: 294:  (INTCON0bits.GIEL = 1);
  1487  0020C0  8CD2               	bsf	16338,6,c	;volatile
  1488                           
  1489                           ; BSR set to: 60
  1490                           ;main.c: 296:  V.ui_state = UI_STATE_INIT;
  1491  0020C2  0100               	movlb	0	; () banked
  1492  0020C4  6B68               	clrf	(_V+1)& (0+255),b
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;main.c: 297:  if (PORTBbits.RB0) {
  1496  0020C6  A0CB               	btfss	16331,0,c	;volatile
  1497  0020C8  D004               	goto	l8673
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;main.c: 298:   mode = UI_STATE_HOST;
  1501                           ;stkvar	_mode @ sp[(-1)+0]
  1502  0020CA  0EFF               	movlw	-1
  1503  0020CC  6AE3               	clrf	plusw1,c
  1504  0020CE  2AE3               	incf	plusw1,f,c
  1505                           
  1506                           ;main.c: 299:  } else {
  1507  0020D0  D004               	goto	l8675
  1508  0020D2                     l8673:
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;main.c: 300:   mode = UI_STATE_LOG;
  1512                           ;stkvar	_mode @ sp[(-1)+0]
  1513  0020D2  0EFF               	movlw	-1
  1514  0020D4  6AE3               	clrf	plusw1,c
  1515  0020D6  80E3               	bsf	plusw1,0,c
  1516  0020D8  82E3               	bsf	plusw1,1,c	;indir
  1517  0020DA                     l8675:
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;main.c: 303:  if (mode == UI_STATE_LOG) {
  1521                           ;stkvar	_mode @ sp[(-1)+0]
  1522  0020DA  0EFF               	movlw	-1
  1523  0020DC  006F FF8C  F03B    	movff	plusw1,btemp
  1524  0020E2  0E03               	movlw	3
  1525  0020E4  183B               	xorwf	btemp,w,c
  1526  0020E6  A4D8               	btfss	status,2,c
  1527  0020E8  D003               	goto	l1226
  1528                           
  1529                           ; BSR set to: 0
  1530                           
  1531                           ;main.c: 304:   do { LATDbits.LATD0 = 1; } while(0);
  1532  0020EA  80BD               	bsf	16317,0,c	;volatile
  1533                           
  1534                           ; BSR set to: 0
  1535                           
  1536                           ;main.c: 305:   do { LATDbits.LATD1 = 1; } while(0);
  1537  0020EC  82BD               	bsf	16317,1,c	;volatile
  1538  0020EE  D226               	goto	l8849
  1539  0020F0                     l1226:
  1540                           
  1541                           ; BSR set to: 0
  1542  0020F0  90BD               	bcf	16317,0,c	;volatile
  1543                           
  1544                           ; BSR set to: 0
  1545                           
  1546                           ;main.c: 308:   do { LATDbits.LATD1 = 0; } while(0);
  1547  0020F2  92BD               	bcf	16317,1,c	;volatile
  1548  0020F4  D223               	goto	l8849
  1549  0020F6                     l8677:
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;main.c: 314:    init_display();
  1553  0020F6  EC1D  F026         	call	_init_display	;wreg free
  1554                           
  1555                           ; BSR set to: 61
  1556                           ;main.c: 315:    eaDogM_WriteCommand(0b00001100);
  1557  0020FA  0E0C               	movlw	12
  1558  0020FC  6EE6               	movwf	postinc1,c
  1559  0020FE  EC0E  F031         	call	_eaDogM_WriteCommand	;wreg free
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;main.c: 317:    V.ui_state = mode;
  1563                           ;stkvar	_mode @ sp[(-1)+0]
  1564  002102  0EFF               	movlw	-1
  1565  002104  006F FF8C  F068    	movff	plusw1,_V+1
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;main.c: 318:    V.s_state = SEQ_STATE_INIT;
  1569  00210A  6B67               	clrf	_V& (0+255),b
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;main.c: 347:    sprintf(V.buf, " RVI HOST TESTER");
  1573  00210C  0E61               	movlw	STR_1& (0+255)
  1574  00210E  6EE6               	movwf	postinc1,c
  1575  002110  0E67               	movlw	_V& (0+255)
  1576  002112  0F05               	addlw	5
  1577  002114  6EE6               	movwf	postinc1,c
  1578  002116  0E02               	movlw	2
  1579  002118  6EE6               	movwf	postinc1,c
  1580  00211A  ECCA  F027         	call	_sprintf	;wreg free
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;main.c: 348:    wait_lcd_done();
  1584  00211E  EC9D  F030         	call	_wait_lcd_done	;wreg free
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;main.c: 349:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1588  002122  0E67               	movlw	_V& (0+255)
  1589  002124  0F05               	addlw	5
  1590  002126  6EE6               	movwf	postinc1,c
  1591  002128  0E00               	movlw	0
  1592  00212A  6EE6               	movwf	postinc1,c
  1593  00212C  0E00               	movlw	0
  1594  00212E  6EE6               	movwf	postinc1,c
  1595  002130  ECF7  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1596                           
  1597                           ; BSR set to: 59
  1598                           ;main.c: 350:    sprintf(V.buf, " Version %s", "0.72A");
  1599  002134  0EA7               	movlw	STR_3& (0+255)
  1600  002136  6E46               	movwf	btemp+11,c
  1601  002138  0060  F11B  FFE6   	movff	btemp+11,postinc1
  1602  00213E  0E20               	movlw	high __smallconst
  1603  002140  6EE6               	movwf	postinc1,c
  1604  002142  0E8F               	movlw	STR_2& (0+255)
  1605  002144  6EE6               	movwf	postinc1,c
  1606  002146  0E67               	movlw	_V& (0+255)
  1607  002148  0F05               	addlw	5
  1608  00214A  6EE6               	movwf	postinc1,c
  1609  00214C  0E04               	movlw	4
  1610  00214E  6EE6               	movwf	postinc1,c
  1611  002150  ECCA  F027         	call	_sprintf	;wreg free
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;main.c: 351:    wait_lcd_done();
  1615  002154  EC9D  F030         	call	_wait_lcd_done	;wreg free
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;main.c: 352:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1619  002158  0E67               	movlw	_V& (0+255)
  1620  00215A  0F05               	addlw	5
  1621  00215C  6EE6               	movwf	postinc1,c
  1622  00215E  0E00               	movlw	0
  1623  002160  6EE6               	movwf	postinc1,c
  1624  002162  0E01               	movlw	1
  1625  002164  6EE6               	movwf	postinc1,c
  1626  002166  ECF7  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1627                           
  1628                           ; BSR set to: 59
  1629                           ;main.c: 353:    sprintf(V.buf, " FGB@MCHP FAB4");
  1630  00216A  0E72               	movlw	STR_4& (0+255)
  1631  00216C  6EE6               	movwf	postinc1,c
  1632  00216E  0E67               	movlw	_V& (0+255)
  1633  002170  0F05               	addlw	5
  1634  002172  6EE6               	movwf	postinc1,c
  1635  002174  0E02               	movlw	2
  1636  002176  6EE6               	movwf	postinc1,c
  1637  002178  ECCA  F027         	call	_sprintf	;wreg free
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;main.c: 354:    wait_lcd_done();
  1641  00217C  EC9D  F030         	call	_wait_lcd_done	;wreg free
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 355:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1645  002180  0E67               	movlw	_V& (0+255)
  1646  002182  0F05               	addlw	5
  1647  002184  6EE6               	movwf	postinc1,c
  1648  002186  0E00               	movlw	0
  1649  002188  6EE6               	movwf	postinc1,c
  1650  00218A  0E02               	movlw	2
  1651  00218C  6EE6               	movwf	postinc1,c
  1652  00218E  ECF7  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1653                           
  1654                           ; BSR set to: 59
  1655                           ;main.c: 357:    WaitMs(3000);
  1656  002192  0EB8               	movlw	184
  1657  002194  6EE6               	movwf	postinc1,c
  1658  002196  0E0B               	movlw	11
  1659  002198  6EE6               	movwf	postinc1,c
  1660  00219A  EC63  F02E         	call	_WaitMs	;wreg free
  1661                           
  1662                           ;main.c: 358:    break;
  1663  00219E  D1E2               	goto	l1271
  1664  0021A0                     l1236:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;main.c: 362:     V.r_l_state = LINK_STATE_IDLE;
  1668  0021A0  6B6A               	clrf	(_V+3)& (0+255),b
  1669                           
  1670                           ;main.c: 363:     V.t_l_state = LINK_STATE_IDLE;
  1671  0021A2  6B6B               	clrf	(_V+4)& (0+255),b
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;main.c: 364:     V.s_state = SEQ_STATE_RX;
  1675  0021A4  0E01               	movlw	1
  1676  0021A6  6F67               	movwf	_V& (0+255),b
  1677                           
  1678                           ;main.c: 365:     if (!V.error && !V.abort) {
  1679  0021A8  51B6               	movf	(_V+79)& (0+255),w,b
  1680  0021AA  A4D8               	btfss	status,2,c
  1681  0021AC  D024               	goto	l8717
  1682                           
  1683                           ; BSR set to: 0
  1684  0021AE  51B7               	movf	(_V+80)& (0+255),w,b
  1685  0021B0  A4D8               	btfss	status,2,c
  1686  0021B2  D021               	goto	l8717
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;main.c: 366:      sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1690  0021B4  0060  F2B3  FFE6   	movff	_V+69,postinc1
  1691  0021BA  0060  F2B7  FFE6   	movff	_V+70,postinc1
  1692  0021C0  0060  F2BB  FFE6   	movff	_V+71,postinc1
  1693  0021C6  0060  F2BF  FFE6   	movff	_V+72,postinc1
  1694  0021CC  0E3D               	movlw	STR_5& (0+255)
  1695  0021CE  6EE6               	movwf	postinc1,c
  1696  0021D0  0E67               	movlw	_V& (0+255)
  1697  0021D2  0F05               	addlw	5
  1698  0021D4  6EE6               	movwf	postinc1,c
  1699  0021D6  0E06               	movlw	6
  1700  0021D8  6EE6               	movwf	postinc1,c
  1701  0021DA  ECCA  F027         	call	_sprintf	;wreg free
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;main.c: 367:      V.buf[16] = 0;
  1705  0021DE  6B7C               	clrf	(_V+21)& (0+255),b
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;main.c: 368:      wait_lcd_done();
  1709  0021E0  EC9D  F030         	call	_wait_lcd_done	;wreg free
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;main.c: 369:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  1713  0021E4  0E67               	movlw	_V& (0+255)
  1714  0021E6  0F05               	addlw	5
  1715  0021E8  6EE6               	movwf	postinc1,c
  1716  0021EA  0E00               	movlw	0
  1717  0021EC  6EE6               	movwf	postinc1,c
  1718  0021EE  0E02               	movlw	2
  1719  0021F0  6EE6               	movwf	postinc1,c
  1720  0021F2  ECF7  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1721  0021F6                     l8717:
  1722                           
  1723                           ;main.c: 372:     WaitMs(50);
  1724  0021F6  0E32               	movlw	50
  1725  0021F8  6EE6               	movwf	postinc1,c
  1726  0021FA  0E00               	movlw	0
  1727  0021FC  6EE6               	movwf	postinc1,c
  1728  0021FE  EC63  F02E         	call	_WaitMs	;wreg free
  1729                           
  1730                           ;main.c: 373:     UART1_put_buffer(0x05);
  1731  002202  0E05               	movlw	5
  1732  002204  6EE6               	movwf	postinc1,c
  1733  002206  EC4E  F02E         	call	_UART1_put_buffer	;wreg free
  1734                           
  1735                           ;main.c: 375:     break;
  1736  00220A  D0C9               	goto	l8783
  1737  00220C                     l8721:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;main.c: 380:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1741  00220C  0E67               	movlw	_V& (0+255)
  1742  00220E  0F03               	addlw	3
  1743  002210  6EE6               	movwf	postinc1,c
  1744  002212  ECE8  F019         	call	_r_protocol	;wreg free
  1745  002216  0E04               	movlw	4
  1746  002218  183B               	xorwf	btemp,w,c
  1747  00221A  A4D8               	btfss	status,2,c
  1748  00221C  D02F               	goto	l8741
  1749                           
  1750                           ;main.c: 381:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1751  00221E  0100               	movlb	0	; () banked
  1752  002220  51B5               	movf	(_V+78)& (0+255),w,b
  1753  002222  6EE6               	movwf	postinc1,c
  1754  002224  0E00               	movlw	0
  1755  002226  6EE6               	movwf	postinc1,c
  1756  002228  51B4               	movf	(_V+77)& (0+255),w,b
  1757  00222A  6EE6               	movwf	postinc1,c
  1758  00222C  0E00               	movlw	0
  1759  00222E  6EE6               	movwf	postinc1,c
  1760  002230  0E81               	movlw	STR_6& (0+255)
  1761  002232  6EE6               	movwf	postinc1,c
  1762  002234  0E67               	movlw	_V& (0+255)
  1763  002236  0F05               	addlw	5
  1764  002238  6EE6               	movwf	postinc1,c
  1765  00223A  0E06               	movlw	6
  1766  00223C  6EE6               	movwf	postinc1,c
  1767  00223E  ECCA  F027         	call	_sprintf	;wreg free
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;main.c: 382:      V.buf[11] = 0;
  1771  002242  6B77               	clrf	(_V+16)& (0+255),b
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;main.c: 383:      wait_lcd_done();
  1775  002244  EC9D  F030         	call	_wait_lcd_done	;wreg free
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;main.c: 384:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1779  002248  0E67               	movlw	_V& (0+255)
  1780  00224A  0F05               	addlw	5
  1781  00224C  6EE6               	movwf	postinc1,c
  1782  00224E  0E00               	movlw	0
  1783  002250  6EE6               	movwf	postinc1,c
  1784  002252  0E00               	movlw	0
  1785  002254  6EE6               	movwf	postinc1,c
  1786  002256  ECF7  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1787                           
  1788                           ; BSR set to: 59
  1789                           ;main.c: 386:      WaitMs(5);
  1790  00225A  0E05               	movlw	5
  1791  00225C  6EE6               	movwf	postinc1,c
  1792  00225E  0E00               	movlw	0
  1793  002260  6EE6               	movwf	postinc1,c
  1794  002262  EC63  F02E         	call	_WaitMs	;wreg free
  1795                           
  1796                           ;main.c: 388:      if (V.wbit) {
  1797  002266  0100               	movlb	0	; () banked
  1798  002268  A3BD               	btfss	(_V+86)& (0+255),1,b
  1799  00226A  D006               	goto	l8739
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;main.c: 389:       V.s_state = SEQ_STATE_TX;
  1803  00226C  0E02               	movlw	2
  1804  00226E  6F67               	movwf	_V& (0+255),b
  1805                           
  1806                           ;main.c: 390:       V.failed_send = 0;
  1807  002270  0E87               	movlw	-121
  1808  002272  17BD               	andwf	(_V+86)& (0+255),f,b
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;main.c: 391:       V.t_l_state = LINK_STATE_IDLE;
  1812  002274  6B6B               	clrf	(_V+4)& (0+255),b
  1813                           
  1814                           ;main.c: 392:      } else {
  1815  002276  D002               	goto	l8741
  1816  002278                     l8739:
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;main.c: 393:       V.s_state = SEQ_STATE_TRIGGER;
  1820  002278  0E03               	movlw	3
  1821  00227A  6F67               	movwf	_V& (0+255),b
  1822  00227C                     l8741:
  1823                           
  1824                           ;main.c: 396:     if (V.r_l_state == LINK_STATE_ERROR)
  1825  00227C  0E06               	movlw	6
  1826  00227E  0100               	movlb	0	; () banked
  1827  002280  196A               	xorwf	(_V+3)& (0+255),w,b
  1828  002282  A4D8               	btfss	status,2,c
  1829  002284  D08C               	goto	l8783
  1830  002286                     u5740:
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;main.c: 397:      V.s_state = SEQ_STATE_ERROR;
  1834  002286  0E06               	movlw	6
  1835  002288  6F67               	movwf	_V& (0+255),b
  1836  00228A  D089               	goto	l8783
  1837  00228C                     l8745:
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;main.c: 403:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1841  00228C  0E67               	movlw	_V& (0+255)
  1842  00228E  0F04               	addlw	4
  1843  002290  6EE6               	movwf	postinc1,c
  1844  002292  EC40  F01E         	call	_t_protocol	;wreg free
  1845  002296  0E04               	movlw	4
  1846  002298  183B               	xorwf	btemp,w,c
  1847  00229A  A4D8               	btfss	status,2,c
  1848  00229C  D003               	goto	l8749
  1849                           
  1850                           ;main.c: 404:      V.s_state = SEQ_STATE_TRIGGER;
  1851  00229E  0E03               	movlw	3
  1852  0022A0  0100               	movlb	0	; () banked
  1853  0022A2  6F67               	movwf	_V& (0+255),b
  1854  0022A4                     l8749:
  1855                           
  1856                           ;main.c: 406:     if (V.t_l_state == LINK_STATE_ERROR)
  1857  0022A4  0E06               	movlw	6
  1858  0022A6  0100               	movlb	0	; () banked
  1859  0022A8  196B               	xorwf	(_V+4)& (0+255),w,b
  1860  0022AA  B4D8               	btfsc	status,2,c
  1861  0022AC  D7EC               	goto	u5740
  1862  0022AE  D077               	goto	l8783
  1863  0022B0                     l1247:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;main.c: 410:     if (V.queue) {
  1867  0022B0  A9BE               	btfss	(_V+87)& (0+255),4,b
  1868  0022B2  D01C               	goto	l8763
  1869                           
  1870                           ; BSR set to: 0
  1871  0022B4  A4BE               	btfss	16318,2,c	;volatile
  1872  0022B6  D002               	goto	u5780
  1873  0022B8  0E01               	movlw	1
  1874  0022BA  D001               	goto	u5786
  1875  0022BC                     u5780:
  1876  0022BC  0E00               	movlw	0
  1877  0022BE                     u5786:
  1878  0022BE  0AFF               	xorlw	255
  1879  0022C0  6E46               	movwf	btemp+11,c
  1880  0022C2  4646               	rlncf	btemp+11,f,c
  1881  0022C4  4646               	rlncf	btemp+11,f,c
  1882  0022C6  50BE               	movf	16318,w,c	;volatile
  1883  0022C8  1846               	xorwf	btemp+11,w,c
  1884  0022CA  0BFB               	andlw	-5
  1885  0022CC  1846               	xorwf	btemp+11,w,c
  1886  0022CE  6EBE               	movwf	16318,c	;volatile
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;main.c: 412:      V.r_l_state = LINK_STATE_IDLE;
  1890  0022D0  6B6A               	clrf	(_V+3)& (0+255),b
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;main.c: 413:      V.t_l_state = LINK_STATE_IDLE;
  1894  0022D2  6B6B               	clrf	(_V+4)& (0+255),b
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;main.c: 414:      V.s_state = SEQ_STATE_TX;
  1898  0022D4  0E02               	movlw	2
  1899  0022D6  6F67               	movwf	_V& (0+255),b
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;main.c: 415:      sprintf(V.buf, " OKQ#");
  1903  0022D8  0EA1               	movlw	STR_7& (0+255)
  1904  0022DA  6EE6               	movwf	postinc1,c
  1905  0022DC  0E67               	movlw	_V& (0+255)
  1906  0022DE  0F05               	addlw	5
  1907  0022E0  6EE6               	movwf	postinc1,c
  1908  0022E2  0E02               	movlw	2
  1909  0022E4  6EE6               	movwf	postinc1,c
  1910  0022E6  ECCA  F027         	call	_sprintf	;wreg free
  1911                           
  1912                           ;main.c: 416:     } else {
  1913  0022EA  D00B               	goto	l8767
  1914  0022EC                     l8763:
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main.c: 417:      V.s_state = SEQ_STATE_DONE;
  1918  0022EC  0E05               	movlw	5
  1919  0022EE  6F67               	movwf	_V& (0+255),b
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;main.c: 418:      sprintf(V.buf, " OK #");
  1923  0022F0  0E9B               	movlw	STR_8& (0+255)
  1924  0022F2  6EE6               	movwf	postinc1,c
  1925  0022F4  0E67               	movlw	_V& (0+255)
  1926  0022F6  0F05               	addlw	5
  1927  0022F8  6EE6               	movwf	postinc1,c
  1928  0022FA  0E02               	movlw	2
  1929  0022FC  6EE6               	movwf	postinc1,c
  1930  0022FE  ECCA  F027         	call	_sprintf	;wreg free
  1931  002302                     l8767:
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;main.c: 420:     wait_lcd_done();
  1935  002302  EC9D  F030         	call	_wait_lcd_done	;wreg free
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;main.c: 421:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1939  002306  0E67               	movlw	_V& (0+255)
  1940  002308  0F05               	addlw	5
  1941  00230A  6EE6               	movwf	postinc1,c
  1942  00230C  0E0B               	movlw	11
  1943  00230E  6EE6               	movwf	postinc1,c
  1944  002310  0E00               	movlw	0
  1945  002312  6EE6               	movwf	postinc1,c
  1946  002314  ECF7  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1947                           
  1948                           ;main.c: 422:     break;
  1949  002318  D042               	goto	l8783
  1950  00231A                     l1252:
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;main.c: 424:     V.s_state = SEQ_STATE_INIT;
  1954  00231A  6B67               	clrf	_V& (0+255),b
  1955                           
  1956                           ;main.c: 425:     break;
  1957  00231C  D040               	goto	l8783
  1958  00231E                     l1254:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;main.c: 428:     V.s_state = SEQ_STATE_INIT;
  1962  00231E  6B67               	clrf	_V& (0+255),b
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;main.c: 429:     sprintf(V.buf, "E R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.erro
      +                          r, V.abort);
  1966  002320  51B7               	movf	(_V+80)& (0+255),w,b
  1967  002322  6EE6               	movwf	postinc1,c
  1968  002324  0E00               	movlw	0
  1969  002326  6EE6               	movwf	postinc1,c
  1970  002328  51B6               	movf	(_V+79)& (0+255),w,b
  1971  00232A  6EE6               	movwf	postinc1,c
  1972  00232C  0E00               	movlw	0
  1973  00232E  6EE6               	movwf	postinc1,c
  1974  002330  516B               	movf	(_V+4)& (0+255),w,b
  1975  002332  6EE6               	movwf	postinc1,c
  1976  002334  0E00               	movlw	0
  1977  002336  6EE6               	movwf	postinc1,c
  1978  002338  516A               	movf	(_V+3)& (0+255),w,b
  1979  00233A  6EE6               	movwf	postinc1,c
  1980  00233C  0E00               	movlw	0
  1981  00233E  6EE6               	movwf	postinc1,c
  1982  002340  0E16               	movlw	STR_9& (0+255)
  1983  002342  6EE6               	movwf	postinc1,c
  1984  002344  0E67               	movlw	_V& (0+255)
  1985  002346  0F05               	addlw	5
  1986  002348  6EE6               	movwf	postinc1,c
  1987  00234A  0E0A               	movlw	10
  1988  00234C  6EE6               	movwf	postinc1,c
  1989  00234E  ECCA  F027         	call	_sprintf	;wreg free
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;main.c: 430:     V.buf[16] = 0;
  1993  002352  6B7C               	clrf	(_V+21)& (0+255),b
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;main.c: 431:     wait_lcd_done();
  1997  002354  EC9D  F030         	call	_wait_lcd_done	;wreg free
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;main.c: 432:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2001  002358  0E67               	movlw	_V& (0+255)
  2002  00235A  0F05               	addlw	5
  2003  00235C  6EE6               	movwf	postinc1,c
  2004  00235E  0E00               	movlw	0
  2005  002360  6EE6               	movwf	postinc1,c
  2006  002362  0E02               	movlw	2
  2007  002364  6EE6               	movwf	postinc1,c
  2008  002366  ECF7  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2009                           
  2010                           ;main.c: 433:     break;
  2011  00236A  D019               	goto	l8783
  2012  00236C                     l8781:
  2013                           
  2014                           ; BSR set to: 0
  2015  00236C  5167               	movf	_V& (0+255),w,b
  2016  00236E  6E45               	movwf	btemp+10,c
  2017  002370  6A46               	clrf	btemp+11,c
  2018                           
  2019                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2020                           ; Switch size 1, requested type "simple"
  2021                           ; Number of cases is 1, Range of values is 0 to 0
  2022                           ; switch strategies available:
  2023                           ; Name         Instructions Cycles
  2024                           ; simple_byte            4     3 (average)
  2025                           ;	Chosen strategy is simple_byte
  2026  002372  5046               	movf	btemp+11,w,c
  2027  002374  0A00               	xorlw	0	; case 0
  2028  002376  A4D8               	btfss	status,2,c
  2029  002378  D7D2               	goto	l1254
  2030                           
  2031                           ; BSR set to: 0
  2032                           ; Switch size 1, requested type "simple"
  2033                           ; Number of cases is 6, Range of values is 0 to 6
  2034                           ; switch strategies available:
  2035                           ; Name         Instructions Cycles
  2036                           ; simple_byte           19    10 (average)
  2037                           ;	Chosen strategy is simple_byte
  2038  00237A  5045               	movf	btemp+10,w,c
  2039  00237C  0A00               	xorlw	0	; case 0
  2040  00237E  B4D8               	btfsc	status,2,c
  2041  002380  D70F               	goto	l1236
  2042  002382  0A01               	xorlw	1	; case 1
  2043  002384  B4D8               	btfsc	status,2,c
  2044  002386  D742               	goto	l8721
  2045  002388  0A03               	xorlw	3	; case 2
  2046  00238A  B4D8               	btfsc	status,2,c
  2047  00238C  D77F               	goto	l8745
  2048  00238E  0A01               	xorlw	1	; case 3
  2049  002390  B4D8               	btfsc	status,2,c
  2050  002392  D78E               	goto	l1247
  2051  002394  0A06               	xorlw	6	; case 5
  2052  002396  B4D8               	btfsc	status,2,c
  2053  002398  D7C0               	goto	l1252
  2054  00239A  0A03               	xorlw	3	; case 6
  2055  00239C  D7C0               	goto	l1254
  2056  00239E                     l8783:
  2057                           
  2058                           ;main.c: 435:    if (!V.error && !V.abort) {
  2059  00239E  0100               	movlb	0	; () banked
  2060  0023A0  51B6               	movf	(_V+79)& (0+255),w,b
  2061  0023A2  A4D8               	btfss	status,2,c
  2062  0023A4  D0DF               	goto	l1271
  2063                           
  2064                           ; BSR set to: 0
  2065  0023A6  51B7               	movf	(_V+80)& (0+255),w,b
  2066  0023A8  A4D8               	btfss	status,2,c
  2067  0023AA  D0DC               	goto	l1271
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;main.c: 436:     sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  2071  0023AC  0060  F2B3  FFE6   	movff	_V+69,postinc1
  2072  0023B2  0060  F2B7  FFE6   	movff	_V+70,postinc1
  2073  0023B8  0060  F2BB  FFE6   	movff	_V+71,postinc1
  2074  0023BE  0060  F2BF  FFE6   	movff	_V+72,postinc1
  2075  0023C4  0E3D               	movlw	STR_5& (0+255)
  2076  0023C6  6EE6               	movwf	postinc1,c
  2077  0023C8  0E67               	movlw	_V& (0+255)
  2078  0023CA  0F05               	addlw	5
  2079  0023CC  6EE6               	movwf	postinc1,c
  2080  0023CE  0E06               	movlw	6
  2081  0023D0  6EE6               	movwf	postinc1,c
  2082  0023D2  ECCA  F027         	call	_sprintf	;wreg free
  2083  0023D6                     l8789:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;main.c: 437:     V.buf[16] = 0;
  2087  0023D6  6B7C               	clrf	(_V+21)& (0+255),b
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;main.c: 438:     wait_lcd_done();
  2091  0023D8  EC9D  F030         	call	_wait_lcd_done	;wreg free
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;main.c: 439:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2095  0023DC  0E67               	movlw	_V& (0+255)
  2096  0023DE  0F05               	addlw	5
  2097  0023E0  6EE6               	movwf	postinc1,c
  2098  0023E2  0E00               	movlw	0
  2099  0023E4  6EE6               	movwf	postinc1,c
  2100  0023E6  0E02               	movlw	2
  2101  0023E8  6EE6               	movwf	postinc1,c
  2102  0023EA  ECF7  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2103  0023EE  D0BA               	goto	l1271
  2104  0023F0                     l1258:
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;main.c: 445:     V.m_l_state = LINK_STATE_IDLE;
  2108  0023F0  6B69               	clrf	(_V+2)& (0+255),b
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;main.c: 446:     V.s_state = SEQ_STATE_RX;
  2112  0023F2  0E01               	movlw	1
  2113  0023F4  6F67               	movwf	_V& (0+255),b
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;main.c: 447:     sprintf(V.buf, " LOG MODE %d     #", V.uart);
  2117  0023F6  51BF               	movf	(_V+88)& (0+255),w,b
  2118  0023F8  6EE6               	movwf	postinc1,c
  2119  0023FA  0E00               	movlw	0
  2120  0023FC  6EE6               	movwf	postinc1,c
  2121  0023FE  0E2A               	movlw	STR_11& (0+255)
  2122  002400  6EE6               	movwf	postinc1,c
  2123  002402  0E67               	movlw	_V& (0+255)
  2124  002404  0F05               	addlw	5
  2125  002406  6EE6               	movwf	postinc1,c
  2126  002408  0E04               	movlw	4
  2127  00240A  6EE6               	movwf	postinc1,c
  2128  00240C  ECCA  F027         	call	_sprintf	;wreg free
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;main.c: 448:     V.buf[16] = 0;
  2132  002410  6B7C               	clrf	(_V+21)& (0+255),b
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;main.c: 449:     wait_lcd_done();
  2136  002412  EC9D  F030         	call	_wait_lcd_done	;wreg free
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;main.c: 450:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2140  002416  0E67               	movlw	_V& (0+255)
  2141  002418  0F05               	addlw	5
  2142  00241A  6EE6               	movwf	postinc1,c
  2143  00241C  0E00               	movlw	0
  2144  00241E  6EE6               	movwf	postinc1,c
  2145  002420  0E02               	movlw	2
  2146  002422  6EE6               	movwf	postinc1,c
  2147  002424  ECF7  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2148                           
  2149                           ; BSR set to: 59
  2150                           ;main.c: 453:     if (LATEbits.LATE0) {
  2151  002428  A0BE               	btfss	16318,0,c	;volatile
  2152  00242A  D005               	goto	l8809
  2153                           
  2154                           ; BSR set to: 59
  2155                           ;main.c: 454:      UART2_put_buffer(0x05);
  2156  00242C  0E05               	movlw	5
  2157  00242E  6EE6               	movwf	postinc1,c
  2158  002430  EC39  F02E         	call	_UART2_put_buffer	;wreg free
  2159                           
  2160                           ;main.c: 455:     } else {
  2161  002434  D072               	goto	l8839
  2162  002436                     l8809:
  2163                           
  2164                           ; BSR set to: 59
  2165                           ;main.c: 456:      UART1_put_buffer(0x05);
  2166  002436  0E05               	movlw	5
  2167  002438  6EE6               	movwf	postinc1,c
  2168  00243A  EC4E  F02E         	call	_UART1_put_buffer	;wreg free
  2169  00243E  D06D               	goto	l8839
  2170  002440                     l8811:
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;main.c: 464:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2174  002440  0E67               	movlw	_V& (0+255)
  2175  002442  0F02               	addlw	2
  2176  002444  6EE6               	movwf	postinc1,c
  2177  002446  ECE7  F012         	call	_m_protocol	;wreg free
  2178  00244A  0E04               	movlw	4
  2179  00244C  183B               	xorwf	btemp,w,c
  2180  00244E  A4D8               	btfss	status,2,c
  2181  002450  D02D               	goto	l8823
  2182                           
  2183                           ;main.c: 465:      sprintf(V.buf, " S%dF%d #%ld    ", V.stream, V.function, V.ticks);
  2184  002452  0060  F2B3  FFE6   	movff	_V+69,postinc1
  2185  002458  0060  F2B7  FFE6   	movff	_V+70,postinc1
  2186  00245E  0060  F2BB  FFE6   	movff	_V+71,postinc1
  2187  002464  0060  F2BF  FFE6   	movff	_V+72,postinc1
  2188  00246A  0100               	movlb	0	; () banked
  2189  00246C  51B5               	movf	(_V+78)& (0+255),w,b
  2190  00246E  6EE6               	movwf	postinc1,c
  2191  002470  0E00               	movlw	0
  2192  002472  6EE6               	movwf	postinc1,c
  2193  002474  51B4               	movf	(_V+77)& (0+255),w,b
  2194  002476  6EE6               	movwf	postinc1,c
  2195  002478  0E00               	movlw	0
  2196  00247A  6EE6               	movwf	postinc1,c
  2197  00247C  0E50               	movlw	STR_12& (0+255)
  2198  00247E  6EE6               	movwf	postinc1,c
  2199  002480  0E67               	movlw	_V& (0+255)
  2200  002482  0F05               	addlw	5
  2201  002484  6EE6               	movwf	postinc1,c
  2202  002486  0E0A               	movlw	10
  2203  002488  6EE6               	movwf	postinc1,c
  2204  00248A  ECCA  F027         	call	_sprintf	;wreg free
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;main.c: 466:      V.buf[11] = 0;
  2208  00248E  6B77               	clrf	(_V+16)& (0+255),b
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;main.c: 467:      wait_lcd_done();
  2212  002490  EC9D  F030         	call	_wait_lcd_done	;wreg free
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;main.c: 468:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2216  002494  0E67               	movlw	_V& (0+255)
  2217  002496  0F05               	addlw	5
  2218  002498  6EE6               	movwf	postinc1,c
  2219  00249A  0E00               	movlw	0
  2220  00249C  6EE6               	movwf	postinc1,c
  2221  00249E  05BF               	decf	(_V+88)& (0+255),w,b
  2222  0024A0  6EE6               	movwf	postinc1,c
  2223  0024A2  ECF7  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2224                           
  2225                           ; BSR set to: 59
  2226                           ;main.c: 469:      V.s_state = SEQ_STATE_TRIGGER;
  2227  0024A6  0E03               	movlw	3
  2228  0024A8  0100               	movlb	0	; () banked
  2229  0024AA  6F67               	movwf	_V& (0+255),b
  2230  0024AC                     l8823:
  2231                           
  2232                           ;main.c: 471:     if (V.m_l_state == LINK_STATE_ERROR)
  2233  0024AC  0E06               	movlw	6
  2234  0024AE  0100               	movlb	0	; () banked
  2235  0024B0  1969               	xorwf	(_V+2)& (0+255),w,b
  2236  0024B2  A4D8               	btfss	status,2,c
  2237  0024B4  D032               	goto	l8839
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;main.c: 472:      V.s_state = SEQ_STATE_ERROR;
  2241  0024B6  0E06               	movlw	6
  2242  0024B8  6F67               	movwf	_V& (0+255),b
  2243  0024BA  D02F               	goto	l8839
  2244  0024BC                     l8827:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;main.c: 475:     V.s_state = SEQ_STATE_DONE;
  2248  0024BC  0E05               	movlw	5
  2249  0024BE  6F67               	movwf	_V& (0+255),b
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;main.c: 476:     sprintf(V.buf, " OK #");
  2253  0024C0  0E9B               	movlw	STR_8& (0+255)
  2254  0024C2  6EE6               	movwf	postinc1,c
  2255  0024C4  0E67               	movlw	_V& (0+255)
  2256  0024C6  0F05               	addlw	5
  2257  0024C8  6EE6               	movwf	postinc1,c
  2258  0024CA  0E02               	movlw	2
  2259  0024CC  6EE6               	movwf	postinc1,c
  2260  0024CE  ECCA  F027         	call	_sprintf	;wreg free
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;main.c: 477:     wait_lcd_done();
  2264  0024D2  EC9D  F030         	call	_wait_lcd_done	;wreg free
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;main.c: 478:     eaDogM_WriteStringAtPos(V.uart - 1, 11, V.buf);
  2268  0024D6  0E67               	movlw	_V& (0+255)
  2269  0024D8  0F05               	addlw	5
  2270  0024DA  6EE6               	movwf	postinc1,c
  2271  0024DC  0E0B               	movlw	11
  2272  0024DE  6EE6               	movwf	postinc1,c
  2273  0024E0  05BF               	decf	(_V+88)& (0+255),w,b
  2274  0024E2  6EE6               	movwf	postinc1,c
  2275  0024E4  ECF7  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2276                           
  2277                           ;main.c: 479:     break;
  2278  0024E8  D018               	goto	l8839
  2279  0024EA                     l1266:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;main.c: 481:     V.s_state = SEQ_STATE_INIT;
  2283  0024EA  6B67               	clrf	_V& (0+255),b
  2284                           
  2285                           ;main.c: 482:     break;
  2286  0024EC  D016               	goto	l8839
  2287  0024EE                     l8837:
  2288                           
  2289                           ; BSR set to: 0
  2290  0024EE  5167               	movf	_V& (0+255),w,b
  2291  0024F0  6E45               	movwf	btemp+10,c
  2292  0024F2  6A46               	clrf	btemp+11,c
  2293                           
  2294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2295                           ; Switch size 1, requested type "simple"
  2296                           ; Number of cases is 1, Range of values is 0 to 0
  2297                           ; switch strategies available:
  2298                           ; Name         Instructions Cycles
  2299                           ; simple_byte            4     3 (average)
  2300                           ;	Chosen strategy is simple_byte
  2301  0024F4  5046               	movf	btemp+11,w,c
  2302  0024F6  0A00               	xorlw	0	; case 0
  2303  0024F8  A4D8               	btfss	status,2,c
  2304  0024FA  D7F7               	goto	l1266
  2305                           
  2306                           ; BSR set to: 0
  2307                           ; Switch size 1, requested type "simple"
  2308                           ; Number of cases is 5, Range of values is 0 to 6
  2309                           ; switch strategies available:
  2310                           ; Name         Instructions Cycles
  2311                           ; simple_byte           16     9 (average)
  2312                           ;	Chosen strategy is simple_byte
  2313  0024FC  5045               	movf	btemp+10,w,c
  2314  0024FE  0A00               	xorlw	0	; case 0
  2315  002500  B4D8               	btfsc	status,2,c
  2316  002502  D776               	goto	l1258
  2317  002504  0A01               	xorlw	1	; case 1
  2318  002506  B4D8               	btfsc	status,2,c
  2319  002508  D79B               	goto	l8811
  2320  00250A  0A02               	xorlw	2	; case 3
  2321  00250C  B4D8               	btfsc	status,2,c
  2322  00250E  D7D6               	goto	l8827
  2323  002510  0A06               	xorlw	6	; case 5
  2324  002512  B4D8               	btfsc	status,2,c
  2325  002514  D7EA               	goto	l1266
  2326  002516  0A03               	xorlw	3	; case 6
  2327  002518  D7E8               	goto	l1266
  2328  00251A                     l8839:
  2329                           
  2330                           ;main.c: 488:    sprintf(V.buf, " LOG MODE %d     #", V.uart);
  2331  00251A  0100               	movlb	0	; () banked
  2332  00251C  51BF               	movf	(_V+88)& (0+255),w,b
  2333  00251E  6EE6               	movwf	postinc1,c
  2334  002520  0E00               	movlw	0
  2335  002522  6EE6               	movwf	postinc1,c
  2336  002524  0E2A               	movlw	STR_11& (0+255)
  2337  002526  6EE6               	movwf	postinc1,c
  2338  002528  0E67               	movlw	_V& (0+255)
  2339  00252A  0F05               	addlw	5
  2340  00252C  6EE6               	movwf	postinc1,c
  2341  00252E  0E04               	movlw	4
  2342  002530  6EE6               	movwf	postinc1,c
  2343  002532  ECCA  F027         	call	_sprintf	;wreg free
  2344  002536  D74F               	goto	l8789
  2345  002538                     l1270:
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;main.c: 495:    V.ui_state = UI_STATE_INIT;
  2349  002538  6B68               	clrf	(_V+1)& (0+255),b
  2350                           
  2351                           ;main.c: 496:    break;
  2352  00253A  D014               	goto	l1271
  2353  00253C                     l8849:
  2354  00253C  0100               	movlb	0	; () banked
  2355  00253E  5168               	movf	(_V+1)& (0+255),w,b
  2356  002540  6E45               	movwf	btemp+10,c
  2357  002542  6A46               	clrf	btemp+11,c
  2358                           
  2359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2360                           ; Switch size 1, requested type "simple"
  2361                           ; Number of cases is 1, Range of values is 0 to 0
  2362                           ; switch strategies available:
  2363                           ; Name         Instructions Cycles
  2364                           ; simple_byte            4     3 (average)
  2365                           ;	Chosen strategy is simple_byte
  2366  002544  5046               	movf	btemp+11,w,c
  2367  002546  0A00               	xorlw	0	; case 0
  2368  002548  A4D8               	btfss	status,2,c
  2369  00254A  D7F6               	goto	l1270
  2370                           
  2371                           ; BSR set to: 0
  2372                           ; Switch size 1, requested type "simple"
  2373                           ; Number of cases is 4, Range of values is 0 to 4
  2374                           ; switch strategies available:
  2375                           ; Name         Instructions Cycles
  2376                           ; simple_byte           13     7 (average)
  2377                           ;	Chosen strategy is simple_byte
  2378  00254C  5045               	movf	btemp+10,w,c
  2379  00254E  0A00               	xorlw	0	; case 0
  2380  002550  B4D8               	btfsc	status,2,c
  2381  002552  D5D1               	goto	l8677
  2382  002554  0A01               	xorlw	1	; case 1
  2383  002556  B4D8               	btfsc	status,2,c
  2384  002558  D709               	goto	l8781
  2385  00255A  0A02               	xorlw	2	; case 3
  2386  00255C  B4D8               	btfsc	status,2,c
  2387  00255E  D7C7               	goto	l8837
  2388  002560  0A07               	xorlw	7	; case 4
  2389  002562  D7EA               	goto	l1270
  2390  002564                     l1271:
  2391  002564  82BE               	bsf	16318,1,c	;volatile
  2392                           
  2393                           ;main.c: 499:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  2394  002566  0100               	movlb	0	; () banked
  2395  002568  31BD               	rrcf	(_V+86)& (0+255),w,b
  2396  00256A  32E8               	rrcf	wreg,f,c
  2397  00256C  32E8               	rrcf	wreg,f,c
  2398  00256E  0B0F               	andlw	15
  2399  002570  6EE6               	movwf	postinc1,c
  2400  002572  0E00               	movlw	0
  2401  002574  6EE6               	movwf	postinc1,c
  2402  002576  51BE               	movf	(_V+87)& (0+255),w,b
  2403  002578  0B0F               	andlw	15
  2404  00257A  6EE6               	movwf	postinc1,c
  2405  00257C  0E00               	movlw	0
  2406  00257E  6EE6               	movwf	postinc1,c
  2407  002580  516B               	movf	(_V+4)& (0+255),w,b
  2408  002582  6EE6               	movwf	postinc1,c
  2409  002584  0E00               	movlw	0
  2410  002586  6EE6               	movwf	postinc1,c
  2411  002588  516A               	movf	(_V+3)& (0+255),w,b
  2412  00258A  6EE6               	movwf	postinc1,c
  2413  00258C  0E00               	movlw	0
  2414  00258E  6EE6               	movwf	postinc1,c
  2415  002590  0E01               	movlw	STR_15& (0+255)
  2416  002592  6EE6               	movwf	postinc1,c
  2417  002594  0E67               	movlw	_V& (0+255)
  2418  002596  0F05               	addlw	5
  2419  002598  6EE6               	movwf	postinc1,c
  2420  00259A  0E0A               	movlw	10
  2421  00259C  6EE6               	movwf	postinc1,c
  2422  00259E  ECCA  F027         	call	_sprintf	;wreg free
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;main.c: 500:   V.buf[16] = 0;
  2426  0025A2  6B7C               	clrf	(_V+21)& (0+255),b
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;main.c: 501:   wait_lcd_done();
  2430  0025A4  EC9D  F030         	call	_wait_lcd_done	;wreg free
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;main.c: 502:   if (mode != UI_STATE_LOG)
  2434                           ;stkvar	_mode @ sp[(-1)+0]
  2435  0025A8  0EFF               	movlw	-1
  2436  0025AA  006F FF8C  F03B    	movff	plusw1,btemp
  2437  0025B0  0E03               	movlw	3
  2438  0025B2  183B               	xorwf	btemp,w,c
  2439  0025B4  B4D8               	btfsc	status,2,c
  2440  0025B6  D009               	goto	l8861
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;main.c: 503:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2444  0025B8  0E67               	movlw	_V& (0+255)
  2445  0025BA  0F05               	addlw	5
  2446  0025BC  6EE6               	movwf	postinc1,c
  2447  0025BE  0E00               	movlw	0
  2448  0025C0  6EE6               	movwf	postinc1,c
  2449  0025C2  0E01               	movlw	1
  2450  0025C4  6EE6               	movwf	postinc1,c
  2451  0025C6  ECF7  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2452  0025CA                     l8861:
  2453  0025CA  92BE               	bcf	16318,1,c	;volatile
  2454  0025CC  D7B7               	goto	l8849
  2455  0025CE                     __end_of_main:
  2456                           	opt callstack 0
  2457                           
  2458 ;; *************** function _t_protocol *****************
  2459 ;; Defined at:
  2460 ;;		line 302 in file "gemsecs.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  t_link          1  [STACK] PTR enum E16164
  2463 ;;		 -> V(89), 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  rxData          1  [STACK] unsigned char 
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1  [STACK] enum E16904
  2468 ;; Registers used:
  2469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    5
  2482 ;; This function calls:
  2483 ;;		_StartTimer
  2484 ;;		_TimerDone
  2485 ;;		_UART1_Read
  2486 ;;		_UART1_Write
  2487 ;;		_UART1_is_rx_ready
  2488 ;;		_UART1_put_buffer
  2489 ;;		_WaitMs
  2490 ;;		_secs_II_message
  2491 ;;		_secs_send
  2492 ;; This function is called by:
  2493 ;;		_main
  2494 ;; This function uses a reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text1
  2498  003C80                     __ptext1:
  2499                           	opt callstack 0
  2500  003C80                     _t_protocol:
  2501                           	opt callstack 0
  2502                           
  2503                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2504  003C80  52E6               	movf	postinc1,f,c
  2505                           
  2506                           ;gemsecs.c: 302: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 303: {;gemsecs.
      +                          c: 304:  uint8_t rxData;;gemsecs.c: 305:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          306:  static response_type block;;gemsecs.c: 308:  switch (*t_link) {
  2507                           
  2508                           ;incstack = 0
  2509  003C82  D124               	goto	l8449
  2510  003C84                     l1646:
  2511                           
  2512                           ;gemsecs.c: 310:   V.error = LINK_ERROR_NONE;
  2513  003C84  0100               	movlb	0	; () banked
  2514  003C86  6BB6               	clrf	(_V+79)& (0+255),b
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;gemsecs.c: 311:   retry = 3;
  2518  003C88  0E03               	movlw	3
  2519  003C8A  6E2B               	movwf	t_protocol@retry,c
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;gemsecs.c: 312:   UART1_Write(0x05);
  2523  003C8C  0E05               	movlw	5
  2524  003C8E  6EE6               	movwf	postinc1,c
  2525  003C90  EC2A  F02D         	call	_UART1_Write	;wreg free
  2526                           
  2527                           ; BSR set to: 57
  2528                           ;gemsecs.c: 313:   StartTimer(TMR_T2, 2000);
  2529  003C94  0ED0               	movlw	208
  2530  003C96  6EE6               	movwf	postinc1,c
  2531  003C98  0E07               	movlw	7
  2532  003C9A  6EE6               	movwf	postinc1,c
  2533  003C9C  0E02               	movlw	2
  2534  003C9E  6EE6               	movwf	postinc1,c
  2535  003CA0  ECA7  F02D         	call	_StartTimer	;wreg free
  2536                           
  2537                           ;gemsecs.c: 314:   *t_link = LINK_STATE_ENQ;
  2538                           ;stkvar	_t_link @ sp[(-1)+-1]
  2539  003CA4  0EFE               	movlw	-2
  2540  003CA6  50E3               	movf	plusw1,w,c
  2541  003CA8  6ED9               	movwf	fsr2l,c
  2542  003CAA  6ADA               	clrf	fsr2h,c
  2543  003CAC  0E01               	movlw	1
  2544  003CAE  6EDF               	movwf	indf2,c
  2545                           
  2546                           ;gemsecs.c: 316:   WaitMs(5);
  2547  003CB0  0E05               	movlw	5
  2548  003CB2  6EE6               	movwf	postinc1,c
  2549  003CB4  0E00               	movlw	0
  2550  003CB6  6EE6               	movwf	postinc1,c
  2551  003CB8  EC63  F02E         	call	_WaitMs	;wreg free
  2552                           
  2553                           ;gemsecs.c: 317:   UART1_put_buffer(0x04);
  2554  003CBC  0E04               	movlw	4
  2555  003CBE  6EE6               	movwf	postinc1,c
  2556  003CC0  EC4E  F02E         	call	_UART1_put_buffer	;wreg free
  2557                           
  2558                           ;gemsecs.c: 319:   break;
  2559  003CC4  D124               	goto	l8451
  2560  003CC6                     l8361:
  2561                           
  2562                           ;gemsecs.c: 321:   if (TimerDone(TMR_T2)) {
  2563  003CC6  0E02               	movlw	2
  2564  003CC8  6EE6               	movwf	postinc1,c
  2565  003CCA  EC19  F030         	call	_TimerDone	;wreg free
  2566  003CCE  503B               	movf	btemp,w,c
  2567  003CD0  B4D8               	btfsc	status,2,c
  2568  003CD2  D01A               	goto	l8371
  2569                           
  2570                           ;gemsecs.c: 322:    if (!retry--) {
  2571  003CD4  062B               	decf	t_protocol@retry,f,c
  2572  003CD6  282B               	incf	t_protocol@retry,w,c
  2573  003CD8  A4D8               	btfss	status,2,c
  2574  003CDA  D00D               	goto	l8369
  2575                           
  2576                           ;gemsecs.c: 323:     V.error = LINK_ERROR_T2;
  2577  003CDC  0E02               	movlw	2
  2578  003CDE  0100               	movlb	0	; () banked
  2579  003CE0  6FB6               	movwf	(_V+79)& (0+255),b
  2580                           
  2581                           ;gemsecs.c: 324:     V.failed_send = 1;
  2582  003CE2  51BD               	movf	(_V+86)& (0+255),w,b
  2583  003CE4  0B87               	andlw	-121
  2584  003CE6  0908               	iorlw	8
  2585  003CE8  6FBD               	movwf	(_V+86)& (0+255),b
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;gemsecs.c: 325:     *t_link = LINK_STATE_NAK;
  2589                           ;stkvar	_t_link @ sp[(-1)+-1]
  2590  003CEA  0EFE               	movlw	-2
  2591  003CEC  50E3               	movf	plusw1,w,c
  2592  003CEE  6ED9               	movwf	fsr2l,c
  2593  003CF0  6ADA               	clrf	fsr2h,c
  2594  003CF2  0E05               	movlw	5
  2595  003CF4  D0E9               	goto	L2
  2596  003CF6                     l8369:
  2597                           
  2598                           ;gemsecs.c: 327:     StartTimer(TMR_T2, 2000);
  2599  003CF6  0ED0               	movlw	208
  2600  003CF8  6EE6               	movwf	postinc1,c
  2601  003CFA  0E07               	movlw	7
  2602  003CFC  6EE6               	movwf	postinc1,c
  2603  003CFE  0E02               	movlw	2
  2604  003D00  6EE6               	movwf	postinc1,c
  2605  003D02  ECA7  F02D         	call	_StartTimer	;wreg free
  2606  003D06  D103               	goto	l8451
  2607  003D08                     l8371:
  2608                           
  2609                           ;gemsecs.c: 330:    if (UART1_is_rx_ready()) {
  2610  003D08  EC57  F031         	call	_UART1_is_rx_ready	;wreg free
  2611  003D0C  503B               	movf	btemp,w,c
  2612  003D0E  B4D8               	btfsc	status,2,c
  2613  003D10  D0FE               	goto	l8451
  2614                           
  2615                           ;gemsecs.c: 331:     rxData = UART1_Read();
  2616  003D12  EC68  F02D         	call	_UART1_Read	;wreg free
  2617                           
  2618                           ;stkvar	_rxData @ sp[(-1)+0]
  2619  003D16  0EFF               	movlw	-1
  2620  003D18  0060  F0EF  FFE3   	movff	btemp,plusw1
  2621                           
  2622                           ; BSR set to: 57
  2623                           ;gemsecs.c: 332:     if (rxData == 0x04) {
  2624                           ;stkvar	_rxData @ sp[(-1)+0]
  2625  003D1E  0EFF               	movlw	-1
  2626  003D20  006F FF8C  F03B    	movff	plusw1,btemp
  2627  003D26  0E04               	movlw	4
  2628  003D28  183B               	xorwf	btemp,w,c
  2629  003D2A  A4D8               	btfss	status,2,c
  2630  003D2C  D00E               	goto	l8381
  2631                           
  2632                           ; BSR set to: 57
  2633                           ;gemsecs.c: 333:      StartTimer(TMR_T3, 5000);
  2634  003D2E  0E88               	movlw	136
  2635  003D30  6EE6               	movwf	postinc1,c
  2636  003D32  0E13               	movlw	19
  2637  003D34  6EE6               	movwf	postinc1,c
  2638  003D36  0E03               	movlw	3
  2639  003D38  6EE6               	movwf	postinc1,c
  2640  003D3A  ECA7  F02D         	call	_StartTimer	;wreg free
  2641                           
  2642                           ;gemsecs.c: 334:      *t_link = LINK_STATE_EOT;
  2643                           ;stkvar	_t_link @ sp[(-1)+-1]
  2644  003D3E  0EFE               	movlw	-2
  2645  003D40  50E3               	movf	plusw1,w,c
  2646  003D42  6ED9               	movwf	fsr2l,c
  2647  003D44  6ADA               	clrf	fsr2h,c
  2648  003D46  0E02               	movlw	2
  2649  003D48  6EDF               	movwf	indf2,c
  2650  003D4A                     l8381:
  2651                           
  2652                           ;gemsecs.c: 336:     if (rxData == 0x05) {
  2653                           ;stkvar	_rxData @ sp[(-1)+0]
  2654  003D4A  0EFF               	movlw	-1
  2655  003D4C  006F FF8C  F03B    	movff	plusw1,btemp
  2656  003D52  0E05               	movlw	5
  2657  003D54  183B               	xorwf	btemp,w,c
  2658  003D56  A4D8               	btfss	status,2,c
  2659  003D58  D0DA               	goto	l8451
  2660                           
  2661                           ;gemsecs.c: 337:      UART1_put_buffer(0x04);
  2662  003D5A  0E04               	movlw	4
  2663  003D5C  6EE6               	movwf	postinc1,c
  2664  003D5E  EC4E  F02E         	call	_UART1_put_buffer	;wreg free
  2665  003D62                     l8385:
  2666                           
  2667                           ;gemsecs.c: 338:      *t_link = LINK_STATE_DONE;
  2668                           ;stkvar	_t_link @ sp[(-1)+-1]
  2669  003D62  0EFE               	movlw	-2
  2670  003D64  50E3               	movf	plusw1,w,c
  2671  003D66  6ED9               	movwf	fsr2l,c
  2672  003D68  6ADA               	clrf	fsr2h,c
  2673  003D6A  0E04               	movlw	4
  2674  003D6C  D0AD               	goto	L2
  2675  003D6E                     l8387:
  2676                           
  2677                           ;gemsecs.c: 344:   if (!requeue)
  2678  003D6E  502A               	movf	t_protocol@requeue,w,c
  2679  003D70  A4D8               	btfss	status,2,c
  2680  003D72  D010               	goto	l8391
  2681                           
  2682                           ;gemsecs.c: 345:    block = secs_II_message(V.stream, V.function);
  2683  003D74  0100               	movlb	0	; () banked
  2684  003D76  51B5               	movf	(_V+78)& (0+255),w,b
  2685  003D78  6EE6               	movwf	postinc1,c
  2686  003D7A  51B4               	movf	(_V+77)& (0+255),w,b
  2687  003D7C  6EE6               	movwf	postinc1,c
  2688  003D7E  EC04  F022         	call	_secs_II_message	;wreg free
  2689  003D82  EE20  F0E5         	lfsr	2,t_protocol@block
  2690  003D86  0E06               	movlw	6
  2691  003D88                     u5291:
  2692  003D88  52E5               	movf	postdec1,f,c
  2693  003D8A  006F FF9F FFDB     	movff	indf1,plusw2
  2694  003D90  06E8               	decf	wreg,f,c
  2695  003D92  E2FA               	bc	u5291
  2696  003D94                     l8391:
  2697                           
  2698                           ;gemsecs.c: 347:   if (V.abort == LINK_ERROR_ABORT) {
  2699  003D94  0E07               	movlw	7
  2700  003D96  0100               	movlb	0	; () banked
  2701  003D98  19B7               	xorwf	(_V+80)& (0+255),w,b
  2702  003D9A  A4D8               	btfss	status,2,c
  2703  003D9C  D019               	goto	l8399
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;gemsecs.c: 348:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  2707  003D9E  0E01               	movlw	1
  2708  003DA0  6EE6               	movwf	postinc1,c
  2709  003DA2  0E00               	movlw	0
  2710  003DA4  6EE6               	movwf	postinc1,c
  2711  003DA6  51E7               	movf	(t_protocol@block+2)& (0+255),w,b
  2712  003DA8  6EE6               	movwf	postinc1,c
  2713  003DAA  0060  F397  FFE6   	movff	t_protocol@block,postinc1
  2714  003DB0  0060  F39B  FFE6   	movff	t_protocol@block+1,postinc1
  2715  003DB6  ECD0  F020         	call	_secs_send	;wreg free
  2716                           
  2717                           ;gemsecs.c: 349:    V.failed_send = 2;
  2718  003DBA  0100               	movlb	0	; () banked
  2719  003DBC  51BD               	movf	(_V+86)& (0+255),w,b
  2720  003DBE  0B87               	andlw	-121
  2721  003DC0  0910               	iorlw	16
  2722  003DC2  6FBD               	movwf	(_V+86)& (0+255),b
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;gemsecs.c: 350:    *t_link = LINK_STATE_ERROR;
  2726                           ;stkvar	_t_link @ sp[(-1)+-1]
  2727  003DC4  0EFE               	movlw	-2
  2728  003DC6  50E3               	movf	plusw1,w,c
  2729  003DC8  6ED9               	movwf	fsr2l,c
  2730  003DCA  6ADA               	clrf	fsr2h,c
  2731  003DCC  0E06               	movlw	6
  2732  003DCE  D030               	goto	L3
  2733  003DD0                     l8399:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;gemsecs.c: 352:    if (!requeue) {
  2737  003DD0  502A               	movf	t_protocol@requeue,w,c
  2738  003DD2  A4D8               	btfss	status,2,c
  2739  003DD4  D014               	goto	l1660
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;gemsecs.c: 353:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  2743  003DD6  0E01               	movlw	1
  2744  003DD8  6EE6               	movwf	postinc1,c
  2745  003DDA  0E00               	movlw	0
  2746  003DDC  6EE6               	movwf	postinc1,c
  2747  003DDE  51E7               	movf	(t_protocol@block+2)& (0+255),w,b
  2748  003DE0  6EE6               	movwf	postinc1,c
  2749  003DE2  0060  F397  FFE6   	movff	t_protocol@block,postinc1
  2750  003DE8  0060  F39B  FFE6   	movff	t_protocol@block+1,postinc1
  2751  003DEE  ECD0  F020         	call	_secs_send	;wreg free
  2752                           
  2753                           ;gemsecs.c: 354:     if (V.queue)
  2754  003DF2  0100               	movlb	0	; () banked
  2755  003DF4  A9BE               	btfss	(_V+87)& (0+255),4,b
  2756  003DF6  D013               	goto	l8409
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;gemsecs.c: 355:      requeue = 1;
  2760  003DF8  0E01               	movlw	1
  2761  003DFA  6E2A               	movwf	t_protocol@requeue,c
  2762  003DFC  D010               	goto	l8409
  2763  003DFE                     l1660:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;gemsecs.c: 357:     requeue = 0;
  2767  003DFE  6A2A               	clrf	t_protocol@requeue,c
  2768                           
  2769                           ;gemsecs.c: 358:     V.queue = 0;
  2770  003E00  99BE               	bcf	(_V+87)& (0+255),4,b
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;gemsecs.c: 359:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  2774  003E02  0E01               	movlw	1
  2775  003E04  6EE6               	movwf	postinc1,c
  2776  003E06  0E00               	movlw	0
  2777  003E08  6EE6               	movwf	postinc1,c
  2778  003E0A  51EA               	movf	(t_protocol@block+5)& (0+255),w,b
  2779  003E0C  6EE6               	movwf	postinc1,c
  2780  003E0E  0060  F3A3  FFE6   	movff	t_protocol@block+3,postinc1
  2781  003E14  0060  F3A7  FFE6   	movff	t_protocol@block+4,postinc1
  2782  003E1A  ECD0  F020         	call	_secs_send	;wreg free
  2783  003E1E                     l8409:
  2784                           
  2785                           ;gemsecs.c: 361:    if (V.error == LINK_ERROR_NONE) {
  2786  003E1E  0100               	movlb	0	; () banked
  2787  003E20  51B6               	movf	(_V+79)& (0+255),w,b
  2788  003E22  A4D8               	btfss	status,2,c
  2789  003E24  D007               	goto	l8413
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;gemsecs.c: 362:     *t_link = LINK_STATE_ACK;
  2793                           ;stkvar	_t_link @ sp[(-1)+-1]
  2794  003E26  0EFE               	movlw	-2
  2795  003E28  50E3               	movf	plusw1,w,c
  2796  003E2A  6ED9               	movwf	fsr2l,c
  2797  003E2C  6ADA               	clrf	fsr2h,c
  2798  003E2E  0E03               	movlw	3
  2799  003E30                     L3:
  2800  003E30  6EDF               	movwf	indf2,c
  2801                           
  2802                           ;gemsecs.c: 363:    } else {
  2803  003E32  D004               	goto	l8417
  2804  003E34                     l8413:
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;gemsecs.c: 364:     V.failed_send = 3;
  2808  003E34  51BD               	movf	(_V+86)& (0+255),w,b
  2809  003E36  0B87               	andlw	-121
  2810  003E38  0918               	iorlw	24
  2811  003E3A  D7C3               	goto	L4
  2812  003E3C                     l8417:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;gemsecs.c: 369:   WaitMs(5);
  2816  003E3C  0E05               	movlw	5
  2817  003E3E  6EE6               	movwf	postinc1,c
  2818  003E40  0E00               	movlw	0
  2819  003E42  6EE6               	movwf	postinc1,c
  2820  003E44  EC63  F02E         	call	_WaitMs	;wreg free
  2821                           
  2822                           ;gemsecs.c: 370:   UART1_put_buffer(0x06);
  2823  003E48  0E06               	movlw	6
  2824  003E4A  6EE6               	movwf	postinc1,c
  2825  003E4C  EC4E  F02E         	call	_UART1_put_buffer	;wreg free
  2826                           
  2827                           ;gemsecs.c: 372:   break;
  2828  003E50  D05E               	goto	l8451
  2829  003E52                     l8421:
  2830                           
  2831                           ;gemsecs.c: 374:   if (TimerDone(TMR_T3)) {
  2832  003E52  0E03               	movlw	3
  2833  003E54  6EE6               	movwf	postinc1,c
  2834  003E56  EC19  F030         	call	_TimerDone	;wreg free
  2835  003E5A  503B               	movf	btemp,w,c
  2836  003E5C  B4D8               	btfsc	status,2,c
  2837  003E5E  D007               	goto	l8427
  2838                           
  2839                           ;gemsecs.c: 375:    V.error = LINK_ERROR_T3;
  2840  003E60  0E03               	movlw	3
  2841  003E62  0100               	movlb	0	; () banked
  2842  003E64  6FB6               	movwf	(_V+79)& (0+255),b
  2843                           
  2844                           ;gemsecs.c: 376:    V.failed_send = 4;
  2845  003E66  51BD               	movf	(_V+86)& (0+255),w,b
  2846  003E68  0B87               	andlw	-121
  2847  003E6A  0920               	iorlw	32
  2848  003E6C  D73D               	goto	L5
  2849  003E6E                     l8427:
  2850                           
  2851                           ;gemsecs.c: 379:    if (UART1_is_rx_ready()) {
  2852  003E6E  EC57  F031         	call	_UART1_is_rx_ready	;wreg free
  2853  003E72  503B               	movf	btemp,w,c
  2854  003E74  B4D8               	btfsc	status,2,c
  2855  003E76  D04B               	goto	l8451
  2856                           
  2857                           ;gemsecs.c: 380:     rxData = UART1_Read();
  2858  003E78  EC68  F02D         	call	_UART1_Read	;wreg free
  2859                           
  2860                           ;stkvar	_rxData @ sp[(-1)+0]
  2861  003E7C  0EFF               	movlw	-1
  2862  003E7E  0060  F0EF  FFE3   	movff	btemp,plusw1
  2863                           
  2864                           ; BSR set to: 57
  2865                           ;gemsecs.c: 381:     if (rxData == 0x06) {
  2866                           ;stkvar	_rxData @ sp[(-1)+0]
  2867  003E84  0EFF               	movlw	-1
  2868  003E86  006F FF8C  F03B    	movff	plusw1,btemp
  2869  003E8C  0E06               	movlw	6
  2870  003E8E  183B               	xorwf	btemp,w,c
  2871  003E90  A4D8               	btfss	status,2,c
  2872  003E92  D03D               	goto	l8451
  2873                           
  2874                           ; BSR set to: 57
  2875                           ;gemsecs.c: 382:      V.failed_send = 0;
  2876  003E94  0E87               	movlw	-121
  2877  003E96  0100               	movlb	0	; () banked
  2878  003E98  17BD               	andwf	(_V+86)& (0+255),f,b
  2879  003E9A  D763               	goto	l8385
  2880  003E9C                     l8437:
  2881                           
  2882                           ;gemsecs.c: 389:   *t_link = LINK_STATE_ERROR;
  2883                           ;stkvar	_t_link @ sp[(-1)+-1]
  2884  003E9C  0EFE               	movlw	-2
  2885  003E9E  50E3               	movf	plusw1,w,c
  2886  003EA0  6ED9               	movwf	fsr2l,c
  2887  003EA2  6ADA               	clrf	fsr2h,c
  2888  003EA4  0E06               	movlw	6
  2889  003EA6  6EDF               	movwf	indf2,c
  2890                           
  2891                           ;gemsecs.c: 390:   while ((uart1RxCount)) {
  2892  003EA8  D002               	goto	l8441
  2893  003EAA                     l8439:
  2894                           
  2895                           ;gemsecs.c: 391:    UART1_Read();
  2896  003EAA  EC68  F02D         	call	_UART1_Read	;wreg free
  2897  003EAE                     l8441:
  2898                           
  2899                           ;gemsecs.c: 390:   while ((uart1RxCount)) {
  2900  003EAE  5035               	movf	_uart1RxCount,w,c	;volatile
  2901  003EB0  B4D8               	btfsc	status,2,c
  2902  003EB2  D02D               	goto	l8451
  2903  003EB4  D7FA               	goto	l8439
  2904  003EB6                     l8443:
  2905                           
  2906                           ;gemsecs.c: 397:   V.failed_send = 0;
  2907  003EB6  0E87               	movlw	-121
  2908  003EB8  0100               	movlb	0	; () banked
  2909  003EBA  17BD               	andwf	(_V+86)& (0+255),f,b
  2910                           
  2911                           ;gemsecs.c: 398:   break;
  2912  003EBC  D028               	goto	l8451
  2913  003EBE                     l8445:
  2914                           
  2915                           ;gemsecs.c: 400:   *t_link = LINK_STATE_IDLE;
  2916                           ;stkvar	_t_link @ sp[(-1)+-1]
  2917  003EBE  0EFE               	movlw	-2
  2918  003EC0  50E3               	movf	plusw1,w,c
  2919  003EC2  6ED9               	movwf	fsr2l,c
  2920  003EC4  6ADA               	clrf	fsr2h,c
  2921  003EC6  0E00               	movlw	0
  2922  003EC8                     L2:
  2923  003EC8  6EDF               	movwf	indf2,c
  2924                           
  2925                           ;gemsecs.c: 402:   break;
  2926  003ECA  D021               	goto	l8451
  2927  003ECC                     l8449:
  2928                           
  2929                           ;stkvar	_t_link @ sp[(-1)+-1]
  2930  003ECC  0EFE               	movlw	-2
  2931  003ECE  50E3               	movf	plusw1,w,c
  2932  003ED0  6ED9               	movwf	fsr2l,c
  2933  003ED2  6ADA               	clrf	fsr2h,c
  2934  003ED4  50DF               	movf	indf2,w,c
  2935  003ED6  6E45               	movwf	btemp+10,c
  2936  003ED8  6A46               	clrf	btemp+11,c
  2937                           
  2938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2939                           ; Switch size 1, requested type "simple"
  2940                           ; Number of cases is 1, Range of values is 0 to 0
  2941                           ; switch strategies available:
  2942                           ; Name         Instructions Cycles
  2943                           ; simple_byte            4     3 (average)
  2944                           ;	Chosen strategy is simple_byte
  2945  003EDA  5046               	movf	btemp+11,w,c
  2946  003EDC  0A00               	xorlw	0	; case 0
  2947  003EDE  A4D8               	btfss	status,2,c
  2948  003EE0  D7EE               	goto	l8445
  2949                           
  2950                           ; Switch size 1, requested type "simple"
  2951                           ; Number of cases is 7, Range of values is 0 to 6
  2952                           ; switch strategies available:
  2953                           ; Name         Instructions Cycles
  2954                           ; simple_byte           22    12 (average)
  2955                           ;	Chosen strategy is simple_byte
  2956  003EE2  5045               	movf	btemp+10,w,c
  2957  003EE4  0A00               	xorlw	0	; case 0
  2958  003EE6  B4D8               	btfsc	status,2,c
  2959  003EE8  D6CD               	goto	l1646
  2960  003EEA  0A01               	xorlw	1	; case 1
  2961  003EEC  B4D8               	btfsc	status,2,c
  2962  003EEE  D6EB               	goto	l8361
  2963  003EF0  0A03               	xorlw	3	; case 2
  2964  003EF2  B4D8               	btfsc	status,2,c
  2965  003EF4  D73C               	goto	l8387
  2966  003EF6  0A01               	xorlw	1	; case 3
  2967  003EF8  B4D8               	btfsc	status,2,c
  2968  003EFA  D7AB               	goto	l8421
  2969  003EFC  0A07               	xorlw	7	; case 4
  2970  003EFE  B4D8               	btfsc	status,2,c
  2971  003F00  D7DA               	goto	l8443
  2972  003F02  0A01               	xorlw	1	; case 5
  2973  003F04  B4D8               	btfsc	status,2,c
  2974  003F06  D7CA               	goto	l8437
  2975  003F08  0A03               	xorlw	3	; case 6
  2976  003F0A  A4D8               	btfss	status,2,c
  2977  003F0C  D7D8               	goto	l8445
  2978  003F0E                     l8451:
  2979                           
  2980                           ;gemsecs.c: 405:  return *t_link;
  2981                           ;stkvar	_t_link @ sp[(-1)+-1]
  2982  003F0E  0EFE               	movlw	-2
  2983  003F10  50E3               	movf	plusw1,w,c
  2984  003F12  6ED9               	movwf	fsr2l,c
  2985  003F14  6ADA               	clrf	fsr2h,c
  2986  003F16  50DF               	movf	indf2,w,c
  2987  003F18  6E3B               	movwf	btemp,c
  2988                           
  2989                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2990  003F1A  52E5               	movf	postdec1,f,c
  2991  003F1C  52E5               	movf	postdec1,f,c
  2992  003F1E  0012               	return		;funcret
  2993  003F20                     __end_of_t_protocol:
  2994                           	opt callstack 0
  2995                           
  2996 ;; *************** function _secs_II_message *****************
  2997 ;; Defined at:
  2998 ;;		line 465 in file "gemsecs.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  stream          1  [STACK] unsigned char 
  3001 ;;  function        1  [STACK] unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  7  [STACK] struct response_type
  3006 ;; Registers used:
  3007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3008 ;; Tracked objects:
  3009 ;;		On entry : 3F/0
  3010 ;;		On exit  : 3E/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3017 ;;Total ram usage:        0 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    3
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_t_protocol
  3024 ;; This function uses a reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text2
  3028  004408                     __ptext2:
  3029                           	opt callstack 0
  3030  004408                     _secs_II_message:
  3031                           	opt callstack 0
  3032                           
  3033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3034  004408  0E05               	movlw	5
  3035  00440A  26E1               	addwf	fsr1l,f,c
  3036  00440C  0E00               	movlw	0
  3037  00440E  22E2               	addwfc	fsr1h,f,c
  3038                           
  3039                           ;gemsecs.c: 465: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 466: {;gemsecs.c: 467:  static response_type block;;gemsecs.c: 469:  V.abort = LINK_
      +                          ERROR_NONE;
  3040                           
  3041                           ;incstack = 0
  3042  004410  0100               	movlb	0	; () banked
  3043  004412  6BB7               	clrf	(_V+80)& (0+255),b
  3044                           
  3045                           ;gemsecs.c: 470:  V.queue = 0;
  3046  004414  99BE               	bcf	(_V+87)& (0+255),4,b
  3047                           
  3048                           ;gemsecs.c: 471:  block.respond = 0;
  3049  004416  9007               	bcf	secs_II_message@block+6,0,c
  3050                           
  3051                           ;gemsecs.c: 473:  switch (stream) {
  3052  004418  D0F3               	goto	l6315
  3053  00441A                     l6183:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;gemsecs.c: 477:    block.header = (uint8_t*) & H12[0];
  3057  00441A  0E5F               	movlw	low _H12
  3058  00441C  6E01               	movwf	secs_II_message@block,c
  3059  00441E  0E01               	movlw	high _H12
  3060  004420  6E02               	movwf	secs_II_message@block+1,c
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;gemsecs.c: 478:    block.length = sizeof(header12);
  3064  004422  0E0F               	movlw	15
  3065  004424  6E03               	movwf	secs_II_message@block+2,c
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;gemsecs.c: 479:    H12[0].block.block.systemb = V.systemb;
  3069  004426  C0B0  F163         	movff	_V+73,_H12+4
  3070  00442A  C0B1  F164         	movff	_V+74,_H12+5
  3071  00442E  C0B2  F165         	movff	_V+75,_H12+6
  3072  004432  C0B3  F166         	movff	_V+76,_H12+7
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;gemsecs.c: 480:    H10[0].block.block.systemb = V.systemb;
  3076  004436  C0B0  F102         	movff	_V+73,_H10+2
  3077  00443A  C0B1  F103         	movff	_V+74,_H10+3
  3078  00443E  C0B2  F104         	movff	_V+75,_H10+4
  3079  004442  C0B3  F105         	movff	_V+76,_H10+5
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;gemsecs.c: 481:    block.respond = 1;
  3083  004446  8007               	bsf	secs_II_message@block+6,0,c
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;gemsecs.c: 482:    block.reply = (uint8_t*) & H10[0];
  3087  004448  0E00               	movlw	low _H10
  3088  00444A  6E04               	movwf	secs_II_message@block+3,c
  3089  00444C  0E01               	movlw	high _H10
  3090  00444E  6E05               	movwf	secs_II_message@block+4,c
  3091                           
  3092                           ;gemsecs.c: 483:    block.reply_length = sizeof(header10);
  3093  004450  0E0D               	movlw	13
  3094  004452                     L6:
  3095  004452  6E06               	movwf	secs_II_message@block+5,c
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;gemsecs.c: 484:    V.queue = 1;
  3099  004454  89BE               	bsf	(_V+87)& (0+255),4,b
  3100                           
  3101                           ;gemsecs.c: 485:    break;
  3102  004456  D0ED               	goto	l6317
  3103  004458                     l6197:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;gemsecs.c: 487:    block.header = (uint8_t*) & H14[0];
  3107  004458  0EAC               	movlw	low _H14
  3108  00445A  6E01               	movwf	secs_II_message@block,c
  3109  00445C  0E01               	movlw	high _H14
  3110  00445E  6E02               	movwf	secs_II_message@block+1,c
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;gemsecs.c: 488:    block.length = sizeof(header14);
  3114  004460  0E11               	movlw	17
  3115  004462  6E03               	movwf	secs_II_message@block+2,c
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;gemsecs.c: 489:    H14[0].block.block.systemb = V.systemb;
  3119  004464  C0B0  F1B2         	movff	_V+73,_H14+6
  3120  004468  C0B1  F1B3         	movff	_V+74,_H14+7
  3121  00446C  C0B2  F1B4         	movff	_V+75,_H14+8
  3122  004470  C0B3  F1B5         	movff	_V+76,_H14+9
  3123                           
  3124                           ;gemsecs.c: 490:    break;
  3125  004474  D0DE               	goto	l6317
  3126  004476                     l6203:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;gemsecs.c: 492:    block.header = (uint8_t*) & H17[0];
  3130  004476  0E98               	movlw	low _H17
  3131  004478  6E01               	movwf	secs_II_message@block,c
  3132  00447A  0E01               	movlw	high _H17
  3133  00447C  6E02               	movwf	secs_II_message@block+1,c
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;gemsecs.c: 493:    block.length = sizeof(header17);
  3137  00447E  0E14               	movlw	20
  3138  004480  6E03               	movwf	secs_II_message@block+2,c
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;gemsecs.c: 494:    H17[0].block.block.systemb = V.systemb;
  3142  004482  C0B0  F1A1         	movff	_V+73,_H17+9
  3143  004486  C0B1  F1A2         	movff	_V+74,_H17+10
  3144  00448A  C0B2  F1A3         	movff	_V+75,_H17+11
  3145  00448E  C0B3  F1A4         	movff	_V+76,_H17+12
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;gemsecs.c: 495:    H12[1].block.block.systemb = V.systemb;
  3149  004492  C0B0  F172         	movff	_V+73,_H12+19
  3150  004496  C0B1  F173         	movff	_V+74,_H12+20
  3151  00449A  C0B2  F174         	movff	_V+75,_H12+21
  3152  00449E  C0B3  F175         	movff	_V+76,_H12+22
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;gemsecs.c: 496:    block.respond = 1;
  3156  0044A2  8007               	bsf	secs_II_message@block+6,0,c
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;gemsecs.c: 497:    block.reply = (uint8_t*) & H12[1];
  3160  0044A4  0E6E               	movlw	low (_H12+15)
  3161  0044A6  6E04               	movwf	secs_II_message@block+3,c
  3162  0044A8  0E01               	movlw	high (_H12+15)
  3163  0044AA  6E05               	movwf	secs_II_message@block+4,c
  3164                           
  3165                           ;gemsecs.c: 498:    block.reply_length = sizeof(header12);
  3166  0044AC  0E0F               	movlw	15
  3167  0044AE  D7D1               	goto	L6
  3168  0044B0                     l6217:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;gemsecs.c: 502:    block.header = (uint8_t*) & H10[2];
  3172  0044B0  0E1A               	movlw	low (_H10+26)
  3173  0044B2  6E01               	movwf	secs_II_message@block,c
  3174  0044B4  0E01               	movlw	high (_H10+26)
  3175  0044B6  6E02               	movwf	secs_II_message@block+1,c
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;gemsecs.c: 503:    block.length = sizeof(header10);
  3179  0044B8  0E0D               	movlw	13
  3180  0044BA  6E03               	movwf	secs_II_message@block+2,c
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;gemsecs.c: 504:    H10[2].block.block.systemb = V.systemb;
  3184  0044BC  C0B0  F11C         	movff	_V+73,_H10+28
  3185  0044C0  C0B1  F11D         	movff	_V+74,_H10+29
  3186  0044C4  C0B2  F11E         	movff	_V+75,_H10+30
  3187  0044C8  C0B3  F11F         	movff	_V+76,_H10+31
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;gemsecs.c: 505:    V.abort = LINK_ERROR_ABORT;
  3191  0044CC  0E07               	movlw	7
  3192  0044CE  6FB7               	movwf	(_V+80)& (0+255),b
  3193                           
  3194                           ;gemsecs.c: 506:    break;
  3195  0044D0  D0B0               	goto	l6317
  3196  0044D2                     l6227:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;stkvar	_function @ sp[(0)+-7]
  3200  0044D2  0EF9               	movlw	-7
  3201  0044D4  50E3               	movf	plusw1,w,c
  3202  0044D6  6E45               	movwf	btemp+10,c
  3203  0044D8  6A46               	clrf	btemp+11,c
  3204                           
  3205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3206                           ; Switch size 1, requested type "simple"
  3207                           ; Number of cases is 1, Range of values is 0 to 0
  3208                           ; switch strategies available:
  3209                           ; Name         Instructions Cycles
  3210                           ; simple_byte            4     3 (average)
  3211                           ;	Chosen strategy is simple_byte
  3212  0044DA  5046               	movf	btemp+11,w,c
  3213  0044DC  0A00               	xorlw	0	; case 0
  3214  0044DE  A4D8               	btfss	status,2,c
  3215  0044E0  D7E7               	goto	l6217
  3216                           
  3217                           ; BSR set to: 0
  3218                           ; Switch size 1, requested type "simple"
  3219                           ; Number of cases is 3, Range of values is 1 to 13
  3220                           ; switch strategies available:
  3221                           ; Name         Instructions Cycles
  3222                           ; simple_byte           10     6 (average)
  3223                           ;	Chosen strategy is simple_byte
  3224  0044E2  5045               	movf	btemp+10,w,c
  3225  0044E4  0A01               	xorlw	1	; case 1
  3226  0044E6  B4D8               	btfsc	status,2,c
  3227  0044E8  D798               	goto	l6183
  3228  0044EA  0A02               	xorlw	2	; case 3
  3229  0044EC  B4D8               	btfsc	status,2,c
  3230  0044EE  D7B4               	goto	l6197
  3231  0044F0  0A0E               	xorlw	14	; case 13
  3232  0044F2  B4D8               	btfsc	status,2,c
  3233  0044F4  D7C0               	goto	l6203
  3234  0044F6  D7DC               	goto	l6217
  3235  0044F8                     l6229:
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;gemsecs.c: 512:    block.header = (uint8_t*) & H24[0];
  3239  0044F8  0E7D               	movlw	low _H24
  3240  0044FA  6E01               	movwf	secs_II_message@block,c
  3241  0044FC  0E01               	movlw	high _H24
  3242  0044FE  6E02               	movwf	secs_II_message@block+1,c
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;gemsecs.c: 513:    block.length = sizeof(header24);
  3246  004500  0E1B               	movlw	27
  3247  004502  6E03               	movwf	secs_II_message@block+2,c
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;gemsecs.c: 514:    H24[0].block.block.systemb = V.systemb;
  3251  004504  C0B0  F18D         	movff	_V+73,_H24+16
  3252  004508  C0B1  F18E         	movff	_V+74,_H24+17
  3253  00450C  C0B2  F18F         	movff	_V+75,_H24+18
  3254  004510  C0B3  F190         	movff	_V+76,_H24+19
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;gemsecs.c: 515:    H24[0].data[12] = 12;
  3258  004514  0E0C               	movlw	12
  3259  004516  0101               	movlb	1	; () banked
  3260  004518  6F8B               	movwf	(_H24+14)& (0+255),b
  3261                           
  3262                           ;gemsecs.c: 516:    break;
  3263  00451A  D08B               	goto	l6317
  3264  00451C                     l6247:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;stkvar	_function @ sp[(0)+-7]
  3268  00451C  0EF9               	movlw	-7
  3269  00451E  50E3               	movf	plusw1,w,c
  3270  004520  6E45               	movwf	btemp+10,c
  3271  004522  6A46               	clrf	btemp+11,c
  3272                           
  3273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3274                           ; Switch size 1, requested type "simple"
  3275                           ; Number of cases is 1, Range of values is 0 to 0
  3276                           ; switch strategies available:
  3277                           ; Name         Instructions Cycles
  3278                           ; simple_byte            4     3 (average)
  3279                           ;	Chosen strategy is simple_byte
  3280  004524  5046               	movf	btemp+11,w,c
  3281  004526  0A00               	xorlw	0	; case 0
  3282  004528  A4D8               	btfss	status,2,c
  3283  00452A  D7C2               	goto	l6217
  3284                           
  3285                           ; BSR set to: 0
  3286                           ; Switch size 1, requested type "simple"
  3287                           ; Number of cases is 1, Range of values is 17 to 17
  3288                           ; switch strategies available:
  3289                           ; Name         Instructions Cycles
  3290                           ; simple_byte            4     3 (average)
  3291                           ;	Chosen strategy is simple_byte
  3292  00452C  5045               	movf	btemp+10,w,c
  3293  00452E  0A11               	xorlw	17	; case 17
  3294  004530  B4D8               	btfsc	status,2,c
  3295  004532  D7E2               	goto	l6229
  3296  004534  D7BD               	goto	l6217
  3297  004536                     l6249:
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;gemsecs.c: 528:    block.header = (uint8_t*) & H13[0];
  3301  004536  0EBD               	movlw	low _H13
  3302  004538  6E01               	movwf	secs_II_message@block,c
  3303  00453A  0E01               	movlw	high _H13
  3304  00453C  6E02               	movwf	secs_II_message@block+1,c
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;gemsecs.c: 529:    block.length = sizeof(header13);
  3308  00453E  0E10               	movlw	16
  3309  004540  6E03               	movwf	secs_II_message@block+2,c
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;gemsecs.c: 530:    H13[0].block.block.systemb = V.systemb;
  3313  004542  C0B0  F1C2         	movff	_V+73,_H13+5
  3314  004546  C0B1  F1C3         	movff	_V+74,_H13+6
  3315  00454A  C0B2  F1C4         	movff	_V+75,_H13+7
  3316  00454E  C0B3  F1C5         	movff	_V+76,_H13+8
  3317                           
  3318                           ;gemsecs.c: 531:    break;
  3319  004552  D06F               	goto	l6317
  3320  004554                     l6265:
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;stkvar	_function @ sp[(0)+-7]
  3324  004554  0EF9               	movlw	-7
  3325  004556  50E3               	movf	plusw1,w,c
  3326  004558  6E45               	movwf	btemp+10,c
  3327  00455A  6A46               	clrf	btemp+11,c
  3328                           
  3329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3330                           ; Switch size 1, requested type "simple"
  3331                           ; Number of cases is 1, Range of values is 0 to 0
  3332                           ; switch strategies available:
  3333                           ; Name         Instructions Cycles
  3334                           ; simple_byte            4     3 (average)
  3335                           ;	Chosen strategy is simple_byte
  3336  00455C  5046               	movf	btemp+11,w,c
  3337  00455E  0A00               	xorlw	0	; case 0
  3338  004560  A4D8               	btfss	status,2,c
  3339  004562  D7A6               	goto	l6217
  3340                           
  3341                           ; BSR set to: 0
  3342                           ; Switch size 1, requested type "simple"
  3343                           ; Number of cases is 1, Range of values is 11 to 11
  3344                           ; switch strategies available:
  3345                           ; Name         Instructions Cycles
  3346                           ; simple_byte            4     3 (average)
  3347                           ;	Chosen strategy is simple_byte
  3348  004564  5045               	movf	btemp+10,w,c
  3349  004566  0A0B               	xorlw	11	; case 11
  3350  004568  B4D8               	btfsc	status,2,c
  3351  00456A  D7E5               	goto	l6249
  3352  00456C  D7A1               	goto	l6217
  3353  00456E                     l6277:
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;stkvar	_function @ sp[(0)+-7]
  3357  00456E  0EF9               	movlw	-7
  3358  004570  50E3               	movf	plusw1,w,c
  3359  004572  6E45               	movwf	btemp+10,c
  3360  004574  6A46               	clrf	btemp+11,c
  3361                           
  3362                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3363                           ; Switch size 1, requested type "simple"
  3364                           ; Number of cases is 1, Range of values is 0 to 0
  3365                           ; switch strategies available:
  3366                           ; Name         Instructions Cycles
  3367                           ; simple_byte            4     3 (average)
  3368                           ;	Chosen strategy is simple_byte
  3369  004576  5046               	movf	btemp+11,w,c
  3370  004578  0A00               	xorlw	0	; case 0
  3371  00457A  A4D8               	btfss	status,2,c
  3372  00457C  D799               	goto	l6217
  3373                           
  3374                           ; BSR set to: 0
  3375                           ; Switch size 1, requested type "simple"
  3376                           ; Number of cases is 7, Range of values is 1 to 13
  3377                           ; switch strategies available:
  3378                           ; Name         Instructions Cycles
  3379                           ; simple_byte           22    12 (average)
  3380                           ;	Chosen strategy is simple_byte
  3381  00457E  5045               	movf	btemp+10,w,c
  3382  004580  0A01               	xorlw	1	; case 1
  3383  004582  B4D8               	btfsc	status,2,c
  3384  004584  D056               	goto	l6317
  3385  004586  0A02               	xorlw	2	; case 3
  3386  004588  B4D8               	btfsc	status,2,c
  3387  00458A  D053               	goto	l6317
  3388  00458C  0A06               	xorlw	6	; case 5
  3389  00458E  B4D8               	btfsc	status,2,c
  3390  004590  D050               	goto	l6317
  3391  004592  0A02               	xorlw	2	; case 7
  3392  004594  B4D8               	btfsc	status,2,c
  3393  004596  D04D               	goto	l6317
  3394  004598  0A0E               	xorlw	14	; case 9
  3395  00459A  B4D8               	btfsc	status,2,c
  3396  00459C  D04A               	goto	l6317
  3397  00459E  0A02               	xorlw	2	; case 11
  3398  0045A0  B4D8               	btfsc	status,2,c
  3399  0045A2  D047               	goto	l6317
  3400  0045A4  0A06               	xorlw	6	; case 13
  3401  0045A6  B4D8               	btfsc	status,2,c
  3402  0045A8  D044               	goto	l6317
  3403  0045AA  D782               	goto	l6217
  3404  0045AC                     l6279:
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;gemsecs.c: 567:    block.header = (uint8_t*) & H12[0];
  3408  0045AC  0E5F               	movlw	low _H12
  3409  0045AE  6E01               	movwf	secs_II_message@block,c
  3410  0045B0  0E01               	movlw	high _H12
  3411  0045B2  6E02               	movwf	secs_II_message@block+1,c
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;gemsecs.c: 568:    block.length = sizeof(header12);
  3415  0045B4  0E0F               	movlw	15
  3416  0045B6  6E03               	movwf	secs_II_message@block+2,c
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;gemsecs.c: 569:    H12[0].block.block.systemb = V.systemb;
  3420  0045B8  C0B0  F163         	movff	_V+73,_H12+4
  3421  0045BC  C0B1  F164         	movff	_V+74,_H12+5
  3422  0045C0  C0B2  F165         	movff	_V+75,_H12+6
  3423  0045C4  C0B3  F166         	movff	_V+76,_H12+7
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;gemsecs.c: 570:    H53[0].block.block.systemb = V.systemb;
  3427  0045C8  C0B0  F3B3         	movff	_V+73,_H53+45
  3428  0045CC  C0B1  F3B4         	movff	_V+74,_H53+46
  3429  0045D0  C0B2  F3B5         	movff	_V+75,_H53+47
  3430  0045D4  C0B3  F3B6         	movff	_V+76,_H53+48
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;gemsecs.c: 571:    block.respond = 1;
  3434  0045D8  8007               	bsf	secs_II_message@block+6,0,c
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;gemsecs.c: 572:    block.reply = (uint8_t*) & H53[0];
  3438  0045DA  0E86               	movlw	low _H53
  3439  0045DC  6E04               	movwf	secs_II_message@block+3,c
  3440  0045DE  0E03               	movlw	high _H53
  3441  0045E0  6E05               	movwf	secs_II_message@block+4,c
  3442                           
  3443                           ;gemsecs.c: 573:    block.reply_length = sizeof(header53);
  3444  0045E2  0E38               	movlw	56
  3445  0045E4  D736               	goto	L6
  3446  0045E6                     l6303:
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;stkvar	_function @ sp[(0)+-7]
  3450  0045E6  0EF9               	movlw	-7
  3451  0045E8  50E3               	movf	plusw1,w,c
  3452  0045EA  6E45               	movwf	btemp+10,c
  3453  0045EC  6A46               	clrf	btemp+11,c
  3454                           
  3455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3456                           ; Switch size 1, requested type "simple"
  3457                           ; Number of cases is 1, Range of values is 0 to 0
  3458                           ; switch strategies available:
  3459                           ; Name         Instructions Cycles
  3460                           ; simple_byte            4     3 (average)
  3461                           ;	Chosen strategy is simple_byte
  3462  0045EE  5046               	movf	btemp+11,w,c
  3463  0045F0  0A00               	xorlw	0	; case 0
  3464  0045F2  A4D8               	btfss	status,2,c
  3465  0045F4  D75D               	goto	l6217
  3466                           
  3467                           ; BSR set to: 0
  3468                           ; Switch size 1, requested type "simple"
  3469                           ; Number of cases is 1, Range of values is 1 to 1
  3470                           ; switch strategies available:
  3471                           ; Name         Instructions Cycles
  3472                           ; simple_byte            4     3 (average)
  3473                           ;	Chosen strategy is simple_byte
  3474  0045F6  5045               	movf	btemp+10,w,c
  3475  0045F8  0A01               	xorlw	1	; case 1
  3476  0045FA  B4D8               	btfsc	status,2,c
  3477  0045FC  D7D7               	goto	l6279
  3478  0045FE  D758               	goto	l6217
  3479  004600                     l6315:
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;stkvar	_stream @ sp[(0)+-6]
  3483  004600  0EFA               	movlw	-6
  3484  004602  50E3               	movf	plusw1,w,c
  3485  004604  6E45               	movwf	btemp+10,c
  3486  004606  6A46               	clrf	btemp+11,c
  3487                           
  3488                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3489                           ; Switch size 1, requested type "simple"
  3490                           ; Number of cases is 1, Range of values is 0 to 0
  3491                           ; switch strategies available:
  3492                           ; Name         Instructions Cycles
  3493                           ; simple_byte            4     3 (average)
  3494                           ;	Chosen strategy is simple_byte
  3495  004608  5046               	movf	btemp+11,w,c
  3496  00460A  0A00               	xorlw	0	; case 0
  3497  00460C  A4D8               	btfss	status,2,c
  3498  00460E  D750               	goto	l6217
  3499                           
  3500                           ; BSR set to: 0
  3501                           ; Switch size 1, requested type "simple"
  3502                           ; Number of cases is 5, Range of values is 1 to 10
  3503                           ; switch strategies available:
  3504                           ; Name         Instructions Cycles
  3505                           ; simple_byte           16     9 (average)
  3506                           ;	Chosen strategy is simple_byte
  3507  004610  5045               	movf	btemp+10,w,c
  3508  004612  0A01               	xorlw	1	; case 1
  3509  004614  B4D8               	btfsc	status,2,c
  3510  004616  D75D               	goto	l6227
  3511  004618  0A03               	xorlw	3	; case 2
  3512  00461A  B4D8               	btfsc	status,2,c
  3513  00461C  D77F               	goto	l6247
  3514  00461E  0A04               	xorlw	4	; case 6
  3515  004620  B4D8               	btfsc	status,2,c
  3516  004622  D798               	goto	l6265
  3517  004624  0A0F               	xorlw	15	; case 9
  3518  004626  B4D8               	btfsc	status,2,c
  3519  004628  D7A2               	goto	l6277
  3520  00462A  0A03               	xorlw	3	; case 10
  3521  00462C  B4D8               	btfsc	status,2,c
  3522  00462E  D7DB               	goto	l6303
  3523  004630  D73F               	goto	l6217
  3524  004632                     l6317:
  3525                           
  3526                           ;gemsecs.c: 592:  return(block);
  3527  004632  EE20  F001         	lfsr	2,secs_II_message@block
  3528                           
  3529                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  3530  004636  0E07               	movlw	7
  3531  004638  6E3B               	movwf	btemp,c
  3532  00463A  0EF9               	movlw	-7
  3533  00463C                     us341999:
  3534  00463C  006F FF7B FFE3     	movff	postinc2,plusw1
  3535  004642  28E8               	incf	wreg,w,c
  3536  004644  2E3B               	decfsz	btemp,f,c
  3537  004646  D7FA               	bra	us341999
  3538                           
  3539                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  3540  004648  0012               	return		;funcret
  3541  00464A                     __end_of_secs_II_message:
  3542                           	opt callstack 0
  3543                           
  3544 ;; *************** function _sprintf *****************
  3545 ;; Defined at:
  3546 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  s               1  [STACK] PTR unsigned char 
  3549 ;;		 -> V(89), 
  3550 ;;  fmt             1  [STACK] PTR const unsigned char 
  3551 ;;		 -> STR_15(21), STR_14(19), STR_13(6), STR_12(17), 
  3552 ;;		 -> STR_11(19), STR_10(19), STR_9(20), STR_8(6), 
  3553 ;;		 -> STR_7(6), STR_6(14), STR_5(19), STR_4(15), 
  3554 ;;		 -> STR_2(12), STR_1(17), 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  f               5  [STACK] struct _IO_FILE
  3557 ;;  ap              2  [STACK] PTR void [1]
  3558 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3559 ;;  ret             2    0        int 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  2  [STACK] int 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3564 ;; Tracked objects:
  3565 ;;		On entry : 4/0
  3566 ;;		On exit  : 3F/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3573 ;;Total ram usage:        0 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:   11
  3576 ;; This function calls:
  3577 ;;		_vfprintf
  3578 ;; This function is called by:
  3579 ;;		_main
  3580 ;; This function uses a reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text3
  3584  004F94                     __ptext3:
  3585                           	opt callstack 0
  3586  004F94                     _sprintf:
  3587                           	opt callstack 0
  3588                           
  3589                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3590  004F94  0E07               	movlw	7
  3591  004F96  26E1               	addwf	fsr1l,f,c
  3592  004F98  0E00               	movlw	0
  3593  004F9A  22E2               	addwfc	fsr1h,f,c
  3594                           
  3595                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  3596                           
  3597                           ;incstack = 0
  3598  004F9C  0EF6               	movlw	246
  3599  004F9E  24E1               	addwf	fsr1l,w,c
  3600  004FA0  6E45               	movwf	btemp+10,c
  3601  004FA2  0EFF               	movlw	255
  3602  004FA4  20E2               	addwfc	fsr1h,w,c
  3603  004FA6  6E46               	movwf	btemp+11,c
  3604                           
  3605                           ;stkvar	_ap @ sp[(-7)+5]
  3606  004FA8  0EFF               	movlw	-1
  3607  004FAA  0060  F11B  FFE3   	movff	btemp+11,plusw1
  3608  004FB0  0EFE               	movlw	-2
  3609  004FB2  0060  F117  FFE3   	movff	btemp+10,plusw1
  3610                           
  3611                           ;stkvar	_s @ sp[(-7)+-2]
  3612  004FB8  0EF7               	movlw	-9
  3613  004FBA  006F FF8C  F046    	movff	plusw1,btemp+11
  3614                           
  3615                           ;stkvar	_f @ sp[(-7)+0]
  3616  004FC0  0EF9               	movlw	-7
  3617  004FC2  0060  F11B  FFE3   	movff	btemp+11,plusw1
  3618                           
  3619                           ;stkvar	_f @ sp[(-7)+0]
  3620  004FC8  0EFA               	movlw	250
  3621  004FCA  24E1               	addwf	fsr1l,w,c
  3622  004FCC  6ED9               	movwf	fsr2l,c
  3623  004FCE  0EFF               	movlw	255
  3624  004FD0  20E2               	addwfc	fsr1h,w,c
  3625  004FD2  6EDA               	movwf	fsr2h,c
  3626  004FD4  0E00               	movlw	0
  3627  004FD6  6EDE               	movwf	postinc2,c
  3628  004FD8  0E00               	movlw	0
  3629  004FDA  6EDD               	movwf	postdec2,c
  3630                           
  3631                           ;stkvar	_f @ sp[(-7)+0]
  3632  004FDC  0EFC               	movlw	252
  3633  004FDE  24E1               	addwf	fsr1l,w,c
  3634  004FE0  6ED9               	movwf	fsr2l,c
  3635  004FE2  0EFF               	movlw	255
  3636  004FE4  20E2               	addwfc	fsr1h,w,c
  3637  004FE6  6EDA               	movwf	fsr2h,c
  3638  004FE8  0E00               	movlw	0
  3639  004FEA  6EDE               	movwf	postinc2,c
  3640  004FEC  0E00               	movlw	0
  3641  004FEE  6EDD               	movwf	postdec2,c
  3642                           
  3643                           ;stkvar	_ap @ sp[(-7)+5]
  3644  004FF0  0EFE               	movlw	254
  3645  004FF2  24E1               	addwf	fsr1l,w,c
  3646  004FF4  6E3B               	movwf	btemp,c
  3647  004FF6  0EFF               	movlw	255
  3648  004FF8  20E2               	addwfc	fsr1h,w,c
  3649  004FFA  6E3C               	movwf	btemp+1,c
  3650  004FFC  0060  F0EF  FFE6   	movff	btemp,postinc1
  3651  005002  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  3652                           
  3653                           ;stkvar	_fmt @ sp[(-9)+-3]
  3654  005008  0EF4               	movlw	-12
  3655  00500A  50E3               	movf	plusw1,w,c
  3656  00500C  6EE6               	movwf	postinc1,c
  3657                           
  3658                           ;stkvar	_f @ sp[(-10)+0]
  3659  00500E  0EF6               	movlw	246
  3660  005010  24E1               	addwf	fsr1l,w,c
  3661  005012  6E3B               	movwf	btemp,c
  3662  005014  0EFF               	movlw	255
  3663  005016  20E2               	addwfc	fsr1h,w,c
  3664  005018  6E3C               	movwf	btemp+1,c
  3665  00501A  0060  F0EF  FFE6   	movff	btemp,postinc1
  3666  005020  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  3667  005026  EC72  F029         	call	_vfprintf	;wreg free
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;stkvar	_f @ sp[(-7)+0]
  3671  00502A  0EFA               	movlw	250
  3672  00502C  24E1               	addwf	fsr1l,w,c
  3673  00502E  6ED9               	movwf	fsr2l,c
  3674  005030  0EFF               	movlw	255
  3675  005032  20E2               	addwfc	fsr1h,w,c
  3676  005034  6EDA               	movwf	fsr2h,c
  3677  005036  50DF               	movf	indf2,w,c
  3678  005038  6E46               	movwf	btemp+11,c
  3679                           
  3680                           ;stkvar	_s @ sp[(-7)+-2]
  3681  00503A  0EF7               	movlw	-9
  3682  00503C  50E3               	movf	plusw1,w,c
  3683  00503E  2446               	addwf	btemp+11,w,c
  3684  005040  6ED9               	movwf	fsr2l,c
  3685  005042  6ADA               	clrf	fsr2h,c
  3686  005044  0E00               	movlw	0
  3687  005046  6EDF               	movwf	indf2,c
  3688                           
  3689                           ; BSR set to: 0
  3690                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  3691  005048  0EF9               	movlw	249
  3692  00504A  26E1               	addwf	fsr1l,f,c
  3693  00504C  0EFF               	movlw	255
  3694  00504E  22E2               	addwfc	fsr1h,f,c
  3695  005050  52E5               	movf	postdec1,f,c
  3696  005052  50E7               	movf	indf1,w,c
  3697  005054  5EE1               	subwf	fsr1l,f,c
  3698  005056  0E00               	movlw	0
  3699  005058  5AE2               	subwfb	fsr1h,f,c
  3700  00505A  0012               	return		;funcret
  3701  00505C                     __end_of_sprintf:
  3702                           	opt callstack 0
  3703                           
  3704 ;; *************** function _r_protocol *****************
  3705 ;; Defined at:
  3706 ;;		line 197 in file "gemsecs.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  r_link          1  [STACK] PTR enum E16164
  3709 ;;		 -> V(89), 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  rxData          1  [STACK] unsigned char 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1  [STACK] enum E16904
  3714 ;; Registers used:
  3715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    5
  3728 ;; This function calls:
  3729 ;;		_StartTimer
  3730 ;;		_TimerDone
  3731 ;;		_UART1_Read
  3732 ;;		_UART1_Write
  3733 ;;		_UART1_is_rx_ready
  3734 ;;		_WaitMs
  3735 ;;		_run_checksum
  3736 ;;		_secs_send
  3737 ;; This function is called by:
  3738 ;;		_main
  3739 ;; This function uses a reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text4
  3743  0033D0                     __ptext4:
  3744                           	opt callstack 0
  3745  0033D0                     _r_protocol:
  3746                           	opt callstack 0
  3747                           
  3748                           ; BSR set to: 0
  3749                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3750  0033D0  52E6               	movf	postinc1,f,c
  3751                           
  3752                           ;gemsecs.c: 197: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 198: {;gemsecs.
      +                          c: 199:  uint8_t rxData;;gemsecs.c: 200:  static uint8_t rxData_l = 0, retry = 3;;gemsec
      +                          s.c: 202:  switch (*r_link) {
  3753                           
  3754                           ;incstack = 0
  3755  0033D2  D157               	goto	l8335
  3756  0033D4                     l8223:
  3757                           
  3758                           ;gemsecs.c: 204:   if (UART1_is_rx_ready()) {
  3759  0033D4  EC57  F031         	call	_UART1_is_rx_ready	;wreg free
  3760  0033D8  503B               	movf	btemp,w,c
  3761  0033DA  B4D8               	btfsc	status,2,c
  3762  0033DC  D173               	goto	l8337
  3763                           
  3764                           ;gemsecs.c: 205:    rxData = UART1_Read();
  3765  0033DE  EC68  F02D         	call	_UART1_Read	;wreg free
  3766                           
  3767                           ;stkvar	_rxData @ sp[(-1)+0]
  3768  0033E2  0EFF               	movlw	-1
  3769  0033E4  0060  F0EF  FFE3   	movff	btemp,plusw1
  3770                           
  3771                           ; BSR set to: 57
  3772                           ;gemsecs.c: 206:    if (rxData == 0x05) {
  3773                           ;stkvar	_rxData @ sp[(-1)+0]
  3774  0033EA  0EFF               	movlw	-1
  3775  0033EC  006F FF8C  F03B    	movff	plusw1,btemp
  3776  0033F2  0E05               	movlw	5
  3777  0033F4  183B               	xorwf	btemp,w,c
  3778  0033F6  A4D8               	btfss	status,2,c
  3779  0033F8  D165               	goto	l8337
  3780                           
  3781                           ; BSR set to: 57
  3782                           ;gemsecs.c: 207:     V.error = LINK_ERROR_NONE;
  3783  0033FA  0100               	movlb	0	; () banked
  3784  0033FC  6BB6               	clrf	(_V+79)& (0+255),b
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;gemsecs.c: 208:     *r_link = LINK_STATE_ENQ;
  3788                           ;stkvar	_r_link @ sp[(-1)+-1]
  3789  0033FE  0EFE               	movlw	-2
  3790  003400  50E3               	movf	plusw1,w,c
  3791  003402  6ED9               	movwf	fsr2l,c
  3792  003404  6ADA               	clrf	fsr2h,c
  3793  003406  0E01               	movlw	1
  3794  003408  D123               	goto	L10
  3795  00340A                     l1609:
  3796                           
  3797                           ;gemsecs.c: 213:   rxData_l = 0;
  3798  00340A  6A2C               	clrf	r_protocol@rxData_l,c
  3799                           
  3800                           ;gemsecs.c: 214:   UART1_Write(0x04);
  3801  00340C  0E04               	movlw	4
  3802  00340E  6EE6               	movwf	postinc1,c
  3803  003410  EC2A  F02D         	call	_UART1_Write	;wreg free
  3804                           
  3805                           ; BSR set to: 57
  3806                           ;gemsecs.c: 215:   StartTimer(TMR_T2, 2000);
  3807  003414  0ED0               	movlw	208
  3808  003416  6EE6               	movwf	postinc1,c
  3809  003418  0E07               	movlw	7
  3810  00341A  6EE6               	movwf	postinc1,c
  3811  00341C  0E02               	movlw	2
  3812  00341E  6EE6               	movwf	postinc1,c
  3813  003420  ECA7  F02D         	call	_StartTimer	;wreg free
  3814                           
  3815                           ;gemsecs.c: 216:   *r_link = LINK_STATE_EOT;
  3816                           ;stkvar	_r_link @ sp[(-1)+-1]
  3817  003424  0EFE               	movlw	-2
  3818  003426  50E3               	movf	plusw1,w,c
  3819  003428  6ED9               	movwf	fsr2l,c
  3820  00342A  6ADA               	clrf	fsr2h,c
  3821  00342C  0E02               	movlw	2
  3822  00342E  6EDF               	movwf	indf2,c
  3823                           
  3824                           ;gemsecs.c: 218:   WaitMs(5);
  3825  003430  0E05               	movlw	5
  3826  003432  6EE6               	movwf	postinc1,c
  3827  003434  0E00               	movlw	0
  3828  003436  6EE6               	movwf	postinc1,c
  3829  003438  EC63  F02E         	call	_WaitMs	;wreg free
  3830                           
  3831                           ;gemsecs.c: 219:   H27[0].block.block.systemb = V.ticks;
  3832  00343C  C0AC  F154         	movff	_V+69,_H27+19
  3833  003440  C0AD  F155         	movff	_V+70,_H27+20
  3834  003444  C0AE  F156         	movff	_V+71,_H27+21
  3835  003448  C0AF  F157         	movff	_V+72,_H27+22
  3836                           
  3837                           ;gemsecs.c: 220:   secs_send((uint8_t*) & H27[0], sizeof(header27), 1, 1);
  3838  00344C  0E01               	movlw	1
  3839  00344E  6EE6               	movwf	postinc1,c
  3840  003450  0E01               	movlw	1
  3841  003452  6EE6               	movwf	postinc1,c
  3842  003454  0E1E               	movlw	30
  3843  003456  6EE6               	movwf	postinc1,c
  3844  003458  0E41               	movlw	low _H27
  3845  00345A  6EE6               	movwf	postinc1,c
  3846  00345C  0E01               	movlw	high _H27
  3847  00345E  6EE6               	movwf	postinc1,c
  3848  003460  ECD0  F020         	call	_secs_send	;wreg free
  3849                           
  3850                           ;gemsecs.c: 222:   break;
  3851  003464  D12F               	goto	l8337
  3852  003466                     l8245:
  3853                           
  3854                           ;gemsecs.c: 224:   if (TimerDone(TMR_T2)) {
  3855  003466  0E02               	movlw	2
  3856  003468  6EE6               	movwf	postinc1,c
  3857  00346A  EC19  F030         	call	_TimerDone	;wreg free
  3858  00346E  503B               	movf	btemp,w,c
  3859  003470  B4D8               	btfsc	status,2,c
  3860  003472  D017               	goto	l8255
  3861                           
  3862                           ;gemsecs.c: 225:    if (!retry--) {
  3863  003474  065D               	decf	r_protocol@retry,f,c
  3864  003476  285D               	incf	r_protocol@retry,w,c
  3865  003478  A4D8               	btfss	status,2,c
  3866  00347A  D00D               	goto	l8253
  3867                           
  3868                           ;gemsecs.c: 226:     V.error = LINK_ERROR_T2;
  3869  00347C  0E02               	movlw	2
  3870  00347E  0100               	movlb	0	; () banked
  3871  003480  6FB6               	movwf	(_V+79)& (0+255),b
  3872                           
  3873                           ;gemsecs.c: 227:     V.failed_receive = 1;
  3874  003482  51BE               	movf	(_V+87)& (0+255),w,b
  3875  003484  0BF0               	andlw	-16
  3876  003486  0901               	iorlw	1
  3877  003488  6FBE               	movwf	(_V+87)& (0+255),b
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;gemsecs.c: 228:     *r_link = LINK_STATE_NAK;
  3881                           ;stkvar	_r_link @ sp[(-1)+-1]
  3882  00348A  0EFE               	movlw	-2
  3883  00348C  50E3               	movf	plusw1,w,c
  3884  00348E  6ED9               	movwf	fsr2l,c
  3885  003490  6ADA               	clrf	fsr2h,c
  3886  003492  0E05               	movlw	5
  3887  003494  D0DD               	goto	L10
  3888  003496                     l8253:
  3889                           
  3890                           ;gemsecs.c: 230:     *r_link = LINK_STATE_IDLE;
  3891                           ;stkvar	_r_link @ sp[(-1)+-1]
  3892  003496  0EFE               	movlw	-2
  3893  003498  50E3               	movf	plusw1,w,c
  3894  00349A  6ED9               	movwf	fsr2l,c
  3895  00349C  6ADA               	clrf	fsr2h,c
  3896  00349E  0E00               	movlw	0
  3897  0034A0  D0D7               	goto	L10
  3898  0034A2                     l8255:
  3899                           
  3900                           ;gemsecs.c: 233:    if (UART1_is_rx_ready()) {
  3901  0034A2  EC57  F031         	call	_UART1_is_rx_ready	;wreg free
  3902  0034A6  503B               	movf	btemp,w,c
  3903  0034A8  B4D8               	btfsc	status,2,c
  3904  0034AA  D10C               	goto	l8337
  3905                           
  3906                           ;gemsecs.c: 234:     rxData = UART1_Read();
  3907  0034AC  EC68  F02D         	call	_UART1_Read	;wreg free
  3908                           
  3909                           ;stkvar	_rxData @ sp[(-1)+0]
  3910  0034B0  0EFF               	movlw	-1
  3911  0034B2  0060  F0EF  FFE3   	movff	btemp,plusw1
  3912                           
  3913                           ; BSR set to: 57
  3914                           ;gemsecs.c: 235:     if (rxData_l == 0) {
  3915  0034B8  502C               	movf	r_protocol@rxData_l,w,c
  3916  0034BA  A4D8               	btfss	status,2,c
  3917  0034BC  D00C               	goto	l8267
  3918                           
  3919                           ; BSR set to: 57
  3920                           ;gemsecs.c: 236:      r_block.length = rxData;
  3921                           ;stkvar	_rxData @ sp[(-1)+0]
  3922  0034BE  0EFF               	movlw	-1
  3923  0034C0  006F FF8C  F0CC    	movff	plusw1,_r_block+12
  3924                           
  3925                           ; BSR set to: 57
  3926                           ;gemsecs.c: 237:      run_checksum(0, 1);
  3927  0034C6  0E01               	movlw	1
  3928  0034C8  6EE6               	movwf	postinc1,c
  3929  0034CA  0E00               	movlw	0
  3930  0034CC  6EE6               	movwf	postinc1,c
  3931  0034CE  ECE1  F02D         	call	_run_checksum	;wreg free
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;gemsecs.c: 238:      rxData_l++;
  3935  0034D2  2A2C               	incf	r_protocol@rxData_l,f,c
  3936                           
  3937                           ;gemsecs.c: 239:     } else {
  3938  0034D4  D0F7               	goto	l8337
  3939  0034D6                     l8267:
  3940                           
  3941                           ; BSR set to: 57
  3942                           ;gemsecs.c: 243:      if (rxData_l <= sizeof(block10))
  3943  0034D6  0E0B               	movlw	11
  3944  0034D8  602C               	cpfslt	r_protocol@rxData_l,c
  3945  0034DA  D00C               	goto	l8271
  3946                           
  3947                           ; BSR set to: 57
  3948                           ;gemsecs.c: 244:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  3949                           ;stkvar	_rxData @ sp[(-1)+0]
  3950  0034DC  502C               	movf	r_protocol@rxData_l,w,c
  3951  0034DE  0819               	sublw	low (_H10+25)
  3952  0034E0  6ED9               	movwf	fsr2l,c
  3953  0034E2  0E00               	movlw	0
  3954  0034E4  A0D8               	btfss	status,0,c
  3955  0034E6  2AE8               	incf	wreg,f,c
  3956  0034E8  0801               	sublw	high (_H10+25)
  3957  0034EA  6EDA               	movwf	fsr2h,c
  3958  0034EC  0EFF               	movlw	-1
  3959  0034EE  006F FF8F FFDF     	movff	plusw1,indf2
  3960  0034F4                     l8271:
  3961                           
  3962                           ; BSR set to: 57
  3963                           ;gemsecs.c: 245:      if (rxData_l <= r_block.length)
  3964  0034F4  502C               	movf	r_protocol@rxData_l,w,c
  3965  0034F6  0100               	movlb	0	; () banked
  3966  0034F8  5DCC               	subwf	(_r_block+12)& (0+255),w,b
  3967  0034FA  A0D8               	btfss	status,0,c
  3968  0034FC  D00D               	goto	l8275
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;gemsecs.c: 246:       V.r_checksum = run_checksum(rxData, 0);
  3972  0034FE  0E00               	movlw	0
  3973  003500  6EE6               	movwf	postinc1,c
  3974                           
  3975                           ;stkvar	_rxData @ sp[(-2)+0]
  3976  003502  0EFE               	movlw	-2
  3977  003504  50E3               	movf	plusw1,w,c
  3978  003506  6EE6               	movwf	postinc1,c
  3979  003508  ECE1  F02D         	call	_run_checksum	;wreg free
  3980  00350C  0060  F0EC  F0B9   	movff	btemp,_V+82
  3981  003512  0060  F0F0  F0BA   	movff	btemp+1,_V+83
  3982  003518                     l8275:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;gemsecs.c: 248:      if (rxData_l == r_block.length + 1)
  3986  003518  502C               	movf	r_protocol@rxData_l,w,c
  3987  00351A  6E45               	movwf	btemp+10,c
  3988  00351C  6A46               	clrf	btemp+11,c
  3989  00351E  51CC               	movf	(_r_block+12)& (0+255),w,b
  3990  003520  6E43               	movwf	btemp+8,c
  3991  003522  6A44               	clrf	btemp+9,c
  3992  003524  0E01               	movlw	1
  3993  003526  2643               	addwf	btemp+8,f,c
  3994  003528  0E00               	movlw	0
  3995  00352A  2244               	addwfc	btemp+9,f,c
  3996  00352C  5045               	movf	btemp+10,w,c
  3997  00352E  1843               	xorwf	btemp+8,w,c
  3998  003530  E109               	bnz	l8279
  3999  003532  5046               	movf	btemp+11,w,c
  4000  003534  1844               	xorwf	btemp+9,w,c
  4001  003536  A4D8               	btfss	status,2,c
  4002  003538  D005               	goto	l8279
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;gemsecs.c: 249:       H10[1].checksum = (uint16_t) rxData << 8;
  4006                           ;stkvar	_rxData @ sp[(-1)+0]
  4007  00353A  0EFF               	movlw	-1
  4008  00353C  50E3               	movf	plusw1,w,c
  4009  00353E  0101               	movlb	1	; () banked
  4010  003540  6F0E               	movwf	(_H10+14)& (0+255),b
  4011  003542  6B0D               	clrf	(_H10+13)& (0+255),b
  4012  003544                     l8279:
  4013                           
  4014                           ;gemsecs.c: 250:      if (rxData_l == r_block.length + 2)
  4015  003544  502C               	movf	r_protocol@rxData_l,w,c
  4016  003546  6E45               	movwf	btemp+10,c
  4017  003548  6A46               	clrf	btemp+11,c
  4018  00354A  0100               	movlb	0	; () banked
  4019  00354C  51CC               	movf	(_r_block+12)& (0+255),w,b
  4020  00354E  6E43               	movwf	btemp+8,c
  4021  003550  6A44               	clrf	btemp+9,c
  4022  003552  0E02               	movlw	2
  4023  003554  2643               	addwf	btemp+8,f,c
  4024  003556  0E00               	movlw	0
  4025  003558  2244               	addwfc	btemp+9,f,c
  4026  00355A  5045               	movf	btemp+10,w,c
  4027  00355C  1843               	xorwf	btemp+8,w,c
  4028  00355E  E10A               	bnz	l8283
  4029  003560  5046               	movf	btemp+11,w,c
  4030  003562  1844               	xorwf	btemp+9,w,c
  4031  003564  A4D8               	btfss	status,2,c
  4032  003566  D006               	goto	l8283
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;gemsecs.c: 251:       H10[1].checksum += rxData;
  4036                           ;stkvar	_rxData @ sp[(-1)+0]
  4037  003568  0EFF               	movlw	-1
  4038  00356A  50E3               	movf	plusw1,w,c
  4039  00356C  0101               	movlb	1	; () banked
  4040  00356E  270D               	addwf	(_H10+13)& (0+255),f,b
  4041  003570  0E00               	movlw	0
  4042  003572  230E               	addwfc	(_H10+14)& (0+255),f,b
  4043  003574                     l8283:
  4044                           
  4045                           ;gemsecs.c: 253:      rxData_l++;
  4046  003574  2A2C               	incf	r_protocol@rxData_l,f,c
  4047                           
  4048                           ;gemsecs.c: 254:      if (rxData_l > (r_block.length + 2)) {
  4049  003576  502C               	movf	r_protocol@rxData_l,w,c
  4050  003578  6E45               	movwf	btemp+10,c
  4051  00357A  6A46               	clrf	btemp+11,c
  4052  00357C  0100               	movlb	0	; () banked
  4053  00357E  51CC               	movf	(_r_block+12)& (0+255),w,b
  4054  003580  6E43               	movwf	btemp+8,c
  4055  003582  6A44               	clrf	btemp+9,c
  4056  003584  0E02               	movlw	2
  4057  003586  2643               	addwf	btemp+8,f,c
  4058  003588  0E00               	movlw	0
  4059  00358A  2244               	addwfc	btemp+9,f,c
  4060  00358C  5045               	movf	btemp+10,w,c
  4061  00358E  5C43               	subwf	btemp+8,w,c
  4062  003590  5044               	movf	btemp+9,w,c
  4063  003592  0A80               	xorlw	128
  4064  003594  6E3B               	movwf	btemp,c
  4065  003596  5046               	movf	btemp+11,w,c
  4066  003598  0A80               	xorlw	128
  4067  00359A  583B               	subwfb	btemp,w,c
  4068  00359C  B0D8               	btfsc	status,0,c
  4069  00359E  D092               	goto	l8337
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;gemsecs.c: 255:       if (V.r_checksum == H10[1].checksum) {
  4073  0035A0  0101               	movlb	1	; () banked
  4074  0035A2  510D               	movf	(_H10+13)& (0+255),w,b
  4075  0035A4  0100               	movlb	0	; () banked
  4076  0035A6  19B9               	xorwf	(_V+82)& (0+255),w,b
  4077  0035A8  E10E               	bnz	l8293
  4078  0035AA  0101               	movlb	1	; () banked
  4079  0035AC  510E               	movf	(_H10+14)& (0+255),w,b
  4080  0035AE  0100               	movlb	0	; () banked
  4081  0035B0  19BA               	xorwf	(_V+83)& (0+255),w,b
  4082  0035B2  A4D8               	btfss	status,2,c
  4083  0035B4  D008               	goto	l8293
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;gemsecs.c: 256:        *r_link = LINK_STATE_ACK;
  4087                           ;stkvar	_r_link @ sp[(-1)+-1]
  4088  0035B6  0EFE               	movlw	-2
  4089  0035B8  50E3               	movf	plusw1,w,c
  4090  0035BA  6ED9               	movwf	fsr2l,c
  4091  0035BC  6ADA               	clrf	fsr2h,c
  4092  0035BE  0E03               	movlw	3
  4093  0035C0  D047               	goto	L10
  4094  0035C2                     l8291:
  4095  0035C2  EC68  F02D         	call	_UART1_Read	;wreg free
  4096  0035C6                     l8293:
  4097                           
  4098                           ;gemsecs.c: 258:        while (UART1_is_rx_ready())
  4099  0035C6  EC57  F031         	call	_UART1_is_rx_ready	;wreg free
  4100  0035CA  503B               	movf	btemp,w,c
  4101  0035CC  A4D8               	btfss	status,2,c
  4102  0035CE  D7F9               	goto	l8291
  4103                           
  4104                           ;gemsecs.c: 260:        WaitMs(500);
  4105  0035D0  0EF4               	movlw	244
  4106  0035D2  6EE6               	movwf	postinc1,c
  4107  0035D4  0E01               	movlw	1
  4108  0035D6  6EE6               	movwf	postinc1,c
  4109  0035D8  EC63  F02E         	call	_WaitMs	;wreg free
  4110                           
  4111                           ;gemsecs.c: 261:        V.error = LINK_ERROR_CHECKSUM;
  4112  0035DC  0E05               	movlw	5
  4113  0035DE  0100               	movlb	0	; () banked
  4114  0035E0  6FB6               	movwf	(_V+79)& (0+255),b
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;gemsecs.c: 262:        V.failed_receive = 2;
  4118  0035E2  51BE               	movf	(_V+87)& (0+255),w,b
  4119  0035E4  0BF0               	andlw	-16
  4120  0035E6  0902               	iorlw	2
  4121  0035E8  D74F               	goto	L11
  4122  0035EA                     l8303:
  4123                           
  4124                           ;gemsecs.c: 271:   V.stream = H10[1].block.block.stream;
  4125  0035EA  0101               	movlb	1	; () banked
  4126  0035EC  5116               	movf	(_H10+22)& (0+255),w,b
  4127  0035EE  0B7F               	andlw	127
  4128  0035F0  0100               	movlb	0	; () banked
  4129  0035F2  6FB4               	movwf	(_V+77)& (0+255),b
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;gemsecs.c: 272:   V.function = H10[1].block.block.function;
  4133  0035F4  C115  F0B5         	movff	_H10+21,_V+78
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;gemsecs.c: 273:   V.systemb = H10[1].block.block.systemb;
  4137  0035F8  C10F  F0B0         	movff	_H10+15,_V+73
  4138  0035FC  C110  F0B1         	movff	_H10+16,_V+74
  4139  003600  C111  F0B2         	movff	_H10+17,_V+75
  4140  003604  C112  F0B3         	movff	_H10+18,_V+76
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;gemsecs.c: 274:   V.rbit = H10[1].block.block.rbit;
  4144  003608  0101               	movlb	1	; () banked
  4145  00360A  AF18               	btfss	(_H10+24)& (0+255),7,b
  4146  00360C  D003               	bra	u5195
  4147  00360E  0100               	movlb	0	; () banked
  4148  003610  81BD               	bsf	(_V+86)& (0+255),0,b
  4149  003612  D002               	bra	u5197
  4150  003614                     u5195:
  4151  003614  0100               	movlb	0	; () banked
  4152  003616  91BD               	bcf	(_V+86)& (0+255),0,b
  4153  003618                     u5197:
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;gemsecs.c: 275:   V.wbit = H10[1].block.block.wbit;
  4157  003618  0101               	movlb	1	; () banked
  4158  00361A  AF16               	btfss	(_H10+22)& (0+255),7,b
  4159  00361C  D003               	bra	u5205
  4160  00361E  0100               	movlb	0	; () banked
  4161  003620  83BD               	bsf	(_V+86)& (0+255),1,b
  4162  003622  D002               	bra	u5207
  4163  003624                     u5205:
  4164  003624  0100               	movlb	0	; () banked
  4165  003626  93BD               	bcf	(_V+86)& (0+255),1,b
  4166  003628                     u5207:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;gemsecs.c: 276:   V.ebit = H10[1].block.block.ebit;
  4170  003628  0101               	movlb	1	; () banked
  4171  00362A  AF14               	btfss	(_H10+20)& (0+255),7,b
  4172  00362C  D003               	bra	u5215
  4173  00362E  0100               	movlb	0	; () banked
  4174  003630  85BD               	bsf	(_V+86)& (0+255),2,b
  4175  003632  D002               	bra	u5217
  4176  003634                     u5215:
  4177  003634  0100               	movlb	0	; () banked
  4178  003636  95BD               	bcf	(_V+86)& (0+255),2,b
  4179  003638                     u5217:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;gemsecs.c: 277:   UART1_Write(0x06);
  4183  003638  0E06               	movlw	6
  4184  00363A  6EE6               	movwf	postinc1,c
  4185  00363C  EC2A  F02D         	call	_UART1_Write	;wreg free
  4186                           
  4187                           ; BSR set to: 57
  4188                           ;gemsecs.c: 278:   V.failed_receive = 0;
  4189  003640  0EF0               	movlw	-16
  4190  003642  0100               	movlb	0	; () banked
  4191  003644  17BE               	andwf	(_V+87)& (0+255),f,b
  4192                           
  4193                           ;gemsecs.c: 279:   *r_link = LINK_STATE_DONE;
  4194                           ;stkvar	_r_link @ sp[(-1)+-1]
  4195  003646  0EFE               	movlw	-2
  4196  003648  50E3               	movf	plusw1,w,c
  4197  00364A  6ED9               	movwf	fsr2l,c
  4198  00364C  6ADA               	clrf	fsr2h,c
  4199  00364E  0E04               	movlw	4
  4200  003650                     L10:
  4201  003650  6EDF               	movwf	indf2,c
  4202                           
  4203                           ;gemsecs.c: 280:   break;
  4204  003652  D038               	goto	l8337
  4205  003654                     l8319:
  4206                           
  4207                           ;gemsecs.c: 282:   UART1_Write(0x15);
  4208  003654  0E15               	movlw	21
  4209  003656  6EE6               	movwf	postinc1,c
  4210  003658  EC2A  F02D         	call	_UART1_Write	;wreg free
  4211                           
  4212                           ; BSR set to: 57
  4213                           ;gemsecs.c: 283:   *r_link = LINK_STATE_ERROR;
  4214                           ;stkvar	_r_link @ sp[(-1)+-1]
  4215  00365C  0EFE               	movlw	-2
  4216  00365E  50E3               	movf	plusw1,w,c
  4217  003660  6ED9               	movwf	fsr2l,c
  4218  003662  6ADA               	clrf	fsr2h,c
  4219  003664  0E06               	movlw	6
  4220  003666  6EDF               	movwf	indf2,c
  4221                           
  4222                           ;gemsecs.c: 284:   while ((uart1RxCount)) {
  4223  003668  D002               	goto	l8325
  4224  00366A                     l8323:
  4225                           
  4226                           ; BSR set to: 57
  4227                           ;gemsecs.c: 285:    UART1_Read();
  4228  00366A  EC68  F02D         	call	_UART1_Read	;wreg free
  4229  00366E                     l8325:
  4230                           
  4231                           ; BSR set to: 57
  4232                           ;gemsecs.c: 284:   while ((uart1RxCount)) {
  4233  00366E  5035               	movf	_uart1RxCount,w,c	;volatile
  4234  003670  A4D8               	btfss	status,2,c
  4235  003672  D7FB               	goto	l8323
  4236                           
  4237                           ; BSR set to: 57
  4238                           ;gemsecs.c: 287:   retry = 3;
  4239  003674  0E03               	movlw	3
  4240  003676  6E5D               	movwf	r_protocol@retry,c
  4241                           
  4242                           ;gemsecs.c: 288:   break;
  4243  003678  D025               	goto	l8337
  4244  00367A                     l8329:
  4245                           
  4246                           ;gemsecs.c: 292:   V.failed_receive = 0;
  4247  00367A  0EF0               	movlw	-16
  4248  00367C  0100               	movlb	0	; () banked
  4249  00367E  17BE               	andwf	(_V+87)& (0+255),f,b
  4250  003680  D70A               	goto	l8253
  4251  003682                     l8335:
  4252                           
  4253                           ;stkvar	_r_link @ sp[(-1)+-1]
  4254  003682  0EFE               	movlw	-2
  4255  003684  50E3               	movf	plusw1,w,c
  4256  003686  6ED9               	movwf	fsr2l,c
  4257  003688  6ADA               	clrf	fsr2h,c
  4258  00368A  50DF               	movf	indf2,w,c
  4259  00368C  6E45               	movwf	btemp+10,c
  4260  00368E  6A46               	clrf	btemp+11,c
  4261                           
  4262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4263                           ; Switch size 1, requested type "simple"
  4264                           ; Number of cases is 1, Range of values is 0 to 0
  4265                           ; switch strategies available:
  4266                           ; Name         Instructions Cycles
  4267                           ; simple_byte            4     3 (average)
  4268                           ;	Chosen strategy is simple_byte
  4269  003690  5046               	movf	btemp+11,w,c
  4270  003692  0A00               	xorlw	0	; case 0
  4271  003694  A4D8               	btfss	status,2,c
  4272  003696  D6FF               	goto	l8253
  4273                           
  4274                           ; Switch size 1, requested type "simple"
  4275                           ; Number of cases is 7, Range of values is 0 to 6
  4276                           ; switch strategies available:
  4277                           ; Name         Instructions Cycles
  4278                           ; simple_byte           22    12 (average)
  4279                           ;	Chosen strategy is simple_byte
  4280  003698  5045               	movf	btemp+10,w,c
  4281  00369A  0A00               	xorlw	0	; case 0
  4282  00369C  B4D8               	btfsc	status,2,c
  4283  00369E  D69A               	goto	l8223
  4284  0036A0  0A01               	xorlw	1	; case 1
  4285  0036A2  B4D8               	btfsc	status,2,c
  4286  0036A4  D6B2               	goto	l1609
  4287  0036A6  0A03               	xorlw	3	; case 2
  4288  0036A8  B4D8               	btfsc	status,2,c
  4289  0036AA  D6DD               	goto	l8245
  4290  0036AC  0A01               	xorlw	1	; case 3
  4291  0036AE  B4D8               	btfsc	status,2,c
  4292  0036B0  D79C               	goto	l8303
  4293  0036B2  0A07               	xorlw	7	; case 4
  4294  0036B4  B4D8               	btfsc	status,2,c
  4295  0036B6  D7E1               	goto	l8329
  4296  0036B8  0A01               	xorlw	1	; case 5
  4297  0036BA  B4D8               	btfsc	status,2,c
  4298  0036BC  D7CB               	goto	l8319
  4299  0036BE  0A03               	xorlw	3	; case 6
  4300  0036C0  A4D8               	btfss	status,2,c
  4301  0036C2  D6E9               	goto	l8253
  4302  0036C4                     l8337:
  4303                           
  4304                           ;gemsecs.c: 299:  return *r_link;
  4305                           ;stkvar	_r_link @ sp[(-1)+-1]
  4306  0036C4  0EFE               	movlw	-2
  4307  0036C6  50E3               	movf	plusw1,w,c
  4308  0036C8  6ED9               	movwf	fsr2l,c
  4309  0036CA  6ADA               	clrf	fsr2h,c
  4310  0036CC  50DF               	movf	indf2,w,c
  4311  0036CE  6E3B               	movwf	btemp,c
  4312                           
  4313                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4314  0036D0  52E5               	movf	postdec1,f,c
  4315  0036D2  52E5               	movf	postdec1,f,c
  4316  0036D4  0012               	return		;funcret
  4317  0036D6                     __end_of_r_protocol:
  4318                           	opt callstack 0
  4319                           
  4320 ;; *************** function _m_protocol *****************
  4321 ;; Defined at:
  4322 ;;		line 42 in file "gemsecs.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  m_link          1  [STACK] PTR enum E16164
  4325 ;;		 -> V(89), 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  rxData          1  [STACK] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1  [STACK] enum E16904
  4330 ;; Registers used:
  4331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4341 ;;Total ram usage:        0 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    5
  4344 ;; This function calls:
  4345 ;;		_StartTimer
  4346 ;;		_TimerDone
  4347 ;;		_UART1_Read
  4348 ;;		_UART1_is_rx_ready
  4349 ;;		_UART2_Read
  4350 ;;		_UART2_is_rx_ready
  4351 ;;		_WaitMs
  4352 ;;		_run_checksum
  4353 ;;		_secs_send
  4354 ;; This function is called by:
  4355 ;;		_main
  4356 ;; This function uses a reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text5
  4360  0025CE                     __ptext5:
  4361                           	opt callstack 0
  4362  0025CE                     _m_protocol:
  4363                           	opt callstack 0
  4364                           
  4365                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4366  0025CE  52E6               	movf	postinc1,f,c
  4367                           
  4368                           ;gemsecs.c: 42: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0;;gemsecs.c: 47:  switch
      +                           (*m_link) {
  4369                           
  4370                           ;incstack = 0
  4371  0025D0  D23E               	goto	l8645
  4372  0025D2                     l8463:
  4373                           
  4374                           ;gemsecs.c: 50:   WaitMs(50);
  4375  0025D2  0E32               	movlw	50
  4376  0025D4  6EE6               	movwf	postinc1,c
  4377  0025D6  0E00               	movlw	0
  4378  0025D8  6EE6               	movwf	postinc1,c
  4379  0025DA  EC63  F02E         	call	_WaitMs	;wreg free
  4380                           
  4381                           ;gemsecs.c: 52:   if (UART1_is_rx_ready()) {
  4382  0025DE  EC57  F031         	call	_UART1_is_rx_ready	;wreg free
  4383  0025E2  503B               	movf	btemp,w,c
  4384  0025E4  B4D8               	btfsc	status,2,c
  4385  0025E6  D021               	goto	l8479
  4386                           
  4387                           ;gemsecs.c: 53:    rxData = UART1_Read();
  4388  0025E8  EC68  F02D         	call	_UART1_Read	;wreg free
  4389                           
  4390                           ;stkvar	_rxData @ sp[(-1)+0]
  4391  0025EC  0EFF               	movlw	-1
  4392  0025EE  0060  F0EF  FFE3   	movff	btemp,plusw1
  4393                           
  4394                           ; BSR set to: 57
  4395                           ;gemsecs.c: 54:    if (rxData == 0x05) {
  4396                           ;stkvar	_rxData @ sp[(-1)+0]
  4397  0025F4  0EFF               	movlw	-1
  4398  0025F6  006F FF8C  F03B    	movff	plusw1,btemp
  4399  0025FC  0E05               	movlw	5
  4400  0025FE  183B               	xorwf	btemp,w,c
  4401  002600  A4D8               	btfss	status,2,c
  4402  002602  D013               	goto	l8479
  4403                           
  4404                           ; BSR set to: 57
  4405                           ;gemsecs.c: 55:     V.uart = 1;
  4406  002604  0E01               	movlw	1
  4407  002606  0100               	movlb	0	; () banked
  4408  002608  6FBF               	movwf	(_V+88)& (0+255),b
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;gemsecs.c: 56:     StartTimer(TMR_T2, 2000);
  4412  00260A  0ED0               	movlw	208
  4413  00260C  6EE6               	movwf	postinc1,c
  4414  00260E  0E07               	movlw	7
  4415  002610  6EE6               	movwf	postinc1,c
  4416  002612  0E02               	movlw	2
  4417  002614  6EE6               	movwf	postinc1,c
  4418  002616  ECA7  F02D         	call	_StartTimer	;wreg free
  4419                           
  4420                           ;gemsecs.c: 57:     V.error = LINK_ERROR_NONE;
  4421  00261A  0100               	movlb	0	; () banked
  4422  00261C  6BB6               	clrf	(_V+79)& (0+255),b
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;gemsecs.c: 58:     *m_link = LINK_STATE_ENQ;
  4426                           ;stkvar	_m_link @ sp[(-1)+-1]
  4427  00261E  0EFE               	movlw	-2
  4428  002620  50E3               	movf	plusw1,w,c
  4429  002622  6ED9               	movwf	fsr2l,c
  4430  002624  6ADA               	clrf	fsr2h,c
  4431  002626  0E01               	movlw	1
  4432  002628  6EDF               	movwf	indf2,c
  4433  00262A                     l8479:
  4434                           
  4435                           ;gemsecs.c: 61:   if (UART2_is_rx_ready()) {
  4436  00262A  EC53  F031         	call	_UART2_is_rx_ready	;wreg free
  4437  00262E  503B               	movf	btemp,w,c
  4438  002630  B4D8               	btfsc	status,2,c
  4439  002632  D22E               	goto	l8647
  4440                           
  4441                           ;gemsecs.c: 62:    rxData = UART2_Read();
  4442  002634  EC49  F02D         	call	_UART2_Read	;wreg free
  4443                           
  4444                           ;stkvar	_rxData @ sp[(-1)+0]
  4445  002638  0EFF               	movlw	-1
  4446  00263A  0060  F0EF  FFE3   	movff	btemp,plusw1
  4447                           
  4448                           ; BSR set to: 57
  4449                           ;gemsecs.c: 63:    if (rxData == 0x05) {
  4450                           ;stkvar	_rxData @ sp[(-1)+0]
  4451  002640  0EFF               	movlw	-1
  4452  002642  006F FF8C  F03B    	movff	plusw1,btemp
  4453  002648  0E05               	movlw	5
  4454  00264A  183B               	xorwf	btemp,w,c
  4455  00264C  A4D8               	btfss	status,2,c
  4456  00264E  D220               	goto	l8647
  4457                           
  4458                           ; BSR set to: 57
  4459                           ;gemsecs.c: 64:     V.uart = 2;
  4460  002650  0E02               	movlw	2
  4461  002652  0100               	movlb	0	; () banked
  4462  002654  6FBF               	movwf	(_V+88)& (0+255),b
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;gemsecs.c: 65:     StartTimer(TMR_T2, 2000);
  4466  002656  0ED0               	movlw	208
  4467  002658  6EE6               	movwf	postinc1,c
  4468  00265A  0E07               	movlw	7
  4469  00265C  6EE6               	movwf	postinc1,c
  4470  00265E  0E02               	movlw	2
  4471  002660  6EE6               	movwf	postinc1,c
  4472  002662  ECA7  F02D         	call	_StartTimer	;wreg free
  4473                           
  4474                           ;gemsecs.c: 66:     V.error = LINK_ERROR_NONE;
  4475  002666  0100               	movlb	0	; () banked
  4476  002668  6BB6               	clrf	(_V+79)& (0+255),b
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;gemsecs.c: 67:     *m_link = LINK_STATE_ENQ;
  4480                           ;stkvar	_m_link @ sp[(-1)+-1]
  4481  00266A  0EFE               	movlw	-2
  4482  00266C  50E3               	movf	plusw1,w,c
  4483  00266E  6ED9               	movwf	fsr2l,c
  4484  002670  6ADA               	clrf	fsr2h,c
  4485  002672  0E01               	movlw	1
  4486  002674  D1EA               	goto	L17
  4487  002676                     l8493:
  4488                           
  4489                           ;gemsecs.c: 73:   WaitMs(50);
  4490  002676  0E32               	movlw	50
  4491  002678  6EE6               	movwf	postinc1,c
  4492  00267A  0E00               	movlw	0
  4493  00267C  6EE6               	movwf	postinc1,c
  4494  00267E  EC63  F02E         	call	_WaitMs	;wreg free
  4495                           
  4496                           ;gemsecs.c: 74:   if (V.uart == 1)
  4497  002682  0100               	movlb	0	; () banked
  4498  002684  05BF               	decf	(_V+88)& (0+255),w,b
  4499  002686  A4D8               	btfss	status,2,c
  4500  002688  D00C               	goto	l8499
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;gemsecs.c: 75:    secs_send((uint8_t*) & H27[0], sizeof(header27), 1, V.uart);
  4504  00268A  51BF               	movf	(_V+88)& (0+255),w,b
  4505  00268C  6EE6               	movwf	postinc1,c
  4506  00268E  0E01               	movlw	1
  4507  002690  6EE6               	movwf	postinc1,c
  4508  002692  0E1E               	movlw	30
  4509  002694  6EE6               	movwf	postinc1,c
  4510  002696  0E41               	movlw	low _H27
  4511  002698  6EE6               	movwf	postinc1,c
  4512  00269A  0E01               	movlw	high _H27
  4513  00269C  6EE6               	movwf	postinc1,c
  4514  00269E  ECD0  F020         	call	_secs_send	;wreg free
  4515  0026A2                     l8499:
  4516                           
  4517                           ;gemsecs.c: 76:   if (V.uart == 2)
  4518  0026A2  0E02               	movlw	2
  4519  0026A4  0100               	movlb	0	; () banked
  4520  0026A6  19BF               	xorwf	(_V+88)& (0+255),w,b
  4521  0026A8  A4D8               	btfss	status,2,c
  4522  0026AA  D00C               	goto	l8503
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;gemsecs.c: 77:    secs_send((uint8_t*) & H10[0], sizeof(header10), 1, V.uart);
  4526  0026AC  51BF               	movf	(_V+88)& (0+255),w,b
  4527  0026AE  6EE6               	movwf	postinc1,c
  4528  0026B0  0E01               	movlw	1
  4529  0026B2  6EE6               	movwf	postinc1,c
  4530  0026B4  0E0D               	movlw	13
  4531  0026B6  6EE6               	movwf	postinc1,c
  4532  0026B8  0E00               	movlw	low _H10
  4533  0026BA  6EE6               	movwf	postinc1,c
  4534  0026BC  0E01               	movlw	high _H10
  4535  0026BE  6EE6               	movwf	postinc1,c
  4536  0026C0  ECD0  F020         	call	_secs_send	;wreg free
  4537  0026C4                     l8503:
  4538                           
  4539                           ;gemsecs.c: 79:   V.error = LINK_ERROR_NONE;
  4540  0026C4  0100               	movlb	0	; () banked
  4541  0026C6  6BB6               	clrf	(_V+79)& (0+255),b
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;gemsecs.c: 80:   *m_link = LINK_STATE_EOT;
  4545                           ;stkvar	_m_link @ sp[(-1)+-1]
  4546  0026C8  0EFE               	movlw	-2
  4547  0026CA  50E3               	movf	plusw1,w,c
  4548  0026CC  6ED9               	movwf	fsr2l,c
  4549  0026CE  6ADA               	clrf	fsr2h,c
  4550  0026D0  0E02               	movlw	2
  4551  0026D2  6EDF               	movwf	indf2,c
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;gemsecs.c: 81:   StartTimer(TMR_T2, 2000);
  4555  0026D4  0ED0               	movlw	208
  4556  0026D6  6EE6               	movwf	postinc1,c
  4557  0026D8  0E07               	movlw	7
  4558  0026DA  6EE6               	movwf	postinc1,c
  4559  0026DC  0E02               	movlw	2
  4560  0026DE  6EE6               	movwf	postinc1,c
  4561  0026E0  ECA7  F02D         	call	_StartTimer	;wreg free
  4562                           
  4563                           ;gemsecs.c: 82:   break;
  4564  0026E4  D1D5               	goto	l8647
  4565  0026E6                     l8509:
  4566                           
  4567                           ;gemsecs.c: 84:   if (TimerDone(TMR_T2)) {
  4568  0026E6  0E02               	movlw	2
  4569  0026E8  6EE6               	movwf	postinc1,c
  4570  0026EA  EC19  F030         	call	_TimerDone	;wreg free
  4571  0026EE  503B               	movf	btemp,w,c
  4572  0026F0  B4D8               	btfsc	status,2,c
  4573  0026F2  D00D               	goto	l8515
  4574                           
  4575                           ;gemsecs.c: 85:    V.error = LINK_ERROR_T2;
  4576  0026F4  0E02               	movlw	2
  4577  0026F6  0100               	movlb	0	; () banked
  4578  0026F8  6FB6               	movwf	(_V+79)& (0+255),b
  4579                           
  4580                           ;gemsecs.c: 86:    V.failed_receive = 2;
  4581  0026FA  51BE               	movf	(_V+87)& (0+255),w,b
  4582  0026FC  0BF0               	andlw	-16
  4583  0026FE  0902               	iorlw	2
  4584  002700  6FBE               	movwf	(_V+87)& (0+255),b
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;gemsecs.c: 87:    *m_link = LINK_STATE_NAK;
  4588                           ;stkvar	_m_link @ sp[(-1)+-1]
  4589  002702  0EFE               	movlw	-2
  4590  002704  50E3               	movf	plusw1,w,c
  4591  002706  6ED9               	movwf	fsr2l,c
  4592  002708  6ADA               	clrf	fsr2h,c
  4593  00270A  0E05               	movlw	5
  4594  00270C  D19E               	goto	L17
  4595  00270E                     l8515:
  4596                           
  4597                           ;gemsecs.c: 89:    if (UART1_is_rx_ready()) {
  4598  00270E  EC57  F031         	call	_UART1_is_rx_ready	;wreg free
  4599  002712  503B               	movf	btemp,w,c
  4600  002714  B4D8               	btfsc	status,2,c
  4601  002716  D0A5               	goto	l8563
  4602                           
  4603                           ;gemsecs.c: 90:     rxData = UART1_Read();
  4604  002718  EC68  F02D         	call	_UART1_Read	;wreg free
  4605                           
  4606                           ;stkvar	_rxData @ sp[(-1)+0]
  4607  00271C  0EFF               	movlw	-1
  4608  00271E  0060  F0EF  FFE3   	movff	btemp,plusw1
  4609                           
  4610                           ; BSR set to: 57
  4611                           ;gemsecs.c: 91:     if (rxData_l == 0) {
  4612  002724  502D               	movf	m_protocol@rxData_l,w,c
  4613  002726  A4D8               	btfss	status,2,c
  4614  002728  D00C               	goto	l8527
  4615                           
  4616                           ; BSR set to: 57
  4617                           ;gemsecs.c: 92:      r_block.length = rxData;
  4618                           ;stkvar	_rxData @ sp[(-1)+0]
  4619  00272A  0EFF               	movlw	-1
  4620  00272C  006F FF8C  F0CC    	movff	plusw1,_r_block+12
  4621                           
  4622                           ; BSR set to: 57
  4623                           ;gemsecs.c: 93:      run_checksum(0, 1);
  4624  002732  0E01               	movlw	1
  4625  002734  6EE6               	movwf	postinc1,c
  4626  002736  0E00               	movlw	0
  4627  002738  6EE6               	movwf	postinc1,c
  4628  00273A  ECE1  F02D         	call	_run_checksum	;wreg free
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;gemsecs.c: 94:      rxData_l++;
  4632  00273E  2A2D               	incf	m_protocol@rxData_l,f,c
  4633                           
  4634                           ;gemsecs.c: 95:     } else {
  4635  002740  D090               	goto	l8563
  4636  002742                     l8527:
  4637                           
  4638                           ; BSR set to: 57
  4639                           ;gemsecs.c: 99:      if (rxData_l <= sizeof(block10))
  4640  002742  0E0B               	movlw	11
  4641  002744  602D               	cpfslt	m_protocol@rxData_l,c
  4642  002746  D00C               	goto	l8531
  4643                           
  4644                           ; BSR set to: 57
  4645                           ;gemsecs.c: 100:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4646                           ;stkvar	_rxData @ sp[(-1)+0]
  4647  002748  502D               	movf	m_protocol@rxData_l,w,c
  4648  00274A  0819               	sublw	low (_H10+25)
  4649  00274C  6ED9               	movwf	fsr2l,c
  4650  00274E  0E00               	movlw	0
  4651  002750  A0D8               	btfss	status,0,c
  4652  002752  2AE8               	incf	wreg,f,c
  4653  002754  0801               	sublw	high (_H10+25)
  4654  002756  6EDA               	movwf	fsr2h,c
  4655  002758  0EFF               	movlw	-1
  4656  00275A  006F FF8F FFDF     	movff	plusw1,indf2
  4657  002760                     l8531:
  4658                           
  4659                           ; BSR set to: 57
  4660                           ;gemsecs.c: 101:      if (rxData_l <= r_block.length)
  4661  002760  502D               	movf	m_protocol@rxData_l,w,c
  4662  002762  0100               	movlb	0	; () banked
  4663  002764  5DCC               	subwf	(_r_block+12)& (0+255),w,b
  4664  002766  A0D8               	btfss	status,0,c
  4665  002768  D00D               	goto	l8535
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;gemsecs.c: 102:       V.r_checksum = run_checksum(rxData, 0);
  4669  00276A  0E00               	movlw	0
  4670  00276C  6EE6               	movwf	postinc1,c
  4671                           
  4672                           ;stkvar	_rxData @ sp[(-2)+0]
  4673  00276E  0EFE               	movlw	-2
  4674  002770  50E3               	movf	plusw1,w,c
  4675  002772  6EE6               	movwf	postinc1,c
  4676  002774  ECE1  F02D         	call	_run_checksum	;wreg free
  4677  002778  0060  F0EC  F0B9   	movff	btemp,_V+82
  4678  00277E  0060  F0F0  F0BA   	movff	btemp+1,_V+83
  4679  002784                     l8535:
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;gemsecs.c: 104:      if (rxData_l == r_block.length + 1)
  4683  002784  502D               	movf	m_protocol@rxData_l,w,c
  4684  002786  6E45               	movwf	btemp+10,c
  4685  002788  6A46               	clrf	btemp+11,c
  4686  00278A  51CC               	movf	(_r_block+12)& (0+255),w,b
  4687  00278C  6E43               	movwf	btemp+8,c
  4688  00278E  6A44               	clrf	btemp+9,c
  4689  002790  0E01               	movlw	1
  4690  002792  2643               	addwf	btemp+8,f,c
  4691  002794  0E00               	movlw	0
  4692  002796  2244               	addwfc	btemp+9,f,c
  4693  002798  5045               	movf	btemp+10,w,c
  4694  00279A  1843               	xorwf	btemp+8,w,c
  4695  00279C  E109               	bnz	l8539
  4696  00279E  5046               	movf	btemp+11,w,c
  4697  0027A0  1844               	xorwf	btemp+9,w,c
  4698  0027A2  A4D8               	btfss	status,2,c
  4699  0027A4  D005               	goto	l8539
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;gemsecs.c: 105:       H10[1].checksum = (uint16_t) rxData << 8;
  4703                           ;stkvar	_rxData @ sp[(-1)+0]
  4704  0027A6  0EFF               	movlw	-1
  4705  0027A8  50E3               	movf	plusw1,w,c
  4706  0027AA  0101               	movlb	1	; () banked
  4707  0027AC  6F0E               	movwf	(_H10+14)& (0+255),b
  4708  0027AE  6B0D               	clrf	(_H10+13)& (0+255),b
  4709  0027B0                     l8539:
  4710                           
  4711                           ;gemsecs.c: 106:      if (rxData_l == r_block.length + 2)
  4712  0027B0  502D               	movf	m_protocol@rxData_l,w,c
  4713  0027B2  6E45               	movwf	btemp+10,c
  4714  0027B4  6A46               	clrf	btemp+11,c
  4715  0027B6  0100               	movlb	0	; () banked
  4716  0027B8  51CC               	movf	(_r_block+12)& (0+255),w,b
  4717  0027BA  6E43               	movwf	btemp+8,c
  4718  0027BC  6A44               	clrf	btemp+9,c
  4719  0027BE  0E02               	movlw	2
  4720  0027C0  2643               	addwf	btemp+8,f,c
  4721  0027C2  0E00               	movlw	0
  4722  0027C4  2244               	addwfc	btemp+9,f,c
  4723  0027C6  5045               	movf	btemp+10,w,c
  4724  0027C8  1843               	xorwf	btemp+8,w,c
  4725  0027CA  E10A               	bnz	l8543
  4726  0027CC  5046               	movf	btemp+11,w,c
  4727  0027CE  1844               	xorwf	btemp+9,w,c
  4728  0027D0  A4D8               	btfss	status,2,c
  4729  0027D2  D006               	goto	l8543
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;gemsecs.c: 107:       H10[1].checksum += rxData;
  4733                           ;stkvar	_rxData @ sp[(-1)+0]
  4734  0027D4  0EFF               	movlw	-1
  4735  0027D6  50E3               	movf	plusw1,w,c
  4736  0027D8  0101               	movlb	1	; () banked
  4737  0027DA  270D               	addwf	(_H10+13)& (0+255),f,b
  4738  0027DC  0E00               	movlw	0
  4739  0027DE  230E               	addwfc	(_H10+14)& (0+255),f,b
  4740  0027E0                     l8543:
  4741                           
  4742                           ;gemsecs.c: 109:      rxData_l++;
  4743  0027E0  2A2D               	incf	m_protocol@rxData_l,f,c
  4744                           
  4745                           ;gemsecs.c: 110:      if (rxData_l > (r_block.length + 2)) {
  4746  0027E2  502D               	movf	m_protocol@rxData_l,w,c
  4747  0027E4  6E45               	movwf	btemp+10,c
  4748  0027E6  6A46               	clrf	btemp+11,c
  4749  0027E8  0100               	movlb	0	; () banked
  4750  0027EA  51CC               	movf	(_r_block+12)& (0+255),w,b
  4751  0027EC  6E43               	movwf	btemp+8,c
  4752  0027EE  6A44               	clrf	btemp+9,c
  4753  0027F0  0E02               	movlw	2
  4754  0027F2  2643               	addwf	btemp+8,f,c
  4755  0027F4  0E00               	movlw	0
  4756  0027F6  2244               	addwfc	btemp+9,f,c
  4757  0027F8  5045               	movf	btemp+10,w,c
  4758  0027FA  5C43               	subwf	btemp+8,w,c
  4759  0027FC  5044               	movf	btemp+9,w,c
  4760  0027FE  0A80               	xorlw	128
  4761  002800  6E3B               	movwf	btemp,c
  4762  002802  5046               	movf	btemp+11,w,c
  4763  002804  0A80               	xorlw	128
  4764  002806  583B               	subwfb	btemp,w,c
  4765  002808  B0D8               	btfsc	status,0,c
  4766  00280A  D02B               	goto	l8563
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;gemsecs.c: 111:       if (V.r_checksum == H10[1].checksum) {
  4770  00280C  0101               	movlb	1	; () banked
  4771  00280E  510D               	movf	(_H10+13)& (0+255),w,b
  4772  002810  0100               	movlb	0	; () banked
  4773  002812  19B9               	xorwf	(_V+82)& (0+255),w,b
  4774  002814  E10E               	bnz	l8553
  4775  002816  0101               	movlb	1	; () banked
  4776  002818  510E               	movf	(_H10+14)& (0+255),w,b
  4777  00281A  0100               	movlb	0	; () banked
  4778  00281C  19BA               	xorwf	(_V+83)& (0+255),w,b
  4779  00281E  A4D8               	btfss	status,2,c
  4780  002820  D008               	goto	l8553
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;gemsecs.c: 112:        *m_link = LINK_STATE_ACK;
  4784                           ;stkvar	_m_link @ sp[(-1)+-1]
  4785  002822  0EFE               	movlw	-2
  4786  002824  50E3               	movf	plusw1,w,c
  4787  002826  6ED9               	movwf	fsr2l,c
  4788  002828  6ADA               	clrf	fsr2h,c
  4789  00282A  0E03               	movlw	3
  4790  00282C  D019               	goto	L14
  4791  00282E                     l8551:
  4792  00282E  EC68  F02D         	call	_UART1_Read	;wreg free
  4793  002832                     l8553:
  4794                           
  4795                           ;gemsecs.c: 114:        while (UART1_is_rx_ready())
  4796  002832  EC57  F031         	call	_UART1_is_rx_ready	;wreg free
  4797  002836  503B               	movf	btemp,w,c
  4798  002838  A4D8               	btfss	status,2,c
  4799  00283A  D7F9               	goto	l8551
  4800                           
  4801                           ;gemsecs.c: 116:        WaitMs(500);
  4802  00283C  0EF4               	movlw	244
  4803  00283E  6EE6               	movwf	postinc1,c
  4804  002840  0E01               	movlw	1
  4805  002842  6EE6               	movwf	postinc1,c
  4806  002844  EC63  F02E         	call	_WaitMs	;wreg free
  4807                           
  4808                           ;gemsecs.c: 117:        V.error = LINK_ERROR_CHECKSUM;
  4809  002848  0E05               	movlw	5
  4810  00284A  0100               	movlb	0	; () banked
  4811  00284C  6FB6               	movwf	(_V+79)& (0+255),b
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;gemsecs.c: 118:        V.failed_receive = 3;
  4815  00284E  51BE               	movf	(_V+87)& (0+255),w,b
  4816  002850  0BF0               	andlw	-16
  4817  002852  0903               	iorlw	3
  4818  002854  6FBE               	movwf	(_V+87)& (0+255),b
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;gemsecs.c: 119:        *m_link = LINK_STATE_NAK;
  4822                           ;stkvar	_m_link @ sp[(-1)+-1]
  4823  002856  0EFE               	movlw	-2
  4824  002858  50E3               	movf	plusw1,w,c
  4825  00285A  6ED9               	movwf	fsr2l,c
  4826  00285C  6ADA               	clrf	fsr2h,c
  4827  00285E  0E05               	movlw	5
  4828  002860                     L14:
  4829  002860  6EDF               	movwf	indf2,c
  4830  002862                     l8563:
  4831                           
  4832                           ;gemsecs.c: 125:    if (UART2_is_rx_ready()) {
  4833  002862  EC53  F031         	call	_UART2_is_rx_ready	;wreg free
  4834  002866  503B               	movf	btemp,w,c
  4835  002868  B4D8               	btfsc	status,2,c
  4836  00286A  D112               	goto	l8647
  4837                           
  4838                           ;gemsecs.c: 126:     rxData = UART2_Read();
  4839  00286C  EC49  F02D         	call	_UART2_Read	;wreg free
  4840                           
  4841                           ;stkvar	_rxData @ sp[(-1)+0]
  4842  002870  0EFF               	movlw	-1
  4843  002872  0060  F0EF  FFE3   	movff	btemp,plusw1
  4844                           
  4845                           ; BSR set to: 57
  4846                           ;gemsecs.c: 127:     if (rxData_l == 0) {
  4847  002878  502D               	movf	m_protocol@rxData_l,w,c
  4848  00287A  A4D8               	btfss	status,2,c
  4849  00287C  D00C               	goto	l8575
  4850                           
  4851                           ; BSR set to: 57
  4852                           ;gemsecs.c: 128:      r_block.length = rxData;
  4853                           ;stkvar	_rxData @ sp[(-1)+0]
  4854  00287E  0EFF               	movlw	-1
  4855  002880  006F FF8C  F0CC    	movff	plusw1,_r_block+12
  4856                           
  4857                           ; BSR set to: 57
  4858                           ;gemsecs.c: 129:      run_checksum(0, 1);
  4859  002886  0E01               	movlw	1
  4860  002888  6EE6               	movwf	postinc1,c
  4861  00288A  0E00               	movlw	0
  4862  00288C  6EE6               	movwf	postinc1,c
  4863  00288E  ECE1  F02D         	call	_run_checksum	;wreg free
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;gemsecs.c: 130:      rxData_l++;
  4867  002892  2A2D               	incf	m_protocol@rxData_l,f,c
  4868                           
  4869                           ;gemsecs.c: 131:     } else {
  4870  002894  D0FD               	goto	l8647
  4871  002896                     l8575:
  4872                           
  4873                           ; BSR set to: 57
  4874                           ;gemsecs.c: 135:      if (rxData_l <= sizeof(block10))
  4875  002896  0E0B               	movlw	11
  4876  002898  602D               	cpfslt	m_protocol@rxData_l,c
  4877  00289A  D00C               	goto	l8579
  4878                           
  4879                           ; BSR set to: 57
  4880                           ;gemsecs.c: 136:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4881                           ;stkvar	_rxData @ sp[(-1)+0]
  4882  00289C  502D               	movf	m_protocol@rxData_l,w,c
  4883  00289E  0819               	sublw	low (_H10+25)
  4884  0028A0  6ED9               	movwf	fsr2l,c
  4885  0028A2  0E00               	movlw	0
  4886  0028A4  A0D8               	btfss	status,0,c
  4887  0028A6  2AE8               	incf	wreg,f,c
  4888  0028A8  0801               	sublw	high (_H10+25)
  4889  0028AA  6EDA               	movwf	fsr2h,c
  4890  0028AC  0EFF               	movlw	-1
  4891  0028AE  006F FF8F FFDF     	movff	plusw1,indf2
  4892  0028B4                     l8579:
  4893                           
  4894                           ; BSR set to: 57
  4895                           ;gemsecs.c: 137:      if (rxData_l <= r_block.length)
  4896  0028B4  502D               	movf	m_protocol@rxData_l,w,c
  4897  0028B6  0100               	movlb	0	; () banked
  4898  0028B8  5DCC               	subwf	(_r_block+12)& (0+255),w,b
  4899  0028BA  A0D8               	btfss	status,0,c
  4900  0028BC  D00D               	goto	l8583
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;gemsecs.c: 138:       V.r_checksum = run_checksum(rxData, 0);
  4904  0028BE  0E00               	movlw	0
  4905  0028C0  6EE6               	movwf	postinc1,c
  4906                           
  4907                           ;stkvar	_rxData @ sp[(-2)+0]
  4908  0028C2  0EFE               	movlw	-2
  4909  0028C4  50E3               	movf	plusw1,w,c
  4910  0028C6  6EE6               	movwf	postinc1,c
  4911  0028C8  ECE1  F02D         	call	_run_checksum	;wreg free
  4912  0028CC  0060  F0EC  F0B9   	movff	btemp,_V+82
  4913  0028D2  0060  F0F0  F0BA   	movff	btemp+1,_V+83
  4914  0028D8                     l8583:
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;gemsecs.c: 140:      if (rxData_l == r_block.length + 1)
  4918  0028D8  502D               	movf	m_protocol@rxData_l,w,c
  4919  0028DA  6E45               	movwf	btemp+10,c
  4920  0028DC  6A46               	clrf	btemp+11,c
  4921  0028DE  51CC               	movf	(_r_block+12)& (0+255),w,b
  4922  0028E0  6E43               	movwf	btemp+8,c
  4923  0028E2  6A44               	clrf	btemp+9,c
  4924  0028E4  0E01               	movlw	1
  4925  0028E6  2643               	addwf	btemp+8,f,c
  4926  0028E8  0E00               	movlw	0
  4927  0028EA  2244               	addwfc	btemp+9,f,c
  4928  0028EC  5045               	movf	btemp+10,w,c
  4929  0028EE  1843               	xorwf	btemp+8,w,c
  4930  0028F0  E109               	bnz	l8587
  4931  0028F2  5046               	movf	btemp+11,w,c
  4932  0028F4  1844               	xorwf	btemp+9,w,c
  4933  0028F6  A4D8               	btfss	status,2,c
  4934  0028F8  D005               	goto	l8587
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;gemsecs.c: 141:       H10[1].checksum = (uint16_t) rxData << 8;
  4938                           ;stkvar	_rxData @ sp[(-1)+0]
  4939  0028FA  0EFF               	movlw	-1
  4940  0028FC  50E3               	movf	plusw1,w,c
  4941  0028FE  0101               	movlb	1	; () banked
  4942  002900  6F0E               	movwf	(_H10+14)& (0+255),b
  4943  002902  6B0D               	clrf	(_H10+13)& (0+255),b
  4944  002904                     l8587:
  4945                           
  4946                           ;gemsecs.c: 142:      if (rxData_l == r_block.length + 2)
  4947  002904  502D               	movf	m_protocol@rxData_l,w,c
  4948  002906  6E45               	movwf	btemp+10,c
  4949  002908  6A46               	clrf	btemp+11,c
  4950  00290A  0100               	movlb	0	; () banked
  4951  00290C  51CC               	movf	(_r_block+12)& (0+255),w,b
  4952  00290E  6E43               	movwf	btemp+8,c
  4953  002910  6A44               	clrf	btemp+9,c
  4954  002912  0E02               	movlw	2
  4955  002914  2643               	addwf	btemp+8,f,c
  4956  002916  0E00               	movlw	0
  4957  002918  2244               	addwfc	btemp+9,f,c
  4958  00291A  5045               	movf	btemp+10,w,c
  4959  00291C  1843               	xorwf	btemp+8,w,c
  4960  00291E  E10A               	bnz	l8591
  4961  002920  5046               	movf	btemp+11,w,c
  4962  002922  1844               	xorwf	btemp+9,w,c
  4963  002924  A4D8               	btfss	status,2,c
  4964  002926  D006               	goto	l8591
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;gemsecs.c: 143:       H10[1].checksum += rxData;
  4968                           ;stkvar	_rxData @ sp[(-1)+0]
  4969  002928  0EFF               	movlw	-1
  4970  00292A  50E3               	movf	plusw1,w,c
  4971  00292C  0101               	movlb	1	; () banked
  4972  00292E  270D               	addwf	(_H10+13)& (0+255),f,b
  4973  002930  0E00               	movlw	0
  4974  002932  230E               	addwfc	(_H10+14)& (0+255),f,b
  4975  002934                     l8591:
  4976                           
  4977                           ;gemsecs.c: 145:      rxData_l++;
  4978  002934  2A2D               	incf	m_protocol@rxData_l,f,c
  4979                           
  4980                           ;gemsecs.c: 146:      if (rxData_l > (r_block.length + 2)) {
  4981  002936  502D               	movf	m_protocol@rxData_l,w,c
  4982  002938  6E45               	movwf	btemp+10,c
  4983  00293A  6A46               	clrf	btemp+11,c
  4984  00293C  0100               	movlb	0	; () banked
  4985  00293E  51CC               	movf	(_r_block+12)& (0+255),w,b
  4986  002940  6E43               	movwf	btemp+8,c
  4987  002942  6A44               	clrf	btemp+9,c
  4988  002944  0E02               	movlw	2
  4989  002946  2643               	addwf	btemp+8,f,c
  4990  002948  0E00               	movlw	0
  4991  00294A  2244               	addwfc	btemp+9,f,c
  4992  00294C  5045               	movf	btemp+10,w,c
  4993  00294E  5C43               	subwf	btemp+8,w,c
  4994  002950  5044               	movf	btemp+9,w,c
  4995  002952  0A80               	xorlw	128
  4996  002954  6E3B               	movwf	btemp,c
  4997  002956  5046               	movf	btemp+11,w,c
  4998  002958  0A80               	xorlw	128
  4999  00295A  583B               	subwfb	btemp,w,c
  5000  00295C  B0D8               	btfsc	status,0,c
  5001  00295E  D098               	goto	l8647
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;gemsecs.c: 147:       if (V.r_checksum == H10[1].checksum) {
  5005  002960  0101               	movlb	1	; () banked
  5006  002962  510D               	movf	(_H10+13)& (0+255),w,b
  5007  002964  0100               	movlb	0	; () banked
  5008  002966  19B9               	xorwf	(_V+82)& (0+255),w,b
  5009  002968  E10E               	bnz	l8601
  5010  00296A  0101               	movlb	1	; () banked
  5011  00296C  510E               	movf	(_H10+14)& (0+255),w,b
  5012  00296E  0100               	movlb	0	; () banked
  5013  002970  19BA               	xorwf	(_V+83)& (0+255),w,b
  5014  002972  A4D8               	btfss	status,2,c
  5015  002974  D008               	goto	l8601
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;gemsecs.c: 148:        *m_link = LINK_STATE_ACK;
  5019                           ;stkvar	_m_link @ sp[(-1)+-1]
  5020  002976  0EFE               	movlw	-2
  5021  002978  50E3               	movf	plusw1,w,c
  5022  00297A  6ED9               	movwf	fsr2l,c
  5023  00297C  6ADA               	clrf	fsr2h,c
  5024  00297E  0E03               	movlw	3
  5025  002980  D064               	goto	L17
  5026  002982                     l8599:
  5027  002982  EC49  F02D         	call	_UART2_Read	;wreg free
  5028  002986                     l8601:
  5029                           
  5030                           ;gemsecs.c: 150:        while (UART2_is_rx_ready())
  5031  002986  EC53  F031         	call	_UART2_is_rx_ready	;wreg free
  5032  00298A  503B               	movf	btemp,w,c
  5033  00298C  A4D8               	btfss	status,2,c
  5034  00298E  D7F9               	goto	l8599
  5035                           
  5036                           ;gemsecs.c: 152:        WaitMs(500);
  5037  002990  0EF4               	movlw	244
  5038  002992  6EE6               	movwf	postinc1,c
  5039  002994  0E01               	movlw	1
  5040  002996  6EE6               	movwf	postinc1,c
  5041  002998  EC63  F02E         	call	_WaitMs	;wreg free
  5042                           
  5043                           ;gemsecs.c: 153:        V.error = LINK_ERROR_CHECKSUM;
  5044  00299C  0E05               	movlw	5
  5045  00299E  0100               	movlb	0	; () banked
  5046  0029A0  6FB6               	movwf	(_V+79)& (0+255),b
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;gemsecs.c: 154:        V.failed_receive = 4;
  5050  0029A2  51BE               	movf	(_V+87)& (0+255),w,b
  5051  0029A4  0BF0               	andlw	-16
  5052  0029A6  0904               	iorlw	4
  5053  0029A8  D6AB               	goto	L16
  5054  0029AA                     l8611:
  5055                           
  5056                           ;gemsecs.c: 164:   WaitMs(50);
  5057  0029AA  0E32               	movlw	50
  5058  0029AC  6EE6               	movwf	postinc1,c
  5059  0029AE  0E00               	movlw	0
  5060  0029B0  6EE6               	movwf	postinc1,c
  5061  0029B2  EC63  F02E         	call	_WaitMs	;wreg free
  5062                           
  5063                           ;gemsecs.c: 166:   V.stream = H10[1].block.block.stream;
  5064  0029B6  0101               	movlb	1	; () banked
  5065  0029B8  5116               	movf	(_H10+22)& (0+255),w,b
  5066  0029BA  0B7F               	andlw	127
  5067  0029BC  0100               	movlb	0	; () banked
  5068  0029BE  6FB4               	movwf	(_V+77)& (0+255),b
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;gemsecs.c: 167:   V.function = H10[1].block.block.function;
  5072  0029C0  C115  F0B5         	movff	_H10+21,_V+78
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;gemsecs.c: 168:   V.systemb = H10[1].block.block.systemb;
  5076  0029C4  C10F  F0B0         	movff	_H10+15,_V+73
  5077  0029C8  C110  F0B1         	movff	_H10+16,_V+74
  5078  0029CC  C111  F0B2         	movff	_H10+17,_V+75
  5079  0029D0  C112  F0B3         	movff	_H10+18,_V+76
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;gemsecs.c: 169:   V.rbit = H10[1].block.block.rbit;
  5083  0029D4  0101               	movlb	1	; () banked
  5084  0029D6  AF18               	btfss	(_H10+24)& (0+255),7,b
  5085  0029D8  D003               	bra	u5635
  5086  0029DA  0100               	movlb	0	; () banked
  5087  0029DC  81BD               	bsf	(_V+86)& (0+255),0,b
  5088  0029DE  D002               	bra	u5637
  5089  0029E0                     u5635:
  5090  0029E0  0100               	movlb	0	; () banked
  5091  0029E2  91BD               	bcf	(_V+86)& (0+255),0,b
  5092  0029E4                     u5637:
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;gemsecs.c: 170:   V.wbit = H10[1].block.block.wbit;
  5096  0029E4  0101               	movlb	1	; () banked
  5097  0029E6  AF16               	btfss	(_H10+22)& (0+255),7,b
  5098  0029E8  D003               	bra	u5645
  5099  0029EA  0100               	movlb	0	; () banked
  5100  0029EC  83BD               	bsf	(_V+86)& (0+255),1,b
  5101  0029EE  D002               	bra	u5647
  5102  0029F0                     u5645:
  5103  0029F0  0100               	movlb	0	; () banked
  5104  0029F2  93BD               	bcf	(_V+86)& (0+255),1,b
  5105  0029F4                     u5647:
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;gemsecs.c: 171:   V.ebit = H10[1].block.block.ebit;
  5109  0029F4  0101               	movlb	1	; () banked
  5110  0029F6  AF14               	btfss	(_H10+20)& (0+255),7,b
  5111  0029F8  D003               	bra	u5655
  5112  0029FA  0100               	movlb	0	; () banked
  5113  0029FC  85BD               	bsf	(_V+86)& (0+255),2,b
  5114  0029FE  D002               	bra	u5657
  5115  002A00                     u5655:
  5116  002A00  0100               	movlb	0	; () banked
  5117  002A02  95BD               	bcf	(_V+86)& (0+255),2,b
  5118  002A04                     u5657:
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;gemsecs.c: 172:   V.failed_receive = 0;
  5122  002A04  0EF0               	movlw	-16
  5123  002A06  17BE               	andwf	(_V+87)& (0+255),f,b
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;gemsecs.c: 173:   *m_link = LINK_STATE_DONE;
  5127                           ;stkvar	_m_link @ sp[(-1)+-1]
  5128  002A08  0EFE               	movlw	-2
  5129  002A0A  50E3               	movf	plusw1,w,c
  5130  002A0C  6ED9               	movwf	fsr2l,c
  5131  002A0E  6ADA               	clrf	fsr2h,c
  5132  002A10  0E04               	movlw	4
  5133  002A12  D01B               	goto	L17
  5134  002A14                     l8629:
  5135                           
  5136                           ;gemsecs.c: 176:   *m_link = LINK_STATE_ERROR;
  5137                           ;stkvar	_m_link @ sp[(-1)+-1]
  5138  002A14  0EFE               	movlw	-2
  5139  002A16  50E3               	movf	plusw1,w,c
  5140  002A18  6ED9               	movwf	fsr2l,c
  5141  002A1A  6ADA               	clrf	fsr2h,c
  5142  002A1C  0E06               	movlw	6
  5143  002A1E  6EDF               	movwf	indf2,c
  5144                           
  5145                           ;gemsecs.c: 177:   while ((uart1RxCount)) {
  5146  002A20  D002               	goto	l8633
  5147  002A22                     l8631:
  5148                           
  5149                           ;gemsecs.c: 178:    UART1_Read();
  5150  002A22  EC68  F02D         	call	_UART1_Read	;wreg free
  5151  002A26                     l8633:
  5152                           
  5153                           ;gemsecs.c: 177:   while ((uart1RxCount)) {
  5154  002A26  5035               	movf	_uart1RxCount,w,c	;volatile
  5155  002A28  B4D8               	btfsc	status,2,c
  5156  002A2A  D003               	goto	l8637
  5157  002A2C  D7FA               	goto	l8631
  5158  002A2E                     l8635:
  5159                           
  5160                           ;gemsecs.c: 181:    UART2_Read();
  5161  002A2E  EC49  F02D         	call	_UART2_Read	;wreg free
  5162  002A32                     l8637:
  5163                           
  5164                           ;gemsecs.c: 180:   while ((uart2RxCount)) {
  5165  002A32  502F               	movf	_uart2RxCount,w,c	;volatile
  5166  002A34  B4D8               	btfsc	status,2,c
  5167  002A36  D02C               	goto	l8647
  5168  002A38  D7FA               	goto	l8635
  5169  002A3A                     l8639:
  5170                           
  5171                           ;gemsecs.c: 187:   V.failed_receive = 0;
  5172  002A3A  0EF0               	movlw	-16
  5173  002A3C  0100               	movlb	0	; () banked
  5174  002A3E  17BE               	andwf	(_V+87)& (0+255),f,b
  5175  002A40                     l8641:
  5176                           
  5177                           ;gemsecs.c: 189:   *m_link = LINK_STATE_IDLE;
  5178                           ;stkvar	_m_link @ sp[(-1)+-1]
  5179  002A40  0EFE               	movlw	-2
  5180  002A42  50E3               	movf	plusw1,w,c
  5181  002A44  6ED9               	movwf	fsr2l,c
  5182  002A46  6ADA               	clrf	fsr2h,c
  5183  002A48  0E00               	movlw	0
  5184  002A4A                     L17:
  5185  002A4A  6EDF               	movwf	indf2,c
  5186                           
  5187                           ;gemsecs.c: 191:   break;
  5188  002A4C  D021               	goto	l8647
  5189  002A4E                     l8645:
  5190                           
  5191                           ;stkvar	_m_link @ sp[(-1)+-1]
  5192  002A4E  0EFE               	movlw	-2
  5193  002A50  50E3               	movf	plusw1,w,c
  5194  002A52  6ED9               	movwf	fsr2l,c
  5195  002A54  6ADA               	clrf	fsr2h,c
  5196  002A56  50DF               	movf	indf2,w,c
  5197  002A58  6E45               	movwf	btemp+10,c
  5198  002A5A  6A46               	clrf	btemp+11,c
  5199                           
  5200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5201                           ; Switch size 1, requested type "simple"
  5202                           ; Number of cases is 1, Range of values is 0 to 0
  5203                           ; switch strategies available:
  5204                           ; Name         Instructions Cycles
  5205                           ; simple_byte            4     3 (average)
  5206                           ;	Chosen strategy is simple_byte
  5207  002A5C  5046               	movf	btemp+11,w,c
  5208  002A5E  0A00               	xorlw	0	; case 0
  5209  002A60  A4D8               	btfss	status,2,c
  5210  002A62  D7EE               	goto	l8641
  5211                           
  5212                           ; Switch size 1, requested type "simple"
  5213                           ; Number of cases is 7, Range of values is 0 to 6
  5214                           ; switch strategies available:
  5215                           ; Name         Instructions Cycles
  5216                           ; simple_byte           22    12 (average)
  5217                           ;	Chosen strategy is simple_byte
  5218  002A64  5045               	movf	btemp+10,w,c
  5219  002A66  0A00               	xorlw	0	; case 0
  5220  002A68  B4D8               	btfsc	status,2,c
  5221  002A6A  D5B3               	goto	l8463
  5222  002A6C  0A01               	xorlw	1	; case 1
  5223  002A6E  B4D8               	btfsc	status,2,c
  5224  002A70  D602               	goto	l8493
  5225  002A72  0A03               	xorlw	3	; case 2
  5226  002A74  B4D8               	btfsc	status,2,c
  5227  002A76  D637               	goto	l8509
  5228  002A78  0A01               	xorlw	1	; case 3
  5229  002A7A  B4D8               	btfsc	status,2,c
  5230  002A7C  D796               	goto	l8611
  5231  002A7E  0A07               	xorlw	7	; case 4
  5232  002A80  B4D8               	btfsc	status,2,c
  5233  002A82  D7DB               	goto	l8639
  5234  002A84  0A01               	xorlw	1	; case 5
  5235  002A86  B4D8               	btfsc	status,2,c
  5236  002A88  D7C5               	goto	l8629
  5237  002A8A  0A03               	xorlw	3	; case 6
  5238  002A8C  A4D8               	btfss	status,2,c
  5239  002A8E  D7D8               	goto	l8641
  5240  002A90                     l8647:
  5241                           
  5242                           ;gemsecs.c: 194:  return *m_link;
  5243                           ;stkvar	_m_link @ sp[(-1)+-1]
  5244  002A90  0EFE               	movlw	-2
  5245  002A92  50E3               	movf	plusw1,w,c
  5246  002A94  6ED9               	movwf	fsr2l,c
  5247  002A96  6ADA               	clrf	fsr2h,c
  5248  002A98  50DF               	movf	indf2,w,c
  5249  002A9A  6E3B               	movwf	btemp,c
  5250                           
  5251                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5252  002A9C  52E5               	movf	postdec1,f,c
  5253  002A9E  52E5               	movf	postdec1,f,c
  5254  002AA0  0012               	return		;funcret
  5255  002AA2                     __end_of_m_protocol:
  5256                           	opt callstack 0
  5257                           
  5258 ;; *************** function _secs_send *****************
  5259 ;; Defined at:
  5260 ;;		line 409 in file "gemsecs.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  byte_block      2  [STACK] PTR unsigned char 
  5263 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5264 ;;		 -> H14(17), H13(16), H12(30), H10(65), 
  5265 ;;  length          1  [STACK] unsigned char 
  5266 ;;  fake            1  [STACK] _Bool 
  5267 ;;  s_uart          1  [STACK] unsigned char 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  k               2  [STACK] PTR unsigned char 
  5270 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5271 ;;		 -> H14(17), H13(16), H12(30), H10(65), 
  5272 ;;  checksum        2  [STACK] unsigned short 
  5273 ;;  i               1  [STACK] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1  [STACK] _Bool 
  5276 ;; Registers used:
  5277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5287 ;;Total ram usage:        0 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    4
  5290 ;; This function calls:
  5291 ;;		_UART1_Write
  5292 ;;		_UART1_is_tx_ready
  5293 ;;		_UART1_put_buffer
  5294 ;;		_UART2_Write
  5295 ;;		_UART2_is_tx_ready
  5296 ;;		_UART2_put_buffer
  5297 ;;		_block_checksum
  5298 ;; This function is called by:
  5299 ;;		_m_protocol
  5300 ;;		_r_protocol
  5301 ;;		_t_protocol
  5302 ;; This function uses a reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text6
  5306  0041A0                     __ptext6:
  5307                           	opt callstack 0
  5308  0041A0                     _secs_send:
  5309                           	opt callstack 0
  5310                           
  5311                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5312  0041A0  0E05               	movlw	5
  5313  0041A2  26E1               	addwf	fsr1l,f,c
  5314  0041A4  0E00               	movlw	0
  5315  0041A6  22E2               	addwfc	fsr1h,f,c
  5316                           
  5317                           ;gemsecs.c: 409: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 410: {;gemsecs.c: 411:  uint8_t i, *k;;gemsecs.c: 412:  uint16_t ch
      +                          ecksum;;gemsecs.c: 414:  k = (uint8_t *) byte_block;
  5318                           ;stkvar	_byte_block @ sp[(-5)+-2]
  5319                           
  5320                           ;incstack = 0
  5321  0041A8  0EF9               	movlw	-7
  5322  0041AA  006F FF8C  F045    	movff	plusw1,btemp+10
  5323  0041B0  0EFA               	movlw	-6
  5324  0041B2  006F FF8C  F046    	movff	plusw1,btemp+11
  5325                           
  5326                           ;stkvar	_k @ sp[(-5)+0]
  5327  0041B8  0EFC               	movlw	-4
  5328  0041BA  0060  F11B  FFE3   	movff	btemp+11,plusw1
  5329  0041C0  0EFB               	movlw	-5
  5330  0041C2  0060  F117  FFE3   	movff	btemp+10,plusw1
  5331                           
  5332                           ;gemsecs.c: 416:  ++V.ticks;
  5333  0041C8  0E01               	movlw	1
  5334  0041CA  0100               	movlb	0	; () banked
  5335  0041CC  27AC               	addwf	(_V+69)& (0+255),f,b
  5336  0041CE  0E00               	movlw	0
  5337  0041D0  23AD               	addwfc	(_V+70)& (0+255),f,b
  5338  0041D2  23AE               	addwfc	(_V+71)& (0+255),f,b
  5339  0041D4  23AF               	addwfc	(_V+72)& (0+255),f,b
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;gemsecs.c: 417:  V.error = LINK_ERROR_NONE;
  5343  0041D6  6BB6               	clrf	(_V+79)& (0+255),b
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;gemsecs.c: 418:  if ((length - 3) != k[length - 1]) {
  5347                           ;stkvar	_length @ sp[(-5)+-3]
  5348  0041D8  0EF8               	movlw	-8
  5349  0041DA  50E3               	movf	plusw1,w,c
  5350  0041DC  6E45               	movwf	btemp+10,c
  5351  0041DE  6A46               	clrf	btemp+11,c
  5352                           
  5353                           ;stkvar	_k @ sp[(-5)+0]
  5354  0041E0  0EFB               	movlw	-5
  5355  0041E2  50E3               	movf	plusw1,w,c
  5356  0041E4  2645               	addwf	btemp+10,f,c
  5357  0041E6  0EFC               	movlw	-4
  5358  0041E8  50E3               	movf	plusw1,w,c
  5359  0041EA  2246               	addwfc	btemp+11,f,c
  5360  0041EC  0EFF               	movlw	255
  5361  0041EE  2445               	addwf	btemp+10,w,c
  5362  0041F0  6ED9               	movwf	fsr2l,c
  5363  0041F2  0EFF               	movlw	255
  5364  0041F4  2046               	addwfc	btemp+11,w,c
  5365  0041F6  6EDA               	movwf	fsr2h,c
  5366  0041F8  50DF               	movf	indf2,w,c
  5367  0041FA  6E45               	movwf	btemp+10,c
  5368  0041FC  6A46               	clrf	btemp+11,c
  5369  0041FE  0EFD               	movlw	253
  5370  004200  6E43               	movwf	btemp+8,c
  5371  004202  0EFF               	movlw	255
  5372  004204  6E44               	movwf	btemp+9,c
  5373                           
  5374                           ;stkvar	_length @ sp[(-5)+-3]
  5375  004206  0EF8               	movlw	-8
  5376  004208  50E3               	movf	plusw1,w,c
  5377  00420A  6E41               	movwf	btemp+6,c
  5378  00420C  6A42               	clrf	btemp+7,c
  5379  00420E  5043               	movf	btemp+8,w,c
  5380  004210  2641               	addwf	btemp+6,f,c
  5381  004212  5044               	movf	btemp+9,w,c
  5382  004214  2242               	addwfc	btemp+7,f,c
  5383  004216  5045               	movf	btemp+10,w,c
  5384  004218  1841               	xorwf	btemp+6,w,c
  5385  00421A  E104               	bnz	u4970
  5386  00421C  5046               	movf	btemp+11,w,c
  5387  00421E  1842               	xorwf	btemp+7,w,c
  5388  004220  B4D8               	btfsc	status,2,c
  5389  004222  D003               	goto	l8053
  5390  004224                     u4970:
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;gemsecs.c: 419:   V.error = LINK_ERROR_SEND;
  5394  004224  0E08               	movlw	8
  5395  004226  6FB6               	movwf	(_V+79)& (0+255),b
  5396  004228  D0EA               	goto	l1681
  5397  00422A                     l8053:
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;gemsecs.c: 428:  checksum = block_checksum(&k[2], length - 3);
  5401  00422A  0EFD               	movlw	253
  5402  00422C  6E45               	movwf	btemp+10,c
  5403  00422E  0EFF               	movlw	255
  5404  004230  6E46               	movwf	btemp+11,c
  5405                           
  5406                           ;stkvar	_length @ sp[(-5)+-3]
  5407  004232  0EF8               	movlw	-8
  5408  004234  50E3               	movf	plusw1,w,c
  5409  004236  6E43               	movwf	btemp+8,c
  5410  004238  6A44               	clrf	btemp+9,c
  5411  00423A  5045               	movf	btemp+10,w,c
  5412  00423C  2643               	addwf	btemp+8,f,c
  5413  00423E  5046               	movf	btemp+11,w,c
  5414  004240  2244               	addwfc	btemp+9,f,c
  5415  004242  0060  F10F  FFE6   	movff	btemp+8,postinc1
  5416  004248  0060  F113  FFE6   	movff	btemp+9,postinc1
  5417                           
  5418                           ;stkvar	_k @ sp[(-7)+0]
  5419  00424E  0EF9               	movlw	-7
  5420  004250  50E3               	movf	plusw1,w,c
  5421  004252  0F02               	addlw	2
  5422  004254  6E45               	movwf	btemp+10,c
  5423  004256  0EFA               	movlw	-6
  5424  004258  006F FF8C  F046    	movff	plusw1,btemp+11
  5425  00425E  0E00               	movlw	0
  5426  004260  2246               	addwfc	btemp+11,f,c
  5427  004262  0060  F117  FFE6   	movff	btemp+10,postinc1
  5428  004268  0060  F11B  FFE6   	movff	btemp+11,postinc1
  5429  00426E  EC92  F026         	call	_block_checksum	;wreg free
  5430                           
  5431                           ;stkvar	_checksum @ sp[(-5)+2]
  5432  004272  0EFD               	movlw	-3
  5433  004274  0060  F0EF  FFE3   	movff	btemp,plusw1
  5434  00427A  0EFE               	movlw	-2
  5435  00427C  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  5436                           
  5437                           ;gemsecs.c: 429:  k[0] = checksum & 0xff;
  5438                           ;stkvar	_checksum @ sp[(-5)+2]
  5439                           ;stkvar	_k @ sp[(-5)+0]
  5440  004282  0EFB               	movlw	-5
  5441  004284  006F FF8F FFD9     	movff	plusw1,fsr2l
  5442  00428A  0EFC               	movlw	-4
  5443  00428C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5444  004292  0EFD               	movlw	-3
  5445  004294  006F FF8F FFDF     	movff	plusw1,indf2
  5446                           
  5447                           ;gemsecs.c: 430:  k[1] = (checksum >> 8)&0xff;
  5448                           ;stkvar	_checksum @ sp[(-5)+2]
  5449  00429A  0EFE               	movlw	254
  5450  00429C  24E1               	addwf	fsr1l,w,c
  5451  00429E  6ED9               	movwf	fsr2l,c
  5452  0042A0  0EFF               	movlw	255
  5453  0042A2  20E2               	addwfc	fsr1h,w,c
  5454  0042A4  6EDA               	movwf	fsr2h,c
  5455                           
  5456                           ;stkvar	_k @ sp[(-5)+0]
  5457  0042A6  0EFB               	movlw	-5
  5458  0042A8  006F FF8C  F045    	movff	plusw1,btemp+10
  5459  0042AE  0EFC               	movlw	-4
  5460  0042B0  006F FF8C  F046    	movff	plusw1,btemp+11
  5461  0042B6  0E01               	movlw	1
  5462  0042B8  2445               	addwf	btemp+10,w,c
  5463  0042BA  6EE9               	movwf	fsr0l,c
  5464  0042BC  0E00               	movlw	0
  5465  0042BE  2046               	addwfc	btemp+11,w,c
  5466  0042C0  6EEA               	movwf	fsr0h,c
  5467  0042C2  006F FF7F FFEF     	movff	indf2,indf0
  5468                           
  5469                           ;gemsecs.c: 431:  V.t_checksum = checksum;
  5470                           ;stkvar	_checksum @ sp[(-5)+2]
  5471  0042C8  0EFD               	movlw	-3
  5472  0042CA  006F FF8C  F0BB    	movff	plusw1,_V+84
  5473  0042D0  0EFE               	movlw	-2
  5474  0042D2  006F FF8C  F0BC    	movff	plusw1,_V+85
  5475                           
  5476                           ;gemsecs.c: 433:  switch (s_uart) {
  5477  0042D8  D082               	goto	l8099
  5478  0042DA                     l8061:
  5479  0042DA  EC4B  F031         	call	_UART2_is_tx_ready	;wreg free
  5480  0042DE  0E3F               	movlw	63
  5481  0042E0  643B               	cpfsgt	btemp,c
  5482  0042E2  D7FB               	goto	l8061
  5483                           
  5484                           ;gemsecs.c: 436:   for (i = length; i > 0; i--) {
  5485                           ;stkvar	_length @ sp[(-5)+-3]
  5486                           ;stkvar	_i @ sp[(-5)+4]
  5487  0042E4  0EF8               	movlw	-8
  5488  0042E6  006F FF8C  F03B    	movff	plusw1,btemp
  5489  0042EC  0EFF               	movlw	-1
  5490  0042EE  0060  F0EF  FFE3   	movff	btemp,plusw1
  5491  0042F4                     l8065:
  5492                           
  5493                           ;stkvar	_i @ sp[(-5)+4]
  5494  0042F4  0EFF               	movlw	-1
  5495  0042F6  50E3               	movf	plusw1,w,c
  5496  0042F8  B4D8               	btfsc	status,2,c
  5497  0042FA  D081               	goto	l1681
  5498                           
  5499                           ;gemsecs.c: 437:    if (fake) {
  5500                           ;stkvar	_fake @ sp[(-5)+-4]
  5501  0042FC  0EF7               	movlw	-9
  5502  0042FE  50E3               	movf	plusw1,w,c
  5503  004300  B4D8               	btfsc	status,2,c
  5504  004302  D015               	goto	l8073
  5505                           
  5506                           ;gemsecs.c: 438:     UART2_put_buffer(k[i - 1]);
  5507                           ;stkvar	_i @ sp[(-5)+4]
  5508  004304  0EFF               	movlw	-1
  5509  004306  50E3               	movf	plusw1,w,c
  5510  004308  6E45               	movwf	btemp+10,c
  5511  00430A  6A46               	clrf	btemp+11,c
  5512                           
  5513                           ;stkvar	_k @ sp[(-5)+0]
  5514  00430C  0EFB               	movlw	-5
  5515  00430E  50E3               	movf	plusw1,w,c
  5516  004310  2645               	addwf	btemp+10,f,c
  5517  004312  0EFC               	movlw	-4
  5518  004314  50E3               	movf	plusw1,w,c
  5519  004316  2246               	addwfc	btemp+11,f,c
  5520  004318  0EFF               	movlw	255
  5521  00431A  2445               	addwf	btemp+10,w,c
  5522  00431C  6ED9               	movwf	fsr2l,c
  5523  00431E  0EFF               	movlw	255
  5524  004320  2046               	addwfc	btemp+11,w,c
  5525  004322  6EDA               	movwf	fsr2h,c
  5526  004324  50DF               	movf	indf2,w,c
  5527  004326  6EE6               	movwf	postinc1,c
  5528  004328  EC39  F02E         	call	_UART2_put_buffer	;wreg free
  5529                           
  5530                           ;gemsecs.c: 439:    } else {
  5531  00432C  D014               	goto	l8075
  5532  00432E                     l8073:
  5533                           
  5534                           ;gemsecs.c: 441:     UART2_Write(k[i - 1]);
  5535                           ;stkvar	_i @ sp[(-5)+4]
  5536  00432E  0EFF               	movlw	-1
  5537  004330  50E3               	movf	plusw1,w,c
  5538  004332  6E45               	movwf	btemp+10,c
  5539  004334  6A46               	clrf	btemp+11,c
  5540                           
  5541                           ;stkvar	_k @ sp[(-5)+0]
  5542  004336  0EFB               	movlw	-5
  5543  004338  50E3               	movf	plusw1,w,c
  5544  00433A  2645               	addwf	btemp+10,f,c
  5545  00433C  0EFC               	movlw	-4
  5546  00433E  50E3               	movf	plusw1,w,c
  5547  004340  2246               	addwfc	btemp+11,f,c
  5548  004342  0EFF               	movlw	255
  5549  004344  2445               	addwf	btemp+10,w,c
  5550  004346  6ED9               	movwf	fsr2l,c
  5551  004348  0EFF               	movlw	255
  5552  00434A  2046               	addwfc	btemp+11,w,c
  5553  00434C  6EDA               	movwf	fsr2h,c
  5554  00434E  50DF               	movf	indf2,w,c
  5555  004350  6EE6               	movwf	postinc1,c
  5556  004352  EC0B  F02D         	call	_UART2_Write	;wreg free
  5557  004356                     l8075:
  5558                           
  5559                           ; BSR set to: 57
  5560                           ;gemsecs.c: 443:   }
  5561                           ;stkvar	_i @ sp[(-5)+4]
  5562  004356  0EFF               	movlw	-1
  5563  004358  06E3               	decf	plusw1,f,c
  5564  00435A  D7CC               	goto	l8065
  5565  00435C                     l8079:
  5566  00435C  EC4F  F031         	call	_UART1_is_tx_ready	;wreg free
  5567  004360  0E3F               	movlw	63
  5568  004362  643B               	cpfsgt	btemp,c
  5569  004364  D7FB               	goto	l8079
  5570                           
  5571                           ;gemsecs.c: 448:   for (i = length; i > 0; i--) {
  5572                           ;stkvar	_length @ sp[(-5)+-3]
  5573                           ;stkvar	_i @ sp[(-5)+4]
  5574  004366  0EF8               	movlw	-8
  5575  004368  006F FF8C  F03B    	movff	plusw1,btemp
  5576  00436E  0EFF               	movlw	-1
  5577  004370  0060  F0EF  FFE3   	movff	btemp,plusw1
  5578  004376                     l8083:
  5579                           
  5580                           ;stkvar	_i @ sp[(-5)+4]
  5581  004376  0EFF               	movlw	-1
  5582  004378  50E3               	movf	plusw1,w,c
  5583  00437A  B4D8               	btfsc	status,2,c
  5584  00437C  D040               	goto	l1681
  5585                           
  5586                           ;gemsecs.c: 449:    if (fake) {
  5587                           ;stkvar	_fake @ sp[(-5)+-4]
  5588  00437E  0EF7               	movlw	-9
  5589  004380  50E3               	movf	plusw1,w,c
  5590  004382  B4D8               	btfsc	status,2,c
  5591  004384  D015               	goto	l8091
  5592                           
  5593                           ;gemsecs.c: 450:     UART1_put_buffer(k[i - 1]);
  5594                           ;stkvar	_i @ sp[(-5)+4]
  5595  004386  0EFF               	movlw	-1
  5596  004388  50E3               	movf	plusw1,w,c
  5597  00438A  6E45               	movwf	btemp+10,c
  5598  00438C  6A46               	clrf	btemp+11,c
  5599                           
  5600                           ;stkvar	_k @ sp[(-5)+0]
  5601  00438E  0EFB               	movlw	-5
  5602  004390  50E3               	movf	plusw1,w,c
  5603  004392  2645               	addwf	btemp+10,f,c
  5604  004394  0EFC               	movlw	-4
  5605  004396  50E3               	movf	plusw1,w,c
  5606  004398  2246               	addwfc	btemp+11,f,c
  5607  00439A  0EFF               	movlw	255
  5608  00439C  2445               	addwf	btemp+10,w,c
  5609  00439E  6ED9               	movwf	fsr2l,c
  5610  0043A0  0EFF               	movlw	255
  5611  0043A2  2046               	addwfc	btemp+11,w,c
  5612  0043A4  6EDA               	movwf	fsr2h,c
  5613  0043A6  50DF               	movf	indf2,w,c
  5614  0043A8  6EE6               	movwf	postinc1,c
  5615  0043AA  EC4E  F02E         	call	_UART1_put_buffer	;wreg free
  5616                           
  5617                           ;gemsecs.c: 451:    } else {
  5618  0043AE  D014               	goto	l8093
  5619  0043B0                     l8091:
  5620                           
  5621                           ;gemsecs.c: 453:     UART1_Write(k[i - 1]);
  5622                           ;stkvar	_i @ sp[(-5)+4]
  5623  0043B0  0EFF               	movlw	-1
  5624  0043B2  50E3               	movf	plusw1,w,c
  5625  0043B4  6E45               	movwf	btemp+10,c
  5626  0043B6  6A46               	clrf	btemp+11,c
  5627                           
  5628                           ;stkvar	_k @ sp[(-5)+0]
  5629  0043B8  0EFB               	movlw	-5
  5630  0043BA  50E3               	movf	plusw1,w,c
  5631  0043BC  2645               	addwf	btemp+10,f,c
  5632  0043BE  0EFC               	movlw	-4
  5633  0043C0  50E3               	movf	plusw1,w,c
  5634  0043C2  2246               	addwfc	btemp+11,f,c
  5635  0043C4  0EFF               	movlw	255
  5636  0043C6  2445               	addwf	btemp+10,w,c
  5637  0043C8  6ED9               	movwf	fsr2l,c
  5638  0043CA  0EFF               	movlw	255
  5639  0043CC  2046               	addwfc	btemp+11,w,c
  5640  0043CE  6EDA               	movwf	fsr2h,c
  5641  0043D0  50DF               	movf	indf2,w,c
  5642  0043D2  6EE6               	movwf	postinc1,c
  5643  0043D4  EC2A  F02D         	call	_UART1_Write	;wreg free
  5644  0043D8                     l8093:
  5645                           
  5646                           ; BSR set to: 57
  5647                           ;gemsecs.c: 455:   }
  5648                           ;stkvar	_i @ sp[(-5)+4]
  5649  0043D8  0EFF               	movlw	-1
  5650  0043DA  06E3               	decf	plusw1,f,c
  5651  0043DC  D7CC               	goto	l8083
  5652  0043DE                     l8099:
  5653                           
  5654                           ;stkvar	_s_uart @ sp[(-5)+-5]
  5655  0043DE  0EF6               	movlw	-10
  5656  0043E0  50E3               	movf	plusw1,w,c
  5657  0043E2  6E45               	movwf	btemp+10,c
  5658  0043E4  6A46               	clrf	btemp+11,c
  5659                           
  5660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5661                           ; Switch size 1, requested type "simple"
  5662                           ; Number of cases is 1, Range of values is 0 to 0
  5663                           ; switch strategies available:
  5664                           ; Name         Instructions Cycles
  5665                           ; simple_byte            4     3 (average)
  5666                           ;	Chosen strategy is simple_byte
  5667  0043E6  5046               	movf	btemp+11,w,c
  5668  0043E8  0A00               	xorlw	0	; case 0
  5669  0043EA  A4D8               	btfss	status,2,c
  5670  0043EC  D7B7               	goto	l8079
  5671                           
  5672                           ; Switch size 1, requested type "simple"
  5673                           ; Number of cases is 2, Range of values is 1 to 2
  5674                           ; switch strategies available:
  5675                           ; Name         Instructions Cycles
  5676                           ; simple_byte            7     4 (average)
  5677                           ;	Chosen strategy is simple_byte
  5678  0043EE  5045               	movf	btemp+10,w,c
  5679  0043F0  0A01               	xorlw	1	; case 1
  5680  0043F2  B4D8               	btfsc	status,2,c
  5681  0043F4  D7B3               	goto	l8079
  5682  0043F6  0A03               	xorlw	3	; case 2
  5683  0043F8  B4D8               	btfsc	status,2,c
  5684  0043FA  D76F               	goto	l8061
  5685  0043FC  D7AF               	goto	l8079
  5686  0043FE                     l1681:
  5687                           
  5688                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  5689  0043FE  0EF6               	movlw	246
  5690  004400  26E1               	addwf	fsr1l,f,c
  5691  004402  0EFF               	movlw	255
  5692  004404  22E2               	addwfc	fsr1h,f,c
  5693  004406  0012               	return		;funcret
  5694  004408                     __end_of_secs_send:
  5695                           	opt callstack 0
  5696                           
  5697 ;; *************** function _block_checksum *****************
  5698 ;; Defined at:
  5699 ;;		line 18 in file "gemsecs.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  byte_block      2  [STACK] PTR unsigned char 
  5702 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5703 ;;		 -> H14(17), H13(16), H12(30), H10(65), 
  5704 ;;  byte_count      2  [STACK] unsigned short 
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;  i               2  [STACK] unsigned short 
  5707 ;;  sum             2  [STACK] unsigned short 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  2  [STACK] unsigned short 
  5710 ;; Registers used:
  5711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  5712 ;; Tracked objects:
  5713 ;;		On entry : 3F/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5721 ;;Total ram usage:        0 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    3
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_secs_send
  5728 ;; This function uses a reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text7
  5732  004D24                     __ptext7:
  5733                           	opt callstack 0
  5734  004D24                     _block_checksum:
  5735                           	opt callstack 0
  5736                           
  5737                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5738  004D24  52E6               	movf	postinc1,f,c
  5739  004D26  52E6               	movf	postinc1,f,c
  5740  004D28  52E6               	movf	postinc1,f,c
  5741  004D2A  52E6               	movf	postinc1,f,c
  5742                           
  5743                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  5744                           ;stkvar	_sum @ sp[(-4)+2]
  5745                           
  5746                           ;incstack = 0
  5747  004D2C  0EFE               	movlw	-2
  5748  004D2E  6AE3               	clrf	plusw1,c
  5749  004D30  0EFF               	movlw	-1
  5750  004D32  6AE3               	clrf	plusw1,c
  5751                           
  5752                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  5753                           ;stkvar	_i @ sp[(-4)+0]
  5754  004D34  0EFC               	movlw	-4
  5755  004D36  6AE3               	clrf	plusw1,c
  5756  004D38  0EFD               	movlw	-3
  5757  004D3A  6AE3               	clrf	plusw1,c
  5758  004D3C  D039               	goto	l7961
  5759  004D3E                     l7957:
  5760                           
  5761                           ;gemsecs.c: 23:   sum += byte_block[i];
  5762                           ;stkvar	_i @ sp[(-4)+0]
  5763  004D3E  0EFC               	movlw	-4
  5764  004D40  006F FF8C  F045    	movff	plusw1,btemp+10
  5765  004D46  0EFD               	movlw	-3
  5766  004D48  006F FF8C  F046    	movff	plusw1,btemp+11
  5767                           
  5768                           ;stkvar	_byte_block @ sp[(-4)+-2]
  5769  004D4E  0EFA               	movlw	-6
  5770  004D50  006F FF8C  F043    	movff	plusw1,btemp+8
  5771  004D56  0EFB               	movlw	-5
  5772  004D58  006F FF8C  F044    	movff	plusw1,btemp+9
  5773  004D5E  5045               	movf	btemp+10,w,c
  5774  004D60  2443               	addwf	btemp+8,w,c
  5775  004D62  6ED9               	movwf	fsr2l,c
  5776  004D64  5046               	movf	btemp+11,w,c
  5777  004D66  2044               	addwfc	btemp+9,w,c
  5778  004D68  6EDA               	movwf	fsr2h,c
  5779  004D6A  50DF               	movf	indf2,w,c
  5780  004D6C  6E46               	movwf	btemp+11,c
  5781                           
  5782                           ;stkvar	_sum @ sp[(-4)+2]
  5783  004D6E  0EFE               	movlw	-2
  5784  004D70  50E3               	movf	plusw1,w,c
  5785  004D72  2446               	addwf	btemp+11,w,c
  5786  004D74  6E3B               	movwf	btemp,c
  5787  004D76  0EFE               	movlw	-2
  5788  004D78  0060  F0EF  FFE3   	movff	btemp,plusw1
  5789  004D7E  6A3B               	clrf	btemp,c
  5790  004D80  0EFF               	movlw	-1
  5791  004D82  50E3               	movf	plusw1,w,c
  5792  004D84  223B               	addwfc	btemp,f,c
  5793  004D86  0EFF               	movlw	-1
  5794  004D88  0060  F0EF  FFE3   	movff	btemp,plusw1
  5795                           
  5796                           ;gemsecs.c: 24:  }
  5797                           ;stkvar	_i @ sp[(-4)+0]
  5798  004D8E  0EFC               	movlw	-4
  5799  004D90  50E3               	movf	plusw1,w,c
  5800  004D92  0F01               	addlw	1
  5801  004D94  6E3B               	movwf	btemp,c
  5802  004D96  0EFC               	movlw	-4
  5803  004D98  0060  F0EF  FFE3   	movff	btemp,plusw1
  5804  004D9E  6A3B               	clrf	btemp,c
  5805  004DA0  0EFD               	movlw	-3
  5806  004DA2  50E3               	movf	plusw1,w,c
  5807  004DA4  203B               	addwfc	btemp,w,c
  5808  004DA6  6E3B               	movwf	btemp,c
  5809  004DA8  0EFD               	movlw	-3
  5810  004DAA  0060  F0EF  FFE3   	movff	btemp,plusw1
  5811  004DB0                     l7961:
  5812                           
  5813                           ;stkvar	_byte_count @ sp[(-4)+-4]
  5814  004DB0  0EF8               	movlw	-8
  5815  004DB2  006F FF8C  F045    	movff	plusw1,btemp+10
  5816  004DB8  0EF9               	movlw	-7
  5817  004DBA  006F FF8C  F046    	movff	plusw1,btemp+11
  5818                           
  5819                           ;stkvar	_i @ sp[(-4)+0]
  5820  004DC0  0EFC               	movlw	-4
  5821  004DC2  006F FF8C  F043    	movff	plusw1,btemp+8
  5822  004DC8  0EFD               	movlw	-3
  5823  004DCA  006F FF8C  F044    	movff	plusw1,btemp+9
  5824  004DD0  5045               	movf	btemp+10,w,c
  5825  004DD2  5C43               	subwf	btemp+8,w,c
  5826  004DD4  5046               	movf	btemp+11,w,c
  5827  004DD6  5844               	subwfb	btemp+9,w,c
  5828  004DD8  A0D8               	btfss	status,0,c
  5829  004DDA  D7B1               	goto	l7957
  5830                           
  5831                           ;gemsecs.c: 25:  return sum;
  5832                           ;stkvar	_sum @ sp[(-4)+2]
  5833  004DDC  0EFE               	movlw	-2
  5834  004DDE  006F FF8C  F03B    	movff	plusw1,btemp
  5835  004DE4  0EFF               	movlw	-1
  5836  004DE6  006F FF8C  F03C    	movff	plusw1,btemp+1
  5837                           
  5838                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  5839  004DEC  0EF8               	movlw	248
  5840  004DEE  26E1               	addwf	fsr1l,f,c
  5841  004DF0  0EFF               	movlw	255
  5842  004DF2  22E2               	addwfc	fsr1h,f,c
  5843  004DF4  0012               	return		;funcret
  5844  004DF6                     __end_of_block_checksum:
  5845                           	opt callstack 0
  5846                           
  5847 ;; *************** function _UART2_put_buffer *****************
  5848 ;; Defined at:
  5849 ;;		line 257 in file "mcc_generated_files/uart2.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  bufData         1  [STACK] unsigned char 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;		None
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1  [STACK] void 
  5856 ;; Registers used:
  5857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/3B
  5860 ;;		On exit  : 3F/39
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5867 ;;Total ram usage:        0 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    3
  5870 ;; This function calls:
  5871 ;;		Nothing
  5872 ;; This function is called by:
  5873 ;;		_main
  5874 ;;		_secs_send
  5875 ;; This function uses a reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text8
  5879  005C72                     __ptext8:
  5880                           	opt callstack 0
  5881  005C72                     _UART2_put_buffer:
  5882                           	opt callstack 25
  5883                           
  5884                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  5885                           
  5886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5887                           ;incstack = 0
  5888  005C72  0139               	movlb	57	; () banked
  5889  005C74  9596               	bcf	150,2,b	;volatile
  5890                           
  5891                           ; BSR set to: 57
  5892                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  5893                           ;stkvar	_bufData @ sp[(0)+-1]
  5894  005C76  0E00               	movlw	low _uart2RxBuffer
  5895  005C78  2431               	addwf	_uart2RxHead,w,c	;volatile
  5896  005C7A  6ED9               	movwf	fsr2l,c
  5897  005C7C  6ADA               	clrf	fsr2h,c
  5898  005C7E  0E02               	movlw	high _uart2RxBuffer
  5899  005C80  22DA               	addwfc	fsr2h,f,c
  5900  005C82  0EFF               	movlw	-1
  5901  005C84  006F FF8F FFDF     	movff	plusw1,indf2
  5902                           
  5903                           ; BSR set to: 57
  5904  005C8A  2A31               	incf	_uart2RxHead,f,c	;volatile
  5905                           
  5906                           ; BSR set to: 57
  5907                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  5908  005C8C  0E3F               	movlw	63
  5909  005C8E  6431               	cpfsgt	_uart2RxHead,c
  5910  005C90  D001               	goto	l5801
  5911                           
  5912                           ; BSR set to: 57
  5913                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  5914  005C92  6A31               	clrf	_uart2RxHead,c	;volatile
  5915  005C94                     l5801:
  5916                           
  5917                           ; BSR set to: 57
  5918                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  5919  005C94  2A2F               	incf	_uart2RxCount,f,c	;volatile
  5920                           
  5921                           ; BSR set to: 57
  5922                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  5923  005C96  8596               	bsf	150,2,b	;volatile
  5924                           
  5925                           ; BSR set to: 57
  5926                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5927  005C98  52E5               	movf	postdec1,f,c
  5928  005C9A  0012               	return		;funcret
  5929  005C9C                     __end_of_UART2_put_buffer:
  5930                           	opt callstack 0
  5931                           
  5932 ;; *************** function _UART2_is_tx_ready *****************
  5933 ;; Defined at:
  5934 ;;		line 142 in file "mcc_generated_files/uart2.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;		None
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1  [STACK] unsigned char 
  5941 ;; Registers used:
  5942 ;;		btemp
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5952 ;;Total ram usage:        0 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    3
  5955 ;; This function calls:
  5956 ;;		Nothing
  5957 ;; This function is called by:
  5958 ;;		_secs_send
  5959 ;; This function uses a reentrant model
  5960 ;;
  5961                           
  5962                           	psect	text9
  5963  006296                     __ptext9:
  5964                           	opt callstack 0
  5965  006296                     _UART2_is_tx_ready:
  5966                           	opt callstack 25
  5967                           
  5968                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  5969                           
  5970                           ; BSR set to: 57
  5971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5972                           ;incstack = 0
  5973  006296  0060  F0C8  F03B   	movff	_uart2TxBufferRemaining,btemp	;volatile
  5974                           
  5975                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  5976  00629C  0012               	return		;funcret
  5977  00629E                     __end_of_UART2_is_tx_ready:
  5978                           	opt callstack 0
  5979                           
  5980 ;; *************** function _UART2_Write *****************
  5981 ;; Defined at:
  5982 ;;		line 172 in file "mcc_generated_files/uart2.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  txData          1  [STACK] unsigned char 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;		None
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1  [STACK] void 
  5989 ;; Registers used:
  5990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 3F/39
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6000 ;;Total ram usage:        0 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    3
  6003 ;; This function calls:
  6004 ;;		Nothing
  6005 ;; This function is called by:
  6006 ;;		_secs_send
  6007 ;; This function uses a reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text10
  6011  005A16                     __ptext10:
  6012                           	opt callstack 0
  6013  005A16                     _UART2_Write:
  6014                           	opt callstack 25
  6015                           
  6016                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6017                           
  6018                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6019                           
  6020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6021                           ;incstack = 0
  6022  005A16  5032               	movf	_uart2TxBufferRemaining,w,c	;volatile
  6023  005A18  B4D8               	btfsc	status,2,c
  6024  005A1A  D7FD               	goto	_UART2_Write
  6025                           
  6026                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  6027  005A1C  0139               	movlb	57	; () banked
  6028  005A1E  B796               	btfsc	150,3,b	;volatile
  6029  005A20  D005               	goto	l699
  6030                           
  6031                           ; BSR set to: 57
  6032                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  6033                           ;stkvar	_txData @ sp[(0)+-1]
  6034  005A22  0EFF               	movlw	-1
  6035  005A24  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  6036                           
  6037                           ;mcc_generated_files/uart2.c: 181:     }
  6038  005A2A  D011               	goto	l5789
  6039  005A2C                     l699:
  6040                           
  6041                           ; BSR set to: 57
  6042                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  6043  005A2C  9796               	bcf	150,3,b	;volatile
  6044                           
  6045                           ; BSR set to: 57
  6046                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  6047                           ;stkvar	_txData @ sp[(0)+-1]
  6048  005A2E  0E40               	movlw	low _uart2TxBuffer
  6049  005A30  2434               	addwf	_uart2TxHead,w,c	;volatile
  6050  005A32  6ED9               	movwf	fsr2l,c
  6051  005A34  6ADA               	clrf	fsr2h,c
  6052  005A36  0E02               	movlw	high _uart2TxBuffer
  6053  005A38  22DA               	addwfc	fsr2h,f,c
  6054  005A3A  0EFF               	movlw	-1
  6055  005A3C  006F FF8F FFDF     	movff	plusw1,indf2
  6056                           
  6057                           ; BSR set to: 57
  6058  005A42  2A34               	incf	_uart2TxHead,f,c	;volatile
  6059                           
  6060                           ; BSR set to: 57
  6061                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  6062  005A44  0E3F               	movlw	63
  6063  005A46  6434               	cpfsgt	_uart2TxHead,c
  6064  005A48  D001               	goto	l5787
  6065                           
  6066                           ; BSR set to: 57
  6067                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  6068  005A4A  6A34               	clrf	_uart2TxHead,c	;volatile
  6069  005A4C                     l5787:
  6070                           
  6071                           ; BSR set to: 57
  6072                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  6073  005A4C  0632               	decf	_uart2TxBufferRemaining,f,c	;volatile
  6074  005A4E                     l5789:
  6075                           
  6076                           ; BSR set to: 57
  6077                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  6078  005A4E  8796               	bsf	150,3,b	;volatile
  6079                           
  6080                           ; BSR set to: 57
  6081                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6082  005A50  52E5               	movf	postdec1,f,c
  6083  005A52  0012               	return		;funcret
  6084  005A54                     __end_of_UART2_Write:
  6085                           	opt callstack 0
  6086                           
  6087 ;; *************** function _UART1_put_buffer *****************
  6088 ;; Defined at:
  6089 ;;		line 250 in file "mcc_generated_files/uart1.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  bufData         1  [STACK] unsigned char 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1  [STACK] void 
  6096 ;; Registers used:
  6097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 3F/39
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6107 ;;Total ram usage:        0 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    3
  6110 ;; This function calls:
  6111 ;;		Nothing
  6112 ;; This function is called by:
  6113 ;;		_main
  6114 ;;		_t_protocol
  6115 ;;		_secs_send
  6116 ;; This function uses a reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text11
  6120  005C9C                     __ptext11:
  6121                           	opt callstack 0
  6122  005C9C                     _UART1_put_buffer:
  6123                           	opt callstack 25
  6124                           
  6125                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  6126                           
  6127                           ; BSR set to: 57
  6128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6129                           ;incstack = 0
  6130  005C9C  0139               	movlb	57	; () banked
  6131  005C9E  9793               	bcf	147,3,b	;volatile
  6132                           
  6133                           ; BSR set to: 57
  6134                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  6135                           ;stkvar	_bufData @ sp[(0)+-1]
  6136  005CA0  0E80               	movlw	low _uart1RxBuffer
  6137  005CA2  2437               	addwf	_uart1RxHead,w,c	;volatile
  6138  005CA4  6ED9               	movwf	fsr2l,c
  6139  005CA6  6ADA               	clrf	fsr2h,c
  6140  005CA8  0E02               	movlw	high _uart1RxBuffer
  6141  005CAA  22DA               	addwfc	fsr2h,f,c
  6142  005CAC  0EFF               	movlw	-1
  6143  005CAE  006F FF8F FFDF     	movff	plusw1,indf2
  6144                           
  6145                           ; BSR set to: 57
  6146  005CB4  2A37               	incf	_uart1RxHead,f,c	;volatile
  6147                           
  6148                           ; BSR set to: 57
  6149                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  6150  005CB6  0E3F               	movlw	63
  6151  005CB8  6437               	cpfsgt	_uart1RxHead,c
  6152  005CBA  D001               	goto	l5765
  6153                           
  6154                           ; BSR set to: 57
  6155                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  6156  005CBC  6A37               	clrf	_uart1RxHead,c	;volatile
  6157  005CBE                     l5765:
  6158                           
  6159                           ; BSR set to: 57
  6160                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  6161  005CBE  2A35               	incf	_uart1RxCount,f,c	;volatile
  6162                           
  6163                           ; BSR set to: 57
  6164                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  6165  005CC0  8793               	bsf	147,3,b	;volatile
  6166                           
  6167                           ; BSR set to: 57
  6168                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6169  005CC2  52E5               	movf	postdec1,f,c
  6170  005CC4  0012               	return		;funcret
  6171  005CC6                     __end_of_UART1_put_buffer:
  6172                           	opt callstack 0
  6173                           
  6174 ;; *************** function _UART1_is_tx_ready *****************
  6175 ;; Defined at:
  6176 ;;		line 151 in file "mcc_generated_files/uart1.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;		None
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;		None
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1  [STACK] unsigned char 
  6183 ;; Registers used:
  6184 ;;		btemp
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6194 ;;Total ram usage:        0 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    3
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_secs_send
  6201 ;; This function uses a reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text12
  6205  00629E                     __ptext12:
  6206                           	opt callstack 0
  6207  00629E                     _UART1_is_tx_ready:
  6208                           	opt callstack 25
  6209                           
  6210                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  6211                           
  6212                           ; BSR set to: 57
  6213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6214                           ;incstack = 0
  6215  00629E  0060  F0E0  F03B   	movff	_uart1TxBufferRemaining,btemp	;volatile
  6216                           
  6217                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6218  0062A4  0012               	return		;funcret
  6219  0062A6                     __end_of_UART1_is_tx_ready:
  6220                           	opt callstack 0
  6221                           
  6222 ;; *************** function _UART1_Write *****************
  6223 ;; Defined at:
  6224 ;;		line 179 in file "mcc_generated_files/uart1.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  txData          1  [STACK] unsigned char 
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1  [STACK] void 
  6231 ;; Registers used:
  6232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 3F/39
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6242 ;;Total ram usage:        0 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    3
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_r_protocol
  6249 ;;		_t_protocol
  6250 ;;		_secs_send
  6251 ;; This function uses a reentrant model
  6252 ;;
  6253                           
  6254                           	psect	text13
  6255  005A54                     __ptext13:
  6256                           	opt callstack 0
  6257  005A54                     _UART1_Write:
  6258                           	opt callstack 25
  6259                           
  6260                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  6261                           
  6262                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  6263                           
  6264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6265                           ;incstack = 0
  6266  005A54  5038               	movf	_uart1TxBufferRemaining,w,c	;volatile
  6267  005A56  B4D8               	btfsc	status,2,c
  6268  005A58  D7FD               	goto	_UART1_Write
  6269                           
  6270                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  6271  005A5A  0139               	movlb	57	; () banked
  6272  005A5C  B993               	btfsc	147,4,b	;volatile
  6273  005A5E  D005               	goto	l579
  6274                           
  6275                           ; BSR set to: 57
  6276                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  6277                           ;stkvar	_txData @ sp[(0)+-1]
  6278  005A60  0EFF               	movlw	-1
  6279  005A62  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  6280                           
  6281                           ;mcc_generated_files/uart1.c: 186:  } else {
  6282  005A68  D011               	goto	l5753
  6283  005A6A                     l579:
  6284                           
  6285                           ; BSR set to: 57
  6286                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  6287  005A6A  9993               	bcf	147,4,b	;volatile
  6288                           
  6289                           ; BSR set to: 57
  6290                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  6291                           ;stkvar	_txData @ sp[(0)+-1]
  6292  005A6C  0EC0               	movlw	low _uart1TxBuffer
  6293  005A6E  243A               	addwf	_uart1TxHead,w,c	;volatile
  6294  005A70  6ED9               	movwf	fsr2l,c
  6295  005A72  6ADA               	clrf	fsr2h,c
  6296  005A74  0E02               	movlw	high _uart1TxBuffer
  6297  005A76  22DA               	addwfc	fsr2h,f,c
  6298  005A78  0EFF               	movlw	-1
  6299  005A7A  006F FF8F FFDF     	movff	plusw1,indf2
  6300                           
  6301                           ; BSR set to: 57
  6302  005A80  2A3A               	incf	_uart1TxHead,f,c	;volatile
  6303                           
  6304                           ; BSR set to: 57
  6305                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  6306  005A82  0E3F               	movlw	63
  6307  005A84  643A               	cpfsgt	_uart1TxHead,c
  6308  005A86  D001               	goto	l5751
  6309                           
  6310                           ; BSR set to: 57
  6311                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  6312  005A88  6A3A               	clrf	_uart1TxHead,c	;volatile
  6313  005A8A                     l5751:
  6314                           
  6315                           ; BSR set to: 57
  6316                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  6317  005A8A  0638               	decf	_uart1TxBufferRemaining,f,c	;volatile
  6318  005A8C                     l5753:
  6319                           
  6320                           ; BSR set to: 57
  6321                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  6322  005A8C  8993               	bsf	147,4,b	;volatile
  6323                           
  6324                           ; BSR set to: 57
  6325                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6326  005A8E  52E5               	movf	postdec1,f,c
  6327  005A90  0012               	return		;funcret
  6328  005A92                     __end_of_UART1_Write:
  6329                           	opt callstack 0
  6330                           
  6331 ;; *************** function _run_checksum *****************
  6332 ;; Defined at:
  6333 ;;		line 31 in file "gemsecs.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  byte_block      1  [STACK] unsigned char 
  6336 ;;  clear           1  [STACK] _Bool 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;		None
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  2  [STACK] unsigned short 
  6341 ;; Registers used:
  6342 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  6343 ;; Tracked objects:
  6344 ;;		On entry : 6/39
  6345 ;;		On exit  : 3F/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6352 ;;Total ram usage:        0 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:    3
  6355 ;; This function calls:
  6356 ;;		Nothing
  6357 ;; This function is called by:
  6358 ;;		_m_protocol
  6359 ;;		_r_protocol
  6360 ;; This function uses a reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text14
  6364  005BC2                     __ptext14:
  6365                           	opt callstack 0
  6366  005BC2                     _run_checksum:
  6367                           	opt callstack 26
  6368                           
  6369                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  6370                           ;stkvar	_clear @ sp[(0)+-2]
  6371                           
  6372                           ; BSR set to: 57
  6373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6374                           ;incstack = 0
  6375  005BC2  0EFE               	movlw	-2
  6376  005BC4  50E3               	movf	plusw1,w,c
  6377  005BC6  B4D8               	btfsc	status,2,c
  6378  005BC8  D003               	goto	l6111
  6379                           
  6380                           ;gemsecs.c: 36:   sum = 0;
  6381  005BCA  0100               	movlb	0	; () banked
  6382  005BCC  6BF8               	clrf	run_checksum@sum& (0+255),b
  6383  005BCE  6BF9               	clrf	(run_checksum@sum+1)& (0+255),b
  6384  005BD0                     l6111:
  6385                           
  6386                           ;gemsecs.c: 38:  sum += byte_block;
  6387                           ;stkvar	_byte_block @ sp[(0)+-1]
  6388  005BD0  0EFF               	movlw	-1
  6389  005BD2  50E3               	movf	plusw1,w,c
  6390  005BD4  0100               	movlb	0	; () banked
  6391  005BD6  27F8               	addwf	run_checksum@sum& (0+255),f,b
  6392  005BD8  0E00               	movlw	0
  6393  005BDA  23F9               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;gemsecs.c: 39:  return sum;
  6397  005BDC  0060  F3E0  F03B   	movff	run_checksum@sum,btemp
  6398  005BE2  0060  F3E4  F03C   	movff	run_checksum@sum+1,btemp+1
  6399                           
  6400                           ; BSR set to: 0
  6401                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  6402  005BE8  52E5               	movf	postdec1,f,c
  6403  005BEA  52E5               	movf	postdec1,f,c
  6404  005BEC  0012               	return		;funcret
  6405  005BEE                     __end_of_run_checksum:
  6406                           	opt callstack 0
  6407                           
  6408 ;; *************** function _WaitMs *****************
  6409 ;; Defined at:
  6410 ;;		line 31 in file "timers.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  numMilliseco    2  [STACK] unsigned short 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1  [STACK] void 
  6417 ;; Registers used:
  6418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/3B
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6428 ;;Total ram usage:        0 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    4
  6431 ;; This function calls:
  6432 ;;		_StartTimer
  6433 ;;		_TimerDone
  6434 ;; This function is called by:
  6435 ;;		_main
  6436 ;;		_m_protocol
  6437 ;;		_r_protocol
  6438 ;;		_t_protocol
  6439 ;; This function uses a reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text15
  6443  005CC6                     __ptext15:
  6444                           	opt callstack 0
  6445  005CC6                     _WaitMs:
  6446                           	opt callstack 25
  6447                           
  6448                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  6449                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6450                           
  6451                           ; BSR set to: 0
  6452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6453                           ;incstack = 0
  6454  005CC6  0EFE               	movlw	-2
  6455  005CC8  006F FF8F FFE6     	movff	plusw1,postinc1
  6456  005CCE  006F FF8F FFE6     	movff	plusw1,postinc1
  6457  005CD4  0E00               	movlw	0
  6458  005CD6  6EE6               	movwf	postinc1,c
  6459  005CD8  ECA7  F02D         	call	_StartTimer	;wreg free
  6460  005CDC                     l6049:
  6461                           
  6462                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6463  005CDC  0E00               	movlw	0
  6464  005CDE  6EE6               	movwf	postinc1,c
  6465  005CE0  EC19  F030         	call	_TimerDone	;wreg free
  6466  005CE4  503B               	movf	btemp,w,c
  6467  005CE6  B4D8               	btfsc	status,2,c
  6468  005CE8  D7F9               	goto	l6049
  6469                           
  6470                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6471  005CEA  52E5               	movf	postdec1,f,c
  6472  005CEC  52E5               	movf	postdec1,f,c
  6473  005CEE  0012               	return		;funcret
  6474  005CF0                     __end_of_WaitMs:
  6475                           	opt callstack 0
  6476                           
  6477 ;; *************** function _TimerDone *****************
  6478 ;; Defined at:
  6479 ;;		line 20 in file "timers.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  timer           1  [STACK] unsigned char 
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;		None
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  1  [STACK] _Bool 
  6486 ;; Registers used:
  6487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6497 ;;Total ram usage:        0 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; Hardware stack levels required when called:    3
  6500 ;; This function calls:
  6501 ;;		Nothing
  6502 ;; This function is called by:
  6503 ;;		_m_protocol
  6504 ;;		_r_protocol
  6505 ;;		_t_protocol
  6506 ;;		_WaitMs
  6507 ;; This function uses a reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text16
  6511  006032                     __ptext16:
  6512                           	opt callstack 0
  6513  006032                     _TimerDone:
  6514                           	opt callstack 25
  6515                           
  6516                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  6517                           ;stkvar	_timer @ sp[(0)+-1]
  6518                           
  6519                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6520                           ;incstack = 0
  6521  006032  0EFF               	movlw	-1
  6522  006034  50E3               	movf	plusw1,w,c
  6523  006036  0D02               	mullw	2
  6524  006038  50F3               	movf	prodl,w,c
  6525  00603A  0FD9               	addlw	low _tickCount
  6526  00603C  6ED9               	movwf	fsr2l,c
  6527  00603E  6ADA               	clrf	fsr2h,c
  6528  006040  50DE               	movf	postinc2,w,c
  6529  006042  10DE               	iorwf	postinc2,w,c
  6530  006044  A4D8               	btfss	status,2,c
  6531  006046  D002               	goto	l5855
  6532                           
  6533                           ;timers.c: 23:   return 1;
  6534  006048  0E01               	movlw	1
  6535  00604A  D001               	goto	L18
  6536  00604C                     l5855:
  6537                           
  6538                           ;timers.c: 25:  return 0;
  6539  00604C  0E00               	movlw	0
  6540  00604E                     L18:
  6541  00604E  6E3B               	movwf	btemp,c
  6542                           
  6543                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6544  006050  52E5               	movf	postdec1,f,c
  6545  006052  0012               	return		;funcret
  6546  006054                     __end_of_TimerDone:
  6547                           	opt callstack 0
  6548                           
  6549 ;; *************** function _StartTimer *****************
  6550 ;; Defined at:
  6551 ;;		line 12 in file "timers.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  timer           1  [STACK] unsigned char 
  6554 ;;  count           2  [STACK] unsigned short 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;		None
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1  [STACK] void 
  6559 ;; Registers used:
  6560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/39
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6570 ;;Total ram usage:        0 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    3
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_m_protocol
  6577 ;;		_r_protocol
  6578 ;;		_t_protocol
  6579 ;;		_WaitMs
  6580 ;; This function uses a reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text17
  6584  005B4E                     __ptext17:
  6585                           	opt callstack 0
  6586  005B4E                     _StartTimer:
  6587                           	opt callstack 25
  6588                           
  6589                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  6590                           ;stkvar	_count @ sp[(0)+-3]
  6591                           
  6592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6593                           ;incstack = 0
  6594  005B4E  0EFD               	movlw	-3
  6595  005B50  006F FF8C  F045    	movff	plusw1,btemp+10
  6596  005B56  0EFE               	movlw	-2
  6597  005B58  006F FF8C  F046    	movff	plusw1,btemp+11
  6598  005B5E  90D8               	bcf	status,0,c
  6599  005B60  3445               	rlcf	btemp+10,w,c
  6600  005B62  6E43               	movwf	btemp+8,c
  6601  005B64  3446               	rlcf	btemp+11,w,c
  6602  005B66  6E44               	movwf	btemp+9,c
  6603                           
  6604                           ;stkvar	_timer @ sp[(0)+-1]
  6605  005B68  0EFF               	movlw	-1
  6606  005B6A  50E3               	movf	plusw1,w,c
  6607  005B6C  0D02               	mullw	2
  6608  005B6E  50F3               	movf	prodl,w,c
  6609  005B70  0FD9               	addlw	low _tickCount
  6610  005B72  6ED9               	movwf	fsr2l,c
  6611  005B74  6ADA               	clrf	fsr2h,c
  6612  005B76  0060  F10F  FFDE   	movff	btemp+8,postinc2
  6613  005B7C  0060  F113  FFDD   	movff	btemp+9,postdec2
  6614                           
  6615                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  6616  005B82  52E5               	movf	postdec1,f,c
  6617  005B84  52E5               	movf	postdec1,f,c
  6618  005B86  52E5               	movf	postdec1,f,c
  6619  005B88  0012               	return		;funcret
  6620  005B8A                     __end_of_StartTimer:
  6621                           	opt callstack 0
  6622                           
  6623 ;; *************** function _UART2_is_rx_ready *****************
  6624 ;; Defined at:
  6625 ;;		line 137 in file "mcc_generated_files/uart2.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1  [STACK] unsigned char 
  6632 ;; Registers used:
  6633 ;;		btemp
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6643 ;;Total ram usage:        0 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    3
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_m_protocol
  6650 ;; This function uses a reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text18
  6654  0062A6                     __ptext18:
  6655                           	opt callstack 0
  6656  0062A6                     _UART2_is_rx_ready:
  6657                           	opt callstack 26
  6658                           
  6659                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  6660                           
  6661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6662                           ;incstack = 0
  6663  0062A6  0060  F0BC  F03B   	movff	_uart2RxCount,btemp	;volatile
  6664                           
  6665                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6666  0062AC  0012               	return		;funcret
  6667  0062AE                     __end_of_UART2_is_rx_ready:
  6668                           	opt callstack 0
  6669                           
  6670 ;; *************** function _UART2_Read *****************
  6671 ;; Defined at:
  6672 ;;		line 152 in file "mcc_generated_files/uart2.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;		None
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  readValue       1  [STACK] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1  [STACK] unsigned char 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 3F/39
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6690 ;;Total ram usage:        0 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:    3
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_m_protocol
  6697 ;; This function uses a reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text19
  6701  005A92                     __ptext19:
  6702                           	opt callstack 0
  6703  005A92                     _UART2_Read:
  6704                           	opt callstack 0
  6705                           
  6706                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6707  005A92  52E6               	movf	postinc1,f,c
  6708  005A94                     
  6709                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6710                           
  6711                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6712  005A94  502F               	movf	_uart2RxCount,w,c	;volatile
  6713  005A96  B4D8               	btfsc	status,2,c
  6714  005A98  D7FD               	goto	l6011
  6715                           
  6716                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  6717  005A9A  0E00               	movlw	low _uart2RxBuffer
  6718  005A9C  2430               	addwf	_uart2RxTail,w,c	;volatile
  6719  005A9E  6ED9               	movwf	fsr2l,c
  6720  005AA0  6ADA               	clrf	fsr2h,c
  6721  005AA2  0E02               	movlw	high _uart2RxBuffer
  6722  005AA4  22DA               	addwfc	fsr2h,f,c
  6723  005AA6  50DF               	movf	indf2,w,c
  6724  005AA8  6E46               	movwf	btemp+11,c
  6725                           
  6726                           ;stkvar	_readValue @ sp[(-1)+0]
  6727  005AAA  0EFF               	movlw	-1
  6728  005AAC  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6729  005AB2  2A30               	incf	_uart2RxTail,f,c	;volatile
  6730                           
  6731                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  6732  005AB4  0E3F               	movlw	63
  6733  005AB6  6430               	cpfsgt	_uart2RxTail,c
  6734  005AB8  D001               	goto	l692
  6735                           
  6736                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  6737  005ABA  6A30               	clrf	_uart2RxTail,c	;volatile
  6738  005ABC                     l692:
  6739                           
  6740                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  6741  005ABC  0139               	movlb	57	; () banked
  6742  005ABE  9596               	bcf	150,2,b	;volatile
  6743                           
  6744                           ; BSR set to: 57
  6745                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  6746  005AC0  062F               	decf	_uart2RxCount,f,c	;volatile
  6747                           
  6748                           ; BSR set to: 57
  6749                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  6750  005AC2  8596               	bsf	150,2,b	;volatile
  6751                           
  6752                           ; BSR set to: 57
  6753                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  6754                           ;stkvar	_readValue @ sp[(-1)+0]
  6755  005AC4  0EFF               	movlw	-1
  6756  005AC6  006F FF8C  F03B    	movff	plusw1,btemp
  6757                           
  6758                           ; BSR set to: 57
  6759                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6760  005ACC  52E5               	movf	postdec1,f,c
  6761  005ACE  0012               	return		;funcret
  6762  005AD0                     __end_of_UART2_Read:
  6763                           	opt callstack 0
  6764                           
  6765 ;; *************** function _UART1_is_rx_ready *****************
  6766 ;; Defined at:
  6767 ;;		line 146 in file "mcc_generated_files/uart1.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1  [STACK] unsigned char 
  6774 ;; Registers used:
  6775 ;;		btemp
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6785 ;;Total ram usage:        0 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    3
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_m_protocol
  6792 ;;		_r_protocol
  6793 ;;		_t_protocol
  6794 ;; This function uses a reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text20
  6798  0062AE                     __ptext20:
  6799                           	opt callstack 0
  6800  0062AE                     _UART1_is_rx_ready:
  6801                           	opt callstack 26
  6802                           
  6803                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  6804                           
  6805                           ; BSR set to: 57
  6806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6807                           ;incstack = 0
  6808  0062AE  0060  F0D4  F03B   	movff	_uart1RxCount,btemp	;volatile
  6809                           
  6810                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6811  0062B4  0012               	return		;funcret
  6812  0062B6                     __end_of_UART1_is_rx_ready:
  6813                           	opt callstack 0
  6814                           
  6815 ;; *************** function _UART1_Read *****************
  6816 ;; Defined at:
  6817 ;;		line 161 in file "mcc_generated_files/uart1.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;		None
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  readValue       1  [STACK] unsigned char 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  1  [STACK] unsigned char 
  6824 ;; Registers used:
  6825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 3F/39
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6835 ;;Total ram usage:        0 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    3
  6838 ;; This function calls:
  6839 ;;		Nothing
  6840 ;; This function is called by:
  6841 ;;		_m_protocol
  6842 ;;		_r_protocol
  6843 ;;		_t_protocol
  6844 ;; This function uses a reentrant model
  6845 ;;
  6846                           
  6847                           	psect	text21
  6848  005AD0                     __ptext21:
  6849                           	opt callstack 0
  6850  005AD0                     _UART1_Read:
  6851                           	opt callstack 0
  6852                           
  6853                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6854  005AD0  52E6               	movf	postinc1,f,c
  6855  005AD2                     
  6856                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6857                           
  6858                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6859  005AD2  5035               	movf	_uart1RxCount,w,c	;volatile
  6860  005AD4  B4D8               	btfsc	status,2,c
  6861  005AD6  D7FD               	goto	l5987
  6862                           
  6863                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  6864  005AD8  0E80               	movlw	low _uart1RxBuffer
  6865  005ADA  2436               	addwf	_uart1RxTail,w,c	;volatile
  6866  005ADC  6ED9               	movwf	fsr2l,c
  6867  005ADE  6ADA               	clrf	fsr2h,c
  6868  005AE0  0E02               	movlw	high _uart1RxBuffer
  6869  005AE2  22DA               	addwfc	fsr2h,f,c
  6870  005AE4  50DF               	movf	indf2,w,c
  6871  005AE6  6E46               	movwf	btemp+11,c
  6872                           
  6873                           ;stkvar	_readValue @ sp[(-1)+0]
  6874  005AE8  0EFF               	movlw	-1
  6875  005AEA  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6876  005AF0  2A36               	incf	_uart1RxTail,f,c	;volatile
  6877                           
  6878                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  6879  005AF2  0E3F               	movlw	63
  6880  005AF4  6436               	cpfsgt	_uart1RxTail,c
  6881  005AF6  D001               	goto	l572
  6882                           
  6883                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  6884  005AF8  6A36               	clrf	_uart1RxTail,c	;volatile
  6885  005AFA                     l572:
  6886                           
  6887                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  6888  005AFA  0139               	movlb	57	; () banked
  6889  005AFC  9793               	bcf	147,3,b	;volatile
  6890                           
  6891                           ; BSR set to: 57
  6892                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  6893  005AFE  0635               	decf	_uart1RxCount,f,c	;volatile
  6894                           
  6895                           ; BSR set to: 57
  6896                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  6897  005B00  8793               	bsf	147,3,b	;volatile
  6898                           
  6899                           ; BSR set to: 57
  6900                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  6901                           ;stkvar	_readValue @ sp[(-1)+0]
  6902  005B02  0EFF               	movlw	-1
  6903  005B04  006F FF8C  F03B    	movff	plusw1,btemp
  6904                           
  6905                           ; BSR set to: 57
  6906                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6907  005B0A  52E5               	movf	postdec1,f,c
  6908  005B0C  0012               	return		;funcret
  6909  005B0E                     __end_of_UART1_Read:
  6910                           	opt callstack 0
  6911                           
  6912 ;; *************** function _init_display *****************
  6913 ;; Defined at:
  6914 ;;		line 35 in file "eadog.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;		None
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;		None
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1  [STACK] void 
  6921 ;; Registers used:
  6922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 3F/3D
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6932 ;;Total ram usage:        0 bytes
  6933 ;; Hardware stack levels used:    1
  6934 ;; Hardware stack levels required when called:    5
  6935 ;; This function calls:
  6936 ;;		_ringBufS_init
  6937 ;;		_send_lcd_cmd
  6938 ;;		_send_lcd_cmd_long
  6939 ;;		_wdtdelay
  6940 ;; This function is called by:
  6941 ;;		_main
  6942 ;; This function uses a reentrant model
  6943 ;;
  6944                           
  6945                           	psect	text22
  6946  004C3A                     __ptext22:
  6947                           	opt callstack 0
  6948  004C3A                     _init_display:
  6949                           	opt callstack 25
  6950                           
  6951                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  6952                           
  6953                           ; BSR set to: 57
  6954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6955                           ;incstack = 0
  6956  004C3A  0E43               	movlw	low _ring_buf1
  6957  004C3C  0100               	movlb	0	; () banked
  6958  004C3E  6FD3               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6959  004C40  0E03               	movlw	high _ring_buf1
  6960  004C42  6FD4               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6961                           
  6962                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  6963  004C44  0E00               	movlw	low _ring_buf2
  6964  004C46  6FD1               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6965  004C48  0E03               	movlw	high _ring_buf2
  6966  004C4A  6FD2               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  6970  004C4C  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
  6971  004C52  0060  F353  FFE6   	movff	_spi_link+7,postinc1
  6972  004C58  ECB5  F02E         	call	_ringBufS_init	;wreg free
  6973                           
  6974                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  6975  004C5C  0060  F347  FFE6   	movff	_spi_link+4,postinc1
  6976  004C62  0060  F34B  FFE6   	movff	_spi_link+5,postinc1
  6977  004C68  ECB5  F02E         	call	_ringBufS_init	;wreg free
  6978                           
  6979                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  6980  004C6C  80BE               	bsf	16318,0,c	;volatile
  6981  004C6E  84BC               	bsf	16316,2,c	;volatile
  6982                           
  6983                           ;eadog.c: 44:  wdtdelay(350000);
  6984  004C70  0E30               	movlw	48
  6985  004C72  6EE6               	movwf	postinc1,c
  6986  004C74  0E57               	movlw	87
  6987  004C76  6EE6               	movwf	postinc1,c
  6988  004C78  0E05               	movlw	5
  6989  004C7A  6EE6               	movwf	postinc1,c
  6990  004C7C  0E00               	movlw	0
  6991  004C7E  6EE6               	movwf	postinc1,c
  6992  004C80  ECC1  F02B         	call	_wdtdelay	;wreg free
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  6996  004C84  0E39               	movlw	57
  6997  004C86  6EE6               	movwf	postinc1,c
  6998  004C88  ECA1  F02E         	call	_send_lcd_cmd	;wreg free
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  7002  004C8C  0E1D               	movlw	29
  7003  004C8E  6EE6               	movwf	postinc1,c
  7004  004C90  ECA1  F02E         	call	_send_lcd_cmd	;wreg free
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  7008  004C94  0E50               	movlw	80
  7009  004C96  6EE6               	movwf	postinc1,c
  7010  004C98  ECA1  F02E         	call	_send_lcd_cmd	;wreg free
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  7014  004C9C  0E6C               	movlw	108
  7015  004C9E  6EE6               	movwf	postinc1,c
  7016  004CA0  ECA1  F02E         	call	_send_lcd_cmd	;wreg free
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  7020  004CA4  0E76               	movlw	118
  7021  004CA6  6EE6               	movwf	postinc1,c
  7022  004CA8  ECA1  F02E         	call	_send_lcd_cmd	;wreg free
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  7026  004CAC  0E38               	movlw	56
  7027  004CAE  6EE6               	movwf	postinc1,c
  7028  004CB0  EC8D  F02E         	call	_send_lcd_cmd_long	;wreg free
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  7032  004CB4  0E0F               	movlw	15
  7033  004CB6  6EE6               	movwf	postinc1,c
  7034  004CB8  ECA1  F02E         	call	_send_lcd_cmd	;wreg free
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  7038  004CBC  0E01               	movlw	1
  7039  004CBE  6EE6               	movwf	postinc1,c
  7040  004CC0  EC8D  F02E         	call	_send_lcd_cmd_long	;wreg free
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  7044  004CC4  0E02               	movlw	2
  7045  004CC6  6EE6               	movwf	postinc1,c
  7046  004CC8  ECA1  F02E         	call	_send_lcd_cmd	;wreg free
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  7050  004CCC  0E06               	movlw	6
  7051  004CCE  6EE6               	movwf	postinc1,c
  7052  004CD0  ECA1  F02E         	call	_send_lcd_cmd	;wreg free
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;eadog.c: 55:  wdtdelay(30);
  7056  004CD4  0E1E               	movlw	30
  7057  004CD6  6EE6               	movwf	postinc1,c
  7058  004CD8  0E00               	movlw	0
  7059  004CDA  6EE6               	movwf	postinc1,c
  7060  004CDC  0E00               	movlw	0
  7061  004CDE  6EE6               	movwf	postinc1,c
  7062  004CE0  0E00               	movlw	0
  7063  004CE2  6EE6               	movwf	postinc1,c
  7064  004CE4  ECC1  F02B         	call	_wdtdelay	;wreg free
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  7068  004CE8  0E02               	movlw	2
  7069  004CEA  013D               	movlb	61	; () banked
  7070  004CEC  6F16               	movwf	22,b	;volatile
  7071                           
  7072                           ; BSR set to: 61
  7073                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  7074  004CEE  0E40               	movlw	64
  7075  004CF0  6F15               	movwf	21,b	;volatile
  7076                           
  7077                           ; BSR set to: 61
  7078                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  7079  004CF2  0E83               	movlw	131
  7080  004CF4  6F14               	movwf	20,b	;volatile
  7081                           
  7082                           ; BSR set to: 61
  7083                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  7084  004CF6  931A               	bcf	26,1,b	;volatile
  7085                           
  7086                           ; BSR set to: 61
  7087                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  7088  004CF8  0E3F               	movlw	-193
  7089  004CFA  013B               	movlb	59	; () banked
  7090  004CFC  17FD               	andwf	253,f,b	;volatile
  7091                           
  7092                           ; BSR set to: 59
  7093                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  7094  004CFE  9BFD               	bcf	253,5,b	;volatile
  7095                           
  7096                           ; BSR set to: 59
  7097                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  7098  004D00  51FD               	movf	253,w,b	;volatile
  7099  004D02  0BF9               	andlw	-7
  7100  004D04  0902               	iorlw	2
  7101  004D06  6FFD               	movwf	253,b	;volatile
  7102                           
  7103                           ; BSR set to: 59
  7104                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  7105  004D08  0EE7               	movlw	-25
  7106  004D0A  17FD               	andwf	253,f,b	;volatile
  7107                           
  7108                           ; BSR set to: 59
  7109                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  7110  004D0C  81FD               	bsf	253,0,b	;volatile
  7111                           
  7112                           ; BSR set to: 59
  7113                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  7114  004D0E  0E43               	movlw	low _ring_buf1
  7115  004D10  6FF9               	movwf	249,b	;volatile
  7116  004D12  0E03               	movlw	high _ring_buf1
  7117  004D14  6FFA               	movwf	250,b	;volatile
  7118  004D16  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7119  004D18  6FFB               	movwf	251,b	;volatile
  7120                           
  7121                           ; BSR set to: 59
  7122                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  7123  004D1A  9BFC               	bcf	252,5,b	;volatile
  7124                           
  7125                           ; BSR set to: 59
  7126                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  7127  004D1C  013D               	movlb	61	; () banked
  7128  004D1E  831A               	bsf	26,1,b	;volatile
  7129                           
  7130                           ; BSR set to: 61
  7131                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  7132  004D20  90BE               	bcf	16318,0,c	;volatile
  7133                           
  7134                           ; BSR set to: 61
  7135                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7136  004D22  0012               	return		;funcret
  7137  004D24                     __end_of_init_display:
  7138                           	opt callstack 0
  7139                           
  7140 ;; *************** function _send_lcd_cmd_long *****************
  7141 ;; Defined at:
  7142 ;;		line 97 in file "eadog.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;  cmd             1  [STACK] unsigned char 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;		None
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  1  [STACK] void 
  7149 ;; Registers used:
  7150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7151 ;; Tracked objects:
  7152 ;;		On entry : 3F/0
  7153 ;;		On exit  : 3F/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7160 ;;Total ram usage:        0 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; Hardware stack levels required when called:    4
  7163 ;; This function calls:
  7164 ;;		_SPI1_Exchange8bit
  7165 ;;		_wdtdelay
  7166 ;; This function is called by:
  7167 ;;		_init_display
  7168 ;; This function uses a reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text23
  7172  005D1A                     __ptext23:
  7173                           	opt callstack 0
  7174  005D1A                     _send_lcd_cmd_long:
  7175                           	opt callstack 25
  7176                           
  7177                           ; BSR set to: 61
  7178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7179                           ;incstack = 0
  7180                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  7181  005D1A  92BC               	bcf	16316,1,c	;volatile
  7182                           
  7183                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  7184  005D1C  94BC               	bcf	16316,2,c	;volatile
  7185                           
  7186                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  7187                           ;stkvar	_cmd @ sp[(0)+-1]
  7188  005D1E  0EFF               	movlw	-1
  7189  005D20  50E3               	movf	plusw1,w,c
  7190  005D22  6EE6               	movwf	postinc1,c
  7191  005D24  EC8E  F030         	call	_SPI1_Exchange8bit	;wreg free
  7192                           
  7193                           ; BSR set to: 57
  7194                           ;eadog.c: 102:  wdtdelay(800);
  7195  005D28  0E20               	movlw	32
  7196  005D2A  6EE6               	movwf	postinc1,c
  7197  005D2C  0E03               	movlw	3
  7198  005D2E  6EE6               	movwf	postinc1,c
  7199  005D30  0E00               	movlw	0
  7200  005D32  6EE6               	movwf	postinc1,c
  7201  005D34  0E00               	movlw	0
  7202  005D36  6EE6               	movwf	postinc1,c
  7203  005D38  ECC1  F02B         	call	_wdtdelay	;wreg free
  7204                           
  7205                           ; BSR set to: 0
  7206  005D3C  82BC               	bsf	16316,1,c	;volatile
  7207                           
  7208                           ; BSR set to: 0
  7209                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7210  005D3E  52E5               	movf	postdec1,f,c
  7211  005D40  0012               	return		;funcret
  7212  005D42                     __end_of_send_lcd_cmd_long:
  7213                           	opt callstack 0
  7214                           
  7215 ;; *************** function _send_lcd_cmd *****************
  7216 ;; Defined at:
  7217 ;;		line 85 in file "eadog.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  cmd             1  [STACK] unsigned char 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;		None
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1  [STACK] void 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7226 ;; Tracked objects:
  7227 ;;		On entry : 3F/0
  7228 ;;		On exit  : 3F/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7235 ;;Total ram usage:        0 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    4
  7238 ;; This function calls:
  7239 ;;		_SPI1_Exchange8bit
  7240 ;;		_wdtdelay
  7241 ;; This function is called by:
  7242 ;;		_init_display
  7243 ;; This function uses a reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text24
  7247  005D42                     __ptext24:
  7248                           	opt callstack 0
  7249  005D42                     _send_lcd_cmd:
  7250                           	opt callstack 25
  7251                           
  7252                           ; BSR set to: 0
  7253                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7254                           ;incstack = 0
  7255                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  7256  005D42  92BC               	bcf	16316,1,c	;volatile
  7257                           
  7258                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  7259  005D44  94BC               	bcf	16316,2,c	;volatile
  7260                           
  7261                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  7262                           ;stkvar	_cmd @ sp[(0)+-1]
  7263  005D46  0EFF               	movlw	-1
  7264  005D48  50E3               	movf	plusw1,w,c
  7265  005D4A  6EE6               	movwf	postinc1,c
  7266  005D4C  EC8E  F030         	call	_SPI1_Exchange8bit	;wreg free
  7267                           
  7268                           ; BSR set to: 57
  7269                           ;eadog.c: 90:  wdtdelay(30);
  7270  005D50  0E1E               	movlw	30
  7271  005D52  6EE6               	movwf	postinc1,c
  7272  005D54  0E00               	movlw	0
  7273  005D56  6EE6               	movwf	postinc1,c
  7274  005D58  0E00               	movlw	0
  7275  005D5A  6EE6               	movwf	postinc1,c
  7276  005D5C  0E00               	movlw	0
  7277  005D5E  6EE6               	movwf	postinc1,c
  7278  005D60  ECC1  F02B         	call	_wdtdelay	;wreg free
  7279                           
  7280                           ; BSR set to: 0
  7281  005D64  82BC               	bsf	16316,1,c	;volatile
  7282                           
  7283                           ; BSR set to: 0
  7284                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7285  005D66  52E5               	movf	postdec1,f,c
  7286  005D68  0012               	return		;funcret
  7287  005D6A                     __end_of_send_lcd_cmd:
  7288                           	opt callstack 0
  7289                           
  7290 ;; *************** function _SPI1_Exchange8bit *****************
  7291 ;; Defined at:
  7292 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  data            1  [STACK] unsigned char 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;		None
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  1  [STACK] unsigned char 
  7299 ;; Registers used:
  7300 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 3F/39
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7310 ;;Total ram usage:        0 bytes
  7311 ;; Hardware stack levels used:    1
  7312 ;; Hardware stack levels required when called:    3
  7313 ;; This function calls:
  7314 ;;		Nothing
  7315 ;; This function is called by:
  7316 ;;		_send_lcd_cmd
  7317 ;;		_send_lcd_cmd_long
  7318 ;; This function uses a reentrant model
  7319 ;;
  7320                           
  7321                           	psect	text25
  7322  00611C                     __ptext25:
  7323                           	opt callstack 0
  7324  00611C                     _SPI1_Exchange8bit:
  7325                           	opt callstack 25
  7326                           
  7327                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7328                           
  7329                           ; BSR set to: 0
  7330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7331                           ;incstack = 0
  7332  00611C  0E01               	movlw	1
  7333  00611E  013D               	movlb	61	; () banked
  7334  006120  6F12               	movwf	18,b	;volatile
  7335                           
  7336                           ; BSR set to: 61
  7337                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7338                           ;stkvar	_data @ sp[(0)+-1]
  7339  006122  0EFF               	movlw	-1
  7340  006124  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7341  00612A                     l851:
  7342                           
  7343                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7344  00612A  0139               	movlb	57	; () banked
  7345  00612C  A9A2               	btfss	162,4,b	;volatile
  7346  00612E  D7FD               	goto	l851
  7347                           
  7348                           ; BSR set to: 57
  7349                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7350  006130  006F F440  F03B    	movff	15632,btemp	;volatile
  7351                           
  7352                           ; BSR set to: 57
  7353                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7354  006136  52E5               	movf	postdec1,f,c
  7355  006138  0012               	return		;funcret
  7356  00613A                     __end_of_SPI1_Exchange8bit:
  7357                           	opt callstack 0
  7358                           
  7359 ;; *************** function _ringBufS_init *****************
  7360 ;; Defined at:
  7361 ;;		line 22 in file "ringbufs.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  _this           2  [STACK] PTR volatile struct ring
  7364 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;		None
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  1  [STACK] void 
  7369 ;; Registers used:
  7370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7380 ;;Total ram usage:        0 bytes
  7381 ;; Hardware stack levels used:    1
  7382 ;; Hardware stack levels required when called:    4
  7383 ;; This function calls:
  7384 ;;		_memset
  7385 ;; This function is called by:
  7386 ;;		_init_display
  7387 ;; This function uses a reentrant model
  7388 ;;
  7389                           
  7390                           	psect	text26
  7391  005D6A                     __ptext26:
  7392                           	opt callstack 0
  7393  005D6A                     _ringBufS_init:
  7394                           	opt callstack 25
  7395                           
  7396                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7397                           
  7398                           ; BSR set to: 57
  7399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7400                           ;incstack = 0
  7401  005D6A  0E43               	movlw	67
  7402  005D6C  6EE6               	movwf	postinc1,c
  7403  005D6E  0E00               	movlw	0
  7404  005D70  6EE6               	movwf	postinc1,c
  7405  005D72  0E00               	movlw	0
  7406  005D74  6EE6               	movwf	postinc1,c
  7407  005D76  0E00               	movlw	0
  7408  005D78  6EE6               	movwf	postinc1,c
  7409                           
  7410                           ;stkvar	__this @ sp[(-4)+-2]
  7411  005D7A  0EFA               	movlw	-6
  7412  005D7C  006F FF8F FFE6     	movff	plusw1,postinc1
  7413  005D82  006F FF8F FFE6     	movff	plusw1,postinc1
  7414  005D88  EC6B  F01B         	call	_memset	;wreg free
  7415                           
  7416                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7417  005D8C  52E5               	movf	postdec1,f,c
  7418  005D8E  52E5               	movf	postdec1,f,c
  7419  005D90  0012               	return		;funcret
  7420  005D92                     __end_of_ringBufS_init:
  7421                           	opt callstack 0
  7422                           
  7423 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7424 ;; Defined at:
  7425 ;;		line 221 in file "eadog.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;  r               1  [STACK] unsigned char 
  7428 ;;  c               1  [STACK] unsigned char 
  7429 ;;  strPtr          1  [STACK] PTR unsigned char 
  7430 ;;		 -> V(89), 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;		None
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1  [STACK] void 
  7435 ;; Registers used:
  7436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  7437 ;; Tracked objects:
  7438 ;;		On entry : 3F/0
  7439 ;;		On exit  : 3F/3B
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7446 ;;Total ram usage:        0 bytes
  7447 ;; Hardware stack levels used:    1
  7448 ;; Hardware stack levels required when called:   13
  7449 ;; This function calls:
  7450 ;;		_eaDogM_WriteString
  7451 ;;		_send_lcd_cmd_dma
  7452 ;; This function is called by:
  7453 ;;		_main
  7454 ;; This function uses a reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text27
  7458  005BEE                     __ptext27:
  7459                           	opt callstack 0
  7460  005BEE                     _eaDogM_WriteStringAtPos:
  7461                           	opt callstack 17
  7462                           
  7463                           ;eadog.c: 221: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           222: {;eadog.c: 223:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7464                           ;stkvar	_c @ sp[(0)+-2]
  7465                           
  7466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7467                           ;incstack = 0
  7468  005BEE  0EFE               	movlw	-2
  7469  005BF0  006F FF8C  F046    	movff	plusw1,btemp+11
  7470                           
  7471                           ;stkvar	_r @ sp[(0)+-1]
  7472  005BF6  0EFF               	movlw	-1
  7473  005BF8  50E3               	movf	plusw1,w,c
  7474  005BFA  0D10               	mullw	16
  7475  005BFC  50F3               	movf	prodl,w,c
  7476  005BFE  2446               	addwf	btemp+11,w,c
  7477  005C00  0F80               	addlw	128
  7478  005C02  6EE6               	movwf	postinc1,c
  7479  005C04  ECEF  F02B         	call	_send_lcd_cmd_dma	;wreg free
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;eadog.c: 224:  eaDogM_WriteString(strPtr);
  7483                           ;stkvar	_strPtr @ sp[(0)+-3]
  7484  005C08  0EFD               	movlw	-3
  7485  005C0A  50E3               	movf	plusw1,w,c
  7486  005C0C  6EE6               	movwf	postinc1,c
  7487  005C0E  EC24  F029         	call	_eaDogM_WriteString	;wreg free
  7488                           
  7489                           ; BSR set to: 59
  7490                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  7491  005C12  52E5               	movf	postdec1,f,c
  7492  005C14  52E5               	movf	postdec1,f,c
  7493  005C16  52E5               	movf	postdec1,f,c
  7494  005C18  0012               	return		;funcret
  7495  005C1A                     __end_of_eaDogM_WriteStringAtPos:
  7496                           	opt callstack 0
  7497                           
  7498 ;; *************** function _eaDogM_WriteString *****************
  7499 ;; Defined at:
  7500 ;;		line 167 in file "eadog.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;  strPtr          1  [STACK] PTR unsigned char 
  7503 ;;		 -> V(89), 
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;		None
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1  [STACK] void 
  7508 ;; Registers used:
  7509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7510 ;; Tracked objects:
  7511 ;;		On entry : 3F/0
  7512 ;;		On exit  : 3F/3B
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7519 ;;Total ram usage:        0 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; Hardware stack levels required when called:   12
  7522 ;; This function calls:
  7523 ;;		_printf
  7524 ;;		_ringBufS_flush
  7525 ;;		_start_lcd
  7526 ;;		_strlen
  7527 ;;		_wait_lcd_set
  7528 ;; This function is called by:
  7529 ;;		_eaDogM_WriteStringAtPos
  7530 ;; This function uses a reentrant model
  7531 ;;
  7532                           
  7533                           	psect	text28
  7534  005248                     __ptext28:
  7535                           	opt callstack 0
  7536  005248                     _eaDogM_WriteString:
  7537                           	opt callstack 17
  7538                           
  7539                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  7540                           
  7541                           ; BSR set to: 59
  7542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7543                           ;incstack = 0
  7544  005248  EC5B  F031         	call	_wait_lcd_set	;wreg free
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  7548  00524C  0E00               	movlw	0
  7549  00524E  6EE6               	movwf	postinc1,c
  7550  005250  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
  7551  005256  0060  F353  FFE6   	movff	_spi_link+7,postinc1
  7552  00525C  EC0A  F02A         	call	_ringBufS_flush	;wreg free
  7553  005260  94BC               	bcf	16316,2,c	;volatile
  7554                           
  7555                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7556                           ;stkvar	_strPtr @ sp[(0)+-1]
  7557  005262  0EFF               	movlw	-1
  7558  005264  006F FF8C  F046    	movff	plusw1,btemp+11
  7559  00526A  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7560  005270  0E00               	movlw	0
  7561  005272  6EE6               	movwf	postinc1,c
  7562  005274  EC83  F028         	call	_strlen	;wreg free
  7563  005278  503C               	movf	btemp+1,w,c
  7564  00527A  E104               	bnz	u4960
  7565  00527C  0E41               	movlw	65
  7566  00527E  5C3B               	subwf	btemp,w,c
  7567  005280  A0D8               	btfss	status,0,c
  7568  005282  D008               	goto	l8031
  7569  005284                     u4960:
  7570                           
  7571                           ;stkvar	_strPtr @ sp[(0)+-1]
  7572  005284  0EFF               	movlw	-1
  7573  005286  50E3               	movf	plusw1,w,c
  7574  005288  6ED9               	movwf	fsr2l,c
  7575  00528A  6ADA               	clrf	fsr2h,c
  7576  00528C  0E40               	movlw	64
  7577  00528E  26D9               	addwf	fsr2l,f,c
  7578  005290  0E00               	movlw	0
  7579  005292  6EDF               	movwf	indf2,c
  7580  005294                     l8031:
  7581                           
  7582                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  7583  005294  013B               	movlb	59	; () banked
  7584  005296  9FFC               	bcf	252,7,b	;volatile
  7585                           
  7586                           ; BSR set to: 59
  7587                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  7588                           ;stkvar	_strPtr @ sp[(0)+-1]
  7589  005298  0EFF               	movlw	-1
  7590  00529A  006F FF8C  F046    	movff	plusw1,btemp+11
  7591  0052A0  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7592  0052A6  0E00               	movlw	0
  7593  0052A8  6EE6               	movwf	postinc1,c
  7594  0052AA  EC83  F028         	call	_strlen	;wreg free
  7595  0052AE  0060  F0EF  FBF7   	movff	btemp,15351	;volatile
  7596  0052B4  0060  F0F3  FBF8   	movff	btemp+1,15352	;volatile
  7597                           
  7598                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  7599  0052BA  013B               	movlb	59	; () banked
  7600  0052BC  8FFC               	bsf	252,7,b	;volatile
  7601                           
  7602                           ; BSR set to: 59
  7603                           ;eadog.c: 177:  printf("%s", strPtr);
  7604                           ;stkvar	_strPtr @ sp[(0)+-1]
  7605  0052BE  0EFF               	movlw	-1
  7606  0052C0  006F FF8C  F046    	movff	plusw1,btemp+11
  7607  0052C6  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7608  0052CC  0E00               	movlw	0
  7609  0052CE  6EE6               	movwf	postinc1,c
  7610  0052D0  0E98               	movlw	(STR_2+9)& (0+255)
  7611  0052D2  6EE6               	movwf	postinc1,c
  7612  0052D4  0E03               	movlw	3
  7613  0052D6  6EE6               	movwf	postinc1,c
  7614  0052D8  EC31  F02B         	call	_printf	;wreg free
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;eadog.c: 178:  start_lcd();
  7618  0052DC  EC5E  F031         	call	_start_lcd	;wreg free
  7619                           
  7620                           ; BSR set to: 59
  7621                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7622  0052E0  52E5               	movf	postdec1,f,c
  7623  0052E2  0012               	return		;funcret
  7624  0052E4                     __end_of_eaDogM_WriteString:
  7625                           	opt callstack 0
  7626                           
  7627 ;; *************** function _eaDogM_WriteCommand *****************
  7628 ;; Defined at:
  7629 ;;		line 143 in file "eadog.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  cmd             1  [STACK] unsigned char 
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1  [STACK] void 
  7636 ;; Registers used:
  7637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7638 ;; Tracked objects:
  7639 ;;		On entry : 3F/3D
  7640 ;;		On exit  : 3F/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7647 ;;Total ram usage:        0 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; Hardware stack levels required when called:   13
  7650 ;; This function calls:
  7651 ;;		_send_lcd_cmd_dma
  7652 ;; This function is called by:
  7653 ;;		_main
  7654 ;; This function uses a reentrant model
  7655 ;;
  7656                           
  7657                           	psect	text29
  7658  00621C                     __ptext29:
  7659                           	opt callstack 0
  7660  00621C                     _eaDogM_WriteCommand:
  7661                           	opt callstack 17
  7662                           
  7663                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  7664                           ;stkvar	_cmd @ sp[(0)+-1]
  7665                           
  7666                           ; BSR set to: 59
  7667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7668                           ;incstack = 0
  7669  00621C  0EFF               	movlw	-1
  7670  00621E  50E3               	movf	plusw1,w,c
  7671  006220  6EE6               	movwf	postinc1,c
  7672  006222  ECEF  F02B         	call	_send_lcd_cmd_dma	;wreg free
  7673                           
  7674                           ; BSR set to: 0
  7675                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  7676  006226  52E5               	movf	postdec1,f,c
  7677  006228  0012               	return		;funcret
  7678  00622A                     __end_of_eaDogM_WriteCommand:
  7679                           	opt callstack 0
  7680                           
  7681 ;; *************** function _send_lcd_cmd_dma *****************
  7682 ;; Defined at:
  7683 ;;		line 187 in file "eadog.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;  strPtr          1  [STACK] unsigned char 
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;		None
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  1  [STACK] void 
  7690 ;; Registers used:
  7691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 3F/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7701 ;;Total ram usage:        0 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; Hardware stack levels required when called:   12
  7704 ;; This function calls:
  7705 ;;		_printf
  7706 ;;		_ringBufS_flush
  7707 ;;		_start_lcd
  7708 ;;		_wait_lcd_done
  7709 ;;		_wait_lcd_set
  7710 ;; This function is called by:
  7711 ;;		_eaDogM_WriteCommand
  7712 ;;		_eaDogM_WriteStringAtPos
  7713 ;; This function uses a reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text30
  7717  0057DE                     __ptext30:
  7718                           	opt callstack 0
  7719  0057DE                     _send_lcd_cmd_dma:
  7720                           	opt callstack 17
  7721                           
  7722                           ;eadog.c: 187: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 188: {;eadog.c: 189:  wait
      +                          _lcd_set();
  7723                           
  7724                           ; BSR set to: 0
  7725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7726                           ;incstack = 0
  7727  0057DE  EC5B  F031         	call	_wait_lcd_set	;wreg free
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;eadog.c: 191:  ringBufS_flush(spi_link.tx1a, 0);
  7731  0057E2  0E00               	movlw	0
  7732  0057E4  6EE6               	movwf	postinc1,c
  7733  0057E6  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
  7734  0057EC  0060  F353  FFE6   	movff	_spi_link+7,postinc1
  7735  0057F2  EC0A  F02A         	call	_ringBufS_flush	;wreg free
  7736  0057F6  92BC               	bcf	16316,1,c	;volatile
  7737  0057F8  94BC               	bcf	16316,2,c	;volatile
  7738                           
  7739                           ;eadog.c: 194:  DMA1CON0bits.EN = 0;
  7740  0057FA  013B               	movlb	59	; () banked
  7741  0057FC  9FFC               	bcf	252,7,b	;volatile
  7742                           
  7743                           ; BSR set to: 59
  7744                           ;eadog.c: 195:  DMA1SSZ = 1;
  7745  0057FE  0E00               	movlw	0
  7746  005800  6FF8               	movwf	248,b	;volatile
  7747  005802  0E01               	movlw	1
  7748  005804  6FF7               	movwf	247,b	;volatile
  7749                           
  7750                           ; BSR set to: 59
  7751                           ;eadog.c: 196:  DMA1CON0bits.EN = 1;
  7752  005806  8FFC               	bsf	252,7,b	;volatile
  7753                           
  7754                           ; BSR set to: 59
  7755                           ;eadog.c: 197:  printf("%c", strPtr);
  7756                           ;stkvar	_strPtr @ sp[(0)+-1]
  7757  005808  0EFF               	movlw	-1
  7758  00580A  50E3               	movf	plusw1,w,c
  7759  00580C  6EE6               	movwf	postinc1,c
  7760  00580E  0E00               	movlw	0
  7761  005810  6EE6               	movwf	postinc1,c
  7762  005812  0EB3               	movlw	STR_17& (0+255)
  7763  005814  6EE6               	movwf	postinc1,c
  7764  005816  0E03               	movlw	3
  7765  005818  6EE6               	movwf	postinc1,c
  7766  00581A  EC31  F02B         	call	_printf	;wreg free
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;eadog.c: 198:  start_lcd();
  7770  00581E  EC5E  F031         	call	_start_lcd	;wreg free
  7771                           
  7772                           ; BSR set to: 59
  7773                           ;eadog.c: 199:  wait_lcd_done();
  7774  005822  EC9D  F030         	call	_wait_lcd_done	;wreg free
  7775                           
  7776                           ; BSR set to: 0
  7777  005826  82BC               	bsf	16316,1,c	;volatile
  7778                           
  7779                           ; BSR set to: 0
  7780                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7781  005828  52E5               	movf	postdec1,f,c
  7782  00582A  0012               	return		;funcret
  7783  00582C                     __end_of_send_lcd_cmd_dma:
  7784                           	opt callstack 0
  7785                           
  7786 ;; *************** function _wait_lcd_set *****************
  7787 ;; Defined at:
  7788 ;;		line 114 in file "eadog.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;		None
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;		None
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  1  [STACK] void 
  7795 ;; Registers used:
  7796 ;;		None
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 3F/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7806 ;;Total ram usage:        0 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; Hardware stack levels required when called:    3
  7809 ;; This function calls:
  7810 ;;		Nothing
  7811 ;; This function is called by:
  7812 ;;		_eaDogM_WriteString
  7813 ;;		_send_lcd_cmd_dma
  7814 ;; This function uses a reentrant model
  7815 ;;
  7816                           
  7817                           	psect	text31
  7818  0062B6                     __ptext31:
  7819                           	opt callstack 0
  7820  0062B6                     _wait_lcd_set:
  7821                           	opt callstack 25
  7822                           
  7823                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  7824                           
  7825                           ; BSR set to: 0
  7826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7827                           ;incstack = 0
  7828  0062B6  0100               	movlb	0	; () banked
  7829  0062B8  87CD               	bsf	_spi_link& (0+255),3,b	;volatile
  7830                           
  7831                           ; BSR set to: 0
  7832                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7833  0062BA  0012               	return		;funcret
  7834  0062BC                     __end_of_wait_lcd_set:
  7835                           	opt callstack 0
  7836                           
  7837 ;; *************** function _wait_lcd_done *****************
  7838 ;; Defined at:
  7839 ;;		line 124 in file "eadog.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;		None
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;		None
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1  [STACK] void 
  7846 ;; Registers used:
  7847 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7848 ;; Tracked objects:
  7849 ;;		On entry : 4/0
  7850 ;;		On exit  : 3F/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7857 ;;Total ram usage:        0 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:    4
  7860 ;; This function calls:
  7861 ;;		_wdtdelay
  7862 ;; This function is called by:
  7863 ;;		_main
  7864 ;;		_send_lcd_cmd_dma
  7865 ;; This function uses a reentrant model
  7866 ;;
  7867                           
  7868                           	psect	text32
  7869  00613A                     __ptext32:
  7870                           	opt callstack 0
  7871  00613A                     _wait_lcd_done:
  7872                           	opt callstack 26
  7873                           
  7874                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  7875                           
  7876                           ; BSR set to: 0
  7877                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7878                           ;incstack = 0
  7879  00613A  0100               	movlb	0	; () banked
  7880  00613C  B7CD               	btfsc	_spi_link& (0+255),3,b	;volatile
  7881  00613E  D7FD               	goto	_wait_lcd_done
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;eadog.c: 127:  wdtdelay(50);
  7885  006140  0E32               	movlw	50
  7886  006142  6EE6               	movwf	postinc1,c
  7887  006144  0E00               	movlw	0
  7888  006146  6EE6               	movwf	postinc1,c
  7889  006148  0E00               	movlw	0
  7890  00614A  6EE6               	movwf	postinc1,c
  7891  00614C  0E00               	movlw	0
  7892  00614E  6EE6               	movwf	postinc1,c
  7893  006150  ECC1  F02B         	call	_wdtdelay	;wreg free
  7894                           
  7895                           ; BSR set to: 0
  7896                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7897  006154  0012               	return		;funcret
  7898  006156                     __end_of_wait_lcd_done:
  7899                           	opt callstack 0
  7900                           
  7901 ;; *************** function _wdtdelay *****************
  7902 ;; Defined at:
  7903 ;;		line 21 in file "eadog.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  delay           4  [STACK] unsigned long 
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;		None
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  1  [STACK] void 
  7910 ;; Registers used:
  7911 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 3F/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7921 ;;Total ram usage:        0 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; Hardware stack levels required when called:    3
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_init_display
  7928 ;;		_send_lcd_cmd
  7929 ;;		_send_lcd_cmd_long
  7930 ;;		_wait_lcd_done
  7931 ;; This function uses a reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text33
  7935  005782                     __ptext33:
  7936                           	opt callstack 0
  7937  005782                     _wdtdelay:
  7938                           	opt callstack 26
  7939                           
  7940                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  7941                           
  7942                           ; BSR set to: 0
  7943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7944                           ;incstack = 0
  7945  005782  0100               	movlb	0	; () banked
  7946  005784  6BEC               	clrf	wdtdelay@dcount& (0+255),b
  7947  005786  6BED               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7948  005788  6BEE               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7949  00578A  6BEF               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7950  00578C  D009               	goto	l5677
  7951  00578E                     l1332:
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;eadog.c: 26:   __nop();
  7955  00578E  F000               	nop	
  7956  005790  0004               	clrwdt		;# 
  7957                           
  7958                           ;eadog.c: 28:  };
  7959  005792  0E01               	movlw	1
  7960  005794  0100               	movlb	0	; () banked
  7961  005796  27EC               	addwf	wdtdelay@dcount& (0+255),f,b
  7962  005798  0E00               	movlw	0
  7963  00579A  23ED               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7964  00579C  23EE               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7965  00579E  23EF               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7966  0057A0                     l5677:
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;stkvar	_delay @ sp[(0)+-4]
  7970  0057A0  0EFC               	movlw	-4
  7971  0057A2  006F FF8C  F03B    	movff	plusw1,btemp
  7972  0057A8  51EC               	movf	wdtdelay@dcount& (0+255),w,b
  7973  0057AA  5C3B               	subwf	btemp,w,c
  7974  0057AC  0EFD               	movlw	-3
  7975  0057AE  006F FF8C  F03B    	movff	plusw1,btemp
  7976  0057B4  51ED               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7977  0057B6  583B               	subwfb	btemp,w,c
  7978  0057B8  0EFE               	movlw	-2
  7979  0057BA  006F FF8C  F03B    	movff	plusw1,btemp
  7980  0057C0  51EE               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7981  0057C2  583B               	subwfb	btemp,w,c
  7982  0057C4  0EFF               	movlw	-1
  7983  0057C6  006F FF8C  F03B    	movff	plusw1,btemp
  7984  0057CC  51EF               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7985  0057CE  583B               	subwfb	btemp,w,c
  7986  0057D0  B0D8               	btfsc	status,0,c
  7987  0057D2  D7DD               	goto	l1332
  7988                           
  7989                           ; BSR set to: 0
  7990                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7991  0057D4  52E5               	movf	postdec1,f,c
  7992  0057D6  52E5               	movf	postdec1,f,c
  7993  0057D8  52E5               	movf	postdec1,f,c
  7994  0057DA  52E5               	movf	postdec1,f,c
  7995  0057DC  0012               	return		;funcret
  7996  0057DE                     __end_of_wdtdelay:
  7997                           	opt callstack 0
  7998                           
  7999 ;; *************** function _start_lcd *****************
  8000 ;; Defined at:
  8001 ;;		line 109 in file "eadog.c"
  8002 ;; Parameters:    Size  Location     Type
  8003 ;;		None
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;		None
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  1  [STACK] void 
  8008 ;; Registers used:
  8009 ;;		None
  8010 ;; Tracked objects:
  8011 ;;		On entry : 3F/0
  8012 ;;		On exit  : 3F/3B
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8019 ;;Total ram usage:        0 bytes
  8020 ;; Hardware stack levels used:    1
  8021 ;; Hardware stack levels required when called:    3
  8022 ;; This function calls:
  8023 ;;		Nothing
  8024 ;; This function is called by:
  8025 ;;		_eaDogM_WriteString
  8026 ;;		_send_lcd_cmd_dma
  8027 ;; This function uses a reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text34
  8031  0062BC                     __ptext34:
  8032                           	opt callstack 0
  8033  0062BC                     _start_lcd:
  8034                           	opt callstack 25
  8035                           
  8036                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  8037                           
  8038                           ; BSR set to: 0
  8039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8040                           ;incstack = 0
  8041  0062BC  013B               	movlb	59	; () banked
  8042  0062BE  8DFC               	bsf	252,6,b	;volatile
  8043                           
  8044                           ; BSR set to: 59
  8045                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8046  0062C0  0012               	return		;funcret
  8047  0062C2                     __end_of_start_lcd:
  8048                           	opt callstack 0
  8049                           
  8050 ;; *************** function _ringBufS_flush *****************
  8051 ;; Defined at:
  8052 ;;		line 76 in file "ringbufs.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8055 ;;		 -> ring_buf1(67), 
  8056 ;;  clearBuffer     1  [STACK] const char 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1  [STACK] void 
  8061 ;; Registers used:
  8062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8063 ;; Tracked objects:
  8064 ;;		On entry : 3F/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8072 ;;Total ram usage:        0 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:    4
  8075 ;; This function calls:
  8076 ;;		_memset
  8077 ;; This function is called by:
  8078 ;;		_eaDogM_WriteString
  8079 ;;		_send_lcd_cmd_dma
  8080 ;; This function uses a reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text35
  8084  005414                     __ptext35:
  8085                           	opt callstack 0
  8086  005414                     _ringBufS_flush:
  8087                           	opt callstack 24
  8088                           
  8089                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  8090                           ;stkvar	__this @ sp[(0)+-2]
  8091                           
  8092                           ; BSR set to: 59
  8093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8094                           ;incstack = 0
  8095  005414  0EFE               	movlw	-2
  8096  005416  006F FF8C  F045    	movff	plusw1,btemp+10
  8097  00541C  0EFF               	movlw	-1
  8098  00541E  006F FF8C  F046    	movff	plusw1,btemp+11
  8099  005424  0E42               	movlw	66
  8100  005426  2445               	addwf	btemp+10,w,c
  8101  005428  6ED9               	movwf	fsr2l,c
  8102  00542A  0E00               	movlw	0
  8103  00542C  2046               	addwfc	btemp+11,w,c
  8104  00542E  6EDA               	movwf	fsr2h,c
  8105  005430  0E00               	movlw	0
  8106  005432  6EDF               	movwf	indf2,c
  8107                           
  8108                           ;ringbufs.c: 79:  _this->head = 0;
  8109                           ;stkvar	__this @ sp[(0)+-2]
  8110  005434  0EFE               	movlw	-2
  8111  005436  006F FF8C  F045    	movff	plusw1,btemp+10
  8112  00543C  0EFF               	movlw	-1
  8113  00543E  006F FF8C  F046    	movff	plusw1,btemp+11
  8114  005444  0E40               	movlw	64
  8115  005446  2445               	addwf	btemp+10,w,c
  8116  005448  6ED9               	movwf	fsr2l,c
  8117  00544A  0E00               	movlw	0
  8118  00544C  2046               	addwfc	btemp+11,w,c
  8119  00544E  6EDA               	movwf	fsr2h,c
  8120  005450  0E00               	movlw	0
  8121  005452  6EDF               	movwf	indf2,c
  8122                           
  8123                           ;ringbufs.c: 80:  _this->tail = 0;
  8124                           ;stkvar	__this @ sp[(0)+-2]
  8125  005454  0EFE               	movlw	-2
  8126  005456  006F FF8C  F045    	movff	plusw1,btemp+10
  8127  00545C  0EFF               	movlw	-1
  8128  00545E  006F FF8C  F046    	movff	plusw1,btemp+11
  8129  005464  0E41               	movlw	65
  8130  005466  2445               	addwf	btemp+10,w,c
  8131  005468  6ED9               	movwf	fsr2l,c
  8132  00546A  0E00               	movlw	0
  8133  00546C  2046               	addwfc	btemp+11,w,c
  8134  00546E  6EDA               	movwf	fsr2h,c
  8135  005470  0E00               	movlw	0
  8136  005472  6EDF               	movwf	indf2,c
  8137                           
  8138                           ;ringbufs.c: 81:  if (clearBuffer) {
  8139                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  8140  005474  0EFD               	movlw	-3
  8141  005476  50E3               	movf	plusw1,w,c
  8142  005478  B4D8               	btfsc	status,2,c
  8143  00547A  D011               	goto	l1468
  8144                           
  8145                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  8146  00547C  0E40               	movlw	64
  8147  00547E  6EE6               	movwf	postinc1,c
  8148  005480  0E00               	movlw	0
  8149  005482  6EE6               	movwf	postinc1,c
  8150  005484  0E00               	movlw	0
  8151  005486  6EE6               	movwf	postinc1,c
  8152  005488  0E00               	movlw	0
  8153  00548A  6EE6               	movwf	postinc1,c
  8154                           
  8155                           ;stkvar	__this @ sp[(-4)+-2]
  8156  00548C  0EFA               	movlw	-6
  8157  00548E  006F FF8F FFE6     	movff	plusw1,postinc1
  8158  005494  006F FF8F FFE6     	movff	plusw1,postinc1
  8159  00549A  EC6B  F01B         	call	_memset	;wreg free
  8160  00549E                     l1468:
  8161                           
  8162                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  8163  00549E  52E5               	movf	postdec1,f,c
  8164  0054A0  52E5               	movf	postdec1,f,c
  8165  0054A2  52E5               	movf	postdec1,f,c
  8166  0054A4  0012               	return		;funcret
  8167  0054A6                     __end_of_ringBufS_flush:
  8168                           	opt callstack 0
  8169                           
  8170 ;; *************** function _memset *****************
  8171 ;; Defined at:
  8172 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  dest            2  [STACK] PTR void 
  8175 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8176 ;;  c               2  [STACK] int 
  8177 ;;  n               2  [STACK] unsigned int 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;  s               2  [STACK] PTR unsigned char 
  8180 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8181 ;;  k               2  [STACK] unsigned int 
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  2  [STACK] PTR void 
  8184 ;; Registers used:
  8185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8195 ;;Total ram usage:        0 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:    3
  8198 ;; This function calls:
  8199 ;;		Nothing
  8200 ;; This function is called by:
  8201 ;;		_ringBufS_init
  8202 ;;		_ringBufS_flush
  8203 ;; This function uses a reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text36
  8207  0036D6                     __ptext36:
  8208                           	opt callstack 0
  8209  0036D6                     _memset:
  8210                           	opt callstack 0
  8211                           
  8212                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8213  0036D6  52E6               	movf	postinc1,f,c
  8214  0036D8  52E6               	movf	postinc1,f,c
  8215  0036DA  52E6               	movf	postinc1,f,c
  8216  0036DC  52E6               	movf	postinc1,f,c
  8217                           
  8218                           ;stkvar	_dest @ sp[(-4)+-2]
  8219                           
  8220                           ;incstack = 0
  8221  0036DE  0EFA               	movlw	-6
  8222  0036E0  006F FF8C  F045    	movff	plusw1,btemp+10
  8223  0036E6  0EFB               	movlw	-5
  8224  0036E8  006F FF8C  F046    	movff	plusw1,btemp+11
  8225                           
  8226                           ;stkvar	_s @ sp[(-4)+0]
  8227  0036EE  0EFD               	movlw	-3
  8228  0036F0  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8229  0036F6  0EFC               	movlw	-4
  8230  0036F8  0060  F117  FFE3   	movff	btemp+10,plusw1
  8231                           
  8232                           ;stkvar	_n @ sp[(-4)+-6]
  8233  0036FE  0EF6               	movlw	-10
  8234  003700  006F FF8C  F03B    	movff	plusw1,btemp
  8235  003706  0EF7               	movlw	-9
  8236  003708  50E3               	movf	plusw1,w,c
  8237  00370A  103B               	iorwf	btemp,w,c
  8238  00370C  B4D8               	btfsc	status,2,c
  8239  00370E  D154               	goto	u4900
  8240                           
  8241                           ;stkvar	_c @ sp[(-4)+-4]
  8242                           ;stkvar	_s @ sp[(-4)+0]
  8243  003710  0EFC               	movlw	-4
  8244  003712  006F FF8F FFD9     	movff	plusw1,fsr2l
  8245  003718  0EFD               	movlw	-3
  8246  00371A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8247  003720  0EF8               	movlw	-8
  8248  003722  006F FF8F FFDF     	movff	plusw1,indf2
  8249                           
  8250                           ;stkvar	_c @ sp[(-4)+-4]
  8251                           ;stkvar	_n @ sp[(-4)+-6]
  8252                           ;stkvar	_s @ sp[(-4)+0]
  8253  003728  0EFC               	movlw	-4
  8254  00372A  006F FF8C  F045    	movff	plusw1,btemp+10
  8255  003730  0EFD               	movlw	-3
  8256  003732  006F FF8C  F046    	movff	plusw1,btemp+11
  8257  003738  0EF6               	movlw	-10
  8258  00373A  50E3               	movf	plusw1,w,c
  8259  00373C  2645               	addwf	btemp+10,f,c
  8260  00373E  0EF7               	movlw	-9
  8261  003740  50E3               	movf	plusw1,w,c
  8262  003742  2246               	addwfc	btemp+11,f,c
  8263  003744  0EFF               	movlw	255
  8264  003746  2445               	addwf	btemp+10,w,c
  8265  003748  6ED9               	movwf	fsr2l,c
  8266  00374A  0EFF               	movlw	255
  8267  00374C  2046               	addwfc	btemp+11,w,c
  8268  00374E  6EDA               	movwf	fsr2h,c
  8269  003750  0EF8               	movlw	-8
  8270  003752  006F FF8F FFDF     	movff	plusw1,indf2
  8271                           
  8272                           ;stkvar	_n @ sp[(-4)+-6]
  8273  003758  0EF7               	movlw	-9
  8274  00375A  50E3               	movf	plusw1,w,c
  8275  00375C  E108               	bnz	l7901
  8276  00375E  0EF6               	movlw	-10
  8277  003760  006F FF8C  F03B    	movff	plusw1,btemp
  8278  003766  0E03               	movlw	3
  8279  003768  5E3B               	subwf	btemp,f,c
  8280  00376A  A0D8               	btfss	status,0,c
  8281  00376C  D125               	goto	u4900
  8282  00376E                     l7901:
  8283                           
  8284                           ;stkvar	_c @ sp[(-4)+-4]
  8285                           ;stkvar	_s @ sp[(-4)+0]
  8286  00376E  0EFC               	movlw	-4
  8287  003770  006F FF8C  F045    	movff	plusw1,btemp+10
  8288  003776  0EFD               	movlw	-3
  8289  003778  006F FF8C  F046    	movff	plusw1,btemp+11
  8290  00377E  0E01               	movlw	1
  8291  003780  2445               	addwf	btemp+10,w,c
  8292  003782  6ED9               	movwf	fsr2l,c
  8293  003784  0E00               	movlw	0
  8294  003786  2046               	addwfc	btemp+11,w,c
  8295  003788  6EDA               	movwf	fsr2h,c
  8296  00378A  0EF8               	movlw	-8
  8297  00378C  006F FF8F FFDF     	movff	plusw1,indf2
  8298                           
  8299                           ;stkvar	_c @ sp[(-4)+-4]
  8300                           ;stkvar	_s @ sp[(-4)+0]
  8301  003792  0EFC               	movlw	-4
  8302  003794  006F FF8C  F045    	movff	plusw1,btemp+10
  8303  00379A  0EFD               	movlw	-3
  8304  00379C  006F FF8C  F046    	movff	plusw1,btemp+11
  8305  0037A2  0E02               	movlw	2
  8306  0037A4  2445               	addwf	btemp+10,w,c
  8307  0037A6  6ED9               	movwf	fsr2l,c
  8308  0037A8  0E00               	movlw	0
  8309  0037AA  2046               	addwfc	btemp+11,w,c
  8310  0037AC  6EDA               	movwf	fsr2h,c
  8311  0037AE  0EF8               	movlw	-8
  8312  0037B0  006F FF8F FFDF     	movff	plusw1,indf2
  8313                           
  8314                           ;stkvar	_c @ sp[(-4)+-4]
  8315                           ;stkvar	_n @ sp[(-4)+-6]
  8316                           ;stkvar	_s @ sp[(-4)+0]
  8317  0037B6  0EFC               	movlw	-4
  8318  0037B8  006F FF8C  F045    	movff	plusw1,btemp+10
  8319  0037BE  0EFD               	movlw	-3
  8320  0037C0  006F FF8C  F046    	movff	plusw1,btemp+11
  8321  0037C6  0EF6               	movlw	-10
  8322  0037C8  50E3               	movf	plusw1,w,c
  8323  0037CA  2645               	addwf	btemp+10,f,c
  8324  0037CC  0EF7               	movlw	-9
  8325  0037CE  50E3               	movf	plusw1,w,c
  8326  0037D0  2246               	addwfc	btemp+11,f,c
  8327  0037D2  0EFE               	movlw	254
  8328  0037D4  2445               	addwf	btemp+10,w,c
  8329  0037D6  6ED9               	movwf	fsr2l,c
  8330  0037D8  0EFF               	movlw	255
  8331  0037DA  2046               	addwfc	btemp+11,w,c
  8332  0037DC  6EDA               	movwf	fsr2h,c
  8333  0037DE  0EF8               	movlw	-8
  8334  0037E0  006F FF8F FFDF     	movff	plusw1,indf2
  8335                           
  8336                           ;stkvar	_c @ sp[(-4)+-4]
  8337                           ;stkvar	_n @ sp[(-4)+-6]
  8338                           ;stkvar	_s @ sp[(-4)+0]
  8339  0037E6  0EFC               	movlw	-4
  8340  0037E8  006F FF8C  F045    	movff	plusw1,btemp+10
  8341  0037EE  0EFD               	movlw	-3
  8342  0037F0  006F FF8C  F046    	movff	plusw1,btemp+11
  8343  0037F6  0EF6               	movlw	-10
  8344  0037F8  50E3               	movf	plusw1,w,c
  8345  0037FA  2645               	addwf	btemp+10,f,c
  8346  0037FC  0EF7               	movlw	-9
  8347  0037FE  50E3               	movf	plusw1,w,c
  8348  003800  2246               	addwfc	btemp+11,f,c
  8349  003802  0EFD               	movlw	253
  8350  003804  2445               	addwf	btemp+10,w,c
  8351  003806  6ED9               	movwf	fsr2l,c
  8352  003808  0EFF               	movlw	255
  8353  00380A  2046               	addwfc	btemp+11,w,c
  8354  00380C  6EDA               	movwf	fsr2h,c
  8355  00380E  0EF8               	movlw	-8
  8356  003810  006F FF8F FFDF     	movff	plusw1,indf2
  8357                           
  8358                           ;stkvar	_n @ sp[(-4)+-6]
  8359  003816  0EF7               	movlw	-9
  8360  003818  50E3               	movf	plusw1,w,c
  8361  00381A  E108               	bnz	l7907
  8362  00381C  0EF6               	movlw	-10
  8363  00381E  006F FF8C  F03B    	movff	plusw1,btemp
  8364  003824  0E07               	movlw	7
  8365  003826  5E3B               	subwf	btemp,f,c
  8366  003828  A0D8               	btfss	status,0,c
  8367  00382A  D0C6               	goto	u4900
  8368  00382C                     l7907:
  8369                           
  8370                           ;stkvar	_c @ sp[(-4)+-4]
  8371                           ;stkvar	_s @ sp[(-4)+0]
  8372  00382C  0EFC               	movlw	-4
  8373  00382E  006F FF8C  F045    	movff	plusw1,btemp+10
  8374  003834  0EFD               	movlw	-3
  8375  003836  006F FF8C  F046    	movff	plusw1,btemp+11
  8376  00383C  0E03               	movlw	3
  8377  00383E  2445               	addwf	btemp+10,w,c
  8378  003840  6ED9               	movwf	fsr2l,c
  8379  003842  0E00               	movlw	0
  8380  003844  2046               	addwfc	btemp+11,w,c
  8381  003846  6EDA               	movwf	fsr2h,c
  8382  003848  0EF8               	movlw	-8
  8383  00384A  006F FF8F FFDF     	movff	plusw1,indf2
  8384                           
  8385                           ;stkvar	_c @ sp[(-4)+-4]
  8386                           ;stkvar	_n @ sp[(-4)+-6]
  8387                           ;stkvar	_s @ sp[(-4)+0]
  8388  003850  0EFC               	movlw	-4
  8389  003852  006F FF8C  F045    	movff	plusw1,btemp+10
  8390  003858  0EFD               	movlw	-3
  8391  00385A  006F FF8C  F046    	movff	plusw1,btemp+11
  8392  003860  0EF6               	movlw	-10
  8393  003862  50E3               	movf	plusw1,w,c
  8394  003864  2645               	addwf	btemp+10,f,c
  8395  003866  0EF7               	movlw	-9
  8396  003868  50E3               	movf	plusw1,w,c
  8397  00386A  2246               	addwfc	btemp+11,f,c
  8398  00386C  0EFC               	movlw	252
  8399  00386E  2445               	addwf	btemp+10,w,c
  8400  003870  6ED9               	movwf	fsr2l,c
  8401  003872  0EFF               	movlw	255
  8402  003874  2046               	addwfc	btemp+11,w,c
  8403  003876  6EDA               	movwf	fsr2h,c
  8404  003878  0EF8               	movlw	-8
  8405  00387A  006F FF8F FFDF     	movff	plusw1,indf2
  8406                           
  8407                           ;stkvar	_n @ sp[(-4)+-6]
  8408  003880  0EF7               	movlw	-9
  8409  003882  50E3               	movf	plusw1,w,c
  8410  003884  E108               	bnz	l7913
  8411  003886  0EF6               	movlw	-10
  8412  003888  006F FF8C  F03B    	movff	plusw1,btemp
  8413  00388E  0E09               	movlw	9
  8414  003890  5E3B               	subwf	btemp,f,c
  8415  003892  A0D8               	btfss	status,0,c
  8416  003894  D091               	goto	u4900
  8417  003896                     l7913:
  8418                           
  8419                           ;stkvar	_s @ sp[(-4)+0]
  8420  003896  0EFC               	movlw	-4
  8421  003898  006F FF8C  F045    	movff	plusw1,btemp+10
  8422  00389E  1E45               	comf	btemp+10,f,c
  8423  0038A0  0EFD               	movlw	-3
  8424  0038A2  006F FF8C  F046    	movff	plusw1,btemp+11
  8425  0038A8  1E46               	comf	btemp+11,f,c
  8426  0038AA  2A45               	incf	btemp+10,f,c
  8427  0038AC  B4D8               	btfsc	status,2,c
  8428  0038AE  2A46               	incf	btemp+11,f,c
  8429  0038B0  0E03               	movlw	3
  8430  0038B2  1645               	andwf	btemp+10,f,c
  8431  0038B4  0E00               	movlw	0
  8432  0038B6  1646               	andwf	btemp+11,f,c
  8433                           
  8434                           ;stkvar	_k @ sp[(-4)+2]
  8435  0038B8  0EFE               	movlw	-2
  8436  0038BA  0060  F117  FFE3   	movff	btemp+10,plusw1
  8437  0038C0  0EFF               	movlw	-1
  8438  0038C2  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8439                           
  8440                           ;stkvar	_k @ sp[(-4)+2]
  8441                           ;stkvar	_s @ sp[(-4)+0]
  8442  0038C8  0EFC               	movlw	-4
  8443  0038CA  50E3               	movf	plusw1,w,c
  8444  0038CC  6E3B               	movwf	btemp,c
  8445  0038CE  0EFE               	movlw	-2
  8446  0038D0  50E3               	movf	plusw1,w,c
  8447  0038D2  263B               	addwf	btemp,f,c
  8448  0038D4  0EFC               	movlw	-4
  8449  0038D6  0060  F0EF  FFE3   	movff	btemp,plusw1
  8450  0038DC  0EFD               	movlw	-3
  8451  0038DE  50E3               	movf	plusw1,w,c
  8452  0038E0  6E3B               	movwf	btemp,c
  8453  0038E2  0EFF               	movlw	-1
  8454  0038E4  50E3               	movf	plusw1,w,c
  8455  0038E6  223B               	addwfc	btemp,f,c
  8456  0038E8  0EFD               	movlw	-3
  8457  0038EA  0060  F0EF  FFE3   	movff	btemp,plusw1
  8458                           
  8459                           ;stkvar	_k @ sp[(-4)+2]
  8460                           ;stkvar	_n @ sp[(-4)+-6]
  8461  0038F0  0EF6               	movlw	-10
  8462  0038F2  50E3               	movf	plusw1,w,c
  8463  0038F4  6E3B               	movwf	btemp,c
  8464  0038F6  0EFE               	movlw	-2
  8465  0038F8  50E3               	movf	plusw1,w,c
  8466  0038FA  5E3B               	subwf	btemp,f,c
  8467  0038FC  0EF6               	movlw	-10
  8468  0038FE  0060  F0EF  FFE3   	movff	btemp,plusw1
  8469  003904  0EF7               	movlw	-9
  8470  003906  50E3               	movf	plusw1,w,c
  8471  003908  6E3B               	movwf	btemp,c
  8472  00390A  0EFF               	movlw	-1
  8473  00390C  50E3               	movf	plusw1,w,c
  8474  00390E  5A3B               	subwfb	btemp,f,c
  8475  003910  0EF7               	movlw	-9
  8476  003912  0060  F0EF  FFE3   	movff	btemp,plusw1
  8477  003918  0EFC               	movlw	252
  8478  00391A  6E45               	movwf	btemp+10,c
  8479  00391C  0EFF               	movlw	255
  8480  00391E  6E46               	movwf	btemp+11,c
  8481                           
  8482                           ;stkvar	_n @ sp[(-4)+-6]
  8483  003920  0EF6               	movlw	-10
  8484  003922  006F FF8C  F03B    	movff	plusw1,btemp
  8485  003928  5045               	movf	btemp+10,w,c
  8486  00392A  163B               	andwf	btemp,f,c
  8487  00392C  0EF6               	movlw	-10
  8488  00392E  0060  F0EF  FFE3   	movff	btemp,plusw1
  8489  003934  0EF7               	movlw	-9
  8490  003936  006F FF8C  F03B    	movff	plusw1,btemp
  8491  00393C  5046               	movf	btemp+11,w,c
  8492  00393E  163B               	andwf	btemp,f,c
  8493  003940  0EF7               	movlw	-9
  8494  003942  D02E               	goto	L19
  8495  003944                     l7921:
  8496                           
  8497                           ;stkvar	_c @ sp[(-4)+-4]
  8498                           ;stkvar	_s @ sp[(-4)+0]
  8499  003944  0EFC               	movlw	-4
  8500  003946  006F FF8F FFD9     	movff	plusw1,fsr2l
  8501  00394C  0EFD               	movlw	-3
  8502  00394E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8503  003954  0EF8               	movlw	-8
  8504  003956  006F FF8F FFDF     	movff	plusw1,indf2
  8505                           
  8506                           ;stkvar	_n @ sp[(-4)+-6]
  8507  00395C  0EF6               	movlw	-10
  8508  00395E  006F FF8C  F03B    	movff	plusw1,btemp
  8509  003964  0E01               	movlw	1
  8510  003966  5E3B               	subwf	btemp,f,c
  8511  003968  0EF6               	movlw	-10
  8512  00396A  0060  F0EF  FFE3   	movff	btemp,plusw1
  8513  003970  0EF7               	movlw	-9
  8514  003972  006F FF8C  F03B    	movff	plusw1,btemp
  8515  003978  0E00               	movlw	0
  8516  00397A  5A3B               	subwfb	btemp,f,c
  8517  00397C  0EF7               	movlw	-9
  8518  00397E  0060  F0EF  FFE3   	movff	btemp,plusw1
  8519                           
  8520                           ;stkvar	_s @ sp[(-4)+0]
  8521  003984  0EFC               	movlw	-4
  8522  003986  50E3               	movf	plusw1,w,c
  8523  003988  0F01               	addlw	1
  8524  00398A  6E3B               	movwf	btemp,c
  8525  00398C  0EFC               	movlw	-4
  8526  00398E  0060  F0EF  FFE3   	movff	btemp,plusw1
  8527  003994  6A3B               	clrf	btemp,c
  8528  003996  0EFD               	movlw	-3
  8529  003998  50E3               	movf	plusw1,w,c
  8530  00399A  203B               	addwfc	btemp,w,c
  8531  00399C  6E3B               	movwf	btemp,c
  8532  00399E  0EFD               	movlw	-3
  8533  0039A0                     L19:
  8534  0039A0  0060  F0EF  FFE3   	movff	btemp,plusw1
  8535                           
  8536                           ;stkvar	_n @ sp[(-4)+-6]
  8537  0039A6  0EF6               	movlw	-10
  8538  0039A8  006F FF8C  F03B    	movff	plusw1,btemp
  8539  0039AE  0EF7               	movlw	-9
  8540  0039B0  50E3               	movf	plusw1,w,c
  8541  0039B2  103B               	iorwf	btemp,w,c
  8542  0039B4  A4D8               	btfss	status,2,c
  8543  0039B6  D7C6               	goto	l7921
  8544  0039B8                     u4900:
  8545                           
  8546                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8547  0039B8  0EF6               	movlw	246
  8548  0039BA  26E1               	addwf	fsr1l,f,c
  8549  0039BC  0EFF               	movlw	255
  8550  0039BE  22E2               	addwfc	fsr1h,f,c
  8551  0039C0  0012               	return		;funcret
  8552  0039C2                     __end_of_memset:
  8553                           	opt callstack 0
  8554                           
  8555 ;; *************** function _printf *****************
  8556 ;; Defined at:
  8557 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  fmt             1  [STACK] PTR const unsigned char 
  8560 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;  ap              2  [STACK] PTR void [1]
  8563 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8564 ;;  ret             2    0        int 
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  2  [STACK] int 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8569 ;; Tracked objects:
  8570 ;;		On entry : 3F/3B
  8571 ;;		On exit  : 3F/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8578 ;;Total ram usage:        0 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:   11
  8581 ;; This function calls:
  8582 ;;		_vfprintf
  8583 ;; This function is called by:
  8584 ;;		_eaDogM_WriteString
  8585 ;;		_send_lcd_cmd_dma
  8586 ;; This function uses a reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text37
  8590  005662                     __ptext37:
  8591                           	opt callstack 0
  8592  005662                     _printf:
  8593                           	opt callstack 0
  8594                           
  8595                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8596  005662  52E6               	movf	postinc1,f,c
  8597  005664  52E6               	movf	postinc1,f,c
  8598                           
  8599                           ;stkvar	?_printf @ sp[(-2)+-3]
  8600                           
  8601                           ;incstack = 0
  8602  005666  0EFB               	movlw	251
  8603  005668  24E1               	addwf	fsr1l,w,c
  8604  00566A  6E45               	movwf	btemp+10,c
  8605  00566C  0EFF               	movlw	255
  8606  00566E  20E2               	addwfc	fsr1h,w,c
  8607  005670  6E46               	movwf	btemp+11,c
  8608  005672  0E01               	movlw	1
  8609  005674  2645               	addwf	btemp+10,f,c
  8610  005676  0E00               	movlw	0
  8611  005678  2246               	addwfc	btemp+11,f,c
  8612                           
  8613                           ;stkvar	_ap @ sp[(-2)+0]
  8614  00567A  0EFF               	movlw	-1
  8615  00567C  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8616  005682  0EFE               	movlw	-2
  8617  005684  0060  F117  FFE3   	movff	btemp+10,plusw1
  8618                           
  8619                           ;stkvar	_ap @ sp[(-2)+0]
  8620  00568A  0EFE               	movlw	254
  8621  00568C  24E1               	addwf	fsr1l,w,c
  8622  00568E  6E3B               	movwf	btemp,c
  8623  005690  0EFF               	movlw	255
  8624  005692  20E2               	addwfc	fsr1h,w,c
  8625  005694  6E3C               	movwf	btemp+1,c
  8626  005696  0060  F0EF  FFE6   	movff	btemp,postinc1
  8627  00569C  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  8628                           
  8629                           ;stkvar	_fmt @ sp[(-4)+-2]
  8630  0056A2  0EFA               	movlw	-6
  8631  0056A4  50E3               	movf	plusw1,w,c
  8632  0056A6  6EE6               	movwf	postinc1,c
  8633  0056A8  0E00               	movlw	0
  8634  0056AA  6EE6               	movwf	postinc1,c
  8635  0056AC  0E00               	movlw	0
  8636  0056AE  6EE6               	movwf	postinc1,c
  8637  0056B0  EC72  F029         	call	_vfprintf	;wreg free
  8638                           
  8639                           ; BSR set to: 0
  8640                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  8641  0056B4  52E5               	movf	postdec1,f,c
  8642  0056B6  52E5               	movf	postdec1,f,c
  8643  0056B8  52E5               	movf	postdec1,f,c
  8644  0056BA  50E7               	movf	indf1,w,c
  8645  0056BC  5EE1               	subwf	fsr1l,f,c
  8646  0056BE  0E00               	movlw	0
  8647  0056C0  5AE2               	subwfb	fsr1h,f,c
  8648  0056C2  0012               	return		;funcret
  8649  0056C4                     __end_of_printf:
  8650                           	opt callstack 0
  8651                           
  8652 ;; *************** function _vfprintf *****************
  8653 ;; Defined at:
  8654 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8655 ;; Parameters:    Size  Location     Type
  8656 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8657 ;;		 -> f(5), NULL(0), 
  8658 ;;  fmt             1  [STACK] PTR const unsigned char 
  8659 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8660 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  8661 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8662 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8663 ;;		 -> STR_1(17), 
  8664 ;;  ap              2  [STACK] PTR PTR void 
  8665 ;;		 -> ap(2), ap(2), 
  8666 ;; Auto vars:     Size  Location     Type
  8667 ;;  cfmt            1  [STACK] PTR unsigned char 
  8668 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8669 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  8670 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8671 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8672 ;;		 -> STR_1(17), 
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  2  [STACK] int 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 3F/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8686 ;;Total ram usage:        0 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:   10
  8689 ;; This function calls:
  8690 ;;		_vfpfcnvrt
  8691 ;; This function is called by:
  8692 ;;		_sprintf
  8693 ;;		_printf
  8694 ;; This function uses a reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text38
  8698  0052E4                     __ptext38:
  8699                           	opt callstack 0
  8700  0052E4                     _vfprintf:
  8701                           	opt callstack 0
  8702                           
  8703                           ; BSR set to: 0
  8704                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8705  0052E4  52E6               	movf	postinc1,f,c
  8706                           
  8707                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8708                           ;stkvar	_fmt @ sp[(-1)+-3]
  8709                           
  8710                           ;incstack = 0
  8711  0052E6  0EFC               	movlw	-4
  8712  0052E8  006F FF8C  F046    	movff	plusw1,btemp+11
  8713                           
  8714                           ;stkvar	_cfmt @ sp[(-1)+0]
  8715  0052EE  0EFF               	movlw	-1
  8716  0052F0  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8717                           
  8718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8719  0052F6  0100               	movlb	0	; () banked
  8720  0052F8  6BF6               	clrf	_nout& (0+255),b
  8721  0052FA  6BF7               	clrf	(_nout+1)& (0+255),b
  8722                           
  8723                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8724  0052FC  D021               	goto	l7935
  8725  0052FE                     l7933:
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8729                           ;stkvar	_ap @ sp[(-1)+-5]
  8730  0052FE  0EFA               	movlw	-6
  8731  005300  006F FF8F FFE6     	movff	plusw1,postinc1
  8732  005306  006F FF8F FFE6     	movff	plusw1,postinc1
  8733                           
  8734                           ;stkvar	_cfmt @ sp[(-3)+0]
  8735  00530C  0EFD               	movlw	253
  8736  00530E  24E1               	addwf	fsr1l,w,c
  8737  005310  6E3B               	movwf	btemp,c
  8738  005312  0EFF               	movlw	255
  8739  005314  20E2               	addwfc	fsr1h,w,c
  8740  005316  6E3C               	movwf	btemp+1,c
  8741  005318  0060  F0EF  FFE6   	movff	btemp,postinc1
  8742  00531E  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  8743                           
  8744                           ;stkvar	_fp @ sp[(-5)+-2]
  8745  005324  0EF9               	movlw	-7
  8746  005326  006F FF8F FFE6     	movff	plusw1,postinc1
  8747  00532C  006F FF8F FFE6     	movff	plusw1,postinc1
  8748  005332  EC51  F015         	call	_vfpfcnvrt	;wreg free
  8749  005336  503B               	movf	btemp,w,c
  8750  005338  0100               	movlb	0	; () banked
  8751  00533A  27F6               	addwf	_nout& (0+255),f,b
  8752  00533C  503C               	movf	btemp+1,w,c
  8753  00533E  23F7               	addwfc	(_nout+1)& (0+255),f,b
  8754  005340                     l7935:
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8758                           ;stkvar	_cfmt @ sp[(-1)+0]
  8759  005340  50E1               	movf	fsr1l,w,c
  8760  005342  0FFF               	addlw	-1
  8761  005344  6ED9               	movwf	fsr2l,c
  8762  005346  50E2               	movf	fsr1h,w,c
  8763  005348  6EDA               	movwf	fsr2h,c
  8764  00534A  0EFF               	movlw	255
  8765  00534C  22DA               	addwfc	fsr2h,f,c
  8766  00534E  006F FF7F FFF6     	movff	indf2,tblptrl
  8767  005354                     	if	1	;There is more than 1 active tblptr byte
  8768  005354  0E20               	movlw	high __smallconst
  8769  005356  6EF7               	movwf	tblptrh,c
  8770  005358                     	endif
  8771  005358                     	if	0	;tblptru may be non-zero
  8772  005358                     	endif
  8773  005358                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8774  005358  0E00               	movlw	low (__smallconst shr (0+16))
  8775  00535A  6EF8               	movwf	tblptru,c
  8776  00535C                     	endif
  8777  00535C  0008               	tblrd		*
  8778  00535E  50F5               	movf	tablat,w,c
  8779  005360  0900               	iorlw	0
  8780  005362  A4D8               	btfss	status,2,c
  8781  005364  D7CC               	goto	l7933
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8785  005366  0060  F3D8  F03B   	movff	_nout,btemp
  8786  00536C  0060  F3DC  F03C   	movff	_nout+1,btemp+1
  8787                           
  8788                           ; BSR set to: 0
  8789                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  8790  005372  0EFA               	movlw	250
  8791  005374  26E1               	addwf	fsr1l,f,c
  8792  005376  0EFF               	movlw	255
  8793  005378  22E2               	addwfc	fsr1h,f,c
  8794  00537A  0012               	return		;funcret
  8795  00537C                     __end_of_vfprintf:
  8796                           	opt callstack 0
  8797                           
  8798 ;; *************** function _vfpfcnvrt *****************
  8799 ;; Defined at:
  8800 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8803 ;;		 -> f(5), NULL(0), 
  8804 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8805 ;;		 -> cfmt(1), 
  8806 ;;  ap              2  [STACK] PTR PTR void 
  8807 ;;		 -> ap(2), ap(2), 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  ll              8  [STACK] long long 
  8810 ;;  llu             8    0        unsigned long long 
  8811 ;;  f               4    0        unsigned long long 
  8812 ;;  vp              3    0        PTR void 
  8813 ;;  ct              3    0        unsigned char [3]
  8814 ;;  cp              2  [STACK] PTR unsigned char 
  8815 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(89), 
  8816 ;;  i               2    0        int 
  8817 ;;  done            2    0        int 
  8818 ;;  c               1  [STACK] unsigned char 
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  2  [STACK] int 
  8821 ;; Registers used:
  8822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8832 ;;Total ram usage:        0 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; Hardware stack levels required when called:    9
  8835 ;; This function calls:
  8836 ;;		_ctoa
  8837 ;;		_dtoa
  8838 ;;		_fputc
  8839 ;;		_stoa
  8840 ;;		_strncmp
  8841 ;; This function is called by:
  8842 ;;		_vfprintf
  8843 ;; This function uses a reentrant model
  8844 ;;
  8845                           
  8846                           	psect	text39
  8847  002AA2                     __ptext39:
  8848                           	opt callstack 0
  8849  002AA2                     _vfpfcnvrt:
  8850                           	opt callstack 0
  8851                           
  8852                           ; BSR set to: 0
  8853                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8854  002AA2  0E0B               	movlw	11
  8855  002AA4  26E1               	addwf	fsr1l,f,c
  8856  002AA6  0E00               	movlw	0
  8857  002AA8  22E2               	addwfc	fsr1h,f,c
  8858                           
  8859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8860                           ;stkvar	_fmt @ sp[(-11)+-4]
  8861                           
  8862                           ;incstack = 0
  8863  002AAA  0EF1               	movlw	-15
  8864  002AAC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8865  002AB2  0EF2               	movlw	-14
  8866  002AB4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8867  002ABA  006F FF7F FFF6     	movff	indf2,tblptrl
  8868  002AC0                     	if	1	;There is more than 1 active tblptr byte
  8869  002AC0  0E20               	movlw	high __smallconst
  8870  002AC2  6EF7               	movwf	tblptrh,c
  8871  002AC4                     	endif
  8872  002AC4                     	if	0	;tblptru may be non-zero
  8873  002AC4                     	endif
  8874  002AC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8875  002AC4  0E00               	movlw	low (__smallconst shr (0+16))
  8876  002AC6  6EF8               	movwf	tblptru,c
  8877  002AC8                     	endif
  8878  002AC8  0008               	tblrd		*
  8879  002ACA  50F5               	movf	tablat,w,c
  8880  002ACC  0A25               	xorlw	37
  8881  002ACE  A4D8               	btfss	status,2,c
  8882  002AD0  D213               	goto	l7879
  8883                           
  8884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8885                           ;stkvar	_fmt @ sp[(-11)+-4]
  8886  002AD2  0EF1               	movlw	-15
  8887  002AD4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8888  002ADA  0EF2               	movlw	-14
  8889  002ADC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8890  002AE2  2ADF               	incf	indf2,f,c
  8891                           
  8892                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8893  002AE4  6A20               	clrf	_width,c
  8894  002AE6  6A21               	clrf	_width+1,c
  8895  002AE8  6A24               	clrf	_flags,c
  8896  002AEA  6A25               	clrf	_flags+1,c
  8897                           
  8898                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8899  002AEC  6822               	setf	_prec,c
  8900  002AEE  6823               	setf	_prec+1,c
  8901                           
  8902                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8903                           ;stkvar	_fmt @ sp[(-11)+-4]
  8904  002AF0  0EF1               	movlw	-15
  8905  002AF2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8906  002AF8  0EF2               	movlw	-14
  8907  002AFA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8908  002B00  006F FF7F FFF6     	movff	indf2,tblptrl
  8909  002B06                     	if	1	;There is more than 1 active tblptr byte
  8910  002B06  0E20               	movlw	high __smallconst
  8911  002B08  6EF7               	movwf	tblptrh,c
  8912  002B0A                     	endif
  8913  002B0A                     	if	0	;tblptru may be non-zero
  8914  002B0A                     	endif
  8915  002B0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8916  002B0A  0E00               	movlw	low (__smallconst shr (0+16))
  8917  002B0C  6EF8               	movwf	tblptru,c
  8918  002B0E                     	endif
  8919  002B0E  0008               	tblrd		*
  8920  002B10  50F5               	movf	tablat,w,c
  8921  002B12  0A63               	xorlw	99
  8922  002B14  A4D8               	btfss	status,2,c
  8923  002B16  D034               	goto	l7829
  8924                           
  8925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8926                           ;stkvar	_fmt @ sp[(-11)+-4]
  8927  002B18  0EF1               	movlw	-15
  8928  002B1A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8929  002B20  0EF2               	movlw	-14
  8930  002B22  006F FF8F FFDA     	movff	plusw1,fsr2h
  8931  002B28  2ADF               	incf	indf2,f,c
  8932                           
  8933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8934                           ;stkvar	_ap @ sp[(-11)+-6]
  8935  002B2A  0EEF               	movlw	-17
  8936  002B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8937  002B32  0EF0               	movlw	-16
  8938  002B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8939  002B3A  0E02               	movlw	2
  8940  002B3C  5EDE               	subwf	postinc2,f,c
  8941  002B3E  0E00               	movlw	0
  8942  002B40  5ADD               	subwfb	postdec2,f,c
  8943  002B42  006F FF78  F045    	movff	postinc2,btemp+10
  8944  002B48  006F FF74  F046    	movff	postdec2,btemp+11
  8945  002B4E  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8946  002B54  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8947  002B5A  50DF               	movf	indf2,w,c
  8948  002B5C  6E46               	movwf	btemp+11,c
  8949                           
  8950                           ;stkvar	_c @ sp[(-11)+10]
  8951  002B5E  0EFF               	movlw	-1
  8952  002B60  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8953                           
  8954                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8955                           ;stkvar	_c @ sp[(-11)+10]
  8956  002B66  0EFF               	movlw	-1
  8957  002B68  50E3               	movf	plusw1,w,c
  8958  002B6A  6EE6               	movwf	postinc1,c
  8959                           
  8960                           ;stkvar	_fp @ sp[(-12)+-2]
  8961  002B6C  0EF2               	movlw	-14
  8962  002B6E  006F FF8F FFE6     	movff	plusw1,postinc1
  8963  002B74  006F FF8F FFE6     	movff	plusw1,postinc1
  8964  002B7A  EC53  F02A         	call	_ctoa	;wreg free
  8965  002B7E  D1E3               	goto	l1851
  8966  002B80                     l7829:
  8967                           
  8968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8969                           ;stkvar	_fmt @ sp[(-11)+-4]
  8970  002B80  0EF1               	movlw	-15
  8971  002B82  006F FF8F FFD9     	movff	plusw1,fsr2l
  8972  002B88  0EF2               	movlw	-14
  8973  002B8A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8974  002B90  006F FF7F FFF6     	movff	indf2,tblptrl
  8975  002B96                     	if	1	;There is more than 1 active tblptr byte
  8976  002B96  0E20               	movlw	high __smallconst
  8977  002B98  6EF7               	movwf	tblptrh,c
  8978  002B9A                     	endif
  8979  002B9A                     	if	0	;tblptru may be non-zero
  8980  002B9A                     	endif
  8981  002B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8982  002B9A  0E00               	movlw	low (__smallconst shr (0+16))
  8983  002B9C  6EF8               	movwf	tblptru,c
  8984  002B9E                     	endif
  8985  002B9E  0008               	tblrd		*
  8986  002BA0  50F5               	movf	tablat,w,c
  8987  002BA2  0A64               	xorlw	100
  8988  002BA4  B4D8               	btfsc	status,2,c
  8989  002BA6  D014               	goto	u4810
  8990                           
  8991                           ;stkvar	_fmt @ sp[(-11)+-4]
  8992  002BA8  0EF1               	movlw	-15
  8993  002BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8994  002BB0  0EF2               	movlw	-14
  8995  002BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8996  002BB8  006F FF7F FFF6     	movff	indf2,tblptrl
  8997  002BBE                     	if	1	;There is more than 1 active tblptr byte
  8998  002BBE  0E20               	movlw	high __smallconst
  8999  002BC0  6EF7               	movwf	tblptrh,c
  9000  002BC2                     	endif
  9001  002BC2                     	if	0	;tblptru may be non-zero
  9002  002BC2                     	endif
  9003  002BC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9004  002BC2  0E00               	movlw	low (__smallconst shr (0+16))
  9005  002BC4  6EF8               	movwf	tblptru,c
  9006  002BC6                     	endif
  9007  002BC6  0008               	tblrd		*
  9008  002BC8  50F5               	movf	tablat,w,c
  9009  002BCA  0A69               	xorlw	105
  9010  002BCC  A4D8               	btfss	status,2,c
  9011  002BCE  D073               	goto	l7841
  9012  002BD0                     u4810:
  9013                           
  9014                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9015                           ;stkvar	_fmt @ sp[(-11)+-4]
  9016  002BD0  0EF1               	movlw	-15
  9017  002BD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9018  002BD8  0EF2               	movlw	-14
  9019  002BDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9020  002BE0  2ADF               	incf	indf2,f,c
  9021                           
  9022                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9023                           ;stkvar	_ap @ sp[(-11)+-6]
  9024  002BE2  0EEF               	movlw	-17
  9025  002BE4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9026  002BEA  0EF0               	movlw	-16
  9027  002BEC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9028  002BF2  0E02               	movlw	2
  9029  002BF4  5EDE               	subwf	postinc2,f,c
  9030  002BF6  0E00               	movlw	0
  9031  002BF8  5ADD               	subwfb	postdec2,f,c
  9032  002BFA  006F FF78  F045    	movff	postinc2,btemp+10
  9033  002C00  006F FF74  F046    	movff	postdec2,btemp+11
  9034  002C06  0060  F117  FFD9   	movff	btemp+10,fsr2l
  9035  002C0C  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  9036  002C12  006F FF78  F045    	movff	postinc2,btemp+10
  9037  002C18  006F FF74  F046    	movff	postdec2,btemp+11
  9038                           
  9039                           ;stkvar	_ll @ sp[(-11)+0]
  9040  002C1E  0EF5               	movlw	-11
  9041  002C20  0060  F117  FFE3   	movff	btemp+10,plusw1
  9042  002C26  0EF6               	movlw	-10
  9043  002C28  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9044  002C2E  6A3B               	clrf	btemp,c
  9045  002C30  BEE3               	btfsc	plusw1,7,c
  9046  002C32  683B               	setf	btemp,c
  9047  002C34  0EF7               	movlw	-9
  9048  002C36  0060  F0EF  FFE3   	movff	btemp,plusw1
  9049  002C3C  0EF8               	movlw	-8
  9050  002C3E  0060  F0EF  FFE3   	movff	btemp,plusw1
  9051  002C44  0EF9               	movlw	-7
  9052  002C46  0060  F0EF  FFE3   	movff	btemp,plusw1
  9053  002C4C  0EFA               	movlw	-6
  9054  002C4E  0060  F0EF  FFE3   	movff	btemp,plusw1
  9055  002C54  0EFB               	movlw	-5
  9056  002C56  0060  F0EF  FFE3   	movff	btemp,plusw1
  9057  002C5C  0EFC               	movlw	-4
  9058  002C5E  0060  F0EF  FFE3   	movff	btemp,plusw1
  9059  002C64                     l7837:
  9060                           
  9061                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9062                           ;stkvar	_ll @ sp[(-11)+0]
  9063  002C64  50E1               	movf	fsr1l,w,c
  9064  002C66  0FF5               	addlw	-11
  9065  002C68  6ED9               	movwf	fsr2l,c
  9066  002C6A  50E2               	movf	fsr1h,w,c
  9067  002C6C  6EDA               	movwf	fsr2h,c
  9068  002C6E  0EFF               	movlw	255
  9069  002C70  22DA               	addwfc	fsr2h,f,c
  9070  002C72  006F FF7B FFE6     	movff	postinc2,postinc1
  9071  002C78  006F FF7B FFE6     	movff	postinc2,postinc1
  9072  002C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  9073  002C84  006F FF7B FFE6     	movff	postinc2,postinc1
  9074  002C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  9075  002C90  006F FF7B FFE6     	movff	postinc2,postinc1
  9076  002C96  006F FF7B FFE6     	movff	postinc2,postinc1
  9077  002C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  9078                           
  9079                           ;stkvar	_fp @ sp[(-19)+-2]
  9080  002CA2  0EEB               	movlw	-21
  9081  002CA4  006F FF8F FFE6     	movff	plusw1,postinc1
  9082  002CAA  006F FF8F FFE6     	movff	plusw1,postinc1
  9083  002CB0  ECA8  F017         	call	_dtoa	;wreg free
  9084  002CB4  D148               	goto	l1851
  9085  002CB6                     l7841:
  9086                           
  9087                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  9088  002CB6  0E02               	movlw	2
  9089  002CB8  6EE6               	movwf	postinc1,c
  9090  002CBA  0E00               	movlw	0
  9091  002CBC  6EE6               	movwf	postinc1,c
  9092  002CBE  0EAD               	movlw	STR_19& (0+255)
  9093  002CC0  6EE6               	movwf	postinc1,c
  9094                           
  9095                           ;stkvar	_fmt @ sp[(-14)+-4]
  9096  002CC2  0EEE               	movlw	-18
  9097  002CC4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9098  002CCA  0EEF               	movlw	-17
  9099  002CCC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9100  002CD2  50DF               	movf	indf2,w,c
  9101  002CD4  6EE6               	movwf	postinc1,c
  9102  002CD6  EC45  F024         	call	_strncmp	;wreg free
  9103  002CDA  503B               	movf	btemp,w,c
  9104  002CDC  103C               	iorwf	btemp+1,w,c
  9105  002CDE  B4D8               	btfsc	status,2,c
  9106  002CE0  D016               	goto	u4830
  9107  002CE2  0E02               	movlw	2
  9108  002CE4  6EE6               	movwf	postinc1,c
  9109  002CE6  0E00               	movlw	0
  9110  002CE8  6EE6               	movwf	postinc1,c
  9111  002CEA  0EB0               	movlw	STR_23& (0+255)
  9112  002CEC  6EE6               	movwf	postinc1,c
  9113                           
  9114                           ;stkvar	_fmt @ sp[(-14)+-4]
  9115  002CEE  0EEE               	movlw	-18
  9116  002CF0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9117  002CF6  0EEF               	movlw	-17
  9118  002CF8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9119  002CFE  50DF               	movf	indf2,w,c
  9120  002D00  6EE6               	movwf	postinc1,c
  9121  002D02  EC45  F024         	call	_strncmp	;wreg free
  9122  002D06  503B               	movf	btemp,w,c
  9123  002D08  103C               	iorwf	btemp+1,w,c
  9124  002D0A  A4D8               	btfss	status,2,c
  9125  002D0C  D067               	goto	l7853
  9126  002D0E                     u4830:
  9127                           
  9128                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  9129                           ;stkvar	_fmt @ sp[(-11)+-4]
  9130  002D0E  0EF1               	movlw	-15
  9131  002D10  006F FF8F FFD9     	movff	plusw1,fsr2l
  9132  002D16  0EF2               	movlw	-14
  9133  002D18  006F FF8F FFDA     	movff	plusw1,fsr2h
  9134  002D1E  0E02               	movlw	2
  9135  002D20  26DF               	addwf	indf2,f,c
  9136                           
  9137                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  9138                           ;stkvar	_ap @ sp[(-11)+-6]
  9139  002D22  0EEF               	movlw	-17
  9140  002D24  006F FF8F FFD9     	movff	plusw1,fsr2l
  9141  002D2A  0EF0               	movlw	-16
  9142  002D2C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9143  002D32  0E04               	movlw	4
  9144  002D34  5EDE               	subwf	postinc2,f,c
  9145  002D36  0E00               	movlw	0
  9146  002D38  5ADD               	subwfb	postdec2,f,c
  9147  002D3A  006F FF78  F045    	movff	postinc2,btemp+10
  9148  002D40  006F FF74  F046    	movff	postdec2,btemp+11
  9149  002D46  0060  F117  FFD9   	movff	btemp+10,fsr2l
  9150  002D4C  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  9151  002D52  006F FF78  F043    	movff	postinc2,btemp+8
  9152  002D58  006F FF78  F044    	movff	postinc2,btemp+9
  9153  002D5E  006F FF78  F045    	movff	postinc2,btemp+10
  9154  002D64  006F FF78  F046    	movff	postinc2,btemp+11
  9155  002D6A  0060  F10C  F04B   	movff	btemp+8,btemp+16
  9156  002D70  0060  F110  F04C   	movff	btemp+9,btemp+17
  9157  002D76  0060  F114  F04D   	movff	btemp+10,btemp+18
  9158  002D7C  0060  F118  F04E   	movff	btemp+11,btemp+19
  9159  002D82  6A4F               	clrf	btemp+20,c
  9160  002D84  BE4E               	btfsc	btemp+19,7,c
  9161  002D86  684F               	setf	btemp+20,c
  9162  002D88  0060  F13C  F050   	movff	btemp+20,btemp+21
  9163  002D8E  0060  F13C  F051   	movff	btemp+20,btemp+22
  9164  002D94  0060  F13C  F052   	movff	btemp+20,btemp+23
  9165                           
  9166                           ;stkvar	_ll @ sp[(-11)+0]
  9167  002D9A  0EF5               	movlw	-11
  9168  002D9C  0060  F12F  FFE3   	movff	btemp+16,plusw1
  9169  002DA2  0EF6               	movlw	-10
  9170  002DA4  0060  F133  FFE3   	movff	btemp+17,plusw1
  9171  002DAA  0EF7               	movlw	-9
  9172  002DAC  0060  F137  FFE3   	movff	btemp+18,plusw1
  9173  002DB2  0EF8               	movlw	-8
  9174  002DB4  0060  F13B  FFE3   	movff	btemp+19,plusw1
  9175  002DBA  0EF9               	movlw	-7
  9176  002DBC  0060  F13F  FFE3   	movff	btemp+20,plusw1
  9177  002DC2  0EFA               	movlw	-6
  9178  002DC4  0060  F143  FFE3   	movff	btemp+21,plusw1
  9179  002DCA  0EFB               	movlw	-5
  9180  002DCC  0060  F147  FFE3   	movff	btemp+22,plusw1
  9181  002DD2  0EFC               	movlw	-4
  9182  002DD4  0060  F14B  FFE3   	movff	btemp+23,plusw1
  9183  002DDA  D744               	goto	l7837
  9184  002DDC                     l7853:
  9185                           
  9186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9187                           ;stkvar	_fmt @ sp[(-11)+-4]
  9188  002DDC  0EF1               	movlw	-15
  9189  002DDE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9190  002DE4  0EF2               	movlw	-14
  9191  002DE6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9192  002DEC  006F FF7F FFF6     	movff	indf2,tblptrl
  9193  002DF2                     	if	1	;There is more than 1 active tblptr byte
  9194  002DF2  0E20               	movlw	high __smallconst
  9195  002DF4  6EF7               	movwf	tblptrh,c
  9196  002DF6                     	endif
  9197  002DF6                     	if	0	;tblptru may be non-zero
  9198  002DF6                     	endif
  9199  002DF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9200  002DF6  0E00               	movlw	low (__smallconst shr (0+16))
  9201  002DF8  6EF8               	movwf	tblptru,c
  9202  002DFA                     	endif
  9203  002DFA  0008               	tblrd		*
  9204  002DFC  50F5               	movf	tablat,w,c
  9205  002DFE  0A73               	xorlw	115
  9206  002E00  A4D8               	btfss	status,2,c
  9207  002E02  D040               	goto	l7863
  9208                           
  9209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9210                           ;stkvar	_fmt @ sp[(-11)+-4]
  9211  002E04  0EF1               	movlw	-15
  9212  002E06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9213  002E0C  0EF2               	movlw	-14
  9214  002E0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9215  002E14  2ADF               	incf	indf2,f,c
  9216                           
  9217                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9218                           ;stkvar	_ap @ sp[(-11)+-6]
  9219  002E16  0EEF               	movlw	-17
  9220  002E18  006F FF8F FFD9     	movff	plusw1,fsr2l
  9221  002E1E  0EF0               	movlw	-16
  9222  002E20  006F FF8F FFDA     	movff	plusw1,fsr2h
  9223  002E26  0E02               	movlw	2
  9224  002E28  5EDE               	subwf	postinc2,f,c
  9225  002E2A  0E00               	movlw	0
  9226  002E2C  5ADD               	subwfb	postdec2,f,c
  9227  002E2E  006F FF78  F045    	movff	postinc2,btemp+10
  9228  002E34  006F FF74  F046    	movff	postdec2,btemp+11
  9229  002E3A  0060  F117  FFD9   	movff	btemp+10,fsr2l
  9230  002E40  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  9231  002E46  006F FF78  F045    	movff	postinc2,btemp+10
  9232  002E4C  006F FF74  F046    	movff	postdec2,btemp+11
  9233                           
  9234                           ;stkvar	_cp @ sp[(-11)+8]
  9235  002E52  0EFE               	movlw	-2
  9236  002E54  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9237  002E5A  0EFD               	movlw	-3
  9238  002E5C  0060  F117  FFE3   	movff	btemp+10,plusw1
  9239                           
  9240                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9241                           ;stkvar	_cp @ sp[(-11)+8]
  9242  002E62  0EFD               	movlw	-3
  9243  002E64  006F FF8F FFE6     	movff	plusw1,postinc1
  9244  002E6A  006F FF8F FFE6     	movff	plusw1,postinc1
  9245                           
  9246                           ;stkvar	_fp @ sp[(-13)+-2]
  9247  002E70  0EF1               	movlw	-15
  9248  002E72  006F FF8F FFE6     	movff	plusw1,postinc1
  9249  002E78  006F FF8F FFE6     	movff	plusw1,postinc1
  9250  002E7E  ECE1  F01C         	call	_stoa	;wreg free
  9251  002E82  D061               	goto	l1851
  9252  002E84                     l7863:
  9253                           
  9254                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9255                           ;stkvar	_fmt @ sp[(-11)+-4]
  9256  002E84  0EF1               	movlw	-15
  9257  002E86  006F FF8F FFD9     	movff	plusw1,fsr2l
  9258  002E8C  0EF2               	movlw	-14
  9259  002E8E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9260  002E94  006F FF7F FFF6     	movff	indf2,tblptrl
  9261  002E9A                     	if	1	;There is more than 1 active tblptr byte
  9262  002E9A  0E20               	movlw	high __smallconst
  9263  002E9C  6EF7               	movwf	tblptrh,c
  9264  002E9E                     	endif
  9265  002E9E                     	if	0	;tblptru may be non-zero
  9266  002E9E                     	endif
  9267  002E9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9268  002E9E  0E00               	movlw	low (__smallconst shr (0+16))
  9269  002EA0  6EF8               	movwf	tblptru,c
  9270  002EA2                     	endif
  9271  002EA2  0008               	tblrd		*
  9272  002EA4  50F5               	movf	tablat,w,c
  9273  002EA6  0A25               	xorlw	37
  9274  002EA8  A4D8               	btfss	status,2,c
  9275  002EAA  D018               	goto	l7873
  9276                           
  9277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9278                           ;stkvar	_fmt @ sp[(-11)+-4]
  9279  002EAC  0EF1               	movlw	-15
  9280  002EAE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9281  002EB4  0EF2               	movlw	-14
  9282  002EB6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9283  002EBC  2ADF               	incf	indf2,f,c
  9284                           
  9285                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9286                           ;stkvar	_fp @ sp[(-11)+-2]
  9287  002EBE  0EF3               	movlw	-13
  9288  002EC0  006F FF8F FFE6     	movff	plusw1,postinc1
  9289  002EC6  006F FF8F FFE6     	movff	plusw1,postinc1
  9290  002ECC  0E25               	movlw	37
  9291  002ECE  6EE6               	movwf	postinc1,c
  9292  002ED0  0E00               	movlw	0
  9293  002ED2  6EE6               	movwf	postinc1,c
  9294  002ED4  EC97  F025         	call	_fputc	;wreg free
  9295  002ED8                     l7869:
  9296                           
  9297                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9298  002ED8  0E01               	movlw	1
  9299  002EDA  D00A               	goto	L20
  9300  002EDC                     l7873:
  9301                           
  9302                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9303                           ;stkvar	_fmt @ sp[(-11)+-4]
  9304  002EDC  0EF1               	movlw	-15
  9305  002EDE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9306  002EE4  0EF2               	movlw	-14
  9307  002EE6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9308  002EEC  2ADF               	incf	indf2,f,c
  9309                           
  9310                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9311  002EEE  0E00               	movlw	0
  9312  002EF0                     L20:
  9313  002EF0  6E3B               	movwf	btemp,c
  9314  002EF2  0E00               	movlw	0
  9315  002EF4  6E3C               	movwf	btemp+1,c
  9316  002EF6  D027               	goto	l1851
  9317  002EF8                     l7879:
  9318                           
  9319                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9320                           ;stkvar	_fp @ sp[(-11)+-2]
  9321  002EF8  0EF3               	movlw	-13
  9322  002EFA  006F FF8F FFE6     	movff	plusw1,postinc1
  9323  002F00  006F FF8F FFE6     	movff	plusw1,postinc1
  9324                           
  9325                           ;stkvar	_fmt @ sp[(-13)+-4]
  9326  002F06  0EEF               	movlw	-17
  9327  002F08  006F FF8F FFD9     	movff	plusw1,fsr2l
  9328  002F0E  0EF0               	movlw	-16
  9329  002F10  006F FF8F FFDA     	movff	plusw1,fsr2h
  9330  002F16  006F FF7F FFF6     	movff	indf2,tblptrl
  9331  002F1C                     	if	1	;There is more than 1 active tblptr byte
  9332  002F1C  0E20               	movlw	high __smallconst
  9333  002F1E  6EF7               	movwf	tblptrh,c
  9334  002F20                     	endif
  9335  002F20                     	if	0	;tblptru may be non-zero
  9336  002F20                     	endif
  9337  002F20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9338  002F20  0E00               	movlw	low (__smallconst shr (0+16))
  9339  002F22  6EF8               	movwf	tblptru,c
  9340  002F24                     	endif
  9341  002F24  0008               	tblrd		*
  9342  002F26  50F5               	movf	tablat,w,c
  9343  002F28  6EE6               	movwf	postinc1,c
  9344  002F2A  0E00               	movlw	0
  9345  002F2C  6EE6               	movwf	postinc1,c
  9346  002F2E  EC97  F025         	call	_fputc	;wreg free
  9347                           
  9348                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9349                           ;stkvar	_fmt @ sp[(-11)+-4]
  9350  002F32  0EF1               	movlw	-15
  9351  002F34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9352  002F3A  0EF2               	movlw	-14
  9353  002F3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9354  002F42  2ADF               	incf	indf2,f,c
  9355  002F44  D7C9               	goto	l7869
  9356  002F46                     l1851:
  9357                           
  9358                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9359  002F46  0EEF               	movlw	239
  9360  002F48  26E1               	addwf	fsr1l,f,c
  9361  002F4A  0EFF               	movlw	255
  9362  002F4C  22E2               	addwfc	fsr1h,f,c
  9363  002F4E  0012               	return		;funcret
  9364  002F50                     __end_of_vfpfcnvrt:
  9365                           	opt callstack 0
  9366                           
  9367 ;; *************** function _strncmp *****************
  9368 ;; Defined at:
  9369 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  _l              1  [STACK] PTR const unsigned char 
  9372 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9373 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  9374 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  9375 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9376 ;;		 -> STR_1(17), 
  9377 ;;  _r              1  [STACK] PTR const unsigned char 
  9378 ;;		 -> STR_25(3), STR_21(3), 
  9379 ;;  n               2  [STACK] unsigned int 
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;  r               1  [STACK] PTR const unsigned char 
  9382 ;;		 -> STR_25(3), STR_21(3), 
  9383 ;;  l               1  [STACK] PTR const unsigned char 
  9384 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9385 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  9386 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  9387 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9388 ;;		 -> STR_1(17), 
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  2  [STACK] int 
  9391 ;; Registers used:
  9392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9402 ;;Total ram usage:        0 bytes
  9403 ;; Hardware stack levels used:    1
  9404 ;; Hardware stack levels required when called:    3
  9405 ;; This function calls:
  9406 ;;		Nothing
  9407 ;; This function is called by:
  9408 ;;		_vfpfcnvrt
  9409 ;; This function uses a reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text40
  9413  00488A                     __ptext40:
  9414                           	opt callstack 0
  9415  00488A                     _strncmp:
  9416                           	opt callstack 0
  9417                           
  9418                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9419  00488A  52E6               	movf	postinc1,f,c
  9420  00488C  52E6               	movf	postinc1,f,c
  9421                           
  9422                           ;stkvar	__l @ sp[(-2)+-1]
  9423                           
  9424                           ;incstack = 0
  9425  00488E  0EFD               	movlw	-3
  9426  004890  006F FF8C  F046    	movff	plusw1,btemp+11
  9427                           
  9428                           ;stkvar	_l @ sp[(-2)+1]
  9429  004896  0EFF               	movlw	-1
  9430  004898  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9431                           
  9432                           ;stkvar	__r @ sp[(-2)+-2]
  9433  00489E  0EFC               	movlw	-4
  9434  0048A0  006F FF8C  F046    	movff	plusw1,btemp+11
  9435                           
  9436                           ;stkvar	_r @ sp[(-2)+0]
  9437  0048A6  0EFE               	movlw	-2
  9438  0048A8  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9439                           
  9440                           ;stkvar	_n @ sp[(-2)+-4]
  9441  0048AE  0EFA               	movlw	-6
  9442  0048B0  006F FF8C  F03B    	movff	plusw1,btemp
  9443  0048B6  0E01               	movlw	1
  9444  0048B8  5E3B               	subwf	btemp,f,c
  9445  0048BA  0EFA               	movlw	-6
  9446  0048BC  0060  F0EF  FFE3   	movff	btemp,plusw1
  9447  0048C2  0EFB               	movlw	-5
  9448  0048C4  006F FF8C  F03B    	movff	plusw1,btemp
  9449  0048CA  0E00               	movlw	0
  9450  0048CC  5A3B               	subwfb	btemp,f,c
  9451  0048CE  0EFB               	movlw	-5
  9452  0048D0  0060  F0EF  FFE3   	movff	btemp,plusw1
  9453  0048D6  0EFA               	movlw	-6
  9454  0048D8  28E3               	incf	plusw1,w,c
  9455  0048DA  E121               	bnz	l5585
  9456  0048DC  0EFB               	movlw	-5
  9457  0048DE  28E3               	incf	plusw1,w,c
  9458  0048E0  A4D8               	btfss	status,2,c
  9459  0048E2  D01D               	goto	l5585
  9460  0048E4  0E00               	movlw	0
  9461  0048E6  6E3B               	movwf	btemp,c
  9462  0048E8  0E00               	movlw	0
  9463  0048EA  6E3C               	movwf	btemp+1,c
  9464  0048EC  D091               	goto	l2600
  9465  0048EE                     l5581:
  9466                           
  9467                           ;stkvar	_l @ sp[(-2)+1]
  9468  0048EE  0EFF               	movlw	-1
  9469  0048F0  2AE3               	incf	plusw1,f,c
  9470                           
  9471                           ;stkvar	_r @ sp[(-2)+0]
  9472  0048F2  0EFE               	movlw	-2
  9473  0048F4  2AE3               	incf	plusw1,f,c
  9474                           
  9475                           ;stkvar	_n @ sp[(-2)+-4]
  9476  0048F6  0EFA               	movlw	-6
  9477  0048F8  006F FF8C  F03B    	movff	plusw1,btemp
  9478  0048FE  0E01               	movlw	1
  9479  004900  5E3B               	subwf	btemp,f,c
  9480  004902  0EFA               	movlw	-6
  9481  004904  0060  F0EF  FFE3   	movff	btemp,plusw1
  9482  00490A  0EFB               	movlw	-5
  9483  00490C  006F FF8C  F03B    	movff	plusw1,btemp
  9484  004912  0E00               	movlw	0
  9485  004914  5A3B               	subwfb	btemp,f,c
  9486  004916  0EFB               	movlw	-5
  9487  004918  0060  F0EF  FFE3   	movff	btemp,plusw1
  9488  00491E                     l5585:
  9489                           
  9490                           ;stkvar	_l @ sp[(-2)+1]
  9491  00491E  50E1               	movf	fsr1l,w,c
  9492  004920  0FFF               	addlw	-1
  9493  004922  6ED9               	movwf	fsr2l,c
  9494  004924  50E2               	movf	fsr1h,w,c
  9495  004926  6EDA               	movwf	fsr2h,c
  9496  004928  0EFF               	movlw	255
  9497  00492A  22DA               	addwfc	fsr2h,f,c
  9498  00492C  006F FF7F FFF6     	movff	indf2,tblptrl
  9499  004932                     	if	1	;There is more than 1 active tblptr byte
  9500  004932  0E20               	movlw	high __smallconst
  9501  004934  6EF7               	movwf	tblptrh,c
  9502  004936                     	endif
  9503  004936                     	if	0	;tblptru may be non-zero
  9504  004936                     	endif
  9505  004936                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9506  004936  0E00               	movlw	low (__smallconst shr (0+16))
  9507  004938  6EF8               	movwf	tblptru,c
  9508  00493A                     	endif
  9509  00493A  0008               	tblrd		*
  9510  00493C  50F5               	movf	tablat,w,c
  9511  00493E  0900               	iorlw	0
  9512  004940  B4D8               	btfsc	status,2,c
  9513  004942  D041               	goto	u2950
  9514                           
  9515                           ;stkvar	_r @ sp[(-2)+0]
  9516  004944  50E1               	movf	fsr1l,w,c
  9517  004946  0FFE               	addlw	-2
  9518  004948  6ED9               	movwf	fsr2l,c
  9519  00494A  50E2               	movf	fsr1h,w,c
  9520  00494C  6EDA               	movwf	fsr2h,c
  9521  00494E  0EFF               	movlw	255
  9522  004950  22DA               	addwfc	fsr2h,f,c
  9523  004952  006F FF7F FFF6     	movff	indf2,tblptrl
  9524  004958                     	if	1	;There is more than 1 active tblptr byte
  9525  004958  0E20               	movlw	high __smallconst
  9526  00495A  6EF7               	movwf	tblptrh,c
  9527  00495C                     	endif
  9528  00495C                     	if	0	;tblptru may be non-zero
  9529  00495C                     	endif
  9530  00495C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9531  00495C  0E00               	movlw	low (__smallconst shr (0+16))
  9532  00495E  6EF8               	movwf	tblptru,c
  9533  004960                     	endif
  9534  004960  0008               	tblrd		*
  9535  004962  50F5               	movf	tablat,w,c
  9536  004964  0900               	iorlw	0
  9537  004966  B4D8               	btfsc	status,2,c
  9538  004968  D02E               	goto	u2950
  9539                           
  9540                           ;stkvar	_n @ sp[(-2)+-4]
  9541  00496A  0EFA               	movlw	-6
  9542  00496C  006F FF8C  F03B    	movff	plusw1,btemp
  9543  004972  0EFB               	movlw	-5
  9544  004974  50E3               	movf	plusw1,w,c
  9545  004976  103B               	iorwf	btemp,w,c
  9546  004978  B4D8               	btfsc	status,2,c
  9547  00497A  D025               	goto	u2950
  9548                           
  9549                           ;stkvar	_l @ sp[(-2)+1]
  9550  00497C  50E1               	movf	fsr1l,w,c
  9551  00497E  0FFF               	addlw	-1
  9552  004980  6ED9               	movwf	fsr2l,c
  9553  004982  50E2               	movf	fsr1h,w,c
  9554  004984  6EDA               	movwf	fsr2h,c
  9555  004986  0EFF               	movlw	255
  9556  004988  22DA               	addwfc	fsr2h,f,c
  9557  00498A  006F FF7F FFF6     	movff	indf2,tblptrl
  9558  004990                     	if	1	;There is more than 1 active tblptr byte
  9559  004990  0E20               	movlw	high __smallconst
  9560  004992  6EF7               	movwf	tblptrh,c
  9561  004994                     	endif
  9562  004994                     	if	0	;tblptru may be non-zero
  9563  004994                     	endif
  9564  004994                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9565  004994  0E00               	movlw	low (__smallconst shr (0+16))
  9566  004996  6EF8               	movwf	tblptru,c
  9567  004998                     	endif
  9568  004998  0008               	tblrd		*
  9569  00499A  006F FFD4  F046    	movff	tablat,btemp+11
  9570                           
  9571                           ;stkvar	_r @ sp[(-2)+0]
  9572  0049A0  50E1               	movf	fsr1l,w,c
  9573  0049A2  0FFE               	addlw	-2
  9574  0049A4  6ED9               	movwf	fsr2l,c
  9575  0049A6  50E2               	movf	fsr1h,w,c
  9576  0049A8  6EDA               	movwf	fsr2h,c
  9577  0049AA  0EFF               	movlw	255
  9578  0049AC  22DA               	addwfc	fsr2h,f,c
  9579  0049AE  006F FF7F FFF6     	movff	indf2,tblptrl
  9580  0049B4                     	if	1	;There is more than 1 active tblptr byte
  9581  0049B4  0E20               	movlw	high __smallconst
  9582  0049B6  6EF7               	movwf	tblptrh,c
  9583  0049B8                     	endif
  9584  0049B8                     	if	0	;tblptru may be non-zero
  9585  0049B8                     	endif
  9586  0049B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9587  0049B8  0E00               	movlw	low (__smallconst shr (0+16))
  9588  0049BA  6EF8               	movwf	tblptru,c
  9589  0049BC                     	endif
  9590  0049BC  0008               	tblrd		*
  9591  0049BE  50F5               	movf	tablat,w,c
  9592  0049C0  1846               	xorwf	btemp+11,w,c
  9593  0049C2  B4D8               	btfsc	status,2,c
  9594  0049C4  D794               	goto	l5581
  9595  0049C6                     u2950:
  9596                           
  9597                           ;stkvar	_l @ sp[(-2)+1]
  9598  0049C6  50E1               	movf	fsr1l,w,c
  9599  0049C8  0FFF               	addlw	-1
  9600  0049CA  6ED9               	movwf	fsr2l,c
  9601  0049CC  50E2               	movf	fsr1h,w,c
  9602  0049CE  6EDA               	movwf	fsr2h,c
  9603  0049D0  0EFF               	movlw	255
  9604  0049D2  22DA               	addwfc	fsr2h,f,c
  9605  0049D4  006F FF7F FFF6     	movff	indf2,tblptrl
  9606  0049DA                     	if	1	;There is more than 1 active tblptr byte
  9607  0049DA  0E20               	movlw	high __smallconst
  9608  0049DC  6EF7               	movwf	tblptrh,c
  9609  0049DE                     	endif
  9610  0049DE                     	if	0	;tblptru may be non-zero
  9611  0049DE                     	endif
  9612  0049DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9613  0049DE  0E00               	movlw	low (__smallconst shr (0+16))
  9614  0049E0  6EF8               	movwf	tblptru,c
  9615  0049E2                     	endif
  9616  0049E2  0008               	tblrd		*
  9617  0049E4  50F5               	movf	tablat,w,c
  9618  0049E6  6E3B               	movwf	btemp,c
  9619  0049E8  6A3C               	clrf	btemp+1,c
  9620                           
  9621                           ;stkvar	_r @ sp[(-2)+0]
  9622  0049EA  50E1               	movf	fsr1l,w,c
  9623  0049EC  0FFE               	addlw	-2
  9624  0049EE  6ED9               	movwf	fsr2l,c
  9625  0049F0  50E2               	movf	fsr1h,w,c
  9626  0049F2  6EDA               	movwf	fsr2h,c
  9627  0049F4  0EFF               	movlw	255
  9628  0049F6  22DA               	addwfc	fsr2h,f,c
  9629  0049F8  006F FF7F FFF6     	movff	indf2,tblptrl
  9630  0049FE                     	if	1	;There is more than 1 active tblptr byte
  9631  0049FE  0E20               	movlw	high __smallconst
  9632  004A00  6EF7               	movwf	tblptrh,c
  9633  004A02                     	endif
  9634  004A02                     	if	0	;tblptru may be non-zero
  9635  004A02                     	endif
  9636  004A02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9637  004A02  0E00               	movlw	low (__smallconst shr (0+16))
  9638  004A04  6EF8               	movwf	tblptru,c
  9639  004A06                     	endif
  9640  004A06  0008               	tblrd		*
  9641  004A08  50F5               	movf	tablat,w,c
  9642  004A0A  5E3B               	subwf	btemp,f,c
  9643  004A0C  0E00               	movlw	0
  9644  004A0E  5A3C               	subwfb	btemp+1,f,c
  9645  004A10                     l2600:
  9646                           
  9647                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  9648  004A10  0EFA               	movlw	250
  9649  004A12  26E1               	addwf	fsr1l,f,c
  9650  004A14  0EFF               	movlw	255
  9651  004A16  22E2               	addwfc	fsr1h,f,c
  9652  004A18  0012               	return		;funcret
  9653  004A1A                     __end_of_strncmp:
  9654                           	opt callstack 0
  9655                           
  9656 ;; *************** function _stoa *****************
  9657 ;; Defined at:
  9658 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9661 ;;		 -> f(5), NULL(0), 
  9662 ;;  s               2  [STACK] PTR unsigned char 
  9663 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(89), 
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;  nuls            7  [STACK] unsigned char [7]
  9666 ;;  l               2  [STACK] int 
  9667 ;;  p               2  [STACK] int 
  9668 ;;  cp              2  [STACK] PTR unsigned char 
  9669 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
  9670 ;;		 -> V(89), 
  9671 ;;  w               2  [STACK] int 
  9672 ;;  i               2  [STACK] int 
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  2  [STACK] int 
  9675 ;; Registers used:
  9676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9686 ;;Total ram usage:        0 bytes
  9687 ;; Hardware stack levels used:    1
  9688 ;; Hardware stack levels required when called:    6
  9689 ;; This function calls:
  9690 ;;		_fputc
  9691 ;;		_strlen
  9692 ;; This function is called by:
  9693 ;;		_vfpfcnvrt
  9694 ;; This function uses a reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text41
  9698  0039C2                     __ptext41:
  9699                           	opt callstack 0
  9700  0039C2                     _stoa:
  9701                           	opt callstack 0
  9702                           
  9703                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9704  0039C2  0E11               	movlw	17
  9705  0039C4  26E1               	addwf	fsr1l,f,c
  9706  0039C6  0E00               	movlw	0
  9707  0039C8  22E2               	addwfc	fsr1h,f,c
  9708                           
  9709                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9710                           
  9711                           ;incstack = 0
  9712  0039CA  EE20  F060         	lfsr	2,stoa@F1144
  9713                           
  9714                           ;stkvar	_nuls @ sp[(-17)+0]
  9715  0039CE  0E07               	movlw	7
  9716  0039D0  6E3B               	movwf	btemp,c
  9717  0039D2  0EEF               	movlw	-17
  9718  0039D4                     us468999:
  9719  0039D4  006F FF7B FFE3     	movff	postinc2,plusw1
  9720  0039DA  28E8               	incf	wreg,w,c
  9721  0039DC  2E3B               	decfsz	btemp,f,c
  9722  0039DE  D7FA               	bra	us468999
  9723                           
  9724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9725                           ;stkvar	_s @ sp[(-17)+-4]
  9726  0039E0  0EEB               	movlw	-21
  9727  0039E2  006F FF8C  F045    	movff	plusw1,btemp+10
  9728  0039E8  0EEC               	movlw	-20
  9729  0039EA  006F FF8C  F046    	movff	plusw1,btemp+11
  9730                           
  9731                           ;stkvar	_cp @ sp[(-17)+11]
  9732  0039F0  0EFB               	movlw	-5
  9733  0039F2  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9734  0039F8  0EFA               	movlw	-6
  9735  0039FA  0060  F117  FFE3   	movff	btemp+10,plusw1
  9736                           
  9737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9738                           ;stkvar	_cp @ sp[(-17)+11]
  9739  003A00  0EFA               	movlw	-6
  9740  003A02  006F FF8C  F03B    	movff	plusw1,btemp
  9741  003A08  0EFB               	movlw	-5
  9742  003A0A  50E3               	movf	plusw1,w,c
  9743  003A0C  103B               	iorwf	btemp,w,c
  9744  003A0E  A4D8               	btfss	status,2,c
  9745  003A10  D00E               	goto	l7767
  9746                           
  9747                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9748                           ;stkvar	_nuls @ sp[(-17)+0]
  9749  003A12  0EEF               	movlw	239
  9750  003A14  24E1               	addwf	fsr1l,w,c
  9751  003A16  6E45               	movwf	btemp+10,c
  9752  003A18  0EFF               	movlw	255
  9753  003A1A  20E2               	addwfc	fsr1h,w,c
  9754  003A1C  6E46               	movwf	btemp+11,c
  9755                           
  9756                           ;stkvar	_cp @ sp[(-17)+11]
  9757  003A1E  0EFB               	movlw	-5
  9758  003A20  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9759  003A26  0EFA               	movlw	-6
  9760  003A28  0060  F117  FFE3   	movff	btemp+10,plusw1
  9761  003A2E                     l7767:
  9762                           
  9763                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9764                           ;stkvar	_cp @ sp[(-17)+11]
  9765  003A2E  0EFA               	movlw	-6
  9766  003A30  006F FF8F FFE6     	movff	plusw1,postinc1
  9767  003A36  006F FF8F FFE6     	movff	plusw1,postinc1
  9768  003A3C  EC83  F028         	call	_strlen	;wreg free
  9769                           
  9770                           ;stkvar	_l @ sp[(-17)+7]
  9771  003A40  0EF6               	movlw	-10
  9772  003A42  0060  F0EF  FFE3   	movff	btemp,plusw1
  9773  003A48  0EF7               	movlw	-9
  9774  003A4A  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  9775                           
  9776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9777                           ;stkvar	_p @ sp[(-17)+9]
  9778  003A50  0EF8               	movlw	-8
  9779  003A52  0060  F08B  FFE3   	movff	_prec,plusw1
  9780  003A58  0EF9               	movlw	-7
  9781  003A5A  0060  F08F  FFE3   	movff	_prec+1,plusw1
  9782                           
  9783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9784                           ;stkvar	_p @ sp[(-17)+9]
  9785  003A60  0EF9               	movlw	-7
  9786  003A62  BEE3               	btfsc	plusw1,7,c
  9787  003A64  D023               	goto	l1832
  9788                           
  9789                           ;stkvar	_l @ sp[(-17)+7]
  9790                           ;stkvar	_p @ sp[(-17)+9]
  9791  003A66  50E1               	movf	fsr1l,w,c
  9792  003A68  0FF8               	addlw	-8
  9793  003A6A  6ED9               	movwf	fsr2l,c
  9794  003A6C  50E2               	movf	fsr1h,w,c
  9795  003A6E  6EDA               	movwf	fsr2h,c
  9796  003A70  0EFF               	movlw	255
  9797  003A72  22DA               	addwfc	fsr2h,f,c
  9798  003A74  0EF6               	movlw	-10
  9799  003A76  50E3               	movf	plusw1,w,c
  9800  003A78  5CDE               	subwf	postinc2,w,c
  9801  003A7A  50DE               	movf	postinc2,w,c
  9802  003A7C  0A80               	xorlw	128
  9803  003A7E  6E3B               	movwf	btemp,c
  9804  003A80  0EF7               	movlw	-9
  9805  003A82  50E3               	movf	plusw1,w,c
  9806  003A84  0A80               	xorlw	128
  9807  003A86  583B               	subwfb	btemp,w,c
  9808  003A88  B0D8               	btfsc	status,0,c
  9809  003A8A  D010               	goto	l1832
  9810                           
  9811                           ;stkvar	_p @ sp[(-17)+9]
  9812                           ;stkvar	_l @ sp[(-17)+7]
  9813  003A8C  0EF8               	movlw	-8
  9814  003A8E  006F FF8C  F03B    	movff	plusw1,btemp
  9815  003A94  0EF6               	movlw	-10
  9816  003A96  0060  F0EF  FFE3   	movff	btemp,plusw1
  9817  003A9C  0EF9               	movlw	-7
  9818  003A9E  006F FF8C  F03B    	movff	plusw1,btemp
  9819  003AA4  0EF7               	movlw	-9
  9820  003AA6  0060  F0EF  FFE3   	movff	btemp,plusw1
  9821  003AAC                     l1832:
  9822                           
  9823                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9824                           ;stkvar	_l @ sp[(-17)+7]
  9825                           ;stkvar	_p @ sp[(-17)+9]
  9826  003AAC  0EF6               	movlw	-10
  9827  003AAE  006F FF8C  F03B    	movff	plusw1,btemp
  9828  003AB4  0EF8               	movlw	-8
  9829  003AB6  0060  F0EF  FFE3   	movff	btemp,plusw1
  9830  003ABC  0EF7               	movlw	-9
  9831  003ABE  006F FF8C  F03B    	movff	plusw1,btemp
  9832  003AC4  0EF9               	movlw	-7
  9833  003AC6  0060  F0EF  FFE3   	movff	btemp,plusw1
  9834                           
  9835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9836                           ;stkvar	_w @ sp[(-17)+13]
  9837  003ACC  0EFC               	movlw	-4
  9838  003ACE  0060  F083  FFE3   	movff	_width,plusw1
  9839  003AD4  0EFD               	movlw	-3
  9840  003AD6  0060  F087  FFE3   	movff	_width+1,plusw1
  9841                           
  9842                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9843  003ADC  A024               	btfss	_flags,0,c
  9844  003ADE  D01F               	goto	l7787
  9845  003AE0  D031               	goto	u4730
  9846  003AE2                     l7783:
  9847                           
  9848                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9849                           ;stkvar	_fp @ sp[(-17)+-2]
  9850  003AE2  0EED               	movlw	-19
  9851  003AE4  006F FF8F FFE6     	movff	plusw1,postinc1
  9852  003AEA  006F FF8F FFE6     	movff	plusw1,postinc1
  9853  003AF0  0E20               	movlw	32
  9854  003AF2  6EE6               	movwf	postinc1,c
  9855  003AF4  0E00               	movlw	0
  9856  003AF6  6EE6               	movwf	postinc1,c
  9857  003AF8  EC97  F025         	call	_fputc	;wreg free
  9858                           
  9859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9860                           ;stkvar	_l @ sp[(-17)+7]
  9861  003AFC  0EF6               	movlw	-10
  9862  003AFE  50E3               	movf	plusw1,w,c
  9863  003B00  0F01               	addlw	1
  9864  003B02  6E3B               	movwf	btemp,c
  9865  003B04  0EF6               	movlw	-10
  9866  003B06  0060  F0EF  FFE3   	movff	btemp,plusw1
  9867  003B0C  6A3B               	clrf	btemp,c
  9868  003B0E  0EF7               	movlw	-9
  9869  003B10  50E3               	movf	plusw1,w,c
  9870  003B12  203B               	addwfc	btemp,w,c
  9871  003B14  6E3B               	movwf	btemp,c
  9872  003B16  0EF7               	movlw	-9
  9873  003B18  0060  F0EF  FFE3   	movff	btemp,plusw1
  9874  003B1E                     l7787:
  9875                           
  9876                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9877                           ;stkvar	_w @ sp[(-17)+13]
  9878                           ;stkvar	_l @ sp[(-17)+7]
  9879  003B1E  50E1               	movf	fsr1l,w,c
  9880  003B20  0FF6               	addlw	-10
  9881  003B22  6ED9               	movwf	fsr2l,c
  9882  003B24  50E2               	movf	fsr1h,w,c
  9883  003B26  6EDA               	movwf	fsr2h,c
  9884  003B28  0EFF               	movlw	255
  9885  003B2A  22DA               	addwfc	fsr2h,f,c
  9886  003B2C  0EFC               	movlw	-4
  9887  003B2E  50E3               	movf	plusw1,w,c
  9888  003B30  5CDE               	subwf	postinc2,w,c
  9889  003B32  50DE               	movf	postinc2,w,c
  9890  003B34  0A80               	xorlw	128
  9891  003B36  6E3B               	movwf	btemp,c
  9892  003B38  0EFD               	movlw	-3
  9893  003B3A  50E3               	movf	plusw1,w,c
  9894  003B3C  0A80               	xorlw	128
  9895  003B3E  583B               	subwfb	btemp,w,c
  9896  003B40  A0D8               	btfss	status,0,c
  9897  003B42  D7CF               	goto	l7783
  9898  003B44                     u4730:
  9899                           
  9900                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9901                           ;stkvar	_i @ sp[(-17)+15]
  9902  003B44  0EFE               	movlw	-2
  9903  003B46  6AE3               	clrf	plusw1,c
  9904  003B48  0EFF               	movlw	-1
  9905  003B4A  6AE3               	clrf	plusw1,c
  9906                           
  9907                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9908  003B4C  D045               	goto	l7797
  9909  003B4E                     l7791:
  9910                           
  9911                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9912                           ;stkvar	_fp @ sp[(-17)+-2]
  9913  003B4E  0EED               	movlw	-19
  9914  003B50  006F FF8F FFE6     	movff	plusw1,postinc1
  9915  003B56  006F FF8F FFE6     	movff	plusw1,postinc1
  9916                           
  9917                           ;stkvar	_cp @ sp[(-19)+11]
  9918  003B5C  0EF8               	movlw	-8
  9919  003B5E  006F FF8F FFF6     	movff	plusw1,tblptrl
  9920  003B64  0EF9               	movlw	-7
  9921  003B66  006F FF8F FFF7     	movff	plusw1,tblptrh
  9922  003B6C  0E00               	movlw	low (__smallconst shr (0+16))
  9923  003B6E  6EF8               	movwf	tblptru,c
  9924  003B70  0E1F               	movlw	(high __ramtop+-1)
  9925  003B72  64F7               	cpfsgt	tblptrh,c
  9926  003B74  D003               	bra	u4747
  9927  003B76  0008               	tblrd		*
  9928  003B78  50F5               	movf	tablat,w,c
  9929  003B7A  D007               	bra	u4740
  9930  003B7C                     u4747:
  9931  003B7C  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9932  003B82  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9933  003B88  50EF               	movf	indf0,w,c
  9934  003B8A                     u4740:
  9935  003B8A  6EE6               	movwf	postinc1,c
  9936  003B8C  0E00               	movlw	0
  9937  003B8E  6EE6               	movwf	postinc1,c
  9938  003B90  EC97  F025         	call	_fputc	;wreg free
  9939                           
  9940                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9941                           ;stkvar	_cp @ sp[(-17)+11]
  9942  003B94  0EFA               	movlw	-6
  9943  003B96  50E3               	movf	plusw1,w,c
  9944  003B98  0F01               	addlw	1
  9945  003B9A  6E3B               	movwf	btemp,c
  9946  003B9C  0EFA               	movlw	-6
  9947  003B9E  0060  F0EF  FFE3   	movff	btemp,plusw1
  9948  003BA4  6A3B               	clrf	btemp,c
  9949  003BA6  0EFB               	movlw	-5
  9950  003BA8  50E3               	movf	plusw1,w,c
  9951  003BAA  203B               	addwfc	btemp,w,c
  9952  003BAC  6E3B               	movwf	btemp,c
  9953  003BAE  0EFB               	movlw	-5
  9954  003BB0  0060  F0EF  FFE3   	movff	btemp,plusw1
  9955                           
  9956                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9957                           ;stkvar	_i @ sp[(-17)+15]
  9958  003BB6  0EFE               	movlw	-2
  9959  003BB8  50E3               	movf	plusw1,w,c
  9960  003BBA  0F01               	addlw	1
  9961  003BBC  6E3B               	movwf	btemp,c
  9962  003BBE  0EFE               	movlw	-2
  9963  003BC0  0060  F0EF  FFE3   	movff	btemp,plusw1
  9964  003BC6  6A3B               	clrf	btemp,c
  9965  003BC8  0EFF               	movlw	-1
  9966  003BCA  50E3               	movf	plusw1,w,c
  9967  003BCC  203B               	addwfc	btemp,w,c
  9968  003BCE  6E3B               	movwf	btemp,c
  9969  003BD0  0EFF               	movlw	-1
  9970  003BD2  0060  F0EF  FFE3   	movff	btemp,plusw1
  9971  003BD8                     l7797:
  9972                           
  9973                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9974                           ;stkvar	_p @ sp[(-17)+9]
  9975                           ;stkvar	_i @ sp[(-17)+15]
  9976  003BD8  50E1               	movf	fsr1l,w,c
  9977  003BDA  0FFE               	addlw	-2
  9978  003BDC  6ED9               	movwf	fsr2l,c
  9979  003BDE  50E2               	movf	fsr1h,w,c
  9980  003BE0  6EDA               	movwf	fsr2h,c
  9981  003BE2  0EFF               	movlw	255
  9982  003BE4  22DA               	addwfc	fsr2h,f,c
  9983  003BE6  0EF8               	movlw	-8
  9984  003BE8  50E3               	movf	plusw1,w,c
  9985  003BEA  5CDE               	subwf	postinc2,w,c
  9986  003BEC  50DE               	movf	postinc2,w,c
  9987  003BEE  0A80               	xorlw	128
  9988  003BF0  6E3B               	movwf	btemp,c
  9989  003BF2  0EF9               	movlw	-7
  9990  003BF4  50E3               	movf	plusw1,w,c
  9991  003BF6  0A80               	xorlw	128
  9992  003BF8  583B               	subwfb	btemp,w,c
  9993  003BFA  A0D8               	btfss	status,0,c
  9994  003BFC  D7A8               	goto	l7791
  9995                           
  9996                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9997  003BFE  B024               	btfsc	_flags,0,c
  9998  003C00  D01F               	goto	l7805
  9999  003C02  D031               	goto	u4770
 10000  003C04                     l7801:
 10001                           
 10002                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10003                           ;stkvar	_fp @ sp[(-17)+-2]
 10004  003C04  0EED               	movlw	-19
 10005  003C06  006F FF8F FFE6     	movff	plusw1,postinc1
 10006  003C0C  006F FF8F FFE6     	movff	plusw1,postinc1
 10007  003C12  0E20               	movlw	32
 10008  003C14  6EE6               	movwf	postinc1,c
 10009  003C16  0E00               	movlw	0
 10010  003C18  6EE6               	movwf	postinc1,c
 10011  003C1A  EC97  F025         	call	_fputc	;wreg free
 10012                           
 10013                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10014                           ;stkvar	_l @ sp[(-17)+7]
 10015  003C1E  0EF6               	movlw	-10
 10016  003C20  50E3               	movf	plusw1,w,c
 10017  003C22  0F01               	addlw	1
 10018  003C24  6E3B               	movwf	btemp,c
 10019  003C26  0EF6               	movlw	-10
 10020  003C28  0060  F0EF  FFE3   	movff	btemp,plusw1
 10021  003C2E  6A3B               	clrf	btemp,c
 10022  003C30  0EF7               	movlw	-9
 10023  003C32  50E3               	movf	plusw1,w,c
 10024  003C34  203B               	addwfc	btemp,w,c
 10025  003C36  6E3B               	movwf	btemp,c
 10026  003C38  0EF7               	movlw	-9
 10027  003C3A  0060  F0EF  FFE3   	movff	btemp,plusw1
 10028  003C40                     l7805:
 10029                           
 10030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10031                           ;stkvar	_w @ sp[(-17)+13]
 10032                           ;stkvar	_l @ sp[(-17)+7]
 10033  003C40  50E1               	movf	fsr1l,w,c
 10034  003C42  0FF6               	addlw	-10
 10035  003C44  6ED9               	movwf	fsr2l,c
 10036  003C46  50E2               	movf	fsr1h,w,c
 10037  003C48  6EDA               	movwf	fsr2h,c
 10038  003C4A  0EFF               	movlw	255
 10039  003C4C  22DA               	addwfc	fsr2h,f,c
 10040  003C4E  0EFC               	movlw	-4
 10041  003C50  50E3               	movf	plusw1,w,c
 10042  003C52  5CDE               	subwf	postinc2,w,c
 10043  003C54  50DE               	movf	postinc2,w,c
 10044  003C56  0A80               	xorlw	128
 10045  003C58  6E3B               	movwf	btemp,c
 10046  003C5A  0EFD               	movlw	-3
 10047  003C5C  50E3               	movf	plusw1,w,c
 10048  003C5E  0A80               	xorlw	128
 10049  003C60  583B               	subwfb	btemp,w,c
 10050  003C62  A0D8               	btfss	status,0,c
 10051  003C64  D7CF               	goto	l7801
 10052  003C66                     u4770:
 10053                           
 10054                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 10055                           ;stkvar	_l @ sp[(-17)+7]
 10056  003C66  0EF6               	movlw	-10
 10057  003C68  006F FF8C  F03B    	movff	plusw1,btemp
 10058  003C6E  0EF7               	movlw	-9
 10059  003C70  006F FF8C  F03C    	movff	plusw1,btemp+1
 10060                           
 10061                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10062  003C76  0EEB               	movlw	235
 10063  003C78  26E1               	addwf	fsr1l,f,c
 10064  003C7A  0EFF               	movlw	255
 10065  003C7C  22E2               	addwfc	fsr1h,f,c
 10066  003C7E  0012               	return		;funcret
 10067  003C80                     __end_of_stoa:
 10068                           	opt callstack 0
 10069                           
 10070 ;; *************** function _dtoa *****************
 10071 ;; Defined at:
 10072 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10075 ;;		 -> f(5), NULL(0), 
 10076 ;;  d               8  [STACK] long long 
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;  n               8  [STACK] long long 
 10079 ;;  i               2  [STACK] int 
 10080 ;;  s               2  [STACK] int 
 10081 ;;  w               2  [STACK] int 
 10082 ;;  p               2  [STACK] int 
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  2  [STACK] int 
 10085 ;; Registers used:
 10086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10087 ;; Tracked objects:
 10088 ;;		On entry : 0/0
 10089 ;;		On exit  : 0/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10096 ;;Total ram usage:        0 bytes
 10097 ;; Hardware stack levels used:    1
 10098 ;; Hardware stack levels required when called:    8
 10099 ;; This function calls:
 10100 ;;		___aodiv
 10101 ;;		___aomod
 10102 ;;		_abs
 10103 ;;		_pad
 10104 ;; This function is called by:
 10105 ;;		_vfpfcnvrt
 10106 ;; This function uses a reentrant model
 10107 ;;
 10108                           
 10109                           	psect	text42
 10110  002F50                     __ptext42:
 10111                           	opt callstack 0
 10112  002F50                     _dtoa:
 10113                           	opt callstack 0
 10114                           
 10115                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 10116  002F50  0E12               	movlw	18
 10117  002F52  26E1               	addwf	fsr1l,f,c
 10118  002F54  0E00               	movlw	0
 10119  002F56  22E2               	addwfc	fsr1h,f,c
 10120                           
 10121                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 10122                           ;stkvar	_d @ sp[(-18)+-10]
 10123                           
 10124                           ;incstack = 0
 10125  002F58  0EE4               	movlw	228
 10126  002F5A  24E1               	addwf	fsr1l,w,c
 10127  002F5C  6ED9               	movwf	fsr2l,c
 10128  002F5E  0EFF               	movlw	255
 10129  002F60  20E2               	addwfc	fsr1h,w,c
 10130  002F62  6EDA               	movwf	fsr2h,c
 10131                           
 10132                           ;stkvar	_n @ sp[(-18)+2]
 10133  002F64  0E08               	movlw	8
 10134  002F66  6E3B               	movwf	btemp,c
 10135  002F68  0EF0               	movlw	-16
 10136  002F6A                     us451999:
 10137  002F6A  006F FF7B FFE3     	movff	postinc2,plusw1
 10138  002F70  28E8               	incf	wreg,w,c
 10139  002F72  2E3B               	decfsz	btemp,f,c
 10140  002F74  D7FA               	bra	us451999
 10141                           
 10142                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 10143                           ;stkvar	_n @ sp[(-18)+2]
 10144  002F76  0EF7               	movlw	-9
 10145  002F78  AEE3               	btfss	plusw1,7,c
 10146  002F7A  D002               	goto	u4520
 10147  002F7C  0E01               	movlw	1
 10148  002F7E  D001               	goto	u4530
 10149  002F80                     u4520:
 10150  002F80  0E00               	movlw	0
 10151  002F82                     u4530:
 10152  002F82  6E45               	movwf	btemp+10,c
 10153  002F84  6A46               	clrf	btemp+11,c
 10154                           
 10155                           ;stkvar	_s @ sp[(-18)+12]
 10156  002F86  0EFA               	movlw	-6
 10157  002F88  0060  F117  FFE3   	movff	btemp+10,plusw1
 10158  002F8E  0EFB               	movlw	-5
 10159  002F90  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10160                           
 10161                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 10162                           ;stkvar	_s @ sp[(-18)+12]
 10163  002F96  0EFA               	movlw	-6
 10164  002F98  006F FF8C  F03B    	movff	plusw1,btemp
 10165  002F9E  0EFB               	movlw	-5
 10166  002FA0  50E3               	movf	plusw1,w,c
 10167  002FA2  103B               	iorwf	btemp,w,c
 10168  002FA4  B4D8               	btfsc	status,2,c
 10169  002FA6  D025               	goto	u4550
 10170                           
 10171                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 10172                           ;stkvar	_n @ sp[(-18)+2]
 10173                           ;stkvar	_n @ sp[(-18)+2]
 10174  002FA8  0EF0               	movlw	-16
 10175  002FAA  6CE3               	negf	plusw1,c
 10176  002FAC  0EF1               	movlw	-15
 10177  002FAE  1EE3               	comf	plusw1,f,c
 10178  002FB0  0EF2               	movlw	-14
 10179  002FB2  1EE3               	comf	plusw1,f,c
 10180  002FB4  0EF3               	movlw	-13
 10181  002FB6  1EE3               	comf	plusw1,f,c
 10182  002FB8  0EF4               	movlw	-12
 10183  002FBA  1EE3               	comf	plusw1,f,c
 10184  002FBC  0EF5               	movlw	-11
 10185  002FBE  1EE3               	comf	plusw1,f,c
 10186  002FC0  0EF6               	movlw	-10
 10187  002FC2  1EE3               	comf	plusw1,f,c
 10188  002FC4  0EF7               	movlw	-9
 10189  002FC6  1EE3               	comf	plusw1,f,c
 10190  002FC8  E314               	bnc	u4550
 10191  002FCA  0EF1               	movlw	-15
 10192  002FCC  2AE3               	incf	plusw1,f,c
 10193  002FCE  E311               	bnc	u4550
 10194  002FD0  0EF2               	movlw	-14
 10195  002FD2  2AE3               	incf	plusw1,f,c
 10196  002FD4  E30E               	bnc	u4550
 10197  002FD6  0EF3               	movlw	-13
 10198  002FD8  2AE3               	incf	plusw1,f,c
 10199  002FDA  E30B               	bnc	u4550
 10200  002FDC  0EF4               	movlw	-12
 10201  002FDE  2AE3               	incf	plusw1,f,c
 10202  002FE0  E308               	bnc	u4550
 10203  002FE2  0EF5               	movlw	-11
 10204  002FE4  2AE3               	incf	plusw1,f,c
 10205  002FE6  E305               	bnc	u4550
 10206  002FE8  0EF6               	movlw	-10
 10207  002FEA  2AE3               	incf	plusw1,f,c
 10208  002FEC  E302               	bnc	u4550
 10209  002FEE  0EF7               	movlw	-9
 10210  002FF0  2AE3               	incf	plusw1,f,c
 10211  002FF2                     u4550:
 10212                           
 10213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 10214  002FF2  AE23               	btfss	_prec+1,7,c
 10215                           
 10216                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 10217  002FF4  9224               	bcf	_flags,1,c
 10218                           
 10219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 10220  002FF6  BE23               	btfsc	_prec+1,7,c
 10221  002FF8  D005               	goto	u4570
 10222  002FFA  5023               	movf	_prec+1,w,c
 10223  002FFC  E110               	bnz	l7709
 10224  002FFE  0422               	decf	_prec,w,c
 10225  003000  B0D8               	btfsc	status,0,c
 10226  003002  D00D               	goto	l7709
 10227  003004                     u4570:
 10228  003004  0E01               	movlw	1
 10229  003006  6E45               	movwf	btemp+10,c
 10230  003008  0E00               	movlw	0
 10231  00300A  6E46               	movwf	btemp+11,c
 10232                           
 10233                           ;stkvar	_p @ sp[(-18)+16]
 10234  00300C  0EFE               	movlw	-2
 10235  00300E  0060  F117  FFE3   	movff	btemp+10,plusw1
 10236  003014  0EFF               	movlw	-1
 10237  003016  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10238  00301C  D008               	goto	l1805
 10239  00301E                     l7709:
 10240                           
 10241                           ;stkvar	_p @ sp[(-18)+16]
 10242  00301E  0EFE               	movlw	-2
 10243  003020  0060  F08B  FFE3   	movff	_prec,plusw1
 10244  003026  0EFF               	movlw	-1
 10245  003028  0060  F08F  FFE3   	movff	_prec+1,plusw1
 10246  00302E                     l1805:
 10247                           
 10248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 10249                           ;stkvar	_w @ sp[(-18)+14]
 10250  00302E  0EFC               	movlw	-4
 10251  003030  0060  F083  FFE3   	movff	_width,plusw1
 10252  003036  0EFD               	movlw	-3
 10253  003038  0060  F087  FFE3   	movff	_width+1,plusw1
 10254                           
 10255                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 10256                           ;stkvar	_s @ sp[(-18)+12]
 10257  00303E  0EFA               	movlw	-6
 10258  003040  006F FF8C  F03B    	movff	plusw1,btemp
 10259  003046  0EFB               	movlw	-5
 10260  003048  50E3               	movf	plusw1,w,c
 10261  00304A  103B               	iorwf	btemp,w,c
 10262  00304C  A4D8               	btfss	status,2,c
 10263  00304E  D002               	goto	u4590
 10264  003050  A424               	btfss	_flags,2,c
 10265  003052  D00A               	goto	l7717
 10266  003054                     u4590:
 10267                           
 10268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 10269                           ;stkvar	_w @ sp[(-18)+14]
 10270  003054  50E1               	movf	fsr1l,w,c
 10271  003056  0FFC               	addlw	-4
 10272  003058  6ED9               	movwf	fsr2l,c
 10273  00305A  50E2               	movf	fsr1h,w,c
 10274  00305C  6EDA               	movwf	fsr2h,c
 10275  00305E  0EFF               	movlw	255
 10276  003060  22DA               	addwfc	fsr2h,f,c
 10277  003062  06DE               	decf	postinc2,f,c
 10278  003064  0E00               	movlw	0
 10279  003066  5ADD               	subwfb	postdec2,f,c
 10280  003068                     l7717:
 10281                           
 10282                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 10283  003068  0E1F               	movlw	31
 10284  00306A  6E45               	movwf	btemp+10,c
 10285  00306C  0E00               	movlw	0
 10286  00306E  6E46               	movwf	btemp+11,c
 10287                           
 10288                           ;stkvar	_i @ sp[(-18)+10]
 10289  003070  0EF8               	movlw	-8
 10290  003072  0060  F117  FFE3   	movff	btemp+10,plusw1
 10291  003078  0EF9               	movlw	-7
 10292  00307A  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10293                           
 10294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 10295  003080  0101               	movlb	1	; () banked
 10296  003082  6BEC               	clrf	(_dbuf+31)& (0+255),b
 10297                           
 10298                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10299  003084  D109               	goto	l7731
 10300  003086                     l7721:
 10301                           
 10302                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 10303                           ;stkvar	_i @ sp[(-18)+10]
 10304  003086  50E1               	movf	fsr1l,w,c
 10305  003088  0FF8               	addlw	-8
 10306  00308A  6ED9               	movwf	fsr2l,c
 10307  00308C  50E2               	movf	fsr1h,w,c
 10308  00308E  6EDA               	movwf	fsr2h,c
 10309  003090  0EFF               	movlw	255
 10310  003092  22DA               	addwfc	fsr2h,f,c
 10311  003094  06DE               	decf	postinc2,f,c
 10312  003096  0E00               	movlw	0
 10313  003098  5ADD               	subwfb	postdec2,f,c
 10314                           
 10315                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 10316  00309A  0E0A               	movlw	10
 10317  00309C  6EE6               	movwf	postinc1,c
 10318  00309E  0E00               	movlw	0
 10319  0030A0  6EE6               	movwf	postinc1,c
 10320  0030A2  0E00               	movlw	0
 10321  0030A4  6EE6               	movwf	postinc1,c
 10322  0030A6  0E00               	movlw	0
 10323  0030A8  6EE6               	movwf	postinc1,c
 10324  0030AA  0E00               	movlw	0
 10325  0030AC  6EE6               	movwf	postinc1,c
 10326  0030AE  0E00               	movlw	0
 10327  0030B0  6EE6               	movwf	postinc1,c
 10328  0030B2  0E00               	movlw	0
 10329  0030B4  6EE6               	movwf	postinc1,c
 10330  0030B6  0E00               	movlw	0
 10331  0030B8  6EE6               	movwf	postinc1,c
 10332                           
 10333                           ;stkvar	_n @ sp[(-26)+2]
 10334  0030BA  50E1               	movf	fsr1l,w,c
 10335  0030BC  0FE8               	addlw	-24
 10336  0030BE  6ED9               	movwf	fsr2l,c
 10337  0030C0  50E2               	movf	fsr1h,w,c
 10338  0030C2  6EDA               	movwf	fsr2h,c
 10339  0030C4  0EFF               	movlw	255
 10340  0030C6  22DA               	addwfc	fsr2h,f,c
 10341  0030C8  006F FF7B FFE6     	movff	postinc2,postinc1
 10342  0030CE  006F FF7B FFE6     	movff	postinc2,postinc1
 10343  0030D4  006F FF7B FFE6     	movff	postinc2,postinc1
 10344  0030DA  006F FF7B FFE6     	movff	postinc2,postinc1
 10345  0030E0  006F FF7B FFE6     	movff	postinc2,postinc1
 10346  0030E6  006F FF7B FFE6     	movff	postinc2,postinc1
 10347  0030EC  006F FF7B FFE6     	movff	postinc2,postinc1
 10348  0030F2  006F FF7B FFE6     	movff	postinc2,postinc1
 10349  0030F8  EC25  F023         	call	___aomod	;wreg free
 10350  0030FC  52E5               	movf	postdec1,f,c
 10351  0030FE  006F FF9C  F052    	movff	indf1,btemp+23
 10352  003104  52E5               	movf	postdec1,f,c
 10353  003106  006F FF9C  F051    	movff	indf1,btemp+22
 10354  00310C  52E5               	movf	postdec1,f,c
 10355  00310E  006F FF9C  F050    	movff	indf1,btemp+21
 10356  003114  52E5               	movf	postdec1,f,c
 10357  003116  006F FF9C  F04F    	movff	indf1,btemp+20
 10358  00311C  52E5               	movf	postdec1,f,c
 10359  00311E  006F FF9C  F04E    	movff	indf1,btemp+19
 10360  003124  52E5               	movf	postdec1,f,c
 10361  003126  006F FF9C  F04D    	movff	indf1,btemp+18
 10362  00312C  52E5               	movf	postdec1,f,c
 10363  00312E  006F FF9C  F04C    	movff	indf1,btemp+17
 10364  003134  52E5               	movf	postdec1,f,c
 10365  003136  006F FF9C  F04B    	movff	indf1,btemp+16
 10366  00313C  0EF8               	movlw	248
 10367  00313E  26E1               	addwf	fsr1l,f,c
 10368  003140  0EFF               	movlw	255
 10369  003142  22E2               	addwfc	fsr1h,f,c
 10370  003144  0060  F12C  F045   	movff	btemp+16,btemp+10
 10371  00314A  0060  F130  F046   	movff	btemp+17,btemp+11
 10372  003150  0060  F117  FFE6   	movff	btemp+10,postinc1
 10373  003156  0060  F11B  FFE6   	movff	btemp+11,postinc1
 10374  00315C  EC61  F02C         	call	_abs	;wreg free
 10375  003160  0E30               	movlw	48
 10376  003162  263B               	addwf	btemp,f,c
 10377                           
 10378                           ;stkvar	_i @ sp[(-18)+10]
 10379  003164  0EF8               	movlw	-8
 10380  003166  006F FF8C  F045    	movff	plusw1,btemp+10
 10381  00316C  0EF9               	movlw	-7
 10382  00316E  006F FF8C  F046    	movff	plusw1,btemp+11
 10383  003174  0ECD               	movlw	low _dbuf
 10384  003176  2445               	addwf	btemp+10,w,c
 10385  003178  6ED9               	movwf	fsr2l,c
 10386  00317A  0E01               	movlw	high _dbuf
 10387  00317C  2046               	addwfc	btemp+11,w,c
 10388  00317E  6EDA               	movwf	fsr2h,c
 10389  003180  0060  F0EF  FFDF   	movff	btemp,indf2
 10390                           
 10391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 10392                           ;stkvar	_p @ sp[(-18)+16]
 10393  003186  50E1               	movf	fsr1l,w,c
 10394  003188  0FFE               	addlw	-2
 10395  00318A  6ED9               	movwf	fsr2l,c
 10396  00318C  50E2               	movf	fsr1h,w,c
 10397  00318E  6EDA               	movwf	fsr2h,c
 10398  003190  0EFF               	movlw	255
 10399  003192  22DA               	addwfc	fsr2h,f,c
 10400  003194  06DE               	decf	postinc2,f,c
 10401  003196  0E00               	movlw	0
 10402  003198  5ADD               	subwfb	postdec2,f,c
 10403                           
 10404                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 10405                           ;stkvar	_w @ sp[(-18)+14]
 10406  00319A  50E1               	movf	fsr1l,w,c
 10407  00319C  0FFC               	addlw	-4
 10408  00319E  6ED9               	movwf	fsr2l,c
 10409  0031A0  50E2               	movf	fsr1h,w,c
 10410  0031A2  6EDA               	movwf	fsr2h,c
 10411  0031A4  0EFF               	movlw	255
 10412  0031A6  22DA               	addwfc	fsr2h,f,c
 10413  0031A8  06DE               	decf	postinc2,f,c
 10414  0031AA  0E00               	movlw	0
 10415  0031AC  5ADD               	subwfb	postdec2,f,c
 10416                           
 10417                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 10418  0031AE  0E0A               	movlw	10
 10419  0031B0  6EE6               	movwf	postinc1,c
 10420  0031B2  0E00               	movlw	0
 10421  0031B4  6EE6               	movwf	postinc1,c
 10422  0031B6  0E00               	movlw	0
 10423  0031B8  6EE6               	movwf	postinc1,c
 10424  0031BA  0E00               	movlw	0
 10425  0031BC  6EE6               	movwf	postinc1,c
 10426  0031BE  0E00               	movlw	0
 10427  0031C0  6EE6               	movwf	postinc1,c
 10428  0031C2  0E00               	movlw	0
 10429  0031C4  6EE6               	movwf	postinc1,c
 10430  0031C6  0E00               	movlw	0
 10431  0031C8  6EE6               	movwf	postinc1,c
 10432  0031CA  0E00               	movlw	0
 10433  0031CC  6EE6               	movwf	postinc1,c
 10434                           
 10435                           ;stkvar	_n @ sp[(-26)+2]
 10436  0031CE  50E1               	movf	fsr1l,w,c
 10437  0031D0  0FE8               	addlw	-24
 10438  0031D2  6ED9               	movwf	fsr2l,c
 10439  0031D4  50E2               	movf	fsr1h,w,c
 10440  0031D6  6EDA               	movwf	fsr2h,c
 10441  0031D8  0EFF               	movlw	255
 10442  0031DA  22DA               	addwfc	fsr2h,f,c
 10443  0031DC  006F FF7B FFE6     	movff	postinc2,postinc1
 10444  0031E2  006F FF7B FFE6     	movff	postinc2,postinc1
 10445  0031E8  006F FF7B FFE6     	movff	postinc2,postinc1
 10446  0031EE  006F FF7B FFE6     	movff	postinc2,postinc1
 10447  0031F4  006F FF7B FFE6     	movff	postinc2,postinc1
 10448  0031FA  006F FF7B FFE6     	movff	postinc2,postinc1
 10449  003200  006F FF7B FFE6     	movff	postinc2,postinc1
 10450  003206  006F FF7B FFE6     	movff	postinc2,postinc1
 10451  00320C  EC90  F01F         	call	___aodiv	;wreg free
 10452  003210  52E5               	movf	postdec1,f,c
 10453  003212  006F FF9C  F052    	movff	indf1,btemp+23
 10454  003218  52E5               	movf	postdec1,f,c
 10455  00321A  006F FF9C  F051    	movff	indf1,btemp+22
 10456  003220  52E5               	movf	postdec1,f,c
 10457  003222  006F FF9C  F050    	movff	indf1,btemp+21
 10458  003228  52E5               	movf	postdec1,f,c
 10459  00322A  006F FF9C  F04F    	movff	indf1,btemp+20
 10460  003230  52E5               	movf	postdec1,f,c
 10461  003232  006F FF9C  F04E    	movff	indf1,btemp+19
 10462  003238  52E5               	movf	postdec1,f,c
 10463  00323A  006F FF9C  F04D    	movff	indf1,btemp+18
 10464  003240  52E5               	movf	postdec1,f,c
 10465  003242  006F FF9C  F04C    	movff	indf1,btemp+17
 10466  003248  52E5               	movf	postdec1,f,c
 10467  00324A  006F FF9C  F04B    	movff	indf1,btemp+16
 10468  003250  0EF8               	movlw	248
 10469  003252  26E1               	addwf	fsr1l,f,c
 10470  003254  0EFF               	movlw	255
 10471  003256  22E2               	addwfc	fsr1h,f,c
 10472                           
 10473                           ;stkvar	_n @ sp[(-18)+2]
 10474  003258  0EF0               	movlw	-16
 10475  00325A  0060  F12F  FFE3   	movff	btemp+16,plusw1
 10476  003260  0EF1               	movlw	-15
 10477  003262  0060  F133  FFE3   	movff	btemp+17,plusw1
 10478  003268  0EF2               	movlw	-14
 10479  00326A  0060  F137  FFE3   	movff	btemp+18,plusw1
 10480  003270  0EF3               	movlw	-13
 10481  003272  0060  F13B  FFE3   	movff	btemp+19,plusw1
 10482  003278  0EF4               	movlw	-12
 10483  00327A  0060  F13F  FFE3   	movff	btemp+20,plusw1
 10484  003280  0EF5               	movlw	-11
 10485  003282  0060  F143  FFE3   	movff	btemp+21,plusw1
 10486  003288  0EF6               	movlw	-10
 10487  00328A  0060  F147  FFE3   	movff	btemp+22,plusw1
 10488  003290  0EF7               	movlw	-9
 10489  003292  0060  F14B  FFE3   	movff	btemp+23,plusw1
 10490  003298                     l7731:
 10491                           
 10492                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10493                           ;stkvar	_i @ sp[(-18)+10]
 10494  003298  0EF9               	movlw	-7
 10495  00329A  BEE3               	btfsc	plusw1,7,c
 10496  00329C  D036               	goto	u4640
 10497  00329E  0EF9               	movlw	-7
 10498  0032A0  50E3               	movf	plusw1,w,c
 10499  0032A2  E104               	bnz	u4600
 10500  0032A4  0EF8               	movlw	-8
 10501  0032A6  04E3               	decf	plusw1,w,c
 10502  0032A8  A0D8               	btfss	status,0,c
 10503  0032AA  D02F               	goto	u4640
 10504  0032AC                     u4600:
 10505                           
 10506                           ;stkvar	_n @ sp[(-18)+2]
 10507  0032AC  0EF0               	movlw	-16
 10508  0032AE  50E3               	movf	plusw1,w,c
 10509  0032B0  E115               	bnz	u4611
 10510  0032B2  0EF1               	movlw	-15
 10511  0032B4  50E3               	movf	plusw1,w,c
 10512  0032B6  E112               	bnz	u4611
 10513  0032B8  0EF2               	movlw	-14
 10514  0032BA  50E3               	movf	plusw1,w,c
 10515  0032BC  E10F               	bnz	u4611
 10516  0032BE  0EF3               	movlw	-13
 10517  0032C0  50E3               	movf	plusw1,w,c
 10518  0032C2  E10C               	bnz	u4611
 10519  0032C4  0EF4               	movlw	-12
 10520  0032C6  50E3               	movf	plusw1,w,c
 10521  0032C8  E109               	bnz	u4611
 10522  0032CA  0EF5               	movlw	-11
 10523  0032CC  50E3               	movf	plusw1,w,c
 10524  0032CE  E106               	bnz	u4611
 10525  0032D0  0EF6               	movlw	-10
 10526  0032D2  50E3               	movf	plusw1,w,c
 10527  0032D4  E103               	bnz	u4611
 10528  0032D6  0EF7               	movlw	-9
 10529  0032D8  50E3               	movf	plusw1,w,c
 10530  0032DA  A4D8               	btfss	status,2,c
 10531  0032DC                     u4611:
 10532  0032DC  D6D4               	goto	l7721
 10533                           
 10534                           ;stkvar	_p @ sp[(-18)+16]
 10535  0032DE  0EFF               	movlw	-1
 10536  0032E0  BEE3               	btfsc	plusw1,7,c
 10537  0032E2  D007               	goto	u4620
 10538  0032E4  0EFF               	movlw	-1
 10539  0032E6  50E3               	movf	plusw1,w,c
 10540  0032E8  E103               	bnz	u4621
 10541  0032EA  0EFE               	movlw	-2
 10542  0032EC  04E3               	decf	plusw1,w,c
 10543  0032EE  B0D8               	btfsc	status,0,c
 10544  0032F0                     u4621:
 10545  0032F0  D6CA               	goto	l7721
 10546  0032F2                     u4620:
 10547                           
 10548                           ;stkvar	_w @ sp[(-18)+14]
 10549  0032F2  0EFD               	movlw	-3
 10550  0032F4  BEE3               	btfsc	plusw1,7,c
 10551  0032F6  D009               	goto	u4640
 10552  0032F8  0EFD               	movlw	-3
 10553  0032FA  50E3               	movf	plusw1,w,c
 10554  0032FC  E104               	bnz	u4630
 10555  0032FE  0EFC               	movlw	-4
 10556  003300  04E3               	decf	plusw1,w,c
 10557  003302  A0D8               	btfss	status,0,c
 10558  003304  D002               	goto	u4640
 10559  003306                     u4630:
 10560  003306  B224               	btfsc	_flags,1,c
 10561  003308  D6BE               	goto	l7721
 10562  00330A                     u4640:
 10563                           
 10564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 10565                           ;stkvar	_s @ sp[(-18)+12]
 10566  00330A  0EFA               	movlw	-6
 10567  00330C  006F FF8C  F03B    	movff	plusw1,btemp
 10568  003312  0EFB               	movlw	-5
 10569  003314  50E3               	movf	plusw1,w,c
 10570  003316  103B               	iorwf	btemp,w,c
 10571  003318  A4D8               	btfss	status,2,c
 10572  00331A  D002               	goto	u4660
 10573  00331C  A424               	btfss	_flags,2,c
 10574  00331E  D033               	goto	l7755
 10575  003320                     u4660:
 10576                           
 10577                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 10578                           ;stkvar	_i @ sp[(-18)+10]
 10579  003320  50E1               	movf	fsr1l,w,c
 10580  003322  0FF8               	addlw	-8
 10581  003324  6ED9               	movwf	fsr2l,c
 10582  003326  50E2               	movf	fsr1h,w,c
 10583  003328  6EDA               	movwf	fsr2h,c
 10584  00332A  0EFF               	movlw	255
 10585  00332C  22DA               	addwfc	fsr2h,f,c
 10586  00332E  06DE               	decf	postinc2,f,c
 10587  003330  0E00               	movlw	0
 10588  003332  5ADD               	subwfb	postdec2,f,c
 10589                           
 10590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 10591                           ;stkvar	_s @ sp[(-18)+12]
 10592  003334  0EFA               	movlw	-6
 10593  003336  006F FF8C  F03B    	movff	plusw1,btemp
 10594  00333C  0EFB               	movlw	-5
 10595  00333E  50E3               	movf	plusw1,w,c
 10596  003340  103B               	iorwf	btemp,w,c
 10597  003342  A4D8               	btfss	status,2,c
 10598  003344  D002               	goto	l7751
 10599  003346  0E2B               	movlw	43
 10600  003348  D001               	goto	L21
 10601  00334A                     l7751:
 10602  00334A  0E2D               	movlw	45
 10603  00334C                     L21:
 10604  00334C  6E45               	movwf	btemp+10,c
 10605  00334E  0E00               	movlw	0
 10606  003350  6E46               	movwf	btemp+11,c
 10607                           
 10608                           ;stkvar	_dtoa$3846 @ sp[(-18)+0]
 10609  003352  0EEE               	movlw	-18
 10610  003354  0060  F117  FFE3   	movff	btemp+10,plusw1
 10611  00335A  0EEF               	movlw	-17
 10612  00335C  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10613                           
 10614                           ;stkvar	_dtoa$3846 @ sp[(-18)+0]
 10615                           ;stkvar	_i @ sp[(-18)+10]
 10616  003362  0EF8               	movlw	-8
 10617  003364  006F FF8C  F045    	movff	plusw1,btemp+10
 10618  00336A  0EF9               	movlw	-7
 10619  00336C  006F FF8C  F046    	movff	plusw1,btemp+11
 10620  003372  0ECD               	movlw	low _dbuf
 10621  003374  2445               	addwf	btemp+10,w,c
 10622  003376  6ED9               	movwf	fsr2l,c
 10623  003378  0E01               	movlw	high _dbuf
 10624  00337A  2046               	addwfc	btemp+11,w,c
 10625  00337C  6EDA               	movwf	fsr2h,c
 10626  00337E  0EEE               	movlw	-18
 10627  003380  006F FF8F FFDF     	movff	plusw1,indf2
 10628  003386                     l7755:
 10629                           
 10630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 10631                           ;stkvar	_w @ sp[(-18)+14]
 10632  003386  0EFC               	movlw	-4
 10633  003388  006F FF8F FFE6     	movff	plusw1,postinc1
 10634  00338E  006F FF8F FFE6     	movff	plusw1,postinc1
 10635                           
 10636                           ;stkvar	_i @ sp[(-20)+10]
 10637  003394  0ECD               	movlw	low _dbuf
 10638  003396  6E45               	movwf	btemp+10,c
 10639  003398  0E01               	movlw	high _dbuf
 10640  00339A  6E46               	movwf	btemp+11,c
 10641  00339C  0EF6               	movlw	-10
 10642  00339E  50E3               	movf	plusw1,w,c
 10643  0033A0  2645               	addwf	btemp+10,f,c
 10644  0033A2  0EF7               	movlw	-9
 10645  0033A4  50E3               	movf	plusw1,w,c
 10646  0033A6  2246               	addwfc	btemp+11,f,c
 10647  0033A8  0060  F117  FFE6   	movff	btemp+10,postinc1
 10648  0033AE  0060  F11B  FFE6   	movff	btemp+11,postinc1
 10649                           
 10650                           ;stkvar	_fp @ sp[(-22)+-2]
 10651  0033B4  0EE8               	movlw	-24
 10652  0033B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10653  0033BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10654  0033C2  EC0D  F025         	call	_pad	;wreg free
 10655                           
 10656                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 10657  0033C6  0EE4               	movlw	228
 10658  0033C8  26E1               	addwf	fsr1l,f,c
 10659  0033CA  0EFF               	movlw	255
 10660  0033CC  22E2               	addwfc	fsr1h,f,c
 10661  0033CE  0012               	return		;funcret
 10662  0033D0                     __end_of_dtoa:
 10663                           	opt callstack 0
 10664                           
 10665 ;; *************** function _abs *****************
 10666 ;; Defined at:
 10667 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 10668 ;; Parameters:    Size  Location     Type
 10669 ;;  a               2  [STACK] int 
 10670 ;; Auto vars:     Size  Location     Type
 10671 ;;		None
 10672 ;; Return value:  Size  Location     Type
 10673 ;;                  2  [STACK] int 
 10674 ;; Registers used:
 10675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 10676 ;; Tracked objects:
 10677 ;;		On entry : 0/1
 10678 ;;		On exit  : 0/0
 10679 ;;		Unchanged: 0/0
 10680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10685 ;;Total ram usage:        0 bytes
 10686 ;; Hardware stack levels used:    1
 10687 ;; Hardware stack levels required when called:    3
 10688 ;; This function calls:
 10689 ;;		Nothing
 10690 ;; This function is called by:
 10691 ;;		_dtoa
 10692 ;; This function uses a reentrant model
 10693 ;;
 10694                           
 10695                           	psect	text43
 10696  0058C2                     __ptext43:
 10697                           	opt callstack 0
 10698  0058C2                     _abs:
 10699                           	opt callstack 23
 10700                           
 10701                           ;stkvar	_a @ sp[(0)+-2]
 10702                           
 10703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10704                           ;incstack = 0
 10705  0058C2  0EFF               	movlw	-1
 10706  0058C4  BEE3               	btfsc	plusw1,7,c
 10707  0058C6  D007               	goto	u2390
 10708  0058C8  0EFF               	movlw	-1
 10709  0058CA  50E3               	movf	plusw1,w,c
 10710  0058CC  E112               	bnz	l5357
 10711  0058CE  0EFE               	movlw	-2
 10712  0058D0  04E3               	decf	plusw1,w,c
 10713  0058D2  B0D8               	btfsc	status,0,c
 10714  0058D4  D00E               	goto	l5357
 10715  0058D6                     u2390:
 10716                           
 10717                           ;stkvar	_a @ sp[(0)+-2]
 10718  0058D6  0EFE               	movlw	-2
 10719  0058D8  006F FF8C  F03B    	movff	plusw1,btemp
 10720  0058DE  1E3B               	comf	btemp,f,c
 10721  0058E0  0EFF               	movlw	-1
 10722  0058E2  006F FF8C  F03C    	movff	plusw1,btemp+1
 10723  0058E8  1E3C               	comf	btemp+1,f,c
 10724  0058EA  2A3B               	incf	btemp,f,c
 10725  0058EC  B4D8               	btfsc	status,2,c
 10726  0058EE  2A3C               	incf	btemp+1,f,c
 10727  0058F0  D008               	goto	l2546
 10728  0058F2                     l5357:
 10729                           
 10730                           ;stkvar	_a @ sp[(0)+-2]
 10731  0058F2  0EFE               	movlw	-2
 10732  0058F4  006F FF8C  F03B    	movff	plusw1,btemp
 10733  0058FA  0EFF               	movlw	-1
 10734  0058FC  006F FF8C  F03C    	movff	plusw1,btemp+1
 10735  005902                     l2546:
 10736                           
 10737                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 10738  005902  52E5               	movf	postdec1,f,c
 10739  005904  52E5               	movf	postdec1,f,c
 10740  005906  0012               	return		;funcret
 10741  005908                     __end_of_abs:
 10742                           	opt callstack 0
 10743                           
 10744 ;; *************** function ___aomod *****************
 10745 ;; Defined at:
 10746 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  dividend        8  [STACK] long long 
 10749 ;;  divisor         8  [STACK] long long 
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;  sign            1  [STACK] unsigned char 
 10752 ;;  counter         1  [STACK] unsigned char 
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  8  [STACK] long long 
 10755 ;; Registers used:
 10756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/1
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10766 ;;Total ram usage:        0 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; Hardware stack levels required when called:    3
 10769 ;; This function calls:
 10770 ;;		Nothing
 10771 ;; This function is called by:
 10772 ;;		_dtoa
 10773 ;; This function uses a reentrant model
 10774 ;;
 10775                           
 10776                           	psect	text44
 10777  00464A                     __ptext44:
 10778                           	opt callstack 0
 10779  00464A                     ___aomod:
 10780                           	opt callstack 0
 10781                           
 10782                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10783  00464A  52E6               	movf	postinc1,f,c
 10784  00464C  52E6               	movf	postinc1,f,c
 10785                           
 10786                           ;stkvar	_sign @ sp[(-2)+0]
 10787                           
 10788                           ;incstack = 0
 10789  00464E  0EFE               	movlw	-2
 10790  004650  6AE3               	clrf	plusw1,c
 10791                           
 10792                           ;stkvar	_dividend @ sp[(-2)+-8]
 10793  004652  0EFD               	movlw	-3
 10794  004654  AEE3               	btfss	plusw1,7,c
 10795  004656  D028               	goto	l5413
 10796                           
 10797                           ;stkvar	_dividend @ sp[(-2)+-8]
 10798                           ;stkvar	_dividend @ sp[(-2)+-8]
 10799  004658  0EF6               	movlw	-10
 10800  00465A  6CE3               	negf	plusw1,c
 10801  00465C  0EF7               	movlw	-9
 10802  00465E  1EE3               	comf	plusw1,f,c
 10803  004660  0EF8               	movlw	-8
 10804  004662  1EE3               	comf	plusw1,f,c
 10805  004664  0EF9               	movlw	-7
 10806  004666  1EE3               	comf	plusw1,f,c
 10807  004668  0EFA               	movlw	-6
 10808  00466A  1EE3               	comf	plusw1,f,c
 10809  00466C  0EFB               	movlw	-5
 10810  00466E  1EE3               	comf	plusw1,f,c
 10811  004670  0EFC               	movlw	-4
 10812  004672  1EE3               	comf	plusw1,f,c
 10813  004674  0EFD               	movlw	-3
 10814  004676  1EE3               	comf	plusw1,f,c
 10815  004678  E314               	bnc	u2530
 10816  00467A  0EF7               	movlw	-9
 10817  00467C  2AE3               	incf	plusw1,f,c
 10818  00467E  E311               	bnc	u2530
 10819  004680  0EF8               	movlw	-8
 10820  004682  2AE3               	incf	plusw1,f,c
 10821  004684  E30E               	bnc	u2530
 10822  004686  0EF9               	movlw	-7
 10823  004688  2AE3               	incf	plusw1,f,c
 10824  00468A  E30B               	bnc	u2530
 10825  00468C  0EFA               	movlw	-6
 10826  00468E  2AE3               	incf	plusw1,f,c
 10827  004690  E308               	bnc	u2530
 10828  004692  0EFB               	movlw	-5
 10829  004694  2AE3               	incf	plusw1,f,c
 10830  004696  E305               	bnc	u2530
 10831  004698  0EFC               	movlw	-4
 10832  00469A  2AE3               	incf	plusw1,f,c
 10833  00469C  E302               	bnc	u2530
 10834  00469E  0EFD               	movlw	-3
 10835  0046A0  2AE3               	incf	plusw1,f,c
 10836  0046A2                     u2530:
 10837                           
 10838                           ;stkvar	_sign @ sp[(-2)+0]
 10839  0046A2  0EFE               	movlw	-2
 10840  0046A4  6AE3               	clrf	plusw1,c
 10841  0046A6  2AE3               	incf	plusw1,f,c
 10842  0046A8                     l5413:
 10843                           
 10844                           ;stkvar	_divisor @ sp[(-2)+-16]
 10845  0046A8  0EF5               	movlw	-11
 10846  0046AA  AEE3               	btfss	plusw1,7,c
 10847  0046AC  D025               	goto	u2550
 10848                           
 10849                           ;stkvar	_divisor @ sp[(-2)+-16]
 10850                           ;stkvar	_divisor @ sp[(-2)+-16]
 10851  0046AE  0EEE               	movlw	-18
 10852  0046B0  6CE3               	negf	plusw1,c
 10853  0046B2  0EEF               	movlw	-17
 10854  0046B4  1EE3               	comf	plusw1,f,c
 10855  0046B6  0EF0               	movlw	-16
 10856  0046B8  1EE3               	comf	plusw1,f,c
 10857  0046BA  0EF1               	movlw	-15
 10858  0046BC  1EE3               	comf	plusw1,f,c
 10859  0046BE  0EF2               	movlw	-14
 10860  0046C0  1EE3               	comf	plusw1,f,c
 10861  0046C2  0EF3               	movlw	-13
 10862  0046C4  1EE3               	comf	plusw1,f,c
 10863  0046C6  0EF4               	movlw	-12
 10864  0046C8  1EE3               	comf	plusw1,f,c
 10865  0046CA  0EF5               	movlw	-11
 10866  0046CC  1EE3               	comf	plusw1,f,c
 10867  0046CE  E314               	bnc	u2550
 10868  0046D0  0EEF               	movlw	-17
 10869  0046D2  2AE3               	incf	plusw1,f,c
 10870  0046D4  E311               	bnc	u2550
 10871  0046D6  0EF0               	movlw	-16
 10872  0046D8  2AE3               	incf	plusw1,f,c
 10873  0046DA  E30E               	bnc	u2550
 10874  0046DC  0EF1               	movlw	-15
 10875  0046DE  2AE3               	incf	plusw1,f,c
 10876  0046E0  E30B               	bnc	u2550
 10877  0046E2  0EF2               	movlw	-14
 10878  0046E4  2AE3               	incf	plusw1,f,c
 10879  0046E6  E308               	bnc	u2550
 10880  0046E8  0EF3               	movlw	-13
 10881  0046EA  2AE3               	incf	plusw1,f,c
 10882  0046EC  E305               	bnc	u2550
 10883  0046EE  0EF4               	movlw	-12
 10884  0046F0  2AE3               	incf	plusw1,f,c
 10885  0046F2  E302               	bnc	u2550
 10886  0046F4  0EF5               	movlw	-11
 10887  0046F6  2AE3               	incf	plusw1,f,c
 10888  0046F8                     u2550:
 10889                           
 10890                           ;stkvar	_divisor @ sp[(-2)+-16]
 10891  0046F8  0EEE               	movlw	-18
 10892  0046FA  50E3               	movf	plusw1,w,c
 10893  0046FC  E116               	bnz	u2560
 10894  0046FE  0EEF               	movlw	-17
 10895  004700  50E3               	movf	plusw1,w,c
 10896  004702  E113               	bnz	u2560
 10897  004704  0EF0               	movlw	-16
 10898  004706  50E3               	movf	plusw1,w,c
 10899  004708  E110               	bnz	u2560
 10900  00470A  0EF1               	movlw	-15
 10901  00470C  50E3               	movf	plusw1,w,c
 10902  00470E  E10D               	bnz	u2560
 10903  004710  0EF2               	movlw	-14
 10904  004712  50E3               	movf	plusw1,w,c
 10905  004714  E10A               	bnz	u2560
 10906  004716  0EF3               	movlw	-13
 10907  004718  50E3               	movf	plusw1,w,c
 10908  00471A  E107               	bnz	u2560
 10909  00471C  0EF4               	movlw	-12
 10910  00471E  50E3               	movf	plusw1,w,c
 10911  004720  E104               	bnz	u2560
 10912  004722  0EF5               	movlw	-11
 10913  004724  50E3               	movf	plusw1,w,c
 10914  004726  B4D8               	btfsc	status,2,c
 10915  004728  D075               	goto	u2590
 10916  00472A                     u2560:
 10917                           
 10918                           ;stkvar	_counter @ sp[(-2)+1]
 10919  00472A  0EFF               	movlw	-1
 10920  00472C  6AE3               	clrf	plusw1,c
 10921  00472E  D012               	goto	L22
 10922  004730                     l5421:
 10923                           
 10924                           ;stkvar	_divisor @ sp[(-2)+-16]
 10925  004730  90D8               	bcf	status,0,c
 10926  004732  0EEE               	movlw	-18
 10927  004734  36E3               	rlcf	plusw1,f,c
 10928  004736  0EEF               	movlw	-17
 10929  004738  36E3               	rlcf	plusw1,f,c
 10930  00473A  0EF0               	movlw	-16
 10931  00473C  36E3               	rlcf	plusw1,f,c
 10932  00473E  0EF1               	movlw	-15
 10933  004740  36E3               	rlcf	plusw1,f,c
 10934  004742  0EF2               	movlw	-14
 10935  004744  36E3               	rlcf	plusw1,f,c
 10936  004746  0EF3               	movlw	-13
 10937  004748  36E3               	rlcf	plusw1,f,c
 10938  00474A  0EF4               	movlw	-12
 10939  00474C  36E3               	rlcf	plusw1,f,c
 10940  00474E  0EF5               	movlw	-11
 10941  004750  36E3               	rlcf	plusw1,f,c
 10942                           
 10943                           ;stkvar	_counter @ sp[(-2)+1]
 10944  004752  0EFF               	movlw	-1
 10945  004754                     L22:
 10946  004754  2AE3               	incf	plusw1,f,c
 10947                           
 10948                           ;stkvar	_divisor @ sp[(-2)+-16]
 10949  004756  0EF5               	movlw	-11
 10950  004758  AEE3               	btfss	plusw1,7,c
 10951  00475A  D7EA               	goto	l5421
 10952  00475C                     u2570:
 10953                           
 10954                           ;stkvar	_divisor @ sp[(-2)+-16]
 10955                           ;stkvar	_dividend @ sp[(-2)+-8]
 10956  00475C  50E1               	movf	fsr1l,w,c
 10957  00475E  0FF6               	addlw	-10
 10958  004760  6ED9               	movwf	fsr2l,c
 10959  004762  50E2               	movf	fsr1h,w,c
 10960  004764  6EDA               	movwf	fsr2h,c
 10961  004766  0EFF               	movlw	255
 10962  004768  22DA               	addwfc	fsr2h,f,c
 10963  00476A  0EEE               	movlw	-18
 10964  00476C  50E3               	movf	plusw1,w,c
 10965  00476E  5CDE               	subwf	postinc2,w,c
 10966  004770  0EEF               	movlw	-17
 10967  004772  50E3               	movf	plusw1,w,c
 10968  004774  58DE               	subwfb	postinc2,w,c
 10969  004776  0EF0               	movlw	-16
 10970  004778  50E3               	movf	plusw1,w,c
 10971  00477A  58DE               	subwfb	postinc2,w,c
 10972  00477C  0EF1               	movlw	-15
 10973  00477E  50E3               	movf	plusw1,w,c
 10974  004780  58DE               	subwfb	postinc2,w,c
 10975  004782  0EF2               	movlw	-14
 10976  004784  50E3               	movf	plusw1,w,c
 10977  004786  58DE               	subwfb	postinc2,w,c
 10978  004788  0EF3               	movlw	-13
 10979  00478A  50E3               	movf	plusw1,w,c
 10980  00478C  58DE               	subwfb	postinc2,w,c
 10981  00478E  0EF4               	movlw	-12
 10982  004790  50E3               	movf	plusw1,w,c
 10983  004792  58DE               	subwfb	postinc2,w,c
 10984  004794  0EF5               	movlw	-11
 10985  004796  50E3               	movf	plusw1,w,c
 10986  004798  58DE               	subwfb	postinc2,w,c
 10987  00479A  A0D8               	btfss	status,0,c
 10988  00479C  D01F               	goto	l5429
 10989                           
 10990                           ;stkvar	_divisor @ sp[(-2)+-16]
 10991                           ;stkvar	_dividend @ sp[(-2)+-8]
 10992  00479E  50E1               	movf	fsr1l,w,c
 10993  0047A0  0FF6               	addlw	-10
 10994  0047A2  6ED9               	movwf	fsr2l,c
 10995  0047A4  50E2               	movf	fsr1h,w,c
 10996  0047A6  6EDA               	movwf	fsr2h,c
 10997  0047A8  0EFF               	movlw	255
 10998  0047AA  22DA               	addwfc	fsr2h,f,c
 10999  0047AC  0EEE               	movlw	-18
 11000  0047AE  50E3               	movf	plusw1,w,c
 11001  0047B0  5EDE               	subwf	postinc2,f,c
 11002  0047B2  0EEF               	movlw	-17
 11003  0047B4  50E3               	movf	plusw1,w,c
 11004  0047B6  5ADE               	subwfb	postinc2,f,c
 11005  0047B8  0EF0               	movlw	-16
 11006  0047BA  50E3               	movf	plusw1,w,c
 11007  0047BC  5ADE               	subwfb	postinc2,f,c
 11008  0047BE  0EF1               	movlw	-15
 11009  0047C0  50E3               	movf	plusw1,w,c
 11010  0047C2  5ADE               	subwfb	postinc2,f,c
 11011  0047C4  0EF2               	movlw	-14
 11012  0047C6  50E3               	movf	plusw1,w,c
 11013  0047C8  5ADE               	subwfb	postinc2,f,c
 11014  0047CA  0EF3               	movlw	-13
 11015  0047CC  50E3               	movf	plusw1,w,c
 11016  0047CE  5ADE               	subwfb	postinc2,f,c
 11017  0047D0  0EF4               	movlw	-12
 11018  0047D2  50E3               	movf	plusw1,w,c
 11019  0047D4  5ADE               	subwfb	postinc2,f,c
 11020  0047D6  0EF5               	movlw	-11
 11021  0047D8  50E3               	movf	plusw1,w,c
 11022  0047DA  5ADE               	subwfb	postinc2,f,c
 11023  0047DC                     l5429:
 11024                           
 11025                           ;stkvar	_divisor @ sp[(-2)+-16]
 11026  0047DC  90D8               	bcf	status,0,c
 11027  0047DE  0EF5               	movlw	-11
 11028  0047E0  32E3               	rrcf	plusw1,f,c
 11029  0047E2  0EF4               	movlw	-12
 11030  0047E4  32E3               	rrcf	plusw1,f,c
 11031  0047E6  0EF3               	movlw	-13
 11032  0047E8  32E3               	rrcf	plusw1,f,c
 11033  0047EA  0EF2               	movlw	-14
 11034  0047EC  32E3               	rrcf	plusw1,f,c
 11035  0047EE  0EF1               	movlw	-15
 11036  0047F0  32E3               	rrcf	plusw1,f,c
 11037  0047F2  0EF0               	movlw	-16
 11038  0047F4  32E3               	rrcf	plusw1,f,c
 11039  0047F6  0EEF               	movlw	-17
 11040  0047F8  32E3               	rrcf	plusw1,f,c
 11041  0047FA  0EEE               	movlw	-18
 11042  0047FC  32E3               	rrcf	plusw1,f,c
 11043                           
 11044                           ;stkvar	_counter @ sp[(-2)+1]
 11045  0047FE  0EFF               	movlw	-1
 11046  004800  50E3               	movf	plusw1,w,c
 11047  004802  6E3B               	movwf	btemp,c
 11048  004804  0E01               	movlw	1
 11049  004806  5E3B               	subwf	btemp,f,c
 11050  004808  0EFF               	movlw	-1
 11051  00480A  0060  F0EF  FFE3   	movff	btemp,plusw1
 11052  004810  A4D8               	btfss	status,2,c
 11053  004812  D7A4               	goto	u2570
 11054  004814                     u2590:
 11055                           
 11056                           ;stkvar	_sign @ sp[(-2)+0]
 11057  004814  0EFE               	movlw	-2
 11058  004816  50E3               	movf	plusw1,w,c
 11059  004818  B4D8               	btfsc	status,2,c
 11060  00481A  D025               	goto	u2610
 11061                           
 11062                           ;stkvar	_dividend @ sp[(-2)+-8]
 11063                           ;stkvar	_dividend @ sp[(-2)+-8]
 11064  00481C  0EF6               	movlw	-10
 11065  00481E  6CE3               	negf	plusw1,c
 11066  004820  0EF7               	movlw	-9
 11067  004822  1EE3               	comf	plusw1,f,c
 11068  004824  0EF8               	movlw	-8
 11069  004826  1EE3               	comf	plusw1,f,c
 11070  004828  0EF9               	movlw	-7
 11071  00482A  1EE3               	comf	plusw1,f,c
 11072  00482C  0EFA               	movlw	-6
 11073  00482E  1EE3               	comf	plusw1,f,c
 11074  004830  0EFB               	movlw	-5
 11075  004832  1EE3               	comf	plusw1,f,c
 11076  004834  0EFC               	movlw	-4
 11077  004836  1EE3               	comf	plusw1,f,c
 11078  004838  0EFD               	movlw	-3
 11079  00483A  1EE3               	comf	plusw1,f,c
 11080  00483C  E314               	bnc	u2610
 11081  00483E  0EF7               	movlw	-9
 11082  004840  2AE3               	incf	plusw1,f,c
 11083  004842  E311               	bnc	u2610
 11084  004844  0EF8               	movlw	-8
 11085  004846  2AE3               	incf	plusw1,f,c
 11086  004848  E30E               	bnc	u2610
 11087  00484A  0EF9               	movlw	-7
 11088  00484C  2AE3               	incf	plusw1,f,c
 11089  00484E  E30B               	bnc	u2610
 11090  004850  0EFA               	movlw	-6
 11091  004852  2AE3               	incf	plusw1,f,c
 11092  004854  E308               	bnc	u2610
 11093  004856  0EFB               	movlw	-5
 11094  004858  2AE3               	incf	plusw1,f,c
 11095  00485A  E305               	bnc	u2610
 11096  00485C  0EFC               	movlw	-4
 11097  00485E  2AE3               	incf	plusw1,f,c
 11098  004860  E302               	bnc	u2610
 11099  004862  0EFD               	movlw	-3
 11100  004864  2AE3               	incf	plusw1,f,c
 11101  004866                     u2610:
 11102                           
 11103                           ;stkvar	_dividend @ sp[(-2)+-8]
 11104  004866  0EF6               	movlw	246
 11105  004868  24E1               	addwf	fsr1l,w,c
 11106  00486A  6ED9               	movwf	fsr2l,c
 11107  00486C  0EFF               	movlw	255
 11108  00486E  20E2               	addwfc	fsr1h,w,c
 11109  004870  6EDA               	movwf	fsr2h,c
 11110                           
 11111                           ;stkvar	?___aomod @ sp[(-2)+-8]
 11112  004872  0E08               	movlw	8
 11113  004874  6E3B               	movwf	btemp,c
 11114  004876  0EF6               	movlw	-10
 11115  004878                     us262999:
 11116  004878  006F FF7B FFE3     	movff	postinc2,plusw1
 11117  00487E  28E8               	incf	wreg,w,c
 11118  004880  2E3B               	decfsz	btemp,f,c
 11119  004882  D7FA               	bra	us262999
 11120                           
 11121                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 11122  004884  52E5               	movf	postdec1,f,c
 11123  004886  52E5               	movf	postdec1,f,c
 11124  004888  0012               	return		;funcret
 11125  00488A                     __end_of___aomod:
 11126                           	opt callstack 0
 11127                           
 11128 ;; *************** function ___aodiv *****************
 11129 ;; Defined at:
 11130 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 11131 ;; Parameters:    Size  Location     Type
 11132 ;;  dividend        8  [STACK] long long 
 11133 ;;  divisor         8  [STACK] long long 
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;  quotient        8  [STACK] long long 
 11136 ;;  sign            1  [STACK] unsigned char 
 11137 ;;  counter         1  [STACK] unsigned char 
 11138 ;; Return value:  Size  Location     Type
 11139 ;;                  8  [STACK] long long 
 11140 ;; Registers used:
 11141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11142 ;; Tracked objects:
 11143 ;;		On entry : 0/1
 11144 ;;		On exit  : 0/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11151 ;;Total ram usage:        0 bytes
 11152 ;; Hardware stack levels used:    1
 11153 ;; Hardware stack levels required when called:    3
 11154 ;; This function calls:
 11155 ;;		Nothing
 11156 ;; This function is called by:
 11157 ;;		_dtoa
 11158 ;; This function uses a reentrant model
 11159 ;;
 11160                           
 11161                           	psect	text45
 11162  003F20                     __ptext45:
 11163                           	opt callstack 0
 11164  003F20                     ___aodiv:
 11165                           	opt callstack 0
 11166                           
 11167                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 11168  003F20  0E0A               	movlw	10
 11169  003F22  26E1               	addwf	fsr1l,f,c
 11170  003F24  0E00               	movlw	0
 11171  003F26  22E2               	addwfc	fsr1h,f,c
 11172                           
 11173                           ;stkvar	_sign @ sp[(-10)+8]
 11174                           
 11175                           ;incstack = 0
 11176  003F28  0EFE               	movlw	-2
 11177  003F2A  6AE3               	clrf	plusw1,c
 11178                           
 11179                           ;stkvar	_divisor @ sp[(-10)+-16]
 11180  003F2C  0EED               	movlw	-19
 11181  003F2E  AEE3               	btfss	plusw1,7,c
 11182  003F30  D028               	goto	l5369
 11183                           
 11184                           ;stkvar	_divisor @ sp[(-10)+-16]
 11185                           ;stkvar	_divisor @ sp[(-10)+-16]
 11186  003F32  0EE6               	movlw	-26
 11187  003F34  6CE3               	negf	plusw1,c
 11188  003F36  0EE7               	movlw	-25
 11189  003F38  1EE3               	comf	plusw1,f,c
 11190  003F3A  0EE8               	movlw	-24
 11191  003F3C  1EE3               	comf	plusw1,f,c
 11192  003F3E  0EE9               	movlw	-23
 11193  003F40  1EE3               	comf	plusw1,f,c
 11194  003F42  0EEA               	movlw	-22
 11195  003F44  1EE3               	comf	plusw1,f,c
 11196  003F46  0EEB               	movlw	-21
 11197  003F48  1EE3               	comf	plusw1,f,c
 11198  003F4A  0EEC               	movlw	-20
 11199  003F4C  1EE3               	comf	plusw1,f,c
 11200  003F4E  0EED               	movlw	-19
 11201  003F50  1EE3               	comf	plusw1,f,c
 11202  003F52  E314               	bnc	u2410
 11203  003F54  0EE7               	movlw	-25
 11204  003F56  2AE3               	incf	plusw1,f,c
 11205  003F58  E311               	bnc	u2410
 11206  003F5A  0EE8               	movlw	-24
 11207  003F5C  2AE3               	incf	plusw1,f,c
 11208  003F5E  E30E               	bnc	u2410
 11209  003F60  0EE9               	movlw	-23
 11210  003F62  2AE3               	incf	plusw1,f,c
 11211  003F64  E30B               	bnc	u2410
 11212  003F66  0EEA               	movlw	-22
 11213  003F68  2AE3               	incf	plusw1,f,c
 11214  003F6A  E308               	bnc	u2410
 11215  003F6C  0EEB               	movlw	-21
 11216  003F6E  2AE3               	incf	plusw1,f,c
 11217  003F70  E305               	bnc	u2410
 11218  003F72  0EEC               	movlw	-20
 11219  003F74  2AE3               	incf	plusw1,f,c
 11220  003F76  E302               	bnc	u2410
 11221  003F78  0EED               	movlw	-19
 11222  003F7A  2AE3               	incf	plusw1,f,c
 11223  003F7C                     u2410:
 11224                           
 11225                           ;stkvar	_sign @ sp[(-10)+8]
 11226  003F7C  0EFE               	movlw	-2
 11227  003F7E  6AE3               	clrf	plusw1,c
 11228  003F80  2AE3               	incf	plusw1,f,c
 11229  003F82                     l5369:
 11230                           
 11231                           ;stkvar	_dividend @ sp[(-10)+-8]
 11232  003F82  0EF5               	movlw	-11
 11233  003F84  AEE3               	btfss	plusw1,7,c
 11234  003F86  D027               	goto	l5375
 11235                           
 11236                           ;stkvar	_dividend @ sp[(-10)+-8]
 11237                           ;stkvar	_dividend @ sp[(-10)+-8]
 11238  003F88  0EEE               	movlw	-18
 11239  003F8A  6CE3               	negf	plusw1,c
 11240  003F8C  0EEF               	movlw	-17
 11241  003F8E  1EE3               	comf	plusw1,f,c
 11242  003F90  0EF0               	movlw	-16
 11243  003F92  1EE3               	comf	plusw1,f,c
 11244  003F94  0EF1               	movlw	-15
 11245  003F96  1EE3               	comf	plusw1,f,c
 11246  003F98  0EF2               	movlw	-14
 11247  003F9A  1EE3               	comf	plusw1,f,c
 11248  003F9C  0EF3               	movlw	-13
 11249  003F9E  1EE3               	comf	plusw1,f,c
 11250  003FA0  0EF4               	movlw	-12
 11251  003FA2  1EE3               	comf	plusw1,f,c
 11252  003FA4  0EF5               	movlw	-11
 11253  003FA6  1EE3               	comf	plusw1,f,c
 11254  003FA8  E314               	bnc	u2430
 11255  003FAA  0EEF               	movlw	-17
 11256  003FAC  2AE3               	incf	plusw1,f,c
 11257  003FAE  E311               	bnc	u2430
 11258  003FB0  0EF0               	movlw	-16
 11259  003FB2  2AE3               	incf	plusw1,f,c
 11260  003FB4  E30E               	bnc	u2430
 11261  003FB6  0EF1               	movlw	-15
 11262  003FB8  2AE3               	incf	plusw1,f,c
 11263  003FBA  E30B               	bnc	u2430
 11264  003FBC  0EF2               	movlw	-14
 11265  003FBE  2AE3               	incf	plusw1,f,c
 11266  003FC0  E308               	bnc	u2430
 11267  003FC2  0EF3               	movlw	-13
 11268  003FC4  2AE3               	incf	plusw1,f,c
 11269  003FC6  E305               	bnc	u2430
 11270  003FC8  0EF4               	movlw	-12
 11271  003FCA  2AE3               	incf	plusw1,f,c
 11272  003FCC  E302               	bnc	u2430
 11273  003FCE  0EF5               	movlw	-11
 11274  003FD0  2AE3               	incf	plusw1,f,c
 11275  003FD2                     u2430:
 11276                           
 11277                           ;stkvar	_sign @ sp[(-10)+8]
 11278  003FD2  0EFE               	movlw	-2
 11279  003FD4  70E3               	btg	plusw1,0,c
 11280  003FD6                     l5375:
 11281                           
 11282                           ;stkvar	_quotient @ sp[(-10)+0]
 11283  003FD6  0E07               	movlw	7
 11284  003FD8  6E3B               	movwf	btemp,c
 11285  003FDA  0EF6               	movlw	-10
 11286  003FDC                     u2441:
 11287  003FDC  6AE3               	clrf	plusw1,c
 11288  003FDE  2AE8               	incf	wreg,f,c
 11289  003FE0  063B               	decf	btemp,f,c
 11290  003FE2  E2FC               	bc	u2441
 11291                           
 11292                           ;stkvar	_divisor @ sp[(-10)+-16]
 11293  003FE4  0EE6               	movlw	-26
 11294  003FE6  50E3               	movf	plusw1,w,c
 11295  003FE8  E116               	bnz	u2450
 11296  003FEA  0EE7               	movlw	-25
 11297  003FEC  50E3               	movf	plusw1,w,c
 11298  003FEE  E113               	bnz	u2450
 11299  003FF0  0EE8               	movlw	-24
 11300  003FF2  50E3               	movf	plusw1,w,c
 11301  003FF4  E110               	bnz	u2450
 11302  003FF6  0EE9               	movlw	-23
 11303  003FF8  50E3               	movf	plusw1,w,c
 11304  003FFA  E10D               	bnz	u2450
 11305  003FFC  0EEA               	movlw	-22
 11306  003FFE  50E3               	movf	plusw1,w,c
 11307  004000  E10A               	bnz	u2450
 11308  004002  0EEB               	movlw	-21
 11309  004004  50E3               	movf	plusw1,w,c
 11310  004006  E107               	bnz	u2450
 11311  004008  0EEC               	movlw	-20
 11312  00400A  50E3               	movf	plusw1,w,c
 11313  00400C  E104               	bnz	u2450
 11314  00400E  0EED               	movlw	-19
 11315  004010  50E3               	movf	plusw1,w,c
 11316  004012  B4D8               	btfsc	status,2,c
 11317  004014  D088               	goto	u2480
 11318  004016                     u2450:
 11319                           
 11320                           ;stkvar	_counter @ sp[(-10)+9]
 11321  004016  0EFF               	movlw	-1
 11322  004018  6AE3               	clrf	plusw1,c
 11323  00401A  D012               	goto	L23
 11324  00401C                     l5381:
 11325                           
 11326                           ;stkvar	_divisor @ sp[(-10)+-16]
 11327  00401C  90D8               	bcf	status,0,c
 11328  00401E  0EE6               	movlw	-26
 11329  004020  36E3               	rlcf	plusw1,f,c
 11330  004022  0EE7               	movlw	-25
 11331  004024  36E3               	rlcf	plusw1,f,c
 11332  004026  0EE8               	movlw	-24
 11333  004028  36E3               	rlcf	plusw1,f,c
 11334  00402A  0EE9               	movlw	-23
 11335  00402C  36E3               	rlcf	plusw1,f,c
 11336  00402E  0EEA               	movlw	-22
 11337  004030  36E3               	rlcf	plusw1,f,c
 11338  004032  0EEB               	movlw	-21
 11339  004034  36E3               	rlcf	plusw1,f,c
 11340  004036  0EEC               	movlw	-20
 11341  004038  36E3               	rlcf	plusw1,f,c
 11342  00403A  0EED               	movlw	-19
 11343  00403C  36E3               	rlcf	plusw1,f,c
 11344                           
 11345                           ;stkvar	_counter @ sp[(-10)+9]
 11346  00403E  0EFF               	movlw	-1
 11347  004040                     L23:
 11348  004040  2AE3               	incf	plusw1,f,c
 11349                           
 11350                           ;stkvar	_divisor @ sp[(-10)+-16]
 11351  004042  0EED               	movlw	-19
 11352  004044  AEE3               	btfss	plusw1,7,c
 11353  004046  D7EA               	goto	l5381
 11354  004048                     u2460:
 11355                           
 11356                           ;stkvar	_quotient @ sp[(-10)+0]
 11357  004048  90D8               	bcf	status,0,c
 11358  00404A  0EF6               	movlw	-10
 11359  00404C  36E3               	rlcf	plusw1,f,c
 11360  00404E  0EF7               	movlw	-9
 11361  004050  36E3               	rlcf	plusw1,f,c
 11362  004052  0EF8               	movlw	-8
 11363  004054  36E3               	rlcf	plusw1,f,c
 11364  004056  0EF9               	movlw	-7
 11365  004058  36E3               	rlcf	plusw1,f,c
 11366  00405A  0EFA               	movlw	-6
 11367  00405C  36E3               	rlcf	plusw1,f,c
 11368  00405E  0EFB               	movlw	-5
 11369  004060  36E3               	rlcf	plusw1,f,c
 11370  004062  0EFC               	movlw	-4
 11371  004064  36E3               	rlcf	plusw1,f,c
 11372  004066  0EFD               	movlw	-3
 11373  004068  36E3               	rlcf	plusw1,f,c
 11374                           
 11375                           ;stkvar	_divisor @ sp[(-10)+-16]
 11376                           ;stkvar	_dividend @ sp[(-10)+-8]
 11377  00406A  50E1               	movf	fsr1l,w,c
 11378  00406C  0FEE               	addlw	-18
 11379  00406E  6ED9               	movwf	fsr2l,c
 11380  004070  50E2               	movf	fsr1h,w,c
 11381  004072  6EDA               	movwf	fsr2h,c
 11382  004074  0EFF               	movlw	255
 11383  004076  22DA               	addwfc	fsr2h,f,c
 11384  004078  0EE6               	movlw	-26
 11385  00407A  50E3               	movf	plusw1,w,c
 11386  00407C  5CDE               	subwf	postinc2,w,c
 11387  00407E  0EE7               	movlw	-25
 11388  004080  50E3               	movf	plusw1,w,c
 11389  004082  58DE               	subwfb	postinc2,w,c
 11390  004084  0EE8               	movlw	-24
 11391  004086  50E3               	movf	plusw1,w,c
 11392  004088  58DE               	subwfb	postinc2,w,c
 11393  00408A  0EE9               	movlw	-23
 11394  00408C  50E3               	movf	plusw1,w,c
 11395  00408E  58DE               	subwfb	postinc2,w,c
 11396  004090  0EEA               	movlw	-22
 11397  004092  50E3               	movf	plusw1,w,c
 11398  004094  58DE               	subwfb	postinc2,w,c
 11399  004096  0EEB               	movlw	-21
 11400  004098  50E3               	movf	plusw1,w,c
 11401  00409A  58DE               	subwfb	postinc2,w,c
 11402  00409C  0EEC               	movlw	-20
 11403  00409E  50E3               	movf	plusw1,w,c
 11404  0040A0  58DE               	subwfb	postinc2,w,c
 11405  0040A2  0EED               	movlw	-19
 11406  0040A4  50E3               	movf	plusw1,w,c
 11407  0040A6  58DE               	subwfb	postinc2,w,c
 11408  0040A8  A0D8               	btfss	status,0,c
 11409  0040AA  D021               	goto	l5393
 11410                           
 11411                           ;stkvar	_divisor @ sp[(-10)+-16]
 11412                           ;stkvar	_dividend @ sp[(-10)+-8]
 11413  0040AC  50E1               	movf	fsr1l,w,c
 11414  0040AE  0FEE               	addlw	-18
 11415  0040B0  6ED9               	movwf	fsr2l,c
 11416  0040B2  50E2               	movf	fsr1h,w,c
 11417  0040B4  6EDA               	movwf	fsr2h,c
 11418  0040B6  0EFF               	movlw	255
 11419  0040B8  22DA               	addwfc	fsr2h,f,c
 11420  0040BA  0EE6               	movlw	-26
 11421  0040BC  50E3               	movf	plusw1,w,c
 11422  0040BE  5EDE               	subwf	postinc2,f,c
 11423  0040C0  0EE7               	movlw	-25
 11424  0040C2  50E3               	movf	plusw1,w,c
 11425  0040C4  5ADE               	subwfb	postinc2,f,c
 11426  0040C6  0EE8               	movlw	-24
 11427  0040C8  50E3               	movf	plusw1,w,c
 11428  0040CA  5ADE               	subwfb	postinc2,f,c
 11429  0040CC  0EE9               	movlw	-23
 11430  0040CE  50E3               	movf	plusw1,w,c
 11431  0040D0  5ADE               	subwfb	postinc2,f,c
 11432  0040D2  0EEA               	movlw	-22
 11433  0040D4  50E3               	movf	plusw1,w,c
 11434  0040D6  5ADE               	subwfb	postinc2,f,c
 11435  0040D8  0EEB               	movlw	-21
 11436  0040DA  50E3               	movf	plusw1,w,c
 11437  0040DC  5ADE               	subwfb	postinc2,f,c
 11438  0040DE  0EEC               	movlw	-20
 11439  0040E0  50E3               	movf	plusw1,w,c
 11440  0040E2  5ADE               	subwfb	postinc2,f,c
 11441  0040E4  0EED               	movlw	-19
 11442  0040E6  50E3               	movf	plusw1,w,c
 11443  0040E8  5ADE               	subwfb	postinc2,f,c
 11444                           
 11445                           ;stkvar	_quotient @ sp[(-10)+0]
 11446  0040EA  0EF6               	movlw	-10
 11447  0040EC  80E3               	bsf	plusw1,0,c
 11448  0040EE                     l5393:
 11449                           
 11450                           ;stkvar	_divisor @ sp[(-10)+-16]
 11451  0040EE  90D8               	bcf	status,0,c
 11452  0040F0  0EED               	movlw	-19
 11453  0040F2  32E3               	rrcf	plusw1,f,c
 11454  0040F4  0EEC               	movlw	-20
 11455  0040F6  32E3               	rrcf	plusw1,f,c
 11456  0040F8  0EEB               	movlw	-21
 11457  0040FA  32E3               	rrcf	plusw1,f,c
 11458  0040FC  0EEA               	movlw	-22
 11459  0040FE  32E3               	rrcf	plusw1,f,c
 11460  004100  0EE9               	movlw	-23
 11461  004102  32E3               	rrcf	plusw1,f,c
 11462  004104  0EE8               	movlw	-24
 11463  004106  32E3               	rrcf	plusw1,f,c
 11464  004108  0EE7               	movlw	-25
 11465  00410A  32E3               	rrcf	plusw1,f,c
 11466  00410C  0EE6               	movlw	-26
 11467  00410E  32E3               	rrcf	plusw1,f,c
 11468                           
 11469                           ;stkvar	_counter @ sp[(-10)+9]
 11470  004110  0EFF               	movlw	-1
 11471  004112  50E3               	movf	plusw1,w,c
 11472  004114  6E3B               	movwf	btemp,c
 11473  004116  0E01               	movlw	1
 11474  004118  5E3B               	subwf	btemp,f,c
 11475  00411A  0EFF               	movlw	-1
 11476  00411C  0060  F0EF  FFE3   	movff	btemp,plusw1
 11477  004122  A4D8               	btfss	status,2,c
 11478  004124  D791               	goto	u2460
 11479  004126                     u2480:
 11480                           
 11481                           ;stkvar	_sign @ sp[(-10)+8]
 11482  004126  0EFE               	movlw	-2
 11483  004128  50E3               	movf	plusw1,w,c
 11484  00412A  B4D8               	btfsc	status,2,c
 11485  00412C  D025               	goto	u2500
 11486                           
 11487                           ;stkvar	_quotient @ sp[(-10)+0]
 11488                           ;stkvar	_quotient @ sp[(-10)+0]
 11489  00412E  0EF6               	movlw	-10
 11490  004130  6CE3               	negf	plusw1,c
 11491  004132  0EF7               	movlw	-9
 11492  004134  1EE3               	comf	plusw1,f,c
 11493  004136  0EF8               	movlw	-8
 11494  004138  1EE3               	comf	plusw1,f,c
 11495  00413A  0EF9               	movlw	-7
 11496  00413C  1EE3               	comf	plusw1,f,c
 11497  00413E  0EFA               	movlw	-6
 11498  004140  1EE3               	comf	plusw1,f,c
 11499  004142  0EFB               	movlw	-5
 11500  004144  1EE3               	comf	plusw1,f,c
 11501  004146  0EFC               	movlw	-4
 11502  004148  1EE3               	comf	plusw1,f,c
 11503  00414A  0EFD               	movlw	-3
 11504  00414C  1EE3               	comf	plusw1,f,c
 11505  00414E  E314               	bnc	u2500
 11506  004150  0EF7               	movlw	-9
 11507  004152  2AE3               	incf	plusw1,f,c
 11508  004154  E311               	bnc	u2500
 11509  004156  0EF8               	movlw	-8
 11510  004158  2AE3               	incf	plusw1,f,c
 11511  00415A  E30E               	bnc	u2500
 11512  00415C  0EF9               	movlw	-7
 11513  00415E  2AE3               	incf	plusw1,f,c
 11514  004160  E30B               	bnc	u2500
 11515  004162  0EFA               	movlw	-6
 11516  004164  2AE3               	incf	plusw1,f,c
 11517  004166  E308               	bnc	u2500
 11518  004168  0EFB               	movlw	-5
 11519  00416A  2AE3               	incf	plusw1,f,c
 11520  00416C  E305               	bnc	u2500
 11521  00416E  0EFC               	movlw	-4
 11522  004170  2AE3               	incf	plusw1,f,c
 11523  004172  E302               	bnc	u2500
 11524  004174  0EFD               	movlw	-3
 11525  004176  2AE3               	incf	plusw1,f,c
 11526  004178                     u2500:
 11527                           
 11528                           ;stkvar	_quotient @ sp[(-10)+0]
 11529  004178  0EF6               	movlw	246
 11530  00417A  24E1               	addwf	fsr1l,w,c
 11531  00417C  6ED9               	movwf	fsr2l,c
 11532  00417E  0EFF               	movlw	255
 11533  004180  20E2               	addwfc	fsr1h,w,c
 11534  004182  6EDA               	movwf	fsr2h,c
 11535                           
 11536                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 11537  004184  0E08               	movlw	8
 11538  004186  6E3B               	movwf	btemp,c
 11539  004188  0EEE               	movlw	-18
 11540  00418A                     us251999:
 11541  00418A  006F FF7B FFE3     	movff	postinc2,plusw1
 11542  004190  28E8               	incf	wreg,w,c
 11543  004192  2E3B               	decfsz	btemp,f,c
 11544  004194  D7FA               	bra	us251999
 11545                           
 11546                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 11547  004196  0EF6               	movlw	246
 11548  004198  26E1               	addwf	fsr1l,f,c
 11549  00419A  0EFF               	movlw	255
 11550  00419C  22E2               	addwfc	fsr1h,f,c
 11551  00419E  0012               	return		;funcret
 11552  0041A0                     __end_of___aodiv:
 11553                           	opt callstack 0
 11554                           
 11555 ;; *************** function _ctoa *****************
 11556 ;; Defined at:
 11557 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11560 ;;		 -> f(5), NULL(0), 
 11561 ;;  c               1  [STACK] unsigned char 
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;  w               2  [STACK] int 
 11564 ;;  l               2    0        int 
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  2  [STACK] int 
 11567 ;; Registers used:
 11568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11569 ;; Tracked objects:
 11570 ;;		On entry : 0/0
 11571 ;;		On exit  : 0/0
 11572 ;;		Unchanged: 0/0
 11573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11578 ;;Total ram usage:        0 bytes
 11579 ;; Hardware stack levels used:    1
 11580 ;; Hardware stack levels required when called:    8
 11581 ;; This function calls:
 11582 ;;		_pad
 11583 ;; This function is called by:
 11584 ;;		_vfpfcnvrt
 11585 ;; This function uses a reentrant model
 11586 ;;
 11587                           
 11588                           	psect	text46
 11589  0054A6                     __ptext46:
 11590                           	opt callstack 0
 11591  0054A6                     _ctoa:
 11592                           	opt callstack 0
 11593                           
 11594                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11595  0054A6  52E6               	movf	postinc1,f,c
 11596  0054A8  52E6               	movf	postinc1,f,c
 11597                           
 11598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 11599                           
 11600                           ;incstack = 0
 11601  0054AA  5020               	movf	_width,w,c
 11602  0054AC  1021               	iorwf	_width+1,w,c
 11603  0054AE  A4D8               	btfss	status,2,c
 11604  0054B0  D009               	goto	l7683
 11605                           
 11606                           ;stkvar	_w @ sp[(-2)+0]
 11607  0054B2  0EFE               	movlw	-2
 11608  0054B4  0060  F083  FFE3   	movff	_width,plusw1
 11609  0054BA  0EFF               	movlw	-1
 11610  0054BC  0060  F087  FFE3   	movff	_width+1,plusw1
 11611  0054C2  D016               	goto	l7685
 11612  0054C4                     l7683:
 11613  0054C4  0EFF               	movlw	255
 11614  0054C6  6E45               	movwf	btemp+10,c
 11615  0054C8  0EFF               	movlw	255
 11616  0054CA  6E46               	movwf	btemp+11,c
 11617  0054CC  0060  F080  F043   	movff	_width,btemp+8
 11618  0054D2  0060  F084  F044   	movff	_width+1,btemp+9
 11619  0054D8  5045               	movf	btemp+10,w,c
 11620  0054DA  2643               	addwf	btemp+8,f,c
 11621  0054DC  5046               	movf	btemp+11,w,c
 11622  0054DE  2244               	addwfc	btemp+9,f,c
 11623                           
 11624                           ;stkvar	_w @ sp[(-2)+0]
 11625  0054E0  0EFE               	movlw	-2
 11626  0054E2  0060  F10F  FFE3   	movff	btemp+8,plusw1
 11627  0054E8  0EFF               	movlw	-1
 11628  0054EA  0060  F113  FFE3   	movff	btemp+9,plusw1
 11629  0054F0                     l7685:
 11630                           
 11631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 11632                           ;stkvar	_c @ sp[(-2)+-3]
 11633  0054F0  0EFB               	movlw	-5
 11634  0054F2  006F FF8C  F1CD    	movff	plusw1,_dbuf
 11635                           
 11636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 11637  0054F8  0101               	movlb	1	; () banked
 11638  0054FA  6BCE               	clrf	(_dbuf+1)& (0+255),b
 11639                           
 11640                           ; BSR set to: 1
 11641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 11642                           ;stkvar	_w @ sp[(-2)+0]
 11643  0054FC  0EFE               	movlw	-2
 11644  0054FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11645  005504  006F FF8F FFE6     	movff	plusw1,postinc1
 11646  00550A  0ECD               	movlw	low _dbuf
 11647  00550C  6EE6               	movwf	postinc1,c
 11648  00550E  0E01               	movlw	high _dbuf
 11649  005510  6EE6               	movwf	postinc1,c
 11650                           
 11651                           ;stkvar	_fp @ sp[(-6)+-2]
 11652  005512  0EF8               	movlw	-8
 11653  005514  006F FF8F FFE6     	movff	plusw1,postinc1
 11654  00551A  006F FF8F FFE6     	movff	plusw1,postinc1
 11655  005520  EC0D  F025         	call	_pad	;wreg free
 11656                           
 11657                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 11658  005524  0EFB               	movlw	251
 11659  005526  26E1               	addwf	fsr1l,f,c
 11660  005528  0EFF               	movlw	255
 11661  00552A  22E2               	addwfc	fsr1h,f,c
 11662  00552C  0012               	return		;funcret
 11663  00552E                     __end_of_ctoa:
 11664                           	opt callstack 0
 11665                           
 11666 ;; *************** function _pad *****************
 11667 ;; Defined at:
 11668 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11671 ;;		 -> f(5), NULL(0), 
 11672 ;;  buf             2  [STACK] PTR unsigned char 
 11673 ;;		 -> dbuf(32), 
 11674 ;;  p               2  [STACK] int 
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;  w               2  [STACK] int 
 11677 ;;  i               2  [STACK] int 
 11678 ;; Return value:  Size  Location     Type
 11679 ;;                  2  [STACK] int 
 11680 ;; Registers used:
 11681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/1
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11691 ;;Total ram usage:        0 bytes
 11692 ;; Hardware stack levels used:    1
 11693 ;; Hardware stack levels required when called:    7
 11694 ;; This function calls:
 11695 ;;		_fputc
 11696 ;;		_fputs
 11697 ;;		_strlen
 11698 ;; This function is called by:
 11699 ;;		_ctoa
 11700 ;;		_dtoa
 11701 ;; This function uses a reentrant model
 11702 ;;
 11703                           
 11704                           	psect	text47
 11705  004A1A                     __ptext47:
 11706                           	opt callstack 0
 11707  004A1A                     _pad:
 11708                           	opt callstack 0
 11709                           
 11710                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11711  004A1A  52E6               	movf	postinc1,f,c
 11712  004A1C  52E6               	movf	postinc1,f,c
 11713  004A1E  52E6               	movf	postinc1,f,c
 11714  004A20  52E6               	movf	postinc1,f,c
 11715                           
 11716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 11717                           
 11718                           ;incstack = 0
 11719  004A22  A024               	btfss	_flags,0,c
 11720  004A24  D010               	goto	l7661
 11721                           
 11722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 11723                           ;stkvar	_fp @ sp[(-4)+-2]
 11724  004A26  0EFA               	movlw	-6
 11725  004A28  006F FF8F FFE6     	movff	plusw1,postinc1
 11726  004A2E  006F FF8F FFE6     	movff	plusw1,postinc1
 11727                           
 11728                           ;stkvar	_buf @ sp[(-6)+-4]
 11729  004A34  0EF6               	movlw	-10
 11730  004A36  006F FF8F FFE6     	movff	plusw1,postinc1
 11731  004A3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11732  004A42  ECBE  F029         	call	_fputs	;wreg free
 11733  004A46                     l7661:
 11734                           
 11735                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 11736                           ;stkvar	_p @ sp[(-4)+-6]
 11737  004A46  0EF7               	movlw	-9
 11738  004A48  BEE3               	btfsc	plusw1,7,c
 11739  004A4A  D011               	goto	l7665
 11740                           
 11741                           ;stkvar	_p @ sp[(-4)+-6]
 11742                           ;stkvar	_w @ sp[(-4)+0]
 11743  004A4C  0EF6               	movlw	-10
 11744  004A4E  006F FF8C  F03B    	movff	plusw1,btemp
 11745  004A54  0EFC               	movlw	-4
 11746  004A56  0060  F0EF  FFE3   	movff	btemp,plusw1
 11747  004A5C  0EF7               	movlw	-9
 11748  004A5E  006F FF8C  F03B    	movff	plusw1,btemp
 11749  004A64  0EFD               	movlw	-3
 11750  004A66  0060  F0EF  FFE3   	movff	btemp,plusw1
 11751  004A6C  D004               	goto	l1785
 11752  004A6E                     l7665:
 11753                           
 11754                           ;stkvar	_w @ sp[(-4)+0]
 11755  004A6E  0EFC               	movlw	-4
 11756  004A70  6AE3               	clrf	plusw1,c
 11757  004A72  0EFD               	movlw	-3
 11758  004A74  6AE3               	clrf	plusw1,c
 11759  004A76                     l1785:
 11760                           
 11761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 11762                           ;stkvar	_i @ sp[(-4)+2]
 11763  004A76  0EFE               	movlw	-2
 11764  004A78  6AE3               	clrf	plusw1,c
 11765  004A7A  0EFF               	movlw	-1
 11766  004A7C  6AE3               	clrf	plusw1,c
 11767                           
 11768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11769  004A7E  D01E               	goto	l7671
 11770  004A80                     l7667:
 11771                           
 11772                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 11773                           ;stkvar	_fp @ sp[(-4)+-2]
 11774  004A80  0EFA               	movlw	-6
 11775  004A82  006F FF8F FFE6     	movff	plusw1,postinc1
 11776  004A88  006F FF8F FFE6     	movff	plusw1,postinc1
 11777  004A8E  0E20               	movlw	32
 11778  004A90  6EE6               	movwf	postinc1,c
 11779  004A92  0E00               	movlw	0
 11780  004A94  6EE6               	movwf	postinc1,c
 11781  004A96  EC97  F025         	call	_fputc	;wreg free
 11782                           
 11783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 11784                           ;stkvar	_i @ sp[(-4)+2]
 11785  004A9A  0EFE               	movlw	-2
 11786  004A9C  50E3               	movf	plusw1,w,c
 11787  004A9E  0F01               	addlw	1
 11788  004AA0  6E3B               	movwf	btemp,c
 11789  004AA2  0EFE               	movlw	-2
 11790  004AA4  0060  F0EF  FFE3   	movff	btemp,plusw1
 11791  004AAA  6A3B               	clrf	btemp,c
 11792  004AAC  0EFF               	movlw	-1
 11793  004AAE  50E3               	movf	plusw1,w,c
 11794  004AB0  203B               	addwfc	btemp,w,c
 11795  004AB2  6E3B               	movwf	btemp,c
 11796  004AB4  0EFF               	movlw	-1
 11797  004AB6  0060  F0EF  FFE3   	movff	btemp,plusw1
 11798  004ABC                     l7671:
 11799                           
 11800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11801                           ;stkvar	_w @ sp[(-4)+0]
 11802                           ;stkvar	_i @ sp[(-4)+2]
 11803  004ABC  50E1               	movf	fsr1l,w,c
 11804  004ABE  0FFE               	addlw	-2
 11805  004AC0  6ED9               	movwf	fsr2l,c
 11806  004AC2  50E2               	movf	fsr1h,w,c
 11807  004AC4  6EDA               	movwf	fsr2h,c
 11808  004AC6  0EFF               	movlw	255
 11809  004AC8  22DA               	addwfc	fsr2h,f,c
 11810  004ACA  0EFC               	movlw	-4
 11811  004ACC  50E3               	movf	plusw1,w,c
 11812  004ACE  5CDE               	subwf	postinc2,w,c
 11813  004AD0  50DE               	movf	postinc2,w,c
 11814  004AD2  0A80               	xorlw	128
 11815  004AD4  6E3B               	movwf	btemp,c
 11816  004AD6  0EFD               	movlw	-3
 11817  004AD8  50E3               	movf	plusw1,w,c
 11818  004ADA  0A80               	xorlw	128
 11819  004ADC  583B               	subwfb	btemp,w,c
 11820  004ADE  A0D8               	btfss	status,0,c
 11821  004AE0  D7CF               	goto	l7667
 11822                           
 11823                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 11824  004AE2  B024               	btfsc	_flags,0,c
 11825  004AE4  D010               	goto	l7675
 11826                           
 11827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 11828                           ;stkvar	_fp @ sp[(-4)+-2]
 11829  004AE6  0EFA               	movlw	-6
 11830  004AE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11831  004AEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11832                           
 11833                           ;stkvar	_buf @ sp[(-6)+-4]
 11834  004AF4  0EF6               	movlw	-10
 11835  004AF6  006F FF8F FFE6     	movff	plusw1,postinc1
 11836  004AFC  006F FF8F FFE6     	movff	plusw1,postinc1
 11837  004B02  ECBE  F029         	call	_fputs	;wreg free
 11838  004B06                     l7675:
 11839                           
 11840                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 11841                           ;stkvar	_w @ sp[(-4)+0]
 11842                           ;stkvar	_buf @ sp[(-4)+-4]
 11843  004B06  0EF8               	movlw	-8
 11844  004B08  006F FF8F FFE6     	movff	plusw1,postinc1
 11845  004B0E  006F FF8F FFE6     	movff	plusw1,postinc1
 11846  004B14  EC83  F028         	call	_strlen	;wreg free
 11847  004B18  0EFC               	movlw	-4
 11848  004B1A  50E3               	movf	plusw1,w,c
 11849  004B1C  263B               	addwf	btemp,f,c
 11850  004B1E  0EFD               	movlw	-3
 11851  004B20  50E3               	movf	plusw1,w,c
 11852  004B22  223C               	addwfc	btemp+1,f,c
 11853                           
 11854                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 11855  004B24  0EF6               	movlw	246
 11856  004B26  26E1               	addwf	fsr1l,f,c
 11857  004B28  0EFF               	movlw	255
 11858  004B2A  22E2               	addwfc	fsr1h,f,c
 11859  004B2C  0012               	return		;funcret
 11860  004B2E                     __end_of_pad:
 11861                           	opt callstack 0
 11862                           
 11863 ;; *************** function _strlen *****************
 11864 ;; Defined at:
 11865 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;  s               2  [STACK] PTR const unsigned char 
 11868 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11869 ;;		 -> STR_3(6), V(89), 
 11870 ;; Auto vars:     Size  Location     Type
 11871 ;;  a               2  [STACK] PTR const unsigned char 
 11872 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11873 ;;		 -> STR_3(6), V(89), 
 11874 ;; Return value:  Size  Location     Type
 11875 ;;                  2  [STACK] unsigned int 
 11876 ;; Registers used:
 11877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 11878 ;; Tracked objects:
 11879 ;;		On entry : 0/0
 11880 ;;		On exit  : 0/0
 11881 ;;		Unchanged: 0/0
 11882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11887 ;;Total ram usage:        0 bytes
 11888 ;; Hardware stack levels used:    1
 11889 ;; Hardware stack levels required when called:    3
 11890 ;; This function calls:
 11891 ;;		Nothing
 11892 ;; This function is called by:
 11893 ;;		_eaDogM_WriteString
 11894 ;;		_pad
 11895 ;;		_stoa
 11896 ;; This function uses a reentrant model
 11897 ;;
 11898                           
 11899                           	psect	text48
 11900  005106                     __ptext48:
 11901                           	opt callstack 0
 11902  005106                     _strlen:
 11903                           	opt callstack 0
 11904                           
 11905                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11906  005106  52E6               	movf	postinc1,f,c
 11907  005108  52E6               	movf	postinc1,f,c
 11908                           
 11909                           ;stkvar	_s @ sp[(-2)+-2]
 11910                           
 11911                           ;incstack = 0
 11912  00510A  0EFC               	movlw	-4
 11913  00510C  006F FF8C  F045    	movff	plusw1,btemp+10
 11914  005112  0EFD               	movlw	-3
 11915  005114  006F FF8C  F046    	movff	plusw1,btemp+11
 11916                           
 11917                           ;stkvar	_a @ sp[(-2)+0]
 11918  00511A  0EFF               	movlw	-1
 11919  00511C  0060  F11B  FFE3   	movff	btemp+11,plusw1
 11920  005122  0EFE               	movlw	-2
 11921  005124  0060  F117  FFE3   	movff	btemp+10,plusw1
 11922  00512A  D011               	goto	l5317
 11923  00512C                     l5315:
 11924                           
 11925                           ;stkvar	_s @ sp[(-2)+-2]
 11926  00512C  0EFC               	movlw	-4
 11927  00512E  50E3               	movf	plusw1,w,c
 11928  005130  0F01               	addlw	1
 11929  005132  6E3B               	movwf	btemp,c
 11930  005134  0EFC               	movlw	-4
 11931  005136  0060  F0EF  FFE3   	movff	btemp,plusw1
 11932  00513C  6A3B               	clrf	btemp,c
 11933  00513E  0EFD               	movlw	-3
 11934  005140  50E3               	movf	plusw1,w,c
 11935  005142  203B               	addwfc	btemp,w,c
 11936  005144  6E3B               	movwf	btemp,c
 11937  005146  0EFD               	movlw	-3
 11938  005148  0060  F0EF  FFE3   	movff	btemp,plusw1
 11939  00514E                     l5317:
 11940                           
 11941                           ;stkvar	_s @ sp[(-2)+-2]
 11942  00514E  0EFC               	movlw	-4
 11943  005150  006F FF8F FFF6     	movff	plusw1,tblptrl
 11944  005156  0EFD               	movlw	-3
 11945  005158  006F FF8F FFF7     	movff	plusw1,tblptrh
 11946  00515E  0E00               	movlw	low (__smallconst shr (0+16))
 11947  005160  6EF8               	movwf	tblptru,c
 11948  005162  0E1F               	movlw	(high __ramtop+-1)
 11949  005164  64F7               	cpfsgt	tblptrh,c
 11950  005166  D003               	bra	u2327
 11951  005168  0008               	tblrd		*
 11952  00516A  50F5               	movf	tablat,w,c
 11953  00516C  D007               	bra	u2320
 11954  00516E                     u2327:
 11955  00516E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11956  005174  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11957  00517A  50EF               	movf	indf0,w,c
 11958  00517C                     u2320:
 11959  00517C  0900               	iorlw	0
 11960  00517E  A4D8               	btfss	status,2,c
 11961  005180  D7D5               	goto	l5315
 11962                           
 11963                           ;stkvar	_a @ sp[(-2)+0]
 11964                           ;stkvar	_s @ sp[(-2)+-2]
 11965  005182  0EFC               	movlw	-4
 11966  005184  006F FF8C  F03B    	movff	plusw1,btemp
 11967  00518A  0EFD               	movlw	-3
 11968  00518C  006F FF8C  F03C    	movff	plusw1,btemp+1
 11969  005192  0EFE               	movlw	-2
 11970  005194  50E3               	movf	plusw1,w,c
 11971  005196  5E3B               	subwf	btemp,f,c
 11972  005198  0EFF               	movlw	-1
 11973  00519A  50E3               	movf	plusw1,w,c
 11974  00519C  5A3C               	subwfb	btemp+1,f,c
 11975                           
 11976                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 11977  00519E  52E5               	movf	postdec1,f,c
 11978  0051A0  52E5               	movf	postdec1,f,c
 11979  0051A2  52E5               	movf	postdec1,f,c
 11980  0051A4  52E5               	movf	postdec1,f,c
 11981  0051A6  0012               	return		;funcret
 11982  0051A8                     __end_of_strlen:
 11983                           	opt callstack 0
 11984                           
 11985 ;; *************** function _fputs *****************
 11986 ;; Defined at:
 11987 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;  s               2  [STACK] PTR const unsigned char 
 11990 ;;		 -> dbuf(32), 
 11991 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11992 ;;		 -> f(5), NULL(0), 
 11993 ;; Auto vars:     Size  Location     Type
 11994 ;;  i               2  [STACK] int 
 11995 ;;  c               1  [STACK] unsigned char 
 11996 ;; Return value:  Size  Location     Type
 11997 ;;                  2  [STACK] int 
 11998 ;; Registers used:
 11999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12000 ;; Tracked objects:
 12001 ;;		On entry : 0/1
 12002 ;;		On exit  : 0/0
 12003 ;;		Unchanged: 0/0
 12004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12009 ;;Total ram usage:        0 bytes
 12010 ;; Hardware stack levels used:    1
 12011 ;; Hardware stack levels required when called:    6
 12012 ;; This function calls:
 12013 ;;		_fputc
 12014 ;; This function is called by:
 12015 ;;		_pad
 12016 ;; This function uses a reentrant model
 12017 ;;
 12018                           
 12019                           	psect	text49
 12020  00537C                     __ptext49:
 12021                           	opt callstack 0
 12022  00537C                     _fputs:
 12023                           	opt callstack 0
 12024                           
 12025                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12026  00537C  52E6               	movf	postinc1,f,c
 12027  00537E  52E6               	movf	postinc1,f,c
 12028  005380  52E6               	movf	postinc1,f,c
 12029                           
 12030                           ;stkvar	_i @ sp[(-3)+0]
 12031                           
 12032                           ;incstack = 0
 12033  005382  0EFD               	movlw	-3
 12034  005384  6AE3               	clrf	plusw1,c
 12035  005386  0EFE               	movlw	-2
 12036  005388  6AE3               	clrf	plusw1,c
 12037  00538A  D01F               	goto	l7655
 12038  00538C                     l7651:
 12039                           
 12040                           ;stkvar	_fp @ sp[(-3)+-4]
 12041  00538C  0EF9               	movlw	-7
 12042  00538E  006F FF8F FFE6     	movff	plusw1,postinc1
 12043  005394  006F FF8F FFE6     	movff	plusw1,postinc1
 12044                           
 12045                           ;stkvar	_c @ sp[(-5)+2]
 12046  00539A  0EFD               	movlw	-3
 12047  00539C  50E3               	movf	plusw1,w,c
 12048  00539E  6EE6               	movwf	postinc1,c
 12049  0053A0  0E00               	movlw	0
 12050  0053A2  6EE6               	movwf	postinc1,c
 12051  0053A4  EC97  F025         	call	_fputc	;wreg free
 12052                           
 12053                           ;stkvar	_i @ sp[(-3)+0]
 12054  0053A8  0EFD               	movlw	-3
 12055  0053AA  50E3               	movf	plusw1,w,c
 12056  0053AC  0F01               	addlw	1
 12057  0053AE  6E3B               	movwf	btemp,c
 12058  0053B0  0EFD               	movlw	-3
 12059  0053B2  0060  F0EF  FFE3   	movff	btemp,plusw1
 12060  0053B8  6A3B               	clrf	btemp,c
 12061  0053BA  0EFE               	movlw	-2
 12062  0053BC  50E3               	movf	plusw1,w,c
 12063  0053BE  203B               	addwfc	btemp,w,c
 12064  0053C0  6E3B               	movwf	btemp,c
 12065  0053C2  0EFE               	movlw	-2
 12066  0053C4  0060  F0EF  FFE3   	movff	btemp,plusw1
 12067  0053CA                     l7655:
 12068                           
 12069                           ;stkvar	_i @ sp[(-3)+0]
 12070  0053CA  0EFD               	movlw	-3
 12071  0053CC  006F FF8C  F045    	movff	plusw1,btemp+10
 12072  0053D2  0EFE               	movlw	-2
 12073  0053D4  006F FF8C  F046    	movff	plusw1,btemp+11
 12074                           
 12075                           ;stkvar	_s @ sp[(-3)+-2]
 12076  0053DA  0EFB               	movlw	-5
 12077  0053DC  006F FF8C  F043    	movff	plusw1,btemp+8
 12078  0053E2  0EFC               	movlw	-4
 12079  0053E4  006F FF8C  F044    	movff	plusw1,btemp+9
 12080  0053EA  5045               	movf	btemp+10,w,c
 12081  0053EC  2443               	addwf	btemp+8,w,c
 12082  0053EE  6ED9               	movwf	fsr2l,c
 12083  0053F0  5046               	movf	btemp+11,w,c
 12084  0053F2  2044               	addwfc	btemp+9,w,c
 12085  0053F4  6EDA               	movwf	fsr2h,c
 12086  0053F6  50DF               	movf	indf2,w,c
 12087  0053F8  6E46               	movwf	btemp+11,c
 12088                           
 12089                           ;stkvar	_c @ sp[(-3)+2]
 12090  0053FA  0EFF               	movlw	-1
 12091  0053FC  0060  F11B  FFE3   	movff	btemp+11,plusw1
 12092  005402  0EFF               	movlw	-1
 12093  005404  50E3               	movf	plusw1,w,c
 12094  005406  A4D8               	btfss	status,2,c
 12095  005408  D7C1               	goto	l7651
 12096                           
 12097                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12098  00540A  0EF9               	movlw	249
 12099  00540C  26E1               	addwf	fsr1l,f,c
 12100  00540E  0EFF               	movlw	255
 12101  005410  22E2               	addwfc	fsr1h,f,c
 12102  005412  0012               	return		;funcret
 12103  005414                     __end_of_fputs:
 12104                           	opt callstack 0
 12105                           
 12106 ;; *************** function _fputc *****************
 12107 ;; Defined at:
 12108 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 12109 ;; Parameters:    Size  Location     Type
 12110 ;;  c               2  [STACK] int 
 12111 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12112 ;;		 -> f(5), NULL(0), 
 12113 ;; Auto vars:     Size  Location     Type
 12114 ;;		None
 12115 ;; Return value:  Size  Location     Type
 12116 ;;                  2  [STACK] int 
 12117 ;; Registers used:
 12118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12119 ;; Tracked objects:
 12120 ;;		On entry : 0/0
 12121 ;;		On exit  : 0/0
 12122 ;;		Unchanged: 0/0
 12123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12128 ;;Total ram usage:        0 bytes
 12129 ;; Hardware stack levels used:    1
 12130 ;; Hardware stack levels required when called:    5
 12131 ;; This function calls:
 12132 ;;		_putch
 12133 ;; This function is called by:
 12134 ;;		_pad
 12135 ;;		_stoa
 12136 ;;		_vfpfcnvrt
 12137 ;;		_fputs
 12138 ;; This function uses a reentrant model
 12139 ;;
 12140                           
 12141                           	psect	text50
 12142  004B2E                     __ptext50:
 12143                           	opt callstack 0
 12144  004B2E                     _fputc:
 12145                           	opt callstack 21
 12146                           
 12147                           ;stkvar	_fp @ sp[(0)+-4]
 12148                           
 12149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12150                           ;incstack = 0
 12151  004B2E  0EFC               	movlw	-4
 12152  004B30  006F FF8C  F03B    	movff	plusw1,btemp
 12153  004B36  0EFD               	movlw	-3
 12154  004B38  50E3               	movf	plusw1,w,c
 12155  004B3A  103B               	iorwf	btemp,w,c
 12156  004B3C  B4D8               	btfsc	status,2,c
 12157  004B3E  D009               	goto	u4420
 12158                           
 12159                           ;stkvar	_fp @ sp[(0)+-4]
 12160  004B40  0EFC               	movlw	-4
 12161  004B42  006F FF8C  F03B    	movff	plusw1,btemp
 12162  004B48  0EFD               	movlw	-3
 12163  004B4A  50E3               	movf	plusw1,w,c
 12164  004B4C  103B               	iorwf	btemp,w,c
 12165  004B4E  A4D8               	btfss	status,2,c
 12166  004B50  D006               	goto	l7641
 12167  004B52                     u4420:
 12168                           
 12169                           ;stkvar	_c @ sp[(0)+-2]
 12170  004B52  0EFE               	movlw	-2
 12171  004B54  50E3               	movf	plusw1,w,c
 12172  004B56  6EE6               	movwf	postinc1,c
 12173  004B58  ECC7  F030         	call	_putch	;wreg free
 12174  004B5C  D069               	goto	l2568
 12175  004B5E                     l7641:
 12176                           
 12177                           ;stkvar	_fp @ sp[(0)+-4]
 12178  004B5E  0EFC               	movlw	-4
 12179  004B60  006F FF8C  F045    	movff	plusw1,btemp+10
 12180  004B66  0EFD               	movlw	-3
 12181  004B68  006F FF8C  F046    	movff	plusw1,btemp+11
 12182  004B6E  0E03               	movlw	3
 12183  004B70  2445               	addwf	btemp+10,w,c
 12184  004B72  6ED9               	movwf	fsr2l,c
 12185  004B74  0E00               	movlw	0
 12186  004B76  2046               	addwfc	btemp+11,w,c
 12187  004B78  6EDA               	movwf	fsr2h,c
 12188  004B7A  50DE               	movf	postinc2,w,c
 12189  004B7C  10DE               	iorwf	postinc2,w,c
 12190  004B7E  B4D8               	btfsc	status,2,c
 12191  004B80  D026               	goto	u4440
 12192                           
 12193                           ;stkvar	_fp @ sp[(0)+-4]
 12194  004B82  0EFC               	movlw	-4
 12195  004B84  006F FF8C  F045    	movff	plusw1,btemp+10
 12196  004B8A  0EFD               	movlw	-3
 12197  004B8C  006F FF8C  F046    	movff	plusw1,btemp+11
 12198  004B92  0E03               	movlw	3
 12199  004B94  2445               	addwf	btemp+10,w,c
 12200  004B96  6ED9               	movwf	fsr2l,c
 12201  004B98  0E00               	movlw	0
 12202  004B9A  2046               	addwfc	btemp+11,w,c
 12203  004B9C  6EDA               	movwf	fsr2h,c
 12204                           
 12205                           ;stkvar	_fp @ sp[(0)+-4]
 12206  004B9E  0EFC               	movlw	-4
 12207  004BA0  006F FF8C  F045    	movff	plusw1,btemp+10
 12208  004BA6  0EFD               	movlw	-3
 12209  004BA8  006F FF8C  F046    	movff	plusw1,btemp+11
 12210  004BAE  0E01               	movlw	1
 12211  004BB0  2445               	addwf	btemp+10,w,c
 12212  004BB2  6EE9               	movwf	fsr0l,c
 12213  004BB4  0E00               	movlw	0
 12214  004BB6  2046               	addwfc	btemp+11,w,c
 12215  004BB8  6EEA               	movwf	fsr0h,c
 12216  004BBA  50DE               	movf	postinc2,w,c
 12217  004BBC  5CEE               	subwf	postinc0,w,c
 12218  004BBE  50EE               	movf	postinc0,w,c
 12219  004BC0  0A80               	xorlw	128
 12220  004BC2  6E3B               	movwf	btemp,c
 12221  004BC4  50DE               	movf	postinc2,w,c
 12222  004BC6  0A80               	xorlw	128
 12223  004BC8  583B               	subwfb	btemp,w,c
 12224  004BCA  B0D8               	btfsc	status,0,c
 12225  004BCC  D031               	goto	l2568
 12226  004BCE                     u4440:
 12227                           
 12228                           ;stkvar	_c @ sp[(0)+-2]
 12229                           ;stkvar	_fp @ sp[(0)+-4]
 12230  004BCE  0EFC               	movlw	-4
 12231  004BD0  006F FF8C  F045    	movff	plusw1,btemp+10
 12232  004BD6  0EFD               	movlw	-3
 12233  004BD8  006F FF8C  F046    	movff	plusw1,btemp+11
 12234  004BDE  0E01               	movlw	1
 12235  004BE0  2445               	addwf	btemp+10,w,c
 12236  004BE2  6ED9               	movwf	fsr2l,c
 12237  004BE4  0E00               	movlw	0
 12238  004BE6  2046               	addwfc	btemp+11,w,c
 12239  004BE8  6EDA               	movwf	fsr2h,c
 12240  004BEA  50DF               	movf	indf2,w,c
 12241  004BEC  6E46               	movwf	btemp+11,c
 12242                           
 12243                           ;stkvar	_fp @ sp[(0)+-4]
 12244  004BEE  0EFC               	movlw	-4
 12245  004BF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12246  004BF6  0EFD               	movlw	-3
 12247  004BF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12248  004BFE  50DF               	movf	indf2,w,c
 12249  004C00  2446               	addwf	btemp+11,w,c
 12250  004C02  6ED9               	movwf	fsr2l,c
 12251  004C04  6ADA               	clrf	fsr2h,c
 12252  004C06  0EFE               	movlw	-2
 12253  004C08  006F FF8F FFDF     	movff	plusw1,indf2
 12254                           
 12255                           ;stkvar	_fp @ sp[(0)+-4]
 12256  004C0E  0EFC               	movlw	-4
 12257  004C10  006F FF8C  F045    	movff	plusw1,btemp+10
 12258  004C16  0EFD               	movlw	-3
 12259  004C18  006F FF8C  F046    	movff	plusw1,btemp+11
 12260  004C1E  0E01               	movlw	1
 12261  004C20  2445               	addwf	btemp+10,w,c
 12262  004C22  6ED9               	movwf	fsr2l,c
 12263  004C24  0E00               	movlw	0
 12264  004C26  2046               	addwfc	btemp+11,w,c
 12265  004C28  6EDA               	movwf	fsr2h,c
 12266  004C2A  2ADE               	incf	postinc2,f,c
 12267  004C2C  0E00               	movlw	0
 12268  004C2E  22DD               	addwfc	postdec2,f,c
 12269  004C30                     l2568:
 12270                           
 12271                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12272  004C30  52E5               	movf	postdec1,f,c
 12273  004C32  52E5               	movf	postdec1,f,c
 12274  004C34  52E5               	movf	postdec1,f,c
 12275  004C36  52E5               	movf	postdec1,f,c
 12276  004C38  0012               	return		;funcret
 12277  004C3A                     __end_of_fputc:
 12278                           	opt callstack 0
 12279                           
 12280 ;; *************** function _putch *****************
 12281 ;; Defined at:
 12282 ;;		line 138 in file "eadog.c"
 12283 ;; Parameters:    Size  Location     Type
 12284 ;;  c               1  [STACK] unsigned char 
 12285 ;; Auto vars:     Size  Location     Type
 12286 ;;		None
 12287 ;; Return value:  Size  Location     Type
 12288 ;;                  1  [STACK] void 
 12289 ;; Registers used:
 12290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12291 ;; Tracked objects:
 12292 ;;		On entry : 0/0
 12293 ;;		On exit  : 0/0
 12294 ;;		Unchanged: 0/0
 12295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12300 ;;Total ram usage:        0 bytes
 12301 ;; Hardware stack levels used:    1
 12302 ;; Hardware stack levels required when called:    4
 12303 ;; This function calls:
 12304 ;;		_ringBufS_put_dma
 12305 ;; This function is called by:
 12306 ;;		_fputc
 12307 ;; This function uses a reentrant model
 12308 ;;
 12309                           
 12310                           	psect	text51
 12311  00618E                     __ptext51:
 12312                           	opt callstack 0
 12313  00618E                     _putch:
 12314                           	opt callstack 21
 12315                           
 12316                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 12317                           ;stkvar	_c @ sp[(0)+-1]
 12318                           
 12319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12320                           ;incstack = 0
 12321  00618E  0EFF               	movlw	-1
 12322  006190  50E3               	movf	plusw1,w,c
 12323  006192  6EE6               	movwf	postinc1,c
 12324  006194  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
 12325  00619A  0060  F353  FFE6   	movff	_spi_link+7,postinc1
 12326  0061A0  EC2E  F028         	call	_ringBufS_put_dma	;wreg free
 12327                           
 12328                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 12329  0061A4  52E5               	movf	postdec1,f,c
 12330  0061A6  0012               	return		;funcret
 12331  0061A8                     __end_of_putch:
 12332                           	opt callstack 0
 12333                           
 12334 ;; *************** function _ringBufS_put_dma *****************
 12335 ;; Defined at:
 12336 ;;		line 67 in file "ringbufs.c"
 12337 ;; Parameters:    Size  Location     Type
 12338 ;;  _this           2  [STACK] PTR struct ringBufS_t
 12339 ;;		 -> ring_buf1(67), 
 12340 ;;  c               1  [STACK] const unsigned char 
 12341 ;; Auto vars:     Size  Location     Type
 12342 ;;		None
 12343 ;; Return value:  Size  Location     Type
 12344 ;;                  1  [STACK] void 
 12345 ;; Registers used:
 12346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12347 ;; Tracked objects:
 12348 ;;		On entry : 0/0
 12349 ;;		On exit  : 0/0
 12350 ;;		Unchanged: 0/0
 12351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12356 ;;Total ram usage:        0 bytes
 12357 ;; Hardware stack levels used:    1
 12358 ;; Hardware stack levels required when called:    3
 12359 ;; This function calls:
 12360 ;;		Nothing
 12361 ;; This function is called by:
 12362 ;;		_putch
 12363 ;; This function uses a reentrant model
 12364 ;;
 12365                           
 12366                           	psect	text52
 12367  00505C                     __ptext52:
 12368                           	opt callstack 0
 12369  00505C                     _ringBufS_put_dma:
 12370                           	opt callstack 21
 12371                           
 12372                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 12373                           ;stkvar	__this @ sp[(0)+-2]
 12374                           
 12375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12376                           ;incstack = 0
 12377  00505C  0EFE               	movlw	-2
 12378  00505E  006F FF8C  F045    	movff	plusw1,btemp+10
 12379  005064  0EFF               	movlw	-1
 12380  005066  006F FF8C  F046    	movff	plusw1,btemp+11
 12381  00506C  0E42               	movlw	66
 12382  00506E  2445               	addwf	btemp+10,w,c
 12383  005070  6ED9               	movwf	fsr2l,c
 12384  005072  0E00               	movlw	0
 12385  005074  2046               	addwfc	btemp+11,w,c
 12386  005076  6EDA               	movwf	fsr2h,c
 12387  005078  0E40               	movlw	64
 12388  00507A  60DF               	cpfslt	indf2,c
 12389  00507C  D040               	goto	l1464
 12390                           
 12391                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 12392                           ;stkvar	_c @ sp[(0)+-3]
 12393                           ;stkvar	__this @ sp[(0)+-2]
 12394  00507E  0EFE               	movlw	-2
 12395  005080  006F FF8C  F045    	movff	plusw1,btemp+10
 12396  005086  0EFF               	movlw	-1
 12397  005088  006F FF8C  F046    	movff	plusw1,btemp+11
 12398  00508E  0E40               	movlw	64
 12399  005090  2445               	addwf	btemp+10,w,c
 12400  005092  6ED9               	movwf	fsr2l,c
 12401  005094  0E00               	movlw	0
 12402  005096  2046               	addwfc	btemp+11,w,c
 12403  005098  6EDA               	movwf	fsr2h,c
 12404  00509A  50DF               	movf	indf2,w,c
 12405  00509C  6E46               	movwf	btemp+11,c
 12406                           
 12407                           ;stkvar	__this @ sp[(0)+-2]
 12408  00509E  0EFE               	movlw	-2
 12409  0050A0  006F FF8C  F043    	movff	plusw1,btemp+8
 12410  0050A6  0EFF               	movlw	-1
 12411  0050A8  006F FF8C  F044    	movff	plusw1,btemp+9
 12412  0050AE  5046               	movf	btemp+11,w,c
 12413  0050B0  2443               	addwf	btemp+8,w,c
 12414  0050B2  6ED9               	movwf	fsr2l,c
 12415  0050B4  0E00               	movlw	0
 12416  0050B6  2044               	addwfc	btemp+9,w,c
 12417  0050B8  6EDA               	movwf	fsr2h,c
 12418  0050BA  0EFD               	movlw	-3
 12419  0050BC  006F FF8F FFDF     	movff	plusw1,indf2
 12420                           
 12421                           ;ringbufs.c: 71:   ++_this->head;
 12422                           ;stkvar	__this @ sp[(0)+-2]
 12423  0050C2  0EFE               	movlw	-2
 12424  0050C4  006F FF8C  F045    	movff	plusw1,btemp+10
 12425  0050CA  0EFF               	movlw	-1
 12426  0050CC  006F FF8C  F046    	movff	plusw1,btemp+11
 12427  0050D2  0E40               	movlw	64
 12428  0050D4  2445               	addwf	btemp+10,w,c
 12429  0050D6  6ED9               	movwf	fsr2l,c
 12430  0050D8  0E00               	movlw	0
 12431  0050DA  2046               	addwfc	btemp+11,w,c
 12432  0050DC  6EDA               	movwf	fsr2h,c
 12433  0050DE  2ADF               	incf	indf2,f,c
 12434                           
 12435                           ;ringbufs.c: 72:   ++_this->count;
 12436                           ;stkvar	__this @ sp[(0)+-2]
 12437  0050E0  0EFE               	movlw	-2
 12438  0050E2  006F FF8C  F045    	movff	plusw1,btemp+10
 12439  0050E8  0EFF               	movlw	-1
 12440  0050EA  006F FF8C  F046    	movff	plusw1,btemp+11
 12441  0050F0  0E42               	movlw	66
 12442  0050F2  2445               	addwf	btemp+10,w,c
 12443  0050F4  6ED9               	movwf	fsr2l,c
 12444  0050F6  0E00               	movlw	0
 12445  0050F8  2046               	addwfc	btemp+11,w,c
 12446  0050FA  6EDA               	movwf	fsr2h,c
 12447  0050FC  2ADF               	incf	indf2,f,c
 12448  0050FE                     l1464:
 12449                           
 12450                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 12451  0050FE  52E5               	movf	postdec1,f,c
 12452  005100  52E5               	movf	postdec1,f,c
 12453  005102  52E5               	movf	postdec1,f,c
 12454  005104  0012               	return		;funcret
 12455  005106                     __end_of_ringBufS_put_dma:
 12456                           	opt callstack 0
 12457                           
 12458 ;; *************** function _SYSTEM_Initialize *****************
 12459 ;; Defined at:
 12460 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12461 ;; Parameters:    Size  Location     Type
 12462 ;;		None
 12463 ;; Auto vars:     Size  Location     Type
 12464 ;;		None
 12465 ;; Return value:  Size  Location     Type
 12466 ;;                  1  [STACK] void 
 12467 ;; Registers used:
 12468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 12469 ;; Tracked objects:
 12470 ;;		On entry : 0/0
 12471 ;;		On exit  : 3F/3C
 12472 ;;		Unchanged: 0/0
 12473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12478 ;;Total ram usage:        0 bytes
 12479 ;; Hardware stack levels used:    1
 12480 ;; Hardware stack levels required when called:    5
 12481 ;; This function calls:
 12482 ;;		_ADCC_Initialize
 12483 ;;		_CLC1_Initialize
 12484 ;;		_CLKREF_Initialize
 12485 ;;		_DMA1_Initialize
 12486 ;;		_DSM_Initialize
 12487 ;;		_EXT_INT_Initialize
 12488 ;;		_INTERRUPT_Initialize
 12489 ;;		_NCO1_Initialize
 12490 ;;		_OSCILLATOR_Initialize
 12491 ;;		_PIN_MANAGER_Initialize
 12492 ;;		_PMD_Initialize
 12493 ;;		_SPI1_Initialize
 12494 ;;		_TMR5_Initialize
 12495 ;;		_TMR6_Initialize
 12496 ;;		_UART1_Initialize
 12497 ;;		_UART2_Initialize
 12498 ;; This function is called by:
 12499 ;;		_main
 12500 ;; This function uses a reentrant model
 12501 ;;
 12502                           
 12503                           	psect	text53
 12504  005994                     __ptext53:
 12505                           	opt callstack 0
 12506  005994                     _SYSTEM_Initialize:
 12507                           	opt callstack 25
 12508                           
 12509                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12510                           
 12511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12512                           ;incstack = 0
 12513  005994  ECCC  F02A         	call	_INTERRUPT_Initialize	;wreg free
 12514                           
 12515                           ; BSR set to: 57
 12516                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12517  005998  EC04  F031         	call	_PMD_Initialize	;wreg free
 12518                           
 12519                           ; BSR set to: 57
 12520                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12521  00599C  ECD4  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 12522                           
 12523                           ; BSR set to: 58
 12524                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12525  0059A0  ECF9  F030         	call	_OSCILLATOR_Initialize	;wreg free
 12526                           
 12527                           ; BSR set to: 57
 12528                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12529  0059A4  EC3C  F02C         	call	_ADCC_Initialize	;wreg free
 12530                           
 12531                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 12532  0059A8  ECAB  F030         	call	_NCO1_Initialize	;wreg free
 12533                           
 12534                           ; BSR set to: 63
 12535                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 12536  0059AC  EC16  F02C         	call	_EXT_INT_Initialize	;wreg free
 12537                           
 12538                           ; BSR set to: 57
 12539                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 12540  0059B0  EC19  F02F         	call	_TMR6_Initialize	;wreg free
 12541                           
 12542                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 12543  0059B4  EC2A  F030         	call	_CLC1_Initialize	;wreg free
 12544                           
 12545                           ; BSR set to: 60
 12546                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 12547  0059B8  EC84  F02C         	call	_TMR5_Initialize	;wreg free
 12548                           
 12549                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 12550  0059BC  ECB9  F030         	call	_DSM_Initialize	;wreg free
 12551                           
 12552                           ; BSR set to: 60
 12553                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 12554  0059C0  ECFF  F02A         	call	_UART1_Initialize	;wreg free
 12555                           
 12556                           ; BSR set to: 57
 12557                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 12558  0059C4  EC92  F02B         	call	_UART2_Initialize	;wreg free
 12559                           
 12560                           ; BSR set to: 57
 12561                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 12562  0059C8  ECEE  F030         	call	_SPI1_Initialize	;wreg free
 12563                           
 12564                           ; BSR set to: 61
 12565                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 12566  0059CC  EC97  F02A         	call	_DMA1_Initialize	;wreg free
 12567                           
 12568                           ; BSR set to: 59
 12569                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 12570  0059D0  EC35  F031         	call	_CLKREF_Initialize	;wreg free
 12571                           
 12572                           ; BSR set to: 60
 12573                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12574  0059D4  0012               	return		;funcret
 12575  0059D6                     __end_of_SYSTEM_Initialize:
 12576                           	opt callstack 0
 12577                           
 12578 ;; *************** function _UART2_Initialize *****************
 12579 ;; Defined at:
 12580 ;;		line 78 in file "mcc_generated_files/uart2.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;		None
 12583 ;; Auto vars:     Size  Location     Type
 12584 ;;		None
 12585 ;; Return value:  Size  Location     Type
 12586 ;;                  1  [STACK] void 
 12587 ;; Registers used:
 12588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12589 ;; Tracked objects:
 12590 ;;		On entry : 3F/39
 12591 ;;		On exit  : 3F/39
 12592 ;;		Unchanged: 0/0
 12593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12598 ;;Total ram usage:        0 bytes
 12599 ;; Hardware stack levels used:    1
 12600 ;; Hardware stack levels required when called:    4
 12601 ;; This function calls:
 12602 ;;		_UART2_SetRxInterruptHandler
 12603 ;;		_UART2_SetTxInterruptHandler
 12604 ;; This function is called by:
 12605 ;;		_SYSTEM_Initialize
 12606 ;; This function uses a reentrant model
 12607 ;;
 12608                           
 12609                           	psect	text54
 12610  005724                     __ptext54:
 12611                           	opt callstack 0
 12612  005724                     _UART2_Initialize:
 12613                           	opt callstack 25
 12614                           
 12615                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 12616                           
 12617                           ; BSR set to: 60
 12618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12619                           ;incstack = 0
 12620  005724  0139               	movlb	57	; () banked
 12621  005726  9596               	bcf	150,2,b	;volatile
 12622                           
 12623                           ; BSR set to: 57
 12624                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 12625  005728  0EFC               	movlw	low _UART2_Receive_ISR
 12626  00572A  6EE6               	movwf	postinc1,c
 12627  00572C  0E60               	movlw	high _UART2_Receive_ISR
 12628  00572E  6EE6               	movwf	postinc1,c
 12629  005730  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 12630  005732  6EE6               	movwf	postinc1,c
 12631  005734  ECDD  F02E         	call	_UART2_SetRxInterruptHandler	;wreg free
 12632                           
 12633                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 12634  005738  0139               	movlb	57	; () banked
 12635  00573A  9796               	bcf	150,3,b	;volatile
 12636                           
 12637                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 12638  00573C  0E46               	movlw	low _UART2_Transmit_ISR
 12639  00573E  6EE6               	movwf	postinc1,c
 12640  005740  0E5C               	movlw	high _UART2_Transmit_ISR
 12641  005742  6EE6               	movwf	postinc1,c
 12642  005744  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 12643  005746  6EE6               	movwf	postinc1,c
 12644  005748  ECC9  F02E         	call	_UART2_SetTxInterruptHandler	;wreg free
 12645                           
 12646                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 12647  00574C  013D               	movlb	61	; () banked
 12648  00574E  6BD4               	clrf	212,b	;volatile
 12649                           
 12650                           ; BSR set to: 61
 12651                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 12652  005750  6BD6               	clrf	214,b	;volatile
 12653                           
 12654                           ; BSR set to: 61
 12655                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 12656  005752  6BD8               	clrf	216,b	;volatile
 12657                           
 12658                           ; BSR set to: 61
 12659                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 12660  005754  0EB0               	movlw	176
 12661  005756  6FDA               	movwf	218,b	;volatile
 12662                           
 12663                           ; BSR set to: 61
 12664                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 12665  005758  0E80               	movlw	128
 12666  00575A  6FDB               	movwf	219,b	;volatile
 12667                           
 12668                           ; BSR set to: 61
 12669                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 12670  00575C  6BDC               	clrf	220,b	;volatile
 12671                           
 12672                           ; BSR set to: 61
 12673                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 12674  00575E  0E82               	movlw	130
 12675  005760  6FDD               	movwf	221,b	;volatile
 12676                           
 12677                           ; BSR set to: 61
 12678                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 12679  005762  0E06               	movlw	6
 12680  005764  6FDE               	movwf	222,b	;volatile
 12681                           
 12682                           ; BSR set to: 61
 12683                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 12684  005766  6BDF               	clrf	223,b	;volatile
 12685                           
 12686                           ; BSR set to: 61
 12687                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 12688  005768  6BE0               	clrf	224,b	;volatile
 12689                           
 12690                           ; BSR set to: 61
 12691                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 12692  00576A  6BE1               	clrf	225,b	;volatile
 12693                           
 12694                           ; BSR set to: 61
 12695                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 12696  00576C  6BE2               	clrf	226,b	;volatile
 12697                           
 12698                           ; BSR set to: 61
 12699                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 12700  00576E  6A34               	clrf	_uart2TxHead,c	;volatile
 12701                           
 12702                           ; BSR set to: 61
 12703                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 12704  005770  6A33               	clrf	_uart2TxTail,c	;volatile
 12705                           
 12706                           ; BSR set to: 61
 12707                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 12708  005772  0E40               	movlw	64
 12709  005774  6E32               	movwf	_uart2TxBufferRemaining,c	;volatile
 12710                           
 12711                           ; BSR set to: 61
 12712                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 12713  005776  6A31               	clrf	_uart2RxHead,c	;volatile
 12714                           
 12715                           ; BSR set to: 61
 12716                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 12717  005778  6A30               	clrf	_uart2RxTail,c	;volatile
 12718                           
 12719                           ; BSR set to: 61
 12720                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 12721  00577A  6A2F               	clrf	_uart2RxCount,c	;volatile
 12722                           
 12723                           ; BSR set to: 61
 12724                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 12725  00577C  0139               	movlb	57	; () banked
 12726  00577E  8596               	bsf	150,2,b	;volatile
 12727                           
 12728                           ; BSR set to: 57
 12729                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12730  005780  0012               	return		;funcret
 12731  005782                     __end_of_UART2_Initialize:
 12732                           	opt callstack 0
 12733                           
 12734 ;; *************** function _UART2_SetTxInterruptHandler *****************
 12735 ;; Defined at:
 12736 ;;		line 252 in file "mcc_generated_files/uart2.c"
 12737 ;; Parameters:    Size  Location     Type
 12738 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12739 ;;		 -> UART2_Transmit_ISR(1), 
 12740 ;; Auto vars:     Size  Location     Type
 12741 ;;		None
 12742 ;; Return value:  Size  Location     Type
 12743 ;;                  1  [STACK] void 
 12744 ;; Registers used:
 12745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12746 ;; Tracked objects:
 12747 ;;		On entry : 3F/39
 12748 ;;		On exit  : 0/0
 12749 ;;		Unchanged: 0/0
 12750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12755 ;;Total ram usage:        0 bytes
 12756 ;; Hardware stack levels used:    1
 12757 ;; Hardware stack levels required when called:    3
 12758 ;; This function calls:
 12759 ;;		Nothing
 12760 ;; This function is called by:
 12761 ;;		_UART2_Initialize
 12762 ;; This function uses a reentrant model
 12763 ;;
 12764                           
 12765                           	psect	text55
 12766  005D92                     __ptext55:
 12767                           	opt callstack 0
 12768  005D92                     _UART2_SetTxInterruptHandler:
 12769                           	opt callstack 25
 12770                           
 12771                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 12772                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12773                           
 12774                           ; BSR set to: 57
 12775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12776                           ;incstack = 0
 12777  005D92  50E1               	movf	fsr1l,w,c
 12778  005D94  0FFD               	addlw	-3
 12779  005D96  6ED9               	movwf	fsr2l,c
 12780  005D98  50E2               	movf	fsr1h,w,c
 12781  005D9A  6EDA               	movwf	fsr2h,c
 12782  005D9C  0EFF               	movlw	255
 12783  005D9E  22DA               	addwfc	fsr2h,f,c
 12784  005DA0  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler
 12785  005DA6  006F FF78  F012    	movff	postinc2,_UART2_TxInterruptHandler+1
 12786  005DAC  006F FF74  F013    	movff	postdec2,_UART2_TxInterruptHandler+2
 12787                           
 12788                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12789  005DB2  52E5               	movf	postdec1,f,c
 12790  005DB4  52E5               	movf	postdec1,f,c
 12791  005DB6  52E5               	movf	postdec1,f,c
 12792  005DB8  0012               	return		;funcret
 12793  005DBA                     __end_of_UART2_SetTxInterruptHandler:
 12794                           	opt callstack 0
 12795                           
 12796 ;; *************** function _UART2_SetRxInterruptHandler *****************
 12797 ;; Defined at:
 12798 ;;		line 248 in file "mcc_generated_files/uart2.c"
 12799 ;; Parameters:    Size  Location     Type
 12800 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12801 ;;		 -> UART2_Receive_ISR(1), 
 12802 ;; Auto vars:     Size  Location     Type
 12803 ;;		None
 12804 ;; Return value:  Size  Location     Type
 12805 ;;                  1  [STACK] void 
 12806 ;; Registers used:
 12807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12808 ;; Tracked objects:
 12809 ;;		On entry : 3F/39
 12810 ;;		On exit  : 0/0
 12811 ;;		Unchanged: 0/0
 12812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12817 ;;Total ram usage:        0 bytes
 12818 ;; Hardware stack levels used:    1
 12819 ;; Hardware stack levels required when called:    3
 12820 ;; This function calls:
 12821 ;;		Nothing
 12822 ;; This function is called by:
 12823 ;;		_UART2_Initialize
 12824 ;; This function uses a reentrant model
 12825 ;;
 12826                           
 12827                           	psect	text56
 12828  005DBA                     __ptext56:
 12829                           	opt callstack 0
 12830  005DBA                     _UART2_SetRxInterruptHandler:
 12831                           	opt callstack 25
 12832                           
 12833                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 12834                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12835                           
 12836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12837                           ;incstack = 0
 12838  005DBA  50E1               	movf	fsr1l,w,c
 12839  005DBC  0FFD               	addlw	-3
 12840  005DBE  6ED9               	movwf	fsr2l,c
 12841  005DC0  50E2               	movf	fsr1h,w,c
 12842  005DC2  6EDA               	movwf	fsr2h,c
 12843  005DC4  0EFF               	movlw	255
 12844  005DC6  22DA               	addwfc	fsr2h,f,c
 12845  005DC8  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler
 12846  005DCE  006F FF78  F015    	movff	postinc2,_UART2_RxInterruptHandler+1
 12847  005DD4  006F FF74  F016    	movff	postdec2,_UART2_RxInterruptHandler+2
 12848                           
 12849                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12850  005DDA  52E5               	movf	postdec1,f,c
 12851  005DDC  52E5               	movf	postdec1,f,c
 12852  005DDE  52E5               	movf	postdec1,f,c
 12853  005DE0  0012               	return		;funcret
 12854  005DE2                     __end_of_UART2_SetRxInterruptHandler:
 12855                           	opt callstack 0
 12856                           
 12857 ;; *************** function _UART1_Initialize *****************
 12858 ;; Defined at:
 12859 ;;		line 78 in file "mcc_generated_files/uart1.c"
 12860 ;; Parameters:    Size  Location     Type
 12861 ;;		None
 12862 ;; Auto vars:     Size  Location     Type
 12863 ;;		None
 12864 ;; Return value:  Size  Location     Type
 12865 ;;                  1  [STACK] void 
 12866 ;; Registers used:
 12867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12868 ;; Tracked objects:
 12869 ;;		On entry : 3F/3C
 12870 ;;		On exit  : 3F/39
 12871 ;;		Unchanged: 0/0
 12872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12877 ;;Total ram usage:        0 bytes
 12878 ;; Hardware stack levels used:    1
 12879 ;; Hardware stack levels required when called:    4
 12880 ;; This function calls:
 12881 ;;		_UART1_SetRxInterruptHandler
 12882 ;;		_UART1_SetTxInterruptHandler
 12883 ;; This function is called by:
 12884 ;;		_SYSTEM_Initialize
 12885 ;; This function uses a reentrant model
 12886 ;;
 12887                           
 12888                           	psect	text57
 12889  0055FE                     __ptext57:
 12890                           	opt callstack 0
 12891  0055FE                     _UART1_Initialize:
 12892                           	opt callstack 25
 12893                           
 12894                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 12895                           
 12896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12897                           ;incstack = 0
 12898  0055FE  0139               	movlb	57	; () banked
 12899  005600  9793               	bcf	147,3,b	;volatile
 12900                           
 12901                           ; BSR set to: 57
 12902                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12903  005602  0EDC               	movlw	low _UART1_Receive_ISR
 12904  005604  6EE6               	movwf	postinc1,c
 12905  005606  0E60               	movlw	high _UART1_Receive_ISR
 12906  005608  6EE6               	movwf	postinc1,c
 12907  00560A  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12908  00560C  6EE6               	movwf	postinc1,c
 12909  00560E  EC05  F02F         	call	_UART1_SetRxInterruptHandler	;wreg free
 12910                           
 12911                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 12912  005612  0139               	movlb	57	; () banked
 12913  005614  9993               	bcf	147,4,b	;volatile
 12914                           
 12915                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12916  005616  0E1A               	movlw	low _UART1_Transmit_ISR
 12917  005618  6EE6               	movwf	postinc1,c
 12918  00561A  0E5C               	movlw	high _UART1_Transmit_ISR
 12919  00561C  6EE6               	movwf	postinc1,c
 12920  00561E  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12921  005620  6EE6               	movwf	postinc1,c
 12922  005622  ECF1  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 12923                           
 12924                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 12925  005626  013D               	movlb	61	; () banked
 12926  005628  6BEC               	clrf	236,b	;volatile
 12927                           
 12928                           ; BSR set to: 61
 12929                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 12930  00562A  6BED               	clrf	237,b	;volatile
 12931                           
 12932                           ; BSR set to: 61
 12933                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 12934  00562C  6BEE               	clrf	238,b	;volatile
 12935                           
 12936                           ; BSR set to: 61
 12937                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 12938  00562E  6BEF               	clrf	239,b	;volatile
 12939                           
 12940                           ; BSR set to: 61
 12941                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 12942  005630  6BF0               	clrf	240,b	;volatile
 12943                           
 12944                           ; BSR set to: 61
 12945                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 12946  005632  6BF1               	clrf	241,b	;volatile
 12947                           
 12948                           ; BSR set to: 61
 12949                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 12950  005634  0EB0               	movlw	176
 12951  005636  6FF2               	movwf	242,b	;volatile
 12952                           
 12953                           ; BSR set to: 61
 12954                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 12955  005638  0E80               	movlw	128
 12956  00563A  6FF3               	movwf	243,b	;volatile
 12957                           
 12958                           ; BSR set to: 61
 12959                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 12960  00563C  6BF4               	clrf	244,b	;volatile
 12961                           
 12962                           ; BSR set to: 61
 12963                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 12964  00563E  0E82               	movlw	130
 12965  005640  6FF5               	movwf	245,b	;volatile
 12966                           
 12967                           ; BSR set to: 61
 12968                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 12969  005642  0E06               	movlw	6
 12970  005644  6FF6               	movwf	246,b	;volatile
 12971                           
 12972                           ; BSR set to: 61
 12973                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 12974  005646  6BF7               	clrf	247,b	;volatile
 12975                           
 12976                           ; BSR set to: 61
 12977                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 12978  005648  6BF8               	clrf	248,b	;volatile
 12979                           
 12980                           ; BSR set to: 61
 12981                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 12982  00564A  6BF9               	clrf	249,b	;volatile
 12983                           
 12984                           ; BSR set to: 61
 12985                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 12986  00564C  6BFA               	clrf	250,b	;volatile
 12987                           
 12988                           ; BSR set to: 61
 12989                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 12990  00564E  6A3A               	clrf	_uart1TxHead,c	;volatile
 12991                           
 12992                           ; BSR set to: 61
 12993                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 12994  005650  6A39               	clrf	_uart1TxTail,c	;volatile
 12995                           
 12996                           ; BSR set to: 61
 12997                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12998  005652  0E40               	movlw	64
 12999  005654  6E38               	movwf	_uart1TxBufferRemaining,c	;volatile
 13000                           
 13001                           ; BSR set to: 61
 13002                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 13003  005656  6A37               	clrf	_uart1RxHead,c	;volatile
 13004                           
 13005                           ; BSR set to: 61
 13006                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 13007  005658  6A36               	clrf	_uart1RxTail,c	;volatile
 13008                           
 13009                           ; BSR set to: 61
 13010                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 13011  00565A  6A35               	clrf	_uart1RxCount,c	;volatile
 13012                           
 13013                           ; BSR set to: 61
 13014                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 13015  00565C  0139               	movlb	57	; () banked
 13016  00565E  8793               	bsf	147,3,b	;volatile
 13017                           
 13018                           ; BSR set to: 57
 13019                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13020  005660  0012               	return		;funcret
 13021  005662                     __end_of_UART1_Initialize:
 13022                           	opt callstack 0
 13023                           
 13024 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13025 ;; Defined at:
 13026 ;;		line 244 in file "mcc_generated_files/uart1.c"
 13027 ;; Parameters:    Size  Location     Type
 13028 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13029 ;;		 -> UART1_Transmit_ISR(1), 
 13030 ;; Auto vars:     Size  Location     Type
 13031 ;;		None
 13032 ;; Return value:  Size  Location     Type
 13033 ;;                  1  [STACK] void 
 13034 ;; Registers used:
 13035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13036 ;; Tracked objects:
 13037 ;;		On entry : 3F/39
 13038 ;;		On exit  : 0/0
 13039 ;;		Unchanged: 0/0
 13040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13045 ;;Total ram usage:        0 bytes
 13046 ;; Hardware stack levels used:    1
 13047 ;; Hardware stack levels required when called:    3
 13048 ;; This function calls:
 13049 ;;		Nothing
 13050 ;; This function is called by:
 13051 ;;		_UART1_Initialize
 13052 ;; This function uses a reentrant model
 13053 ;;
 13054                           
 13055                           	psect	text58
 13056  005DE2                     __ptext58:
 13057                           	opt callstack 0
 13058  005DE2                     _UART1_SetTxInterruptHandler:
 13059                           	opt callstack 25
 13060                           
 13061                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 13062                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13063                           
 13064                           ; BSR set to: 57
 13065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13066                           ;incstack = 0
 13067  005DE2  50E1               	movf	fsr1l,w,c
 13068  005DE4  0FFD               	addlw	-3
 13069  005DE6  6ED9               	movwf	fsr2l,c
 13070  005DE8  50E2               	movf	fsr1h,w,c
 13071  005DEA  6EDA               	movwf	fsr2h,c
 13072  005DEC  0EFF               	movlw	255
 13073  005DEE  22DA               	addwfc	fsr2h,f,c
 13074  005DF0  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler
 13075  005DF6  006F FF78  F00C    	movff	postinc2,_UART1_TxInterruptHandler+1
 13076  005DFC  006F FF74  F00D    	movff	postdec2,_UART1_TxInterruptHandler+2
 13077                           
 13078                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13079  005E02  52E5               	movf	postdec1,f,c
 13080  005E04  52E5               	movf	postdec1,f,c
 13081  005E06  52E5               	movf	postdec1,f,c
 13082  005E08  0012               	return		;funcret
 13083  005E0A                     __end_of_UART1_SetTxInterruptHandler:
 13084                           	opt callstack 0
 13085                           
 13086 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13087 ;; Defined at:
 13088 ;;		line 239 in file "mcc_generated_files/uart1.c"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13091 ;;		 -> UART1_Receive_ISR(1), 
 13092 ;; Auto vars:     Size  Location     Type
 13093 ;;		None
 13094 ;; Return value:  Size  Location     Type
 13095 ;;                  1  [STACK] void 
 13096 ;; Registers used:
 13097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13098 ;; Tracked objects:
 13099 ;;		On entry : 3F/39
 13100 ;;		On exit  : 0/0
 13101 ;;		Unchanged: 0/0
 13102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13107 ;;Total ram usage:        0 bytes
 13108 ;; Hardware stack levels used:    1
 13109 ;; Hardware stack levels required when called:    3
 13110 ;; This function calls:
 13111 ;;		Nothing
 13112 ;; This function is called by:
 13113 ;;		_UART1_Initialize
 13114 ;; This function uses a reentrant model
 13115 ;;
 13116                           
 13117                           	psect	text59
 13118  005E0A                     __ptext59:
 13119                           	opt callstack 0
 13120  005E0A                     _UART1_SetRxInterruptHandler:
 13121                           	opt callstack 25
 13122                           
 13123                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 13124                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13125                           
 13126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13127                           ;incstack = 0
 13128  005E0A  50E1               	movf	fsr1l,w,c
 13129  005E0C  0FFD               	addlw	-3
 13130  005E0E  6ED9               	movwf	fsr2l,c
 13131  005E10  50E2               	movf	fsr1h,w,c
 13132  005E12  6EDA               	movwf	fsr2h,c
 13133  005E14  0EFF               	movlw	255
 13134  005E16  22DA               	addwfc	fsr2h,f,c
 13135  005E18  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler
 13136  005E1E  006F FF78  F00F    	movff	postinc2,_UART1_RxInterruptHandler+1
 13137  005E24  006F FF74  F010    	movff	postdec2,_UART1_RxInterruptHandler+2
 13138                           
 13139                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13140  005E2A  52E5               	movf	postdec1,f,c
 13141  005E2C  52E5               	movf	postdec1,f,c
 13142  005E2E  52E5               	movf	postdec1,f,c
 13143  005E30  0012               	return		;funcret
 13144  005E32                     __end_of_UART1_SetRxInterruptHandler:
 13145                           	opt callstack 0
 13146                           
 13147 ;; *************** function _TMR6_Initialize *****************
 13148 ;; Defined at:
 13149 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 13150 ;; Parameters:    Size  Location     Type
 13151 ;;		None
 13152 ;; Auto vars:     Size  Location     Type
 13153 ;;		None
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  1  [STACK] void 
 13156 ;; Registers used:
 13157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13158 ;; Tracked objects:
 13159 ;;		On entry : 3F/39
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13167 ;;Total ram usage:        0 bytes
 13168 ;; Hardware stack levels used:    1
 13169 ;; Hardware stack levels required when called:    4
 13170 ;; This function calls:
 13171 ;;		_TMR6_SetInterruptHandler
 13172 ;; This function is called by:
 13173 ;;		_SYSTEM_Initialize
 13174 ;; This function uses a reentrant model
 13175 ;;
 13176                           
 13177                           	psect	text60
 13178  005E32                     __ptext60:
 13179                           	opt callstack 0
 13180  005E32                     _TMR6_Initialize:
 13181                           	opt callstack 25
 13182                           
 13183                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 13184                           
 13185                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13186                           ;incstack = 0
 13187  005E32  0E01               	movlw	1
 13188  005E34  6E96               	movwf	16278,c	;volatile
 13189                           
 13190                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 13191  005E36  6A95               	clrf	16277,c	;volatile
 13192                           
 13193                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 13194  005E38  6A97               	clrf	16279,c	;volatile
 13195                           
 13196                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 13197  005E3A  0E03               	movlw	3
 13198  005E3C  6E93               	movwf	16275,c	;volatile
 13199                           
 13200                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 13201  005E3E  6A92               	clrf	16274,c	;volatile
 13202                           
 13203                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 13204  005E40  0139               	movlb	57	; () banked
 13205  005E42  91A9               	bcf	169,0,b	;volatile
 13206                           
 13207                           ; BSR set to: 57
 13208                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 13209  005E44  8199               	bsf	153,0,b	;volatile
 13210                           
 13211                           ; BSR set to: 57
 13212                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 13213  005E46  0E4E               	movlw	low _TMR6_DefaultInterruptHandler
 13214  005E48  6EE6               	movwf	postinc1,c
 13215  005E4A  0E59               	movlw	high _TMR6_DefaultInterruptHandler
 13216  005E4C  6EE6               	movwf	postinc1,c
 13217  005E4E  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 13218  005E50  6EE6               	movwf	postinc1,c
 13219  005E52  EC2D  F02F         	call	_TMR6_SetInterruptHandler	;wreg free
 13220                           
 13221                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 13222  005E56  6894               	setf	16276,c	;volatile
 13223                           
 13224                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13225  005E58  0012               	return		;funcret
 13226  005E5A                     __end_of_TMR6_Initialize:
 13227                           	opt callstack 0
 13228                           
 13229 ;; *************** function _TMR6_SetInterruptHandler *****************
 13230 ;; Defined at:
 13231 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 13232 ;; Parameters:    Size  Location     Type
 13233 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13234 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 13235 ;; Auto vars:     Size  Location     Type
 13236 ;;		None
 13237 ;; Return value:  Size  Location     Type
 13238 ;;                  1  [STACK] void 
 13239 ;; Registers used:
 13240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13241 ;; Tracked objects:
 13242 ;;		On entry : 3F/39
 13243 ;;		On exit  : 0/0
 13244 ;;		Unchanged: 0/0
 13245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13250 ;;Total ram usage:        0 bytes
 13251 ;; Hardware stack levels used:    1
 13252 ;; Hardware stack levels required when called:    3
 13253 ;; This function calls:
 13254 ;;		Nothing
 13255 ;; This function is called by:
 13256 ;;		_TMR6_Initialize
 13257 ;; This function uses a reentrant model
 13258 ;;
 13259                           
 13260                           	psect	text61
 13261  005E5A                     __ptext61:
 13262                           	opt callstack 0
 13263  005E5A                     _TMR6_SetInterruptHandler:
 13264                           	opt callstack 25
 13265                           
 13266                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 13267                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13268                           
 13269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13270                           ;incstack = 0
 13271  005E5A  50E1               	movf	fsr1l,w,c
 13272  005E5C  0FFD               	addlw	-3
 13273  005E5E  6ED9               	movwf	fsr2l,c
 13274  005E60  50E2               	movf	fsr1h,w,c
 13275  005E62  6EDA               	movwf	fsr2h,c
 13276  005E64  0EFF               	movlw	255
 13277  005E66  22DA               	addwfc	fsr2h,f,c
 13278  005E68  006F FF78  F0F3    	movff	postinc2,_TMR6_InterruptHandler
 13279  005E6E  006F FF78  F0F4    	movff	postinc2,_TMR6_InterruptHandler+1
 13280  005E74  006F FF74  F0F5    	movff	postdec2,_TMR6_InterruptHandler+2
 13281                           
 13282                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13283  005E7A  52E5               	movf	postdec1,f,c
 13284  005E7C  52E5               	movf	postdec1,f,c
 13285  005E7E  52E5               	movf	postdec1,f,c
 13286  005E80  0012               	return		;funcret
 13287  005E82                     __end_of_TMR6_SetInterruptHandler:
 13288                           	opt callstack 0
 13289                           
 13290 ;; *************** function _TMR5_Initialize *****************
 13291 ;; Defined at:
 13292 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 13293 ;; Parameters:    Size  Location     Type
 13294 ;;		None
 13295 ;; Auto vars:     Size  Location     Type
 13296 ;;		None
 13297 ;; Return value:  Size  Location     Type
 13298 ;;                  1  [STACK] void 
 13299 ;; Registers used:
 13300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 13301 ;; Tracked objects:
 13302 ;;		On entry : 3F/3C
 13303 ;;		On exit  : 0/0
 13304 ;;		Unchanged: 0/0
 13305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13310 ;;Total ram usage:        0 bytes
 13311 ;; Hardware stack levels used:    1
 13312 ;; Hardware stack levels required when called:    4
 13313 ;; This function calls:
 13314 ;;		_TMR5_SetInterruptHandler
 13315 ;; This function is called by:
 13316 ;;		_SYSTEM_Initialize
 13317 ;; This function uses a reentrant model
 13318 ;;
 13319                           
 13320                           	psect	text62
 13321  005908                     __ptext62:
 13322                           	opt callstack 0
 13323  005908                     _TMR5_Initialize:
 13324                           	opt callstack 25
 13325                           
 13326                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 13327                           
 13328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13329                           ;incstack = 0
 13330  005908  6A9B               	clrf	16283,c	;volatile
 13331                           
 13332                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 13333  00590A  6A9C               	clrf	16284,c	;volatile
 13334                           
 13335                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 13336  00590C  0E01               	movlw	1
 13337  00590E  6E9D               	movwf	16285,c	;volatile
 13338                           
 13339                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 13340  005910  0E63               	movlw	99
 13341  005912  6E99               	movwf	16281,c	;volatile
 13342                           
 13343                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 13344  005914  0EC0               	movlw	192
 13345  005916  6E98               	movwf	16280,c	;volatile
 13346                           
 13347                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 13348  005918  5098               	movf	16280,w,c	;volatile
 13349  00591A  006F FE64  F03B    	movff	16281,btemp	;volatile
 13350  005920  6A3C               	clrf	btemp+1,c
 13351  005922  0060  F0EC  F03C   	movff	btemp,btemp+1
 13352  005928  6A3B               	clrf	btemp,c
 13353  00592A  103B               	iorwf	btemp,w,c
 13354  00592C  6E28               	movwf	_timer5ReloadVal,c	;volatile
 13355  00592E  503C               	movf	btemp+1,w,c
 13356  005930  6E29               	movwf	_timer5ReloadVal+1,c	;volatile
 13357                           
 13358                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 13359  005932  0139               	movlb	57	; () banked
 13360  005934  9DA8               	bcf	168,6,b	;volatile
 13361                           
 13362                           ; BSR set to: 57
 13363                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 13364  005936  8D98               	bsf	152,6,b	;volatile
 13365                           
 13366                           ; BSR set to: 57
 13367                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 13368  005938  0EC2               	movlw	low _TMR5_DefaultInterruptHandler
 13369  00593A  6EE6               	movwf	postinc1,c
 13370  00593C  0E61               	movlw	high _TMR5_DefaultInterruptHandler
 13371  00593E  6EE6               	movwf	postinc1,c
 13372  005940  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 13373  005942  6EE6               	movwf	postinc1,c
 13374  005944  EC41  F02F         	call	_TMR5_SetInterruptHandler	;wreg free
 13375                           
 13376                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 13377  005948  0E31               	movlw	49
 13378  00594A  6E9A               	movwf	16282,c	;volatile
 13379                           
 13380                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13381  00594C  0012               	return		;funcret
 13382  00594E                     __end_of_TMR5_Initialize:
 13383                           	opt callstack 0
 13384                           
 13385 ;; *************** function _TMR5_SetInterruptHandler *****************
 13386 ;; Defined at:
 13387 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 13388 ;; Parameters:    Size  Location     Type
 13389 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13390 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 13391 ;; Auto vars:     Size  Location     Type
 13392 ;;		None
 13393 ;; Return value:  Size  Location     Type
 13394 ;;                  1  [STACK] void 
 13395 ;; Registers used:
 13396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13397 ;; Tracked objects:
 13398 ;;		On entry : 3F/39
 13399 ;;		On exit  : 0/0
 13400 ;;		Unchanged: 0/0
 13401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13406 ;;Total ram usage:        0 bytes
 13407 ;; Hardware stack levels used:    1
 13408 ;; Hardware stack levels required when called:    3
 13409 ;; This function calls:
 13410 ;;		Nothing
 13411 ;; This function is called by:
 13412 ;;		_TMR5_Initialize
 13413 ;; This function uses a reentrant model
 13414 ;;
 13415                           
 13416                           	psect	text63
 13417  005E82                     __ptext63:
 13418                           	opt callstack 0
 13419  005E82                     _TMR5_SetInterruptHandler:
 13420                           	opt callstack 25
 13421                           
 13422                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 13423                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13424                           
 13425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13426                           ;incstack = 0
 13427  005E82  50E1               	movf	fsr1l,w,c
 13428  005E84  0FFD               	addlw	-3
 13429  005E86  6ED9               	movwf	fsr2l,c
 13430  005E88  50E2               	movf	fsr1h,w,c
 13431  005E8A  6EDA               	movwf	fsr2h,c
 13432  005E8C  0EFF               	movlw	255
 13433  005E8E  22DA               	addwfc	fsr2h,f,c
 13434  005E90  006F FF78  F0F0    	movff	postinc2,_TMR5_InterruptHandler
 13435  005E96  006F FF78  F0F1    	movff	postinc2,_TMR5_InterruptHandler+1
 13436  005E9C  006F FF74  F0F2    	movff	postdec2,_TMR5_InterruptHandler+2
 13437                           
 13438                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13439  005EA2  52E5               	movf	postdec1,f,c
 13440  005EA4  52E5               	movf	postdec1,f,c
 13441  005EA6  52E5               	movf	postdec1,f,c
 13442  005EA8  0012               	return		;funcret
 13443  005EAA                     __end_of_TMR5_SetInterruptHandler:
 13444                           	opt callstack 0
 13445                           
 13446 ;; *************** function _SPI1_Initialize *****************
 13447 ;; Defined at:
 13448 ;;		line 64 in file "mcc_generated_files/spi1.c"
 13449 ;; Parameters:    Size  Location     Type
 13450 ;;		None
 13451 ;; Auto vars:     Size  Location     Type
 13452 ;;		None
 13453 ;; Return value:  Size  Location     Type
 13454 ;;                  1  [STACK] void 
 13455 ;; Registers used:
 13456 ;;		wreg, status,2
 13457 ;; Tracked objects:
 13458 ;;		On entry : 3F/39
 13459 ;;		On exit  : 3F/3D
 13460 ;;		Unchanged: 0/0
 13461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13466 ;;Total ram usage:        0 bytes
 13467 ;; Hardware stack levels used:    1
 13468 ;; Hardware stack levels required when called:    3
 13469 ;; This function calls:
 13470 ;;		Nothing
 13471 ;; This function is called by:
 13472 ;;		_SYSTEM_Initialize
 13473 ;; This function uses a reentrant model
 13474 ;;
 13475                           
 13476                           	psect	text64
 13477  0061DC                     __ptext64:
 13478                           	opt callstack 0
 13479  0061DC                     _SPI1_Initialize:
 13480                           	opt callstack 26
 13481                           
 13482                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 13483                           
 13484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13485                           ;incstack = 0
 13486  0061DC  0E40               	movlw	64
 13487  0061DE  013D               	movlb	61	; () banked
 13488  0061E0  6F15               	movwf	21,b	;volatile
 13489                           
 13490                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 13491  0061E2  0E03               	movlw	3
 13492  0061E4  6F16               	movwf	22,b	;volatile
 13493                           
 13494                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 13495  0061E6  0E4F               	movlw	79
 13496  0061E8  6F19               	movwf	25,b	;volatile
 13497                           
 13498                           ; BSR set to: 61
 13499                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 13500  0061EA  6B1C               	clrf	28,b	;volatile
 13501                           
 13502                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 13503  0061EC  0E83               	movlw	131
 13504  0061EE  6F14               	movwf	20,b	;volatile
 13505                           
 13506                           ; BSR set to: 61
 13507                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13508  0061F0  0012               	return		;funcret
 13509  0061F2                     __end_of_SPI1_Initialize:
 13510                           	opt callstack 0
 13511                           
 13512 ;; *************** function _PMD_Initialize *****************
 13513 ;; Defined at:
 13514 ;;		line 88 in file "mcc_generated_files/mcc.c"
 13515 ;; Parameters:    Size  Location     Type
 13516 ;;		None
 13517 ;; Auto vars:     Size  Location     Type
 13518 ;;		None
 13519 ;; Return value:  Size  Location     Type
 13520 ;;                  1  [STACK] void 
 13521 ;; Registers used:
 13522 ;;		None
 13523 ;; Tracked objects:
 13524 ;;		On entry : 3F/39
 13525 ;;		On exit  : 3F/39
 13526 ;;		Unchanged: 0/0
 13527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13532 ;;Total ram usage:        0 bytes
 13533 ;; Hardware stack levels used:    1
 13534 ;; Hardware stack levels required when called:    3
 13535 ;; This function calls:
 13536 ;;		Nothing
 13537 ;; This function is called by:
 13538 ;;		_SYSTEM_Initialize
 13539 ;; This function uses a reentrant model
 13540 ;;
 13541                           
 13542                           	psect	text65
 13543  006208                     __ptext65:
 13544                           	opt callstack 0
 13545  006208                     _PMD_Initialize:
 13546                           	opt callstack 26
 13547                           
 13548                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 13549                           
 13550                           ; BSR set to: 61
 13551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13552                           ;incstack = 0
 13553  006208  0139               	movlb	57	; () banked
 13554  00620A  6BC0               	clrf	192,b	;volatile
 13555                           
 13556                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 13557  00620C  6BC1               	clrf	193,b	;volatile
 13558                           
 13559                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 13560  00620E  6BC2               	clrf	194,b	;volatile
 13561                           
 13562                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 13563  006210  6BC3               	clrf	195,b	;volatile
 13564                           
 13565                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 13566  006212  6BC4               	clrf	196,b	;volatile
 13567                           
 13568                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 13569  006214  6BC5               	clrf	197,b	;volatile
 13570                           
 13571                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 13572  006216  6BC6               	clrf	198,b	;volatile
 13573                           
 13574                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 13575  006218  6BC7               	clrf	199,b	;volatile
 13576                           
 13577                           ; BSR set to: 57
 13578                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13579  00621A  0012               	return		;funcret
 13580  00621C                     __end_of_PMD_Initialize:
 13581                           	opt callstack 0
 13582                           
 13583 ;; *************** function _PIN_MANAGER_Initialize *****************
 13584 ;; Defined at:
 13585 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13586 ;; Parameters:    Size  Location     Type
 13587 ;;		None
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;		None
 13590 ;; Return value:  Size  Location     Type
 13591 ;;                  1  [STACK] void 
 13592 ;; Registers used:
 13593 ;;		wreg, status,2
 13594 ;; Tracked objects:
 13595 ;;		On entry : 3F/39
 13596 ;;		On exit  : 3F/3A
 13597 ;;		Unchanged: 0/0
 13598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13603 ;;Total ram usage:        0 bytes
 13604 ;; Hardware stack levels used:    1
 13605 ;; Hardware stack levels required when called:    3
 13606 ;; This function calls:
 13607 ;;		Nothing
 13608 ;; This function is called by:
 13609 ;;		_SYSTEM_Initialize
 13610 ;; This function uses a reentrant model
 13611 ;;
 13612                           
 13613                           	psect	text66
 13614  0051A8                     __ptext66:
 13615                           	opt callstack 0
 13616  0051A8                     _PIN_MANAGER_Initialize:
 13617                           	opt callstack 26
 13618                           
 13619                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 13620                           
 13621                           ; BSR set to: 57
 13622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13623                           ;incstack = 0
 13624  0051A8  0E07               	movlw	7
 13625  0051AA  6EBE               	movwf	16318,c	;volatile
 13626                           
 13627                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 13628  0051AC  6ABD               	clrf	16317,c	;volatile
 13629                           
 13630                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 13631  0051AE  6ABA               	clrf	16314,c	;volatile
 13632                           
 13633                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 13634  0051B0  6ABF               	clrf	16319,c	;volatile
 13635                           
 13636                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 13637  0051B2  6ABB               	clrf	16315,c	;volatile
 13638                           
 13639                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 13640  0051B4  0E06               	movlw	6
 13641  0051B6  6EBC               	movwf	16316,c	;volatile
 13642                           
 13643                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 13644  0051B8  6AC6               	clrf	16326,c	;volatile
 13645                           
 13646                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 13647  0051BA  68C7               	setf	16327,c	;volatile
 13648                           
 13649                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 13650  0051BC  0E8F               	movlw	143
 13651  0051BE  6EC2               	movwf	16322,c	;volatile
 13652                           
 13653                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 13654  0051C0  0EBF               	movlw	191
 13655  0051C2  6EC3               	movwf	16323,c	;volatile
 13656                           
 13657                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 13658  0051C4  0E91               	movlw	145
 13659  0051C6  6EC4               	movwf	16324,c	;volatile
 13660                           
 13661                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 13662  0051C8  0EFC               	movlw	252
 13663  0051CA  6EC5               	movwf	16325,c	;volatile
 13664                           
 13665                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 13666  0051CC  0EF0               	movlw	240
 13667  0051CE  013A               	movlb	58	; () banked
 13668  0051D0  6F70               	movwf	112,b	;volatile
 13669                           
 13670                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 13671  0051D2  0E01               	movlw	1
 13672  0051D4  6F60               	movwf	96,b	;volatile
 13673                           
 13674                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 13675  0051D6  0E38               	movlw	56
 13676  0051D8  6F50               	movwf	80,b	;volatile
 13677                           
 13678                           ; BSR set to: 58
 13679                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 13680  0051DA  6B80               	clrf	128,b	;volatile
 13681                           
 13682                           ; BSR set to: 58
 13683                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 13684  0051DC  6990               	setf	144,b	;volatile
 13685                           
 13686                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 13687  0051DE  0E8F               	movlw	143
 13688  0051E0  6F40               	movwf	64,b	;volatile
 13689                           
 13690                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 13691  0051E2  0E0C               	movlw	12
 13692  0051E4  6F71               	movwf	113,b	;volatile
 13693                           
 13694                           ; BSR set to: 58
 13695                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 13696  0051E6  6B91               	clrf	145,b	;volatile
 13697                           
 13698                           ; BSR set to: 58
 13699                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 13700  0051E8  6B81               	clrf	129,b	;volatile
 13701                           
 13702                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 13703  0051EA  0E87               	movlw	135
 13704  0051EC  6F51               	movwf	81,b	;volatile
 13705                           
 13706                           ; BSR set to: 58
 13707                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 13708  0051EE  6B41               	clrf	65,b	;volatile
 13709                           
 13710                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 13711  0051F0  0E90               	movlw	144
 13712  0051F2  6F61               	movwf	97,b	;volatile
 13713                           
 13714                           ; BSR set to: 58
 13715                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 13716  0051F4  6B82               	clrf	130,b	;volatile
 13717                           
 13718                           ; BSR set to: 58
 13719                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 13720  0051F6  6B92               	clrf	146,b	;volatile
 13721                           
 13722                           ; BSR set to: 58
 13723                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 13724  0051F8  6B42               	clrf	66,b	;volatile
 13725                           
 13726                           ; BSR set to: 58
 13727                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 13728  0051FA  6B52               	clrf	82,b	;volatile
 13729                           
 13730                           ; BSR set to: 58
 13731                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 13732  0051FC  6B62               	clrf	98,b	;volatile
 13733                           
 13734                           ; BSR set to: 58
 13735                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 13736  0051FE  6B72               	clrf	114,b	;volatile
 13737                           
 13738                           ; BSR set to: 58
 13739                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 13740  005200  6943               	setf	67,b	;volatile
 13741                           
 13742                           ; BSR set to: 58
 13743                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 13744  005202  6953               	setf	83,b	;volatile
 13745                           
 13746                           ; BSR set to: 58
 13747                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 13748  005204  6963               	setf	99,b	;volatile
 13749                           
 13750                           ; BSR set to: 58
 13751                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 13752  005206  6973               	setf	115,b	;volatile
 13753                           
 13754                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 13755  005208  0E07               	movlw	7
 13756  00520A  6F83               	movwf	131,b	;volatile
 13757                           
 13758                           ; BSR set to: 58
 13759                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 13760  00520C  6993               	setf	147,b	;volatile
 13761                           
 13762                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 13763  00520E  0E0F               	movlw	15
 13764  005210  6FE8               	movwf	232,b	;volatile
 13765                           
 13766                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 13767  005212  0E16               	movlw	22
 13768  005214  6F0E               	movwf	14,b	;volatile
 13769                           
 13770                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 13771  005216  0E1E               	movlw	30
 13772  005218  6F13               	movwf	19,b	;volatile
 13773                           
 13774                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 13775  00521A  0E08               	movlw	8
 13776  00521C  6FC0               	movwf	192,b	;volatile
 13777                           
 13778                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 13779  00521E  0E0A               	movlw	10
 13780  005220  6FC2               	movwf	194,b	;volatile
 13781                           
 13782                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 13783  005222  0E09               	movlw	9
 13784  005224  6FC1               	movwf	193,b	;volatile
 13785                           
 13786                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 13787  005226  0E17               	movlw	23
 13788  005228  6FE5               	movwf	229,b	;volatile
 13789                           
 13790                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 13791  00522A  0E13               	movlw	19
 13792  00522C  6FDE               	movwf	222,b	;volatile
 13793                           
 13794                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 13795  00522E  0E01               	movlw	1
 13796  005230  6F04               	movwf	4,b	;volatile
 13797                           
 13798                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 13799  005232  0E26               	movlw	38
 13800  005234  6F05               	movwf	5,b	;volatile
 13801                           
 13802                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 13803  005236  0E28               	movlw	40
 13804  005238  6F06               	movwf	6,b	;volatile
 13805                           
 13806                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 13807  00523A  0E1F               	movlw	31
 13808  00523C  6F15               	movwf	21,b	;volatile
 13809                           
 13810                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 13811  00523E  0E13               	movlw	19
 13812  005240  6F16               	movwf	22,b	;volatile
 13813                           
 13814                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 13815  005242  0E14               	movlw	20
 13816  005244  6FDF               	movwf	223,b	;volatile
 13817                           
 13818                           ; BSR set to: 58
 13819                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 13820  005246  0012               	return		;funcret
 13821  005248                     __end_of_PIN_MANAGER_Initialize:
 13822                           	opt callstack 0
 13823                           
 13824 ;; *************** function _OSCILLATOR_Initialize *****************
 13825 ;; Defined at:
 13826 ;;		line 70 in file "mcc_generated_files/mcc.c"
 13827 ;; Parameters:    Size  Location     Type
 13828 ;;		None
 13829 ;; Auto vars:     Size  Location     Type
 13830 ;;		None
 13831 ;; Return value:  Size  Location     Type
 13832 ;;                  1  [STACK] void 
 13833 ;; Registers used:
 13834 ;;		wreg, status,2
 13835 ;; Tracked objects:
 13836 ;;		On entry : 3F/3A
 13837 ;;		On exit  : 3F/39
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13844 ;;Total ram usage:        0 bytes
 13845 ;; Hardware stack levels used:    1
 13846 ;; Hardware stack levels required when called:    3
 13847 ;; This function calls:
 13848 ;;		Nothing
 13849 ;; This function is called by:
 13850 ;;		_SYSTEM_Initialize
 13851 ;; This function uses a reentrant model
 13852 ;;
 13853                           
 13854                           	psect	text67
 13855  0061F2                     __ptext67:
 13856                           	opt callstack 0
 13857  0061F2                     _OSCILLATOR_Initialize:
 13858                           	opt callstack 26
 13859                           
 13860                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 13861                           
 13862                           ; BSR set to: 58
 13863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13864                           ;incstack = 0
 13865  0061F2  0E20               	movlw	32
 13866  0061F4  0139               	movlb	57	; () banked
 13867  0061F6  6FD9               	movwf	217,b	;volatile
 13868                           
 13869                           ; BSR set to: 57
 13870                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 13871  0061F8  6BDB               	clrf	219,b	;volatile
 13872                           
 13873                           ; BSR set to: 57
 13874                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 13875  0061FA  6BDD               	clrf	221,b	;volatile
 13876                           
 13877                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 13878  0061FC  0E02               	movlw	2
 13879  0061FE  6FDF               	movwf	223,b	;volatile
 13880                           
 13881                           ; BSR set to: 57
 13882                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 13883  006200  6BDE               	clrf	222,b	;volatile
 13884  006202                     l194:
 13885                           
 13886                           ; BSR set to: 57
 13887                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 13888  006202  B1DC               	btfsc	220,0,b	;volatile
 13889  006204  0012               	return	
 13890  006206  D7FD               	goto	l194
 13891  006208                     __end_of_OSCILLATOR_Initialize:
 13892                           	opt callstack 0
 13893                           
 13894 ;; *************** function _NCO1_Initialize *****************
 13895 ;; Defined at:
 13896 ;;		line 58 in file "mcc_generated_files/nco1.c"
 13897 ;; Parameters:    Size  Location     Type
 13898 ;;		None
 13899 ;; Auto vars:     Size  Location     Type
 13900 ;;		None
 13901 ;; Return value:  Size  Location     Type
 13902 ;;                  1  [STACK] void 
 13903 ;; Registers used:
 13904 ;;		wreg, status,2
 13905 ;; Tracked objects:
 13906 ;;		On entry : 0/39
 13907 ;;		On exit  : 3F/3F
 13908 ;;		Unchanged: 0/0
 13909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13914 ;;Total ram usage:        0 bytes
 13915 ;; Hardware stack levels used:    1
 13916 ;; Hardware stack levels required when called:    3
 13917 ;; This function calls:
 13918 ;;		Nothing
 13919 ;; This function is called by:
 13920 ;;		_SYSTEM_Initialize
 13921 ;; This function uses a reentrant model
 13922 ;;
 13923                           
 13924                           	psect	text68
 13925  006156                     __ptext68:
 13926                           	opt callstack 0
 13927  006156                     _NCO1_Initialize:
 13928                           	opt callstack 26
 13929                           
 13930                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 13931                           
 13932                           ; BSR set to: 57
 13933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13934                           ;incstack = 0
 13935  006156  013F               	movlb	63	; () banked
 13936  006158  6B3E               	clrf	62,b	;volatile
 13937                           
 13938                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 13939  00615A  6B3F               	clrf	63,b	;volatile
 13940                           
 13941                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 13942  00615C  6B3A               	clrf	58,b	;volatile
 13943                           
 13944                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 13945  00615E  6B39               	clrf	57,b	;volatile
 13946                           
 13947                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 13948  006160  6B38               	clrf	56,b	;volatile
 13949                           
 13950                           ; BSR set to: 63
 13951                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 13952  006162  0E06               	movlw	6
 13953  006164  6F3D               	movwf	61,b	;volatile
 13954                           
 13955                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 13956  006166  0EC7               	movlw	199
 13957  006168  6F3C               	movwf	60,b	;volatile
 13958                           
 13959                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 13960  00616A  0EAE               	movlw	174
 13961  00616C  6F3B               	movwf	59,b	;volatile
 13962                           
 13963                           ; BSR set to: 63
 13964                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 13965  00616E  8F3E               	bsf	62,7,b	;volatile
 13966                           
 13967                           ; BSR set to: 63
 13968                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13969  006170  0012               	return		;funcret
 13970  006172                     __end_of_NCO1_Initialize:
 13971                           	opt callstack 0
 13972                           
 13973 ;; *************** function _INTERRUPT_Initialize *****************
 13974 ;; Defined at:
 13975 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13976 ;; Parameters:    Size  Location     Type
 13977 ;;		None
 13978 ;; Auto vars:     Size  Location     Type
 13979 ;;  state           1  [STACK] _Bool 
 13980 ;; Return value:  Size  Location     Type
 13981 ;;                  1  [STACK] void 
 13982 ;; Registers used:
 13983 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 13984 ;; Tracked objects:
 13985 ;;		On entry : 0/0
 13986 ;;		On exit  : 3F/39
 13987 ;;		Unchanged: 0/0
 13988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13993 ;;Total ram usage:        0 bytes
 13994 ;; Hardware stack levels used:    1
 13995 ;; Hardware stack levels required when called:    3
 13996 ;; This function calls:
 13997 ;;		Nothing
 13998 ;; This function is called by:
 13999 ;;		_SYSTEM_Initialize
 14000 ;; This function uses a reentrant model
 14001 ;;
 14002                           
 14003                           	psect	text69
 14004  005598                     __ptext69:
 14005                           	opt callstack 0
 14006  005598                     _INTERRUPT_Initialize:
 14007                           	opt callstack 0
 14008                           
 14009                           ; BSR set to: 63
 14010                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14011  005598  52E6               	movf	postinc1,f,c
 14012                           
 14013                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14014                           
 14015                           ;incstack = 0
 14016  00559A  8AD2               	bsf	16338,5,c	;volatile
 14017                           
 14018                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14019  00559C  AED2               	btfss	16338,7,c	;volatile
 14020  00559E  D003               	goto	u980
 14021  0055A0  6A46               	clrf	btemp+11,c
 14022  0055A2  2A46               	incf	btemp+11,f,c
 14023  0055A4  D001               	goto	u998
 14024  0055A6                     u980:
 14025  0055A6  6A46               	clrf	btemp+11,c
 14026  0055A8                     u998:
 14027                           
 14028                           ;stkvar	_state @ sp[(-1)+0]
 14029  0055A8  0EFF               	movlw	-1
 14030  0055AA  0060  F11B  FFE3   	movff	btemp+11,plusw1
 14031                           
 14032                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14033  0055B0  9ED2               	bcf	16338,7,c	;volatile
 14034                           
 14035                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14036  0055B2  0E55               	movlw	85
 14037  0055B4  6ED4               	movwf	16340,c	;volatile
 14038                           
 14039                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14040  0055B6  0EAA               	movlw	170
 14041  0055B8  6ED4               	movwf	16340,c	;volatile
 14042                           
 14043                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14044  0055BA  90D4               	bcf	16340,0,c	;volatile
 14045                           
 14046                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 14047  0055BC  0138               	movlb	56	; () banked
 14048  0055BE  6B9F               	clrf	159,b	;volatile
 14049                           
 14050                           ; BSR set to: 56
 14051                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 14052  0055C0  6B9E               	clrf	158,b	;volatile
 14053                           
 14054                           ; BSR set to: 56
 14055                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 14056  0055C2  0E08               	movlw	8
 14057  0055C4  6F9D               	movwf	157,b	;volatile
 14058                           
 14059                           ; BSR set to: 56
 14060                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14061  0055C6  0E55               	movlw	85
 14062  0055C8  6ED4               	movwf	16340,c	;volatile
 14063                           
 14064                           ; BSR set to: 56
 14065                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14066  0055CA  0EAA               	movlw	170
 14067  0055CC  6ED4               	movwf	16340,c	;volatile
 14068                           
 14069                           ; BSR set to: 56
 14070                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14071  0055CE  80D4               	bsf	16340,0,c	;volatile
 14072                           
 14073                           ; BSR set to: 56
 14074                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14075                           ;stkvar	_state @ sp[(-1)+0]
 14076  0055D0  0EFF               	movlw	-1
 14077  0055D2  B0E3               	btfsc	plusw1,0,c
 14078  0055D4  D002               	bra	u1005
 14079  0055D6  9ED2               	bcf	16338,7,c	;volatile
 14080  0055D8  D001               	bra	u1006
 14081  0055DA                     u1005:
 14082  0055DA  8ED2               	bsf	16338,7,c	;volatile
 14083  0055DC                     u1006:
 14084                           
 14085                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 14086  0055DC  0139               	movlb	57	; () banked
 14087  0055DE  8782               	bsf	130,3,b	;volatile
 14088                           
 14089                           ; BSR set to: 57
 14090                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 14091  0055E0  8382               	bsf	130,1,b	;volatile
 14092                           
 14093                           ; BSR set to: 57
 14094                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 14095  0055E2  8182               	bsf	130,0,b	;volatile
 14096                           
 14097                           ; BSR set to: 57
 14098                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 14099  0055E4  8582               	bsf	130,2,b	;volatile
 14100                           
 14101                           ; BSR set to: 57
 14102                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 14103  0055E6  8786               	bsf	134,3,b	;volatile
 14104                           
 14105                           ; BSR set to: 57
 14106                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 14107  0055E8  8586               	bsf	134,2,b	;volatile
 14108                           
 14109                           ; BSR set to: 57
 14110                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 14111  0055EA  8983               	bsf	131,4,b	;volatile
 14112                           
 14113                           ; BSR set to: 57
 14114                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 14115  0055EC  8783               	bsf	131,3,b	;volatile
 14116                           
 14117                           ; BSR set to: 57
 14118                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 14119  0055EE  8181               	bsf	129,0,b	;volatile
 14120                           
 14121                           ; BSR set to: 57
 14122                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 14123  0055F0  8185               	bsf	133,0,b	;volatile
 14124                           
 14125                           ; BSR set to: 57
 14126                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 14127  0055F2  8B87               	bsf	135,5,b	;volatile
 14128                           
 14129                           ; BSR set to: 57
 14130                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 14131  0055F4  8189               	bsf	137,0,b	;volatile
 14132                           
 14133                           ; BSR set to: 57
 14134                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 14135  0055F6  8D88               	bsf	136,6,b	;volatile
 14136                           
 14137                           ; BSR set to: 57
 14138                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 14139  0055F8  8581               	bsf	129,2,b	;volatile
 14140                           
 14141                           ; BSR set to: 57
 14142                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 14143  0055FA  52E5               	movf	postdec1,f,c
 14144  0055FC  0012               	return		;funcret
 14145  0055FE                     __end_of_INTERRUPT_Initialize:
 14146                           	opt callstack 0
 14147                           
 14148 ;; *************** function _EXT_INT_Initialize *****************
 14149 ;; Defined at:
 14150 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 14151 ;; Parameters:    Size  Location     Type
 14152 ;;		None
 14153 ;; Auto vars:     Size  Location     Type
 14154 ;;		None
 14155 ;; Return value:  Size  Location     Type
 14156 ;;                  1  [STACK] void 
 14157 ;; Registers used:
 14158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14159 ;; Tracked objects:
 14160 ;;		On entry : 3F/3F
 14161 ;;		On exit  : 3F/39
 14162 ;;		Unchanged: 0/0
 14163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14168 ;;Total ram usage:        0 bytes
 14169 ;; Hardware stack levels used:    1
 14170 ;; Hardware stack levels required when called:    4
 14171 ;; This function calls:
 14172 ;;		_INT0_SetInterruptHandler
 14173 ;;		_INT1_SetInterruptHandler
 14174 ;;		_INT2_SetInterruptHandler
 14175 ;; This function is called by:
 14176 ;;		_SYSTEM_Initialize
 14177 ;; This function uses a reentrant model
 14178 ;;
 14179                           
 14180                           	psect	text70
 14181  00582C                     __ptext70:
 14182                           	opt callstack 0
 14183  00582C                     _EXT_INT_Initialize:
 14184                           	opt callstack 25
 14185                           
 14186                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 14187                           
 14188                           ; BSR set to: 57
 14189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14190                           ;incstack = 0
 14191  00582C  0139               	movlb	57	; () banked
 14192  00582E  91A1               	bcf	161,0,b	;volatile
 14193                           
 14194                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 14195  005830  90D2               	bcf	16338,0,c	;volatile
 14196                           
 14197                           ; BSR set to: 57
 14198                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 14199  005832  0ECA               	movlw	low _INT0_DefaultInterruptHandler
 14200  005834  6EE6               	movwf	postinc1,c
 14201  005836  0E62               	movlw	high _INT0_DefaultInterruptHandler
 14202  005838  6EE6               	movwf	postinc1,c
 14203  00583A  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 14204  00583C  6EE6               	movwf	postinc1,c
 14205  00583E  EC7D  F02F         	call	_INT0_SetInterruptHandler	;wreg free
 14206                           
 14207                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 14208  005842  0139               	movlb	57	; () banked
 14209  005844  8191               	bsf	145,0,b	;volatile
 14210                           
 14211                           ; BSR set to: 57
 14212                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 14213  005846  91A5               	bcf	165,0,b	;volatile
 14214                           
 14215                           ; BSR set to: 57
 14216                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 14217  005848  92D2               	bcf	16338,1,c	;volatile
 14218                           
 14219                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 14220  00584A  0ECC               	movlw	low _INT1_DefaultInterruptHandler
 14221  00584C  6EE6               	movwf	postinc1,c
 14222  00584E  0E62               	movlw	high _INT1_DefaultInterruptHandler
 14223  005850  6EE6               	movwf	postinc1,c
 14224  005852  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 14225  005854  6EE6               	movwf	postinc1,c
 14226  005856  EC69  F02F         	call	_INT1_SetInterruptHandler	;wreg free
 14227                           
 14228                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 14229  00585A  0139               	movlb	57	; () banked
 14230  00585C  8195               	bsf	149,0,b	;volatile
 14231                           
 14232                           ; BSR set to: 57
 14233                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 14234  00585E  9BA7               	bcf	167,5,b	;volatile
 14235                           
 14236                           ; BSR set to: 57
 14237                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 14238  005860  94D2               	bcf	16338,2,c	;volatile
 14239                           
 14240                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 14241  005862  0ECE               	movlw	low _INT2_DefaultInterruptHandler
 14242  005864  6EE6               	movwf	postinc1,c
 14243  005866  0E62               	movlw	high _INT2_DefaultInterruptHandler
 14244  005868  6EE6               	movwf	postinc1,c
 14245  00586A  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 14246  00586C  6EE6               	movwf	postinc1,c
 14247  00586E  EC55  F02F         	call	_INT2_SetInterruptHandler	;wreg free
 14248                           
 14249                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 14250  005872  0139               	movlb	57	; () banked
 14251  005874  8B97               	bsf	151,5,b	;volatile
 14252                           
 14253                           ; BSR set to: 57
 14254                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14255  005876  0012               	return		;funcret
 14256  005878                     __end_of_EXT_INT_Initialize:
 14257                           	opt callstack 0
 14258                           
 14259 ;; *************** function _INT2_SetInterruptHandler *****************
 14260 ;; Defined at:
 14261 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 14262 ;; Parameters:    Size  Location     Type
 14263 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14264 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14265 ;; Auto vars:     Size  Location     Type
 14266 ;;		None
 14267 ;; Return value:  Size  Location     Type
 14268 ;;                  1  [STACK] void 
 14269 ;; Registers used:
 14270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14271 ;; Tracked objects:
 14272 ;;		On entry : 3F/39
 14273 ;;		On exit  : 0/0
 14274 ;;		Unchanged: 0/0
 14275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14280 ;;Total ram usage:        0 bytes
 14281 ;; Hardware stack levels used:    1
 14282 ;; Hardware stack levels required when called:    3
 14283 ;; This function calls:
 14284 ;;		Nothing
 14285 ;; This function is called by:
 14286 ;;		_EXT_INT_Initialize
 14287 ;; This function uses a reentrant model
 14288 ;;
 14289                           
 14290                           	psect	text71
 14291  005EAA                     __ptext71:
 14292                           	opt callstack 0
 14293  005EAA                     _INT2_SetInterruptHandler:
 14294                           	opt callstack 25
 14295                           
 14296                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 14297                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14298                           
 14299                           ; BSR set to: 57
 14300                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14301                           ;incstack = 0
 14302  005EAA  50E1               	movf	fsr1l,w,c
 14303  005EAC  0FFD               	addlw	-3
 14304  005EAE  6ED9               	movwf	fsr2l,c
 14305  005EB0  50E2               	movf	fsr1h,w,c
 14306  005EB2  6EDA               	movwf	fsr2h,c
 14307  005EB4  0EFF               	movlw	255
 14308  005EB6  22DA               	addwfc	fsr2h,f,c
 14309  005EB8  006F FF78  F017    	movff	postinc2,_INT2_InterruptHandler
 14310  005EBE  006F FF78  F018    	movff	postinc2,_INT2_InterruptHandler+1
 14311  005EC4  006F FF74  F019    	movff	postdec2,_INT2_InterruptHandler+2
 14312                           
 14313                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14314  005ECA  52E5               	movf	postdec1,f,c
 14315  005ECC  52E5               	movf	postdec1,f,c
 14316  005ECE  52E5               	movf	postdec1,f,c
 14317  005ED0  0012               	return		;funcret
 14318  005ED2                     __end_of_INT2_SetInterruptHandler:
 14319                           	opt callstack 0
 14320                           
 14321 ;; *************** function _INT1_SetInterruptHandler *****************
 14322 ;; Defined at:
 14323 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 14324 ;; Parameters:    Size  Location     Type
 14325 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14326 ;;		 -> INT1_DefaultInterruptHandler(1), 
 14327 ;; Auto vars:     Size  Location     Type
 14328 ;;		None
 14329 ;; Return value:  Size  Location     Type
 14330 ;;                  1  [STACK] void 
 14331 ;; Registers used:
 14332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14333 ;; Tracked objects:
 14334 ;;		On entry : 3F/39
 14335 ;;		On exit  : 0/0
 14336 ;;		Unchanged: 0/0
 14337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14342 ;;Total ram usage:        0 bytes
 14343 ;; Hardware stack levels used:    1
 14344 ;; Hardware stack levels required when called:    3
 14345 ;; This function calls:
 14346 ;;		Nothing
 14347 ;; This function is called by:
 14348 ;;		_EXT_INT_Initialize
 14349 ;; This function uses a reentrant model
 14350 ;;
 14351                           
 14352                           	psect	text72
 14353  005ED2                     __ptext72:
 14354                           	opt callstack 0
 14355  005ED2                     _INT1_SetInterruptHandler:
 14356                           	opt callstack 25
 14357                           
 14358                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 14359                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14360                           
 14361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14362                           ;incstack = 0
 14363  005ED2  50E1               	movf	fsr1l,w,c
 14364  005ED4  0FFD               	addlw	-3
 14365  005ED6  6ED9               	movwf	fsr2l,c
 14366  005ED8  50E2               	movf	fsr1h,w,c
 14367  005EDA  6EDA               	movwf	fsr2h,c
 14368  005EDC  0EFF               	movlw	255
 14369  005EDE  22DA               	addwfc	fsr2h,f,c
 14370  005EE0  006F FF78  F01A    	movff	postinc2,_INT1_InterruptHandler
 14371  005EE6  006F FF78  F01B    	movff	postinc2,_INT1_InterruptHandler+1
 14372  005EEC  006F FF74  F01C    	movff	postdec2,_INT1_InterruptHandler+2
 14373                           
 14374                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14375  005EF2  52E5               	movf	postdec1,f,c
 14376  005EF4  52E5               	movf	postdec1,f,c
 14377  005EF6  52E5               	movf	postdec1,f,c
 14378  005EF8  0012               	return		;funcret
 14379  005EFA                     __end_of_INT1_SetInterruptHandler:
 14380                           	opt callstack 0
 14381                           
 14382 ;; *************** function _INT0_SetInterruptHandler *****************
 14383 ;; Defined at:
 14384 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 14385 ;; Parameters:    Size  Location     Type
 14386 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14387 ;;		 -> INT0_DefaultInterruptHandler(1), 
 14388 ;; Auto vars:     Size  Location     Type
 14389 ;;		None
 14390 ;; Return value:  Size  Location     Type
 14391 ;;                  1  [STACK] void 
 14392 ;; Registers used:
 14393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14394 ;; Tracked objects:
 14395 ;;		On entry : 3F/39
 14396 ;;		On exit  : 0/0
 14397 ;;		Unchanged: 0/0
 14398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14403 ;;Total ram usage:        0 bytes
 14404 ;; Hardware stack levels used:    1
 14405 ;; Hardware stack levels required when called:    3
 14406 ;; This function calls:
 14407 ;;		Nothing
 14408 ;; This function is called by:
 14409 ;;		_EXT_INT_Initialize
 14410 ;; This function uses a reentrant model
 14411 ;;
 14412                           
 14413                           	psect	text73
 14414  005EFA                     __ptext73:
 14415                           	opt callstack 0
 14416  005EFA                     _INT0_SetInterruptHandler:
 14417                           	opt callstack 25
 14418                           
 14419                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 14420                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14421                           
 14422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14423                           ;incstack = 0
 14424  005EFA  50E1               	movf	fsr1l,w,c
 14425  005EFC  0FFD               	addlw	-3
 14426  005EFE  6ED9               	movwf	fsr2l,c
 14427  005F00  50E2               	movf	fsr1h,w,c
 14428  005F02  6EDA               	movwf	fsr2h,c
 14429  005F04  0EFF               	movlw	255
 14430  005F06  22DA               	addwfc	fsr2h,f,c
 14431  005F08  006F FF78  F01D    	movff	postinc2,_INT0_InterruptHandler
 14432  005F0E  006F FF78  F01E    	movff	postinc2,_INT0_InterruptHandler+1
 14433  005F14  006F FF74  F01F    	movff	postdec2,_INT0_InterruptHandler+2
 14434                           
 14435                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14436  005F1A  52E5               	movf	postdec1,f,c
 14437  005F1C  52E5               	movf	postdec1,f,c
 14438  005F1E  52E5               	movf	postdec1,f,c
 14439  005F20  0012               	return		;funcret
 14440  005F22                     __end_of_INT0_SetInterruptHandler:
 14441                           	opt callstack 0
 14442                           
 14443 ;; *************** function _DSM_Initialize *****************
 14444 ;; Defined at:
 14445 ;;		line 58 in file "mcc_generated_files/dsm.c"
 14446 ;; Parameters:    Size  Location     Type
 14447 ;;		None
 14448 ;; Auto vars:     Size  Location     Type
 14449 ;;		None
 14450 ;; Return value:  Size  Location     Type
 14451 ;;                  1  [STACK] void 
 14452 ;; Registers used:
 14453 ;;		wreg, status,2
 14454 ;; Tracked objects:
 14455 ;;		On entry : 0/3C
 14456 ;;		On exit  : 3F/3C
 14457 ;;		Unchanged: 0/0
 14458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14463 ;;Total ram usage:        0 bytes
 14464 ;; Hardware stack levels used:    1
 14465 ;; Hardware stack levels required when called:    3
 14466 ;; This function calls:
 14467 ;;		Nothing
 14468 ;; This function is called by:
 14469 ;;		_SYSTEM_Initialize
 14470 ;; This function uses a reentrant model
 14471 ;;
 14472                           
 14473                           	psect	text74
 14474  006172                     __ptext74:
 14475                           	opt callstack 0
 14476  006172                     _DSM_Initialize:
 14477                           	opt callstack 26
 14478                           
 14479                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 14480                           
 14481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14482                           ;incstack = 0
 14483  006172  013C               	movlb	60	; () banked
 14484  006174  99FA               	bcf	250,4,b	;volatile
 14485                           
 14486                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 14487  006176  81FB               	bsf	251,0,b	;volatile
 14488                           
 14489                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 14490  006178  93FB               	bcf	251,1,b	;volatile
 14491                           
 14492                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 14493  00617A  89FB               	bsf	251,4,b	;volatile
 14494                           
 14495                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 14496  00617C  9BFB               	bcf	251,5,b	;volatile
 14497                           
 14498                           ; BSR set to: 60
 14499                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 14500  00617E  0E13               	movlw	19
 14501  006180  6FFC               	movwf	252,b	;volatile
 14502                           
 14503                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 14504  006182  0E0E               	movlw	14
 14505  006184  6FFE               	movwf	254,b	;volatile
 14506                           
 14507                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 14508  006186  0E04               	movlw	4
 14509  006188  6FFD               	movwf	253,b	;volatile
 14510                           
 14511                           ; BSR set to: 60
 14512                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 14513  00618A  8FFA               	bsf	250,7,b	;volatile
 14514                           
 14515                           ; BSR set to: 60
 14516                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14517  00618C  0012               	return		;funcret
 14518  00618E                     __end_of_DSM_Initialize:
 14519                           	opt callstack 0
 14520                           
 14521 ;; *************** function _DMA1_Initialize *****************
 14522 ;; Defined at:
 14523 ;;		line 86 in file "mcc_generated_files/dma1.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;		None
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;		None
 14528 ;; Return value:  Size  Location     Type
 14529 ;;                  1  [STACK] void 
 14530 ;; Registers used:
 14531 ;;		wreg, status,2
 14532 ;; Tracked objects:
 14533 ;;		On entry : 3F/3D
 14534 ;;		On exit  : 3F/3B
 14535 ;;		Unchanged: 0/0
 14536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14541 ;;Total ram usage:        0 bytes
 14542 ;; Hardware stack levels used:    1
 14543 ;; Hardware stack levels required when called:    3
 14544 ;; This function calls:
 14545 ;;		Nothing
 14546 ;; This function is called by:
 14547 ;;		_SYSTEM_Initialize
 14548 ;; This function uses a reentrant model
 14549 ;;
 14550                           
 14551                           	psect	text75
 14552  00552E                     __ptext75:
 14553                           	opt callstack 0
 14554  00552E                     _DMA1_Initialize:
 14555                           	opt callstack 26
 14556                           
 14557                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 14558                           
 14559                           ; BSR set to: 60
 14560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14561                           ;incstack = 0
 14562  00552E  0E00               	movlw	0
 14563  005530  013B               	movlb	59	; () banked
 14564  005532  6FF9               	movwf	249,b	;volatile
 14565  005534  0E10               	movlw	16
 14566  005536  6FFA               	movwf	250,b	;volatile
 14567  005538  0E00               	movlw	0
 14568  00553A  6FFB               	movwf	251,b	;volatile
 14569                           
 14570                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 14571  00553C  0E3D               	movlw	61
 14572  00553E  6FF1               	movwf	241,b	;volatile
 14573  005540  0E11               	movlw	17
 14574  005542  6FF0               	movwf	240,b	;volatile
 14575                           
 14576                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 14577  005544  0E03               	movlw	3
 14578  005546  6FFD               	movwf	253,b	;volatile
 14579                           
 14580                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 14581  005548  0E00               	movlw	0
 14582  00554A  6FF8               	movwf	248,b	;volatile
 14583  00554C  0E01               	movlw	1
 14584  00554E  6FF7               	movwf	247,b	;volatile
 14585                           
 14586                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 14587  005550  0E00               	movlw	0
 14588  005552  6FEF               	movwf	239,b	;volatile
 14589  005554  0E01               	movlw	1
 14590  005556  6FEE               	movwf	238,b	;volatile
 14591                           
 14592                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 14593  005558  0E15               	movlw	21
 14594  00555A  6FFF               	movwf	255,b	;volatile
 14595                           
 14596                           ; BSR set to: 59
 14597                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 14598  00555C  6BFE               	clrf	254,b	;volatile
 14599                           
 14600                           ; BSR set to: 59
 14601                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 14602  00555E  0139               	movlb	57	; () banked
 14603  005560  93A2               	bcf	162,1,b	;volatile
 14604                           
 14605                           ; BSR set to: 57
 14606                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 14607  005562  91A2               	bcf	162,0,b	;volatile
 14608                           
 14609                           ; BSR set to: 57
 14610                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 14611  005564  97A2               	bcf	162,3,b	;volatile
 14612                           
 14613                           ; BSR set to: 57
 14614                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 14615  005566  95A2               	bcf	162,2,b	;volatile
 14616                           
 14617                           ; BSR set to: 57
 14618                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 14619  005568  8392               	bsf	146,1,b	;volatile
 14620                           
 14621                           ; BSR set to: 57
 14622                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 14623  00556A  8192               	bsf	146,0,b	;volatile
 14624                           
 14625                           ; BSR set to: 57
 14626                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 14627  00556C  8792               	bsf	146,3,b	;volatile
 14628                           
 14629                           ; BSR set to: 57
 14630                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 14631  00556E  8592               	bsf	146,2,b	;volatile
 14632                           
 14633                           ; BSR set to: 57
 14634                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 14635  005570  6BF1               	clrf	241,b	;volatile
 14636                           
 14637                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 14638  005572  0E01               	movlw	1
 14639  005574  6FF2               	movwf	242,b	;volatile
 14640                           
 14641                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 14642  005576  0E04               	movlw	4
 14643  005578  6FF3               	movwf	243,b	;volatile
 14644                           
 14645                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 14646  00557A  0E02               	movlw	2
 14647  00557C  6FF4               	movwf	244,b	;volatile
 14648                           
 14649                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 14650  00557E  0E03               	movlw	3
 14651  005580  6FF7               	movwf	247,b	;volatile
 14652  005582  9ED2               	bcf	16338,7,c	;# 
 14653  005584  0139               	banksel	14831	;# 
 14654  005586  0E55               	movlw	85	;# 
 14655  005588  6FEF               	movwf	14831,b	;# 
 14656  00558A  0EAA               	movlw	170	;# 
 14657  00558C  6FEF               	movwf	14831,b	;# 
 14658  00558E  81EF               	bsf	14831,0,b	;# 
 14659  005590  8ED2               	bsf	16338,7,c	;# 
 14660                           
 14661                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 14662  005592  013B               	movlb	59	; () banked
 14663  005594  6BFC               	clrf	252,b	;volatile
 14664                           
 14665                           ; BSR set to: 59
 14666                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14667  005596  0012               	return		;funcret
 14668  005598                     __end_of_DMA1_Initialize:
 14669                           	opt callstack 0
 14670                           
 14671 ;; *************** function _CLKREF_Initialize *****************
 14672 ;; Defined at:
 14673 ;;		line 58 in file "mcc_generated_files/clkref.c"
 14674 ;; Parameters:    Size  Location     Type
 14675 ;;		None
 14676 ;; Auto vars:     Size  Location     Type
 14677 ;;		None
 14678 ;; Return value:  Size  Location     Type
 14679 ;;                  1  [STACK] void 
 14680 ;; Registers used:
 14681 ;;		wreg, status,2
 14682 ;; Tracked objects:
 14683 ;;		On entry : 3F/3B
 14684 ;;		On exit  : 3F/3C
 14685 ;;		Unchanged: 0/0
 14686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14691 ;;Total ram usage:        0 bytes
 14692 ;; Hardware stack levels used:    1
 14693 ;; Hardware stack levels required when called:    3
 14694 ;; This function calls:
 14695 ;;		Nothing
 14696 ;; This function is called by:
 14697 ;;		_SYSTEM_Initialize
 14698 ;; This function uses a reentrant model
 14699 ;;
 14700                           
 14701                           	psect	text76
 14702  00626A                     __ptext76:
 14703                           	opt callstack 0
 14704  00626A                     _CLKREF_Initialize:
 14705                           	opt callstack 26
 14706                           
 14707                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 14708                           
 14709                           ; BSR set to: 59
 14710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14711                           ;incstack = 0
 14712  00626A  013C               	movlb	60	; () banked
 14713  00626C  6BE6               	clrf	230,b	;volatile
 14714                           
 14715                           ; BSR set to: 60
 14716                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 14717  00626E  0E94               	movlw	148
 14718  006270  6FE5               	movwf	229,b	;volatile
 14719                           
 14720                           ; BSR set to: 60
 14721                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14722  006272  0012               	return		;funcret
 14723  006274                     __end_of_CLKREF_Initialize:
 14724                           	opt callstack 0
 14725                           
 14726 ;; *************** function _CLC1_Initialize *****************
 14727 ;; Defined at:
 14728 ;;		line 58 in file "mcc_generated_files/clc1.c"
 14729 ;; Parameters:    Size  Location     Type
 14730 ;;		None
 14731 ;; Auto vars:     Size  Location     Type
 14732 ;;		None
 14733 ;; Return value:  Size  Location     Type
 14734 ;;                  1  [STACK] void 
 14735 ;; Registers used:
 14736 ;;		wreg, status,2
 14737 ;; Tracked objects:
 14738 ;;		On entry : 0/39
 14739 ;;		On exit  : 3F/3C
 14740 ;;		Unchanged: 0/0
 14741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14746 ;;Total ram usage:        0 bytes
 14747 ;; Hardware stack levels used:    1
 14748 ;; Hardware stack levels required when called:    3
 14749 ;; This function calls:
 14750 ;;		Nothing
 14751 ;; This function is called by:
 14752 ;;		_SYSTEM_Initialize
 14753 ;; This function uses a reentrant model
 14754 ;;
 14755                           
 14756                           	psect	text77
 14757  006054                     __ptext77:
 14758                           	opt callstack 0
 14759  006054                     _CLC1_Initialize:
 14760                           	opt callstack 26
 14761                           
 14762                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 14763                           
 14764                           ; BSR set to: 60
 14765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14766                           ;incstack = 0
 14767  006054  013C               	movlb	60	; () banked
 14768  006056  6B75               	clrf	117,b	;volatile
 14769                           
 14770                           ; BSR set to: 60
 14771                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 14772  006058  0E04               	movlw	4
 14773  00605A  6F76               	movwf	118,b	;volatile
 14774                           
 14775                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 14776  00605C  0E04               	movlw	4
 14777  00605E  6F77               	movwf	119,b	;volatile
 14778                           
 14779                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 14780  006060  0E04               	movlw	4
 14781  006062  6F78               	movwf	120,b	;volatile
 14782                           
 14783                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 14784  006064  0E04               	movlw	4
 14785  006066  6F79               	movwf	121,b	;volatile
 14786                           
 14787                           ; BSR set to: 60
 14788                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 14789  006068  6B7A               	clrf	122,b	;volatile
 14790                           
 14791                           ; BSR set to: 60
 14792                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 14793  00606A  6B7B               	clrf	123,b	;volatile
 14794                           
 14795                           ; BSR set to: 60
 14796                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 14797  00606C  6B7C               	clrf	124,b	;volatile
 14798                           
 14799                           ; BSR set to: 60
 14800                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 14801  00606E  6B7D               	clrf	125,b	;volatile
 14802                           
 14803                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 14804  006070  0E81               	movlw	129
 14805  006072  6F74               	movwf	116,b	;volatile
 14806                           
 14807                           ; BSR set to: 60
 14808                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14809  006074  0012               	return		;funcret
 14810  006076                     __end_of_CLC1_Initialize:
 14811                           	opt callstack 0
 14812                           
 14813 ;; *************** function _ADCC_Initialize *****************
 14814 ;; Defined at:
 14815 ;;		line 64 in file "mcc_generated_files/adcc.c"
 14816 ;; Parameters:    Size  Location     Type
 14817 ;;		None
 14818 ;; Auto vars:     Size  Location     Type
 14819 ;;		None
 14820 ;; Return value:  Size  Location     Type
 14821 ;;                  1  [STACK] void 
 14822 ;; Registers used:
 14823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14824 ;; Tracked objects:
 14825 ;;		On entry : 3F/39
 14826 ;;		On exit  : 0/0
 14827 ;;		Unchanged: 0/0
 14828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14833 ;;Total ram usage:        0 bytes
 14834 ;; Hardware stack levels used:    1
 14835 ;; Hardware stack levels required when called:    4
 14836 ;; This function calls:
 14837 ;;		_ADCC_SetADIInterruptHandler
 14838 ;; This function is called by:
 14839 ;;		_SYSTEM_Initialize
 14840 ;; This function uses a reentrant model
 14841 ;;
 14842                           
 14843                           	psect	text78
 14844  005878                     __ptext78:
 14845                           	opt callstack 0
 14846  005878                     _ADCC_Initialize:
 14847                           	opt callstack 25
 14848                           
 14849                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 14850                           
 14851                           ; BSR set to: 60
 14852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14853                           ;incstack = 0
 14854  005878  013E               	movlb	62	; () banked
 14855  00587A  6BDE               	clrf	222,b	;volatile
 14856                           
 14857                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 14858  00587C  6BDF               	clrf	223,b	;volatile
 14859                           
 14860                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 14861  00587E  6BE0               	clrf	224,b	;volatile
 14862                           
 14863                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 14864  005880  6BE1               	clrf	225,b	;volatile
 14865                           
 14866                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 14867  005882  6BE4               	clrf	228,b	;volatile
 14868                           
 14869                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 14870  005884  6BE5               	clrf	229,b	;volatile
 14871                           
 14872                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 14873  005886  6BEA               	clrf	234,b	;volatile
 14874                           
 14875                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 14876  005888  6BEC               	clrf	236,b	;volatile
 14877                           
 14878                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 14879  00588A  6BF1               	clrf	241,b	;volatile
 14880                           
 14881                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 14882  00588C  6BF3               	clrf	243,b	;volatile
 14883                           
 14884                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 14885  00588E  6BF4               	clrf	244,b	;volatile
 14886                           
 14887                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 14888  005890  6BF5               	clrf	245,b	;volatile
 14889                           
 14890                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 14891  005892  6BF6               	clrf	246,b	;volatile
 14892                           
 14893                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 14894  005894  6BF7               	clrf	247,b	;volatile
 14895                           
 14896                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 14897  005896  6BF9               	clrf	249,b	;volatile
 14898                           
 14899                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 14900  005898  6BFA               	clrf	250,b	;volatile
 14901                           
 14902                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 14903  00589A  6BFB               	clrf	251,b	;volatile
 14904                           
 14905                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 14906  00589C  6BFC               	clrf	252,b	;volatile
 14907                           
 14908                           ; BSR set to: 62
 14909                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 14910  00589E  0E02               	movlw	2
 14911  0058A0  6FFD               	movwf	253,b	;volatile
 14912                           
 14913                           ; BSR set to: 62
 14914                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 14915  0058A2  6BFE               	clrf	254,b	;volatile
 14916                           
 14917                           ; BSR set to: 62
 14918                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 14919  0058A4  6BFF               	clrf	255,b	;volatile
 14920                           
 14921                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 14922  0058A6  0E94               	movlw	148
 14923  0058A8  6FF8               	movwf	248,b	;volatile
 14924                           
 14925                           ; BSR set to: 62
 14926                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 14927  0058AA  0139               	movlb	57	; () banked
 14928  0058AC  95A1               	bcf	161,2,b	;volatile
 14929                           
 14930                           ; BSR set to: 57
 14931                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 14932  0058AE  8591               	bsf	145,2,b	;volatile
 14933                           
 14934                           ; BSR set to: 57
 14935                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 14936  0058B0  0ED0               	movlw	low _ADCC_DefaultInterruptHandler
 14937  0058B2  6EE6               	movwf	postinc1,c
 14938  0058B4  0E62               	movlw	high _ADCC_DefaultInterruptHandler
 14939  0058B6  6EE6               	movwf	postinc1,c
 14940  0058B8  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 14941  0058BA  6EE6               	movwf	postinc1,c
 14942  0058BC  EC91  F02F         	call	_ADCC_SetADIInterruptHandler	;wreg free
 14943                           
 14944                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14945  0058C0  0012               	return		;funcret
 14946  0058C2                     __end_of_ADCC_Initialize:
 14947                           	opt callstack 0
 14948                           
 14949 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 14950 ;; Defined at:
 14951 ;;		line 316 in file "mcc_generated_files/adcc.c"
 14952 ;; Parameters:    Size  Location     Type
 14953 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14954 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 14955 ;; Auto vars:     Size  Location     Type
 14956 ;;		None
 14957 ;; Return value:  Size  Location     Type
 14958 ;;                  1  [STACK] void 
 14959 ;; Registers used:
 14960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14961 ;; Tracked objects:
 14962 ;;		On entry : 3F/39
 14963 ;;		On exit  : 0/0
 14964 ;;		Unchanged: 0/0
 14965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14970 ;;Total ram usage:        0 bytes
 14971 ;; Hardware stack levels used:    1
 14972 ;; Hardware stack levels required when called:    3
 14973 ;; This function calls:
 14974 ;;		Nothing
 14975 ;; This function is called by:
 14976 ;;		_ADCC_Initialize
 14977 ;; This function uses a reentrant model
 14978 ;;
 14979                           
 14980                           	psect	text79
 14981  005F22                     __ptext79:
 14982                           	opt callstack 0
 14983  005F22                     _ADCC_SetADIInterruptHandler:
 14984                           	opt callstack 25
 14985                           
 14986                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 14987                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14988                           
 14989                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14990                           ;incstack = 0
 14991  005F22  50E1               	movf	fsr1l,w,c
 14992  005F24  0FFD               	addlw	-3
 14993  005F26  6ED9               	movwf	fsr2l,c
 14994  005F28  50E2               	movf	fsr1h,w,c
 14995  005F2A  6EDA               	movwf	fsr2h,c
 14996  005F2C  0EFF               	movlw	255
 14997  005F2E  22DA               	addwfc	fsr2h,f,c
 14998  005F30  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler
 14999  005F36  006F FF78  F009    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 15000  005F3C  006F FF74  F00A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 15001                           
 15002                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15003  005F42  52E5               	movf	postdec1,f,c
 15004  005F44  52E5               	movf	postdec1,f,c
 15005  005F46  52E5               	movf	postdec1,f,c
 15006  005F48  0012               	return		;funcret
 15007  005F4A                     __end_of_ADCC_SetADIInterruptHandler:
 15008                           	opt callstack 0
 15009                           
 15010 ;; *************** function _INT0_ISR *****************
 15011 ;; Defined at:
 15012 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 15013 ;; Parameters:    Size  Location     Type
 15014 ;;		None
 15015 ;; Auto vars:     Size  Location     Type
 15016 ;;		None
 15017 ;; Return value:  Size  Location     Type
 15018 ;;                  1    wreg      void 
 15019 ;; Registers used:
 15020 ;;		wreg, status,2, status,0, pclath, tosl
 15021 ;; Tracked objects:
 15022 ;;		On entry : 0/0
 15023 ;;		On exit  : 0/0
 15024 ;;		Unchanged: 0/0
 15025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15030 ;;Total ram usage:        0 bytes
 15031 ;; Hardware stack levels used:    1
 15032 ;; Hardware stack levels required when called:    2
 15033 ;; This function calls:
 15034 ;;		_INT0_CallBack
 15035 ;; This function is called by:
 15036 ;;		Interrupt level 2
 15037 ;; This function uses a non-reentrant model
 15038 ;;
 15039                           
 15040                           	psect	text80
 15041  00622C                     __ptext80:
 15042                           	opt callstack 0
 15043  00622C                     _INT0_ISR:
 15044                           	opt callstack 17
 15045                           
 15046                           ;incstack = 0
 15047  00622C  EE13  F12A         	lfsr	1,___inthi_sp
 15048                           
 15049                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 15050  006230  0139               	movlb	57	; () banked
 15051  006232  91A1               	bcf	161,0,b	;volatile
 15052                           
 15053                           ; BSR set to: 57
 15054                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 15055  006234  EC3B  F030         	call	_INT0_CallBack	;wreg free
 15056  006238  0011               	retfie		f
 15057  00623A                     __end_of_INT0_ISR:
 15058                           	opt callstack 0
 15059                           
 15060 ;; *************** function _INT0_CallBack *****************
 15061 ;; Defined at:
 15062 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 15063 ;; Parameters:    Size  Location     Type
 15064 ;;		None
 15065 ;; Auto vars:     Size  Location     Type
 15066 ;;		None
 15067 ;; Return value:  Size  Location     Type
 15068 ;;                  1  [STACK] void 
 15069 ;; Registers used:
 15070 ;;		wreg, status,2, status,0, pclath, tosl
 15071 ;; Tracked objects:
 15072 ;;		On entry : 3F/39
 15073 ;;		On exit  : 0/0
 15074 ;;		Unchanged: 0/0
 15075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15080 ;;Total ram usage:        0 bytes
 15081 ;; Hardware stack levels used:    1
 15082 ;; Hardware stack levels required when called:    1
 15083 ;; This function calls:
 15084 ;;		Absolute function
 15085 ;;		_INT0_DefaultInterruptHandler
 15086 ;; This function is called by:
 15087 ;;		_INT0_ISR
 15088 ;; This function uses a reentrant model
 15089 ;;
 15090                           
 15091                           	psect	text81
 15092  006076                     __ptext81:
 15093                           	opt callstack 0
 15094  006076                     _INT0_CallBack:
 15095                           	opt callstack 17
 15096                           
 15097                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 15098                           
 15099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15100                           ;incstack = 0
 15101  006076  501D               	movf	_INT0_InterruptHandler,w,c
 15102  006078  101E               	iorwf	_INT0_InterruptHandler+1,w,c
 15103  00607A  101F               	iorwf	_INT0_InterruptHandler+2,w,c
 15104  00607C  B4D8               	btfsc	status,2,c
 15105  00607E  0012               	return	
 15106                           
 15107                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 15108  006080  D801               	call	u121_48
 15109  006082  0012               	return	
 15110  006084                     u121_48:
 15111  006084  0005               	push	
 15112  006086  6EFA               	movwf	pclath,c
 15113  006088  501D               	movf	_INT0_InterruptHandler,w,c
 15114  00608A  6EFD               	movwf	tosl,c
 15115  00608C  501E               	movf	_INT0_InterruptHandler+1,w,c
 15116  00608E  6EFE               	movwf	tosh,c
 15117  006090  501F               	movf	_INT0_InterruptHandler+2,w,c
 15118  006092  6EFF               	movwf	tosu,c
 15119  006094  50FA               	movf	pclath,w,c
 15120  006096  0012               	return		;indir
 15121  006098                     __end_of_INT0_CallBack:
 15122                           	opt callstack 0
 15123                           
 15124 ;; *************** function _INT0_DefaultInterruptHandler *****************
 15125 ;; Defined at:
 15126 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 15127 ;; Parameters:    Size  Location     Type
 15128 ;;		None
 15129 ;; Auto vars:     Size  Location     Type
 15130 ;;		None
 15131 ;; Return value:  Size  Location     Type
 15132 ;;                  1  [STACK] void 
 15133 ;; Registers used:
 15134 ;;		None
 15135 ;; Tracked objects:
 15136 ;;		On entry : 0/39
 15137 ;;		On exit  : 0/0
 15138 ;;		Unchanged: 0/0
 15139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15144 ;;Total ram usage:        0 bytes
 15145 ;; Hardware stack levels used:    1
 15146 ;; This function calls:
 15147 ;;		Nothing
 15148 ;; This function is called by:
 15149 ;;		_EXT_INT_Initialize
 15150 ;;		_INT0_CallBack
 15151 ;; This function uses a reentrant model
 15152 ;;
 15153                           
 15154                           	psect	text82
 15155  0062CA                     __ptext82:
 15156                           	opt callstack 0
 15157  0062CA                     _INT0_DefaultInterruptHandler:
 15158                           	opt callstack 17
 15159                           
 15160                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15161                           
 15162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15163                           ;incstack = 0
 15164  0062CA  0012               	return		;funcret
 15165  0062CC                     __end_of_INT0_DefaultInterruptHandler:
 15166                           	opt callstack 0
 15167                           
 15168 ;; *************** function _INT1_ISR *****************
 15169 ;; Defined at:
 15170 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 15171 ;; Parameters:    Size  Location     Type
 15172 ;;		None
 15173 ;; Auto vars:     Size  Location     Type
 15174 ;;		None
 15175 ;; Return value:  Size  Location     Type
 15176 ;;                  1    wreg      void 
 15177 ;; Registers used:
 15178 ;;		wreg, status,2, status,0, pclath, tosl
 15179 ;; Tracked objects:
 15180 ;;		On entry : 0/0
 15181 ;;		On exit  : 0/0
 15182 ;;		Unchanged: 0/0
 15183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15188 ;;Total ram usage:        0 bytes
 15189 ;; Hardware stack levels used:    1
 15190 ;; Hardware stack levels required when called:    2
 15191 ;; This function calls:
 15192 ;;		_INT1_CallBack
 15193 ;; This function is called by:
 15194 ;;		Interrupt level 2
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           
 15198                           	psect	text83
 15199  00623C                     __ptext83:
 15200                           	opt callstack 0
 15201  00623C                     _INT1_ISR:
 15202                           	opt callstack 17
 15203                           
 15204                           ;incstack = 0
 15205  00623C  EE13  F12A         	lfsr	1,___inthi_sp
 15206                           
 15207                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 15208  006240  0139               	movlb	57	; () banked
 15209  006242  91A5               	bcf	165,0,b	;volatile
 15210                           
 15211                           ; BSR set to: 57
 15212                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 15213  006244  EC4C  F030         	call	_INT1_CallBack	;wreg free
 15214  006248  0011               	retfie		f
 15215  00624A                     __end_of_INT1_ISR:
 15216                           	opt callstack 0
 15217                           
 15218 ;; *************** function _INT1_CallBack *****************
 15219 ;; Defined at:
 15220 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;		None
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;		None
 15225 ;; Return value:  Size  Location     Type
 15226 ;;                  1  [STACK] void 
 15227 ;; Registers used:
 15228 ;;		wreg, status,2, status,0, pclath, tosl
 15229 ;; Tracked objects:
 15230 ;;		On entry : 3F/39
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15238 ;;Total ram usage:        0 bytes
 15239 ;; Hardware stack levels used:    1
 15240 ;; Hardware stack levels required when called:    1
 15241 ;; This function calls:
 15242 ;;		Absolute function
 15243 ;;		_INT1_DefaultInterruptHandler
 15244 ;; This function is called by:
 15245 ;;		_INT1_ISR
 15246 ;; This function uses a reentrant model
 15247 ;;
 15248                           
 15249                           	psect	text84
 15250  006098                     __ptext84:
 15251                           	opt callstack 0
 15252  006098                     _INT1_CallBack:
 15253                           	opt callstack 17
 15254                           
 15255                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 15256                           
 15257                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15258                           ;incstack = 0
 15259  006098  501A               	movf	_INT1_InterruptHandler,w,c
 15260  00609A  101B               	iorwf	_INT1_InterruptHandler+1,w,c
 15261  00609C  101C               	iorwf	_INT1_InterruptHandler+2,w,c
 15262  00609E  B4D8               	btfsc	status,2,c
 15263  0060A0  0012               	return	
 15264                           
 15265                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 15266  0060A2  D801               	call	u123_48
 15267  0060A4  0012               	return	
 15268  0060A6                     u123_48:
 15269  0060A6  0005               	push	
 15270  0060A8  6EFA               	movwf	pclath,c
 15271  0060AA  501A               	movf	_INT1_InterruptHandler,w,c
 15272  0060AC  6EFD               	movwf	tosl,c
 15273  0060AE  501B               	movf	_INT1_InterruptHandler+1,w,c
 15274  0060B0  6EFE               	movwf	tosh,c
 15275  0060B2  501C               	movf	_INT1_InterruptHandler+2,w,c
 15276  0060B4  6EFF               	movwf	tosu,c
 15277  0060B6  50FA               	movf	pclath,w,c
 15278  0060B8  0012               	return		;indir
 15279  0060BA                     __end_of_INT1_CallBack:
 15280                           	opt callstack 0
 15281                           
 15282 ;; *************** function _INT1_DefaultInterruptHandler *****************
 15283 ;; Defined at:
 15284 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 15285 ;; Parameters:    Size  Location     Type
 15286 ;;		None
 15287 ;; Auto vars:     Size  Location     Type
 15288 ;;		None
 15289 ;; Return value:  Size  Location     Type
 15290 ;;                  1  [STACK] void 
 15291 ;; Registers used:
 15292 ;;		None
 15293 ;; Tracked objects:
 15294 ;;		On entry : 0/39
 15295 ;;		On exit  : 0/0
 15296 ;;		Unchanged: 0/0
 15297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15302 ;;Total ram usage:        0 bytes
 15303 ;; Hardware stack levels used:    1
 15304 ;; This function calls:
 15305 ;;		Nothing
 15306 ;; This function is called by:
 15307 ;;		_EXT_INT_Initialize
 15308 ;;		_INT1_CallBack
 15309 ;; This function uses a reentrant model
 15310 ;;
 15311                           
 15312                           	psect	text85
 15313  0062CC                     __ptext85:
 15314                           	opt callstack 0
 15315  0062CC                     _INT1_DefaultInterruptHandler:
 15316                           	opt callstack 17
 15317                           
 15318                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15319                           
 15320                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15321                           ;incstack = 0
 15322  0062CC  0012               	return		;funcret
 15323  0062CE                     __end_of_INT1_DefaultInterruptHandler:
 15324                           	opt callstack 0
 15325                           
 15326 ;; *************** function _INT2_ISR *****************
 15327 ;; Defined at:
 15328 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 15329 ;; Parameters:    Size  Location     Type
 15330 ;;		None
 15331 ;; Auto vars:     Size  Location     Type
 15332 ;;		None
 15333 ;; Return value:  Size  Location     Type
 15334 ;;                  1    wreg      void 
 15335 ;; Registers used:
 15336 ;;		wreg, status,2, status,0, pclath, tosl
 15337 ;; Tracked objects:
 15338 ;;		On entry : 0/0
 15339 ;;		On exit  : 0/0
 15340 ;;		Unchanged: 0/0
 15341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15346 ;;Total ram usage:        0 bytes
 15347 ;; Hardware stack levels used:    1
 15348 ;; Hardware stack levels required when called:    2
 15349 ;; This function calls:
 15350 ;;		_INT2_CallBack
 15351 ;; This function is called by:
 15352 ;;		Interrupt level 2
 15353 ;; This function uses a non-reentrant model
 15354 ;;
 15355                           
 15356                           	psect	text86
 15357  00624C                     __ptext86:
 15358                           	opt callstack 0
 15359  00624C                     _INT2_ISR:
 15360                           	opt callstack 17
 15361                           
 15362                           ;incstack = 0
 15363  00624C  EE13  F12A         	lfsr	1,___inthi_sp
 15364                           
 15365                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 15366  006250  0139               	movlb	57	; () banked
 15367  006252  9BA7               	bcf	167,5,b	;volatile
 15368                           
 15369                           ; BSR set to: 57
 15370                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 15371  006254  EC5D  F030         	call	_INT2_CallBack	;wreg free
 15372  006258  0011               	retfie		f
 15373  00625A                     __end_of_INT2_ISR:
 15374                           	opt callstack 0
 15375                           
 15376 ;; *************** function _INT2_CallBack *****************
 15377 ;; Defined at:
 15378 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 15379 ;; Parameters:    Size  Location     Type
 15380 ;;		None
 15381 ;; Auto vars:     Size  Location     Type
 15382 ;;		None
 15383 ;; Return value:  Size  Location     Type
 15384 ;;                  1  [STACK] void 
 15385 ;; Registers used:
 15386 ;;		wreg, status,2, status,0, pclath, tosl
 15387 ;; Tracked objects:
 15388 ;;		On entry : 3F/39
 15389 ;;		On exit  : 0/0
 15390 ;;		Unchanged: 0/0
 15391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15396 ;;Total ram usage:        0 bytes
 15397 ;; Hardware stack levels used:    1
 15398 ;; Hardware stack levels required when called:    1
 15399 ;; This function calls:
 15400 ;;		Absolute function
 15401 ;;		_INT2_DefaultInterruptHandler
 15402 ;; This function is called by:
 15403 ;;		_INT2_ISR
 15404 ;; This function uses a reentrant model
 15405 ;;
 15406                           
 15407                           	psect	text87
 15408  0060BA                     __ptext87:
 15409                           	opt callstack 0
 15410  0060BA                     _INT2_CallBack:
 15411                           	opt callstack 17
 15412                           
 15413                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 15414                           
 15415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15416                           ;incstack = 0
 15417  0060BA  5017               	movf	_INT2_InterruptHandler,w,c
 15418  0060BC  1018               	iorwf	_INT2_InterruptHandler+1,w,c
 15419  0060BE  1019               	iorwf	_INT2_InterruptHandler+2,w,c
 15420  0060C0  B4D8               	btfsc	status,2,c
 15421  0060C2  0012               	return	
 15422                           
 15423                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 15424  0060C4  D801               	call	u125_48
 15425  0060C6  0012               	return	
 15426  0060C8                     u125_48:
 15427  0060C8  0005               	push	
 15428  0060CA  6EFA               	movwf	pclath,c
 15429  0060CC  5017               	movf	_INT2_InterruptHandler,w,c
 15430  0060CE  6EFD               	movwf	tosl,c
 15431  0060D0  5018               	movf	_INT2_InterruptHandler+1,w,c
 15432  0060D2  6EFE               	movwf	tosh,c
 15433  0060D4  5019               	movf	_INT2_InterruptHandler+2,w,c
 15434  0060D6  6EFF               	movwf	tosu,c
 15435  0060D8  50FA               	movf	pclath,w,c
 15436  0060DA  0012               	return		;indir
 15437  0060DC                     __end_of_INT2_CallBack:
 15438                           	opt callstack 0
 15439                           
 15440 ;; *************** function _INT2_DefaultInterruptHandler *****************
 15441 ;; Defined at:
 15442 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 15443 ;; Parameters:    Size  Location     Type
 15444 ;;		None
 15445 ;; Auto vars:     Size  Location     Type
 15446 ;;		None
 15447 ;; Return value:  Size  Location     Type
 15448 ;;                  1  [STACK] void 
 15449 ;; Registers used:
 15450 ;;		None
 15451 ;; Tracked objects:
 15452 ;;		On entry : 0/39
 15453 ;;		On exit  : 0/0
 15454 ;;		Unchanged: 0/0
 15455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15460 ;;Total ram usage:        0 bytes
 15461 ;; Hardware stack levels used:    1
 15462 ;; This function calls:
 15463 ;;		Nothing
 15464 ;; This function is called by:
 15465 ;;		_EXT_INT_Initialize
 15466 ;;		_INT2_CallBack
 15467 ;; This function uses a reentrant model
 15468 ;;
 15469                           
 15470                           	psect	text88
 15471  0062CE                     __ptext88:
 15472                           	opt callstack 0
 15473  0062CE                     _INT2_DefaultInterruptHandler:
 15474                           	opt callstack 17
 15475                           
 15476                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15477                           
 15478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15479                           ;incstack = 0
 15480  0062CE  0012               	return		;funcret
 15481  0062D0                     __end_of_INT2_DefaultInterruptHandler:
 15482                           	opt callstack 0
 15483                           
 15484 ;; *************** function _Default_ISR *****************
 15485 ;; Defined at:
 15486 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;		None
 15489 ;; Auto vars:     Size  Location     Type
 15490 ;;		None
 15491 ;; Return value:  Size  Location     Type
 15492 ;;                  1    wreg      void 
 15493 ;; Registers used:
 15494 ;;		None
 15495 ;; Tracked objects:
 15496 ;;		On entry : 0/0
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15504 ;;Total ram usage:        0 bytes
 15505 ;; Hardware stack levels used:    1
 15506 ;; This function calls:
 15507 ;;		Nothing
 15508 ;; This function is called by:
 15509 ;;		Interrupt level 2
 15510 ;; This function uses a non-reentrant model
 15511 ;;
 15512                           
 15513                           	psect	text89
 15514  0062C4                     __ptext89:
 15515                           	opt callstack 0
 15516  0062C4                     _Default_ISR:
 15517                           	opt callstack 19
 15518                           
 15519                           ;incstack = 0
 15520  0062C4  EE13  F12A         	lfsr	1,___inthi_sp
 15521  0062C8  0011               	retfie		f
 15522  0062CA                     __end_of_Default_ISR:
 15523                           	opt callstack 0
 15524                           
 15525 ;; *************** function _ADCC_ISR *****************
 15526 ;; Defined at:
 15527 ;;		line 307 in file "mcc_generated_files/adcc.c"
 15528 ;; Parameters:    Size  Location     Type
 15529 ;;		None
 15530 ;; Auto vars:     Size  Location     Type
 15531 ;;		None
 15532 ;; Return value:  Size  Location     Type
 15533 ;;                  1    wreg      void 
 15534 ;; Registers used:
 15535 ;;		wreg, status,2, status,0, pclath, tosl
 15536 ;; Tracked objects:
 15537 ;;		On entry : 0/0
 15538 ;;		On exit  : 0/0
 15539 ;;		Unchanged: 0/0
 15540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15545 ;;Total ram usage:        0 bytes
 15546 ;; Hardware stack levels used:    1
 15547 ;; Hardware stack levels required when called:    1
 15548 ;; This function calls:
 15549 ;;		Absolute function
 15550 ;;		_ADCC_DefaultInterruptHandler
 15551 ;; This function is called by:
 15552 ;;		Interrupt level 2
 15553 ;; This function uses a non-reentrant model
 15554 ;;
 15555                           
 15556                           	psect	text90
 15557  005CF0                     __ptext90:
 15558                           	opt callstack 0
 15559  005CF0                     _ADCC_ISR:
 15560                           	opt callstack 18
 15561                           
 15562                           ;incstack = 0
 15563  005CF0  EE13  F12A         	lfsr	1,___inthi_sp
 15564                           
 15565                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 15566  005CF4  0139               	movlb	57	; () banked
 15567  005CF6  95A1               	bcf	161,2,b	;volatile
 15568                           
 15569                           ; BSR set to: 57
 15570                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 15571  005CF8  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 15572  005CFA  1009               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 15573  005CFC  100A               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 15574  005CFE  B4D8               	btfsc	status,2,c
 15575  005D00  0011               	retfie		f
 15576                           
 15577                           ; BSR set to: 57
 15578                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 15579  005D02  D801               	call	i2u200_48
 15580  005D04  0011               	retfie		f
 15581  005D06                     i2u200_48:
 15582  005D06  0005               	push	
 15583  005D08  6EFA               	movwf	pclath,c
 15584  005D0A  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 15585  005D0C  6EFD               	movwf	tosl,c
 15586  005D0E  5009               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 15587  005D10  6EFE               	movwf	tosh,c
 15588  005D12  500A               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 15589  005D14  6EFF               	movwf	tosu,c
 15590  005D16  50FA               	movf	pclath,w,c
 15591  005D18  0012               	return		;indir
 15592  005D1A                     __end_of_ADCC_ISR:
 15593                           	opt callstack 0
 15594                           
 15595 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 15596 ;; Defined at:
 15597 ;;		line 320 in file "mcc_generated_files/adcc.c"
 15598 ;; Parameters:    Size  Location     Type
 15599 ;;		None
 15600 ;; Auto vars:     Size  Location     Type
 15601 ;;		None
 15602 ;; Return value:  Size  Location     Type
 15603 ;;                  1  [STACK] void 
 15604 ;; Registers used:
 15605 ;;		None
 15606 ;; Tracked objects:
 15607 ;;		On entry : 3F/39
 15608 ;;		On exit  : 0/0
 15609 ;;		Unchanged: 0/0
 15610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15615 ;;Total ram usage:        0 bytes
 15616 ;; Hardware stack levels used:    1
 15617 ;; This function calls:
 15618 ;;		Nothing
 15619 ;; This function is called by:
 15620 ;;		_ADCC_Initialize
 15621 ;;		_ADCC_ISR
 15622 ;; This function uses a reentrant model
 15623 ;;
 15624                           
 15625                           	psect	text91
 15626  0062D0                     __ptext91:
 15627                           	opt callstack 0
 15628  0062D0                     _ADCC_DefaultInterruptHandler:
 15629                           	opt callstack 18
 15630                           
 15631                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15632                           
 15633                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15634                           ;incstack = 0
 15635  0062D0  0012               	return		;funcret
 15636  0062D2                     __end_of_ADCC_DefaultInterruptHandler:
 15637                           	opt callstack 0
 15638                           
 15639 ;; *************** function _UART1_tx_vect_isr *****************
 15640 ;; Defined at:
 15641 ;;		line 197 in file "mcc_generated_files/uart1.c"
 15642 ;; Parameters:    Size  Location     Type
 15643 ;;		None
 15644 ;; Auto vars:     Size  Location     Type
 15645 ;;		None
 15646 ;; Return value:  Size  Location     Type
 15647 ;;                  1    wreg      void 
 15648 ;; Registers used:
 15649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15650 ;; Tracked objects:
 15651 ;;		On entry : 0/0
 15652 ;;		On exit  : 0/0
 15653 ;;		Unchanged: 0/0
 15654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15659 ;;Total ram usage:        0 bytes
 15660 ;; Hardware stack levels used:    1
 15661 ;; Hardware stack levels required when called:    1
 15662 ;; This function calls:
 15663 ;;		Absolute function
 15664 ;;		_UART1_Transmit_ISR
 15665 ;; This function is called by:
 15666 ;;		Interrupt level 2
 15667 ;; This function uses a non-reentrant model
 15668 ;;
 15669                           
 15670                           	psect	text92
 15671  005F4C                     __ptext92:
 15672                           	opt callstack 0
 15673  005F4C                     _UART1_tx_vect_isr:
 15674                           	opt callstack 18
 15675                           
 15676                           ;incstack = 0
 15677  005F4C  EE13  F12A         	lfsr	1,___inthi_sp
 15678                           
 15679                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 15680  005F50  500B               	movf	_UART1_TxInterruptHandler,w,c
 15681  005F52  100C               	iorwf	_UART1_TxInterruptHandler+1,w,c
 15682  005F54  100D               	iorwf	_UART1_TxInterruptHandler+2,w,c
 15683  005F56  B4D8               	btfsc	status,2,c
 15684  005F58  0011               	retfie		f
 15685                           
 15686                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 15687  005F5A  D801               	call	i2u415_48
 15688  005F5C  0011               	retfie		f
 15689  005F5E                     i2u415_48:
 15690  005F5E  0005               	push	
 15691  005F60  6EFA               	movwf	pclath,c
 15692  005F62  500B               	movf	_UART1_TxInterruptHandler,w,c
 15693  005F64  6EFD               	movwf	tosl,c
 15694  005F66  500C               	movf	_UART1_TxInterruptHandler+1,w,c
 15695  005F68  6EFE               	movwf	tosh,c
 15696  005F6A  500D               	movf	_UART1_TxInterruptHandler+2,w,c
 15697  005F6C  6EFF               	movwf	tosu,c
 15698  005F6E  50FA               	movf	pclath,w,c
 15699  005F70  0012               	return		;indir
 15700  005F72                     __end_of_UART1_tx_vect_isr:
 15701                           	opt callstack 0
 15702                           
 15703 ;; *************** function _UART1_Transmit_ISR *****************
 15704 ;; Defined at:
 15705 ;;		line 211 in file "mcc_generated_files/uart1.c"
 15706 ;; Parameters:    Size  Location     Type
 15707 ;;		None
 15708 ;; Auto vars:     Size  Location     Type
 15709 ;;		None
 15710 ;; Return value:  Size  Location     Type
 15711 ;;                  1  [STACK] void 
 15712 ;; Registers used:
 15713 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15714 ;; Tracked objects:
 15715 ;;		On entry : 0/0
 15716 ;;		On exit  : 3B/39
 15717 ;;		Unchanged: 0/0
 15718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15723 ;;Total ram usage:        0 bytes
 15724 ;; Hardware stack levels used:    1
 15725 ;; This function calls:
 15726 ;;		Nothing
 15727 ;; This function is called by:
 15728 ;;		_UART1_Initialize
 15729 ;;		_UART1_tx_vect_isr
 15730 ;; This function uses a reentrant model
 15731 ;;
 15732                           
 15733                           	psect	text93
 15734  005C1A                     __ptext93:
 15735                           	opt callstack 0
 15736  005C1A                     _UART1_Transmit_ISR:
 15737                           	opt callstack 18
 15738                           
 15739                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 15740                           
 15741                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15742                           ;incstack = 0
 15743  005C1A  0E40               	movlw	64
 15744  005C1C  6038               	cpfslt	_uart1TxBufferRemaining,c
 15745  005C1E  D010               	goto	l597
 15746                           
 15747                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 15748  005C20  0EC0               	movlw	low _uart1TxBuffer
 15749  005C22  2439               	addwf	_uart1TxTail,w,c	;volatile
 15750  005C24  6ED9               	movwf	fsr2l,c
 15751  005C26  6ADA               	clrf	fsr2h,c
 15752  005C28  0E02               	movlw	high _uart1TxBuffer
 15753  005C2A  22DA               	addwfc	fsr2h,f,c
 15754  005C2C  50DF               	movf	indf2,w,c
 15755  005C2E  013D               	movlb	61	; () banked
 15756  005C30  6FEA               	movwf	234,b	;volatile
 15757                           
 15758                           ; BSR set to: 61
 15759  005C32  2A39               	incf	_uart1TxTail,f,c	;volatile
 15760                           
 15761                           ; BSR set to: 61
 15762                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 15763  005C34  0E3F               	movlw	63
 15764  005C36  6439               	cpfsgt	_uart1TxTail,c
 15765  005C38  D001               	goto	l6411
 15766                           
 15767                           ; BSR set to: 61
 15768                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 15769  005C3A  6A39               	clrf	_uart1TxTail,c	;volatile
 15770  005C3C                     l6411:
 15771                           
 15772                           ; BSR set to: 61
 15773                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 15774  005C3C  2A38               	incf	_uart1TxBufferRemaining,f,c	;volatile
 15775                           
 15776                           ;mcc_generated_files/uart1.c: 220:  } else {
 15777  005C3E  0012               	return	
 15778  005C40                     l597:
 15779                           
 15780                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 15781  005C40  0139               	movlb	57	; () banked
 15782  005C42  9993               	bcf	147,4,b	;volatile
 15783                           
 15784                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15785  005C44  0012               	return		;funcret
 15786  005C46                     __end_of_UART1_Transmit_ISR:
 15787                           	opt callstack 0
 15788                           
 15789 ;; *************** function _UART1_rx_vect_isr *****************
 15790 ;; Defined at:
 15791 ;;		line 204 in file "mcc_generated_files/uart1.c"
 15792 ;; Parameters:    Size  Location     Type
 15793 ;;		None
 15794 ;; Auto vars:     Size  Location     Type
 15795 ;;		None
 15796 ;; Return value:  Size  Location     Type
 15797 ;;                  1    wreg      void 
 15798 ;; Registers used:
 15799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15800 ;; Tracked objects:
 15801 ;;		On entry : 0/0
 15802 ;;		On exit  : 0/0
 15803 ;;		Unchanged: 0/0
 15804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15809 ;;Total ram usage:        0 bytes
 15810 ;; Hardware stack levels used:    1
 15811 ;; Hardware stack levels required when called:    1
 15812 ;; This function calls:
 15813 ;;		Absolute function
 15814 ;;		_UART1_Receive_ISR
 15815 ;; This function is called by:
 15816 ;;		Interrupt level 2
 15817 ;; This function uses a non-reentrant model
 15818 ;;
 15819                           
 15820                           	psect	text94
 15821  005F74                     __ptext94:
 15822                           	opt callstack 0
 15823  005F74                     _UART1_rx_vect_isr:
 15824                           	opt callstack 18
 15825                           
 15826                           ;incstack = 0
 15827  005F74  EE13  F12A         	lfsr	1,___inthi_sp
 15828                           
 15829                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 15830  005F78  500E               	movf	_UART1_RxInterruptHandler,w,c
 15831  005F7A  100F               	iorwf	_UART1_RxInterruptHandler+1,w,c
 15832  005F7C  1010               	iorwf	_UART1_RxInterruptHandler+2,w,c
 15833  005F7E  B4D8               	btfsc	status,2,c
 15834  005F80  0011               	retfie		f
 15835                           
 15836                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 15837  005F82  D801               	call	i2u417_48
 15838  005F84  0011               	retfie		f
 15839  005F86                     i2u417_48:
 15840  005F86  0005               	push	
 15841  005F88  6EFA               	movwf	pclath,c
 15842  005F8A  500E               	movf	_UART1_RxInterruptHandler,w,c
 15843  005F8C  6EFD               	movwf	tosl,c
 15844  005F8E  500F               	movf	_UART1_RxInterruptHandler+1,w,c
 15845  005F90  6EFE               	movwf	tosh,c
 15846  005F92  5010               	movf	_UART1_RxInterruptHandler+2,w,c
 15847  005F94  6EFF               	movwf	tosu,c
 15848  005F96  50FA               	movf	pclath,w,c
 15849  005F98  0012               	return		;indir
 15850  005F9A                     __end_of_UART1_rx_vect_isr:
 15851                           	opt callstack 0
 15852                           
 15853 ;; *************** function _UART1_Receive_ISR *****************
 15854 ;; Defined at:
 15855 ;;		line 227 in file "mcc_generated_files/uart1.c"
 15856 ;; Parameters:    Size  Location     Type
 15857 ;;		None
 15858 ;; Auto vars:     Size  Location     Type
 15859 ;;		None
 15860 ;; Return value:  Size  Location     Type
 15861 ;;                  1  [STACK] void 
 15862 ;; Registers used:
 15863 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15864 ;; Tracked objects:
 15865 ;;		On entry : 0/0
 15866 ;;		On exit  : 0/0
 15867 ;;		Unchanged: 0/0
 15868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15873 ;;Total ram usage:        0 bytes
 15874 ;; Hardware stack levels used:    1
 15875 ;; This function calls:
 15876 ;;		Nothing
 15877 ;; This function is called by:
 15878 ;;		_UART1_Initialize
 15879 ;;		_UART1_rx_vect_isr
 15880 ;; This function uses a reentrant model
 15881 ;;
 15882                           
 15883                           	psect	text95
 15884  0060DC                     __ptext95:
 15885                           	opt callstack 0
 15886  0060DC                     _UART1_Receive_ISR:
 15887                           	opt callstack 18
 15888                           
 15889                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 15890                           
 15891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15892                           ;incstack = 0
 15893  0060DC  0E80               	movlw	low _uart1RxBuffer
 15894  0060DE  2437               	addwf	_uart1RxHead,w,c	;volatile
 15895  0060E0  6ED9               	movwf	fsr2l,c
 15896  0060E2  6ADA               	clrf	fsr2h,c
 15897  0060E4  0E02               	movlw	high _uart1RxBuffer
 15898  0060E6  22DA               	addwfc	fsr2h,f,c
 15899  0060E8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15900  0060EE  2A37               	incf	_uart1RxHead,f,c	;volatile
 15901                           
 15902                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 15903  0060F0  0E3F               	movlw	63
 15904  0060F2  6437               	cpfsgt	_uart1RxHead,c
 15905  0060F4  D001               	goto	l6421
 15906                           
 15907                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 15908  0060F6  6A37               	clrf	_uart1RxHead,c	;volatile
 15909  0060F8                     l6421:
 15910                           
 15911                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 15912  0060F8  2A35               	incf	_uart1RxCount,f,c	;volatile
 15913                           
 15914                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15915  0060FA  0012               	return		;funcret
 15916  0060FC                     __end_of_UART1_Receive_ISR:
 15917                           	opt callstack 0
 15918                           
 15919 ;; *************** function _UART2_tx_vect_isr *****************
 15920 ;; Defined at:
 15921 ;;		line 195 in file "mcc_generated_files/uart2.c"
 15922 ;; Parameters:    Size  Location     Type
 15923 ;;		None
 15924 ;; Auto vars:     Size  Location     Type
 15925 ;;		None
 15926 ;; Return value:  Size  Location     Type
 15927 ;;                  1    wreg      void 
 15928 ;; Registers used:
 15929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15930 ;; Tracked objects:
 15931 ;;		On entry : 0/0
 15932 ;;		On exit  : 0/0
 15933 ;;		Unchanged: 0/0
 15934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15939 ;;Total ram usage:        0 bytes
 15940 ;; Hardware stack levels used:    1
 15941 ;; Hardware stack levels required when called:    1
 15942 ;; This function calls:
 15943 ;;		Absolute function
 15944 ;;		_UART2_Transmit_ISR
 15945 ;; This function is called by:
 15946 ;;		Interrupt level 2
 15947 ;; This function uses a non-reentrant model
 15948 ;;
 15949                           
 15950                           	psect	text96
 15951  005F9C                     __ptext96:
 15952                           	opt callstack 0
 15953  005F9C                     _UART2_tx_vect_isr:
 15954                           	opt callstack 18
 15955                           
 15956                           ;incstack = 0
 15957  005F9C  EE13  F12A         	lfsr	1,___inthi_sp
 15958                           
 15959                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 15960  005FA0  5011               	movf	_UART2_TxInterruptHandler,w,c
 15961  005FA2  1012               	iorwf	_UART2_TxInterruptHandler+1,w,c
 15962  005FA4  1013               	iorwf	_UART2_TxInterruptHandler+2,w,c
 15963  005FA6  B4D8               	btfsc	status,2,c
 15964  005FA8  0011               	retfie		f
 15965                           
 15966                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 15967  005FAA  D801               	call	i2u419_48
 15968  005FAC  0011               	retfie		f
 15969  005FAE                     i2u419_48:
 15970  005FAE  0005               	push	
 15971  005FB0  6EFA               	movwf	pclath,c
 15972  005FB2  5011               	movf	_UART2_TxInterruptHandler,w,c
 15973  005FB4  6EFD               	movwf	tosl,c
 15974  005FB6  5012               	movf	_UART2_TxInterruptHandler+1,w,c
 15975  005FB8  6EFE               	movwf	tosh,c
 15976  005FBA  5013               	movf	_UART2_TxInterruptHandler+2,w,c
 15977  005FBC  6EFF               	movwf	tosu,c
 15978  005FBE  50FA               	movf	pclath,w,c
 15979  005FC0  0012               	return		;indir
 15980  005FC2                     __end_of_UART2_tx_vect_isr:
 15981                           	opt callstack 0
 15982                           
 15983 ;; *************** function _UART2_Transmit_ISR *****************
 15984 ;; Defined at:
 15985 ;;		line 213 in file "mcc_generated_files/uart2.c"
 15986 ;; Parameters:    Size  Location     Type
 15987 ;;		None
 15988 ;; Auto vars:     Size  Location     Type
 15989 ;;		None
 15990 ;; Return value:  Size  Location     Type
 15991 ;;                  1  [STACK] void 
 15992 ;; Registers used:
 15993 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15994 ;; Tracked objects:
 15995 ;;		On entry : 0/0
 15996 ;;		On exit  : 3B/39
 15997 ;;		Unchanged: 0/0
 15998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16003 ;;Total ram usage:        0 bytes
 16004 ;; Hardware stack levels used:    1
 16005 ;; This function calls:
 16006 ;;		Nothing
 16007 ;; This function is called by:
 16008 ;;		_UART2_Initialize
 16009 ;;		_UART2_tx_vect_isr
 16010 ;; This function uses a reentrant model
 16011 ;;
 16012                           
 16013                           	psect	text97
 16014  005C46                     __ptext97:
 16015                           	opt callstack 0
 16016  005C46                     _UART2_Transmit_ISR:
 16017                           	opt callstack 18
 16018                           
 16019                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 16020                           
 16021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16022                           ;incstack = 0
 16023  005C46  0E40               	movlw	64
 16024  005C48  6032               	cpfslt	_uart2TxBufferRemaining,c
 16025  005C4A  D010               	goto	l717
 16026                           
 16027                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 16028  005C4C  0E40               	movlw	low _uart2TxBuffer
 16029  005C4E  2433               	addwf	_uart2TxTail,w,c	;volatile
 16030  005C50  6ED9               	movwf	fsr2l,c
 16031  005C52  6ADA               	clrf	fsr2h,c
 16032  005C54  0E02               	movlw	high _uart2TxBuffer
 16033  005C56  22DA               	addwfc	fsr2h,f,c
 16034  005C58  50DF               	movf	indf2,w,c
 16035  005C5A  013D               	movlb	61	; () banked
 16036  005C5C  6FD2               	movwf	210,b	;volatile
 16037                           
 16038                           ; BSR set to: 61
 16039  005C5E  2A33               	incf	_uart2TxTail,f,c	;volatile
 16040                           
 16041                           ; BSR set to: 61
 16042                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 16043  005C60  0E3F               	movlw	63
 16044  005C62  6433               	cpfsgt	_uart2TxTail,c
 16045  005C64  D001               	goto	l6433
 16046                           
 16047                           ; BSR set to: 61
 16048                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 16049  005C66  6A33               	clrf	_uart2TxTail,c	;volatile
 16050  005C68                     l6433:
 16051                           
 16052                           ; BSR set to: 61
 16053                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 16054  005C68  2A32               	incf	_uart2TxBufferRemaining,f,c	;volatile
 16055                           
 16056                           ;mcc_generated_files/uart2.c: 224:     }
 16057  005C6A  0012               	return	
 16058  005C6C                     l717:
 16059                           
 16060                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 16061  005C6C  0139               	movlb	57	; () banked
 16062  005C6E  9796               	bcf	150,3,b	;volatile
 16063                           
 16064                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16065  005C70  0012               	return		;funcret
 16066  005C72                     __end_of_UART2_Transmit_ISR:
 16067                           	opt callstack 0
 16068                           
 16069 ;; *************** function _UART2_rx_vect_isr *****************
 16070 ;; Defined at:
 16071 ;;		line 203 in file "mcc_generated_files/uart2.c"
 16072 ;; Parameters:    Size  Location     Type
 16073 ;;		None
 16074 ;; Auto vars:     Size  Location     Type
 16075 ;;		None
 16076 ;; Return value:  Size  Location     Type
 16077 ;;                  1    wreg      void 
 16078 ;; Registers used:
 16079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16080 ;; Tracked objects:
 16081 ;;		On entry : 0/0
 16082 ;;		On exit  : 0/0
 16083 ;;		Unchanged: 0/0
 16084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16089 ;;Total ram usage:        0 bytes
 16090 ;; Hardware stack levels used:    1
 16091 ;; Hardware stack levels required when called:    1
 16092 ;; This function calls:
 16093 ;;		Absolute function
 16094 ;;		_UART2_Receive_ISR
 16095 ;; This function is called by:
 16096 ;;		Interrupt level 2
 16097 ;; This function uses a non-reentrant model
 16098 ;;
 16099                           
 16100                           	psect	text98
 16101  005FC4                     __ptext98:
 16102                           	opt callstack 0
 16103  005FC4                     _UART2_rx_vect_isr:
 16104                           	opt callstack 18
 16105                           
 16106                           ;incstack = 0
 16107  005FC4  EE13  F12A         	lfsr	1,___inthi_sp
 16108                           
 16109                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 16110  005FC8  5014               	movf	_UART2_RxInterruptHandler,w,c
 16111  005FCA  1015               	iorwf	_UART2_RxInterruptHandler+1,w,c
 16112  005FCC  1016               	iorwf	_UART2_RxInterruptHandler+2,w,c
 16113  005FCE  B4D8               	btfsc	status,2,c
 16114  005FD0  0011               	retfie		f
 16115                           
 16116                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 16117  005FD2  D801               	call	i2u421_48
 16118  005FD4  0011               	retfie		f
 16119  005FD6                     i2u421_48:
 16120  005FD6  0005               	push	
 16121  005FD8  6EFA               	movwf	pclath,c
 16122  005FDA  5014               	movf	_UART2_RxInterruptHandler,w,c
 16123  005FDC  6EFD               	movwf	tosl,c
 16124  005FDE  5015               	movf	_UART2_RxInterruptHandler+1,w,c
 16125  005FE0  6EFE               	movwf	tosh,c
 16126  005FE2  5016               	movf	_UART2_RxInterruptHandler+2,w,c
 16127  005FE4  6EFF               	movwf	tosu,c
 16128  005FE6  50FA               	movf	pclath,w,c
 16129  005FE8  0012               	return		;indir
 16130  005FEA                     __end_of_UART2_rx_vect_isr:
 16131                           	opt callstack 0
 16132                           
 16133 ;; *************** function _UART2_Receive_ISR *****************
 16134 ;; Defined at:
 16135 ;;		line 233 in file "mcc_generated_files/uart2.c"
 16136 ;; Parameters:    Size  Location     Type
 16137 ;;		None
 16138 ;; Auto vars:     Size  Location     Type
 16139 ;;		None
 16140 ;; Return value:  Size  Location     Type
 16141 ;;                  1  [STACK] void 
 16142 ;; Registers used:
 16143 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16144 ;; Tracked objects:
 16145 ;;		On entry : 0/0
 16146 ;;		On exit  : 0/0
 16147 ;;		Unchanged: 0/0
 16148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16153 ;;Total ram usage:        0 bytes
 16154 ;; Hardware stack levels used:    1
 16155 ;; This function calls:
 16156 ;;		Nothing
 16157 ;; This function is called by:
 16158 ;;		_UART2_Initialize
 16159 ;;		_UART2_rx_vect_isr
 16160 ;; This function uses a reentrant model
 16161 ;;
 16162                           
 16163                           	psect	text99
 16164  0060FC                     __ptext99:
 16165                           	opt callstack 0
 16166  0060FC                     _UART2_Receive_ISR:
 16167                           	opt callstack 18
 16168                           
 16169                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 16170                           
 16171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16172                           ;incstack = 0
 16173  0060FC  0E00               	movlw	low _uart2RxBuffer
 16174  0060FE  2431               	addwf	_uart2RxHead,w,c	;volatile
 16175  006100  6ED9               	movwf	fsr2l,c
 16176  006102  6ADA               	clrf	fsr2h,c
 16177  006104  0E02               	movlw	high _uart2RxBuffer
 16178  006106  22DA               	addwfc	fsr2h,f,c
 16179  006108  006F F743 FFDF     	movff	15824,indf2	;volatile
 16180  00610E  2A31               	incf	_uart2RxHead,f,c	;volatile
 16181                           
 16182                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 16183  006110  0E3F               	movlw	63
 16184  006112  6431               	cpfsgt	_uart2RxHead,c
 16185  006114  D001               	goto	l6443
 16186                           
 16187                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 16188  006116  6A31               	clrf	_uart2RxHead,c	;volatile
 16189  006118                     l6443:
 16190                           
 16191                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 16192  006118  2A2F               	incf	_uart2RxCount,f,c	;volatile
 16193                           
 16194                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16195  00611A  0012               	return		;funcret
 16196  00611C                     __end_of_UART2_Receive_ISR:
 16197                           	opt callstack 0
 16198                           
 16199 ;; *************** function _TMR6_ISR *****************
 16200 ;; Defined at:
 16201 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 16202 ;; Parameters:    Size  Location     Type
 16203 ;;		None
 16204 ;; Auto vars:     Size  Location     Type
 16205 ;;		None
 16206 ;; Return value:  Size  Location     Type
 16207 ;;                  1    wreg      void 
 16208 ;; Registers used:
 16209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16210 ;; Tracked objects:
 16211 ;;		On entry : 0/0
 16212 ;;		On exit  : 0/0
 16213 ;;		Unchanged: 0/0
 16214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16219 ;;Total ram usage:        1 bytes
 16220 ;; Hardware stack levels used:    1
 16221 ;; Hardware stack levels required when called:    2
 16222 ;; This function calls:
 16223 ;;		_TMR6_CallBack
 16224 ;; This function is called by:
 16225 ;;		Interrupt level 2
 16226 ;; This function uses a non-reentrant model
 16227 ;;
 16228                           
 16229                           	psect	text100
 16230  0061A8                     __ptext100:
 16231                           	opt callstack 0
 16232  0061A8                     _TMR6_ISR:
 16233                           	opt callstack 17
 16234                           
 16235                           ;incstack = 0
 16236  0061A8  0060  F0EC  F05B   	movff	btemp,??_TMR6_ISR
 16237  0061AE  EE13  F12A         	lfsr	1,___inthi_sp
 16238                           
 16239                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 16240  0061B2  0139               	movlb	57	; () banked
 16241  0061B4  91A9               	bcf	169,0,b	;volatile
 16242                           
 16243                           ; BSR set to: 57
 16244                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 16245  0061B6  ECF5  F02F         	call	_TMR6_CallBack	;wreg free
 16246  0061BA  0060  F16C  F03B   	movff	??_TMR6_ISR,btemp
 16247  0061C0  0011               	retfie		f
 16248  0061C2                     __end_of_TMR6_ISR:
 16249                           	opt callstack 0
 16250                           
 16251 ;; *************** function _TMR6_CallBack *****************
 16252 ;; Defined at:
 16253 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 16254 ;; Parameters:    Size  Location     Type
 16255 ;;		None
 16256 ;; Auto vars:     Size  Location     Type
 16257 ;;		None
 16258 ;; Return value:  Size  Location     Type
 16259 ;;                  1  [STACK] void 
 16260 ;; Registers used:
 16261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16262 ;; Tracked objects:
 16263 ;;		On entry : 3F/39
 16264 ;;		On exit  : 0/0
 16265 ;;		Unchanged: 0/0
 16266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16271 ;;Total ram usage:        0 bytes
 16272 ;; Hardware stack levels used:    1
 16273 ;; Hardware stack levels required when called:    1
 16274 ;; This function calls:
 16275 ;;		Absolute function
 16276 ;;		_TMR6_DefaultInterruptHandler
 16277 ;; This function is called by:
 16278 ;;		_TMR6_ISR
 16279 ;; This function uses a reentrant model
 16280 ;;
 16281                           
 16282                           	psect	text101
 16283  005FEA                     __ptext101:
 16284                           	opt callstack 0
 16285  005FEA                     _TMR6_CallBack:
 16286                           	opt callstack 17
 16287                           
 16288                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 16289                           
 16290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16291                           ;incstack = 0
 16292  005FEA  0100               	movlb	0	; () banked
 16293  005FEC  51F3               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16294  005FEE  11F4               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16295  005FF0  11F5               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16296  005FF2  B4D8               	btfsc	status,2,c
 16297  005FF4  0012               	return	
 16298                           
 16299                           ; BSR set to: 0
 16300                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 16301  005FF6  D801               	call	u505_48
 16302  005FF8  0012               	return	
 16303  005FFA                     u505_48:
 16304  005FFA  0005               	push	
 16305  005FFC  6EFA               	movwf	pclath,c
 16306  005FFE  51F3               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16307  006000  6EFD               	movwf	tosl,c
 16308  006002  51F4               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16309  006004  6EFE               	movwf	tosh,c
 16310  006006  51F5               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16311  006008  6EFF               	movwf	tosu,c
 16312  00600A  50FA               	movf	pclath,w,c
 16313  00600C  0012               	return		;indir
 16314  00600E                     __end_of_TMR6_CallBack:
 16315                           	opt callstack 0
 16316                           
 16317 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 16318 ;; Defined at:
 16319 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 16320 ;; Parameters:    Size  Location     Type
 16321 ;;		None
 16322 ;; Auto vars:     Size  Location     Type
 16323 ;;  i               1  [STACK] unsigned char 
 16324 ;; Return value:  Size  Location     Type
 16325 ;;                  1  [STACK] void 
 16326 ;; Registers used:
 16327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 16328 ;; Tracked objects:
 16329 ;;		On entry : 3F/0
 16330 ;;		On exit  : 0/0
 16331 ;;		Unchanged: 0/0
 16332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16337 ;;Total ram usage:        0 bytes
 16338 ;; Hardware stack levels used:    1
 16339 ;; This function calls:
 16340 ;;		Nothing
 16341 ;; This function is called by:
 16342 ;;		_TMR6_Initialize
 16343 ;;		_TMR6_CallBack
 16344 ;; This function uses a reentrant model
 16345 ;;
 16346                           
 16347                           	psect	text102
 16348  00594E                     __ptext102:
 16349                           	opt callstack 0
 16350  00594E                     _TMR6_DefaultInterruptHandler:
 16351                           	opt callstack 0
 16352                           
 16353                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16354  00594E  52E6               	movf	postinc1,f,c
 16355                           
 16356                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 16357                           ;stkvar	_i @ sp[(-1)+0]
 16358                           
 16359                           ;incstack = 0
 16360  005950  0EFF               	movlw	-1
 16361  005952  6AE3               	clrf	plusw1,c
 16362  005954                     l7989:
 16363                           
 16364                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 16365                           ;stkvar	_i @ sp[(-1)+0]
 16366  005954  0EFF               	movlw	-1
 16367  005956  50E3               	movf	plusw1,w,c
 16368  005958  0D02               	mullw	2
 16369  00595A  50F3               	movf	prodl,w,c
 16370  00595C  0FD9               	addlw	low _tickCount
 16371  00595E  6ED9               	movwf	fsr2l,c
 16372  005960  6ADA               	clrf	fsr2h,c
 16373  005962  50DE               	movf	postinc2,w,c
 16374  005964  10DE               	iorwf	postinc2,w,c
 16375  005966  B4D8               	btfsc	status,2,c
 16376  005968  D00A               	goto	l7993
 16377                           
 16378                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 16379                           ;stkvar	_i @ sp[(-1)+0]
 16380  00596A  0EFF               	movlw	-1
 16381  00596C  50E3               	movf	plusw1,w,c
 16382  00596E  0D02               	mullw	2
 16383  005970  50F3               	movf	prodl,w,c
 16384  005972  0FD9               	addlw	low _tickCount
 16385  005974  6ED9               	movwf	fsr2l,c
 16386  005976  6ADA               	clrf	fsr2h,c
 16387  005978  06DE               	decf	postinc2,f,c
 16388  00597A  0E00               	movlw	0
 16389  00597C  5ADD               	subwfb	postdec2,f,c
 16390  00597E                     l7993:
 16391                           
 16392                           ;mcc_generated_files/tmr6.c: 207:  }
 16393                           ;stkvar	_i @ sp[(-1)+0]
 16394  00597E  0EFF               	movlw	-1
 16395  005980  2AE3               	incf	plusw1,f,c
 16396                           
 16397                           ;stkvar	_i @ sp[(-1)+0]
 16398  005982  0EFF               	movlw	-1
 16399  005984  006F FF8C  F03B    	movff	plusw1,btemp
 16400  00598A  0E05               	movlw	5
 16401  00598C  643B               	cpfsgt	btemp,c
 16402  00598E  D7E2               	goto	l7989
 16403                           
 16404                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16405  005990  52E5               	movf	postdec1,f,c
 16406  005992  0012               	return		;funcret
 16407  005994                     __end_of_TMR6_DefaultInterruptHandler:
 16408                           	opt callstack 0
 16409                           
 16410 ;; *************** function _DMA1_DMASCNT_ISR *****************
 16411 ;; Defined at:
 16412 ;;		line 126 in file "mcc_generated_files/dma1.c"
 16413 ;; Parameters:    Size  Location     Type
 16414 ;;		None
 16415 ;; Auto vars:     Size  Location     Type
 16416 ;;		None
 16417 ;; Return value:  Size  Location     Type
 16418 ;;                  1    wreg      void 
 16419 ;; Registers used:
 16420 ;;		None
 16421 ;; Tracked objects:
 16422 ;;		On entry : 0/0
 16423 ;;		On exit  : 3F/0
 16424 ;;		Unchanged: 0/0
 16425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16430 ;;Total ram usage:        0 bytes
 16431 ;; Hardware stack levels used:    1
 16432 ;; This function calls:
 16433 ;;		Nothing
 16434 ;; This function is called by:
 16435 ;;		Interrupt level 2
 16436 ;; This function uses a non-reentrant model
 16437 ;;
 16438                           
 16439                           	psect	text103
 16440  00625C                     __ptext103:
 16441                           	opt callstack 0
 16442  00625C                     _DMA1_DMASCNT_ISR:
 16443                           	opt callstack 19
 16444                           
 16445                           ;incstack = 0
 16446  00625C  EE13  F12A         	lfsr	1,___inthi_sp
 16447                           
 16448                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 16449  006260  0139               	movlb	57	; () banked
 16450  006262  91A2               	bcf	162,0,b	;volatile
 16451                           
 16452                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 16453  006264  0100               	movlb	0	; () banked
 16454  006266  97CD               	bcf	_spi_link& (0+255),3,b	;volatile
 16455                           
 16456                           ; BSR set to: 0
 16457  006268  0011               	retfie		f
 16458  00626A                     __end_of_DMA1_DMASCNT_ISR:
 16459                           	opt callstack 0
 16460                           
 16461 ;; *************** function _DMA1_DMADCNT_ISR *****************
 16462 ;; Defined at:
 16463 ;;		line 133 in file "mcc_generated_files/dma1.c"
 16464 ;; Parameters:    Size  Location     Type
 16465 ;;		None
 16466 ;; Auto vars:     Size  Location     Type
 16467 ;;		None
 16468 ;; Return value:  Size  Location     Type
 16469 ;;                  1    wreg      void 
 16470 ;; Registers used:
 16471 ;;		None
 16472 ;; Tracked objects:
 16473 ;;		On entry : 0/0
 16474 ;;		On exit  : 3F/39
 16475 ;;		Unchanged: 0/0
 16476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16481 ;;Total ram usage:        0 bytes
 16482 ;; Hardware stack levels used:    1
 16483 ;; This function calls:
 16484 ;;		Nothing
 16485 ;; This function is called by:
 16486 ;;		Interrupt level 2
 16487 ;; This function uses a non-reentrant model
 16488 ;;
 16489                           
 16490                           	psect	text104
 16491  006274                     __ptext104:
 16492                           	opt callstack 0
 16493  006274                     _DMA1_DMADCNT_ISR:
 16494                           	opt callstack 19
 16495                           
 16496                           ; BSR set to: 0
 16497                           ;incstack = 0
 16498  006274  EE13  F12A         	lfsr	1,___inthi_sp
 16499                           
 16500                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 16501  006278  0139               	movlb	57	; () banked
 16502  00627A  93A2               	bcf	162,1,b	;volatile
 16503                           
 16504                           ; BSR set to: 57
 16505  00627C  0011               	retfie		f
 16506  00627E                     __end_of_DMA1_DMADCNT_ISR:
 16507                           	opt callstack 0
 16508                           
 16509 ;; *************** function _DMA1_DMAA_ISR *****************
 16510 ;; Defined at:
 16511 ;;		line 143 in file "mcc_generated_files/dma1.c"
 16512 ;; Parameters:    Size  Location     Type
 16513 ;;		None
 16514 ;; Auto vars:     Size  Location     Type
 16515 ;;		None
 16516 ;; Return value:  Size  Location     Type
 16517 ;;                  1    wreg      void 
 16518 ;; Registers used:
 16519 ;;		None
 16520 ;; Tracked objects:
 16521 ;;		On entry : 0/0
 16522 ;;		On exit  : 3F/39
 16523 ;;		Unchanged: 0/0
 16524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16529 ;;Total ram usage:        0 bytes
 16530 ;; Hardware stack levels used:    1
 16531 ;; This function calls:
 16532 ;;		Nothing
 16533 ;; This function is called by:
 16534 ;;		Interrupt level 2
 16535 ;; This function uses a non-reentrant model
 16536 ;;
 16537                           
 16538                           	psect	text105
 16539  006280                     __ptext105:
 16540                           	opt callstack 0
 16541  006280                     _DMA1_DMAA_ISR:
 16542                           	opt callstack 19
 16543                           
 16544                           ; BSR set to: 57
 16545                           ;incstack = 0
 16546  006280  EE13  F12A         	lfsr	1,___inthi_sp
 16547                           
 16548                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 16549  006284  0139               	movlb	57	; () banked
 16550  006286  97A2               	bcf	162,3,b	;volatile
 16551                           
 16552                           ; BSR set to: 57
 16553  006288  0011               	retfie		f
 16554  00628A                     __end_of_DMA1_DMAA_ISR:
 16555                           	opt callstack 0
 16556                           
 16557 ;; *************** function _DMA1_DMAOR_ISR *****************
 16558 ;; Defined at:
 16559 ;;		line 154 in file "mcc_generated_files/dma1.c"
 16560 ;; Parameters:    Size  Location     Type
 16561 ;;		None
 16562 ;; Auto vars:     Size  Location     Type
 16563 ;;		None
 16564 ;; Return value:  Size  Location     Type
 16565 ;;                  1    wreg      void 
 16566 ;; Registers used:
 16567 ;;		None
 16568 ;; Tracked objects:
 16569 ;;		On entry : 0/0
 16570 ;;		On exit  : 3F/39
 16571 ;;		Unchanged: 0/0
 16572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16577 ;;Total ram usage:        0 bytes
 16578 ;; Hardware stack levels used:    1
 16579 ;; This function calls:
 16580 ;;		Nothing
 16581 ;; This function is called by:
 16582 ;;		Interrupt level 2
 16583 ;; This function uses a non-reentrant model
 16584 ;;
 16585                           
 16586                           	psect	text106
 16587  00628C                     __ptext106:
 16588                           	opt callstack 0
 16589  00628C                     _DMA1_DMAOR_ISR:
 16590                           	opt callstack 19
 16591                           
 16592                           ; BSR set to: 57
 16593                           ;incstack = 0
 16594  00628C  EE13  F12A         	lfsr	1,___inthi_sp
 16595                           
 16596                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 16597  006290  0139               	movlb	57	; () banked
 16598  006292  95A2               	bcf	162,2,b	;volatile
 16599                           
 16600                           ; BSR set to: 57
 16601  006294  0011               	retfie		f
 16602  006296                     __end_of_DMA1_DMAOR_ISR:
 16603                           	opt callstack 0
 16604                           
 16605 ;; *************** function _TMR5_ISR *****************
 16606 ;; Defined at:
 16607 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 16608 ;; Parameters:    Size  Location     Type
 16609 ;;		None
 16610 ;; Auto vars:     Size  Location     Type
 16611 ;;		None
 16612 ;; Return value:  Size  Location     Type
 16613 ;;                  1    wreg      void 
 16614 ;; Registers used:
 16615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 16616 ;; Tracked objects:
 16617 ;;		On entry : 0/0
 16618 ;;		On exit  : 0/0
 16619 ;;		Unchanged: 0/0
 16620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16623 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16625 ;;Total ram usage:        1 bytes
 16626 ;; Hardware stack levels used:    1
 16627 ;; Hardware stack levels required when called:    2
 16628 ;; This function calls:
 16629 ;;		_TMR5_CallBack
 16630 ;;		_TMR5_WriteTimer
 16631 ;; This function is called by:
 16632 ;;		Interrupt level 2
 16633 ;; This function uses a non-reentrant model
 16634 ;;
 16635                           
 16636                           	psect	text107
 16637  005B10                     __ptext107:
 16638                           	opt callstack 0
 16639  005B10                     _TMR5_ISR:
 16640                           	opt callstack 17
 16641                           
 16642                           ; BSR set to: 57
 16643                           ;incstack = 0
 16644  005B10  0060  F118  F05C   	movff	btemp+11,??_TMR5_ISR
 16645  005B16  EE13  F12A         	lfsr	1,___inthi_sp
 16646                           
 16647                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 16648  005B1A  0139               	movlb	57	; () banked
 16649  005B1C  9DA8               	bcf	168,6,b	;volatile
 16650                           
 16651                           ; BSR set to: 57
 16652                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 16653  005B1E  0060  F0A3  FFE6   	movff	_timer5ReloadVal,postinc1
 16654  005B24  0060  F0A7  FFE6   	movff	_timer5ReloadVal+1,postinc1
 16655  005B2A  ECEB  F02C         	call	_TMR5_WriteTimer	;wreg free
 16656                           
 16657                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 16658  005B2E  4A26               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 16659  005B30  2A27               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 16660  005B32  5027               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 16661  005B34  E104               	bnz	i2u422_40
 16662  005B36  0E32               	movlw	50
 16663  005B38  5C26               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 16664  005B3A  A0D8               	btfss	status,0,c
 16665  005B3C  D004               	goto	i2l1139
 16666  005B3E                     i2u422_40:
 16667                           
 16668                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 16669  005B3E  EC07  F030         	call	_TMR5_CallBack	;wreg free
 16670                           
 16671                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 16672  005B42  6A26               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 16673  005B44  6A27               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 16674  005B46                     i2l1139:
 16675  005B46  0060  F170  F046   	movff	??_TMR5_ISR,btemp+11
 16676  005B4C  0011               	retfie		f
 16677  005B4E                     __end_of_TMR5_ISR:
 16678                           	opt callstack 0
 16679                           
 16680 ;; *************** function _TMR5_WriteTimer *****************
 16681 ;; Defined at:
 16682 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 16683 ;; Parameters:    Size  Location     Type
 16684 ;;  timerVal        2  [STACK] unsigned short 
 16685 ;; Auto vars:     Size  Location     Type
 16686 ;;		None
 16687 ;; Return value:  Size  Location     Type
 16688 ;;                  1  [STACK] void 
 16689 ;; Registers used:
 16690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16691 ;; Tracked objects:
 16692 ;;		On entry : 3F/39
 16693 ;;		On exit  : 0/0
 16694 ;;		Unchanged: 0/0
 16695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16700 ;;Total ram usage:        0 bytes
 16701 ;; Hardware stack levels used:    1
 16702 ;; This function calls:
 16703 ;;		Nothing
 16704 ;; This function is called by:
 16705 ;;		_TMR5_ISR
 16706 ;; This function uses a reentrant model
 16707 ;;
 16708                           
 16709                           	psect	text108
 16710  0059D6                     __ptext108:
 16711                           	opt callstack 0
 16712  0059D6                     _TMR5_WriteTimer:
 16713                           	opt callstack 18
 16714                           
 16715                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 16716                           
 16717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16718                           ;incstack = 0
 16719  0059D6  A49A               	btfss	16282,2,c	;volatile
 16720  0059D8  D00F               	goto	l4025
 16721                           
 16722                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 16723  0059DA  909A               	bcf	16282,0,c	;volatile
 16724                           
 16725                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 16726                           ;stkvar	_timerVal @ sp[(0)+-2]
 16727  0059DC  0EFF               	movlw	255
 16728  0059DE  24E1               	addwf	fsr1l,w,c
 16729  0059E0  6ED9               	movwf	fsr2l,c
 16730  0059E2  0EFF               	movlw	255
 16731  0059E4  20E2               	addwfc	fsr1h,w,c
 16732  0059E6  6EDA               	movwf	fsr2h,c
 16733  0059E8  50DF               	movf	indf2,w,c
 16734  0059EA  6E99               	movwf	16281,c	;volatile
 16735                           
 16736                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 16737                           ;stkvar	_timerVal @ sp[(0)+-2]
 16738  0059EC  0EFE               	movlw	-2
 16739  0059EE  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16740                           
 16741                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 16742  0059F4  809A               	bsf	16282,0,c	;volatile
 16743                           
 16744                           ;mcc_generated_files/tmr5.c: 141:  } else {
 16745  0059F6  D00C               	goto	l1122
 16746  0059F8                     l4025:
 16747                           
 16748                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 16749                           ;stkvar	_timerVal @ sp[(0)+-2]
 16750  0059F8  0EFF               	movlw	255
 16751  0059FA  24E1               	addwf	fsr1l,w,c
 16752  0059FC  6ED9               	movwf	fsr2l,c
 16753  0059FE  0EFF               	movlw	255
 16754  005A00  20E2               	addwfc	fsr1h,w,c
 16755  005A02  6EDA               	movwf	fsr2h,c
 16756  005A04  50DF               	movf	indf2,w,c
 16757  005A06  6E99               	movwf	16281,c	;volatile
 16758                           
 16759                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 16760                           ;stkvar	_timerVal @ sp[(0)+-2]
 16761  005A08  0EFE               	movlw	-2
 16762  005A0A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16763  005A10                     l1122:
 16764                           
 16765                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 16766  005A10  52E5               	movf	postdec1,f,c
 16767  005A12  52E5               	movf	postdec1,f,c
 16768  005A14  0012               	return		;funcret
 16769  005A16                     __end_of_TMR5_WriteTimer:
 16770                           	opt callstack 0
 16771                           
 16772 ;; *************** function _TMR5_CallBack *****************
 16773 ;; Defined at:
 16774 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 16775 ;; Parameters:    Size  Location     Type
 16776 ;;		None
 16777 ;; Auto vars:     Size  Location     Type
 16778 ;;		None
 16779 ;; Return value:  Size  Location     Type
 16780 ;;                  1  [STACK] void 
 16781 ;; Registers used:
 16782 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 16783 ;; Tracked objects:
 16784 ;;		On entry : 0/39
 16785 ;;		On exit  : 0/0
 16786 ;;		Unchanged: 0/0
 16787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16792 ;;Total ram usage:        0 bytes
 16793 ;; Hardware stack levels used:    1
 16794 ;; Hardware stack levels required when called:    1
 16795 ;; This function calls:
 16796 ;;		Absolute function
 16797 ;;		_TMR5_DefaultInterruptHandler
 16798 ;; This function is called by:
 16799 ;;		_TMR5_ISR
 16800 ;; This function uses a reentrant model
 16801 ;;
 16802                           
 16803                           	psect	text109
 16804  00600E                     __ptext109:
 16805                           	opt callstack 0
 16806  00600E                     _TMR5_CallBack:
 16807                           	opt callstack 17
 16808                           
 16809                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 16810                           
 16811                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16812                           ;incstack = 0
 16813  00600E  0100               	movlb	0	; () banked
 16814  006010  51F0               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16815  006012  11F1               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16816  006014  11F2               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16817  006016  B4D8               	btfsc	status,2,c
 16818  006018  0012               	return	
 16819                           
 16820                           ; BSR set to: 0
 16821                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 16822  00601A  D801               	call	u351_48
 16823  00601C  0012               	return	
 16824  00601E                     u351_48:
 16825  00601E  0005               	push	
 16826  006020  6EFA               	movwf	pclath,c
 16827  006022  51F0               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16828  006024  6EFD               	movwf	tosl,c
 16829  006026  51F1               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16830  006028  6EFE               	movwf	tosh,c
 16831  00602A  51F2               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16832  00602C  6EFF               	movwf	tosu,c
 16833  00602E  50FA               	movf	pclath,w,c
 16834  006030  0012               	return		;indir
 16835  006032                     __end_of_TMR5_CallBack:
 16836                           	opt callstack 0
 16837                           
 16838 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 16839 ;; Defined at:
 16840 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 16841 ;; Parameters:    Size  Location     Type
 16842 ;;		None
 16843 ;; Auto vars:     Size  Location     Type
 16844 ;;		None
 16845 ;; Return value:  Size  Location     Type
 16846 ;;                  1  [STACK] void 
 16847 ;; Registers used:
 16848 ;;		wreg, status,2, status,0, btemp+11
 16849 ;; Tracked objects:
 16850 ;;		On entry : 3F/0
 16851 ;;		On exit  : 0/0
 16852 ;;		Unchanged: 0/0
 16853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16858 ;;Total ram usage:        0 bytes
 16859 ;; Hardware stack levels used:    1
 16860 ;; This function calls:
 16861 ;;		Nothing
 16862 ;; This function is called by:
 16863 ;;		_TMR5_Initialize
 16864 ;;		_TMR5_CallBack
 16865 ;; This function uses a reentrant model
 16866 ;;
 16867                           
 16868                           	psect	text110
 16869  0061C2                     __ptext110:
 16870                           	opt callstack 0
 16871  0061C2                     _TMR5_DefaultInterruptHandler:
 16872                           	opt callstack 17
 16873                           
 16874                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 16875                           
 16876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16877                           ;incstack = 0
 16878  0061C2  A0BE               	btfss	16318,0,c	;volatile
 16879  0061C4  D002               	goto	u330_40
 16880  0061C6  0E01               	movlw	1
 16881  0061C8  D001               	goto	u330_46
 16882  0061CA                     u330_40:
 16883  0061CA  0E00               	movlw	0
 16884  0061CC                     u330_46:
 16885  0061CC  0AFF               	xorlw	255
 16886  0061CE  6E46               	movwf	btemp+11,c
 16887  0061D0  50BE               	movf	16318,w,c	;volatile
 16888  0061D2  1846               	xorwf	btemp+11,w,c
 16889  0061D4  0BFE               	andlw	-2
 16890  0061D6  1846               	xorwf	btemp+11,w,c
 16891  0061D8  6EBE               	movwf	16318,c	;volatile
 16892                           
 16893                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16894  0061DA  0012               	return		;funcret
 16895  0061DC                     __end_of_TMR5_DefaultInterruptHandler:
 16896                           	opt callstack 0
 16897                           
 16898                           ;
 16899                           ; Interrupt Vector Table @ 0x8
 16900                           ;
 16901                           
 16902                           	psect	ivt0x8
 16903  000008                     __pivt0x8:
 16904                           	opt callstack 0
 16905  000008                     ivt0x8_base:
 16906                           	opt callstack 0
 16907                           
 16908                           ; Vector 0 : SWINT
 16909  000008  18B1               	dw	_Default_ISR shr (0+2)
 16910                           
 16911                           ; Vector 1 : HLVD
 16912  00000A  18B1               	dw	_Default_ISR shr (0+2)
 16913                           
 16914                           ; Vector 2 : OSF
 16915  00000C  18B1               	dw	_Default_ISR shr (0+2)
 16916                           
 16917                           ; Vector 3 : CSW
 16918  00000E  18B1               	dw	_Default_ISR shr (0+2)
 16919                           
 16920                           ; Vector 4 : NVM
 16921  000010  18B1               	dw	_Default_ISR shr (0+2)
 16922                           
 16923                           ; Vector 5 : SCAN
 16924  000012  18B1               	dw	_Default_ISR shr (0+2)
 16925                           
 16926                           ; Vector 6 : CRC
 16927  000014  18B1               	dw	_Default_ISR shr (0+2)
 16928                           
 16929                           ; Vector 7 : IOC
 16930  000016  18B1               	dw	_Default_ISR shr (0+2)
 16931                           
 16932                           ; Vector 8 : INT0
 16933  000018  188B               	dw	_INT0_ISR shr (0+2)
 16934                           
 16935                           ; Vector 9 : ZCD
 16936  00001A  18B1               	dw	_Default_ISR shr (0+2)
 16937                           
 16938                           ; Vector 10 : AD
 16939  00001C  173C               	dw	_ADCC_ISR shr (0+2)
 16940                           
 16941                           ; Vector 11 : ADT
 16942  00001E  18B1               	dw	_Default_ISR shr (0+2)
 16943                           
 16944                           ; Vector 12 : CMP1
 16945  000020  18B1               	dw	_Default_ISR shr (0+2)
 16946                           
 16947                           ; Vector 13 : SMT1
 16948  000022  18B1               	dw	_Default_ISR shr (0+2)
 16949                           
 16950                           ; Vector 14 : SMT1PRA
 16951  000024  18B1               	dw	_Default_ISR shr (0+2)
 16952                           
 16953                           ; Vector 15 : SMT1PRW
 16954  000026  18B1               	dw	_Default_ISR shr (0+2)
 16955                           
 16956                           ; Vector 16 : DMA1SCNT
 16957  000028  1897               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 16958                           
 16959                           ; Vector 17 : DMA1DCNT
 16960  00002A  189D               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 16961                           
 16962                           ; Vector 18 : DMA1OR
 16963  00002C  18A3               	dw	_DMA1_DMAOR_ISR shr (0+2)
 16964                           
 16965                           ; Vector 19 : DMA1A
 16966  00002E  18A0               	dw	_DMA1_DMAA_ISR shr (0+2)
 16967                           
 16968                           ; Vector 20 : SPI1RX
 16969  000030  18B1               	dw	_Default_ISR shr (0+2)
 16970                           
 16971                           ; Vector 21 : SPI1TX
 16972  000032  18B1               	dw	_Default_ISR shr (0+2)
 16973                           
 16974                           ; Vector 22 : SPI1
 16975  000034  18B1               	dw	_Default_ISR shr (0+2)
 16976                           
 16977                           ; Vector 23 : I2C1RX
 16978  000036  18B1               	dw	_Default_ISR shr (0+2)
 16979                           
 16980                           ; Vector 24 : I2C1TX
 16981  000038  18B1               	dw	_Default_ISR shr (0+2)
 16982                           
 16983                           ; Vector 25 : I2C1
 16984  00003A  18B1               	dw	_Default_ISR shr (0+2)
 16985                           
 16986                           ; Vector 26 : I2C1E
 16987  00003C  18B1               	dw	_Default_ISR shr (0+2)
 16988                           
 16989                           ; Vector 27 : U1RX
 16990  00003E  17DD               	dw	_UART1_rx_vect_isr shr (0+2)
 16991                           
 16992                           ; Vector 28 : U1TX
 16993  000040  17D3               	dw	_UART1_tx_vect_isr shr (0+2)
 16994                           
 16995                           ; Vector 29 : U1E
 16996  000042  18B1               	dw	_Default_ISR shr (0+2)
 16997                           
 16998                           ; Vector 30 : U1
 16999  000044  18B1               	dw	_Default_ISR shr (0+2)
 17000                           
 17001                           ; Vector 31 : TMR0
 17002  000046  18B1               	dw	_Default_ISR shr (0+2)
 17003                           
 17004                           ; Vector 32 : TMR1
 17005  000048  18B1               	dw	_Default_ISR shr (0+2)
 17006                           
 17007                           ; Vector 33 : TMR1G
 17008  00004A  18B1               	dw	_Default_ISR shr (0+2)
 17009                           
 17010                           ; Vector 34 : TMR2
 17011  00004C  18B1               	dw	_Default_ISR shr (0+2)
 17012                           
 17013                           ; Vector 35 : CCP1
 17014  00004E  18B1               	dw	_Default_ISR shr (0+2)
 17015                           
 17016                           ; Vector 36 : Undefined
 17017  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17018                           
 17019                           ; Vector 37 : NCO1
 17020  000052  18B1               	dw	_Default_ISR shr (0+2)
 17021                           
 17022                           ; Vector 38 : CWG1
 17023  000054  18B1               	dw	_Default_ISR shr (0+2)
 17024                           
 17025                           ; Vector 39 : CLC1
 17026  000056  18B1               	dw	_Default_ISR shr (0+2)
 17027                           
 17028                           ; Vector 40 : INT1
 17029  000058  188F               	dw	_INT1_ISR shr (0+2)
 17030                           
 17031                           ; Vector 41 : CMP2
 17032  00005A  18B1               	dw	_Default_ISR shr (0+2)
 17033                           
 17034                           ; Vector 42 : DMA2SCNT
 17035  00005C  18B1               	dw	_Default_ISR shr (0+2)
 17036                           
 17037                           ; Vector 43 : DMA2DCNT
 17038  00005E  18B1               	dw	_Default_ISR shr (0+2)
 17039                           
 17040                           ; Vector 44 : DMA2OR
 17041  000060  18B1               	dw	_Default_ISR shr (0+2)
 17042                           
 17043                           ; Vector 45 : DMA2A
 17044  000062  18B1               	dw	_Default_ISR shr (0+2)
 17045                           
 17046                           ; Vector 46 : I2C2RX
 17047  000064  18B1               	dw	_Default_ISR shr (0+2)
 17048                           
 17049                           ; Vector 47 : I2C2TX
 17050  000066  18B1               	dw	_Default_ISR shr (0+2)
 17051                           
 17052                           ; Vector 48 : I2C2
 17053  000068  18B1               	dw	_Default_ISR shr (0+2)
 17054                           
 17055                           ; Vector 49 : I2C2E
 17056  00006A  18B1               	dw	_Default_ISR shr (0+2)
 17057                           
 17058                           ; Vector 50 : U2RX
 17059  00006C  17F1               	dw	_UART2_rx_vect_isr shr (0+2)
 17060                           
 17061                           ; Vector 51 : U2TX
 17062  00006E  17E7               	dw	_UART2_tx_vect_isr shr (0+2)
 17063                           
 17064                           ; Vector 52 : U2E
 17065  000070  18B1               	dw	_Default_ISR shr (0+2)
 17066                           
 17067                           ; Vector 53 : U2
 17068  000072  18B1               	dw	_Default_ISR shr (0+2)
 17069                           
 17070                           ; Vector 54 : TMR3
 17071  000074  18B1               	dw	_Default_ISR shr (0+2)
 17072                           
 17073                           ; Vector 55 : TMR3G
 17074  000076  18B1               	dw	_Default_ISR shr (0+2)
 17075                           
 17076                           ; Vector 56 : TMR4
 17077  000078  18B1               	dw	_Default_ISR shr (0+2)
 17078                           
 17079                           ; Vector 57 : CCP2
 17080  00007A  18B1               	dw	_Default_ISR shr (0+2)
 17081                           
 17082                           ; Vector 58 : Undefined
 17083  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17084                           
 17085                           ; Vector 59 : CWG2
 17086  00007E  18B1               	dw	_Default_ISR shr (0+2)
 17087                           
 17088                           ; Vector 60 : CLC2
 17089  000080  18B1               	dw	_Default_ISR shr (0+2)
 17090                           
 17091                           ; Vector 61 : INT2
 17092  000082  1893               	dw	_INT2_ISR shr (0+2)
 17093                           
 17094                           ; Vector 62 : Undefined
 17095  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17096                           
 17097                           ; Vector 63 : Undefined
 17098  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17099                           
 17100                           ; Vector 64 : Undefined
 17101  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17102                           
 17103                           ; Vector 65 : Undefined
 17104  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17105                           
 17106                           ; Vector 66 : Undefined
 17107  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17108                           
 17109                           ; Vector 67 : Undefined
 17110  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17111                           
 17112                           ; Vector 68 : Undefined
 17113  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17114                           
 17115                           ; Vector 69 : Undefined
 17116  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17117                           
 17118                           ; Vector 70 : TMR5
 17119  000094  16C4               	dw	_TMR5_ISR shr (0+2)
 17120                           
 17121                           ; Vector 71 : TMR5G
 17122  000096  18B1               	dw	_Default_ISR shr (0+2)
 17123                           
 17124                           ; Vector 72 : TMR6
 17125  000098  186A               	dw	_TMR6_ISR shr (0+2)
 17126                           
 17127                           ; Vector 73 : CCP3
 17128  00009A  18B1               	dw	_Default_ISR shr (0+2)
 17129                           
 17130                           ; Vector 74 : CWG3
 17131  00009C  18B1               	dw	_Default_ISR shr (0+2)
 17132                           
 17133                           ; Vector 75 : CLC3
 17134  00009E  18B1               	dw	_Default_ISR shr (0+2)
 17135                           
 17136                           ; Vector 76 : Undefined
 17137  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17138                           
 17139                           ; Vector 77 : Undefined
 17140  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17141                           
 17142                           ; Vector 78 : Undefined
 17143  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17144                           
 17145                           ; Vector 79 : Undefined
 17146  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17147                           
 17148                           ; Vector 80 : CCP4
 17149  0000A8  18B1               	dw	_Default_ISR shr (0+2)
 17150                           
 17151                           ; Vector 81 : CLC4
 17152  0000AA  18B1               	dw	_Default_ISR shr (0+2)
 17153  0000AC                     ivt0x8_undefint:
 17154                           	opt callstack 0
 17155  0000AC  00FF               	reset	
 17156                           
 17157                           	psect	text111
 17158  000000                     __ptext111:
 17159                           	opt callstack 0
 17160                           
 17161                           	psect	rparam
 17162  0000                     
 17163                           	psect	temp
 17164  00003B                     btemp:
 17165                           	opt callstack 0
 17166  00003B                     	ds	32
 17167  0000                     wtemp0	set	btemp
 17168  0000                     wtemp1	set	btemp+2
 17169  0000                     wtemp2	set	btemp+4
 17170  0000                     wtemp3	set	btemp+6
 17171  0000                     wtemp4	set	btemp+8
 17172  0000                     wtemp5	set	btemp+10
 17173  0000                     wtemp8	set	btemp+1
 17174  0000                     ttemp0	set	btemp
 17175  0000                     ttemp1	set	btemp+3
 17176  0000                     ttemp2	set	btemp+6
 17177  0000                     ttemp3	set	btemp+9
 17178  0000                     ttemp5	set	btemp+1
 17179  0000                     ttemp6	set	btemp+4
 17180  0000                     ttemp7	set	btemp+8
 17181  0000                     ltemp0	set	btemp
 17182  0000                     ltemp1	set	btemp+4
 17183  0000                     ltemp2	set	btemp+8
 17184  0000                     lltemp0	set	btemp
 17185  0000                     lltemp1	set	btemp+8
 17186  0000                     lltemp2	set	btemp+16
 17187  0000                     lltemp3	set	btemp+24
 17188                           tosu	equ	0x3FFF
 17189                           tosh	equ	0x3FFE
 17190                           tosl	equ	0x3FFD
 17191                           stkptr	equ	0x3FFC
 17192                           pclatu	equ	0x3FFB
 17193                           pclath	equ	0x3FFA
 17194                           pcl	equ	0x3FF9
 17195                           tblptru	equ	0x3FF8
 17196                           tblptrh	equ	0x3FF7
 17197                           tblptrl	equ	0x3FF6
 17198                           tablat	equ	0x3FF5
 17199                           prodh	equ	0x3FF4
 17200                           prodl	equ	0x3FF3
 17201                           indf0	equ	0x3FEF
 17202                           postinc0	equ	0x3FEE
 17203                           postdec0	equ	0x3FED
 17204                           preinc0	equ	0x3FEC
 17205                           plusw0	equ	0x3FEB
 17206                           fsr0h	equ	0x3FEA
 17207                           fsr0l	equ	0x3FE9
 17208                           wreg	equ	0x3FE8
 17209                           indf1	equ	0x3FE7
 17210                           postinc1	equ	0x3FE6
 17211                           postdec1	equ	0x3FE5
 17212                           preinc1	equ	0x3FE4
 17213                           plusw1	equ	0x3FE3
 17214                           fsr1h	equ	0x3FE2
 17215                           fsr1l	equ	0x3FE1
 17216                           bsr	equ	0x3FE0
 17217                           indf2	equ	0x3FDF
 17218                           postinc2	equ	0x3FDE
 17219                           postdec2	equ	0x3FDD
 17220                           preinc2	equ	0x3FDC
 17221                           plusw2	equ	0x3FDB
 17222                           fsr2h	equ	0x3FDA
 17223                           fsr2l	equ	0x3FD9
 17224                           status	equ	0x3FD8


Data Sizes:
    Strings     181
    Constant    0
    Data        358
    BSS         538
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      61
    BANK0           160      0     154
    BANK1           256      0     237
    BANK2           256      0     256
    BANK3           256      0     190
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 89
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[89]), 

    a	PTR const unsigned char  size(2) Largest target is 89
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[89]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_15(CODE[21]), STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), 
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4334_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[89]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[89]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[89]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16623.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16623.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H27(BANK1[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H27(BANK1[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    t_link	PTR enum E16164 size(1) Largest target is 89
		 -> V(BANK0[89]), 

    S3659response_type$reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16611.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    S3659response_type$header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    F16611.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    r_link	PTR enum E16164 size(1) Largest target is 89
		 -> V(BANK0[89]), 

    m_link	PTR enum E16164 size(1) Largest target is 89
		 -> V(BANK0[89]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H27(BANK1[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    strPtr	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1986spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1986spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   44450
                  _SYSTEM_Initialize
                   _UART1_put_buffer
                   _UART2_put_buffer
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    2066
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    1990
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                          _secs_send
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1    2227
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1188
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     179
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0     130
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0     130
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0     130
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_put_buffer
   _UART2_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      BE      11       74.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     382      58        0.0%
DATA                 0      0     382       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 14 13:50:47 2019

                    _SPI1_Exchange8bit 611C                                      _V 0067  
     __end_of_TMR5_SetInterruptHandler 5EAA              __end_of_UART2_is_rx_ready 62AE  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 629E                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 015F  
                                  _H13 01BD                                    _H14 01AC  
                                  _H24 017D                                    _H17 0198  
                                  _H27 0141                                    _H53 0386  
                                  l194 6202                                    l572 5AFA  
                                  l717 5C6C                                    l851 612A  
                                  l579 5A6A                                    l692 5ABC  
                                  l597 5C40                                    l699 5A2C  
                                  _GIE 01FE97                                    u980 55A6  
                                  u998 55A8                                    _abs 58C2  
                                  _pad 4A1A                __size_of_PMD_Initialize 0014  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 6076                           _run_checksum 5BC2  
                   _UART1_Transmit_ISR 5C1A                          __CFG_BBEN$OFF 000000  
                        _INT1_CallBack 6098                           __CFG_ZCD$OFF 000000  
                                 l1122 5A10                                   l1226 20F0  
                                 l1332 578E                                   l1252 231A  
                                 l1236 21A0                                   l1270 2538  
                                 l1254 231E                                   l1247 22B0  
                                 l1271 2564                                   l1266 24EA  
                                 l1258 23F0                                   l1464 50FE  
                                 l2600 4A10                                   l4025 59F8  
                                 l1609 340A                                   l1468 549E  
                                 l1660 3DFE                                   l1805 302E  
                                 l1646 3C84                                   l1832 3AAC  
                                 l1681 43FE                                   l2546 5902  
                                 l1851 2F46                                   l6011 5A94  
                                 l6111 5BD0                                   l2568 4C30  
                                 l1785 4A76                                   l5315 512C  
                                 l6203 4476                                   l5317 514E  
                                 l5421 4730                                   l5413 46A8  
                                 l6303 45E6                                   l6049 5CDC  
                                 l6217 44B0                                   l6411 5C3C  
                                 l6227 44D2                                   l6315 4600  
                                 l6421 60F8                                   l5381 401C  
                                 l5429 47DC                                   l5357 58F2  
                                 l6229 44F8                                   l6317 4632  
                                 l5375 3FD6                                   l8031 5294  
                                 l6247 451C                                   l6183 441A  
                                 l6433 5C68                                   l5393 40EE  
                                 l5369 3F82                                   l5801 5C94  
                                 l6265 4554                                   l6249 4536  
                                 l6443 6118                                   l5581 48EE  
                                 l8061 42DA                                   l8053 422A  
                                 l6277 456E                                   l6197 4458  
                                 l5751 5A8A                                   l8303 35EA  
                                 l8223 33D4                                   l6279 45AC  
                                 l5585 491E                                   l5753 5A8C  
                                 l8073 432E                                   l8065 42F4  
                                 l8091 43B0                                   l8083 4376  
                                 l8075 4356                                   l8323 366A  
                                 l5677 57A0                                   l5765 5CBE  
                                 l8093 43D8                                   l8325 366E  
                                 l8253 3496                                   l8245 3466  
                                 l8421 3E52                                   l8413 3E34  
                                 l5855 604C                                   l8079 435C  
                                 l8503 26C4                                   l8319 3654  
                                 l8271 34F4                                   l8255 34A2  
                                 l8335 3682                                   l7641 4B5E  
                                 l7721 3086                                   l7801 3C04  
                                 l8601 2986                                   l8329 367A  
                                 l8337 36C4                                   l8441 3EAE  
                                 l8409 3E1E                                   l8417 3E3C  
                                 l8361 3CC6                                   l7651 538C  
                                 l7731 3298                                   l5787 5A4C  
                                 l8099 43DE                                   l8611 29AA  
                                 l8531 2760                                   l8515 270E  
                                 l8291 35C2                                   l8283 3574  
                                 l8275 3518                                   l8267 34D6  
                                 l8443 3EB6                                   l8427 3E6E  
                                 l8371 3D08                                   l8451 3F0E  
                                 l7661 4A46                                   l7717 3068  
                                 l7709 301E                                   l7805 3C40  
                                 l7901 376E                                   l5789 5A4E  
                                 l8509 26E6                                   l8293 35C6  
                                 l8445 3EBE                                   l8437 3E9C  
                                 l8381 3D4A                                   l7655 53CA  
                                 l7671 4ABC                                   l7751 334A  
                                 l8631 2A22                                   l8551 282E  
                                 l8543 27E0                                   l8535 2784  
                                 l8527 2742                                   l8463 25D2  
                                 l8279 3544                                   l8439 3EAA  
                                 l8391 3D94                                   l7665 4A6E  
                                 l7841 2CB6                                   l7921 3944  
                                 l7913 3896                                   l8641 2A40  
                                 l8633 2A26                                   l8553 2832  
                                 l8385 3D62                                   l8369 3CF6  
                                 l8449 3ECC                                   l8721 220C  
                                 l7675 4B06                                   l7667 4A80  
                                 l7683 54C4                                   l7755 3386  
                                 l7907 382C                                   l5987 5AD2  
                                 l8635 2A2E                                   l8539 27B0  
                                 l8563 2862                                   l8387 3D6E  
                                 l8811 2440                                   l7685 54F0  
                                 l7853 2DDC                                   l7837 2C64  
                                 l7829 2B80                                   l7933 52FE  
                                 l8637 2A32                                   l8629 2A14  
                                 l8493 2676                                   l8645 2A4E  
                                 l8741 227C                                   l8717 21F6  
                                 l7791 3B4E                                   l7783 3AE2  
                                 l7767 3A2E                                   l7863 2E84  
                                 l7935 5340                                   l8639 2A3A  
                                 l8591 2934                                   l8583 28D8  
                                 l8575 2896                                   l8647 2A90  
                                 l8479 262A                                   l8399 3DD0  
                                 l8823 24AC                                   l7873 2EDC  
                                 l7961 4DB0                                   l8809 2436  
                                 l8745 228C                                   l8673 20D2  
                                 l7787 3B1E                                   l8587 2904  
                                 l8579 28B4                                   l8499 26A2  
                                 l8827 24BC                                   l8763 22EC  
                                 l8739 2278                                   l8675 20DA  
                                 l7797 3BD8                                   l7869 2ED8  
                                 l7957 4D3E                                   l8861 25CA  
                                 l8837 24EE                                   l8781 236C  
                                 l8749 22A4                                   l8677 20F6  
                                 l7879 2EF8                                   l8599 2982  
                                 l8839 251A                                   l8767 2302  
                                 l8783 239E                                   l7993 597E  
                                 l8849 253C                                   l7989 5954  
                                 l8789 23D6                                   STR_1 2061  
                                 STR_2 208F                                   STR_3 20A7  
                                 STR_4 2072                                   STR_5 203D  
                                 STR_6 2081                                   STR_7 20A1  
                                 STR_8 209B                                   STR_9 2016  
                                 u1005 55DA                                   u1006 55DC  
                                 _LATA 003FBA                                   _LATB 003FBB  
                                 _LATC 003FBC                                   u2320 517C  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 u2410 3F7C                                   _LATF 003FBF  
                                 u2500 4178                                   u2430 3FD2  
                                 u2327 516E                                   u2441 3FDC  
                                 u2450 4016                                   u2610 4866  
                                 u2530 46A2                                   u2460 4048  
                                 u2550 46F8                                   u2390 58D6  
                                 u2480 4126                                   u2560 472A  
                                 u2570 475C                                   u4420 4B52  
                                 u5205 3624                                   u2590 4814  
                                 u5215 3634                                   u5207 3628  
                                 u4440 4BCE                                   u4600 32AC  
                                 u4520 2F80                                   u5217 3638  
                                 u4530 2F82                                   _T6PR 003F93  
                                 u4611 32DC                                   u4620 32F2  
                                 _PMD0 0039C0                                   u4621 32F0  
                                 _PMD1 0039C1                                   u4630 3306  
                                 u4550 2FF2                                   u2950 49C6  
                                 _PMD2 0039C2                                   _PMD3 0039C3  
                                 u4640 330A                                   _PMD4 0039C4  
                                 _PMD5 0039C5                                   u4570 3004  
                                 u4730 3B44                                   u4810 2BD0  
                                 _PMD6 0039C6                                   u5195 3614  
                                 u5291 3D88                                   _PMD7 0039C7  
                                 u4660 3320                                   u4740 3B8A  
                                 u4900 39B8                                   u5197 3618  
                                 u4590 3054                                   u4830 2D0E  
                                 u4770 3C66                                   u4747 3B7C  
                                 u5635 29E0                                   u5740 2286  
                                 u5645 29F0                                   u5637 29E4  
                                 u5655 2A00                                   u5647 29F4  
                                 u4960 5284                                   u5657 2A04  
                                 u4970 4224                                   u5780 22BC  
                                 u5786 22BE                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 60BA                       __end_of_ADCC_ISR 5D1A  
                        __CFG_FCMEN$ON 000000                                   _dbuf 01CD  
                                 _ctoa 54A6                                   _main 20B8  
                                 _dtoa 2F50                                   _prec 0022  
                                 _nout 00F6                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 39C2                                   btemp 003B  
    __size_of_INT2_SetInterruptHandler 0028                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0028  
            __end_of_SPI1_Exchange8bit 613A                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 5F74                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005B  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 623A  
                     __end_of_INT1_ISR 624A                       __end_of_INT2_ISR 625A  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 5106  
        __end_of_OSCILLATOR_Initialize 6208                                  PRLOCK 0039EF  
                      __end_of___aodiv 41A0                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 488A                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 203D  
                                STR_11 202A                                  STR_12 2050  
                                STR_13 209B                                  STR_21 20AD  
                                STR_14 202A                                  STR_23 20B0  
                                STR_15 2001                                  STR_16 2098  
                                STR_25 20B0                                  STR_17 20B3  
                        __CFG_WDTE$OFF 000000                                  STR_19 20AD  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005B  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 62C4      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 5F4C                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 5B4E                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 61C2                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 002C                                  _flags 0024  
                                _fputc 4B2E             __size_of_send_lcd_cmd_long 0028  
                                _fputs 537C                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005B                                  _width 0020  
                                _putch 618E               _INT1_SetInterruptHandler 5ED2  
                                pclath 003FFA                                  tablat 003FF5  
              __size_of_DSM_Initialize 001C                                  ltemp0 003B  
                                ltemp1 003F                                  ltemp2 0043  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 003B  
                                ttemp1 003E                                  ttemp2 0041  
                                ttemp3 0044                                  ttemp5 003C  
                                ttemp6 003F                                  ttemp7 0043  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 5E32  
          _UART1_SetRxInterruptHandler 5E0A                                  wtemp0 003B  
                                wtemp1 003D                                  wtemp2 003F  
                                wtemp3 0041                                  wtemp4 0043  
                                wtemp5 0045                                  wtemp8 003C  
                      __end_of_sprintf 505C                        __end_of_strncmp 4A1A  
                  ??_UART1_tx_vect_isr 005B              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 5F9A               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 5908                  __end_of_ringBufS_init 5D92  
                      __initialization 4DF6                      _UART2_rx_vect_isr 5FC4  
                         __end_of_ctoa 552E                           __end_of_main 25CE  
                         __end_of_dtoa 33D0                           __end_of_stoa 3C80  
           __size_of_UART2_is_rx_ready 0008                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 005B             __size_of_UART2_is_tx_ready 0008  
             _TMR5_SetInterruptHandler 5E82                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005B              __end_of_UART1_tx_vect_isr 5F72  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 5E32  
                     _UART1_Initialize 55FE                      _UART2_tx_vect_isr 5F9C  
                   _UART2_Transmit_ISR 5C46                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005B  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                    __size_of_UART2_Read 003E  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 u121_48 6084  
                               i2l1139 5B46                         __CFG_WDTCCS$SC 000000  
                               u123_48 60A6                                 u125_48 60C8  
                               u330_40 61CA                                 u330_46 61CC  
                               _SCANPR 0039F7                                 u351_48 601E  
                               u505_48 5FFA                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 582C                    ??_UART2_tx_vect_isr 005B  
            __end_of_UART2_rx_vect_isr 5FEA             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 626A                       _UART2_Initialize 5724  
                               _WaitMs 5CC6   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 5414  
                               _memset 36D6                                 clear_0 4E76  
                               clear_1 4E84                                 clear_2 4E96  
                               clear_3 4EA2                                 clear_4 4EAE  
                               _printf 5662                     _eaDogM_WriteString 5248  
                            ?_ADCC_ISR 005B                                 _strlen 5106  
                   __size_of_TimerDone 0022                        _ADCC_Initialize 5878  
                       _PMD_Initialize 6208   __end_of_INT2_DefaultInterruptHandler 62D0  
__size_of_INT2_DefaultInterruptHandler 0002           _INT2_DefaultInterruptHandler 62CE  
                         __pdataCOMRAM 005D              __end_of_UART2_tx_vect_isr 5FC2  
                               lltemp0 003B                                 lltemp1 0043  
                               lltemp2 004B                                 lltemp3 0053  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 57DE                       __end_of_vfprintf 537C  
                           _StartTimer 5B4E                        _CLC1_Initialize 6054  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 594E  
                    _SYSTEM_Initialize 5994                             __accesstop 0060  
              __end_of__initialization 4EC0                              ?_INT0_ISR 005B  
                            ?_INT1_ISR 005B                              ?_INT2_ISR 005B  
            __end_of_CLKREF_Initialize 6274                          ___rparam_used 000001  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 59D6  
               __end_of_ringBufS_flush 54A6                         __pcstackCOMRAM 005B  
                           ___inthi_sp 0D2A                           __pidataBANK0 56C4  
                         __pidataBANK1 4EC6                           __pidataBANK3 5B8A  
                            ?_TMR5_ISR 005B                              ?_TMR6_ISR 005B  
                       ivt0x8_undefint 00AC                          __end_of_fputc 4C3A  
                        __end_of_fputs 5414                  __end_of_TMR5_CallBack 6032  
                        __end_of_putch 61A8                __end_of_TMR6_Initialize 5E5A  
               __end_of_PMD_Initialize 621C                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005B                  __end_of_TMR6_CallBack 600E  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 6280       __end_of_INT2_SetInterruptHandler 5ED2  
             _UART2_RxInterruptHandler 0014              __end_of_SYSTEM_Initialize 59D6  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 6172                             __pbssBANK0 00C0  
                           __pbssBANK1 01CD                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001D  
                           ??_INT0_ISR 005B                             ??_INT1_ISR 005B  
                           ??_INT2_ISR 005B                      __end_of_TimerDone 6054  
                     _DMA1_DMADCNT_ISR 6274              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 6156                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 5E82                __end_of_ADCC_Initialize 58C2  
                           ??_TMR5_ISR 005C                             ??_TMR6_ISR 005B  
                   __size_of_secs_send 0268                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 60DC  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005B  
                     _DMA1_DMASCNT_ISR 625C                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 6076                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005B  
                 __size_of_UART1_Write 003E              __size_of_UART2_put_buffer 002A  
           __size_of_UART2_tx_vect_isr 0026                   __size_of_UART2_Write 003E  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 04AE  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 618E                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 5A16                     __end_of_UART1_Read 5B0E  
                   __end_of_UART2_Read 5AD0      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 5662                        __size_of_WaitMs 002A  
                              ___aodiv 3F20                                ___aomod 464A  
                           _m_protocol 25CE              __end_of_UART1_Receive_ISR 60FC  
                         __psmallconst 2000                   __end_of_init_display 4D24  
                              __pcinit 4DF6                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 621C                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 20B8                                __ptext1 3C80  
                              __ptext2 4408                                __ptext3 4F94  
                              __ptext4 33D0                                __ptext5 25CE  
                              __ptext6 41A0                                __ptext7 4D24  
                              __ptext8 5C72                                __ptext9 6296  
                    _UART2_Receive_ISR 60FC                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us251999 418A                                us341999 463C  
                              us262999 4878                                us451999 2F6A  
                _OSCILLATOR_Initialize 61F2                           __size_of_abs 0046  
                              _r_block 00C0                                us468999 39D4  
                         __size_of_pad 0114                                _mode_sw 002E  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 5782                     m_protocol@rxData_l 002D  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 4F94  
                              _strncmp 488A                   end_of_initialization 4EC0  
                    __end_of_secs_send 4408               _INT2_SetInterruptHandler 5EAA  
             __size_of_secs_II_message 0242                             _r_protocol 33D0  
  __end_of_UART1_SetTxInterruptHandler 5E0A            _UART1_SetTxInterruptHandler 5DE2  
  __end_of_UART2_SetRxInterruptHandler 5DE2            _UART2_SetRxInterruptHandler 5DBA  
                           _t_protocol 3C80                      __end_of_vfpfcnvrt 2F50  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 62C2  
            __end_of_UART2_Receive_ISR 611C                         wdtdelay@dcount 00EC  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005C  
                       _block_checksum 4D24                  _INT1_InterruptHandler 001A  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 5E5A  
                _TMR5_InterruptHandler 00F0   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002A    __end_of_ADCC_SetADIInterruptHandler 5F4A  
          _ADCC_SetADIInterruptHandler 5F22                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 552E  
                      _SPI1_Initialize 61DC                       _UART1_put_buffer 5C9C  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                         __end_of_WaitMs 5CF0  
         __end_of_INTERRUPT_Initialize 55FE                 __end_of_block_checksum 4DF6  
 __end_of_INT0_DefaultInterruptHandler 62CC  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 62CA             __size_of_UART1_Receive_ISR 0020  
                        __pidataCOMRAM 62D2                      __size_of_TMR5_ISR 003E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 39C2                         __end_of_printf 56C4  
             __end_of_DMA1_DMADCNT_ISR 627E                       _UART2_put_buffer 5C72  
                __end_of_INT0_CallBack 6098                         __end_of_strlen 51A8  
                  start_initialization 4DF6   __end_of_TMR5_DefaultInterruptHandler 61DC  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 61C2  
      __size_of_PIN_MANAGER_Initialize 00A0                            __end_of_abs 5908  
                __end_of_INT1_CallBack 60BA                            __end_of_pad 4B2E  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 5D6A  
                           ivt0x8_base 0008                  __end_of_INT2_CallBack 60DC  
                 secs_II_message@block 0001                          _uart1RxBuffer 0280  
                        _uart1TxBuffer 02C0                          _uart2RxBuffer 0200  
             __end_of_DMA1_DMASCNT_ISR 626A                          _uart2TxBuffer 0240  
                       _DMA1_DMAOR_ISR 628C                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 009C  
                            _TimerDone 6032                          _ringBufS_init 5D6A  
                          _MD1CON0bits 003CFA                            _MD1CON1bits 003CFB  
                          __pdataBANK0 0060                            __pdataBANK1 0100  
                          __pdataBANK3 0386             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 5878                        run_checksum@sum 00F8  
      __end_of_eaDogM_WriteStringAtPos 5C1A                __end_of_DMA1_Initialize 5598  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 5F22  
              __end_of_SPI1_Initialize 61F2               _UART1_RxInterruptHandler 000E  
             _UART2_TxInterruptHandler 0011                    __size_of_m_protocol 04D4  
            __size_of_ringBufS_put_dma 00AA                           _init_display 4C3A  
               __end_of_DMA1_DMAOR_ISR 6296                 __size_of_TMR5_CallBack 0024  
                _INT2_InterruptHandler 0017                  _TMR6_InterruptHandler 00F3  
               __size_of_TMR6_CallBack 0024                 _PIN_MANAGER_Initialize 51A8  
                 __end_of_wait_lcd_set 62BC                              __ptext100 61A8  
                            __ptext101 5FEA                              __ptext110 61C2  
                            __ptext102 594E                              __ptext111 0000  
                            __ptext103 625C                              __ptext104 6274  
                            __ptext105 6280                              __ptext106 628C  
                            __ptext107 5B10                              __ptext108 59D6  
                            __ptext109 600E                     __end_of_StartTimer 5B8A  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0098  
                             _ADCC_ISR 5CF0                    __size_of_r_protocol 0306  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 02A0  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 0098                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 5598  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005B                               _INT0_ISR 622C  
                             _INT1_ISR 623C                               _INT2_ISR 624C  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 41A0                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 00D9                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _PIE7bits 003997                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                               i2u200_48 5D06  
                            _ring_buf1 0343                              _ring_buf2 0300  
                             i2u422_40 5B3E                               i2u421_48 5FD6  
                             i2u415_48 5F5E                               _PIR1bits 0039A1  
                             i2u417_48 5F86                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u419_48 5FAE  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               _PIR5bits 0039A5  
                             _PIR7bits 0039A7                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 5C46                               _TMR5_ISR 5B10  
                             _TMR6_ISR 61A8                              _vfpfcnvrt 2AA2  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 600E  
                            _start_lcd 62BC              __size_of_send_lcd_cmd_dma 004E  
                        _TMR6_CallBack 5FEA               __end_of_UART1_put_buffer 5CC6  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 5A92                    __end_of_UART2_Write 5A54  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 4E0A                              copy_data1 4E2C  
                            copy_data2 4E4E               _INT0_SetInterruptHandler 5EFA  
               _uart1TxBufferRemaining 0038    __end_of_UART2_SetTxInterruptHandler 5DBA  
          _UART2_SetTxInterruptHandler 5D92                           _uart1RxCount 0035  
             __end_of_UART2_put_buffer 5C9C                           _uart2RxCount 002F  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 002C  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 5BEE  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 613A                           _send_lcd_cmd 5D42  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 6156                  __end_of_DMA1_DMAA_ISR 628A  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 005B  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 622A  
                             __pivt0x8 0008                     ??_DMA1_DMADCNT_ISR 005C  
                             __ptext10 5A16                               __ptext11 5C9C  
                             __ptext20 62AE                               __ptext12 629E  
                             __ptext21 5AD0                               __ptext13 5A54  
                             __ptext30 57DE                               __ptext22 4C3A  
                             __ptext14 5BC2                               __ptext31 62B6  
                             __ptext23 5D1A                               __ptext15 5CC6  
                             __ptext40 488A                               __ptext32 613A  
                             __ptext24 5D42                               __ptext16 6032  
                             __ptext41 39C2                               __ptext33 5782  
                             __ptext25 611C                               __ptext17 5B4E  
                             __ptext50 4B2E                               __ptext42 2F50  
                             __ptext34 62BC                               __ptext26 5D6A  
                             __ptext18 62A6                               __ptext51 618E  
                             __ptext43 58C2                               __ptext35 5414  
                             __ptext27 5BEE                               __ptext19 5A92  
                             __ptext60 5E32                               __ptext52 505C  
                             __ptext44 464A                               __ptext36 36D6  
                             __ptext28 5248                               __ptext61 5E5A  
                             __ptext53 5994                               __ptext45 3F20  
                             __ptext37 5662                               __ptext29 621C  
                             __ptext70 582C                               __ptext62 5908  
                             __ptext54 5724                               __ptext46 54A6  
                             __ptext38 52E4                               __ptext71 5EAA  
                             __ptext63 5E82                               __ptext55 5D92  
                             __ptext47 4A1A                               __ptext39 2AA2  
                             __ptext80 622C                               __ptext72 5ED2  
                             __ptext64 61DC                               __ptext56 5DBA  
                             __ptext48 5106                               __ptext81 6076  
                             __ptext73 5EFA                               __ptext65 6208  
                             __ptext57 55FE                               __ptext49 537C  
                             __ptext90 5CF0                               __ptext82 62CA  
                             __ptext74 6172                               __ptext66 51A8  
                             __ptext58 5DE2                               __ptext91 62D0  
                             __ptext83 623C                               __ptext75 552E  
                             __ptext67 61F2                               __ptext59 5E0A  
                             __ptext92 5F4C                               __ptext84 6098  
                             __ptext76 626A                               __ptext68 6156  
                             __ptext93 5C1A                               __ptext85 62CC  
                             __ptext77 6054                               __ptext69 5598  
                             __ptext94 5F74                               __ptext86 624C  
                             __ptext78 5878                               __ptext95 60DC  
                             __ptext87 60BA                               __ptext79 5F22  
                             __ptext96 5F9C                               __ptext88 62CE  
                             __ptext97 5C46                               __ptext89 62C4  
                             __ptext98 5FC4                               __ptext99 60FC  
                      _secs_II_message 4408               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_strncmp 0190  
                     _ringBufS_put_dma 505C                     __end_of_m_protocol 2AA2  
                        __size_of_ctoa 0088                          __size_of_main 0516  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005B                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 0008  
                            stoa@F1144 0060                     ??_DMA1_DMASCNT_ISR 005C  
                             _spi_link 00CD                               _wdtdelay 5782  
           __end_of_UART2_Transmit_ISR 5C72                               _vfprintf 52E4  
                    _UART1_is_rx_ready 62AE                            _UART1_Write 5A54  
 __end_of_INT1_DefaultInterruptHandler 62CE  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 62CC                            _UART2_Write 5A16  
                    _UART1_is_tx_ready 629E                        r_protocol@retry 005D  
                    t_protocol@requeue 002A                          ??_Default_ISR 005B  
                   __end_of_r_protocol 36D6                            _uart1RxHead 0037  
                          _uart1TxHead 003A                            _uart2RxHead 0031  
                          _uart1RxTail 0036                            _uart2TxHead 0034  
                          _uart1TxTail 0039                            _uart2RxTail 0030  
                          _uart2TxTail 0033                           _wait_lcd_set 62B6  
                   _EXT_INT_Initialize 582C   __end_of_TMR6_DefaultInterruptHandler 5994  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 594E  
                   __end_of_t_protocol 3F20   __end_of_ADCC_DefaultInterruptHandler 62D2  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 62D0  
                             intlevel2 0000                      _send_lcd_cmd_long 5D1A  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 52E4  
              __end_of_NCO1_Initialize 6172                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 62B6                             _UART1_Read 5AD0  
               __size_of_INT1_CallBack 0022                             _UART2_Read 5A92  
            __end_of_UART1_is_tx_ready 62A6                 __size_of_INT2_CallBack 0022  
                    _UART2_is_rx_ready 62A6                 _uart2TxBufferRemaining 0032  
                    _UART2_is_tx_ready 6296                       _send_lcd_cmd_dma 57DE  
                TMR5_ISR@CountCallBack 0026                __end_of_secs_II_message 464A  
     __end_of_INT1_SetInterruptHandler 5EFA              __size_of_UART1_Initialize 0064  
                      t_protocol@block 00E5                       ??_DMA1_DMAOR_ISR 005C  
             _UART1_TxInterruptHandler 000B                        t_protocol@retry 002B  
            __end_of_send_lcd_cmd_long 5D42                    __end_of_Default_ISR 62CA  
       __end_of_PIN_MANAGER_Initialize 5248                  __size_of_run_checksum 002C  
              _eaDogM_WriteStringAtPos 5BEE              __size_of_UART2_Initialize 005E  
